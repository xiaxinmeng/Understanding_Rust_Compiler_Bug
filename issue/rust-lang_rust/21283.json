{"url": "https://api.github.com/repos/rust-lang/rust/issues/21283", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/21283/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/21283/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/21283/events", "html_url": "https://github.com/rust-lang/rust/issues/21283", "id": 54653009, "node_id": "MDU6SXNzdWU1NDY1MzAwOQ==", "number": 21283, "title": "quote_expr! causes compile error when invoked twice on an ident nested in a macro invocation", "user": {"login": "lambda-fairy", "id": 1572323, "node_id": "MDQ6VXNlcjE1NzIzMjM=", "avatar_url": "https://avatars.githubusercontent.com/u/1572323?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lambda-fairy", "html_url": "https://github.com/lambda-fairy", "followers_url": "https://api.github.com/users/lambda-fairy/followers", "following_url": "https://api.github.com/users/lambda-fairy/following{/other_user}", "gists_url": "https://api.github.com/users/lambda-fairy/gists{/gist_id}", "starred_url": "https://api.github.com/users/lambda-fairy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lambda-fairy/subscriptions", "organizations_url": "https://api.github.com/users/lambda-fairy/orgs", "repos_url": "https://api.github.com/users/lambda-fairy/repos", "events_url": "https://api.github.com/users/lambda-fairy/events{/privacy}", "received_events_url": "https://api.github.com/users/lambda-fairy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-01-17T06:31:28Z", "updated_at": "2015-01-17T08:45:50Z", "closed_at": "2015-01-17T08:45:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Sorry about the long title. I couldn't find a better way to express the issue :)\n\nGiven the following syntax extension:\n\n``` rust\n#![crate_type = \"dylib\"]\n#![allow(unstable)]\n#![feature(plugin_registrar, quote)]\n\nextern crate syntax;\nextern crate rustc;\n\nuse syntax::ast::TokenTree;\nuse syntax::codemap::Span;\nuse syntax::ext::base::{DummyResult, ExtCtxt, MacExpr, MacResult};\nuse rustc::plugin::Registry;\n\nfn expand<'cx>(cx: &'cx mut ExtCtxt, sp: Span, args: &[TokenTree]) -> Box<MacResult + 'cx> {\n    match args {\n        [ref tt, ..] => {\n            let e = quote_expr!(cx, println!(\"{}\", $tt));\n            MacExpr::new(quote_expr!(cx, $e))\n        },\n        _ => DummyResult::any(sp),\n    }\n}\n\n#[plugin_registrar]\npub fn plugin_registrar(reg: &mut Registry) {\n    reg.register_macro(\"macro_test\", expand);\n}\n```\n\nand this test file:\n\n``` rust\n#![feature(plugin)]\n\n#[plugin] #[no_link] extern crate quote_fail;\n\n#[test]\nfn it_works() {\n    let a = \"hello\";\n    macro_test!(a);\n}\n```\n\nThe latter fails to compile with the following error:\n\n```\n<quote expansion>:1:27: 1:28 error: unresolved name `a`\n<quote expansion>:1 name_228,ctxt_0!(\"{}\" , a)\n                                              ^\nnote: in expansion of format_args!\n<std macros>:2:42: 2:75 note: expansion site\n<std macros>:1:1: 2:77 note: in expansion of println!\n<quote expansion>:1:1: 1:29 note: expansion site\n/home/chris/dev/quote_fail/tests/tests.rs:1:1: 9:1 note: in expansion of macro_test!\n/home/chris/dev/quote_fail/tests/tests.rs:8:5: 8:20 note: expansion site\nerror: aborting due to previous error\nCould not compile `quote_fail`.\n```\n\nThis error goes away if I do either of these things:\n- Remove the `println!` call, i.e. replace `println!(\"{}\", $tt)` with `$tt`\n- Call `quote_expr!` only once instead of twice, i.e. `MacExpr::new(e)`\n\nI'm using `rustc` commit `8903c21` built `2015-01-16` on Ubuntu 14.10 x86_64.\n", "closed_by": {"login": "lambda-fairy", "id": 1572323, "node_id": "MDQ6VXNlcjE1NzIzMjM=", "avatar_url": "https://avatars.githubusercontent.com/u/1572323?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lambda-fairy", "html_url": "https://github.com/lambda-fairy", "followers_url": "https://api.github.com/users/lambda-fairy/followers", "following_url": "https://api.github.com/users/lambda-fairy/following{/other_user}", "gists_url": "https://api.github.com/users/lambda-fairy/gists{/gist_id}", "starred_url": "https://api.github.com/users/lambda-fairy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lambda-fairy/subscriptions", "organizations_url": "https://api.github.com/users/lambda-fairy/orgs", "repos_url": "https://api.github.com/users/lambda-fairy/repos", "events_url": "https://api.github.com/users/lambda-fairy/events{/privacy}", "received_events_url": "https://api.github.com/users/lambda-fairy/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/21283/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/21283/timeline", "performed_via_github_app": null, "state_reason": "completed"}