{"url": "https://api.github.com/repos/rust-lang/rust/issues/112201", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/112201/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/112201/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/112201/events", "html_url": "https://github.com/rust-lang/rust/issues/112201", "id": 1737737942, "node_id": "I_kwDOAAsO6M5nk8bW", "number": 112201, "title": "ice: `TyKind::Error constructed but no error reported`", "user": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2023-06-02T08:46:53Z", "updated_at": "2023-06-02T08:53:52Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n-->\r\n\r\n### Code\r\n\r\n```Rust\r\npub fn compose(\r\n    f1: impl FnOnce(f64) -> f64 + Clone,\r\n    f2: impl FnOnce(f64) -> f64 + Clone,\r\n) -> impl FnOnce(f64) -> f64 + Clone {\r\n    move |x| f1(f2(x))\r\n}\r\n\r\nfn repeat_helper(\r\n    f: impl FnOnce(f64) -> f64 + Clone,\r\n    res: impl FnOnce(f64) -> f64 + Clone,\r\n    times: usize,\r\n) -> impl FnOnce(f64) -> f64 + Clone {\r\n    return res;\r\n    repeat_helper(f.clone(), compose(f, res), times - 1)\r\n}\r\n\r\nfn main() {}\r\n\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.72.0-nightly (d59363ad0 2023-06-01)\r\nbinary: rustc\r\ncommit-hash: d59363ad0b6391b7fc5bbb02c9ccf9300eef3753\r\ncommit-date: 2023-06-01\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.72.0-nightly\r\nLLVM version: 16.0.4\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nwarning: unreachable expression\r\n  --> treereduce.out:14:5\r\n   |\r\n13 |     return res;\r\n   |     ---------- any code following this expression is unreachable\r\n14 |     repeat_helper(f.clone(), compose(f, res), times - 1)\r\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unreachable expression\r\n   |\r\n   = note: `#[warn(unreachable_code)]` on by default\r\n\r\nwarning: unused variable: `f`\r\n --> treereduce.out:9:5\r\n  |\r\n9 |     f: impl FnOnce(f64) -> f64 + Clone,\r\n  |     ^ help: if this is intentional, prefix it with an underscore: `_f`\r\n  |\r\n  = note: `#[warn(unused_variables)]` on by default\r\n\r\nwarning: unused variable: `times`\r\n  --> treereduce.out:11:5\r\n   |\r\n11 |     times: usize,\r\n   |     ^^^^^ help: if this is intentional, prefix it with an underscore: `_times`\r\n\r\nwarning: function `repeat_helper` is never used\r\n --> treereduce.out:8:4\r\n  |\r\n8 | fn repeat_helper(\r\n  |    ^^^^^^^^^^^^^\r\n  |\r\n  = note: `#[warn(dead_code)]` on by default\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nerror: internal compiler error: no errors encountered even though `delay_span_bug` issued\r\n\r\nerror: internal compiler error: TyKind::Error constructed but no error reported\r\n  |\r\n  = note: delayed at compiler/rustc_middle/src/ty/opaque_types.rs:189:41\r\n             0: <rustc_errors::HandlerInner>::emit_diagnostic\r\n             1: <rustc_errors::Handler>::delay_span_bug::<rustc_span::span_encoding::Span, &str>\r\n             2: <rustc_middle::ty::context::TyCtxt>::ty_error_misc\r\n             3: <rustc_middle::ty::opaque_types::ReverseMapper as rustc_type_ir::fold::TypeFolder<rustc_middle::ty::context::TyCtxt>>::fold_ty\r\n             4: <rustc_middle::ty::OpaqueHiddenType>::remap_generic_params_to_declaration_params\r\n             5: rustc_hir_analysis::collect::type_of::opaque::find_opaque_ty_constraints_for_rpit\r\n             6: rustc_hir_analysis::collect::type_of::type_of\r\n             7: rustc_query_impl::plumbing::__rust_begin_short_backtrace::<rustc_query_impl::query_impl::type_of::dynamic_query::{closure#2}::{closure#0}, rustc_middle::query::erase::Erased<[u8; 8]>>\r\n             8: <rustc_query_impl::query_impl::type_of::dynamic_query::{closure#2} as core::ops::function::FnOnce<(rustc_middle::ty::context::TyCtxt, rustc_span::def_id::DefId)>>::call_once\r\n             9: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::DynamicConfig<rustc_query_system::query::caches::DefaultCache<rustc_span::def_id::DefId, rustc_middle::query::erase::Erased<[u8; 8]>>, false, false, false>, rustc_query_impl::plumbing::QueryCtxt, false>\r\n            10: rustc_query_impl::query_impl::type_of::get_query_non_incr::__rust_end_short_backtrace\r\n            11: rustc_middle::query::plumbing::query_get_at::<rustc_query_system::query::caches::DefaultCache<rustc_span::def_id::DefId, rustc_middle::query::erase::Erased<[u8; 8]>>>\r\n            12: rustc_hir_analysis::check::check::check_mod_item_types\r\n            13: rustc_query_impl::plumbing::__rust_begin_short_backtrace::<rustc_query_impl::query_impl::check_mod_item_types::dynamic_query::{closure#2}::{closure#0}, rustc_middle::query::erase::Erased<[u8; 0]>>\r\n            14: <rustc_query_impl::query_impl::check_mod_item_types::dynamic_query::{closure#2} as core::ops::function::FnOnce<(rustc_middle::ty::context::TyCtxt, rustc_span::def_id::LocalDefId)>>::call_once\r\n            15: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::DynamicConfig<rustc_query_system::query::caches::VecCache<rustc_span::def_id::LocalDefId, rustc_middle::query::erase::Erased<[u8; 0]>>, false, false, false>, rustc_query_impl::plumbing::QueryCtxt, false>\r\n            16: rustc_query_impl::query_impl::check_mod_item_types::get_query_non_incr::__rust_end_short_backtrace\r\n            17: <rustc_middle::hir::map::Map>::for_each_module::<rustc_hir_analysis::check_crate::{closure#6}::{closure#0}>\r\n            18: <rustc_session::session::Session>::time::<(), rustc_hir_analysis::check_crate::{closure#6}>\r\n            19: rustc_hir_analysis::check_crate\r\n            20: rustc_interface::passes::analysis\r\n            21: rustc_query_impl::plumbing::__rust_begin_short_backtrace::<rustc_query_impl::query_impl::analysis::dynamic_query::{closure#2}::{closure#0}, rustc_middle::query::erase::Erased<[u8; 1]>>\r\n            22: <rustc_query_impl::query_impl::analysis::dynamic_query::{closure#2} as core::ops::function::FnOnce<(rustc_middle::ty::context::TyCtxt, ())>>::call_once\r\n            23: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::DynamicConfig<rustc_query_system::query::caches::SingleCache<rustc_middle::query::erase::Erased<[u8; 1]>>, false, false, false>, rustc_query_impl::plumbing::QueryCtxt, false>\r\n            24: rustc_query_impl::query_impl::analysis::get_query_non_incr::__rust_end_short_backtrace\r\n            25: <rustc_middle::ty::context::GlobalCtxt>::enter::<rustc_driver_impl::run_compiler::{closure#1}::{closure#2}::{closure#4}, core::result::Result<(), rustc_span::ErrorGuaranteed>>\r\n            26: <rustc_interface::interface::Compiler>::enter::<rustc_driver_impl::run_compiler::{closure#1}::{closure#2}, core::result::Result<core::option::Option<rustc_interface::queries::Linker>, rustc_span::ErrorGuaranteed>>\r\n            27: <scoped_tls::ScopedKey<rustc_span::SessionGlobals>>::set::<rustc_interface::interface::run_compiler<core::result::Result<(), rustc_span::ErrorGuaranteed>, rustc_driver_impl::run_compiler::{closure#1}>::{closure#0}, core::result::Result<(), rustc_span::ErrorGuaranteed>>\r\n            28: std::sys_common::backtrace::__rust_begin_short_backtrace::<rustc_interface::util::run_in_thread_pool_with_globals<rustc_interface::interface::run_compiler<core::result::Result<(), rustc_span::ErrorGuaranteed>, rustc_driver_impl::run_compiler::{closure#1}>::{closure#0}, core::result::Result<(), rustc_span::ErrorGuaranteed>>::{closure#0}::{closure#0}, core::result::Result<(), rustc_span::ErrorGuaranteed>>\r\n            29: <<std::thread::Builder>::spawn_unchecked_<rustc_interface::util::run_in_thread_pool_with_globals<rustc_interface::interface::run_compiler<core::result::Result<(), rustc_span::ErrorGuaranteed>, rustc_driver_impl::run_compiler::{closure#1}>::{closure#0}, core::result::Result<(), rustc_span::ErrorGuaranteed>>::{closure#0}::{closure#0}, core::result::Result<(), rustc_span::ErrorGuaranteed>>::{closure#1} as core::ops::function::FnOnce<()>>::call_once::{shim:vtable#0}\r\n            30: <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once\r\n                       at /rustc/d59363ad0b6391b7fc5bbb02c9ccf9300eef3753/library/alloc/src/boxed.rs:1985:9\r\n            31: <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once\r\n                       at /rustc/d59363ad0b6391b7fc5bbb02c9ccf9300eef3753/library/alloc/src/boxed.rs:1985:9\r\n            32: std::sys::unix::thread::Thread::new::thread_start\r\n                       at /rustc/d59363ad0b6391b7fc5bbb02c9ccf9300eef3753/library/std/src/sys/unix/thread.rs:108:17\r\n            33: <unknown>\r\n            34: <unknown>\r\n\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.72.0-nightly (d59363ad0 2023-06-01) running on x86_64-unknown-linux-gnu\r\n\r\nquery stack during panic:\r\nend of query stack\r\nerror: aborting due to 2 previous errors; 4 warnings emitted\r\n```\r\n\r\n</p>\r\n</details>\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/112201/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/112201/timeline", "performed_via_github_app": null, "state_reason": null}