{"url": "https://api.github.com/repos/rust-lang/rust/issues/57935", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/57935/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/57935/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/57935/events", "html_url": "https://github.com/rust-lang/rust/issues/57935", "id": 403576523, "node_id": "MDU6SXNzdWU0MDM1NzY1MjM=", "number": 57935, "title": "branchless binary search is not branchless since rust 1.25", "user": {"login": "fulmicoton", "id": 1021506, "node_id": "MDQ6VXNlcjEwMjE1MDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1021506?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fulmicoton", "html_url": "https://github.com/fulmicoton", "followers_url": "https://api.github.com/users/fulmicoton/followers", "following_url": "https://api.github.com/users/fulmicoton/following{/other_user}", "gists_url": "https://api.github.com/users/fulmicoton/gists{/gist_id}", "starred_url": "https://api.github.com/users/fulmicoton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fulmicoton/subscriptions", "organizations_url": "https://api.github.com/users/fulmicoton/orgs", "repos_url": "https://api.github.com/users/fulmicoton/repos", "events_url": "https://api.github.com/users/fulmicoton/events{/privacy}", "received_events_url": "https://api.github.com/users/fulmicoton/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-27T17:49:05Z", "updated_at": "2019-01-27T19:09:11Z", "closed_at": "2019-01-27T19:09:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "The std binary search implementation is supposed to rely on a branchless implementation.\r\nThe implementation rely on the idea that the idiom \r\n\r\n```rust\r\n   let base = if cond { base } else { something_else }; \r\n```\r\n\r\ncompiles as a conditional move.\r\n\r\nUntil rust < 1.25, rustc was very aggressively relying on conditional moves to avoid branches.\r\nWith rust >= 1..25, rustc seem to consistently compile the expression above with conditional jump.\r\n\r\nI haven't benchmarked it, but this should have resulted in a performance regression.\r\n\r\n## Example code\r\n\r\n```rust\r\npub fn binary_search(arr: &[u32], mut base: usize, mut len: usize, target: u32) -> usize {\r\n    while len > 1 {\r\n        let half = len / 2;\r\n        let mid = base + half;\r\n        let pivot = *unsafe { arr.get_unchecked(mid) };\r\n        let cmp = pivot>target;\r\n        base = if cmp { base } else { mid };\r\n        len -= half;\r\n    }\r\n    base + ((*unsafe { arr.get_unchecked(base) } < target) as usize)\r\n}\r\n```\r\n\r\n\r\n\r\n##  Assembly on 1.24\r\n[Godbolt](https://godbolt.org/z/mv8GzG)\r\n\r\n```asm\r\nexample::binary_search:\r\n        push    rbp\r\n        mov     rbp, rsp\r\n        cmp     rcx, 2\r\n        jb      .LBB0_1\r\n.LBB0_3:\r\n        mov     rsi, rcx\r\n        shr     rsi\r\n        lea     rax, [rdx + rsi]\r\n        cmp     dword ptr [rdi + 4*rax], r8d\r\n        cmova   rax, rdx\r\n        sub     rcx, rsi\r\n        cmp     rcx, 1\r\n        mov     rdx, rax\r\n        ja      .LBB0_3\r\n        jmp     .LBB0_2\r\n.LBB0_1:\r\n        mov     rax, rdx\r\n.LBB0_2:\r\n        cmp     dword ptr [rdi + 4*rax], r8d\r\n        adc     rax, 0\r\n        pop     rbp\r\n        ret\r\n```\r\n\r\n\r\n\r\n\r\n##  Assembly on 1.25\r\n[Godbolt](https://godbolt.org/z/ToXERW)\r\n\r\n```asm\r\nexample::binary_search:\r\n        push    rbp\r\n        mov     rbp, rsp\r\n        cmp     rcx, 2\r\n        jb      .LBB0_4\r\n.LBB0_1:\r\n        mov     rax, rcx\r\n        shr     rax\r\n        lea     rsi, [rdx + rax]\r\n        cmp     dword ptr [rdi + 4*rsi], r8d\r\n        ja      .LBB0_3\r\n        mov     rdx, rsi\r\n.LBB0_3:\r\n        sub     rcx, rax\r\n        cmp     rcx, 1\r\n        ja      .LBB0_1\r\n.LBB0_4:\r\n        cmp     dword ptr [rdi + 4*rdx], r8d\r\n        adc     rdx, 0\r\n        mov     rax, rdx\r\n        pop     rbp\r\n        ret\r\n```", "closed_by": {"login": "nikic", "id": 216080, "node_id": "MDQ6VXNlcjIxNjA4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/216080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikic", "html_url": "https://github.com/nikic", "followers_url": "https://api.github.com/users/nikic/followers", "following_url": "https://api.github.com/users/nikic/following{/other_user}", "gists_url": "https://api.github.com/users/nikic/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikic/subscriptions", "organizations_url": "https://api.github.com/users/nikic/orgs", "repos_url": "https://api.github.com/users/nikic/repos", "events_url": "https://api.github.com/users/nikic/events{/privacy}", "received_events_url": "https://api.github.com/users/nikic/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/57935/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/57935/timeline", "performed_via_github_app": null, "state_reason": "completed"}