{"url": "https://api.github.com/repos/rust-lang/rust/issues/58078", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/58078/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/58078/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/58078/events", "html_url": "https://github.com/rust-lang/rust/issues/58078", "id": 405983980, "node_id": "MDU6SXNzdWU0MDU5ODM5ODA=", "number": 58078, "title": "Expand implicit conversion of functions to function pointers", "user": {"login": "Thomasdezeeuw", "id": 3159064, "node_id": "MDQ6VXNlcjMxNTkwNjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3159064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Thomasdezeeuw", "html_url": "https://github.com/Thomasdezeeuw", "followers_url": "https://api.github.com/users/Thomasdezeeuw/followers", "following_url": "https://api.github.com/users/Thomasdezeeuw/following{/other_user}", "gists_url": "https://api.github.com/users/Thomasdezeeuw/gists{/gist_id}", "starred_url": "https://api.github.com/users/Thomasdezeeuw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Thomasdezeeuw/subscriptions", "organizations_url": "https://api.github.com/users/Thomasdezeeuw/orgs", "repos_url": "https://api.github.com/users/Thomasdezeeuw/repos", "events_url": "https://api.github.com/users/Thomasdezeeuw/events{/privacy}", "received_events_url": "https://api.github.com/users/Thomasdezeeuw/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}, {"id": 800802916, "node_id": "MDU6TGFiZWw4MDA4MDI5MTY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-coercions", "name": "A-coercions", "color": "f7e101", "default": false, "description": "Area: implicit and explicit `expr as Type` coercions"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-02-02T13:39:33Z", "updated_at": "2022-05-31T07:53:36Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "(I'm not sure if this requires a RFC, if so please let me know.)\r\n\r\nAllow implicit conversion of functions to function pointers when trait is implemented on a function pointer. The code below shows the problem I'm having.\r\n\r\nCalling `accepts_fn` works fine today, however calling `accepts_my_fn` doesn't work, even though the `MyFn` trait is implementation for function pointers. To make it work a explicit conversion (`as fn(_) -> _`) is required. This seems a bit surprising that in one instance a function in implicitly converted and another instance it is not.\r\n\r\n```rust\r\n\u2028\u2028\u2028fn add1(n: usize) -> usize {\r\n    n + 1\r\n}\r\n\r\nfn accepts_fn(f: fn(usize) -> usize) -> usize {\r\n    f(1)\r\n}\r\n\r\ntrait MyFn {\r\n    fn call(&mut self, n: usize) -> usize;\r\n}\r\n\r\nimpl MyFn for fn(usize) -> usize {\r\n    fn call(&mut self, n: usize) -> usize {\r\n        (self)(n)\r\n    }\r\n}\r\n\r\nfn accepts_my_fn<F: MyFn>(mut f: F) -> usize {\r\n    f.call(2)\r\n}\r\n\r\nfn main() {\r\n    let n = accepts_fn(add1);\r\n    println!(\"n: {}\", n);\r\n    \r\n    // This doesn't work.\r\n    //let n = accepts_my_fn(add1);\r\n    \r\n    // We need explicit conversion.\r\n    let n = accepts_my_fn(add1 as fn(_) -> _);\r\n    println!(\"n: {}\", n);\r\n}\r\n```\r\n\r\n([playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=04a590eb70e99a78b14f2368c2bb7a41))", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/58078/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/58078/timeline", "performed_via_github_app": null, "state_reason": null}