{"url": "https://api.github.com/repos/rust-lang/rust/issues/82380", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/82380/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/82380/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/82380/events", "html_url": "https://github.com/rust-lang/rust/issues/82380", "id": 812980293, "node_id": "MDU6SXNzdWU4MTI5ODAyOTM=", "number": 82380, "title": "[AVR] Shift left `<<` doesn't work correctly on >= 32-bit integers on a 16-bit platform", "user": {"login": "jacobmischka", "id": 3939997, "node_id": "MDQ6VXNlcjM5Mzk5OTc=", "avatar_url": "https://avatars.githubusercontent.com/u/3939997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jacobmischka", "html_url": "https://github.com/jacobmischka", "followers_url": "https://api.github.com/users/jacobmischka/followers", "following_url": "https://api.github.com/users/jacobmischka/following{/other_user}", "gists_url": "https://api.github.com/users/jacobmischka/gists{/gist_id}", "starred_url": "https://api.github.com/users/jacobmischka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jacobmischka/subscriptions", "organizations_url": "https://api.github.com/users/jacobmischka/orgs", "repos_url": "https://api.github.com/users/jacobmischka/repos", "events_url": "https://api.github.com/users/jacobmischka/events{/privacy}", "received_events_url": "https://api.github.com/users/jacobmischka/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1884641928, "node_id": "MDU6TGFiZWwxODg0NjQxOTI4", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-AVR", "name": "O-AVR", "color": "6e6ec0", "default": false, "description": "Target: AVR processors (ATtiny, ATmega, etc.)"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2021-02-21T23:28:08Z", "updated_at": "2023-04-05T17:35:20Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "Shift left seems to not behave correctly, but doing the same resulting operation using multiplication does work as a workaround. This occurs both when using the `<<` operator and when using `overflowing_shl`. This was tested on an Arduino Nano (actually an Elegoo knockoff with a CH340, [link](https://smile.amazon.com/gp/product/B0713XK923/ref=ppx_yo_dt_b_asin_title_o04_s01?ie=UTF8&psc=1)).\r\n\r\nI tried this code:\r\n\r\n```rust\r\n#![no_std]\r\n#![no_main]\r\n\r\nextern crate panic_halt;\r\n\r\nuse arduino_uno::prelude::*;\r\nuse ufmt::uwriteln;\r\n\r\n#[arduino_uno::entry]\r\nfn main() -> ! {\r\n    let dp = arduino_uno::Peripherals::take().unwrap();\r\n\r\n    let mut pins = arduino_uno::Pins::new(dp.PORTB, dp.PORTC, dp.PORTD);\r\n    let mut serial = arduino_uno::Serial::new(\r\n        dp.USART0,\r\n        pins.d0,\r\n        pins.d1.into_output(&mut pins.ddr),\r\n        57600.into_baudrate(),\r\n    );\r\n\r\n    for i in 0..64 {\r\n        uwriteln!(&mut serial, \"1 << {}\\r\", i).void_unwrap();\r\n\r\n        let shl: u64 = 1u64 << i;\r\n        uwriteln!(&mut serial, \"Shift: {:?}\\r\", shl.to_le_bytes()).void_unwrap();\r\n\r\n        let mul: u64 = 1u64 * 2u64.pow(i as u32);\r\n        uwriteln!(&mut serial, \"Mul and pow: {:?}\\r\\n\", mul.to_le_bytes()).void_unwrap();\r\n    }\r\n\r\n    loop {}\r\n}\r\n```\r\n\r\n<details>\r\n<summary>Output:</summary>\r\n\r\n<pre>\r\n1 << 0\r\nShift: [1, 0, 1, 0, 1, 0, 0, 0]\r\nMul and pow: [1, 0, 0, 0, 0, 0, 0, 0]\r\n\r\n1 << 1\r\nShift: [1, 0, 1, 0, 1, 0, 0, 0]\r\nMul and pow: [2, 0, 0, 0, 0, 0, 0, 0]\r\n\r\n1 << 2\r\nShift: [1, 0, 1, 0, 1, 0, 0, 0]\r\nMul and pow: [4, 0, 0, 0, 0, 0, 0, 0]\r\n\r\n1 << 3\r\nShift: [1, 0, 1, 0, 1, 0, 0, 0]\r\nMul and pow: [8, 0, 0, 0, 0, 0, 0, 0]\r\n\r\n1 << 4\r\nShift: [1, 0, 1, 0, 1, 0, 0, 0]\r\nMul and pow: [16, 0, 0, 0, 0, 0, 0, 0]\r\n\r\n1 << 5\r\nShift: [1, 0, 1, 0, 1, 0, 0, 0]\r\nMul and pow: [32, 0, 0, 0, 0, 0, 0, 0]\r\n\r\n1 << 6\r\nShift: [1, 0, 1, 0, 1, 0, 0, 0]\r\nMul and pow: [64, 0, 0, 0, 0, 0, 0, 0]\r\n\r\n1 << 7\r\nShift: [1, 0, 1, 0, 1, 0, 0, 0]\r\nMul and pow: [128, 0, 0, 0, 0, 0, 0, 0]\r\n\r\n1 << 8\r\nShift: [1, 0, 1, 0, 1, 0, 0, 0]\r\nMul and pow: [0, 1, 0, 0, 0, 0, 0, 0]\r\n\r\n1 << 9\r\nShift: [1, 0, 1, 0, 1, 0, 0, 0]\r\nMul and pow: [0, 2, 0, 0, 0, 0, 0, 0]\r\n\r\n1 << 10\r\nShift: [1, 0, 1, 0, 1, 0, 0, 0]\r\nMul and pow: [0, 4, 0, 0, 0, 0, 0, 0]\r\n\r\n1 << 11\r\nShift: [1, 0, 1, 0, 1, 0, 0, 0]\r\nMul and pow: [0, 8, 0, 0, 0, 0, 0, 0]\r\n\r\n1 << 12\r\nShift: [1, 0, 1, 0, 1, 0, 0, 0]\r\nMul and pow: [0, 16, 0, 0, 0, 0, 0, 0]\r\n\r\n1 << 13\r\nShift: [1, 0, 1, 0, 1, 0, 0, 0]\r\nMul and pow: [0, 32, 0, 0, 0, 0, 0, 0]\r\n\r\n1 << 14\r\nShift: [1, 0, 1, 0, 1, 0, 0, 0]\r\nMul and pow: [0, 64, 0, 0, 0, 0, 0, 0]\r\n\r\n...\r\n\r\n1 << 51\r\nShift: [1, 0, 1, 0, 1, 0, 0, 0]\r\nMul and pow: [0, 0, 0, 0, 0, 0, 8, 0]\r\n\r\n1 << 52\r\nShift: [1, 0, 1, 0, 1, 0, 0, 0]\r\nMul and pow: [0, 0, 0, 0, 0, 0, 16, 0]\r\n\r\n1 << 53\r\nShift: [1, 0, 1, 0, 1, 0, 0, 0]\r\nMul and pow: [0, 0, 0, 0, 0, 0, 32, 0]\r\n\r\n1 << 54\r\nShift: [1, 0, 1, 0, 1, 0, 0, 0]\r\nMul and pow: [0, 0, 0, 0, 0, 0, 64, 0]\r\n\r\n1 << 55\r\nShift: [1, 0, 1, 0, 1, 0, 0, 0]\r\nMul and pow: [0, 0, 0, 0, 0, 0, 128, 0]\r\n\r\n1 << 56\r\nShift: [1, 0, 1, 0, 1, 0, 0, 0]\r\nMul and pow: [0, 0, 0, 0, 0, 0, 0, 1]\r\n\r\n1 << 57\r\nShift: [1, 0, 1, 0, 1, 0, 0, 0]\r\nMul and pow: [0, 0, 0, 0, 0, 0, 0, 2]\r\n\r\n1 << 58\r\nShift: [1, 0, 1, 0, 1, 0, 0, 0]\r\nMul and pow: [0, 0, 0, 0, 0, 0, 0, 4]\r\n\r\n1 << 59\r\nShift: [1, 0, 1, 0, 1, 0, 0, 0]\r\nMul and pow: [0, 0, 0, 0, 0, 0, 0, 8]\r\n\r\n1 << 60\r\nShift: [1, 0, 1, 0, 1, 0, 0, 0]\r\nMul and pow: [0, 0, 0, 0, 0, 0, 0, 16]\r\n\r\n1 << 61\r\nShift: [1, 0, 1, 0, 1, 0, 0, 0]\r\nMul and pow: [0, 0, 0, 0, 0, 0, 0, 32]\r\n\r\n1 << 62\r\nShift: [1, 0, 1, 0, 1, 0, 0, 0]\r\nMul and pow: [0, 0, 0, 0, 0, 0, 0, 64]\r\n\r\n1 << 63\r\nShift: [1, 0, 1, 0, 1, 0, 0, 0]\r\nMul and pow: [0, 0, 0, 0, 0, 0, 0, 128]\r\n</pre>\r\n</details>\r\n\r\n<details>\r\n<summary>Same code, except `u32` instead of `u64`</summary>\r\n<pre>\r\n1 << 0\r\nShift: [0, 128, 0, 0]\r\nMul and pow: [1, 0, 0, 0]\r\n\r\n1 << 1\r\nShift: [0, 128, 0, 0]\r\nMul and pow: [2, 0, 0, 0]\r\n\r\n1 << 2\r\nShift: [0, 128, 0, 0]\r\nMul and pow: [4, 0, 0, 0]\r\n\r\n1 << 3\r\nShift: [0, 128, 0, 0]\r\nMul and pow: [8, 0, 0, 0]\r\n\r\n1 << 4\r\nShift: [0, 128, 0, 0]\r\nMul and pow: [16, 0, 0, 0]\r\n\r\n1 << 5\r\nShift: [0, 128, 0, 0]\r\nMul and pow: [32, 0, 0, 0]\r\n\r\n1 << 6\r\nShift: [0, 128, 0, 0]\r\nMul and pow: [64, 0, 0, 0]\r\n\r\n1 << 7\r\nShift: [0, 128, 0, 0]\r\nMul and pow: [128, 0, 0, 0]\r\n\r\n1 << 8\r\nShift: [0, 128, 0, 0]\r\nMul and pow: [0, 1, 0, 0]\r\n\r\n1 << 9\r\nShift: [0, 128, 0, 0]\r\nMul and pow: [0, 2, 0, 0]\r\n\r\n1 << 10\r\nShift: [0, 128, 0, 0]\r\nMul and pow: [0, 4, 0, 0]\r\n\r\n1 << 11\r\nShift: [0, 128, 0, 0]\r\nMul and pow: [0, 8, 0, 0]\r\n\r\n1 << 12\r\nShift: [0, 128, 0, 0]\r\nMul and pow: [0, 16, 0, 0]\r\n\r\n1 << 13\r\nShift: [0, 128, 0, 0]\r\nMul and pow: [0, 32, 0, 0]\r\n\r\n1 << 14\r\nShift: [0, 128, 0, 0]\r\nMul and pow: [0, 64, 0, 0]\r\n\r\n1 << 15\r\nShift: [0, 128, 0, 0]\r\nMul and pow: [0, 128, 0, 0]\r\n\r\n1 << 16\r\nShift: [0, 128, 0, 0]\r\nMul and pow: [0, 0, 1, 0]\r\n\r\n1 << 17\r\nShift: [0, 128, 0, 0]\r\nMul and pow: [0, 0, 2, 0]\r\n\r\n1 << 18\r\nShift: [0, 128, 0, 0]\r\nMul and pow: [0, 0, 4, 0]\r\n\r\n1 << 19\r\nShift: [0, 128, 0, 0]\r\nMul and pow: [0, 0, 8, 0]\r\n\r\n1 << 20\r\nShift: [0, 128, 0, 0]\r\nMul and pow: [0, 0, 16, 0]\r\n\r\n1 << 21\r\nShift: [0, 128, 0, 0]\r\nMul and pow: [0, 0, 32, 0]\r\n\r\n1 << 22\r\nShift: [0, 128, 0, 0]\r\nMul and pow: [0, 0, 64, 0]\r\n\r\n1 << 23\r\nShift: [0, 128, 0, 0]\r\nMul and pow: [0, 0, 128, 0]\r\n\r\n1 << 24\r\nShift: [0, 128, 0, 0]\r\nMul and pow: [0, 0, 0, 1]\r\n\r\n1 << 25\r\nShift: [0, 128, 0, 0]\r\nMul and pow: [0, 0, 0, 2]\r\n\r\n1 << 26\r\nShift: [0, 128, 0, 0]\r\nMul and pow: [0, 0, 0, 4]\r\n\r\n1 << 27\r\nShift: [0, 128, 0, 0]\r\nMul and pow: [0, 0, 0, 8]\r\n\r\n1 << 28\r\nShift: [0, 128, 0, 0]\r\nMul and pow: [0, 0, 0, 16]\r\n\r\n1 << 29\r\nShift: [0, 128, 0, 0]\r\nMul and pow: [0, 0, 0, 32]\r\n\r\n1 << 30\r\nShift: [0, 128, 0, 0]\r\nMul and pow: [0, 0, 0, 64]\r\n\r\n1 << 31\r\nShift: [0, 128, 0, 0]\r\nMul and pow: [0, 0, 0, 128]\r\n</pre>\r\n</details>\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.51.0-nightly (c2de47a9a 2021-01-06)\r\nbinary: rustc\r\ncommit-hash: c2de47a9aa4c9812884f341f1852e9c9610f5f7a\r\ncommit-date: 2021-01-06\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.51.0-nightly\r\n\r\n```\r\n\r\nThis might be related to #82242. As in that issue, I am using this version of nightly because it's the latest that supports AVR, and it must be built using `--release`.\r\n\r\nFull reproduction repository: https://github.com/jacobmischka/rust-avr-shl\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/82380/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/82380/timeline", "performed_via_github_app": null, "state_reason": null}