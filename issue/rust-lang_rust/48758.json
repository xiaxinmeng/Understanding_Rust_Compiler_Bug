{"url": "https://api.github.com/repos/rust-lang/rust/issues/48758", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/48758/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/48758/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/48758/events", "html_url": "https://github.com/rust-lang/rust/issues/48758", "id": 302489012, "node_id": "MDU6SXNzdWUzMDI0ODkwMTI=", "number": 48758, "title": "Enum variants completely shadow inherent associated functions.", "user": {"login": "leoyvens", "id": 9885558, "node_id": "MDQ6VXNlcjk4ODU1NTg=", "avatar_url": "https://avatars.githubusercontent.com/u/9885558?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leoyvens", "html_url": "https://github.com/leoyvens", "followers_url": "https://api.github.com/users/leoyvens/followers", "following_url": "https://api.github.com/users/leoyvens/following{/other_user}", "gists_url": "https://api.github.com/users/leoyvens/gists{/gist_id}", "starred_url": "https://api.github.com/users/leoyvens/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leoyvens/subscriptions", "organizations_url": "https://api.github.com/users/leoyvens/orgs", "repos_url": "https://api.github.com/users/leoyvens/repos", "events_url": "https://api.github.com/users/leoyvens/events{/privacy}", "received_events_url": "https://api.github.com/users/leoyvens/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2018-03-05T22:26:07Z", "updated_at": "2021-06-21T18:37:47Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Consider the code below:\r\n```rust\r\nenum Foo { Bar(i32) }\r\n\r\nimpl Foo {\r\n    fn Bar(x: i32) -> Foo { \r\n        println!(\"I'm uncallable\"); \r\n        Foo::Bar(x) \r\n    }\r\n}\r\n\r\nfn main() {\r\n    Foo::Bar(0); // Variant constructor.\r\n   <Foo>::Bar(0); // Inherent function.\r\n}\r\n```\r\nIt compiles successfully and terminates with no output. There is an ambiguity between the variant and the associated function, <strike>though it seems we always prefer the variant, making the associated function uncallable</strike>. Having an inherent associated function with the same name as a variant should be an error.\r\n\r\nEdit: @petrochenkov points out that it's not actually uncallable, you can call it with `<Foo>::Bar(0)`. A deny-by-default lint then perhaps?", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/48758/reactions", "total_count": 3, "+1": 1, "-1": 0, "laugh": 2, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/48758/timeline", "performed_via_github_app": null, "state_reason": null}