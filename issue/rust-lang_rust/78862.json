{"url": "https://api.github.com/repos/rust-lang/rust/issues/78862", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/78862/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/78862/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/78862/events", "html_url": "https://github.com/rust-lang/rust/issues/78862", "id": 738337266, "node_id": "MDU6SXNzdWU3MzgzMzcyNjY=", "number": 78862, "title": "Compiler suggests #[derive((DeriveMacro).try_into().unwrap())]", "user": {"login": "msrd0", "id": 7853372, "node_id": "MDQ6VXNlcjc4NTMzNzI=", "avatar_url": "https://avatars.githubusercontent.com/u/7853372?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msrd0", "html_url": "https://github.com/msrd0", "followers_url": "https://api.github.com/users/msrd0/followers", "following_url": "https://api.github.com/users/msrd0/following{/other_user}", "gists_url": "https://api.github.com/users/msrd0/gists{/gist_id}", "starred_url": "https://api.github.com/users/msrd0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msrd0/subscriptions", "organizations_url": "https://api.github.com/users/msrd0/orgs", "repos_url": "https://api.github.com/users/msrd0/repos", "events_url": "https://api.github.com/users/msrd0/events{/privacy}", "received_events_url": "https://api.github.com/users/msrd0/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1183099971, "node_id": "MDU6TGFiZWwxMTgzMDk5OTcx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-suggestion-diagnostics", "name": "A-suggestion-diagnostics", "color": "f7e101", "default": false, "description": "Area: suggestions generated by the compiler applied by cargo fix"}, {"id": 1596299768, "node_id": "MDU6TGFiZWwxNTk2Mjk5NzY4", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-invalid-suggestion", "name": "D-invalid-suggestion", "color": "c9f7a3", "default": false, "description": "A structured suggestion resulting in incorrect code"}, {"id": 2079070889, "node_id": "MDU6TGFiZWwyMDc5MDcwODg5", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-proc-macros", "name": "A-proc-macros", "color": "f7e101", "default": false, "description": "Area: Procedural macros"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-11-07T23:33:40Z", "updated_at": "2021-01-12T07:36:08Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "Today I encountered a rather unhelpful suggestion from the compiler (1.47.0):\r\n\r\n```\r\nerror[E0308]: mismatched types                                                                                                                                                                                                                                               \r\n --> src/lib.rs:3:10                                                                                                                                                                                                                              \r\n  |                                                                                                                                                                                                                                                                          \r\n3 | #[derive(DeriveMacro)]                                                                                                                                                                                                                                                      \r\n  |          ^^^^^^^^^^^ expected `usize`, found `i32`                                                                                                                                                                                                                          \r\n  |                                                                                                                                                                                                                                                                          \r\n  = note: this error originates in a derive macro (in Nightly builds, run with -Z macro-backtrace for more info)                                                                                                                                                             \r\nhelp: you can convert an `i32` to `usize` and panic if the converted value wouldn't fit                                                                                                                                                                                      \r\n  |                                                                                                                                                                                                                                                                          \r\n3 | #[derive((DeriveMacro).try_into().unwrap())]                                                                                                                                                                                                                                \r\n  |   \r\n```\r\n\r\nThe code emited from the derive macro contains something along the lines of `let value: usize = -1 as i32`.\r\n\r\nApplying the suggestion, however, doesn't really help (almost as if I had to fix the problem in the derive macro):\r\n\r\n```\r\nerror: malformed `derive` attribute input\r\n --> src/lib.rs:3:1\r\n  |\r\n3 | #[derive((DeriveMacro).try_into().unwrap())]\r\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: missing traits to be derived: `#[derive(Trait1, Trait2, ...)]`\r\n```\r\n\r\nI believe the compiler should only emit that suggestion if the code it applies to is actually an expression of type `i32`.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/78862/reactions", "total_count": 5, "+1": 0, "-1": 0, "laugh": 5, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/78862/timeline", "performed_via_github_app": null, "state_reason": null}