{"url": "https://api.github.com/repos/rust-lang/rust/issues/28271", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/28271/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/28271/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/28271/events", "html_url": "https://github.com/rust-lang/rust/issues/28271", "id": 105097702, "node_id": "MDU6SXNzdWUxMDUwOTc3MDI=", "number": 28271, "title": "Cannot implement trait for generic struct where types are also generic", "user": {"login": "fuchsnj", "id": 6706944, "node_id": "MDQ6VXNlcjY3MDY5NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6706944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fuchsnj", "html_url": "https://github.com/fuchsnj", "followers_url": "https://api.github.com/users/fuchsnj/followers", "following_url": "https://api.github.com/users/fuchsnj/following{/other_user}", "gists_url": "https://api.github.com/users/fuchsnj/gists{/gist_id}", "starred_url": "https://api.github.com/users/fuchsnj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fuchsnj/subscriptions", "organizations_url": "https://api.github.com/users/fuchsnj/orgs", "repos_url": "https://api.github.com/users/fuchsnj/repos", "events_url": "https://api.github.com/users/fuchsnj/events{/privacy}", "received_events_url": "https://api.github.com/users/fuchsnj/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-09-06T14:31:30Z", "updated_at": "2015-09-06T16:17:36Z", "closed_at": "2015-09-06T16:17:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "In this example code, I want to implement the trait `Convert` for the struct `Combine` (which combines 2 Converts)\n([code in playground](http://is.gd/656wnI))\n\n``` rust\npub trait Convert<D1, D2>{\n    fn convert(&self, data: D1) -> D2;\n}\nimpl<D1, D2, T> Convert<D1, D2> for T\nwhere T: Fn(D1) -> D2{\n    fn convert(&self, data:D1) -> D2{\n        (*self)(data)\n    }\n}\n\n//combines 2 Converts into 1\npub struct Combine<C1, C2>{\n    a: C1,\n    b: C2\n}\n\nimpl<C1, C2, D1, D2, D3> Convert<D1, D3> for Combine<C1, C2> where\nC1: Convert<D1, D2>,\nC2: Convert<D2, D3>{\n    fn convert(&self, data: D1) -> D3{\n        let value: D2 = self.a.convert(data);\n        self.b.convert(value)\n    }\n}\n\nfn main(){\n    let converter = Combine{\n        a: |d|{\"\".to_string()},\n        b: |d|{true}\n    };\n    let value:bool = converter.convert(4);\n    println!(\"value: {:?}\", value);\n}\n```\n\nbut this gets\n\n``` rust\n<anon>:17:18: 17:20 error: the type parameter `D2` is not constrained by the impl trait, self type, or predicates [E0207]\n<anon>:17 impl<C1, C2, D1, D2, D3> Convert<D1, D3> for Combine<C1, C2> where\n                           ^~\n<anon>:17:18: 17:20 help: see the detailed explanation for E0207\nerror: aborting due to previous error\n```\n\nI have seen a few ugly solutions, such as [putting D2 into the struct as PhantomData](http://is.gd/YJLdeN) but this doesn't work if for example the Combine struct were required to be `Send + Sync` and D2 could not be `Send + Sync`.\n", "closed_by": {"login": "fuchsnj", "id": 6706944, "node_id": "MDQ6VXNlcjY3MDY5NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6706944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fuchsnj", "html_url": "https://github.com/fuchsnj", "followers_url": "https://api.github.com/users/fuchsnj/followers", "following_url": "https://api.github.com/users/fuchsnj/following{/other_user}", "gists_url": "https://api.github.com/users/fuchsnj/gists{/gist_id}", "starred_url": "https://api.github.com/users/fuchsnj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fuchsnj/subscriptions", "organizations_url": "https://api.github.com/users/fuchsnj/orgs", "repos_url": "https://api.github.com/users/fuchsnj/repos", "events_url": "https://api.github.com/users/fuchsnj/events{/privacy}", "received_events_url": "https://api.github.com/users/fuchsnj/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/28271/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/28271/timeline", "performed_via_github_app": null, "state_reason": "completed"}