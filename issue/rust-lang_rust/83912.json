{"url": "https://api.github.com/repos/rust-lang/rust/issues/83912", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/83912/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/83912/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/83912/events", "html_url": "https://github.com/rust-lang/rust/issues/83912", "id": 850867611, "node_id": "MDU6SXNzdWU4NTA4Njc2MTE=", "number": 83912, "title": "Path::components().as_path() for \"///a/b\" failing to normalize multiple slashes for root dir on Unix", "user": {"login": "programmerjake", "id": 4584340, "node_id": "MDQ6VXNlcjQ1ODQzNDA=", "avatar_url": "https://avatars.githubusercontent.com/u/4584340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/programmerjake", "html_url": "https://github.com/programmerjake", "followers_url": "https://api.github.com/users/programmerjake/followers", "following_url": "https://api.github.com/users/programmerjake/following{/other_user}", "gists_url": "https://api.github.com/users/programmerjake/gists{/gist_id}", "starred_url": "https://api.github.com/users/programmerjake/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/programmerjake/subscriptions", "organizations_url": "https://api.github.com/users/programmerjake/orgs", "repos_url": "https://api.github.com/users/programmerjake/repos", "events_url": "https://api.github.com/users/programmerjake/events{/privacy}", "received_events_url": "https://api.github.com/users/programmerjake/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2021-04-06T01:09:22Z", "updated_at": "2021-04-06T10:06:12Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "I'd expect the path to be normalized to `\"/a/b\"` since that is a substring of `\"///a/b\"`.\r\n\r\nOn some Unix implementations a leading `//` is special, but the Unix and POSIX specs state that a leading `///` is equivalent to just one `/`. On Linux, `//` is also the same as `/`, though it has been proposed for that to change.\r\n[Stack Exchange: On what systems is //foo/bar different from /foo/bar?](https://unix.stackexchange.com/questions/256497/on-what-systems-is-foo-bar-different-from-foo-bar)\r\n```rust\r\nuse std::path::Path;\r\n\r\nfn main() {\r\n    let expected = \"/a/b\";\r\n    let actual = Path::new(\"///a/b\").components().as_path().to_str().unwrap();\r\n    assert_eq!(expected, actual);\r\n}\r\n```\r\n\r\n([Playground](https://play.rust-lang.org/?version=nightly&mode=release&edition=2018&gist=192f448ca2b62a3bf0bbb135addcda25))\r\n\r\nErrors:\r\n\r\n```\r\n   Compiling playground v0.0.1 (/playground)\r\n    Finished release [optimized] target(s) in 3.78s\r\n     Running `target/release/playground`\r\nthread 'main' panicked at 'assertion failed: `(left == right)`\r\n  left: `\"/a/b\"`,\r\n right: `\"///a/b\"`', src/main.rs:6:5\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/83912/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/83912/timeline", "performed_via_github_app": null, "state_reason": null}