{"url": "https://api.github.com/repos/rust-lang/rust/issues/42853", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/42853/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/42853/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/42853/events", "html_url": "https://github.com/rust-lang/rust/issues/42853", "id": 238097035, "node_id": "MDU6SXNzdWUyMzgwOTcwMzU=", "number": 42853, "title": "codegen: Redundant object copies in style::properties::PropertyDeclaration::parse_into", "user": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 234956, "node_id": "MDU6TGFiZWwyMzQ5NTY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-codegen", "name": "A-codegen", "color": "f7e101", "default": false, "description": "Area: Code generation"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-23T09:59:28Z", "updated_at": "2022-07-06T03:59:21Z", "closed_at": "2022-07-06T03:59:21Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "This was originally reported here: https://bugzilla.mozilla.org/show_bug.cgi?id=1375225\r\nThe compiler seems to generate code where it loads data into registers and then writes that data back to the same location in memory. Quoting dmajor's original report:\r\n\r\n> I noticed some odd code sequences in style::properties::PropertyDeclaration::parse_into, for example:\r\n> ```\r\n> 00000001`80442f28 e8a334f5ff      call    xul!style::custom_properties::parse_non_custom_with_var (00000001`803963d0)\r\n> 00000001`80442f2d 4c8ba5d8020000  mov     r12,qword ptr [rbp+2D8h]\r\n> 00000001`80442f34 488b85e0020000  mov     rax,qword ptr [rbp+2E0h]\r\n> 00000001`80442f3b 4c8bb5e8020000  mov     r14,qword ptr [rbp+2E8h]\r\n> 00000001`80442f42 488b9df0020000  mov     rbx,qword ptr [rbp+2F0h]\r\n> 00000001`80442f49 488bb5f8020000  mov     rsi,qword ptr [rbp+2F8h]\r\n> 00000001`80442f50 4883bdd002000000 cmp     qword ptr [rbp+2D0h],0\r\n> 00000001`80442f58 0f84d6000100    je      xul!style::properties::PropertyDeclaration::parse_into+0x62764 (00000001`80453034)\r\n> 00000001`80442f5e 488b8d00030000  mov     rcx,qword ptr [rbp+300h]\r\n> 00000001`80442f65 48c785d002000001000000 mov qword ptr [rbp+2D0h],1\r\n> 00000001`80442f70 4c89a5d8020000  mov     qword ptr [rbp+2D8h],r12\r\n> 00000001`80442f77 488985e0020000  mov     qword ptr [rbp+2E0h],rax\r\n> 00000001`80442f7e 4c89b5e8020000  mov     qword ptr [rbp+2E8h],r14\r\n> 00000001`80442f85 48899df0020000  mov     qword ptr [rbp+2F0h],rbx\r\n> 00000001`80442f8c 4889b5f8020000  mov     qword ptr [rbp+2F8h],rsi\r\n> 00000001`80442f93 48898d00030000  mov     qword ptr [rbp+300h],rcx\r\n> ```\r\n> Where, assuming we don't take the je, this is more or less setting a bunch of memory equal to itself.\r\n> \r\n> Another example:\r\n> ```\r\n> 00000001`80442fa6 0f104548        movups  xmm0,xmmword ptr [rbp+48h]\r\n> 00000001`80442faa 0f104d58        movups  xmm1,xmmword ptr [rbp+58h]\r\n> 00000001`80442fae 0f105568        movups  xmm2,xmmword ptr [rbp+68h]\r\n> 00000001`80442fb2 0f299550040000  movaps  xmmword ptr [rbp+450h],xmm2\r\n> 00000001`80442fb9 0f298d40040000  movaps  xmmword ptr [rbp+440h],xmm1\r\n> 00000001`80442fc0 0f298530040000  movaps  xmmword ptr [rbp+430h],xmm0\r\n> 00000001`80442fc7 0f288530040000  movaps  xmm0,xmmword ptr [rbp+430h]\r\n> 00000001`80442fce 0f288d40040000  movaps  xmm1,xmmword ptr [rbp+440h]\r\n> 00000001`80442fd5 0f289550040000  movaps  xmm2,xmmword ptr [rbp+450h]\r\n> 00000001`80442fdc 0f1195f8020000  movups  xmmword ptr [rbp+2F8h],xmm2\r\n> 00000001`80442fe3 0f118de8020000  movups  xmmword ptr [rbp+2E8h],xmm1\r\n> 00000001`80442fea 0f1185d8020000  movups  xmmword ptr [rbp+2D8h],xmm0\r\n> ```\r\n> This looks like it might be the result of something like:\r\n> ```\r\n>  foo = bar;\r\n>  baz = foo;\r\n>  ```\r\n> And I suspect that we'll never use 'foo' again, in which case we could have just copied directly into baz.\r\n> \r\n> But even if we did need to use 'foo' again, there's no need to load up the xmm registers a second time.\r\n\r\nAny idea where this might be coming from or if it has some non-obvious purpose?\r\nping @rust-lang/compiler ", "closed_by": {"login": "workingjubilee", "id": 46493976, "node_id": "MDQ6VXNlcjQ2NDkzOTc2", "avatar_url": "https://avatars.githubusercontent.com/u/46493976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/workingjubilee", "html_url": "https://github.com/workingjubilee", "followers_url": "https://api.github.com/users/workingjubilee/followers", "following_url": "https://api.github.com/users/workingjubilee/following{/other_user}", "gists_url": "https://api.github.com/users/workingjubilee/gists{/gist_id}", "starred_url": "https://api.github.com/users/workingjubilee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/workingjubilee/subscriptions", "organizations_url": "https://api.github.com/users/workingjubilee/orgs", "repos_url": "https://api.github.com/users/workingjubilee/repos", "events_url": "https://api.github.com/users/workingjubilee/events{/privacy}", "received_events_url": "https://api.github.com/users/workingjubilee/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/42853/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/42853/timeline", "performed_via_github_app": null, "state_reason": "not_planned"}