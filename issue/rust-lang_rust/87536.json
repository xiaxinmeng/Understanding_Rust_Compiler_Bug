{"url": "https://api.github.com/repos/rust-lang/rust/issues/87536", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/87536/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/87536/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/87536/events", "html_url": "https://github.com/rust-lang/rust/issues/87536", "id": 954503666, "node_id": "MDU6SXNzdWU5NTQ1MDM2NjY=", "number": 87536, "title": "ICE: compiler/rustc_typeck/src/hir_wf_check.rs:133:29: Unexpected TraitItem Const", "user": {"login": "Fluhzar", "id": 51805745, "node_id": "MDQ6VXNlcjUxODA1NzQ1", "avatar_url": "https://avatars.githubusercontent.com/u/51805745?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Fluhzar", "html_url": "https://github.com/Fluhzar", "followers_url": "https://api.github.com/users/Fluhzar/followers", "following_url": "https://api.github.com/users/Fluhzar/following{/other_user}", "gists_url": "https://api.github.com/users/Fluhzar/gists{/gist_id}", "starred_url": "https://api.github.com/users/Fluhzar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Fluhzar/subscriptions", "organizations_url": "https://api.github.com/users/Fluhzar/orgs", "repos_url": "https://api.github.com/users/Fluhzar/repos", "events_url": "https://api.github.com/users/Fluhzar/events{/privacy}", "received_events_url": "https://api.github.com/users/Fluhzar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-07-28T05:58:01Z", "updated_at": "2021-07-28T09:24:36Z", "closed_at": "2021-07-28T09:24:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "The ICE triggers for traits with associated consts whose types are some generic struct, but not always.\r\n\r\n### Code\r\n\r\nChecking each trait is a bit of a chore, going through and commenting/uncommenting whichever trait is to be tested. If there's a better way to format this I'm all ears!\r\n\r\n```rust\r\nmod without_copy {\r\n    struct GenericStruct<T>(T);\r\n\r\n    // No ICE\r\n    trait TraitWithTypeAndConst {\r\n        type Type;\r\n        const CONST: GenericStruct<Self::Type>;\r\n    }\r\n\r\n    // ICE\r\n    trait TraitWithConstOnly {\r\n        const CONST: GenericStruct<Self>;\r\n    }\r\n\r\n    // No ICE\r\n    trait TraitWithoutSelfReference {\r\n        const CONST: GenericStruct<f32>;\r\n    }\r\n}\r\n\r\nmod with_copy {\r\n    struct GenericStruct<T: Copy>(T);\r\n\r\n    // ICE\r\n    trait TraitWithTypeAndConst {\r\n        type Type;\r\n        const CONST: GenericStruct<Self::Type>;\r\n    }\r\n\r\n    // ICE\r\n    trait TraitWithConstOnly {\r\n        const CONST: GenericStruct<Self>;\r\n    }\r\n\r\n    // No ICE\r\n    trait TraitWithoutSelfReference {\r\n        const CONST: GenericStruct<f32>;\r\n    }\r\n}\r\n\r\nmod with_blank_trait {\r\n    trait Blank {}\r\n\r\n    struct GenericStruct<T: Blank>(T);\r\n\r\n    // ICE\r\n    trait TraitWithTypeAndConst {\r\n        type Type;\r\n        const CONST: GenericStruct<Self::Type>;\r\n    }\r\n\r\n    // ICE\r\n    trait TraitWithConstOnly {\r\n        const CONST: GenericStruct<Self>;\r\n    }\r\n\r\n    // ICE\r\n    trait TraitWithoutSelfReference {\r\n        const CONST: GenericStruct<f32>;\r\n    }\r\n}\r\n\r\nmod with_blank_trait_and_generic_impl {\r\n    trait Blank {}\r\n    impl<T> Blank for T {}\r\n\r\n    struct GenericStruct<T: Blank>(T);\r\n\r\n    // No ICE\r\n    trait TraitWithTypeAndConst {\r\n        type Type;\r\n        const CONST: GenericStruct<Self::Type>;\r\n    }\r\n\r\n    // ICE\r\n    trait TraitWithConstOnly {\r\n        const CONST: GenericStruct<Self>;\r\n    }\r\n\r\n    // NO ICE\r\n    trait TraitWithoutSelfReference {\r\n        const CONST: GenericStruct<f32>;\r\n    }\r\n}\r\n```\r\n\r\nNote how each module has the same 3 traits as each other, the only difference from module to module is the bounds on the referenced type (`GenericStruct`) and the trait being bound. Interestingly it gets stranger as the blank trait changes the ICE triggering depending on if the trait has the generic impl block (`impl<T> Blank for T {}`) or not.\r\n\r\n### Meta\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.56.0-nightly (2faabf579 2021-07-27)\r\nbinary: rustc\r\ncommit-hash: 2faabf579323f5252329264cc53ba9ff803429a3\r\ncommit-date: 2021-07-27\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.56.0-nightly\r\nLLVM version: 12.0.1\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nerror: internal compiler error: compiler/rustc_typeck/src/hir_wf_check.rs:133:29: Unexpected TraitItem Const(Ty { hir_id: HirId { owner: DefId(0:52 ~ ice_on_example[788e]::with_blank_trait_and_generic_impl::TraitWithConstOnly::CONST), local_id: 1 }, kind: Path(Resolved(None, Path { span: ice_on_example/src/lib.rs:79:22: 79:48 (#0), res: Def(Struct, DefId(0:44 ~ ice_on_example[788e]::with_blank_trait_and_generic_impl::GenericNewTypeStruct)), segments: [PathSegment { ident: GenericNewTypeStruct#0, hir_id: Some(HirId { owner: DefId(0:52 ~ ice_on_example[788e]::with_blank_trait_and_generic_impl::TraitWithConstOnly::CONST), local_id: 4 }), res: Some(Err), args: Some(GenericArgs { args: [Type(Ty { hir_id: HirId { owner: DefId(0:52 ~ ice_on_example[788e]::with_blank_trait_and_generic_impl::TraitWithConstOnly::CONST), local_id: 2 }, kind: Path(Resolved(None, Path { span: ice_on_example/src/lib.rs:79:43: 79:47 (#0), res: SelfTy(Some(DefId(0:51 ~ ice_on_example[788e]::with_blank_trait_and_generic_impl::TraitWithConstOnly)), None), segments: [PathSegment { ident: Self#0, hir_id: Some(HirId { owner: DefId(0:52 ~ ice_on_example[788e]::with_blank_trait_and_generic_impl::TraitWithConstOnly::CONST), local_id: 3 }), res: Some(SelfTy(Some(DefId(0:51 ~ ice_on_example[788e]::with_blank_trait_and_generic_impl::TraitWithConstOnly)), None)), args: None, infer_args: false }] })), span: ice_on_example/src/lib.rs:79:43: 79:47 (#0) })], bindings: [], parenthesized: false, span_ext: ice_on_example/src/lib.rs:79:42: 79:48 (#0) }), infer_args: false }] })), span: ice_on_example/src/lib.rs:79:22: 79:48 (#0) }, None)\r\n\r\nthread 'rustc' panicked at 'Box<dyn Any>', compiler/rustc_errors/src/lib.rs:1034:9\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.56.0-nightly (2faabf579 2021-07-27) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [diagnostic_hir_wf_check] performing HIR wf-checking for predicate Binder(TraitPredicate(<Self as std::marker::Sized>), []) at item Ty(DefId(0:52 ~ ice_on_example[788e]::with_blank_trait_and_generic_impl::TraitWithConstOnly::CONST))\r\n#1 [check_trait_item_well_formed] checking that `with_blank_trait_and_generic_impl::TraitWithConstOnly::CONST` is well-formed\r\nend of query stack\r\n```\r\n\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nthread 'rustc' panicked at 'Box<dyn Any>', compiler/rustc_errors/src/lib.rs:1034:9\r\nstack backtrace:\r\n   0: std::panicking::begin_panic\r\n   1: std::panic::panic_any\r\n   2: rustc_errors::HandlerInner::bug\r\n   3: rustc_errors::Handler::bug\r\n   4: rustc_middle::ty::context::tls::with_opt\r\n   5: rustc_middle::util::bug::opt_span_bug_fmt\r\n   6: rustc_middle::util::bug::bug_fmt\r\n   7: rustc_typeck::hir_wf_check::diagnostic_hir_wf_check\r\n   8: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n   9: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  10: rustc_data_structures::stack::ensure_sufficient_stack\r\n  11: rustc_query_system::query::plumbing::get_query_impl\r\n  12: rustc_query_system::query::plumbing::get_query\r\n  13: <rustc_infer::infer::InferCtxt as rustc_trait_selection::traits::error_reporting::InferCtxtExt>::report_selection_error\r\n  14: <rustc_infer::infer::InferCtxt as rustc_trait_selection::traits::error_reporting::InferCtxtPrivExt>::report_fulfillment_error\r\n  15: <rustc_infer::infer::InferCtxt as rustc_trait_selection::traits::error_reporting::InferCtxtExt>::report_fulfillment_errors\r\n  16: rustc_typeck::check::fn_ctxt::_impl::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::select_all_obligations_or_error\r\n  17: rustc_infer::infer::InferCtxtBuilder::enter\r\n  18: rustc_typeck::check::wfcheck::check_associated_item\r\n  19: rustc_typeck::check::wfcheck::check_trait_item\r\n  20: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  21: rustc_data_structures::stack::ensure_sufficient_stack\r\n  22: rustc_query_system::query::plumbing::force_query_with_job\r\n  23: rustc_query_system::query::plumbing::get_query_impl\r\n  24: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::check_trait_item_well_formed\r\n  25: <rustc_typeck::check::wfcheck::CheckTypeWellFormedVisitor as rustc_hir::intravisit::Visitor>::visit_trait_item\r\n  26: std::panicking::try\r\n  27: rustc_data_structures::sync::par_for_each_in\r\n  28: rustc_session::session::Session::track_errors\r\n  29: rustc_typeck::check_crate\r\n  30: rustc_interface::passes::analysis\r\n  31: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  32: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  33: rustc_query_system::dep_graph::graph::DepGraph<K>::with_eval_always_task\r\n  34: rustc_data_structures::stack::ensure_sufficient_stack\r\n  35: rustc_query_system::query::plumbing::force_query_with_job\r\n  36: rustc_query_system::query::plumbing::get_query_impl\r\n  37: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::analysis\r\n  38: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n  39: rustc_span::with_source_map\r\n  40: rustc_interface::interface::create_compiler_and_run\r\n  41: scoped_tls::ScopedKey<T>::set\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n<details><summary><strong>Full Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nthread 'rustc' panicked at 'Box<dyn Any>', compiler/rustc_errors/src/lib.rs:1034:9\r\nstack backtrace:\r\n   0:     0x7f435c6dbf50 - std::backtrace_rs::backtrace::libunwind::trace::h99dbb39dca18857d\r\n                               at /rustc/2faabf579323f5252329264cc53ba9ff803429a3/library/std/src/../../backtrace/src/backtrace/libunwind.rs:90:5\r\n   1:     0x7f435c6dbf50 - std::backtrace_rs::backtrace::trace_unsynchronized::h832861927e9cfedf\r\n                               at /rustc/2faabf579323f5252329264cc53ba9ff803429a3/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\r\n   2:     0x7f435c6dbf50 - std::sys_common::backtrace::_print_fmt::h3d18154c77dcf310\r\n                               at /rustc/2faabf579323f5252329264cc53ba9ff803429a3/library/std/src/sys_common/backtrace.rs:67:5\r\n   3:     0x7f435c6dbf50 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::he312f4ad5b9bb346\r\n                               at /rustc/2faabf579323f5252329264cc53ba9ff803429a3/library/std/src/sys_common/backtrace.rs:46:22\r\n   4:     0x7f435c749bbc - core::fmt::write::h9a6d9c74526a6c1b\r\n                               at /rustc/2faabf579323f5252329264cc53ba9ff803429a3/library/core/src/fmt/mod.rs:1115:17\r\n   5:     0x7f435c6cd835 - std::io::Write::write_fmt::h6aced00850e8186f\r\n                               at /rustc/2faabf579323f5252329264cc53ba9ff803429a3/library/std/src/io/mod.rs:1665:15\r\n   6:     0x7f435c6dfc6b - std::sys_common::backtrace::_print::h65d996766de40da4\r\n                               at /rustc/2faabf579323f5252329264cc53ba9ff803429a3/library/std/src/sys_common/backtrace.rs:49:5\r\n   7:     0x7f435c6dfc6b - std::sys_common::backtrace::print::h40df9727e635f303\r\n                               at /rustc/2faabf579323f5252329264cc53ba9ff803429a3/library/std/src/sys_common/backtrace.rs:36:9\r\n   8:     0x7f435c6dfc6b - std::panicking::default_hook::{{closure}}::hd2da4327dea91a51\r\n                               at /rustc/2faabf579323f5252329264cc53ba9ff803429a3/library/std/src/panicking.rs:208:50\r\n   9:     0x7f435c6df741 - std::panicking::default_hook::h3d55120ad6ada158\r\n                               at /rustc/2faabf579323f5252329264cc53ba9ff803429a3/library/std/src/panicking.rs:225:9\r\n  10:     0x7f435cebc611 - rustc_driver::DEFAULT_HOOK::{{closure}}::{{closure}}::h6c854bb74ca75dad\r\n  11:     0x7f435c6e0499 - std::panicking::rust_panic_with_hook::hf85dd0bb545e3b55\r\n                               at /rustc/2faabf579323f5252329264cc53ba9ff803429a3/library/std/src/panicking.rs:626:17\r\n  12:     0x7f435de9ba5b - std::panicking::begin_panic::{{closure}}::hecbebe18226bf241\r\n  13:     0x7f435de9b9e6 - std::sys_common::backtrace::__rust_end_short_backtrace::h7570b823de984483\r\n  14:     0x7f435de9ddbf - std::panicking::begin_panic::hbfbf0ff6f7e9a2e1\r\n  15:     0x7f435deb2e3d - std::panic::panic_any::h9b58b69598db8d52\r\n  16:     0x7f435deb5c5a - rustc_errors::HandlerInner::bug::h69b8d780df20db9a\r\n  17:     0x7f435deb5710 - rustc_errors::Handler::bug::h04eb0f7808456322\r\n  18:     0x7f435de0e8bc - rustc_middle::ty::context::tls::with_opt::hcefda774443605fb\r\n  19:     0x7f435de0eac0 - rustc_middle::util::bug::opt_span_bug_fmt::hbf4f38c7426a3da9\r\n  20:     0x7f435de0ea36 - rustc_middle::util::bug::bug_fmt::h23a56cbc4ca6dee5\r\n  21:     0x7f435d2898b3 - rustc_typeck::hir_wf_check::diagnostic_hir_wf_check::h4eeb4465ffb9baf1\r\n  22:     0x7f435d859bae - rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps::h181e3b555d8516a3\r\n  23:     0x7f435d833887 - rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl::h94a4aef86133f1c1\r\n  24:     0x7f435d914bf3 - rustc_data_structures::stack::ensure_sufficient_stack::hfdcca5a77f101ca2\r\n  25:     0x7f435d698431 - rustc_query_system::query::plumbing::get_query_impl::h7b79b9ba10dfa38b\r\n  26:     0x7f435d735d16 - rustc_query_system::query::plumbing::get_query::h0f5eb8b87a1351b7\r\n  27:     0x7f435dc14bce - <rustc_infer::infer::InferCtxt as rustc_trait_selection::traits::error_reporting::InferCtxtExt>::report_selection_error::h8b9e7817a71eb078\r\n  28:     0x7f435dc1a6bf - <rustc_infer::infer::InferCtxt as rustc_trait_selection::traits::error_reporting::InferCtxtPrivExt>::report_fulfillment_error::h51e13a2e8b00d126\r\n  29:     0x7f435dc1360c - <rustc_infer::infer::InferCtxt as rustc_trait_selection::traits::error_reporting::InferCtxtExt>::report_fulfillment_errors::h7fc1f37867d2ac3b\r\n  30:     0x7f435e0a6f77 - rustc_typeck::check::fn_ctxt::_impl::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::select_all_obligations_or_error::hac60e5de99c6ed2e\r\n  31:     0x7f435e10e50b - rustc_infer::infer::InferCtxtBuilder::enter::hbf587ccc526e62c3\r\n  32:     0x7f435e0f1146 - rustc_typeck::check::wfcheck::check_associated_item::h2994e164cfdef394\r\n  33:     0x7f435ebddb11 - rustc_typeck::check::wfcheck::check_trait_item::hd9a198cd47f2a1c4\r\n  34:     0x7f435ef29a68 - rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl::h0ea966f60fb357b0\r\n  35:     0x7f435efc119a - rustc_data_structures::stack::ensure_sufficient_stack::hfa8b4053572632ab\r\n  36:     0x7f435ee8633c - rustc_query_system::query::plumbing::force_query_with_job::h4ca6d0d2005ce713\r\n  37:     0x7f435e55fe72 - rustc_query_system::query::plumbing::get_query_impl::hcc942fc8702b5655\r\n  38:     0x7f435ef1791b - <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::check_trait_item_well_formed::hd5c993c6aad595fb\r\n  39:     0x7f435ebe0f39 - <rustc_typeck::check::wfcheck::CheckTypeWellFormedVisitor as rustc_hir::intravisit::Visitor>::visit_trait_item::h81653c7fe5f91145\r\n  40:     0x7f435e0da813 - std::panicking::try::he384848f9f20c194\r\n  41:     0x7f435e13d1cb - rustc_data_structures::sync::par_for_each_in::h4c89b4235e43cb38\r\n  42:     0x7f435ebf4b2f - rustc_session::session::Session::track_errors::h45cdfa5727dc4520\r\n  43:     0x7f435ebe8243 - rustc_typeck::check_crate::h699147646121a6a3\r\n  44:     0x7f435e9cf80f - rustc_interface::passes::analysis::h50d0de1731ee4f37\r\n  45:     0x7f435d86be73 - rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps::hcbaeaa9eea970ee4\r\n  46:     0x7f435d83cc07 - rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl::he6199cbb439e376a\r\n  47:     0x7f435d8400f9 - rustc_query_system::dep_graph::graph::DepGraph<K>::with_eval_always_task::h28179af5692a308b\r\n  48:     0x7f435d9135ae - rustc_data_structures::stack::ensure_sufficient_stack::heb8eff9f07414442\r\n  49:     0x7f435d6c826d - rustc_query_system::query::plumbing::force_query_with_job::h739ef3432ad7844a\r\n  50:     0x7f435ee71506 - rustc_query_system::query::plumbing::get_query_impl::hfb328957edb27639\r\n  51:     0x7f435ef13b7d - <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::analysis::h6e8468093d45449b\r\n  52:     0x7f435e9a3e98 - rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter::h3903b65ffca1d745\r\n  53:     0x7f435e99298c - rustc_span::with_source_map::hdc8c4c7d7611fe77\r\n  54:     0x7f435e9a50ba - rustc_interface::interface::create_compiler_and_run::hbe7a78745769ff96\r\n  55:     0x7f435e997e19 - scoped_tls::ScopedKey<T>::set::ha164143a03306a1b\r\n  56:     0x7f435e993eba - std::sys_common::backtrace::__rust_begin_short_backtrace::h4dd3c27220dda569\r\n  57:     0x7f435e993335 - core::ops::function::FnOnce::call_once{{vtable.shim}}::h546778848e9193e6\r\n  58:     0x7f435c6eca27 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::h09f167e08fc945ff\r\n                               at /rustc/2faabf579323f5252329264cc53ba9ff803429a3/library/alloc/src/boxed.rs:1572:9\r\n  59:     0x7f435c6eca27 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::hf814fe85eeb118e0\r\n                               at /rustc/2faabf579323f5252329264cc53ba9ff803429a3/library/alloc/src/boxed.rs:1572:9\r\n  60:     0x7f435c6eca27 - std::sys::unix::thread::Thread::new::thread_start::hb71b17934c5f5e68\r\n                               at /rustc/2faabf579323f5252329264cc53ba9ff803429a3/library/std/src/sys/unix/thread.rs:91:17\r\n  61:     0x7f435c60a259 - start_thread\r\n  62:     0x7f435c51f5e3 - __GI___clone\r\n  63:                0x0 - <unknown>\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\nI came across these ICE working on a project depending on the one that triggered [this ICE](https://github.com/rust-lang/rust/issues/87470), I wonder if the 2 issues are possibly related.\r\n", "closed_by": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/87536/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/87536/timeline", "performed_via_github_app": null, "state_reason": "completed"}