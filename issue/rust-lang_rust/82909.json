{"url": "https://api.github.com/repos/rust-lang/rust/issues/82909", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/82909/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/82909/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/82909/events", "html_url": "https://github.com/rust-lang/rust/issues/82909", "id": 824679105, "node_id": "MDU6SXNzdWU4MjQ2NzkxMDU=", "number": 82909, "title": "ICE: 'called `Result::unwrap()` on an `Err` value: FallbackToConstRef(())', compiler/rustc_mir_build/src/thir/pattern/const_to_pat.rs:169:83", "user": {"login": "chengniansun", "id": 4554271, "node_id": "MDQ6VXNlcjQ1NTQyNzE=", "avatar_url": "https://avatars.githubusercontent.com/u/4554271?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chengniansun", "html_url": "https://github.com/chengniansun", "followers_url": "https://api.github.com/users/chengniansun/followers", "following_url": "https://api.github.com/users/chengniansun/following{/other_user}", "gists_url": "https://api.github.com/users/chengniansun/gists{/gist_id}", "starred_url": "https://api.github.com/users/chengniansun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chengniansun/subscriptions", "organizations_url": "https://api.github.com/users/chengniansun/orgs", "repos_url": "https://api.github.com/users/chengniansun/repos", "events_url": "https://api.github.com/users/chengniansun/events{/privacy}", "received_events_url": "https://api.github.com/users/chengniansun/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-03-08T15:37:40Z", "updated_at": "2022-08-10T06:09:10Z", "closed_at": "2022-08-10T06:09:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\n```Rust\r\nstruct Sum(u32, u32);\r\nimpl PartialEq for Sum {\r\n    fn eq(&self, other: &Self) -> bool {\r\n        0 == 0\r\n    }\r\n}\r\n#[derive(PartialEq)]\r\nenum Eek {\r\n    UnusedByTheConst(Sum),\r\n}\r\nconst SUM_THREE: Eek = Eek::UnusedByTheConst(Sum(3, 0));\r\nconst EEK_ONE: &[Eek] = &[SUM_THREE];\r\nfn main() {\r\n    match &&&[][..] {\r\n        &&EEK_ONE => {}\r\n    }\r\n}\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.52.0-nightly (234781afe 2021-03-07)\r\nbinary: rustc\r\ncommit-hash: 234781afe33d3f339b002f85f948046d8476cfc9\r\ncommit-date: 2021-03-07\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.52.0-nightly\r\nLLVM version: 12.0.0\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nwarning: to use a constant of type `Eek` in a pattern, `Eek` must be annotated with `#[derive(PartialEq, Eq)]`\r\n  --> perses_node_priority_with_dfs_delta_reduced_mutant.rs:15:11\r\n   |\r\n15 |         &&EEK_ONE => {}\r\n   |           ^^^^^^^\r\n   |\r\n   = note: `#[warn(indirect_structural_match)]` on by default\r\n   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\r\n   = note: for more information, see issue #62411 <https://github.com/rust-lang/rust/issues/62411>\r\n\r\nthread 'rustc' panicked at 'called `Result::unwrap()` on an `Err` value: FallbackToConstRef(())', compiler/rustc_mir_build/src/thir/pattern/const_to_pat.rs:169:83\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.52.0-nightly (234781afe 2021-03-07) running on x86_64-unknown-linux-gnu\r\n\r\nquery stack during panic:\r\n#0 [check_match] match-checking `main`\r\n#1 [analysis] running analysis passes on this crate\r\nend of query stack\r\nwarning: unused variable: `other`\r\n --> perses_node_priority_with_dfs_delta_reduced_mutant.rs:3:18\r\n  |\r\n3 |     fn eq(&self, other: &Self) -> bool {\r\n  |                  ^^^^^ help: if this is intentional, prefix it with an underscore: `_other`\r\n  |\r\n  = note: `#[warn(unused_variables)]` on by default\r\n\r\nwarning: 2 warnings emitted\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nwarning: to use a constant of type `Eek` in a pattern, `Eek` must be annotated with `#[derive(PartialEq, Eq)]`\r\n  --> perses_node_priority_with_dfs_delta_reduced_mutant.rs:15:11\r\n   |\r\n15 |         &&EEK_ONE => {}\r\n   |           ^^^^^^^\r\n   |\r\n   = note: `#[warn(indirect_structural_match)]` on by default\r\n   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\r\n   = note: for more information, see issue #62411 <https://github.com/rust-lang/rust/issues/62411>\r\n\r\nthread 'rustc' panicked at 'called `Result::unwrap()` on an `Err` value: FallbackToConstRef(())', compiler/rustc_mir_build/src/thir/pattern/const_to_pat.rs:169:83\r\nstack backtrace:\r\n   0: rust_begin_unwind\r\n             at /rustc/234781afe33d3f339b002f85f948046d8476cfc9/library/std/src/panicking.rs:493:5\r\n   1: core::panicking::panic_fmt\r\n             at /rustc/234781afe33d3f339b002f85f948046d8476cfc9/library/core/src/panicking.rs:92:14\r\n   2: core::option::expect_none_failed\r\n             at /rustc/234781afe33d3f339b002f85f948046d8476cfc9/library/core/src/option.rs:1301:5\r\n   3: rustc_mir_build::thir::pattern::const_to_pat::ConstToPat::to_pat\r\n   4: rustc_infer::infer::InferCtxtBuilder::enter\r\n   5: rustc_mir_build::thir::pattern::const_to_pat::<impl rustc_mir_build::thir::pattern::PatCtxt>::const_to_pat\r\n   6: rustc_mir_build::thir::pattern::PatCtxt::lower_path\r\n   7: rustc_mir_build::thir::pattern::PatCtxt::lower_pattern\r\n   8: rustc_mir_build::thir::pattern::PatCtxt::lower_pattern\r\n   9: rustc_mir_build::thir::pattern::PatCtxt::lower_pattern\r\n  10: rustc_mir_build::thir::pattern::check_match::MatchVisitor::lower_pattern\r\n  11: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter\r\n  12: <rustc_mir_build::thir::pattern::check_match::MatchVisitor as rustc_hir::intravisit::Visitor>::visit_expr\r\n  13: <rustc_mir_build::thir::pattern::check_match::MatchVisitor as rustc_hir::intravisit::Visitor>::visit_expr\r\n  14: rustc_mir_build::thir::pattern::check_match::check_match\r\n  15: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  16: rustc_data_structures::stack::ensure_sufficient_stack\r\n  17: rustc_query_system::query::plumbing::force_query_with_job\r\n  18: rustc_query_system::query::plumbing::get_query_impl\r\n  19: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::check_match\r\n  20: rustc_middle::ty::<impl rustc_middle::ty::context::TyCtxt>::par_body_owners\r\n  21: rustc_session::utils::<impl rustc_session::session::Session>::time\r\n  22: rustc_interface::passes::analysis\r\n  23: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  24: rustc_data_structures::stack::ensure_sufficient_stack\r\n  25: rustc_query_system::query::plumbing::force_query_with_job\r\n  26: rustc_query_system::query::plumbing::get_query_impl\r\n  27: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::analysis\r\n  28: rustc_interface::passes::QueryContext::enter\r\n  29: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n  30: rustc_span::with_source_map\r\n  31: rustc_interface::interface::create_compiler_and_run\r\n  32: rustc_span::with_session_globals\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.52.0-nightly (234781afe 2021-03-07) running on x86_64-unknown-linux-gnu\r\n\r\nquery stack during panic:\r\n#0 [check_match] match-checking `main`\r\n#1 [analysis] running analysis passes on this crate\r\nend of query stack\r\nwarning: unused variable: `other`\r\n --> perses_node_priority_with_dfs_delta_reduced_mutant.rs:3:18\r\n  |\r\n3 |     fn eq(&self, other: &Self) -> bool {\r\n  |                  ^^^^^ help: if this is intentional, prefix it with an underscore: `_other`\r\n  |\r\n  = note: `#[warn(unused_variables)]` on by default\r\n\r\nwarning: 2 warnings emitted\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/82909/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/82909/timeline", "performed_via_github_app": null, "state_reason": "completed"}