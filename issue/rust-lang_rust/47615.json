{"url": "https://api.github.com/repos/rust-lang/rust/issues/47615", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/47615/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/47615/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/47615/events", "html_url": "https://github.com/rust-lang/rust/issues/47615", "id": 290206833, "node_id": "MDU6SXNzdWUyOTAyMDY4MzM=", "number": 47615, "title": "Raw function pointers do not behave as expected.", "user": {"login": "brunoczim", "id": 18701450, "node_id": "MDQ6VXNlcjE4NzAxNDUw", "avatar_url": "https://avatars.githubusercontent.com/u/18701450?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brunoczim", "html_url": "https://github.com/brunoczim", "followers_url": "https://api.github.com/users/brunoczim/followers", "following_url": "https://api.github.com/users/brunoczim/following{/other_user}", "gists_url": "https://api.github.com/users/brunoczim/gists{/gist_id}", "starred_url": "https://api.github.com/users/brunoczim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brunoczim/subscriptions", "organizations_url": "https://api.github.com/users/brunoczim/orgs", "repos_url": "https://api.github.com/users/brunoczim/repos", "events_url": "https://api.github.com/users/brunoczim/events{/privacy}", "received_events_url": "https://api.github.com/users/brunoczim/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-01-20T17:07:40Z", "updated_at": "2018-01-22T00:38:49Z", "closed_at": "2018-01-20T18:06:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "A segmentation fault happens when using `as_ref` on a raw function pointer.\r\nThis code does not behave as expected:\r\n```rust\r\nfn foo() {\r\n    println!(\"Hello, World!\");\r\n}\r\n\r\nfn main() {\r\n    unsafe {\r\n        let f = (foo as *const fn()).as_ref().unwrap();\r\n        f();\r\n    }\r\n}\r\n```\r\nThis results in:\r\n```\r\nbruno@debian:~/Documents/rust$ rustc -o test test.rs \r\nbruno@debian:~/Documents/rust$ ./test \r\nSegmentation fault\r\nbruno@debian:~/Documents/rust$ rust-gdb ./test \r\nGNU gdb (Debian 7.12-6) 7.12.0.20161007-git\r\nCopyright (C) 2016 Free Software Foundation, Inc.\r\nLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>\r\nThis is free software: you are free to change and redistribute it.\r\nThere is NO WARRANTY, to the extent permitted by law.  Type \"show copying\"\r\nand \"show warranty\" for details.\r\nThis GDB was configured as \"x86_64-linux-gnu\".\r\nType \"show configuration\" for configuration details.\r\nFor bug reporting instructions, please see:\r\n<http://www.gnu.org/software/gdb/bugs/>.\r\nFind the GDB manual and other documentation resources online at:\r\n<http://www.gnu.org/software/gdb/documentation/>.\r\nFor help, type \"help\".\r\nType \"apropos word\" to search for commands related to \"word\"...\r\nReading symbols from ./test...done.\r\n(gdb) run\r\nStarting program: /home/bruno/Documents/rust/test \r\n[Thread debugging using libthread_db enabled]\r\nUsing host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\r\n\r\nProgram received signal SIGSEGV, Segmentation fault.\r\n0x000055555555b27c in test::main::h0eddcc39ebf1578f ()\r\n(gdb) bt\r\n#0  0x000055555555b27c in test::main::h0eddcc39ebf1578f ()\r\n#1  0x000055555555b0b3 in std::rt::lang_start::_$u7b$$u7b$closure$u7d$$u7d$::hc46a3cd2285c1402 ()\r\n#2  0x00005555555664e8 in std::rt::lang_start_internal::_$u7b$$u7b$closure$u7d$$u7d$::ha09bfb8724951432 () at libstd/rt.rs:59\r\n#3  std::panicking::try::do_call::h976c8164fad81bcc () at libstd/panicking.rs:479\r\n#4  0x000055555557093f in __rust_maybe_catch_panic () at libpanic_unwind/lib.rs:102\r\n#5  0x000055555555b700 in std::panicking::try::h1db13937c8e2cbb4 () at libstd/panicking.rs:458\r\n#6  std::panic::catch_unwind::h3c1f03b328c42bbe () at libstd/panic.rs:358\r\n#7  std::rt::lang_start_internal::h090df5551a0da347 () at libstd/rt.rs:58\r\n#8  0x000055555555b097 in std::rt::lang_start::h771801e75e92adce ()\r\n#9  0x000055555555b2ae in main ()\r\n(gdb) \r\n```\r\nThe code above would be necessary because the code below does not compile:\r\n```rust\r\nfn foo() {\r\n    println!(\"Hello, World!\");\r\n}\r\n\r\nfn main() {\r\n    unsafe {\r\n        let f = (&foo as *const fn()).as_ref().unwrap();\r\n        f();\r\n    }\r\n}\r\n```\r\nIt results in:\r\n```\r\nerror[E0606]: casting `&fn() {foo}` as `*const fn()` is invalid\r\n --> test.rs:7:17\r\n  |\r\n7 |         let f = (&foo as *const fn()).as_ref().unwrap();\r\n  |                 ^^^^^^^^^^^^^^^^^^^^^\r\n\r\nerror: aborting due to previous error\r\n```\r\nThe solution is to use something like:\r\n```rust\r\nfn foo() {\r\n    println!(\"Hello, World!\");\r\n}\r\n\r\nfn main() {\r\n    unsafe {\r\n        let f = (&(foo as *const fn()) as *const *const fn() as *const fn()).as_ref().unwrap();\r\n        f();\r\n    }\r\n}\r\n```\r\nThis works fine.\r\nRust version:\r\n```\r\nrustc 1.25.0-nightly (da569fa9d 2018-01-16)\r\nbinary: rustc\r\ncommit-hash: da569fa9ddf8369a9809184d43c600dc06bd4b4d\r\ncommit-date: 2018-01-16\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.25.0-nightly\r\nLLVM version: 4.0\r\n```", "closed_by": {"login": "bluss", "id": 3209739, "node_id": "MDQ6VXNlcjMyMDk3Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/3209739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluss", "html_url": "https://github.com/bluss", "followers_url": "https://api.github.com/users/bluss/followers", "following_url": "https://api.github.com/users/bluss/following{/other_user}", "gists_url": "https://api.github.com/users/bluss/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluss/subscriptions", "organizations_url": "https://api.github.com/users/bluss/orgs", "repos_url": "https://api.github.com/users/bluss/repos", "events_url": "https://api.github.com/users/bluss/events{/privacy}", "received_events_url": "https://api.github.com/users/bluss/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/47615/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/47615/timeline", "performed_via_github_app": null, "state_reason": "completed"}