{"url": "https://api.github.com/repos/rust-lang/rust/issues/26841", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/26841/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/26841/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/26841/events", "html_url": "https://github.com/rust-lang/rust/issues/26841", "id": 93407278, "node_id": "MDU6SXNzdWU5MzQwNzI3OA==", "number": 26841, "title": "Inference failure with int inference variable", "user": {"login": "eefriedman", "id": 12769964, "node_id": "MDQ6VXNlcjEyNzY5OTY0", "avatar_url": "https://avatars.githubusercontent.com/u/12769964?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eefriedman", "html_url": "https://github.com/eefriedman", "followers_url": "https://api.github.com/users/eefriedman/followers", "following_url": "https://api.github.com/users/eefriedman/following{/other_user}", "gists_url": "https://api.github.com/users/eefriedman/gists{/gist_id}", "starred_url": "https://api.github.com/users/eefriedman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eefriedman/subscriptions", "organizations_url": "https://api.github.com/users/eefriedman/orgs", "repos_url": "https://api.github.com/users/eefriedman/repos", "events_url": "https://api.github.com/users/eefriedman/events{/privacy}", "received_events_url": "https://api.github.com/users/eefriedman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37544, "node_id": "MDU6TGFiZWwzNzU0NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-typesystem", "name": "A-typesystem", "color": "f7e101", "default": false, "description": "Area: The type system"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 604454086, "node_id": "MDU6TGFiZWw2MDQ0NTQwODY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-inference", "name": "A-inference", "color": "f7e101", "default": false, "description": "Area: Type inference"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-07-07T00:27:15Z", "updated_at": "2023-04-05T17:35:02Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "``` rust\nfn f<T>() -> T { panic!(); }\nfn main() {\n    let mut a = f();\n    let b : u8 = a+a;\n    a = 1;\n}\n```\n\n```\n<anon>:4:18: 4:21 error: type mismatch resolving `<i32 as core::ops::Add>::Output == u8`:\n expected i32,\n    found u8 [E0271]\n<anon>:4     let b : u8 = a+a;\n                          ^~~\n```\n\nGiven that the type of `b` is `u8`, the type of `a` is a builtin integer type, and the result of `a+a` is assigned to `b`, the type of `a` must be `u8`.  Currently, this rule only applies \"forwards\": it only works if `a` is known to be a builtin integer type when the addition is being checked.  However, type inference could be extended to apply it backwards as well.\n\nI'm not sure if this is relevant in practical usage of Rust.\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/26841/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/26841/timeline", "performed_via_github_app": null, "state_reason": null}