{"url": "https://api.github.com/repos/rust-lang/rust/issues/108683", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/108683/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/108683/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/108683/events", "html_url": "https://github.com/rust-lang/rust/issues/108683", "id": 1607719098, "node_id": "I_kwDOAAsO6M5f09i6", "number": 108683, "title": "ICE due to mapping `f32` to same ident with `const` and `let`", "user": {"login": "JulianKnodt", "id": 7675847, "node_id": "MDQ6VXNlcjc2NzU4NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/7675847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JulianKnodt", "html_url": "https://github.com/JulianKnodt", "followers_url": "https://api.github.com/users/JulianKnodt/followers", "following_url": "https://api.github.com/users/JulianKnodt/following{/other_user}", "gists_url": "https://api.github.com/users/JulianKnodt/gists{/gist_id}", "starred_url": "https://api.github.com/users/JulianKnodt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JulianKnodt/subscriptions", "organizations_url": "https://api.github.com/users/JulianKnodt/orgs", "repos_url": "https://api.github.com/users/JulianKnodt/repos", "events_url": "https://api.github.com/users/JulianKnodt/events{/privacy}", "received_events_url": "https://api.github.com/users/JulianKnodt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}, {"id": 2947369052, "node_id": "MDU6TGFiZWwyOTQ3MzY5MDUy", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-edition-2021", "name": "A-edition-2021", "color": "f7e101", "default": false, "description": "Area: The 2021 edition"}], "state": "closed", "locked": false, "assignee": {"login": "clubby789", "id": 13556931, "node_id": "MDQ6VXNlcjEzNTU2OTMx", "avatar_url": "https://avatars.githubusercontent.com/u/13556931?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clubby789", "html_url": "https://github.com/clubby789", "followers_url": "https://api.github.com/users/clubby789/followers", "following_url": "https://api.github.com/users/clubby789/following{/other_user}", "gists_url": "https://api.github.com/users/clubby789/gists{/gist_id}", "starred_url": "https://api.github.com/users/clubby789/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clubby789/subscriptions", "organizations_url": "https://api.github.com/users/clubby789/orgs", "repos_url": "https://api.github.com/users/clubby789/repos", "events_url": "https://api.github.com/users/clubby789/events{/privacy}", "received_events_url": "https://api.github.com/users/clubby789/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "clubby789", "id": 13556931, "node_id": "MDQ6VXNlcjEzNTU2OTMx", "avatar_url": "https://avatars.githubusercontent.com/u/13556931?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clubby789", "html_url": "https://github.com/clubby789", "followers_url": "https://api.github.com/users/clubby789/followers", "following_url": "https://api.github.com/users/clubby789/following{/other_user}", "gists_url": "https://api.github.com/users/clubby789/gists{/gist_id}", "starred_url": "https://api.github.com/users/clubby789/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clubby789/subscriptions", "organizations_url": "https://api.github.com/users/clubby789/orgs", "repos_url": "https://api.github.com/users/clubby789/repos", "events_url": "https://api.github.com/users/clubby789/events{/privacy}", "received_events_url": "https://api.github.com/users/clubby789/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2023-03-02T23:58:10Z", "updated_at": "2023-05-11T07:57:19Z", "closed_at": "2023-05-11T07:57:19Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\nhow to create smaller examples.\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\n-->\n\nWhile technically this could shouldn't compile, it shouldn't ICE\n\n### Code\n\n```Rust\nfn main() {}\nfn example(\n    planarity_epsilon: f32\n) -> f32 {\n    (0..10).map(|_| {\n        const EPS: f32 = 3e-2;\n        let EPS = planarity_epsilon;\n        let z = 0.01 * EPS;\n        return z;\n    }).sum::<f32>()\n}\n```\n\n\n### Meta\nHappens on playground on currrent nightly (1.69.0)\n\n### Error output\n\n```\nCompiling playground v0.0.1 (/playground)\nwarning: floating-point types cannot be used in patterns\n  --> src/main.rs:10:13\n   |\n10 |         let EPS = planarity_epsilon;\n   |             ^^^\n   |\n   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n   = note: for more information, [see issue #41620 <https://github.com/rust-lang/rust/issues/41620>](https://github.com/rust-lang/rust/issues/41620)\n   = note: `#[warn(illegal_floating_point_literal_pattern)]` on by default\n\nerror[[E0005]](https://doc.rust-lang.org/nightly/error_codes/E0005.html): refutable pattern in local binding\n  --> src/main.rs:10:13\n   |\n9  |         const EPS: f32 = 3e-2;\n   |         -------------- constant defined here\n10 |         let EPS = planarity_epsilon;\n   |             ^^^\n   |             |\n   |             pattern `_` not covered\n   |             missing patterns are not covered because `eps` is interpreted as a constant pattern, not a new variable\n   |             help: introduce a variable instead: `eps_var`\n   |\n   = note: the matched value is of type `f32`\nthread 'rustc' panicked at 'called `Option::unwrap()` on a `None` value', compiler/rustc_mir_build/src/build/expr/as_place.rs:258:31\nstack backtrace:\n   0:     0x7f96fb18aafa - std::backtrace_rs::backtrace::libunwind::trace::h34498aba16c27c5d\n                               at /rustc/f77bfb7336f21bfe6a5fb5f7358d4406e2597289/library/std/src/../../backtrace/src/backtrace/libunwind.rs:93:5\n   1:     0x7f96fb18aafa - std::backtrace_rs::backtrace::trace_unsynchronized::h9289a4d08e8f8065\n                               at /rustc/f77bfb7336f21bfe6a5fb5f7358d4406e2597289/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n   2:     0x7f96fb18aafa - std::sys_common::backtrace::_print_fmt::hdc48108f3bcc17d7\n                               at /rustc/f77bfb7336f21bfe6a5fb5f7358d4406e2597289/library/std/src/sys_common/backtrace.rs:65:5\n   3:     0x7f96fb18aafa - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::h0e26d08b27a6dd1d\n                               at /rustc/f77bfb7336f21bfe6a5fb5f7358d4406e2597289/library/std/src/sys_common/backtrace.rs:44:22\n   4:     0x7f96fb1ee27e - core::fmt::write::h72fef7731620cf25\n                               at /rustc/f77bfb7336f21bfe6a5fb5f7358d4406e2597289/library/core/src/fmt/mod.rs:1232:17\n   5:     0x7f96fb17da65 - std::io::Write::write_fmt::h2c6467b36a994dc1\n                               at /rustc/f77bfb7336f21bfe6a5fb5f7358d4406e2597289/library/std/src/io/mod.rs:1684:15\n   6:     0x7f96fb18a8c5 - std::sys_common::backtrace::_print::h9ed7190f3ab4032b\n                               at /rustc/f77bfb7336f21bfe6a5fb5f7358d4406e2597289/library/std/src/sys_common/backtrace.rs:47:5\n   7:     0x7f96fb18a8c5 - std::sys_common::backtrace::print::h82d15082d5d08ddd\n                               at /rustc/f77bfb7336f21bfe6a5fb5f7358d4406e2597289/library/std/src/sys_common/backtrace.rs:34:9\n   8:     0x7f96fb18d63f - std::panicking::default_hook::{{closure}}::h8c24b2c3eee8f54e\n                               at /rustc/f77bfb7336f21bfe6a5fb5f7358d4406e2597289/library/std/src/panicking.rs:271:22\n   9:     0x7f96fb18d37b - std::panicking::default_hook::hcd9302e49bce35d9\n                               at /rustc/f77bfb7336f21bfe6a5fb5f7358d4406e2597289/library/std/src/panicking.rs:290:9\n  10:     0x7f96fe3f93f5 - rustc_driver_impl[4d5cb03342eaf40]::DEFAULT_HOOK::{closure#0}::{closure#0}\n  11:     0x7f96fb18de7d - <alloc::boxed::Box<F,A> as core::ops::function::Fn<Args>>::call::h157f8bd1e3a60b9e\n                               at /rustc/f77bfb7336f21bfe6a5fb5f7358d4406e2597289/library/alloc/src/boxed.rs:2001:9\n  12:     0x7f96fb18de7d - std::panicking::rust_panic_with_hook::h8dc9549cbbb83c93\n                               at /rustc/f77bfb7336f21bfe6a5fb5f7358d4406e2597289/library/std/src/panicking.rs:696:13\n  13:     0x7f96fb18dbb2 - std::panicking::begin_panic_handler::{{closure}}::h9b0840da0b1a0862\n                               at /rustc/f77bfb7336f21bfe6a5fb5f7358d4406e2597289/library/std/src/panicking.rs:581:13\n  14:     0x7f96fb18af66 - std::sys_common::backtrace::__rust_end_short_backtrace::h1673dd05d1a0dc8f\n                               at /rustc/f77bfb7336f21bfe6a5fb5f7358d4406e2597289/library/std/src/sys_common/backtrace.rs:137:18\n  15:     0x7f96fb18d902 - rust_begin_unwind\n                               at /rustc/f77bfb7336f21bfe6a5fb5f7358d4406e2597289/library/std/src/panicking.rs:579:5\n  16:     0x7f96fb1ea5e3 - core::panicking::panic_fmt::hdf244b8669b920f6\n                               at /rustc/f77bfb7336f21bfe6a5fb5f7358d4406e2597289/library/core/src/panicking.rs:64:14\n  17:     0x7f96fb1ea67d - core::panicking::panic::hf55dbc2325ee7c2c\n                               at /rustc/f77bfb7336f21bfe6a5fb5f7358d4406e2597289/library/core/src/panicking.rs:114:5\n  18:     0x7f96fc82bc07 - <rustc_mir_build[49031d7458832483]::build::expr::as_place::PlaceBuilder>::to_place\n  19:     0x7f96fd432c23 - <rustc_mir_build[49031d7458832483]::build::Builder>::match_simplified_candidates\n  20:     0x7f96fd439b36 - <rustc_mir_build[49031d7458832483]::build::Builder>::match_candidates\n  21:     0x7f96fc8388e8 - <rustc_mir_build[49031d7458832483]::build::Builder>::lower_match_tree\n  22:     0x7f96fc8482e7 - <rustc_mir_build[49031d7458832483]::build::Builder>::place_into_pattern\n  23:     0x7f96fc83db90 - <rustc_mir_build[49031d7458832483]::build::Builder>::ast_block_stmts\n  24:     0x7f96fc839be0 - <rustc_mir_build[49031d7458832483]::build::Builder>::ast_block\n  25:     0x7f96fc81f65e - <rustc_mir_build[49031d7458832483]::build::Builder>::expr_into_dest\n  26:     0x7f96fc8440d6 - <rustc_mir_build[49031d7458832483]::build::Builder>::as_temp_inner\n  27:     0x7f96fc82052c - <rustc_mir_build[49031d7458832483]::build::Builder>::expr_into_dest\n  28:     0x7f96fc81e795 - <rustc_mir_build[49031d7458832483]::build::Builder>::expr_into_dest\n  29:     0x7f96fc81e795 - <rustc_mir_build[49031d7458832483]::build::Builder>::expr_into_dest\n  30:     0x7f96fd451041 - rustc_mir_build[49031d7458832483]::build::mir_built\n  31:     0x7f96fd5bef2d - rustc_query_system[a5365f90e46f8ee6]::query::plumbing::try_execute_query::<rustc_query_impl[63b69567f1ef9f27]::queries::mir_built, rustc_query_impl[63b69567f1ef9f27]::plumbing::QueryCtxt>\n  32:     0x7f96fccf55fd - rustc_mir_transform[45b77d39479c82e6]::check_unsafety::unsafety_check_result\n  33:     0x7f96fd208847 - rustc_query_system[a5365f90e46f8ee6]::query::plumbing::try_execute_query::<rustc_query_impl[63b69567f1ef9f27]::queries::unsafety_check_result, rustc_query_impl[63b69567f1ef9f27]::plumbing::QueryCtxt>\n  34:     0x7f96fd20843a - <rustc_query_impl[63b69567f1ef9f27]::Queries as rustc_middle[9cf018341417739a]::ty::query::QueryEngine>::unsafety_check_result\n  35:     0x7f96fccf7ea2 - rustc_mir_transform[45b77d39479c82e6]::check_unsafety::unsafety_check_result\n  36:     0x7f96fd208847 - rustc_query_system[a5365f90e46f8ee6]::query::plumbing::try_execute_query::<rustc_query_impl[63b69567f1ef9f27]::queries::unsafety_check_result, rustc_query_impl[63b69567f1ef9f27]::plumbing::QueryCtxt>\n  37:     0x7f96fd6134c0 - rustc_mir_transform[45b77d39479c82e6]::mir_const\n  38:     0x7f96fd611c9e - rustc_query_system[a5365f90e46f8ee6]::query::plumbing::try_execute_query::<rustc_query_impl[63b69567f1ef9f27]::queries::mir_const, rustc_query_impl[63b69567f1ef9f27]::plumbing::QueryCtxt>\n  39:     0x7f96fd242538 - rustc_mir_transform[45b77d39479c82e6]::mir_promoted\n  40:     0x7f96fd2405f1 - rustc_query_system[a5365f90e46f8ee6]::query::plumbing::try_execute_query::<rustc_query_impl[63b69567f1ef9f27]::queries::mir_promoted, rustc_query_impl[63b69567f1ef9f27]::plumbing::QueryCtxt>\n  41:     0x7f96fd23ef01 - rustc_borrowck[ddc587a7aa92d709]::mir_borrowck\n  42:     0x7f96fd4fbe1d - rustc_query_system[a5365f90e46f8ee6]::query::plumbing::try_execute_query::<rustc_query_impl[63b69567f1ef9f27]::queries::mir_borrowck, rustc_query_impl[63b69567f1ef9f27]::plumbing::QueryCtxt>\n  43:     0x7f96fc85878f - rustc_data_structures[dc1364207e8b6339]::sync::par_for_each_in::<&[rustc_span[25e4e29a33f2c9a0]::def_id::LocalDefId], <rustc_middle[9cf018341417739a]::hir::map::Map>::par_body_owners<rustc_interface[7d9b2342fec184f0]::passes::analysis::{closure#2}::{closure#0}>::{closure#0}>\n  44:     0x7f96fc8583ae - <rustc_session[947bba98393ca4fe]::session::Session>::time::<(), rustc_interface[7d9b2342fec184f0]::passes::analysis::{closure#2}>\n  45:     0x7f96fc857b30 - rustc_interface[7d9b2342fec184f0]::passes::analysis\n  46:     0x7f96fdc56ded - rustc_query_system[a5365f90e46f8ee6]::query::plumbing::try_execute_query::<rustc_query_impl[63b69567f1ef9f27]::queries::analysis, rustc_query_impl[63b69567f1ef9f27]::plumbing::QueryCtxt>\n  47:     0x7f96fdc56aef - <rustc_query_impl[63b69567f1ef9f27]::Queries as rustc_middle[9cf018341417739a]::ty::query::QueryEngine>::analysis\n  48:     0x7f96fda7b476 - <rustc_middle[9cf018341417739a]::ty::context::GlobalCtxt>::enter::<rustc_driver_impl[4d5cb03342eaf40]::run_compiler::{closure#1}::{closure#2}::{closure#4}, core[87ae5becae78eb7d]::result::Result<(), rustc_span[25e4e29a33f2c9a0]::ErrorGuaranteed>>\n  49:     0x7f96fd64e038 - rustc_span[25e4e29a33f2c9a0]::with_source_map::<core[87ae5becae78eb7d]::result::Result<(), rustc_span[25e4e29a33f2c9a0]::ErrorGuaranteed>, rustc_interface[7d9b2342fec184f0]::interface::run_compiler<core[87ae5becae78eb7d]::result::Result<(), rustc_span[25e4e29a33f2c9a0]::ErrorGuaranteed>, rustc_driver_impl[4d5cb03342eaf40]::run_compiler::{closure#1}>::{closure#0}::{closure#0}>\n  50:     0x7f96fd6456bc - std[97c6a3d67a80fb6d]::sys_common::backtrace::__rust_begin_short_backtrace::<rustc_interface[7d9b2342fec184f0]::util::run_in_thread_pool_with_globals<rustc_interface[7d9b2342fec184f0]::interface::run_compiler<core[87ae5becae78eb7d]::result::Result<(), rustc_span[25e4e29a33f2c9a0]::ErrorGuaranteed>, rustc_driver_impl[4d5cb03342eaf40]::run_compiler::{closure#1}>::{closure#0}, core[87ae5becae78eb7d]::result::Result<(), rustc_span[25e4e29a33f2c9a0]::ErrorGuaranteed>>::{closure#0}::{closure#0}, core[87ae5becae78eb7d]::result::Result<(), rustc_span[25e4e29a33f2c9a0]::ErrorGuaranteed>>\n  51:     0x7f96fd6450ea - <<std[97c6a3d67a80fb6d]::thread::Builder>::spawn_unchecked_<rustc_interface[7d9b2342fec184f0]::util::run_in_thread_pool_with_globals<rustc_interface[7d9b2342fec184f0]::interface::run_compiler<core[87ae5becae78eb7d]::result::Result<(), rustc_span[25e4e29a33f2c9a0]::ErrorGuaranteed>, rustc_driver_impl[4d5cb03342eaf40]::run_compiler::{closure#1}>::{closure#0}, core[87ae5becae78eb7d]::result::Result<(), rustc_span[25e4e29a33f2c9a0]::ErrorGuaranteed>>::{closure#0}::{closure#0}, core[87ae5becae78eb7d]::result::Result<(), rustc_span[25e4e29a33f2c9a0]::ErrorGuaranteed>>::{closure#1} as core[87ae5becae78eb7d]::ops::function::FnOnce<()>>::call_once::{shim:vtable#0}\n  52:     0x7f96fb197cb3 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::hfea88e05acd13bd2\n                               at /rustc/f77bfb7336f21bfe6a5fb5f7358d4406e2597289/library/alloc/src/boxed.rs:1987:9\n  53:     0x7f96fb197cb3 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::h31d26542010403e8\n                               at /rustc/f77bfb7336f21bfe6a5fb5f7358d4406e2597289/library/alloc/src/boxed.rs:1987:9\n  54:     0x7f96fb197cb3 - std::sys::unix::thread::Thread::new::thread_start::h6a6d49bd896852f8\n                               at /rustc/f77bfb7336f21bfe6a5fb5f7358d4406e2597289/library/std/src/sys/unix/thread.rs:108:17\n  55:     0x7f96fb05d609 - start_thread\n  56:     0x7f96faf80133 - clone\n  57:                0x0 - <unknown>\n\nerror: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\n\nnote: rustc 1.69.0-nightly (f77bfb733 2023-03-01) running on x86_64-unknown-linux-gnu\n\nnote: compiler flags: --crate-type bin -C embed-bitcode=no -C codegen-units=1 -C debuginfo=2\n\nnote: some of the compiler flags provided by cargo are hidden\n\nquery stack during panic:\n#0 [mir_built] building MIR for `example::{closure#0}`\n#1 [unsafety_check_result] unsafety-checking `example::{closure#0}`\n#2 [unsafety_check_result] unsafety-checking `example`\n#3 [mir_const] preparing `example` for borrow checking\n#4 [mir_promoted] processing MIR for `example`\n#5 [mir_borrowck] borrow-checking `example`\n#6 [analysis] running analysis passes on this crate\nend of query stack\nFor more information about this error, try `rustc --explain E0005`.\nwarning: `playground` (bin \"playground\") generated 1 warning\nerror: could not compile `playground` due to previous error; 1 warning emitted\n```\n\n<!--\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\n-->\n<details><summary><strong>Backtrace</strong></summary>\nCompiling playground v0.0.1 (/playground)\nwarning: floating-point types cannot be used in patterns\n --> src/main.rs:8:13\n  |\n8 |         let EPS = planarity_epsilon;\n  |             ^^^\n  |\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n  = note: for more information, [see issue #41620 <https://github.com/rust-lang/rust/issues/41620>](https://github.com/rust-lang/rust/issues/41620)\n  = note: `#[warn(illegal_floating_point_literal_pattern)]` on by default\n\nerror[[E0005]](https://doc.rust-lang.org/nightly/error_codes/E0005.html): refutable pattern in local binding\n --> src/main.rs:8:13\n  |\n7 |         const EPS: f32 = 3e-2;\n  |         -------------- constant defined here\n8 |         let EPS = planarity_epsilon;\n  |             ^^^\n  |             |\n  |             pattern `_` not covered\n  |             missing patterns are not covered because `eps` is interpreted as a constant pattern, not a new variable\n  |             help: introduce a variable instead: `eps_var`\n  |\n  = note: the matched value is of type `f32`\n\nthread 'rustc' panicked at 'called `Option::unwrap()` on a `None` value', compiler/rustc_mir_build/src/build/expr/as_place.rs:258:31\nstack backtrace:\n   0: rust_begin_unwind\n             at /rustc/f77bfb7336f21bfe6a5fb5f7358d4406e2597289/library/std/src/panicking.rs:579:5\n   1: core::panicking::panic_fmt\n             at /rustc/f77bfb7336f21bfe6a5fb5f7358d4406e2597289/library/core/src/panicking.rs:64:14\n   2: core::panicking::panic\n             at /rustc/f77bfb7336f21bfe6a5fb5f7358d4406e2597289/library/core/src/panicking.rs:114:5\n   3: <rustc_mir_build::build::expr::as_place::PlaceBuilder>::to_place\n   4: <rustc_mir_build::build::Builder>::match_simplified_candidates\n   5: <rustc_mir_build::build::Builder>::match_candidates\n   6: <rustc_mir_build::build::Builder>::lower_match_tree\n   7: <rustc_mir_build::build::Builder>::place_into_pattern\n   8: <rustc_mir_build::build::Builder>::ast_block_stmts\n   9: <rustc_mir_build::build::Builder>::ast_block\n  10: <rustc_mir_build::build::Builder>::expr_into_dest\n  11: <rustc_mir_build::build::Builder>::as_temp_inner\n  12: <rustc_mir_build::build::Builder>::expr_into_dest\n  13: <rustc_mir_build::build::Builder>::expr_into_dest\n  14: <rustc_mir_build::build::Builder>::expr_into_dest\n  15: rustc_mir_build::build::mir_built\n  16: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::queries::mir_built, rustc_query_impl::plumbing::QueryCtxt>\n  17: rustc_mir_transform::check_unsafety::unsafety_check_result\n  18: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::queries::unsafety_check_result, rustc_query_impl::plumbing::QueryCtxt>\n  19: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::unsafety_check_result\n  20: rustc_mir_transform::check_unsafety::unsafety_check_result\n  21: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::queries::unsafety_check_result, rustc_query_impl::plumbing::QueryCtxt>\n  22: rustc_mir_transform::mir_const\n  23: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::queries::mir_const, rustc_query_impl::plumbing::QueryCtxt>\n  24: rustc_mir_transform::mir_promoted\n  25: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::queries::mir_promoted, rustc_query_impl::plumbing::QueryCtxt>\n  26: rustc_borrowck::mir_borrowck\n  27: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::queries::mir_borrowck, rustc_query_impl::plumbing::QueryCtxt>\n  28: rustc_data_structures::sync::par_for_each_in::<&[rustc_span::def_id::LocalDefId], <rustc_middle::hir::map::Map>::par_body_owners<rustc_interface::passes::analysis::{closure#2}::{closure#0}>::{closure#0}>\n  29: <rustc_session::session::Session>::time::<(), rustc_interface::passes::analysis::{closure#2}>\n  30: rustc_interface::passes::analysis\n  31: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::queries::analysis, rustc_query_impl::plumbing::QueryCtxt>\n  32: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::analysis\n  33: <rustc_middle::ty::context::GlobalCtxt>::enter::<rustc_driver_impl::run_compiler::{closure#1}::{closure#2}::{closure#4}, core::result::Result<(), rustc_span::ErrorGuaranteed>>\n  34: rustc_span::with_source_map::<core::result::Result<(), rustc_span::ErrorGuaranteed>, rustc_interface::interface::run_compiler<core::result::Result<(), rustc_span::ErrorGuaranteed>, rustc_driver_impl::run_compiler::{closure#1}>::{closure#0}::{closure#0}>\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\n\nerror: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\n\nnote: rustc 1.69.0-nightly (f77bfb733 2023-03-01) running on x86_64-unknown-linux-gnu\n\nnote: compiler flags: --crate-type bin -C embed-bitcode=no -C codegen-units=1 -C debuginfo=2\n\nnote: some of the compiler flags provided by cargo are hidden\n\nquery stack during panic:\n#0 [mir_built] building MIR for `example::{closure#0}`\n#1 [unsafety_check_result] unsafety-checking `example::{closure#0}`\n#2 [unsafety_check_result] unsafety-checking `example`\n#3 [mir_const] preparing `example` for borrow checking\n#4 [mir_promoted] processing MIR for `example`\n#5 [mir_borrowck] borrow-checking `example`\n#6 [analysis] running analysis passes on this crate\nend of query stack\nFor more information about this error, try `rustc --explain E0005`.\nwarning: `playground` (bin \"playground\") generated 1 warning\nerror: could not compile `playground` due to previous error; 1 warning emitted\n<p>\n```\n<backtrace>\n```\n\n</p>\n</details>\n\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"clubby789\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/108683/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/108683/timeline", "performed_via_github_app": null, "state_reason": "completed"}