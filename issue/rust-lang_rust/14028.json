{"url": "https://api.github.com/repos/rust-lang/rust/issues/14028", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/14028/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/14028/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/14028/events", "html_url": "https://github.com/rust-lang/rust/issues/14028", "id": 33054159, "node_id": "MDU6SXNzdWUzMzA1NDE1OQ==", "number": 14028, "title": "std::path::posix::Path should not automatically normalize", "user": {"login": "alanfalloon", "id": 53138, "node_id": "MDQ6VXNlcjUzMTM4", "avatar_url": "https://avatars.githubusercontent.com/u/53138?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alanfalloon", "html_url": "https://github.com/alanfalloon", "followers_url": "https://api.github.com/users/alanfalloon/followers", "following_url": "https://api.github.com/users/alanfalloon/following{/other_user}", "gists_url": "https://api.github.com/users/alanfalloon/gists{/gist_id}", "starred_url": "https://api.github.com/users/alanfalloon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alanfalloon/subscriptions", "organizations_url": "https://api.github.com/users/alanfalloon/orgs", "repos_url": "https://api.github.com/users/alanfalloon/repos", "events_url": "https://api.github.com/users/alanfalloon/events{/privacy}", "received_events_url": "https://api.github.com/users/alanfalloon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2014-05-08T04:39:16Z", "updated_at": "2015-02-04T08:47:21Z", "closed_at": "2015-02-04T08:47:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Because of symlinks, on POSIX systems, in general you can't claim that `foo/bar/../baz` is the same path as `foo/baz`. If `foo/bar` is a symlink with target `flip/flop` then the abspath of `foo/bar/../baz` is actually `foo/flip/baz`. Normalizing the path symbolically changes the meaning of the path. (reducing `//` to `/` is still valid though)\n\nOther issues like #11650 are symptoms of this issue, `execvp` is not the only call that changes behaviour when path components are stripped out.\n\nThe `std::path::posix::Path` module needs to leave the paths un-normalized internally, and re-introduce an explicit `normpath` method (distinct from `os::make_absolute` for the reasons outlined above).\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/14028/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/14028/timeline", "performed_via_github_app": null, "state_reason": "completed"}