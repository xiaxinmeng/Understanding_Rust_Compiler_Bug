{"url": "https://api.github.com/repos/rust-lang/rust/issues/56368", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/56368/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/56368/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/56368/events", "html_url": "https://github.com/rust-lang/rust/issues/56368", "id": 386030513, "node_id": "MDU6SXNzdWUzODYwMzA1MTM=", "number": 56368, "title": "E0277 error is confusing when compile fails using the last implementor for a trait", "user": {"login": "ronjouch", "id": 522085, "node_id": "MDQ6VXNlcjUyMjA4NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/522085?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ronjouch", "html_url": "https://github.com/ronjouch", "followers_url": "https://api.github.com/users/ronjouch/followers", "following_url": "https://api.github.com/users/ronjouch/following{/other_user}", "gists_url": "https://api.github.com/users/ronjouch/gists{/gist_id}", "starred_url": "https://api.github.com/users/ronjouch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ronjouch/subscriptions", "organizations_url": "https://api.github.com/users/ronjouch/orgs", "repos_url": "https://api.github.com/users/ronjouch/repos", "events_url": "https://api.github.com/users/ronjouch/events{/privacy}", "received_events_url": "https://api.github.com/users/ronjouch/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1596121013, "node_id": "MDU6TGFiZWwxNTk2MTIxMDEz", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-confusing", "name": "D-confusing", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error that should be reworked"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-30T04:12:41Z", "updated_at": "2019-11-18T03:06:40Z", "closed_at": "2019-11-18T03:06:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Description\r\n\r\nThis is a followup of forum post [[Solved] Need help understanding compilation error with str.contains / String / Pattern](https://users.rust-lang.org/t/solved-need-help-understanding-compilation-error-with-str-contains-string-pattern/22768).\r\n\r\nHere's a function that compiles:\r\n\r\n```rust\r\nfn compiles() -> bool {\r\n    let word = String::from(\"hello\");\r\n    \"hello world\".contains(&word)\r\n}\r\n```\r\n\r\nBut if I omit passing a *reference* to `contains` and pass the actual `String`:\r\n\r\n```rust\r\nfn wont_compile() -> bool {\r\n    let word = String::from(\"hello\");\r\n    \"hello world\".contains(word) // <- missing \"&\" here before \"word\"\r\n}\r\n```\r\n\r\n, then compilation fails with error\r\n\r\n```rust\r\nerror[E0277]: expected a `std::ops::FnMut<(char,)>` closure, found `std::string::String`        \r\n  --> src/lib.rs:96:19                                                                          \r\n   |                                                                                            \r\n96 |     \"hello world\".contains(word)                                                           \r\n   |                   ^^^^^^^^ expected an `FnMut<(char,)>` closure, found `std::string::String`\r\n   |                                                                                            \r\n   = help: the trait `std::ops::FnMut<(char,)>` is not implemented for `std::string::String`    \r\n   = note: required because of the requirements on the impl of `std::str::pattern::Pattern<'_>` for `std::string::String`\r\n```\r\n\r\nIn this context, as a babbling Rustacean, I had zarroo idea of what rustc was trying to tell me and, assuming the solution (which I found by looking up a `.contains()` example in the Rust book, where a `&` reference was used), my incorrect concluding puzzlement was:\r\n\r\n- How a `String` isn't a `std::ops::FnMut<(char,)>`, but  a reference to a `String` is?\r\n- And what is a closure even doing here, where we're all talking `String`s?\r\n\r\nAs pointed by forum user `krdln`, what's happening is that, as documented by [str.contains](https://doc.rust-lang.org/std/primitive.str.html#method.contains), I should have passed a [Pattern](https://doc.rust-lang.org/std/str/pattern/trait.Pattern.html), whose 6 implementors are:\r\n\r\n```rust\r\nimpl<'a> Pattern<'a> for char\r\nimpl<'a, 'b> Pattern<'a> for &'b str\r\nimpl<'a, 'b> Pattern<'a> for &'b String\r\nimpl<'a, 'b> Pattern<'a> for &'b [char]\r\nimpl<'a, 'b, 'c> Pattern<'a> for &'c &'b str\r\nimpl<'a, F> Pattern<'a> for F where F: FnMut(char) -> bool\r\n```\r\n\r\n, so rustc's logic behind the error message was:\r\n\r\n> *\"You\u2019ve passed me something that is not a `char`, `&str`, `&String`, `&[char]` nor `&&str`, so it must be some other type `F`! If you want an `F` to be a pattern, it must implement `FnMut`!\"*\r\n\r\n## Proposal\r\n\r\nWhen rustc **fails** to compile using the **last** (fallback? generic?) implementor for a trait,\r\n\r\n1. Warn that it reached the last implementor.\r\n2. List the missed implementors (always? If short enough? Abbreviated if too long? Only the count if too long? I don't know).\r\n\r\nThe updated, friendlier error message could look something like that:\r\n\r\n```rust\r\nerror[E0277]: expected a `std::ops::FnMut<(char,)>` closure, found `std::string::String`        \r\n  --> src/lib.rs:96:19                                                                          \r\n   |                                                                                            \r\n96 |     \"hello world\".contains(word)                                                           \r\n   |                   ^^^^^^^^ expected an `FnMut<(char,)>` closure, found `std::string::String`\r\n   |                                                                                            \r\n   = help: the trait `std::ops::FnMut<(char,)>` is not implemented for `std::string::String`    \r\n// START ADDITION PROPOSAL =========================================\r\n   = help: reached last generic implementor for `std::str::pattern::Pattern<'_>`, maybe you meant to use one of the 5 other implementors:\r\n           char, &'b str, &'b String, &'b [char], &'c &'b str\r\n// END ADDITION PROPOSAL   =========================================\r\n   = note: required because of the requirements on the impl of `std::str::pattern::Pattern<'_>` for `std::string::String`\r\n```\r\n\r\n*<sub>Note: hope the proposal makes sense, or at least you get the intention! I have no idea what I'm doing! This is my first Rust bug! I haven't even finished the Rust book! One last exclamation mark for the road!</sub>*", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/56368/reactions", "total_count": 5, "+1": 5, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/56368/timeline", "performed_via_github_app": null, "state_reason": "completed"}