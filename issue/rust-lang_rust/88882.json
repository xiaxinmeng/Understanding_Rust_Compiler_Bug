{"url": "https://api.github.com/repos/rust-lang/rust/issues/88882", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/88882/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/88882/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/88882/events", "html_url": "https://github.com/rust-lang/rust/issues/88882", "id": 994126147, "node_id": "MDU6SXNzdWU5OTQxMjYxNDc=", "number": 88882, "title": "ICE: compiling binary against lib with `feature(generic_const_exprs)`", "user": {"login": "gkanwar", "id": 1031540, "node_id": "MDQ6VXNlcjEwMzE1NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1031540?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gkanwar", "html_url": "https://github.com/gkanwar", "followers_url": "https://api.github.com/users/gkanwar/followers", "following_url": "https://api.github.com/users/gkanwar/following{/other_user}", "gists_url": "https://api.github.com/users/gkanwar/gists{/gist_id}", "starred_url": "https://api.github.com/users/gkanwar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gkanwar/subscriptions", "organizations_url": "https://api.github.com/users/gkanwar/orgs", "repos_url": "https://api.github.com/users/gkanwar/repos", "events_url": "https://api.github.com/users/gkanwar/events{/privacy}", "received_events_url": "https://api.github.com/users/gkanwar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1282665911, "node_id": "MDU6TGFiZWwxMjgyNjY1OTEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-generics", "name": "A-const-generics", "color": "f7e101", "default": false, "description": "Area: const generics (parameters and arguments)"}, {"id": 2341291797, "node_id": "MDU6TGFiZWwyMzQxMjkxNzk3", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-generic_const_exprs", "name": "F-generic_const_exprs", "color": "f9c0cc", "default": false, "description": "`#![feature(generic_const_exprs)]`"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2021-09-12T10:54:22Z", "updated_at": "2021-09-24T08:18:30Z", "closed_at": "2021-09-24T08:18:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am finding an ICE when splitting a single binary with `#![feature(generic_const_exprs)]` into a binary plus a library crate that implements the structs and traits. This only occurs when I fail to add `#![feature(generic_const_exprs)]` to the binary crate as well. (Am I using the terminology crate correctly? I am still new to the whole rust environment...)\r\n\r\nI think it is reasonable to expect the feature to be marked in the binary as well, but I would not expect an ICE when it is left out.\r\n\r\n### Code\r\nThis code compiles correctly as a standalone binary:\r\n```Rust\r\n#![feature(generic_const_exprs)]\r\n\r\npub trait TraitWithAssocConst {\r\n  const SIZE: usize;\r\n}\r\n\r\npub struct Test;\r\nimpl TraitWithAssocConst for Test {\r\n  const SIZE: usize = 8;\r\n}\r\n\r\npub trait TraitDependingOnAssocConst {\r\n  fn dummy<T>(&self, u: &T) -> ()\r\n  where T : TraitWithAssocConst,\r\n  [(); T::SIZE]: ;\r\n}\r\n\r\npub struct Test2;\r\nimpl TraitDependingOnAssocConst for Test2 {\r\n  fn dummy<T>(&self, u: &T) -> ()\r\n  where T : TraitWithAssocConst,\r\n  [(); T::SIZE]:\r\n  {\r\n  }\r\n}\r\n\r\nfn main() -> () {\r\n  let t1 = Test;\r\n  let t2 = Test2;\r\n  t2.dummy(&t1);\r\n}\r\n```\r\n\r\nNow I split this into a library crate `mylib` and a binary depending on it, but fail to include `#![feature(generic_const_exprs)]` in the binary:\r\n```Rust\r\n// Binary crate:\r\n// I \"forget\" to enable the feature here.\r\n// #![feature(generic_const_exprs)]\r\n\r\nuse mylib::*;\r\n\r\nfn main() -> () {\r\n  let t1 = Test;\r\n  let t2 = Test2;\r\n  t2.dummy(&t1);\r\n}\r\n```\r\n\r\n```Rust\r\n// Library crate mylib:\r\n// I do enable the feature here.\r\n#![feature(generic_const_exprs)]\r\n\r\npub trait TraitWithAssocConst {\r\n  const SIZE: usize;\r\n}\r\n\r\npub struct Test;\r\nimpl TraitWithAssocConst for Test {\r\n  const SIZE: usize = 8;\r\n}\r\n\r\npub trait TraitDependingOnAssocConst {\r\n  fn dummy<T>(&self, u: &T) -> ()\r\n  where T : TraitWithAssocConst,\r\n  [(); T::SIZE]: ;\r\n}\r\n\r\npub struct Test2;\r\nimpl TraitDependingOnAssocConst for Test2 {\r\n  fn dummy<T>(&self, u: &T) -> ()\r\n  where T : TraitWithAssocConst,\r\n  [(); T::SIZE]:\r\n  {\r\n  }\r\n}\r\n```\r\n\r\nThe binary then fails to compile with the ICE trace given below.\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.57.0-nightly (8c2b6ea37 2021-09-11)\r\nbinary: rustc\r\ncommit-hash: 8c2b6ea37d7719a0370bd404030eef9702c1752c\r\ncommit-date: 2021-09-11\r\nhost: x86_64-apple-darwin\r\nrelease: 1.57.0-nightly\r\nLLVM version: 13.0.0\r\n```\r\n\r\n### Error output\r\n\r\n```\r\n   Compiling tmp v0.1.0 (/Users/gkanwar/tmp)\r\nwarning: the feature `generic_const_exprs` is incomplete and may not be safe to use and/or cause compiler crashes\r\n --> src/lib/lib.rs:1:12\r\n  |\r\n1 | #![feature(generic_const_exprs)]\r\n  |            ^^^^^^^^^^^^^^^^^^^\r\n  |\r\n  = note: `#[warn(incomplete_features)]` on by default\r\n  = note: see issue #76560 <https://github.com/rust-lang/rust/issues/76560> for more information\r\n\r\nwarning: unused variable: `u`\r\n  --> src/lib/lib.rs:20:22\r\n   |\r\n20 |   fn dummy<T>(&self, u: &T) -> ()\r\n   |                      ^ help: if this is intentional, prefix it with an underscore: `_u`\r\n   |\r\n   = note: `#[warn(unused_variables)]` on by default\r\n\r\nwarning: `tmp` (lib) generated 2 warnings\r\nwarning: Error finalizing incremental compilation session directory `/Users/gkanwar/tmp/target/debug/incremental/test-1wbxzdr6ui2on/s-g2aqzqcst1-1hgx4sl-working`: No such file or directory (os error 2)\r\n\r\nerror: internal compiler error: Encountered error `Unimplemented` selecting `Binder(<^0 as mylib::TraitWithAssocConst>, [Ty(Anon)])` during codegen\r\n  |\r\n  = note: delayed at compiler/rustc_trait_selection/src/traits/codegen.rs:68:32\r\n\r\nerror: internal compiler error: ty::ConstKind::Error constructed but no error reported.\r\n  |\r\n  = note: delayed at /rustc/8c2b6ea37d7719a0370bd404030eef9702c1752c/compiler/rustc_middle/src/ty/consts.rs:183:43\r\n\r\nerror: internal compiler error: `ErrorReported` without an error\r\n --> src/bin/test.rs:9:6\r\n  |\r\n9 |   t2.dummy(&t1);\r\n  |      ^^^^^\r\n  |\r\n  = note: delayed at compiler/rustc_trait_selection/src/traits/error_reporting/mod.rs:843:31\r\n\r\nthread 'rustc' panicked at 'no errors encountered even though `delay_span_bug` issued', compiler/rustc_errors/src/lib.rs:1165:13\r\nstack backtrace:\r\n   0: _rust_begin_unwind\r\n   1: std::panicking::begin_panic_fmt\r\n   2: rustc_errors::HandlerInner::flush_delayed\r\n   3: <rustc_errors::HandlerInner as core::ops::drop::Drop>::drop\r\n   4: core::ptr::drop_in_place<rustc_session::parse::ParseSess>\r\n   5: <alloc::rc::Rc<T> as core::ops::drop::Drop>::drop\r\n   6: core::ptr::drop_in_place<rustc_interface::interface::Compiler>\r\n   7: rustc_span::with_source_map\r\n   8: scoped_tls::ScopedKey<T>::set\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.57.0-nightly (8c2b6ea37 2021-09-11) running on x86_64-apple-darwin\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C split-debuginfo=unpacked -C debuginfo=2 -C incremental --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\nend of query stack\r\nwarning: `tmp` (bin \"test\") generated 1 warning\r\nerror: could not compile `tmp`; 1 warning emitted\r\n```\r\n", "closed_by": {"login": "BoxyUwU", "id": 21149742, "node_id": "MDQ6VXNlcjIxMTQ5NzQy", "avatar_url": "https://avatars.githubusercontent.com/u/21149742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BoxyUwU", "html_url": "https://github.com/BoxyUwU", "followers_url": "https://api.github.com/users/BoxyUwU/followers", "following_url": "https://api.github.com/users/BoxyUwU/following{/other_user}", "gists_url": "https://api.github.com/users/BoxyUwU/gists{/gist_id}", "starred_url": "https://api.github.com/users/BoxyUwU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BoxyUwU/subscriptions", "organizations_url": "https://api.github.com/users/BoxyUwU/orgs", "repos_url": "https://api.github.com/users/BoxyUwU/repos", "events_url": "https://api.github.com/users/BoxyUwU/events{/privacy}", "received_events_url": "https://api.github.com/users/BoxyUwU/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/88882/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/88882/timeline", "performed_via_github_app": null, "state_reason": "completed"}