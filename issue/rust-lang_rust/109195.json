{"url": "https://api.github.com/repos/rust-lang/rust/issues/109195", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/109195/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/109195/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/109195/events", "html_url": "https://github.com/rust-lang/rust/issues/109195", "id": 1626420520, "node_id": "I_kwDOAAsO6M5g8TUo", "number": 109195, "title": "confusing output when using `String::from::utf8` instead of `String::from_utf8`", "user": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 239393, "node_id": "MDU6TGFiZWwyMzkzOTM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-resolve", "name": "A-resolve", "color": "f7e101", "default": false, "description": "Area: Path resolution"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1596121013, "node_id": "MDU6TGFiZWwxNTk2MTIxMDEz", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-confusing", "name": "D-confusing", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error that should be reworked"}, {"id": 3921860029, "node_id": "LA_kwDOAAsO6M7pwtW9", "url": "https://api.github.com/repos/rust-lang/rust/labels/S-has-mcve", "name": "S-has-mcve", "color": "862eff", "default": false, "description": "A Minimal Complete and Verifiable Example has been found for this issue"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2023-03-15T23:25:33Z", "updated_at": "2023-04-18T18:34:44Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "### Code\n\n```Rust\n`\r\n    pub(crate) fn to_disk(&self) {\r\n        let original_path = self.file.clone();\r\n        let original_path_display = original_path.display();\r\n        let original_code = std::fs::read_to_string(&original_path).unwrap_or(\"<error>\".into());\r\n\r\n        let executable = self.executable.clone();\r\n        let executable_bin = self.executable.path();\r\n\r\n        let output: String = if let Ok(output) = std::process::Command::new(&executable_bin)\r\n            .arg(\"--version\")\r\n            .arg(\"--verbose\")\r\n            .output()\r\n        {\r\n            String::from::utf8(output.stdout).unwrap()\r\n        } else if let Ok(output_verbose) = std::process::Command::new(&executable_bin)\r\n            .arg(\"--version\")\r\n            .output()\r\n        {\r\n            String::from::utf8(output_verbose.stdout).unwrap()\r\n        } else {\r\n            \"<failed to get version>\".to_string()\r\n        };\r\n\r\n        let test = format!(\r\n            \"\r\n        File: {original_path_display}\r\n        `\r\n        {original_code}\r\n        ````\r\n        \r\n        \r\n        \"\r\n        );\r\n    }\r\n\r\n````\n```\n\n\n### Current output\n\n```Shell\nerror[E0223]: ambiguous associated type\r\n   --> src/ice.rs:125:13\r\n    |\r\n125 |             String::from::utf8(output.stdout).unwrap()\r\n    |             ^^^^^^^^^^^^\r\n    |\r\nhelp: if there were a trait named `Example` with associated type `from` implemented for `std::string::String`, you could use the fully-qualified path\r\n    |\r\n125 |             <std::string::String as Example>::from::utf8(output.stdout).unwrap()\r\n    |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\nerror[E0223]: ambiguous associated type\r\n   --> src/ice.rs:130:13\r\n    |\r\n130 |             String::from::utf8(output_verbose.stdout).unwrap()\r\n    |             ^^^^^^^^^^^^\r\n    |\r\nhelp: if there were a trait named `Example` with associated type `from` implemented for `std::string::String`, you could use the fully-qualified path\r\n    |\r\n130 |             <std::string::String as Example>::from::utf8(output_verbose.stdout).unwrap()\r\n    |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n```\n\n\n### Desired output\n\n```Shell\nItem `String::from::utf8` not found, did you mean similar similar function `String::from_utf8` which also happens to return the desired target type?\n```\n\n\n### Rationale and extra context\n\nThis had me *VERY* confused as I was certain I would try to get a String here, where does Example come from?? And associated types wut??\r\n\r\nThe problem is I used `String::from::utf8` which should have been `String::from_utf8` :D\r\n\r\nMaybe rustc could improve its suggestion somehow in that case?\n\n### Other cases\n\n_No response_\n\n### Anything else?\n\n_No response_", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/109195/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/109195/timeline", "performed_via_github_app": null, "state_reason": null}