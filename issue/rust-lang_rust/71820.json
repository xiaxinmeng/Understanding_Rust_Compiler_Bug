{"url": "https://api.github.com/repos/rust-lang/rust/issues/71820", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/71820/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/71820/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/71820/events", "html_url": "https://github.com/rust-lang/rust/issues/71820", "id": 611309502, "node_id": "MDU6SXNzdWU2MTEzMDk1MDI=", "number": 71820, "title": "Invalid lowering of macro in closure", "user": {"login": "marmeladema", "id": 1629419, "node_id": "MDQ6VXNlcjE2Mjk0MTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1629419?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marmeladema", "html_url": "https://github.com/marmeladema", "followers_url": "https://api.github.com/users/marmeladema/followers", "following_url": "https://api.github.com/users/marmeladema/following{/other_user}", "gists_url": "https://api.github.com/users/marmeladema/gists{/gist_id}", "starred_url": "https://api.github.com/users/marmeladema/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marmeladema/subscriptions", "organizations_url": "https://api.github.com/users/marmeladema/orgs", "repos_url": "https://api.github.com/users/marmeladema/repos", "events_url": "https://api.github.com/users/marmeladema/events{/privacy}", "received_events_url": "https://api.github.com/users/marmeladema/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 122406831, "node_id": "MDU6TGFiZWwxMjI0MDY4MzE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-closures", "name": "A-closures", "color": "f7e101", "default": false, "description": "Area: closures (`|args| { .. }`)"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 256133344, "node_id": "MDU6TGFiZWwyNTYxMzMzNDQ=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-hir", "name": "A-hir", "color": "f7e101", "default": false, "description": "Area: the High level Intermediate Representation (HIR)"}, {"id": 632573348, "node_id": "MDU6TGFiZWw2MzI1NzMzNDg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-macros-2.0", "name": "A-macros-2.0", "color": "f7e101", "default": false, "description": "Area: declarative macros 2.0, https://github.com/rust-lang/rust/issues/39412"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-03T01:26:02Z", "updated_at": "2020-07-16T22:23:06Z", "closed_at": "2020-07-16T22:23:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When trying to fix https://github.com/rust-lang/rust/issues/71104 I ended up fighting with some rustdoc test about declarative macro: https://github.com/rust-lang/rust/blob/master/src/test/rustdoc/macro-in-closure.rs\r\n\r\nThe problem is that the macro is properly lowered to hir because its exported but the parent item is not:\r\n* Macro has def id `DefId(0:5 ~ macro_in_closure[317d]::main[0]::{{closure}}[0]::m[0])`\r\n* Closure has def id `DefId(0:4 ~ macro_in_closure[317d]::main[0]::{{closure}}[0])`\r\n\r\nThe latter appears nowhere in the hir tree and when https://github.com/rust-lang/rust/blob/master/src/librustc_privacy/lib.rs#L945 tries to access its parent, it returns a `DefId` that has no associated `HirId`.\r\n\r\nI don't know exactly how lowering of closure works, neither the details of declarative macro visibility, but i think the bug is either:\r\n* the closure should have been lowered somehow\r\n* the declarative macro should not have been lowered as it is probably not visible outside of the closure\r\n\r\nHere is a hir dump of the test case:\r\n```\r\nwarning: unused macro definition\r\n --> src/test/rustdoc/macro-in-closure.rs:7:9\r\n  |\r\n7 |         macro m() {}\r\n  |         ^^^^^^^^^^^^\r\n  |\r\n  = note: `#[warn(unused_macros)]` on by default\r\n\r\nCrate {\r\n    item: CrateItem {\r\n        module: Mod {\r\n            inner: src/test/rustdoc/macro-in-closure.rs:3:1: 9:2,\r\n            item_ids: [\r\n                ItemId {\r\n                    id: HirId {\r\n                        owner: DefId(0:1 ~ macro_in_closure[317d]::{{misc}}[0]),\r\n                        local_id: 0,\r\n                    },\r\n                },\r\n                ItemId {\r\n                    id: HirId {\r\n                        owner: DefId(0:2 ~ macro_in_closure[317d]::std[0]),\r\n                        local_id: 0,\r\n                    },\r\n                },\r\n                ItemId {\r\n                    id: HirId {\r\n                        owner: DefId(0:3 ~ macro_in_closure[317d]::main[0]),\r\n                        local_id: 0,\r\n                    },\r\n                },\r\n            ],\r\n        },\r\n        attrs: [\r\n            Attribute {\r\n                kind: Normal(\r\n                    AttrItem {\r\n                        path: Path {\r\n                            span: src/test/rustdoc/macro-in-closure.rs:3:4: 3:11,\r\n                            segments: [\r\n                                PathSegment {\r\n                                    ident: feature#0,\r\n                                    id: NodeId(2),\r\n                                    args: None,\r\n                                },\r\n                            ],\r\n                        },\r\n                        args: Delimited(\r\n                            DelimSpan {\r\n                                open: src/test/rustdoc/macro-in-closure.rs:3:11: 3:12,\r\n                                close: src/test/rustdoc/macro-in-closure.rs:3:22: 3:23,\r\n                            },\r\n                            Parenthesis,\r\n                            TokenStream(\r\n                                [\r\n                                    (\r\n                                        Token(\r\n                                            Token {\r\n                                                kind: Ident(\r\n                                                    \"decl_macro\",\r\n                                                    false,\r\n                                                ),\r\n                                                span: src/test/rustdoc/macro-in-closure.rs:3:12: 3:22,\r\n                                            },\r\n                                        ),\r\n                                        NonJoint,\r\n                                    ),\r\n                                ],\r\n                            ),\r\n                        ),\r\n                    },\r\n                ),\r\n                id: AttrId(0),\r\n                style: Inner,\r\n                span: src/test/rustdoc/macro-in-closure.rs:3:1: 3:24,\r\n            },\r\n        ],\r\n        span: src/test/rustdoc/macro-in-closure.rs:3:1: 9:2,\r\n    },\r\n    exported_macros: [\r\n        MacroDef {\r\n            ident: m#0,\r\n            vis: Spanned {\r\n                node: Inherited,\r\n                span: src/test/rustdoc/macro-in-closure.rs:7:9: 7:9,\r\n            },\r\n            attrs: [],\r\n            hir_id: HirId {\r\n                owner: DefId(0:5 ~ macro_in_closure[317d]::main[0]::{{closure}}[0]::m[0]),\r\n                local_id: 0,\r\n            },\r\n            span: src/test/rustdoc/macro-in-closure.rs:7:9: 7:21,\r\n            ast: MacroDef {\r\n                body: Delimited(\r\n                    DelimSpan {\r\n                        open: src/test/rustdoc/macro-in-closure.rs:7:16: 7:16,\r\n                        close: src/test/rustdoc/macro-in-closure.rs:7:21: 7:21,\r\n                    },\r\n                    Brace,\r\n                    TokenStream(\r\n                        [\r\n                            (\r\n                                Delimited(\r\n                                    DelimSpan {\r\n                                        open: src/test/rustdoc/macro-in-closure.rs:7:16: 7:17,\r\n                                        close: src/test/rustdoc/macro-in-closure.rs:7:17: 7:18,\r\n                                    },\r\n                                    Paren,\r\n                                    TokenStream(\r\n                                        [],\r\n                                    ),\r\n                                ),\r\n                                NonJoint,\r\n                            ),\r\n                            (\r\n                                Token(\r\n                                    Token {\r\n                                        kind: FatArrow,\r\n                                        span: src/test/rustdoc/macro-in-closure.rs:7:18: 7:19,\r\n                                    },\r\n                                ),\r\n                                NonJoint,\r\n                            ),\r\n                            (\r\n                                Delimited(\r\n                                    DelimSpan {\r\n                                        open: src/test/rustdoc/macro-in-closure.rs:7:19: 7:20,\r\n                                        close: src/test/rustdoc/macro-in-closure.rs:7:20: 7:21,\r\n                                    },\r\n                                    Brace,\r\n                                    TokenStream(\r\n                                        [],\r\n                                    ),\r\n                                ),\r\n                                NonJoint,\r\n                            ),\r\n                        ],\r\n                    ),\r\n                ),\r\n                macro_rules: false,\r\n            },\r\n        },\r\n    ],\r\n    non_exported_macro_attrs: [],\r\n    items: {\r\n        HirId {\r\n            owner: DefId(0:1 ~ macro_in_closure[317d]::{{misc}}[0]),\r\n            local_id: 0,\r\n        }: Item {\r\n            ident: #0,\r\n            hir_id: HirId {\r\n                owner: DefId(0:1 ~ macro_in_closure[317d]::{{misc}}[0]),\r\n                local_id: 0,\r\n            },\r\n            attrs: [\r\n                Attribute {\r\n                    kind: Normal(\r\n                        AttrItem {\r\n                            path: Path {\r\n                                span: src/test/rustdoc/macro-in-closure.rs:1:1: 1:1,\r\n                                segments: [\r\n                                    PathSegment {\r\n                                        ident: prelude_import#1,\r\n                                        id: NodeId(4),\r\n                                        args: None,\r\n                                    },\r\n                                ],\r\n                            },\r\n                            args: Empty,\r\n                        },\r\n                    ),\r\n                    id: AttrId(2),\r\n                    style: Outer,\r\n                    span: src/test/rustdoc/macro-in-closure.rs:1:1: 1:1,\r\n                },\r\n            ],\r\n            kind: Use(\r\n                Path {\r\n                    span: src/test/rustdoc/macro-in-closure.rs:1:1: 1:1,\r\n                    res: Err,\r\n                    segments: [\r\n                        PathSegment {\r\n                            ident: {{root}}#1,\r\n                            hir_id: Some(\r\n                                HirId {\r\n                                    owner: DefId(0:1 ~ macro_in_closure[317d]::{{misc}}[0]),\r\n                                    local_id: 1,\r\n                                },\r\n                            ),\r\n                            res: Some(\r\n                                Err,\r\n                            ),\r\n                            args: None,\r\n                            infer_args: false,\r\n                        },\r\n                        PathSegment {\r\n                            ident: std#1,\r\n                            hir_id: Some(\r\n                                HirId {\r\n                                    owner: DefId(0:1 ~ macro_in_closure[317d]::{{misc}}[0]),\r\n                                    local_id: 2,\r\n                                },\r\n                            ),\r\n                            res: Some(\r\n                                Def(\r\n                                    Mod,\r\n                                    DefId(1:0 ~ std[512e]),\r\n                                ),\r\n                            ),\r\n                            args: None,\r\n                            infer_args: false,\r\n                        },\r\n                        PathSegment {\r\n                            ident: prelude#1,\r\n                            hir_id: Some(\r\n                                HirId {\r\n                                    owner: DefId(0:1 ~ macro_in_closure[317d]::{{misc}}[0]),\r\n                                    local_id: 3,\r\n                                },\r\n                            ),\r\n                            res: Some(\r\n                                Def(\r\n                                    Mod,\r\n                                    DefId(1:15 ~ std[512e]::prelude[0]),\r\n                                ),\r\n                            ),\r\n                            args: None,\r\n                            infer_args: false,\r\n                        },\r\n                        PathSegment {\r\n                            ident: v1#1,\r\n                            hir_id: Some(\r\n                                HirId {\r\n                                    owner: DefId(0:1 ~ macro_in_closure[317d]::{{misc}}[0]),\r\n                                    local_id: 4,\r\n                                },\r\n                            ),\r\n                            res: Some(\r\n                                Def(\r\n                                    Mod,\r\n                                    DefId(1:16 ~ std[512e]::prelude[0]::v1[0]),\r\n                                ),\r\n                            ),\r\n                            args: None,\r\n                            infer_args: false,\r\n                        },\r\n                    ],\r\n                },\r\n                Glob,\r\n            ),\r\n            vis: Spanned {\r\n                node: Inherited,\r\n                span: src/test/rustdoc/macro-in-closure.rs:1:1: 1:1,\r\n            },\r\n            span: src/test/rustdoc/macro-in-closure.rs:1:1: 1:1,\r\n        },\r\n        HirId {\r\n            owner: DefId(0:2 ~ macro_in_closure[317d]::std[0]),\r\n            local_id: 0,\r\n        }: Item {\r\n            ident: std#2,\r\n            hir_id: HirId {\r\n                owner: DefId(0:2 ~ macro_in_closure[317d]::std[0]),\r\n                local_id: 0,\r\n            },\r\n            attrs: [\r\n                Attribute {\r\n                    kind: Normal(\r\n                        AttrItem {\r\n                            path: Path {\r\n                                span: src/test/rustdoc/macro-in-closure.rs:1:1: 1:1,\r\n                                segments: [\r\n                                    PathSegment {\r\n                                        ident: macro_use#1,\r\n                                        id: NodeId(10),\r\n                                        args: None,\r\n                                    },\r\n                                ],\r\n                            },\r\n                            args: Empty,\r\n                        },\r\n                    ),\r\n                    id: AttrId(1),\r\n                    style: Outer,\r\n                    span: src/test/rustdoc/macro-in-closure.rs:1:1: 1:1,\r\n                },\r\n            ],\r\n            kind: ExternCrate(\r\n                None,\r\n            ),\r\n            vis: Spanned {\r\n                node: Inherited,\r\n                span: src/test/rustdoc/macro-in-closure.rs:1:1: 1:1,\r\n            },\r\n            span: src/test/rustdoc/macro-in-closure.rs:1:1: 1:1,\r\n        },\r\n        HirId {\r\n            owner: DefId(0:3 ~ macro_in_closure[317d]::main[0]),\r\n            local_id: 0,\r\n        }: Item {\r\n            ident: main#0,\r\n            hir_id: HirId {\r\n                owner: DefId(0:3 ~ macro_in_closure[317d]::main[0]),\r\n                local_id: 0,\r\n            },\r\n            attrs: [],\r\n            kind: Fn(\r\n                FnSig {\r\n                    header: FnHeader {\r\n                        unsafety: Normal,\r\n                        constness: NotConst,\r\n                        asyncness: NotAsync,\r\n                        abi: Rust,\r\n                    },\r\n                    decl: FnDecl {\r\n                        inputs: [],\r\n                        output: DefaultReturn(\r\n                            src/test/rustdoc/macro-in-closure.rs:5:11: 5:11,\r\n                        ),\r\n                        c_variadic: false,\r\n                        implicit_self: None,\r\n                    },\r\n                },\r\n                Generics {\r\n                    params: [],\r\n                    where_clause: WhereClause {\r\n                        predicates: [],\r\n                        span: src/test/rustdoc/macro-in-closure.rs:5:10: 5:10,\r\n                    },\r\n                    span: src/test/rustdoc/macro-in-closure.rs:5:8: 5:8,\r\n                },\r\n                BodyId {\r\n                    hir_id: HirId {\r\n                        owner: DefId(0:3 ~ macro_in_closure[317d]::main[0]),\r\n                        local_id: 6,\r\n                    },\r\n                },\r\n            ),\r\n            vis: Spanned {\r\n                node: Inherited,\r\n                span: src/test/rustdoc/macro-in-closure.rs:5:1: 5:1,\r\n            },\r\n            span: src/test/rustdoc/macro-in-closure.rs:5:1: 9:2,\r\n        },\r\n    },\r\n    trait_items: {},\r\n    impl_items: {},\r\n    bodies: {\r\n        BodyId {\r\n            hir_id: HirId {\r\n                owner: DefId(0:3 ~ macro_in_closure[317d]::main[0]),\r\n                local_id: 2,\r\n            },\r\n        }: Body {\r\n            params: [],\r\n            value: Expr {\r\n                hir_id: HirId {\r\n                    owner: DefId(0:3 ~ macro_in_closure[317d]::main[0]),\r\n                    local_id: 2,\r\n                },\r\n                kind: Block(\r\n                    Block {\r\n                        stmts: [],\r\n                        expr: None,\r\n                        hir_id: HirId {\r\n                            owner: DefId(0:3 ~ macro_in_closure[317d]::main[0]),\r\n                            local_id: 1,\r\n                        },\r\n                        rules: DefaultBlock,\r\n                        span: src/test/rustdoc/macro-in-closure.rs:6:8: 8:6,\r\n                        targeted_by_break: false,\r\n                    },\r\n                    None,\r\n                ),\r\n                attrs: ThinVec(\r\n                    None,\r\n                ),\r\n                span: src/test/rustdoc/macro-in-closure.rs:6:8: 8:6,\r\n            },\r\n            generator_kind: None,\r\n        },\r\n        BodyId {\r\n            hir_id: HirId {\r\n                owner: DefId(0:3 ~ macro_in_closure[317d]::main[0]),\r\n                local_id: 6,\r\n            },\r\n        }: Body {\r\n            params: [],\r\n            value: Expr {\r\n                hir_id: HirId {\r\n                    owner: DefId(0:3 ~ macro_in_closure[317d]::main[0]),\r\n                    local_id: 6,\r\n                },\r\n                kind: Block(\r\n                    Block {\r\n                        stmts: [\r\n                            Stmt {\r\n                                hir_id: HirId {\r\n                                    owner: DefId(0:3 ~ macro_in_closure[317d]::main[0]),\r\n                                    local_id: 4,\r\n                                },\r\n                                kind: Semi(\r\n                                    Expr {\r\n                                        hir_id: HirId {\r\n                                            owner: DefId(0:3 ~ macro_in_closure[317d]::main[0]),\r\n                                            local_id: 3,\r\n                                        },\r\n                                        kind: Closure(\r\n                                            Ref,\r\n                                            FnDecl {\r\n                                                inputs: [],\r\n                                                output: DefaultReturn(\r\n                                                    src/test/rustdoc/macro-in-closure.rs:6:8: 6:8,\r\n                                                ),\r\n                                                c_variadic: false,\r\n                                                implicit_self: None,\r\n                                            },\r\n                                            BodyId {\r\n                                                hir_id: HirId {\r\n                                                    owner: DefId(0:3 ~ macro_in_closure[317d]::main[0]),\r\n                                                    local_id: 2,\r\n                                                },\r\n                                            },\r\n                                            src/test/rustdoc/macro-in-closure.rs:6:5: 6:7,\r\n                                            None,\r\n                                        ),\r\n                                        attrs: ThinVec(\r\n                                            None,\r\n                                        ),\r\n                                        span: src/test/rustdoc/macro-in-closure.rs:6:5: 8:6,\r\n                                    },\r\n                                ),\r\n                                span: src/test/rustdoc/macro-in-closure.rs:6:5: 8:7,\r\n                            },\r\n                        ],\r\n                        expr: None,\r\n                        hir_id: HirId {\r\n                            owner: DefId(0:3 ~ macro_in_closure[317d]::main[0]),\r\n                            local_id: 5,\r\n                        },\r\n                        rules: DefaultBlock,\r\n                        span: src/test/rustdoc/macro-in-closure.rs:5:11: 9:2,\r\n                        targeted_by_break: false,\r\n                    },\r\n                    None,\r\n                ),\r\n                attrs: ThinVec(\r\n                    None,\r\n                ),\r\n                span: src/test/rustdoc/macro-in-closure.rs:5:11: 9:2,\r\n            },\r\n            generator_kind: None,\r\n        },\r\n    },\r\n    trait_impls: {},\r\n    body_ids: [\r\n        BodyId {\r\n            hir_id: HirId {\r\n                owner: DefId(0:3 ~ macro_in_closure[317d]::main[0]),\r\n                local_id: 6,\r\n            },\r\n        },\r\n        BodyId {\r\n            hir_id: HirId {\r\n                owner: DefId(0:3 ~ macro_in_closure[317d]::main[0]),\r\n                local_id: 2,\r\n            },\r\n        },\r\n    ],\r\n    modules: {\r\n        HirId {\r\n            owner: DefId(0:0 ~ macro_in_closure[317d]),\r\n            local_id: 0,\r\n        }: ModuleItems {\r\n            items: {\r\n                HirId {\r\n                    owner: DefId(0:1 ~ macro_in_closure[317d]::{{misc}}[0]),\r\n                    local_id: 0,\r\n                },\r\n                HirId {\r\n                    owner: DefId(0:2 ~ macro_in_closure[317d]::std[0]),\r\n                    local_id: 0,\r\n                },\r\n                HirId {\r\n                    owner: DefId(0:3 ~ macro_in_closure[317d]::main[0]),\r\n                    local_id: 0,\r\n                },\r\n            },\r\n            trait_items: {},\r\n            impl_items: {},\r\n        },\r\n    },\r\n    proc_macros: [],\r\nwarning: 1 warning emitted\r\n}\r\n```\r\n\r\ncc https://github.com/rust-lang/rust/issues/39412", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/71820/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/71820/timeline", "performed_via_github_app": null, "state_reason": "completed"}