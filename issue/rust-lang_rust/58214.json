{"url": "https://api.github.com/repos/rust-lang/rust/issues/58214", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/58214/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/58214/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/58214/events", "html_url": "https://github.com/rust-lang/rust/issues/58214", "id": 407191522, "node_id": "MDU6SXNzdWU0MDcxOTE1MjI=", "number": 58214, "title": "Compiler requires redundant trait bounds which should be inferrable", "user": {"login": "joshlf", "id": 1046063, "node_id": "MDQ6VXNlcjEwNDYwNjM=", "avatar_url": "https://avatars.githubusercontent.com/u/1046063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joshlf", "html_url": "https://github.com/joshlf", "followers_url": "https://api.github.com/users/joshlf/followers", "following_url": "https://api.github.com/users/joshlf/following{/other_user}", "gists_url": "https://api.github.com/users/joshlf/gists{/gist_id}", "starred_url": "https://api.github.com/users/joshlf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joshlf/subscriptions", "organizations_url": "https://api.github.com/users/joshlf/orgs", "repos_url": "https://api.github.com/users/joshlf/repos", "events_url": "https://api.github.com/users/joshlf/events{/privacy}", "received_events_url": "https://api.github.com/users/joshlf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-02-06T11:29:29Z", "updated_at": "2019-02-06T14:10:18Z", "closed_at": "2019-02-06T14:10:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The following program should compile, [but doesn't](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=4bd09b30473286ae681c13e7f7e3b8f6):\r\n\r\n```rust\r\npub trait Foo: Iterator\r\nwhere\r\n    <Self as Iterator>::Item: Clone,\r\n{\r\n}\r\n\r\n#[derive(Clone)]\r\nstruct MyWrapper<T>(T);\r\n\r\nimpl<T: Foo> Foo for MyWrapper<T> {}\r\n\r\nimpl<T: Foo> Iterator for MyWrapper<T> {\r\n    type Item = T::Item;\r\n\r\n    fn next(&mut self) -> Option<T::Item> {\r\n        self.0.next()\r\n    }\r\n}\r\n```\r\n\r\nIn particular, `rustc` seems unable to infer that the `T: Foo` bound in each of the two impl blocks implies that `<T as Iterator>::Item: Clone`:\r\n\r\n```text\r\nerror[E0277]: the trait bound `<T as std::iter::Iterator>::Item: std::clone::Clone` is not satisfied\r\n  --> src/lib.rs:10:14\r\n   |\r\n10 | impl<T: Foo> Foo for MyWrapper<T> {}\r\n   |              ^^^ the trait `std::clone::Clone` is not implemented for `<T as std::iter::Iterator>::Item`\r\n   |\r\n   = help: consider adding a `where <T as std::iter::Iterator>::Item: std::clone::Clone` bound\r\n\r\nerror[E0277]: the trait bound `<T as std::iter::Iterator>::Item: std::clone::Clone` is not satisfied\r\n  --> src/lib.rs:12:1\r\n   |\r\n12 | / impl<T: Foo> Iterator for MyWrapper<T> {\r\n13 | |     type Item = T::Item;\r\n14 | |\r\n15 | |     fn next(&mut self) -> Option<T::Item> {\r\n16 | |         self.0.next()\r\n17 | |     }\r\n18 | | }\r\n   | |_^ the trait `std::clone::Clone` is not implemented for `<T as std::iter::Iterator>::Item`\r\n   |\r\n   = help: consider adding a `where <T as std::iter::Iterator>::Item: std::clone::Clone` bound\r\nnote: required by `Foo`\r\n  --> src/lib.rs:1:1\r\n   |\r\n1  | / pub trait Foo: Iterator\r\n2  | | where\r\n3  | |     <Self as Iterator>::Item: Clone,\r\n4  | | {\r\n5  | | }\r\n   | |_^\r\n\r\nerror[E0277]: the trait bound `<T as std::iter::Iterator>::Item: std::clone::Clone` is not satisfied\r\n  --> src/lib.rs:15:5\r\n   |\r\n15 | /     fn next(&mut self) -> Option<T::Item> {\r\n16 | |         self.0.next()\r\n17 | |     }\r\n   | |_____^ the trait `std::clone::Clone` is not implemented for `<T as std::iter::Iterator>::Item`\r\n   |\r\n   = help: consider adding a `where <T as std::iter::Iterator>::Item: std::clone::Clone` bound\r\nnote: required by `Foo`\r\n  --> src/lib.rs:1:1\r\n   |\r\n1  | / pub trait Foo: Iterator\r\n2  | | where\r\n3  | |     <Self as Iterator>::Item: Clone,\r\n4  | | {\r\n5  | | }\r\n   | |_^\r\n```\r\n\r\nIf, however, we take `rustc`'s advice and add `where <T as Iterator>::Item: Clone` bounds, [it compiles](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=38f5f5b7e3d4259b5b6ecaf5ca34e335).\r\n\r\nThis seems like a bug to me, since the bound we added should be implied by the `T: Foo` bound.", "closed_by": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/58214/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/58214/timeline", "performed_via_github_app": null, "state_reason": "completed"}