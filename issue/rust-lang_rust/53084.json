{"url": "https://api.github.com/repos/rust-lang/rust/issues/53084", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/53084/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/53084/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/53084/events", "html_url": "https://github.com/rust-lang/rust/issues/53084", "id": 347687366, "node_id": "MDU6SXNzdWUzNDc2ODczNjY=", "number": 53084, "title": "Generalize StableHashingContext as a trait", "user": {"login": "brunocodutra", "id": 4043663, "node_id": "MDQ6VXNlcjQwNDM2NjM=", "avatar_url": "https://avatars.githubusercontent.com/u/4043663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brunocodutra", "html_url": "https://github.com/brunocodutra", "followers_url": "https://api.github.com/users/brunocodutra/followers", "following_url": "https://api.github.com/users/brunocodutra/following{/other_user}", "gists_url": "https://api.github.com/users/brunocodutra/gists{/gist_id}", "starred_url": "https://api.github.com/users/brunocodutra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brunocodutra/subscriptions", "organizations_url": "https://api.github.com/users/brunocodutra/orgs", "repos_url": "https://api.github.com/users/brunocodutra/repos", "events_url": "https://api.github.com/users/brunocodutra/events{/privacy}", "received_events_url": "https://api.github.com/users/brunocodutra/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 900795185, "node_id": "MDU6TGFiZWw5MDA3OTUxODU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-eval", "name": "A-const-eval", "color": "f7e101", "default": false, "description": "Area: constant evaluation (mir interpretation)"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-08-05T10:39:33Z", "updated_at": "2019-01-27T19:26:01Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Background\r\nPR #52475 improves the infinite loop detection algorithm during compile time evaluation, the algorithm relies on `HashStable` to detect whether two evaluation contexts are potentially identical as an optimization to avoid unnecessarily cloning the entire evaluation context.\r\n\r\n### The Problem\r\nThe current implementation of `HashStable` throughout the compiler relies on a hashing context represented by `StableHashingContext`. This context however provides no way to resolve `AllocId`s to `Allocations`, so the implementation of `HashStable` for `AllocId` relies on the \r\n[global `TyCtxt::alloc_map`](https://github.com/rust-lang/rust/blob/master/src/librustc/ich/impls_ty.rs#L420), thus bypassing the current transient allocations in `Memory`. This has the inconvenient side effect of increasing the probability of hash conflicts, thus increasing the probability of unnecessarily cloning the evaluation context.\r\n\r\n### The Solution\r\n\r\n@oli-obk [suggested](https://github.com/rust-lang/rust/pull/52626#issuecomment-408854349) `StableHashingContext` could be generalized as a trait that could be implemented for `Memory`, which would provide a way to directly resolve `AllocId`s.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/53084/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/53084/timeline", "performed_via_github_app": null, "state_reason": null}