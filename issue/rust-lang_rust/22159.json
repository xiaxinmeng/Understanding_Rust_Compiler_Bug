{"url": "https://api.github.com/repos/rust-lang/rust/issues/22159", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/22159/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/22159/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/22159/events", "html_url": "https://github.com/rust-lang/rust/issues/22159", "id": 57242336, "node_id": "MDU6SXNzdWU1NzI0MjMzNg==", "number": 22159, "title": "LLVM doesn't know about jemalloc", "user": {"login": "XMPPwocky", "id": 1250666, "node_id": "MDQ6VXNlcjEyNTA2NjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1250666?v=4", "gravatar_id": "", "url": "https://api.github.com/users/XMPPwocky", "html_url": "https://github.com/XMPPwocky", "followers_url": "https://api.github.com/users/XMPPwocky/followers", "following_url": "https://api.github.com/users/XMPPwocky/following{/other_user}", "gists_url": "https://api.github.com/users/XMPPwocky/gists{/gist_id}", "starred_url": "https://api.github.com/users/XMPPwocky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/XMPPwocky/subscriptions", "organizations_url": "https://api.github.com/users/XMPPwocky/orgs", "repos_url": "https://api.github.com/users/XMPPwocky/repos", "events_url": "https://api.github.com/users/XMPPwocky/events{/privacy}", "received_events_url": "https://api.github.com/users/XMPPwocky/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2015-02-10T21:45:56Z", "updated_at": "2015-04-08T14:58:14Z", "closed_at": "2015-02-24T02:22:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "LLVM can remove \"dead\" calls to malloc() (where the return value is ignored, or immediately free()-d (possibly after being compared with NULL)).  However, this is basically hardcoded to the \"malloc\" symbol (and \"free\", etc.); it is not aware of jemalloc (specifically je_mallocx and je_sdallocx), which Rust uses.\n\nLLVM is very good at removing temporary allocations, as it turns out:\n\n``` rust\nextern crate libc;\nextern crate test;\n\nfn main() {\n\nunsafe {\n    // totally dead (and a memory leak)\n    // produces no calls to libc malloc\n    let _ = libc::malloc(4);\n\n    // freed immediately, no allocations\n    libc::free(libc::malloc(4));\n\n    // allocated, used to store something temporarily, then freed\n    // still no allocations!\n    let x = libc::malloc(std::mem::size_of::<i32>() as libc::size_t);\n    assert!(!x.is_null());\n    *(x as *mut i32) = 42i32;\n    let y = *(x as *mut i32);\n    libc::free(x);\n    test::black_box(y);\n}\n\n}\n```\n\nwill not call malloc or free (at -O2).\n\nOn the other hand, even the most trivial allocation using liballoc...\n\n``` rust\nfn main() {\n    let _ = Box::new(42i32);\n}\n```\n\nwill invoke je_mallocx and je_sdallocx, even at -O3.\n\n/cc @dotdash\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/22159/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/22159/timeline", "performed_via_github_app": null, "state_reason": "completed"}