{"url": "https://api.github.com/repos/rust-lang/rust/issues/75805", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/75805/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/75805/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/75805/events", "html_url": "https://github.com/rust-lang/rust/issues/75805", "id": 683994228, "node_id": "MDU6SXNzdWU2ODM5OTQyMjg=", "number": 75805, "title": "Add `cargo fix` support for switching to intra-doc links", "user": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 203738, "node_id": "MDU6TGFiZWwyMDM3Mzg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-rustdoc", "name": "T-rustdoc", "color": "bfd4f2", "default": false, "description": "Relevant to the rustdoc team, which will review and decide on the PR/issue."}, {"id": 234876, "node_id": "MDU6TGFiZWwyMzQ4NzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-hard", "name": "E-hard", "color": "02e10c", "default": false, "description": "Call for participation: Experience needed to fix: Hard / a lot"}, {"id": 239393, "node_id": "MDU6TGFiZWwyMzkzOTM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-resolve", "name": "A-resolve", "color": "f7e101", "default": false, "description": "Area: Path resolution"}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}, {"id": 1118567289, "node_id": "MDU6TGFiZWwxMTE4NTY3Mjg5", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-intra-doc-links", "name": "A-intra-doc-links", "color": "f7e101", "default": false, "description": "Area: Intra-doc links, the ability to link to items in docs by name"}, {"id": 1183099971, "node_id": "MDU6TGFiZWwxMTgzMDk5OTcx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-suggestion-diagnostics", "name": "A-suggestion-diagnostics", "color": "f7e101", "default": false, "description": "Area: suggestions generated by the compiler applied by cargo fix"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-08-22T13:03:59Z", "updated_at": "2021-04-23T19:36:43Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "This will be tricky for several reasons.\r\n\r\n- It needs pulldown support to look at the links even if they're not broken. [`Event`](https://docs.rs/pulldown-cmark/0.7.2/pulldown_cmark/enum.Event.html) and [`Tag`](https://docs.rs/pulldown-cmark/0.7.2/pulldown_cmark/enum.Tag.html) seem like they should work.\r\n- Rustdoc needs to know what the link is _meant_ to resolve to. This can be tricky if the item is re-exported in multiple places (see e.g. https://github.com/rust-lang/rust/issues/32129). Rustdoc should report all possible items you meant if there's ambiguity (and downgrade the applicability).\r\n- Rustdoc needs to know what name in scope matches with the item you're linking too. This seems like it shouldn't be _too_ hard, but I don't see a way to go from `DefId` -> `Path` on [`Resolver`](https://doc.rust-lang.org/nightly/nightly-rustc/rustc_resolve/struct.Resolver.html), only the reverse. cc @Manishearth, do you have ideas?\r\n\r\nThis can be implemented as an allowed-by-default lint with [`Applicability::MachineApplicable`](https://doc.rust-lang.org/nightly/nightly-rustc/rustc_errors/enum.Applicability.html#variant.MachineApplicable); then `cargo fix` will pick it up automatically.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/75805/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/75805/timeline", "performed_via_github_app": null, "state_reason": null}