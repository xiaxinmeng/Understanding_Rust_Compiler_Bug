{"url": "https://api.github.com/repos/rust-lang/rust/issues/46306", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/46306/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/46306/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/46306/events", "html_url": "https://github.com/rust-lang/rust/issues/46306", "id": 277066843, "node_id": "MDU6SXNzdWUyNzcwNjY4NDM=", "number": 46306, "title": "trait implementation hidden by where clause", "user": {"login": "tspiteri", "id": 18604588, "node_id": "MDQ6VXNlcjE4NjA0NTg4", "avatar_url": "https://avatars.githubusercontent.com/u/18604588?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tspiteri", "html_url": "https://github.com/tspiteri", "followers_url": "https://api.github.com/users/tspiteri/followers", "following_url": "https://api.github.com/users/tspiteri/following{/other_user}", "gists_url": "https://api.github.com/users/tspiteri/gists{/gist_id}", "starred_url": "https://api.github.com/users/tspiteri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tspiteri/subscriptions", "organizations_url": "https://api.github.com/users/tspiteri/orgs", "repos_url": "https://api.github.com/users/tspiteri/repos", "events_url": "https://api.github.com/users/tspiteri/events{/privacy}", "received_events_url": "https://api.github.com/users/tspiteri/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 604454086, "node_id": "MDU6TGFiZWw2MDQ0NTQwODY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-inference", "name": "A-inference", "color": "f7e101", "default": false, "description": "Area: Type inference"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-27T15:52:08Z", "updated_at": "2022-03-21T18:02:01Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In both cases in the code below, the trait implementation `impl Op<()> for Single` seems to be hidden by the clause `where Single: Op<T>`. Using universal function call syntax works as a workaround.\r\n\r\n```rust\r\ntrait Op<T> {\r\n    fn op(&self, t: T);\r\n}\r\n\r\nstruct Single;\r\n\r\nimpl Op<()> for Single {\r\n    fn op(&self, _t: ()) {}\r\n}\r\n\r\nstruct Pair {\r\n    a: Single,\r\n    b: Single,\r\n}\r\n\r\n// case 1\r\nfn foo<T>(pair: Pair, t: T)\r\nwhere\r\n    Single: Op<T>,\r\n{\r\n    pair.a.op(t);\r\n    // this fails to compile:\r\n    pair.b.op(());\r\n    // this works: <Single as Op<()>>::op(&pair.b, ());\r\n}\r\n\r\n// case 2\r\nimpl<T> Op<T> for Pair\r\nwhere\r\n    Single: Op<T>,\r\n{\r\n    fn op(&self, t: T) {\r\n        self.a.op(t);\r\n        // this fails to compile:\r\n        self.b.op(());\r\n        // this works: <Single as Op<()>>::op(&self.b, ());\r\n    }\r\n}\r\n```\r\n\r\nThe error messages:\r\n```\r\nerror[E0308]: mismatched types\r\n  --> lib.rs:23:15\r\n   |\r\n23 |     pair.b.op(());\r\n   |               ^^ expected type parameter, found ()\r\n   |\r\n   = note: expected type `T`\r\n              found type `()`\r\n\r\nerror[E0308]: mismatched types\r\n  --> lib.rs:35:19\r\n   |\r\n35 |         self.b.op(());\r\n   |                   ^^ expected type parameter, found ()\r\n   |\r\n   = note: expected type `T`\r\n              found type `()`\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/46306/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/46306/timeline", "performed_via_github_app": null, "state_reason": null}