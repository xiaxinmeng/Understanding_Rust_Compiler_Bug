{"url": "https://api.github.com/repos/rust-lang/rust/issues/86109", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/86109/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/86109/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/86109/events", "html_url": "https://github.com/rust-lang/rust/issues/86109", "id": 913783641, "node_id": "MDU6SXNzdWU5MTM3ODM2NDE=", "number": 86109, "title": "[ER] A missed removal of division by zero test", "user": {"login": "leonardo-m", "id": 22328461, "node_id": "MDQ6VXNlcjIyMzI4NDYx", "avatar_url": "https://avatars.githubusercontent.com/u/22328461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leonardo-m", "html_url": "https://github.com/leonardo-m", "followers_url": "https://api.github.com/users/leonardo-m/followers", "following_url": "https://api.github.com/users/leonardo-m/following{/other_user}", "gists_url": "https://api.github.com/users/leonardo-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/leonardo-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leonardo-m/subscriptions", "organizations_url": "https://api.github.com/users/leonardo-m/orgs", "repos_url": "https://api.github.com/users/leonardo-m/repos", "events_url": "https://api.github.com/users/leonardo-m/events{/privacy}", "received_events_url": "https://api.github.com/users/leonardo-m/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 234956, "node_id": "MDU6TGFiZWwyMzQ5NTY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-codegen", "name": "A-codegen", "color": "f7e101", "default": false, "description": "Area: Code generation"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2021-06-07T17:28:15Z", "updated_at": "2022-01-31T18:51:06Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "This function foo:\r\n\r\n```rust\r\ntype T = i16;\r\n\r\npub fn foo(start: T) -> T {\r\n    if start <= 0 { return 0; }\r\n    let mut count = 0;\r\n    for i in start .. 10_000 {\r\n        if 752 % i != 0 {\r\n            count += 1;\r\n        }\r\n    }\r\n    count\r\n}\r\n\r\nfn main() {\r\n    println!(\"{}\", (T::MIN ..= T::MAX)\r\n                   .map(foo)\r\n                   .sum::<T>());\r\n}\r\n```\r\n\r\nCompiled with optimizations by rustc (1.54.0-nightly 4de757209 2021-05-01) gives:\r\n\r\n```asm\r\nfoo:\r\n        lea     eax, [rdi - 1]\r\n        movzx   eax, ax\r\n        cmp     eax, 9998\r\n        ja      .LBB0_1\r\n        mov     r8d, 9999\r\n        sub     r8d, edi\r\n        mov     esi, edi\r\n        neg     esi\r\n        xor     ecx, ecx\r\n.LBB0_4:\r\n        cmp     r8w, si\r\n        jae     .LBB0_6\r\n        mov     ax, 752\r\n        xor     edx, edx\r\n        idiv    di\r\n        lea     eax, [rdi + 1]\r\n        cmp     dx, 1\r\n        sbb     cx, -1\r\n        movzx   edx, ax\r\n        mov     edi, eax\r\n        cmp     edx, 10000\r\n        jne     .LBB0_4\r\n        mov     eax, ecx\r\n        ret\r\n.LBB0_1:\r\n        xor     ecx, ecx\r\n        mov     eax, ecx\r\n        ret\r\n.LBB0_6:\r\n        push    rax\r\n        lea     rdi, [rip + str.0]\r\n        lea     rdx, [rip + .L__unnamed_1]\r\n        mov     esi, 57\r\n        call    qword ptr [rip + core::panicking::panic@GOTPCREL]\r\n        ud2\r\n\r\nstr.0:\r\n        .ascii  \"attempt to calculate the remainder with a divisor of zero\"\r\n```\r\n\r\nRunning the code you confirm that the divisor can't be zero.\r\nI think Rustc should be able to remove this test.\r\n(The same code with `T=u16` contains no division by zero test).", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/86109/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/86109/timeline", "performed_via_github_app": null, "state_reason": null}