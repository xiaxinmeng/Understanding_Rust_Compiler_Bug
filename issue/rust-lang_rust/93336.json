{"url": "https://api.github.com/repos/rust-lang/rust/issues/93336", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/93336/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/93336/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/93336/events", "html_url": "https://github.com/rust-lang/rust/issues/93336", "id": 1115191466, "node_id": "I_kwDOAAsO6M5CeHiq", "number": 93336, "title": "ICE when incrementally compiling code", "user": {"login": "scrabsha", "id": 25402018, "node_id": "MDQ6VXNlcjI1NDAyMDE4", "avatar_url": "https://avatars.githubusercontent.com/u/25402018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scrabsha", "html_url": "https://github.com/scrabsha", "followers_url": "https://api.github.com/users/scrabsha/followers", "following_url": "https://api.github.com/users/scrabsha/following{/other_user}", "gists_url": "https://api.github.com/users/scrabsha/gists{/gist_id}", "starred_url": "https://api.github.com/users/scrabsha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scrabsha/subscriptions", "organizations_url": "https://api.github.com/users/scrabsha/orgs", "repos_url": "https://api.github.com/users/scrabsha/repos", "events_url": "https://api.github.com/users/scrabsha/events{/privacy}", "received_events_url": "https://api.github.com/users/scrabsha/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 307747675, "node_id": "MDU6TGFiZWwzMDc3NDc2NzU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-incr-comp", "name": "A-incr-comp", "color": "f7e101", "default": false, "description": "Area: Incremental compilation"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-01-26T16:04:35Z", "updated_at": "2022-03-05T17:41:49Z", "closed_at": "2022-03-05T17:41:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "*Note*: cleaning the `target` directory and compiling again makes the ice vanish. As such, I suspect this ICE to be caused by incremental compilation. If it can help, I have an exact copy of the `target` which triggers the ICE. I have checked, and I can trigger it again on my laptop. I don't know how portable it is, though.\r\n\r\n### Code\r\n\r\nToo long to be written here. See [`scrabsha/langgg/ICE-1`] instead.\r\n\r\n[`scrabsha/langgg/ICE-1`]: https://github.com/scrabsha/langgg/tree/ICE-1\r\n\r\n### Meta\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.59.0-nightly (f1ce0e6a0 2022-01-05)\r\nbinary: rustc\r\ncommit-hash: f1ce0e6a00593493a12e0e3662119786c761f375\r\ncommit-date: 2022-01-05\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.59.0-nightly\r\nLLVM version: 13.0.0\r\n\r\n```\r\n\r\n### Error output\r\n\r\n```\r\n    Checking langgg v0.1.0 (/home/ssha/git/langgg)\r\nthread 'rustc' panicked at 'index out of bounds: the len is 242 but the index is 242', compiler/rustc_query_impl/src/on_disk_cache.rs:726:18\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.59.0-nightly (f1ce0e6a0 2022-01-05) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [typeck] type-checking `lexer::tokens::Make::make::{closure#0}`\r\n#1 [check_match] match-checking `lexer::tokens::Make::make::{closure#0}`\r\nend of query stack\r\nerror: could not compile `langgg`\r\n\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\n    Checking langgg v0.1.0 (/home/ssha/git/langgg)\r\nthread 'rustc' panicked at 'index out of bounds: the len is 242 but the index is 242', compiler/rustc_query_impl/src/on_disk_cache.rs:726:18\r\nstack backtrace:\r\n   0: rust_begin_unwind\r\n             at /rustc/f1ce0e6a00593493a12e0e3662119786c761f375/library/std/src/panicking.rs:498:5\r\n   1: core::panicking::panic_fmt\r\n             at /rustc/f1ce0e6a00593493a12e0e3662119786c761f375/library/core/src/panicking.rs:107:14\r\n   2: core::panicking::panic_bounds_check\r\n             at /rustc/f1ce0e6a00593493a12e0e3662119786c761f375/library/core/src/panicking.rs:75:5\r\n   3: <rustc_span::span_encoding::Span as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode\r\n   4: <rustc_middle::ty::VariantDef as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode\r\n   5: <rustc_query_impl::on_disk_cache::CacheDecoder as rustc_serialize::serialize::Decoder>::read_seq::<alloc::vec::Vec<rustc_middle::ty::VariantDef>, <alloc::vec::Vec<rustc_middle::ty::VariantDef> as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode::{closure#0}>\r\n   6: <rustc_middle::ty::adt::AdtDef as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode\r\n   7: <rustc_middle::ty::sty::TyKind as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode\r\n   8: <&rustc_middle::ty::TyS as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode\r\n   9: <&rustc_middle::ty::TyS as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode\r\n  10: <core::result::Result<rustc_middle::ty::subst::GenericArg, alloc::string::String> as rustc_middle::ty::context::InternIteratorElement<rustc_middle::ty::subst::GenericArg, &rustc_middle::ty::list::List<rustc_middle::ty::subst::GenericArg>>>::intern_with::<core::iter::adapters::map::Map<core::ops::range::Range<usize>, <&rustc_middle::ty::list::List<rustc_middle::ty::subst::GenericArg> as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode::{closure#0}>, <rustc_middle::ty::context::TyCtxt>::mk_substs<core::iter::adapters::map::Map<core::ops::range::Range<usize>, <&rustc_middle::ty::list::List<rustc_middle::ty::subst::GenericArg> as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode::{closure#0}>>::{closure#0}>\r\n  11: <rustc_middle::ty::sty::TyKind as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode\r\n  12: <&rustc_middle::ty::TyS as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode\r\n  13: <&rustc_middle::ty::TyS as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode\r\n  14: <rustc_query_impl::on_disk_cache::CacheDecoder as rustc_serialize::serialize::Decoder>::read_map::<std::collections::hash::map::HashMap<rustc_hir::hir_id::ItemLocalId, &rustc_middle::ty::TyS, core::hash::BuildHasherDefault<rustc_hash::FxHasher>>, <std::collections::hash::map::HashMap<rustc_hir::hir_id::ItemLocalId, &rustc_middle::ty::TyS, core::hash::BuildHasherDefault<rustc_hash::FxHasher>> as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode::{closure#0}>\r\n  15: <rustc_middle::ty::context::TypeckResults as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode::{closure#0}\r\n  16: <&rustc_middle::ty::context::TypeckResults as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode\r\n  17: <rustc_query_impl::on_disk_cache::OnDiskCache>::try_load_query_result::<&rustc_middle::ty::context::TypeckResults>\r\n  18: rustc_query_system::query::plumbing::try_load_from_disk_and_cache_in_memory::<rustc_query_impl::plumbing::QueryCtxt, rustc_span::def_id::LocalDefId, &rustc_middle::ty::context::TypeckResults>\r\n  19: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::DefaultCache<rustc_span::def_id::LocalDefId, &rustc_middle::ty::context::TypeckResults>>\r\n  20: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::typeck\r\n  21: <rustc_middle::ty::context::TyCtxt>::typeck_body\r\n  22: rustc_mir_build::thir::pattern::check_match::check_match\r\n  23: <rustc_query_system::dep_graph::graph::DepGraph<rustc_middle::dep_graph::dep_node::DepKind>>::with_task::<rustc_middle::ty::context::TyCtxt, rustc_span::def_id::DefId, ()>\r\n  24: rustc_data_structures::stack::ensure_sufficient_stack::<((), rustc_query_system::dep_graph::graph::DepNodeIndex), rustc_query_system::query::plumbing::execute_job<rustc_query_impl::plumbing::QueryCtxt, rustc_span::def_id::DefId, ()>::{closure#3}>\r\n  25: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::DefaultCache<rustc_span::def_id::DefId, ()>>\r\n  26: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::check_match\r\n  27: <core::panic::unwind_safe::AssertUnwindSafe<rustc_interface::passes::analysis::{closure#1}::{closure#0}> as core::ops::function::FnOnce<()>>::call_once\r\n  28: <rustc_session::session::Session>::time::<(), rustc_interface::passes::analysis::{closure#1}>\r\n  29: rustc_interface::passes::analysis\r\n  30: <rustc_query_system::dep_graph::graph::DepGraph<rustc_middle::dep_graph::dep_node::DepKind>>::with_task::<rustc_middle::ty::context::TyCtxt, (), core::result::Result<(), rustc_errors::ErrorReported>>\r\n  31: rustc_data_structures::stack::ensure_sufficient_stack::<(core::result::Result<(), rustc_errors::ErrorReported>, rustc_query_system::dep_graph::graph::DepNodeIndex), rustc_query_system::query::plumbing::execute_job<rustc_query_impl::plumbing::QueryCtxt, (), core::result::Result<(), rustc_errors::ErrorReported>>::{closure#3}>\r\n  32: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::DefaultCache<(), core::result::Result<(), rustc_errors::ErrorReported>>>\r\n  33: rustc_query_system::query::plumbing::get_query::<rustc_query_impl::queries::analysis, rustc_query_impl::plumbing::QueryCtxt>\r\n  34: <rustc_interface::interface::Compiler>::enter::<rustc_driver::run_compiler::{closure#1}::{closure#2}, core::result::Result<core::option::Option<rustc_interface::queries::Linker>, rustc_errors::ErrorReported>>\r\n  35: rustc_span::with_source_map::<core::result::Result<(), rustc_errors::ErrorReported>, rustc_interface::interface::create_compiler_and_run<core::result::Result<(), rustc_errors::ErrorReported>, rustc_driver::run_compiler::{closure#1}>::{closure#1}>\r\n  36: rustc_interface::interface::create_compiler_and_run::<core::result::Result<(), rustc_errors::ErrorReported>, rustc_driver::run_compiler::{closure#1}>\r\n  37: <scoped_tls::ScopedKey<rustc_span::SessionGlobals>>::set::<rustc_interface::util::setup_callbacks_and_run_in_thread_pool_with_globals<rustc_interface::interface::run_compiler<core::result::Result<(), rustc_errors::ErrorReported>, rustc_driver::run_compiler::{closure#1}>::{closure#0}, core::result::Result<(), rustc_errors::ErrorReported>>::{closure#0}::{closure#0}, core::result::Result<(), rustc_errors::ErrorReported>>\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.59.0-nightly (f1ce0e6a0 2022-01-05) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [typeck] type-checking `lexer::tokens::Make::make::{closure#0}`\r\n#1 [check_match] match-checking `lexer::tokens::Make::make::{closure#0}`\r\n#2 [analysis] running analysis passes on this crate\r\nend of query stack\r\nerror: could not compile `langgg`\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\nFWIW it looks like it's happening `cargo check` but not `cargo build`.", "closed_by": {"login": "scrabsha", "id": 25402018, "node_id": "MDQ6VXNlcjI1NDAyMDE4", "avatar_url": "https://avatars.githubusercontent.com/u/25402018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scrabsha", "html_url": "https://github.com/scrabsha", "followers_url": "https://api.github.com/users/scrabsha/followers", "following_url": "https://api.github.com/users/scrabsha/following{/other_user}", "gists_url": "https://api.github.com/users/scrabsha/gists{/gist_id}", "starred_url": "https://api.github.com/users/scrabsha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scrabsha/subscriptions", "organizations_url": "https://api.github.com/users/scrabsha/orgs", "repos_url": "https://api.github.com/users/scrabsha/repos", "events_url": "https://api.github.com/users/scrabsha/events{/privacy}", "received_events_url": "https://api.github.com/users/scrabsha/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/93336/reactions", "total_count": 3, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 2, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/93336/timeline", "performed_via_github_app": null, "state_reason": "completed"}