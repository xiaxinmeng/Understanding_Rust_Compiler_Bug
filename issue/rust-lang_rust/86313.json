{"url": "https://api.github.com/repos/rust-lang/rust/issues/86313", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/86313/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/86313/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/86313/events", "html_url": "https://github.com/rust-lang/rust/issues/86313", "id": 920809745, "node_id": "MDU6SXNzdWU5MjA4MDk3NDU=", "number": 86313, "title": "`slice::split_mut` does not elide bound checks in release mode", "user": {"login": "daniel5151", "id": 2389445, "node_id": "MDQ6VXNlcjIzODk0NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2389445?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daniel5151", "html_url": "https://github.com/daniel5151", "followers_url": "https://api.github.com/users/daniel5151/followers", "following_url": "https://api.github.com/users/daniel5151/following{/other_user}", "gists_url": "https://api.github.com/users/daniel5151/gists{/gist_id}", "starred_url": "https://api.github.com/users/daniel5151/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daniel5151/subscriptions", "organizations_url": "https://api.github.com/users/daniel5151/orgs", "repos_url": "https://api.github.com/users/daniel5151/repos", "events_url": "https://api.github.com/users/daniel5151/events{/privacy}", "received_events_url": "https://api.github.com/users/daniel5151/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234956, "node_id": "MDU6TGFiZWwyMzQ5NTY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-codegen", "name": "A-codegen", "color": "f7e101", "default": false, "description": "Area: Code generation"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 2011781731, "node_id": "MDU6TGFiZWwyMDExNzgxNzMx", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs", "name": "T-libs", "color": "bfd4f2", "default": false, "description": "Relevant to the library team, which will review and decide on the PR/issue."}, {"id": 2238194189, "node_id": "MDU6TGFiZWwyMjM4MTk0MTg5", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-slice", "name": "A-slice", "color": "f7e101", "default": false, "description": "Area: [T]"}], "state": "closed", "locked": false, "assignee": {"login": "saethlin", "id": 12105168, "node_id": "MDQ6VXNlcjEyMTA1MTY4", "avatar_url": "https://avatars.githubusercontent.com/u/12105168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saethlin", "html_url": "https://github.com/saethlin", "followers_url": "https://api.github.com/users/saethlin/followers", "following_url": "https://api.github.com/users/saethlin/following{/other_user}", "gists_url": "https://api.github.com/users/saethlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/saethlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saethlin/subscriptions", "organizations_url": "https://api.github.com/users/saethlin/orgs", "repos_url": "https://api.github.com/users/saethlin/repos", "events_url": "https://api.github.com/users/saethlin/events{/privacy}", "received_events_url": "https://api.github.com/users/saethlin/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "saethlin", "id": 12105168, "node_id": "MDQ6VXNlcjEyMTA1MTY4", "avatar_url": "https://avatars.githubusercontent.com/u/12105168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saethlin", "html_url": "https://github.com/saethlin", "followers_url": "https://api.github.com/users/saethlin/followers", "following_url": "https://api.github.com/users/saethlin/following{/other_user}", "gists_url": "https://api.github.com/users/saethlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/saethlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saethlin/subscriptions", "organizations_url": "https://api.github.com/users/saethlin/orgs", "repos_url": "https://api.github.com/users/saethlin/repos", "events_url": "https://api.github.com/users/saethlin/events{/privacy}", "received_events_url": "https://api.github.com/users/saethlin/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2021-06-14T22:03:13Z", "updated_at": "2022-07-18T15:50:54Z", "closed_at": "2022-07-18T12:57:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\nalong with any information you feel relevant to replicating the bug.\n-->\n\nAs part of an ongoing effort to eliminate all panics from one of my `no_std` projects, I discovered that `slice::split_mut` does not elide bounds checks in release mode, whereas `slice::split` does.\n\nThis issue also affects `slice::splitn_mut`.\n\nThe following examples illustrate this issue:\n\n```rust\npub fn split(s: &mut [u8]) {\n    for s in s.split(|b| *b == b' ') {\n        black_box(s);\n    }\n}\n\n// stable block_box pulled from\n// https://docs.rs/bencher/0.1.5/src/bencher/lib.rs.html#590-596\npub fn black_box<T>(dummy: T) -> T {\n    unsafe {\n        let ret = core::ptr::read_volatile(&dummy);\n        core::mem::forget(dummy);\n        ret\n    }\n}\n```\n\nThe generated asm for `split` elides all bounds checks:\n\n```asm\nplayground::split:\n\tsub\trsp, 16\n\n.LBB0_1:\n\ttest\trsi, rsi\n\tje\t.LBB0_2\n\tlea\trax, [rdi + 1]\n\txor\tecx, ecx\n\n.LBB0_4:\n\tcmp\tbyte ptr [rax - 1], 32\n\tje\t.LBB0_7\n\tadd\trcx, 1\n\tadd\trax, 1\n\tcmp\trsi, rcx\n\tjne\t.LBB0_4\n\txor\tedx, edx\n\tmov\trax, rdi\n\tmov\trcx, rsi\n\ttest\trdi, rdi\n\tjne\t.LBB0_9\n\tjmp\t.LBB0_10\n\n.LBB0_2:\n\txor\tesi, esi\n\tmov\trax, rdi\n\txor\tedx, edx\n\txor\tecx, ecx\n\ttest\trdi, rdi\n\tjne\t.LBB0_9\n\tjmp\t.LBB0_10\n\n.LBB0_7:\n\tmov\trdx, rcx\n\tnot\trdx\n\tadd\trsi, rdx\n\tmov\tdl, 1\n\ttest\trdi, rdi\n\tje\t.LBB0_10\n\n.LBB0_9:\n\tmov\tqword ptr [rsp], rdi\n\tmov\tqword ptr [rsp + 8], rcx\n\tmov\trcx, qword ptr [rsp + 8]\n\tmov\trcx, qword ptr [rsp]\n\tmov\trdi, rax\n\ttest\tdl, dl\n\tjne\t.LBB0_1\n\n.LBB0_10:\n\tadd\trsp, 16\n\tret\n```\n\nUnfortunately, the bounds check is reintroduced when `split_mut` is used instead:\n\n```rust\npub fn split_mut(s: &mut [u8]) {\n    for s in s.split_mut(|b| *b == b' ') {\n        black_box(s);\n    }\n}\n```\n\n```asm\nplayground::split_mut:\n\tsub\trsp, 24\n\tlea\tr8, [rip + .L__unnamed_1]\n\tjmp\t.LBB0_1\n\n.LBB0_2:\n\txor\teax, eax\n\tmov\trcx, r8\n\txor\tr9d, r9d\n\txor\tesi, esi\n\n.LBB0_9:\n\tmov\tqword ptr [rsp + 8], rdi\n\tmov\tqword ptr [rsp + 16], rsi\n\tmov\trdx, qword ptr [rsp + 16]\n\tmov\trdx, qword ptr [rsp + 8]\n\tmov\trsi, rax\n\tmov\trdi, rcx\n\ttest\tr9b, r9b\n\tje\t.LBB0_10\n\n.LBB0_1:\n\ttest\trsi, rsi\n\tje\t.LBB0_2\n\tlea\trcx, [rdi + 1]\n\txor\tedx, edx\n\n.LBB0_4:\n\tcmp\tbyte ptr [rcx - 1], 32\n\tje\t.LBB0_7\n\tadd\trdx, 1\n\tadd\trcx, 1\n\tcmp\trsi, rdx\n\tjne\t.LBB0_4\n\txor\teax, eax\n\tmov\trcx, r8\n\txor\tr9d, r9d\n\tjmp\t.LBB0_9\n\n.LBB0_7:\n\tcmp\trsi, rdx\n\tje\t.LBB0_11\n\tmov\trax, rdx\n\tnot\trax\n\tadd\trax, rsi\n\tmov\tr9b, 1\n\tmov\trsi, rdx\n\tjmp\t.LBB0_9\n\n.LBB0_10:\n\tadd\trsp, 24\n\tret\n\n.LBB0_11:\n\tlea\trdx, [rip + .L__unnamed_2]\n\tmov\tedi, 1\n\txor\tesi, esi\n\tcall\tqword ptr [rip + core::slice::index::slice_start_index_len_fail@GOTPCREL]\n\tud2\n\n.L__unnamed_1:\n\n.L__unnamed_3:\n\t.ascii\t\"/rustc/9bc8c42bb2f19e745a63f3445f1ac248fb015e53/library/core/src/slice/iter.rs\"\n\n.L__unnamed_2:\n\t.quad\t.L__unnamed_3\n\t.asciz\t\"N\\000\\000\\000\\000\\000\\000\\000z\\002\\000\\000\\037\\000\\000\"\n```\n\n\nIt seems that the following code in the `SplitMut` iterator is responsible for introducing the bounds check (specifically the array index on line 640):\n\nhttps://github.com/rust-lang/rust/blob/673d0db5e393e9c64897005b470bfeb6d5aec61b/library/core/src/slice/iter.rs#L630-L643\n\n### Meta\n<!--\nIf you're using the stable version of the compiler, you should also check if the\nbug also exists in the beta or nightly versions.\n-->\n\n`rustc --version --verbose`:\n```\nrustc 1.52.1 (9bc8c42bb 2021-05-09)\nbinary: rustc\ncommit-hash: 9bc8c42bb2f19e745a63f3445f1ac248fb015e53\ncommit-date: 2021-05-09\nhost: x86_64-unknown-linux-gnu\nrelease: 1.52.1\nLLVM version: 12.0.0\n```\n\nAlso tested on `1.55.0-nightly (2021-06-13 f586d79d183d144e0cbf)` from the Rust playground.\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"saethlin\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/86313/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/86313/timeline", "performed_via_github_app": null, "state_reason": "completed"}