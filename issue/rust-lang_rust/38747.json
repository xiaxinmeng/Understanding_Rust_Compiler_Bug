{"url": "https://api.github.com/repos/rust-lang/rust/issues/38747", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/38747/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/38747/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/38747/events", "html_url": "https://github.com/rust-lang/rust/issues/38747", "id": 198250200, "node_id": "MDU6SXNzdWUxOTgyNTAyMDA=", "number": 38747, "title": "document behavior of collect() for empty iterators", "user": {"login": "generalelectrix", "id": 1912879, "node_id": "MDQ6VXNlcjE5MTI4Nzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1912879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/generalelectrix", "html_url": "https://github.com/generalelectrix", "followers_url": "https://api.github.com/users/generalelectrix/followers", "following_url": "https://api.github.com/users/generalelectrix/following{/other_user}", "gists_url": "https://api.github.com/users/generalelectrix/gists{/gist_id}", "starred_url": "https://api.github.com/users/generalelectrix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/generalelectrix/subscriptions", "organizations_url": "https://api.github.com/users/generalelectrix/orgs", "repos_url": "https://api.github.com/users/generalelectrix/repos", "events_url": "https://api.github.com/users/generalelectrix/events{/privacy}", "received_events_url": "https://api.github.com/users/generalelectrix/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-12-31T23:07:23Z", "updated_at": "2017-01-03T19:32:26Z", "closed_at": "2017-01-03T19:32:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Not sure where this would belong, as it certainly comes down to implementation details of different collections.  However, in the common case of collect()ing an iterator into a Vec, it would be helpful if there was documentation somewhere that makes it clear that _collecting an empty iterator into a Vec does not perform a memory allocation_.\r\n\r\nIn my case I had a happy path where the iterator would be empty, indicating an absence of error states, and I wanted to ensure that this path doesn't involve an allocation.  I was using a workaround where I'd use peekable, and peek at the first element and only .collect() in the case where I had at least one element.  I asked on IRC and they clarified that no allocation takes place for an empty iterator.", "closed_by": {"login": "generalelectrix", "id": 1912879, "node_id": "MDQ6VXNlcjE5MTI4Nzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1912879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/generalelectrix", "html_url": "https://github.com/generalelectrix", "followers_url": "https://api.github.com/users/generalelectrix/followers", "following_url": "https://api.github.com/users/generalelectrix/following{/other_user}", "gists_url": "https://api.github.com/users/generalelectrix/gists{/gist_id}", "starred_url": "https://api.github.com/users/generalelectrix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/generalelectrix/subscriptions", "organizations_url": "https://api.github.com/users/generalelectrix/orgs", "repos_url": "https://api.github.com/users/generalelectrix/repos", "events_url": "https://api.github.com/users/generalelectrix/events{/privacy}", "received_events_url": "https://api.github.com/users/generalelectrix/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/38747/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/38747/timeline", "performed_via_github_app": null, "state_reason": "completed"}