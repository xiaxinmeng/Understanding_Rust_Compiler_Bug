{"url": "https://api.github.com/repos/rust-lang/rust/issues/64712", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/64712/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/64712/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/64712/events", "html_url": "https://github.com/rust-lang/rust/issues/64712", "id": 497213609, "node_id": "MDU6SXNzdWU0OTcyMTM2MDk=", "number": 64712, "title": "Compiler option to augment implicitly typed variables in the code with explicit type information", "user": {"login": "andswitch", "id": 52726, "node_id": "MDQ6VXNlcjUyNzI2", "avatar_url": "https://avatars.githubusercontent.com/u/52726?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andswitch", "html_url": "https://github.com/andswitch", "followers_url": "https://api.github.com/users/andswitch/followers", "following_url": "https://api.github.com/users/andswitch/following{/other_user}", "gists_url": "https://api.github.com/users/andswitch/gists{/gist_id}", "starred_url": "https://api.github.com/users/andswitch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andswitch/subscriptions", "organizations_url": "https://api.github.com/users/andswitch/orgs", "repos_url": "https://api.github.com/users/andswitch/repos", "events_url": "https://api.github.com/users/andswitch/events{/privacy}", "received_events_url": "https://api.github.com/users/andswitch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-23T16:52:47Z", "updated_at": "2019-09-23T17:11:53Z", "closed_at": "2019-09-23T16:59:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nType inference is nice. You can write code faster since you don't have to change type annotations all over the place when you change the type of one thing somewhere. On the other hand, I also think that in some cases it takes more time to grok implicitly typed code, especially if the problem domain and/or the architecture is new to you. You have to dig more into the code to figure out just what you are looking at.\r\n\r\nThe Rust plugin for CLion puts little tags with the types next to implicitly typed variables. Imho this is really nice because it gives you the type information immediately. You don't have to backtrack anywhere in the code to figure it out. I think this feature also signals there is a need for people to have type information at hand.\r\n\r\nA lot of programming time is spent searching API documentation. To me, this is another reason why the extra step of digging for types in implicitly typed code can be undesirable: it's additional cognitive overhead. First you need to figure out the type, then you need to go to the API docs to figure out how it works. It would be easier if the first step was not necessary.\r\n\r\n**Just to be clear: I'm not arguing against the existence of type inference or implicitly typed code.** I just think that maintaining a large code base over a long period of time is easier with explicit type information. Especially because software developers come and go. Explicit type information allows new people to grok code faster.\r\n\r\nI wonder if more people feel the same way, and in that case could there be some kind of tool (maybe a compiler flag) that transforms the source code by automatically adding type annotations to implicitly typed variables? Like a pre-processing step that you run manually. Just literally performing Rust's type inference algorithm and saving the resulting type annotations in the code as if you typed them there. Personally, I could see myself applying it for instance to a large legacy code base. I think that could help maintainability of the code in such cases...", "closed_by": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/64712/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/64712/timeline", "performed_via_github_app": null, "state_reason": "completed"}