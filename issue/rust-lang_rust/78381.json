{"url": "https://api.github.com/repos/rust-lang/rust/issues/78381", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/78381/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/78381/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/78381/events", "html_url": "https://github.com/rust-lang/rust/issues/78381", "id": 729135112, "node_id": "MDU6SXNzdWU3MjkxMzUxMTI=", "number": 78381, "title": "Allow `deprecated_in_future` lint to specify an indeterminate future deprecation date", "user": {"login": "bstrie", "id": 865233, "node_id": "MDQ6VXNlcjg2NTIzMw==", "avatar_url": "https://avatars.githubusercontent.com/u/865233?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bstrie", "html_url": "https://github.com/bstrie", "followers_url": "https://api.github.com/users/bstrie/followers", "following_url": "https://api.github.com/users/bstrie/following{/other_user}", "gists_url": "https://api.github.com/users/bstrie/gists{/gist_id}", "starred_url": "https://api.github.com/users/bstrie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bstrie/subscriptions", "organizations_url": "https://api.github.com/users/bstrie/orgs", "repos_url": "https://api.github.com/users/bstrie/repos", "events_url": "https://api.github.com/users/bstrie/events{/privacy}", "received_events_url": "https://api.github.com/users/bstrie/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235137, "node_id": "MDU6TGFiZWwyMzUxMzc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lint", "name": "A-lint", "color": "f7e101", "default": false, "description": "Area: Lints (warnings about flaws in source code) such as unused_mut."}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-10-25T22:59:59Z", "updated_at": "2020-12-17T06:00:13Z", "closed_at": "2020-12-17T06:00:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In #78335 there was discussion regarding a first-class \"soft deprecation\" mechanism.\r\n\r\nFor background, currently the numeric constants in the primitive-shadowing std modules (e.g. `std::u8::MAX`) have been superseded by associated constants (#68490). The old constants have been \"soft deprecated\", which is to say that their documentation suggests the new alternatives, but there is no lint or compiler warning implemented to suggest this.\r\n\r\nThe obvious next step would be to deprecate these constants, but the deprecation lint is warn-by-default, and some members of the libs team are concerned that this is too minor of a change to justify warnings (outside of an edition, anyway).\r\n\r\nThere is a more gradual change that should be more palatable: the deprecated_in_future lint (https://github.com/rust-lang/rust/pull/56203). This lint differs from deprecation in that it is **allow**-by-default rather than warn-by-default. It would allow users to opt-in to warnings (useful for, e.g., the compiler itself: #78380). Furthermore this lint has the additional benefit of being as visible in the docs as an ordinary deprecation, which is a primary concern of #68490. It's the perfect middle ground to resolve the tension here.\r\n\r\nHowever, the deprecated_in_future lint is triggered by giving the usual `rustc_deprecated` attribute a `since` value in the future. For the purpose of maximum political expedience, it would be nice in this instance to not have to determine an actual specific deprecation date, and merely suggest that it will be deprecated \"eventually\".\r\n\r\nIn particular, a release coinciding with an edition seems like a natural time to deprecate, but we won't know exactly which release that will be until much closer to the edition date. In the interim it seems a shame that such scheduling details should prevent users from opting-in to deprecation warnings.\r\n\r\nIf such a feature existed, we can imagine that it would have already naturally been employed when the documentation of `std::u8::MAX` et al was originally changed to mention \"soft deprecation\".\r\n\r\nI propose that the `rustc_deprecated` attribute should be able to accept a `since` value of `\"TBD\"`, in order to trigger the benefits of the deprecated_in_future lint without having to commit to a concrete deprecation date.", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/78381/reactions", "total_count": 4, "+1": 4, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/78381/timeline", "performed_via_github_app": null, "state_reason": "completed"}