{"url": "https://api.github.com/repos/rust-lang/rust/issues/85383", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/85383/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/85383/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/85383/events", "html_url": "https://github.com/rust-lang/rust/issues/85383", "id": 892762640, "node_id": "MDU6SXNzdWU4OTI3NjI2NDA=", "number": 85383, "title": "E0716: confusing reference to borrow of `Stdin` value when there's no obvious reference within `StdinLock`", "user": {"login": "tlyu", "id": 431873, "node_id": "MDQ6VXNlcjQzMTg3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/431873?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tlyu", "html_url": "https://github.com/tlyu", "followers_url": "https://api.github.com/users/tlyu/followers", "following_url": "https://api.github.com/users/tlyu/following{/other_user}", "gists_url": "https://api.github.com/users/tlyu/gists{/gist_id}", "starred_url": "https://api.github.com/users/tlyu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tlyu/subscriptions", "organizations_url": "https://api.github.com/users/tlyu/orgs", "repos_url": "https://api.github.com/users/tlyu/repos", "events_url": "https://api.github.com/users/tlyu/events{/privacy}", "received_events_url": "https://api.github.com/users/tlyu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}, {"id": 171502053, "node_id": "MDU6TGFiZWwxNzE1MDIwNTM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-borrow-checker", "name": "A-borrow-checker", "color": "f7e101", "default": false, "description": "Area: The borrow checker"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1596121013, "node_id": "MDU6TGFiZWwxNTk2MTIxMDEz", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-confusing", "name": "D-confusing", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error that should be reworked"}, {"id": 1596122811, "node_id": "MDU6TGFiZWwxNTk2MTIyODEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-newcomer-roadblock", "name": "D-newcomer-roadblock", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error hard to understand for new users"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2021-05-16T21:21:46Z", "updated_at": "2021-07-03T13:23:26Z", "closed_at": "2021-07-03T13:23:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Given the following code: [(playground)](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=4129b8aca043f4e6a3c6ea755c5ed954)\r\n\r\n```rust\r\nuse std::io::{self, BufRead};\r\nfn main() {\r\n    let locked = io::stdin().lock();\r\n    for line in locked.lines() {\r\n        println!(\"{}\", line.unwrap());\r\n    }\r\n}\r\n```\r\n\r\nThe current output is:\r\n\r\n```\r\n   Compiling playground v0.0.1 (/playground)\r\nerror[E0716]: temporary value dropped while borrowed\r\n --> src/main.rs:3:18\r\n  |\r\n3 |     let locked = io::stdin().lock();\r\n  |                  ^^^^^^^^^^^       - temporary value is freed at the end of this statement\r\n  |                  |\r\n  |                  creates a temporary which is freed while still in use\r\n4 |     for line in locked.lines() {\r\n  |                 ------ borrow later used here\r\n  |\r\n  = note: consider using a `let` binding to create a longer lived value\r\n\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0716`.\r\nerror: could not compile `playground`\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n\r\nI think it's typical for a newcomer to want to get a `Lines` iterator by chaining method calls like `io::stdin().lock().lines()`. There's no obvious reason why that shouldn't work. The examples in the `std::io` documentation do typically show `io::stdin()` being assigned to a variable prior to calling its `.lock()` method, but don't explain why that's necessary.\r\n\r\nI think the \"borrow\" terminology is misleading, but there might not be a concise way to describe what's actually going on to the user. The \"temporary value is freed at the end of this statement\" is probably correct. The \"creates a temporary which is freed while still in use\" is probably more correctly \"creates a temporary that is required to outlive (or live exactly as long as) the result of...\", followed by a pointer to the `.lock()` method invocation, with text of \"...this method call\". Maybe it should also point out the `'_` lifetime argument in the `StdinLock<'_>` return type.\r\n\r\nI tried and failed to find a satisfactory explanation of what exactly `StdinLock` was borrowing from the temporary `Stdin` value produced by `io::stdin()`. When I looked through the library source code, the only references in `StdinLock` were those created by locking a `Mutex`, and the `Mutex` in question is static. I'm guessing the existence of a borrow is assumed rather than inferred from analyzing the function body of `io::Stdin::lock()`. The assumption might be the result of the anonymous lifetime argument on the output type `StdinLock<'_>` from `io::Stdin::lock()`, which imposes a requirement that the `StdinLock` doesn't outlive (or has the same lifetime as?) the `Stdin` value that is the receiver of `lock()`.\r\n\r\nThe correct fix might be to change the locked stdin handles to all use `'static` lifetimes, but I will probably file that as a separate issue.\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/85383/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/85383/timeline", "performed_via_github_app": null, "state_reason": "completed"}