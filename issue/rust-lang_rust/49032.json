{"url": "https://api.github.com/repos/rust-lang/rust/issues/49032", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/49032/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/49032/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/49032/events", "html_url": "https://github.com/rust-lang/rust/issues/49032", "id": 305384398, "node_id": "MDU6SXNzdWUzMDUzODQzOTg=", "number": 49032, "title": "panic mode where it aborts upon panic iff there are no catch_unwind calls to catch it", "user": {"login": "michaeleiselsc", "id": 7732829, "node_id": "MDQ6VXNlcjc3MzI4Mjk=", "avatar_url": "https://avatars.githubusercontent.com/u/7732829?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaeleiselsc", "html_url": "https://github.com/michaeleiselsc", "followers_url": "https://api.github.com/users/michaeleiselsc/followers", "following_url": "https://api.github.com/users/michaeleiselsc/following{/other_user}", "gists_url": "https://api.github.com/users/michaeleiselsc/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaeleiselsc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaeleiselsc/subscriptions", "organizations_url": "https://api.github.com/users/michaeleiselsc/orgs", "repos_url": "https://api.github.com/users/michaeleiselsc/repos", "events_url": "https://api.github.com/users/michaeleiselsc/events{/privacy}", "received_events_url": "https://api.github.com/users/michaeleiselsc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234956, "node_id": "MDU6TGFiZWwyMzQ5NTY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-codegen", "name": "A-codegen", "color": "f7e101", "default": false, "description": "Area: Code generation"}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2018-03-15T01:27:55Z", "updated_at": "2019-12-09T15:40:44Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "The two options for panic handling, abort and unwind, seem insufficient to cover my use case. When I release my app to users, I use a crash reporter (catches crash signals with a signal handler, records the stack trace, and uploads it). If I use abort for panics, then I'll see the stack trace of the panic in my crash reporter, but I won't be able to catch panics. If I use unwind, then I'll be able to catch panics, but uncaught panics will unwind all the way to the FFI boundary (this is an app built in another language and calls into Rust). This means that I won't be able to see the full stack trace. I see a few existing solutions:\r\n- Use abort mode and never catch panics (this won't work for me personally, because there are places where I need to catch panics, e.g. for OOM)\r\n- Have a thread-local variable with the number of catch_unwind calls that I'm currently nested in. Use my own version of catch_unwind to update it. If this number is 0, then that means the panic is going to abort after some amount of unwinding, so just abort it right there. Otherwise, leave it alone because it will be caught gracefully. This will cause aborts if the catch_unwind calls are outside of my code base, but that doesn't seem too common\r\n\r\nAny ideas what a good way to deal with this is?", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/49032/reactions", "total_count": 3, "+1": 3, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/49032/timeline", "performed_via_github_app": null, "state_reason": null}