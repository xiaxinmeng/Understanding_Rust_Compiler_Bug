{"url": "https://api.github.com/repos/rust-lang/rust/issues/34971", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/34971/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/34971/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/34971/events", "html_url": "https://github.com/rust-lang/rust/issues/34971", "id": 166981924, "node_id": "MDU6SXNzdWUxNjY5ODE5MjQ=", "number": 34971, "title": "Bad handling of thread join deadlock in standard library", "user": {"login": "eefriedman", "id": 12769964, "node_id": "MDQ6VXNlcjEyNzY5OTY0", "avatar_url": "https://avatars.githubusercontent.com/u/12769964?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eefriedman", "html_url": "https://github.com/eefriedman", "followers_url": "https://api.github.com/users/eefriedman/followers", "following_url": "https://api.github.com/users/eefriedman/following{/other_user}", "gists_url": "https://api.github.com/users/eefriedman/gists{/gist_id}", "starred_url": "https://api.github.com/users/eefriedman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eefriedman/subscriptions", "organizations_url": "https://api.github.com/users/eefriedman/orgs", "repos_url": "https://api.github.com/users/eefriedman/repos", "events_url": "https://api.github.com/users/eefriedman/events{/privacy}", "received_events_url": "https://api.github.com/users/eefriedman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-07-22T06:56:38Z", "updated_at": "2019-12-09T18:24:15Z", "closed_at": "2019-12-09T18:24:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "``` rust\nuse std::sync::mpsc::Sender;\nuse std::sync::mpsc::Receiver;\nuse std::thread::JoinHandle;\nfn main() {\n    let (c1s, c1r) = std::sync::mpsc::channel::<JoinHandle<_>>();\n    let (c2s, c2r) = std::sync::mpsc::channel::<JoinHandle<_>>();\n    let (c3s, c3r) = std::sync::mpsc::channel::<()>();\n    let t1 = std::thread::spawn(move || {\n        let () = c1r.recv().expect(\"D\").join().expect(\"A\");\n    });\n    let t2 = std::thread::spawn(move || {\n        let () = c2r.recv().expect(\"E\").join().expect(\"B\");\n        c3s.send(());\n    });\n    c1s.send(t2);\n    c2s.send(t1);\n    c3r.recv().expect(\"C\");\n}\n```\n\nGives (on playground):\n\n```\nthread '<unnamed>' panicked at 'called `Option::unwrap()` on a `None` value', ../src/libcore/option.rs:325\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\nthread '<unnamed>' panicked at 'B: Any', ../src/libcore/result.rs:785\nthread '<main>' panicked at 'C: RecvError', ../src/libcore/result.rs:785\n```\n\nThere are two problems here:\n1. The error message is absolutely terrible.\n2. For the sake of safety, we might need to do something other than panic if this happens.  This could affect crates which require that join() never returns early, like crossbeam.\n", "closed_by": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/34971/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/34971/timeline", "performed_via_github_app": null, "state_reason": "completed"}