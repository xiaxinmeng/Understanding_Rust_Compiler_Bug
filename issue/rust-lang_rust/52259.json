{"url": "https://api.github.com/repos/rust-lang/rust/issues/52259", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/52259/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/52259/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/52259/events", "html_url": "https://github.com/rust-lang/rust/issues/52259", "id": 340283595, "node_id": "MDU6SXNzdWUzNDAyODM1OTU=", "number": 52259, "title": "ICE: \"leak-check would have us replace ... with ...\" (HRTBs)", "user": {"login": "LukasKalbertodt", "id": 7419664, "node_id": "MDQ6VXNlcjc0MTk2NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7419664?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LukasKalbertodt", "html_url": "https://github.com/LukasKalbertodt", "followers_url": "https://api.github.com/users/LukasKalbertodt/followers", "following_url": "https://api.github.com/users/LukasKalbertodt/following{/other_user}", "gists_url": "https://api.github.com/users/LukasKalbertodt/gists{/gist_id}", "starred_url": "https://api.github.com/users/LukasKalbertodt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LukasKalbertodt/subscriptions", "organizations_url": "https://api.github.com/users/LukasKalbertodt/orgs", "repos_url": "https://api.github.com/users/LukasKalbertodt/repos", "events_url": "https://api.github.com/users/LukasKalbertodt/events{/privacy}", "received_events_url": "https://api.github.com/users/LukasKalbertodt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-11T15:04:04Z", "updated_at": "2018-10-10T12:53:37Z", "closed_at": "2018-10-10T12:53:37Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I tried this code ([Playground](https://play.rust-lang.org/?gist=6725437d4879ca49d74fb0c55f709ba1&version=stable&mode=debug&edition=2015), this is as minimal as I can get it):\r\n\r\n```rust\r\n// ======================================\r\n// BaseTrait\r\n// ======================================\r\ntrait BaseTrait<'s> {\r\n    type Target;\r\n}\r\n\r\n// Impl for ()\r\nimpl<'s> BaseTrait<'s> for () {\r\n    type Target = u32;\r\n}\r\n\r\n// Impl for references\r\nimpl<'s, M> BaseTrait<'s> for &'s M\r\nwhere\r\n    M: BaseTrait<'s>,\r\n{\r\n    type Target = M::Target;\r\n}\r\n\r\n\r\n// ======================================\r\n// MidTrait\r\n// ======================================\r\ntrait MidTrait<'s> {}\r\n\r\nimpl<'s, M> MidTrait<'s> for M\r\nwhere\r\n    M: BaseTrait<'s>,\r\n    M::Target: Clone,\r\n{\r\n}\r\n\r\n\r\n// ======================================\r\n// TopTrait\r\n// ======================================\r\ntrait TopTrait {\r\n    fn write(&self);\r\n}\r\n\r\nimpl<T> TopTrait for Vec<T>\r\nwhere\r\n    T: for<'t> MidTrait<'t>,\r\n{\r\n    fn write(&self) {}\r\n}\r\n\r\n\r\n// ======================================\r\n// main\r\n// ======================================\r\nfn main() {\r\n    vec![&()].write();\r\n}\r\n```\r\nThis results in:\r\n\r\n```\r\nthread 'main' panicked at 'leak-check would have us replace ReErased with BrNamed(crate0:DefIndex(1:17), 't)', librustc/infer/higher_ranked/mod.rs:743:21\r\nstack backtrace:\r\n   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace\r\n             at libstd/sys/unix/backtrace/tracing/gcc_s.rs:49\r\n   1: std::sys_common::backtrace::print\r\n             at libstd/sys_common/backtrace.rs:71\r\n             at libstd/sys_common/backtrace.rs:59\r\n   2: std::panicking::default_hook::{{closure}}\r\n             at libstd/panicking.rs:211\r\n   3: std::panicking::default_hook\r\n             at libstd/panicking.rs:227\r\n   4: rustc::util::common::panic_hook\r\n   5: std::panicking::rust_panic_with_hook\r\n             at libstd/panicking.rs:479\r\n   6: std::panicking::continue_panic_fmt\r\n             at libstd/panicking.rs:390\r\n   7: std::panicking::begin_panic_fmt\r\n             at libstd/panicking.rs:345\r\n   8: rustc::infer::higher_ranked::<impl rustc::infer::InferCtxt<'a, 'gcx, 'tcx>>::plug_leaks::{{closure}}\r\n   9: rustc::ty::structural_impls::<impl rustc::ty::fold::TypeFoldable<'tcx> for &'tcx rustc::ty::TyS<'tcx>>::super_fold_with\r\n  10: <rustc_data_structures::array_vec::ArrayVec<A> as core::iter::traits::Extend<<A as rustc_data_structures::array_vec::Array>::Element>>::extend\r\n  11: <rustc_data_structures::accumulate_vec::AccumulateVec<A> as core::iter::traits::FromIterator<<A as rustc_data_structures::array_vec::Array>::Element>>::from_iter\r\n  12: rustc::ty::fold::TypeFoldable::fold_with\r\n  13: rustc::ty::fold::TypeFoldable::fold_with\r\n  14: rustc::ty::fold::TypeFoldable::fold_with\r\n  15: rustc::infer::higher_ranked::<impl rustc::infer::InferCtxt<'a, 'gcx, 'tcx>>::plug_leaks\r\n  16: rustc::traits::select::SelectionContext::impl_or_trait_obligations\r\n  17: rustc::traits::select::SelectionContext::vtable_impl\r\n  18: rustc::infer::InferCtxt::in_snapshot\r\n  19: rustc::traits::select::SelectionContext::confirm_candidate\r\n  20: rustc::traits::select::SelectionContext::select\r\n  21: <rustc_data_structures::obligation_forest::ObligationForest<O>>::process_obligations\r\n  22: <rustc::traits::fulfill::FulfillmentContext<'tcx> as rustc::traits::engine::TraitEngine<'tcx>>::select_where_possible\r\n  23: <rustc::traits::fulfill::FulfillmentContext<'tcx> as rustc::traits::engine::TraitEngine<'tcx>>::select_all_or_error\r\n  24: rustc::traits::codegen::<impl rustc::infer::InferCtxt<'a, 'gcx, 'tcx>>::drain_fulfillment_cx_or_panic\r\n  25: rustc::ty::context::tls::with_related_context\r\n  26: rustc::infer::InferCtxtBuilder::enter\r\n  27: rustc::traits::codegen::codegen_fulfill_obligation\r\n  28: rustc::ty::query::__query_compute::codegen_fulfill_obligation\r\n  29: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors<'tcx> for rustc::ty::query::queries::codegen_fulfill_obligation<'tcx>>::compute\r\n  30: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  31: rustc::ty::context::tls::with_related_context\r\n  32: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::force_query_with_job\r\n  33: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::get_query\r\n  34: rustc::ty::instance::Instance::resolve\r\n  35: rustc_mir::monomorphize::collector::visit_fn_use\r\n  36: <rustc_mir::monomorphize::collector::MirNeighborCollector<'a, 'tcx> as rustc::mir::visit::Visitor<'tcx>>::visit_terminator_kind\r\n  37: rustc_mir::monomorphize::collector::collect_items_rec\r\n  38: rustc_mir::monomorphize::collector::collect_crate_mono_items::{{closure}}\r\n  39: rustc::util::common::time\r\n  40: rustc_mir::monomorphize::collector::collect_crate_mono_items\r\n  41: rustc::util::common::time\r\n  42: rustc_codegen_llvm::base::collect_and_partition_mono_items\r\n  43: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors<'tcx> for rustc::ty::query::queries::collect_and_partition_mono_items<'tcx>>::compute\r\n  44: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  45: rustc::ty::context::tls::with_related_context\r\n  46: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::force_query_with_job\r\n  47: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::get_query\r\n  48: <rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_utils::codegen_backend::CodegenBackend>::codegen_crate\r\n  49: rustc::util::common::time\r\n  50: rustc_driver::driver::phase_4_codegen\r\n  51: rustc_driver::driver::compile_input::{{closure}}\r\n  52: rustc::ty::context::tls::enter_context\r\n  53: <std::thread::local::LocalKey<T>>::with\r\n  54: rustc::ty::context::TyCtxt::create_and_enter\r\n  55: rustc_driver::driver::compile_input\r\n  56: rustc_driver::run_compiler_with_pool\r\n  57: <scoped_tls::ScopedKey<T>>::set\r\n  58: <scoped_tls::ScopedKey<T>>::set\r\n  59: syntax::with_globals\r\n  60: <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once\r\n  61: __rust_maybe_catch_panic\r\n             at libpanic_unwind/lib.rs:105\r\n  62: rustc_driver::run\r\n  63: rustc_driver::main\r\n  64: std::rt::lang_start::{{closure}}\r\n  65: std::panicking::try::do_call\r\n             at libstd/rt.rs:59\r\n             at libstd/panicking.rs:310\r\n  66: __rust_maybe_catch_panic\r\n             at libpanic_unwind/lib.rs:105\r\n  67: std::rt::lang_start_internal\r\n             at libstd/panicking.rs:289\r\n             at libstd/panic.rs:392\r\n             at libstd/rt.rs:58\r\n  68: main\r\n  69: __libc_start_main\r\n  70: <unknown>\r\nquery stack during panic:\r\n#0 [codegen_fulfill_obligation] checking if `TopTrait` fulfills its obligations\r\n#1 [collect_and_partition_mono_items] collect_and_partition_mono_items\r\nend of query stack\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.29.0-nightly (e5f6498d3 2018-07-10) running on x86_64-unknown-linux-gnu\r\n```\r\n\r\n\r\nHappens on stable and nightly.", "closed_by": {"login": "LukasKalbertodt", "id": 7419664, "node_id": "MDQ6VXNlcjc0MTk2NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7419664?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LukasKalbertodt", "html_url": "https://github.com/LukasKalbertodt", "followers_url": "https://api.github.com/users/LukasKalbertodt/followers", "following_url": "https://api.github.com/users/LukasKalbertodt/following{/other_user}", "gists_url": "https://api.github.com/users/LukasKalbertodt/gists{/gist_id}", "starred_url": "https://api.github.com/users/LukasKalbertodt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LukasKalbertodt/subscriptions", "organizations_url": "https://api.github.com/users/LukasKalbertodt/orgs", "repos_url": "https://api.github.com/users/LukasKalbertodt/repos", "events_url": "https://api.github.com/users/LukasKalbertodt/events{/privacy}", "received_events_url": "https://api.github.com/users/LukasKalbertodt/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/52259/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/52259/timeline", "performed_via_github_app": null, "state_reason": "completed"}