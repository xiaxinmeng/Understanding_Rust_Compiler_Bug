{"url": "https://api.github.com/repos/rust-lang/rust/issues/64806", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/64806/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/64806/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/64806/events", "html_url": "https://github.com/rust-lang/rust/issues/64806", "id": 498720357, "node_id": "MDU6SXNzdWU0OTg3MjAzNTc=", "number": 64806, "title": "Should warn when trying to cast between a fat pointer and a non-fat pointer", "user": {"login": "upsuper", "id": 333750, "node_id": "MDQ6VXNlcjMzMzc1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/333750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/upsuper", "html_url": "https://github.com/upsuper", "followers_url": "https://api.github.com/users/upsuper/followers", "following_url": "https://api.github.com/users/upsuper/following{/other_user}", "gists_url": "https://api.github.com/users/upsuper/gists{/gist_id}", "starred_url": "https://api.github.com/users/upsuper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/upsuper/subscriptions", "organizations_url": "https://api.github.com/users/upsuper/orgs", "repos_url": "https://api.github.com/users/upsuper/repos", "events_url": "https://api.github.com/users/upsuper/events{/privacy}", "received_events_url": "https://api.github.com/users/upsuper/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-26T07:53:59Z", "updated_at": "2019-09-26T09:55:50Z", "closed_at": "2019-09-26T09:55:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Please see the following piece of code (I came up with when discussing in our Rust group):\r\n```rust\r\nuse std::boxed::Box;\r\nuse libc::c_void;\r\n\r\nfn main() {\r\n    show_ptr(get_ptr());\r\n}\r\n\r\nfn get_ptr() -> *mut c_void {\r\n    let x = vec![\"Hello\".to_string(), \"World\".to_string()].into_boxed_slice();\r\n    Box::into_raw(x) as *mut c_void\r\n}\r\n\r\nfn show_ptr(ptr: *mut c_void) {\r\n     let x = unsafe { Box::from_raw(ptr as *mut Box<[String]>) };\r\n     println!(\"{:?}\", x);\r\n}\r\n```\r\n\r\nIt builds fine but confusingly segfaults. The reason is that boxed slice and its pointer (`*mut [String]`) are fat pointers, and casting it to `*mut c_void` is losing information.\r\n\r\nI believe there should at least be a compiler warning for this kind of conversion, since it is very likely to be broken.", "closed_by": {"login": "upsuper", "id": 333750, "node_id": "MDQ6VXNlcjMzMzc1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/333750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/upsuper", "html_url": "https://github.com/upsuper", "followers_url": "https://api.github.com/users/upsuper/followers", "following_url": "https://api.github.com/users/upsuper/following{/other_user}", "gists_url": "https://api.github.com/users/upsuper/gists{/gist_id}", "starred_url": "https://api.github.com/users/upsuper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/upsuper/subscriptions", "organizations_url": "https://api.github.com/users/upsuper/orgs", "repos_url": "https://api.github.com/users/upsuper/repos", "events_url": "https://api.github.com/users/upsuper/events{/privacy}", "received_events_url": "https://api.github.com/users/upsuper/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/64806/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/64806/timeline", "performed_via_github_app": null, "state_reason": "completed"}