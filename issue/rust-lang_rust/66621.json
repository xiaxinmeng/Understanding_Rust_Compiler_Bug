{"url": "https://api.github.com/repos/rust-lang/rust/issues/66621", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/66621/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/66621/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/66621/events", "html_url": "https://github.com/rust-lang/rust/issues/66621", "id": 527055646, "node_id": "MDU6SXNzdWU1MjcwNTU2NDY=", "number": 66621, "title": "Provide UnixPath and WindowsPath (ditto PathBuf) on all platforms", "user": {"login": "joshtriplett", "id": 162737, "node_id": "MDQ6VXNlcjE2MjczNw==", "avatar_url": "https://avatars.githubusercontent.com/u/162737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joshtriplett", "html_url": "https://github.com/joshtriplett", "followers_url": "https://api.github.com/users/joshtriplett/followers", "following_url": "https://api.github.com/users/joshtriplett/following{/other_user}", "gists_url": "https://api.github.com/users/joshtriplett/gists{/gist_id}", "starred_url": "https://api.github.com/users/joshtriplett/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joshtriplett/subscriptions", "organizations_url": "https://api.github.com/users/joshtriplett/orgs", "repos_url": "https://api.github.com/users/joshtriplett/repos", "events_url": "https://api.github.com/users/joshtriplett/events{/privacy}", "received_events_url": "https://api.github.com/users/joshtriplett/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}, {"id": 2238437210, "node_id": "MDU6TGFiZWwyMjM4NDM3MjEw", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-io", "name": "A-io", "color": "f7e101", "default": false, "description": "Area: std::io, std::fs, std::net and std::path"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-11-22T08:25:05Z", "updated_at": "2023-01-26T21:35:16Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Some applications need to manipulate Windows or UNIX paths on different platforms, for a variety of reasons: constructing portable file formats, parsing files from other platforms, handling archive formats, working with certain network protocols, and so on.\r\n\r\nWe already have the code in the standard library to manipulate both Windows paths and UNIX paths.\r\n\r\nI would propose that we either always support both (as `UnixPath`/`UnixPathBuf` and `WindowsPath`/`WindowsPathBuf`) and alias one of those to `Path`/`PathBuf`, or that we at least extract that code and upload it verbatim as a standard crate in the ecosystem that specifically documents itself as containing the exact code from the corresponding version of the Rust standard library.\r\n\r\nI personally think this seems useful enough to include in std, but either solution would potentially work.\r\n\r\ncc @sunshowers who mentioned needing this.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/66621/reactions", "total_count": 14, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 12, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/66621/timeline", "performed_via_github_app": null, "state_reason": null}