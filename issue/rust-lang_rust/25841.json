{"url": "https://api.github.com/repos/rust-lang/rust/issues/25841", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/25841/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/25841/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/25841/events", "html_url": "https://github.com/rust-lang/rust/issues/25841", "id": 81643067, "node_id": "MDU6SXNzdWU4MTY0MzA2Nw==", "number": 25841, "title": "Potential RefCell unsafety due to mem::forget", "user": {"login": "Veedrac", "id": 2867413, "node_id": "MDQ6VXNlcjI4Njc0MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/2867413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veedrac", "html_url": "https://github.com/Veedrac", "followers_url": "https://api.github.com/users/Veedrac/followers", "following_url": "https://api.github.com/users/Veedrac/following{/other_user}", "gists_url": "https://api.github.com/users/Veedrac/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veedrac/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veedrac/subscriptions", "organizations_url": "https://api.github.com/users/Veedrac/orgs", "repos_url": "https://api.github.com/users/Veedrac/repos", "events_url": "https://api.github.com/users/Veedrac/events{/privacy}", "received_events_url": "https://api.github.com/users/Veedrac/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 267612997, "node_id": "MDU6TGFiZWwyNjc2MTI5OTc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-unsound", "name": "I-unsound", "color": "e11d21", "default": false, "description": "Issue: A soundness hole (worst kind of bug), see: https://en.wikipedia.org/wiki/Soundness"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2015-05-27T22:00:16Z", "updated_at": "2016-10-17T21:06:37Z", "closed_at": "2016-10-17T21:06:37Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I don't have a 32-bit computer to test on, but I suspect that this will overflow `RefCell`'s counter on 32 bit builds:\n\n```\nlet overflower = RefCell::new(());\nfor _ in 0u64..4294967296 {\n    std::mem::forget(overflower.borrow());\n}\n```\n\nThis can allow shared mutable pointers. I imagine similar problems hold for `Rc` and co. and I imagine the problem also happens on 64 bit builds if you have it running for a few hundred years.\n\n[This is what made me think of the problem:](https://doc.rust-lang.org/src/core/cell.rs.html#287-288)\n\n> ```\n> // Values [1, MAX-1] represent the number of `Ref` active\n> // (will not outgrow its range since `usize` is the size of the address space)\n> ```\n\nBut this isn't true if memory can be reclaimed without the destructors running (I think).\n\n---\n\nTo fix it you just need to use saturating addition since only leaks can allow this to happen, and once you've leaked in this way you can't ever hope to run all the destructors anyway. (Actually, this isn't strictly true if you allow for compressed storage.)\n", "closed_by": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/25841/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/25841/timeline", "performed_via_github_app": null, "state_reason": "completed"}