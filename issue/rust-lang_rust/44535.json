{"url": "https://api.github.com/repos/rust-lang/rust/issues/44535", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/44535/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/44535/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/44535/events", "html_url": "https://github.com/rust-lang/rust/issues/44535", "id": 257315015, "node_id": "MDU6SXNzdWUyNTczMTUwMTU=", "number": 44535, "title": "Is it possible to pass a span to compile_error!", "user": {"login": "chancancode", "id": 55829, "node_id": "MDQ6VXNlcjU1ODI5", "avatar_url": "https://avatars.githubusercontent.com/u/55829?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chancancode", "html_url": "https://github.com/chancancode", "followers_url": "https://api.github.com/users/chancancode/followers", "following_url": "https://api.github.com/users/chancancode/following{/other_user}", "gists_url": "https://api.github.com/users/chancancode/gists{/gist_id}", "starred_url": "https://api.github.com/users/chancancode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chancancode/subscriptions", "organizations_url": "https://api.github.com/users/chancancode/orgs", "repos_url": "https://api.github.com/users/chancancode/repos", "events_url": "https://api.github.com/users/chancancode/events{/privacy}", "received_events_url": "https://api.github.com/users/chancancode/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 132910982, "node_id": "MDU6TGFiZWwxMzI5MTA5ODI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-macros", "name": "A-macros", "color": "f7e101", "default": false, "description": "Area: All kinds of macros (custom derive, macro_rules!, proc macros, ..)"}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2017-09-13T09:29:45Z", "updated_at": "2019-09-11T20:40:20Z", "closed_at": "2019-09-11T20:40:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "I noticed that [this question](https://github.com/rust-lang/rfcs/pull/1695#issuecomment-238060570) from @Stebalien was left unaddressed in the [`compile_error!` RFC](https://github.com/rust-lang/rfcs/pull/1695#issuecomment-238060570):\r\n\r\n> Is the span information not attached to the tokens passed to a macro? I'd like to be able point out which token in the macro input caused the macro expansion to fail (and why).\r\n\r\nBefore `compile_error!` was a thing, I generally report errors to the user (where possible) by passing the offending token to a \"sink\" macro that has no possible matches, which would cause the compiler to report `no rule expected the token <token>` with the right span. It is nice that now I can specify a useful message, however we lost the ability to point the error back to the right span. It is unfortunate to have to make this trade-off (either providing the right span without telling you why, or telling you why without reporting where), and in some scenario neither of the two options on their own would be sufficient to understand the error (it could be a very generic error that could happen in a lot of places \u2013 think \"missing a semicolon\" or \"unbalanced braces\" kind of errors).\r\n\r\ncc @sgrif ", "closed_by": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/44535/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/44535/timeline", "performed_via_github_app": null, "state_reason": "completed"}