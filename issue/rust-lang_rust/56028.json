{"url": "https://api.github.com/repos/rust-lang/rust/issues/56028", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/56028/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/56028/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/56028/events", "html_url": "https://github.com/rust-lang/rust/issues/56028", "id": 381879835, "node_id": "MDU6SXNzdWUzODE4Nzk4MzU=", "number": 56028, "title": "Too many help messages on error \"[E0573]: expected type, found variant `None`\"", "user": {"login": "troiganto", "id": 5731814, "node_id": "MDQ6VXNlcjU3MzE4MTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5731814?v=4", "gravatar_id": "", "url": "https://api.github.com/users/troiganto", "html_url": "https://github.com/troiganto", "followers_url": "https://api.github.com/users/troiganto/followers", "following_url": "https://api.github.com/users/troiganto/following{/other_user}", "gists_url": "https://api.github.com/users/troiganto/gists{/gist_id}", "starred_url": "https://api.github.com/users/troiganto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/troiganto/subscriptions", "organizations_url": "https://api.github.com/users/troiganto/orgs", "repos_url": "https://api.github.com/users/troiganto/repos", "events_url": "https://api.github.com/users/troiganto/events{/privacy}", "received_events_url": "https://api.github.com/users/troiganto/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-17T16:51:34Z", "updated_at": "2018-12-24T10:04:13Z", "closed_at": "2018-12-24T10:04:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "When specifying a an enum variant where a type is expected, rustc gives a list of all possible variants with that name. (and suggests to use the enum type instead)\r\n\r\nIn projects with a lot of dependencies and a very common variant name, this list can quickly become overwhelming. This is e.g. the case on the Rust Playground on the 2018 edition, since all whitelisted crates get linked into the playground code.\r\n\r\n[This minimal example](https://play.rust-lang.org/?version=beta&mode=debug&edition=2018&gist=2ca18ce3850ad8bd7b30d0f48828d9a3):\r\n\r\n```rust\r\nfn foo() -> None {}\r\n```\r\n\r\ngives the following error on the playground:\r\n\r\n```\r\nerror[E0573]: expected type, found variant `None`\r\n --> src/lib.rs:1:13\r\n  |\r\n1 | fn foo() -> None {}\r\n  |             ^^^^ not a type\r\n  |\r\n  = help: there is an enum variant `bitflags::_core::prelude::v1::None`, try using `bitflags::_core::prelude::v1`?\r\n  = help: there is an enum variant `bitflags::_core::prelude::v1::Option::None`, try using `bitflags::_core::prelude::v1::Option`?\r\n  = help: there is an enum variant `chrono::LocalResult::None`, try using `chrono::LocalResult`?\r\n  = help: there is an enum variant `chrono::format::Pad::None`, try using `chrono::format::Pad`?\r\n  = help: there is an enum variant `clap::Format::None`, try using `clap::Format`?\r\n  = help: there is an enum variant `core::prelude::v1::None`, try using `core::prelude::v1`?\r\n  = help: there is an enum variant `core::prelude::v1::Option::None`, try using `core::prelude::v1::Option`?\r\n  = help: there is an enum variant `csv::Trim::None`, try using `csv::Trim`?\r\n  = help: there is an enum variant `flate2::FlushCompress::None`, try using `flate2::FlushCompress`?\r\n  = help: there is an enum variant `flate2::FlushDecompress::None`, try using `flate2::FlushDecompress`?\r\n  = help: there is an enum variant `libflate::lz77::CompressionLevel::None`, try using `libflate::lz77::CompressionLevel`?\r\n  = help: there is an enum variant `lzw::Bits::None`, try using `lzw::Bits`?\r\n  = help: there is an enum variant `miniz_oxide::MZFlush::None`, try using `miniz_oxide::MZFlush`?\r\n  = help: there is an enum variant `miniz_oxide::deflate::core::TDEFLFlush::None`, try using `miniz_oxide::deflate::core::TDEFLFlush`?\r\n  = help: there is an enum variant `proc_macro2::Delimiter::None`, try using `proc_macro2::Delimiter`?\r\n  = help: there is an enum variant `quote::__rt::Delimiter::None`, try using `quote::__rt::Delimiter`?\r\n  = help: there is an enum variant `serde::export::None`, try using `serde::export`?\r\n  = help: there is an enum variant `serde::export::Option::None`, try using `serde::export::Option`?\r\n  = help: there is an enum variant `serde::private::de::Content::None`, try using `serde::private::de::Content`?\r\n  = help: there is an enum variant `serde_derive_internals::attr::Default::None`, try using `serde_derive_internals::attr::Default`?\r\n  = help: there is an enum variant `serde_derive_internals::attr::EnumTag::None`, try using `serde_derive_internals::attr::EnumTag`?\r\n  = help: there is an enum variant `serde_derive_internals::attr::RenameRule::None`, try using `serde_derive_internals::attr::RenameRule`?\r\n  = help: there is an enum variant `std::prelude::v1::None`, try using `std::prelude::v1`?\r\n  = help: there is an enum variant `std::prelude::v1::Option::None`, try using `std::prelude::v1::Option`?\r\n  = help: there is an enum variant `syn::FloatSuffix::None`, try using `syn::FloatSuffix`?\r\n  = help: there is an enum variant `syn::IntSuffix::None`, try using `syn::IntSuffix`?\r\n  = help: there is an enum variant `syn::PathArguments::None`, try using `syn::PathArguments`?\r\n  = help: there is an enum variant `syn::TraitBoundModifier::None`, try using `syn::TraitBoundModifier`?\r\n  = help: there is an enum variant `syn::export::None`, try using `syn::export`?\r\n  = help: there is an enum variant `syn::export::quote::__rt::Delimiter::None`, try using `syn::export::quote::__rt::Delimiter`?\r\n  = help: there is an enum variant `syntex_syntax::ast::TraitBoundModifier::None`, try using `syntex_syntax::ast::TraitBoundModifier`?\r\n  = help: there is an enum variant `syntex_syntax::attr::InlineAttr::None`, try using `syntex_syntax::attr::InlineAttr`?\r\n  = help: there is an enum variant `syntex_syntax::entry::EntryPointType::None`, try using `syntex_syntax::entry::EntryPointType`?\r\n  = help: there is an enum variant `syntex_syntax::util::parser::Fixity::None`, try using `syntex_syntax::util::parser::Fixity`?\r\n  = help: there is an enum variant `tiff::decoder::CompressionMethod::None`, try using `tiff::decoder::CompressionMethod`?\r\n```\r\n\r\nMaybe a better approach is to only give `N` suggestions by default, and show the full list when `--verbose` is passed.\r\n\r\nRust version is 1.31.0-beta.13, edition is 2018.", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/56028/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/56028/timeline", "performed_via_github_app": null, "state_reason": "completed"}