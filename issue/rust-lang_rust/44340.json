{"url": "https://api.github.com/repos/rust-lang/rust/issues/44340", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/44340/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/44340/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/44340/events", "html_url": "https://github.com/rust-lang/rust/issues/44340", "id": 255300864, "node_id": "MDU6SXNzdWUyNTUzMDA4NjQ=", "number": 44340, "title": "unused_assignments does not care about unused assignments to reference derefs", "user": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235137, "node_id": "MDU6TGFiZWwyMzUxMzc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lint", "name": "A-lint", "color": "f7e101", "default": false, "description": "Area: Lints (warnings about flaws in source code) such as unused_mut."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-09-05T14:39:34Z", "updated_at": "2017-09-17T08:09:53Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```rust\r\npub fn foo(b: bool, x: &mut i32) {\r\n    if b {\r\n        *x = 6;\r\n    }\r\n    *x = 7;\r\n}\r\n```\r\n\r\ndoes not emit the `unused_assignments` lint. I understand that this is not possible for `DerefMut` in general, because every call to `deref_mut` (via desugaring `*`) can result in a different reference, but for pure references everything should be good.\r\n\r\nA case of not linting this causing a bug was found in rustc: https://github.com/rust-lang/rust/blob/2f1ef9ef1181298d46e79d5dde6bafeb6483926f/src/librustc_mir/transform/inline.rs#L614-L620", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/44340/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/44340/timeline", "performed_via_github_app": null, "state_reason": null}