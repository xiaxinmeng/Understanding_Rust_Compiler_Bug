{"url": "https://api.github.com/repos/rust-lang/rust/issues/10609", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/10609/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/10609/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/10609/events", "html_url": "https://github.com/rust-lang/rust/issues/10609", "id": 23142620, "node_id": "MDU6SXNzdWUyMzE0MjYyMA==", "number": 10609, "title": "-Z extra-debug-info injects reference-count problem on @managed boxes", "user": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2013-11-22T14:57:25Z", "updated_at": "2014-10-11T19:41:53Z", "closed_at": "2014-10-11T19:41:53Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Caveat from the outset: The current ref-counting system will (or at least should) be replaced by a proper GC.  I am fully aware of this, and I am fully aware that the test case below is making deliberate use of the ref-counting semantics.\n\nHaving said that... it still might be worth looking into this, since it might represent a bug in `-Z extra-debug-info`.\n\nThe bug is that the test below assert fails when compiled with `-Z extra-debug-info`:\n\n```\n% rustc a.rs && ./a\n% rustc -Z extra-debug-info a.rs && ./a\nwarning: no debug symbols in executable (-arch x86_64)\ntask '<main>' failed at 'assertion failed: shared_count_at_outset == shared_count_at_finale', a.rs:29\n```\n\nThe test (`a.rs`):\n\n``` rust\n#[feature(managed_boxes)];\n#[allow(unused_imports)];\nuse std::ptr;\nuse std::rt::local_heap;\nuse std::rt::local_heap::{MemoryRegion, Box};\n\nfn sub(_prefix: &'static str, _x: ~Option<@int>) -> ~Option<@int> {\n    debug!(\"{} x: {:?}\", _prefix, _x);\n    traverse_live_allocs();\n    _x\n}\n\nfn subroutine_alloc() {\n    #[allow(dead_assignment)];\n    let mut x = ~None;\n    x = sub(\"naughtyet\", x);\n\n    x = ~Some(@3);\n    x = sub(\"allocated\", x);\n\n    *x = None;\n    x = sub(\"overwrote\", x);\n}\n\nfn main() {\n    let shared_count_at_outset = traverse_live_allocs();\n    subroutine_alloc();\n    let shared_count_at_finale = traverse_live_allocs();\n    assert!(shared_count_at_outset == shared_count_at_finale);\n}\n\nfn traverse_live_allocs() -> int {\n    let bp : *mut Box = local_heap::live_allocs();\n    debug!(\"bp: {:?}\", bp);\n    let mut cursor = bp;\n    let mut count = 0;\n    if cursor != ptr::mut_null() {\n        loop {\n            unsafe {\n                debug!(\"{: >5d}: *cursor: \\\\{ ref_count: \\\n                         {}\\n                  type_desc: \\\n                         {}\\n                  prev: \\\n                         {}\\n                  next: \\\n                         {}\\n                  data: \\\n                         {:?}               \\\\}\",\n                         count,\n                         (*cursor).ref_count,\n                         (*cursor).type_desc,\n                         (*cursor).prev,\n                         (*cursor).next,\n                         (*cursor).data );\n                cursor = (*cursor).next;\n            }\n            count += 1;\n            if cursor == ptr::mut_null() { break; }\n            if cursor == bp { fail!(\"uh oh\"); }\n        }\n    }\n    count\n}\n\n```\n", "closed_by": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/10609/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/10609/timeline", "performed_via_github_app": null, "state_reason": "completed"}