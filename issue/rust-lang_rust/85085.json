{"url": "https://api.github.com/repos/rust-lang/rust/issues/85085", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/85085/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/85085/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/85085/events", "html_url": "https://github.com/rust-lang/rust/issues/85085", "id": 881163802, "node_id": "MDU6SXNzdWU4ODExNjM4MDI=", "number": 85085, "title": "`where <A as B>::X: 'a` is ignored if `A` has multiple constraints (`A: B + C`)", "user": {"login": "71", "id": 7189784, "node_id": "MDQ6VXNlcjcxODk3ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7189784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/71", "html_url": "https://github.com/71", "followers_url": "https://api.github.com/users/71/followers", "following_url": "https://api.github.com/users/71/following{/other_user}", "gists_url": "https://api.github.com/users/71/gists{/gist_id}", "starred_url": "https://api.github.com/users/71/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/71/subscriptions", "organizations_url": "https://api.github.com/users/71/orgs", "repos_url": "https://api.github.com/users/71/repos", "events_url": "https://api.github.com/users/71/events{/privacy}", "received_events_url": "https://api.github.com/users/71/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-05-08T18:41:55Z", "updated_at": "2021-05-12T15:58:42Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "I tried this code:\r\n\r\n```rust\r\ntrait Join<T, I: Iterator<Item = T>> {\r\n    type Iter: Iterator<Item = T>;\r\n\r\n    fn join(i: I) -> Self::Iter;\r\n}\r\n\r\nfn test<'a, T: 'a, J: Join<T, Box<dyn Iterator<Item = T> + 'a>> + Join<T, std::iter::Empty<T>>>(\r\n    input: Box<dyn Iterator<Item = T> + 'a>,\r\n) -> Box<dyn Iterator<Item = T> + 'a>\r\nwhere\r\n    <J as Join<T, Box<dyn Iterator<Item = T> + 'a>>>::Iter: 'a,\r\n{\r\n    Box::new(J::join(input))\r\n}\r\n```\r\n\r\nWhich leads to a compile-time error:\r\n\r\n```\r\nerror[E0309]: the associated type `<J as Join<T, Box<dyn Iterator<Item = T>>>>::Iter` may not live long enough\r\n  --> src/lib.rs:13:5\r\n   |\r\n13 |     Box::new(J::join(input))\r\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^\r\n   |\r\n   = help: consider adding an explicit lifetime bound `<J as Join<T, Box<dyn Iterator<Item = T>>>>::Iter: 'a`...\r\n   = note: ...so that the type `<J as Join<T, Box<dyn Iterator<Item = T>>>>::Iter` will meet its required lifetime bounds\r\n```\r\n\r\nRemoving the second bound on `J` removes the error, even though it is not relevant to the lifetimes. The following code compiles:\r\n\r\n```diff\r\ntrait Join<T, I: Iterator<Item = T>> {\r\n    type Iter: Iterator<Item = T>;\r\n\r\n    fn join(i: I) -> Self::Iter;\r\n}\r\n\r\n- fn test<'a, T: 'a, J: Join<T, Box<dyn Iterator<Item = T> + 'a>> + Join<T, std::iter::Empty<T>>>(\r\n+ fn test<'a, T: 'a, J: Join<T, Box<dyn Iterator<Item = T> + 'a>>>(\r\n    input: Box<dyn Iterator<Item = T> + 'a>,\r\n) -> Box<dyn Iterator<Item = T> + 'a>\r\nwhere\r\n    <J as Join<T, Box<dyn Iterator<Item = T> + 'a>>>::Iter: 'a,\r\n{\r\n    Box::new(J::join(input))\r\n}\r\n```\r\n\r\n**Edit**: with `-Zborrowck=mir`, the code compiles as well.\r\n\r\n### Why?\r\nIdeally `Join<T>` would not have an `I` generic argument, but `Iter` needs to be parametized by `I` and GATs aren't available yet, so I'm using `Join<T, I>` and functions enumerate which `I`s need to be supported using `Join<T, A> + Join<T, B>`.\r\n\r\n### Meta\r\nReproduces in both stable (1.52) and nightly (1.54). [Playground link](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=4be48a6c5e8e7530c6a95d06567282d9).\r\n\r\n### Similar issues\r\n- https://github.com/rust-lang/rust/issues/63253, but here that bound compiles fine on its own, but not with another `+` bound.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/85085/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/85085/timeline", "performed_via_github_app": null, "state_reason": null}