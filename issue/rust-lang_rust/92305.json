{"url": "https://api.github.com/repos/rust-lang/rust/issues/92305", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/92305/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/92305/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/92305/events", "html_url": "https://github.com/rust-lang/rust/issues/92305", "id": 1088857932, "node_id": "I_kwDOAAsO6M5A5qdM", "number": 92305, "title": "ICE in stable 1.57.0 when missing generic argument in return type", "user": {"login": "arknave", "id": 1834647, "node_id": "MDQ6VXNlcjE4MzQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/1834647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arknave", "html_url": "https://github.com/arknave", "followers_url": "https://api.github.com/users/arknave/followers", "following_url": "https://api.github.com/users/arknave/following{/other_user}", "gists_url": "https://api.github.com/users/arknave/gists{/gist_id}", "starred_url": "https://api.github.com/users/arknave/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arknave/subscriptions", "organizations_url": "https://api.github.com/users/arknave/orgs", "repos_url": "https://api.github.com/users/arknave/repos", "events_url": "https://api.github.com/users/arknave/events{/privacy}", "received_events_url": "https://api.github.com/users/arknave/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 46741598, "node_id": "MDU6TGFiZWw0Njc0MTU5OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-test", "name": "E-needs-test", "color": "02e10c", "default": false, "description": "Call for participation: writing correctness tests"}, {"id": 60329014, "node_id": "MDU6TGFiZWw2MDMyOTAxNA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-low", "name": "P-low", "color": "eb6420", "default": false, "description": "Low priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 262252840, "node_id": "MDU6TGFiZWwyNjIyNTI4NDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-stable", "name": "regression-from-stable-to-stable", "color": "e4008a", "default": false, "description": "Performance or correctness regression from one stable version to another."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2021-12-26T22:46:25Z", "updated_at": "2022-05-03T08:36:57Z", "closed_at": "2022-05-03T08:36:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Repro steps: create a new cargo binary with `cargo new`. Replace `src/main.rs` with the following code. Then run `cargo build`. Hope this is helpful! I've tried to minimize the code as much as possible. \r\n\r\n### Code\r\n\r\n```Rust\r\nuse std::iter;\r\n\r\nfn f<T>(data: &[T]) -> impl Iterator<Item = Vec> {\r\n    iter::empty()\r\n}\r\n\r\nfn g<T>(data: &[T], target: T) -> impl Iterator<Item = Vec<T>> {\r\n    f(data).filter(|x| x == target)\r\n}\r\n\r\nfn main() {}\r\n```\r\n\r\n### Meta\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.57.0 (f1edd0429 2021-11-29)\r\nbinary: rustc\r\ncommit-hash: f1edd0429582dd29cccacaf50fd134b05593bd9c\r\ncommit-date: 2021-11-29\r\nhost: x86_64-apple-darwin\r\nrelease: 1.57.0\r\nLLVM version: 13.0.0\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nerror[E0107]: missing generics for struct `Vec`\r\n --> src/main.rs:3:43\r\n  |\r\n3 | fn f<T>(data: &[T]) -> impl Iterator<Item=Vec> {\r\n  |                                           ^^^ expected at least 1 generic argument\r\n  |\r\nhelp: add missing generic argument\r\n  |\r\n3 | fn f<T>(data: &[T]) -> impl Iterator<Item=Vec<T>> {\r\n  |                                           ~~~~~~\r\n\r\nthread 'rustc' panicked at 'called `Result::unwrap()` on an `Err` value: PlaceBuilder { base: Upvar { var_hir_id: HirId { owner: DefId(0:9 ~ ice_repro[c5a9]::g), local_id: 4 }, closure_def_id: DefId(0:12 ~ ice_repro[c5a9]::g::{closure#0}), closure_kind: FnMut }, projection: [] }', compiler/rustc_mir_build/src/build/expr/as_place.rs:306:69\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.57.0 (f1edd0429 2021-11-29) running on x86_64-apple-darwin\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C split-debuginfo=unpacked -C debuginfo=2 -C incremental --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [mir_built] building MIR for `g::{closure#0}`\r\n#1 [unsafety_check_result] unsafety-checking `g::{closure#0}`\r\nend of query stack\r\nFor more information about this error, try `rustc --explain E0107`.\r\nerror: could not compile `ice_repro` due to previous error\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nthread 'rustc' panicked at 'called `Result::unwrap()` on an `Err` value: PlaceBuilder { base: Upvar { var_hir_id: HirId { owner: DefId(0:9 ~ ice_repro[c5a9]::g), local_id: 4 }, closure_def_id: DefId(0:12 ~ ice_repro[c5a9]::g::{closure#0}), closure_kind: FnMut }, projection: [] }', compiler/rustc_mir_build/src/build/expr/as_place.rs:306:69\r\nstack backtrace:\r\n   0: _rust_begin_unwind\r\n   1: core::panicking::panic_fmt\r\n   2: core::result::unwrap_failed\r\n   3: rustc_mir_build::build::expr::as_place::PlaceBuilder::into_place\r\n   4: rustc_mir_build::build::expr::into::<impl rustc_mir_build::build::Builder>::expr_into_dest\r\n   5: rustc_mir_build::build::expr::as_temp::<impl rustc_mir_build::build::Builder>::as_temp_inner\r\n   6: rustc_mir_build::build::expr::as_operand::<impl rustc_mir_build::build::Builder>::as_operand\r\n   7: rustc_mir_build::build::expr::as_operand::<impl rustc_mir_build::build::Builder>::as_call_operand\r\n   8: rustc_mir_build::build::expr::as_operand::<impl rustc_mir_build::build::Builder>::as_call_operand\r\n   9: <core::iter::adapters::copied::Copied<I> as core::iter::traits::iterator::Iterator>::fold\r\n  10: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter\r\n  11: rustc_mir_build::build::expr::into::<impl rustc_mir_build::build::Builder>::expr_into_dest\r\n  12: rustc_mir_build::build::scope::<impl rustc_mir_build::build::Builder>::in_scope\r\n  13: rustc_data_structures::stack::ensure_sufficient_stack\r\n  14: rustc_mir_build::build::expr::into::<impl rustc_mir_build::build::Builder>::expr_into_dest\r\n  15: rustc_mir_build::build::scope::<impl rustc_mir_build::build::Builder>::in_scope\r\n  16: rustc_data_structures::stack::ensure_sufficient_stack\r\n  17: rustc_mir_build::build::expr::into::<impl rustc_mir_build::build::Builder>::expr_into_dest\r\n  18: rustc_mir_build::build::construct_fn\r\n  19: rustc_infer::infer::InferCtxtBuilder::enter\r\n  20: rustc_mir_build::build::mir_built\r\n  21: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task\r\n  22: rustc_data_structures::stack::ensure_sufficient_stack\r\n  23: rustc_query_system::query::plumbing::try_execute_query\r\n  24: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::mir_built\r\n  25: rustc_mir_transform::check_unsafety::unsafety_check_result\r\n  26: core::ops::function::FnOnce::call_once\r\n  27: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task\r\n  28: rustc_data_structures::stack::ensure_sufficient_stack\r\n  29: rustc_query_system::query::plumbing::try_execute_query\r\n  30: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::unsafety_check_result\r\n  31: <rustc_mir_transform::check_unsafety::UnsafetyChecker as rustc_middle::mir::visit::Visitor>::visit_rvalue\r\n  32: rustc_mir_transform::check_unsafety::unsafety_check_result\r\n  33: core::ops::function::FnOnce::call_once\r\n  34: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task\r\n  35: rustc_data_structures::stack::ensure_sufficient_stack\r\n  36: rustc_query_system::query::plumbing::try_execute_query\r\n  37: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::unsafety_check_result\r\n  38: rustc_mir_transform::mir_const\r\n  39: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task\r\n  40: rustc_data_structures::stack::ensure_sufficient_stack\r\n  41: rustc_query_system::query::plumbing::try_execute_query\r\n  42: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::mir_const\r\n  43: rustc_mir_transform::mir_promoted\r\n  44: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task\r\n  45: rustc_data_structures::stack::ensure_sufficient_stack\r\n  46: rustc_query_system::query::plumbing::try_execute_query\r\n  47: rustc_query_system::query::plumbing::get_query\r\n  48: rustc_borrowck::mir_borrowck\r\n  49: core::ops::function::FnOnce::call_once\r\n  50: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task\r\n  51: rustc_data_structures::stack::ensure_sufficient_stack\r\n  52: rustc_query_system::query::plumbing::try_execute_query\r\n  53: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::mir_borrowck\r\n  54: rustc_typeck::collect::type_of::type_of\r\n  55: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task\r\n  56: rustc_data_structures::stack::ensure_sufficient_stack\r\n  57: rustc_query_system::query::plumbing::try_execute_query\r\n  58: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::type_of\r\n  59: rustc_typeck::check::check::check_item_type\r\n  60: rustc_middle::hir::map::Map::visit_item_likes_in_module\r\n  61: rustc_typeck::check::check::check_mod_item_types\r\n  62: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task\r\n  63: rustc_data_structures::stack::ensure_sufficient_stack\r\n  64: rustc_query_system::query::plumbing::try_execute_query\r\n  65: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::check_mod_item_types\r\n  66: rustc_middle::hir::map::Map::for_each_module\r\n  67: rustc_typeck::check_crate\r\n  68: rustc_interface::passes::analysis\r\n  69: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task\r\n  70: rustc_data_structures::stack::ensure_sufficient_stack\r\n  71: rustc_query_system::query::plumbing::try_execute_query\r\n  72: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::analysis\r\n  73: rustc_interface::passes::QueryContext::enter\r\n  74: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n  75: rustc_span::with_source_map\r\n  76: scoped_tls::ScopedKey<T>::set\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\n...\r\n\r\nquery stack during panic:\r\n#0 [mir_built] building MIR for `g::{closure#0}`\r\n#1 [unsafety_check_result] unsafety-checking `g::{closure#0}`\r\n#2 [unsafety_check_result] unsafety-checking `g`\r\n#3 [mir_const] processing MIR for `g`\r\n#4 [mir_promoted] processing `g`\r\n#5 [mir_borrowck] borrow-checking `g`\r\n#6 [type_of] computing type of `g::{opaque#0}`\r\n#7 [check_mod_item_types] checking item types in top-level module\r\n#8 [analysis] running analysis passes on this crate\r\nend of query stack\r\n```\r\n\r\n</p>\r\n</details>", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/92305/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/92305/timeline", "performed_via_github_app": null, "state_reason": "completed"}