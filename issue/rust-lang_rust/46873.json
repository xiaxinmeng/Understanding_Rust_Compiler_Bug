{"url": "https://api.github.com/repos/rust-lang/rust/issues/46873", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/46873/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/46873/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/46873/events", "html_url": "https://github.com/rust-lang/rust/issues/46873", "id": 283549876, "node_id": "MDU6SXNzdWUyODM1NDk4NzY=", "number": 46873, "title": "Possible single_use_lifetime false positive", "user": {"login": "leonardo-m", "id": 22328461, "node_id": "MDQ6VXNlcjIyMzI4NDYx", "avatar_url": "https://avatars.githubusercontent.com/u/22328461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leonardo-m", "html_url": "https://github.com/leonardo-m", "followers_url": "https://api.github.com/users/leonardo-m/followers", "following_url": "https://api.github.com/users/leonardo-m/following{/other_user}", "gists_url": "https://api.github.com/users/leonardo-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/leonardo-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leonardo-m/subscriptions", "organizations_url": "https://api.github.com/users/leonardo-m/orgs", "repos_url": "https://api.github.com/users/leonardo-m/repos", "events_url": "https://api.github.com/users/leonardo-m/events{/privacy}", "received_events_url": "https://api.github.com/users/leonardo-m/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235137, "node_id": "MDU6TGFiZWwyMzUxMzc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lint", "name": "A-lint", "color": "f7e101", "default": false, "description": "Area: Lints (warnings about flaws in source code) such as unused_mut."}, {"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-12-20T12:39:33Z", "updated_at": "2019-07-06T16:51:07Z", "closed_at": "2019-07-06T16:51:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Perhaps here I am missing something and it's just a mistake of mine, but even in such case, other programmers could trip like me and they could enjoy a better error message.\r\n\r\nI have this small program, it compiles without warnings and works:\r\n\r\n```\r\n#![feature(underscore_lifetimes, in_band_lifetimes)]\r\n\r\n//#![warn(single_use_lifetime)]\r\n#![allow(dead_code)]\r\n\r\nfn reverse_digits(mut n: u32, digs: &mut [u32]) -> &[u32] {\r\n    if n == 0 {\r\n        digs[0] = 0;\r\n        return &digs[0 .. 1];\r\n    }\r\n    let mut pos = 0;\r\n    while n > 0 {\r\n        digs[pos] = n % 10;\r\n        n /= 10;\r\n        pos += 1\r\n    }\r\n    &digs[.. pos]\r\n}\r\n\r\nfn rotations<'a, 'b>(n: u32, digs: &'a mut [u32], rots: &'b mut [u32]) -> &'b [u32] {\r\n    let digits = reverse_digits(n, digs);\r\n    let ln = digits.len();\r\n    let mut pos = 0;\r\n    for i in 0 .. ln {\r\n        let mut m = 0;\r\n        for j in (0 .. ln).rev() {\r\n            m = m * 10 + digits[(j + i) % ln];\r\n        }\r\n        rots[pos] = m;\r\n        pos += 1;\r\n    }\r\n    &rots[.. pos]\r\n}\r\n\r\nfn main() {}\r\n```\r\n\r\nI've tried to use the new `single_use_lifetime` lint, if I uncomment the `#![warn(single_use_lifetime)]` line, I see the warnings/errors:\r\n\r\n```\r\nwarning: lifetime name `'b` only used once\r\n  --> C:\\lavoro\\bugs\\test2.rs:20:18\r\n   |\r\n20 | fn rotations<'a, 'b>(n: u32, digs: &'a mut [u32], rots: &'b mut [u32]) -> &'b [u32] {\r\n   |                  ^^\r\n   |\r\nnote: lint level defined here\r\n  --> C:\\lavoro\\bugs\\test2.rs:3:9\r\n   |\r\n3  | #![warn(single_use_lifetime)]\r\n   |         ^^^^^^^^^^^^^^^^^^^\r\n\r\nwarning: lifetime name `'a` only used once\r\n  --> C:\\lavoro\\bugs\\test2.rs:20:14\r\n   |\r\n20 | fn rotations<'a, 'b>(n: u32, digs: &'a mut [u32], rots: &'b mut [u32]) -> &'b [u32] {\r\n   |              ^^\r\n```\r\n\r\n\r\nUsing in_band_lifetimes and leaving just 'a gives a similar warning:\r\n\r\n\r\n```\r\nwarning: lifetime name `'a` only used once\r\n  --> C:\\lavoro\\bugs\\test2.rs:20:48\r\n   |\r\n20 | fn rotations(n: u32, digs: & mut [u32], rots: &'a mut [u32]) -> &'a [u32] {\r\n   |                                                ^^\r\n```\r\n\r\nNot using in_band_lifetimes and leaving just 'a gives the same:\r\n\r\n```\r\nwarning: lifetime name `'a` only used once\r\n  --> C:\\lavoro\\bugs\\test2.rs:20:14\r\n   |\r\n20 | fn rotations<'a>(n: u32, digs: & mut [u32], rots: &'a mut [u32]) -> &'a [u32] {\r\n   |              ^^\r\n\r\n```\r\n\r\nThe warning seems to suggest to use the 'a name too, but it doesn't compile:\r\n\r\n```\r\n20 | fn rotations(n: u32, digs: &mut [u32], rots: &mut [u32]) -> &[u32] {\r\n   |                                                             ^ expected lifetime parameter\r\n   |\r\n   = help: this function's return type contains a borrowed value, but the signature does not say whether it is borrowed from `digs` or `rots`\r\n```\r\n\r\nIf I try to use an underscore the error is similar:\r\n\r\n```\r\n20 | fn rotations(n: u32, digs: & mut [u32], rots: &'_ mut [u32]) -> &'_ [u32] {\r\n   |                                                                  ^^ expected lifetime parameter\r\n   |\r\n   = help: this function's return type contains a borrowed value, but the signature does not say whether it is borrowed from `digs` or `rots`\r\n```\r\n\r\nSo is the message given to me by single_use_lifetime correct? If it's correct then I don't see how to fix the code to remove the warning ", "closed_by": {"login": "zackmdavis", "id": 1076988, "node_id": "MDQ6VXNlcjEwNzY5ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/1076988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zackmdavis", "html_url": "https://github.com/zackmdavis", "followers_url": "https://api.github.com/users/zackmdavis/followers", "following_url": "https://api.github.com/users/zackmdavis/following{/other_user}", "gists_url": "https://api.github.com/users/zackmdavis/gists{/gist_id}", "starred_url": "https://api.github.com/users/zackmdavis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zackmdavis/subscriptions", "organizations_url": "https://api.github.com/users/zackmdavis/orgs", "repos_url": "https://api.github.com/users/zackmdavis/repos", "events_url": "https://api.github.com/users/zackmdavis/events{/privacy}", "received_events_url": "https://api.github.com/users/zackmdavis/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/46873/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/46873/timeline", "performed_via_github_app": null, "state_reason": "completed"}