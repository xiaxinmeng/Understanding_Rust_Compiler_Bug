{"url": "https://api.github.com/repos/rust-lang/rust/issues/46415", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/46415/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/46415/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/46415/events", "html_url": "https://github.com/rust-lang/rust/issues/46415", "id": 278362608, "node_id": "MDU6SXNzdWUyNzgzNjI2MDg=", "number": 46415, "title": "Unhelpful \"overflow evaluating the requirement\" error for infinitely recursive generators", "user": {"login": "Popog", "id": 761307, "node_id": "MDQ6VXNlcjc2MTMwNw==", "avatar_url": "https://avatars.githubusercontent.com/u/761307?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Popog", "html_url": "https://github.com/Popog", "followers_url": "https://api.github.com/users/Popog/followers", "following_url": "https://api.github.com/users/Popog/following{/other_user}", "gists_url": "https://api.github.com/users/Popog/gists{/gist_id}", "starred_url": "https://api.github.com/users/Popog/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Popog/subscriptions", "organizations_url": "https://api.github.com/users/Popog/orgs", "repos_url": "https://api.github.com/users/Popog/repos", "events_url": "https://api.github.com/users/Popog/events{/privacy}", "received_events_url": "https://api.github.com/users/Popog/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 679846574, "node_id": "MDU6TGFiZWw2Nzk4NDY1NzQ=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-generators", "name": "A-generators", "color": "f7e101", "default": false, "description": "Area: Generators"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-12-01T05:33:20Z", "updated_at": "2023-01-08T00:18:14Z", "closed_at": "2023-01-08T00:18:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Obviously this shouldn't actually work, due to the state type being infinitely sized (at least not without `become`/TCO for generators), but it should generate an error similar to recursive types.\r\n\r\n[playground link](https://play.rust-lang.org/?gist=a55590855b15a07269fbdeb0da85005b&version=nightly)\r\n\r\nProgram:\r\n```rust \r\n#![feature(generators, conservative_impl_trait, generator_trait)]\r\n\r\nuse std::ops::{Generator, GeneratorState};\r\n\r\nfn foo() -> impl Generator<Yield = (), Return = ()> {\r\n    || {\r\n        let mut gen = foo();\r\n        \r\n        let mut r = gen.resume();\r\n        while let GeneratorState::Yielded(v) = r {\r\n            yield v;\r\n            r = gen.resume();\r\n        }\r\n    }\r\n}\r\n\r\nfn main() {\r\n    foo();\r\n}\r\n```\r\n\r\nOutput:\r\n```\r\n   Compiling playground v0.0.1 (file:///playground)\r\n\r\nthread 'rustc' has overflowed its stack\r\nfatal runtime error: stack overflow\r\nerror: Could not compile `playground`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n\r\nExpected (something like):\r\n```rust\r\n   Compiling playground v0.0.1 (file:///playground)\r\nerror[E0072]: recursive type `Foo` has infinite size\r\n --> src/main.rs:1:1\r\n  |\r\n1 | struct Foo(Foo);\r\n  | ^^^^^^^^^^^----^\r\n  | |          |\r\n  | |          recursive without indirection\r\n  | recursive type has infinite size\r\n  |\r\n  = help: insert indirection (e.g., a `Box`, `Rc`, or `&`) at some point to make `Foo` representable\r\n\r\nerror: aborting due to previous error\r\n\r\nerror: Could not compile `playground`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n```", "closed_by": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/46415/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/46415/timeline", "performed_via_github_app": null, "state_reason": "completed"}