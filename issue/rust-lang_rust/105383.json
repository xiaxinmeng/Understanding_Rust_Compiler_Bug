{"url": "https://api.github.com/repos/rust-lang/rust/issues/105383", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/105383/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/105383/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/105383/events", "html_url": "https://github.com/rust-lang/rust/issues/105383", "id": 1479641438, "node_id": "I_kwDOAAsO6M5YMYle", "number": 105383, "title": "Track test suite failures on s390x", "user": {"login": "uweigand", "id": 4154057, "node_id": "MDQ6VXNlcjQxNTQwNTc=", "avatar_url": "https://avatars.githubusercontent.com/u/4154057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/uweigand", "html_url": "https://github.com/uweigand", "followers_url": "https://api.github.com/users/uweigand/followers", "following_url": "https://api.github.com/users/uweigand/following{/other_user}", "gists_url": "https://api.github.com/users/uweigand/gists{/gist_id}", "starred_url": "https://api.github.com/users/uweigand/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/uweigand/subscriptions", "organizations_url": "https://api.github.com/users/uweigand/orgs", "repos_url": "https://api.github.com/users/uweigand/repos", "events_url": "https://api.github.com/users/uweigand/events{/privacy}", "received_events_url": "https://api.github.com/users/uweigand/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2022-12-06T17:04:46Z", "updated_at": "2023-01-17T16:38:49Z", "closed_at": "2023-01-17T16:38:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Running the `./x.py test` suite on `s390x` currently results in a number of failing tests due to various issues.   I've gone through and fixed all of those, resulting in a clean run with all my local fixes applied.  Opening this issue to track getting all requires fixes upstream.\r\n\r\nSpecifically, I'm seeing the following failures caused by actual code problems:\r\n\r\n- [x] Variadic FFI not implemented\r\nThis is already described in https://github.com/rust-lang/rust/issues/84628, and causes the following failures:\r\nsrc/test/ui/abi/variadic-ffi.rs\r\nsrc/test/run-make-fulldeps/c-link-to-rust-va-list-fn\r\n- [x] Lint suggestions depend on host endianness\r\nI've opened https://github.com/rust-lang/rust/issues/105379 to track this specifically.  This causes failure of:\r\nsrc/test/rustdoc-ui/unknown-renamed-lints.rs\r\n- [x] Stack overflow\r\nThe test case described in https://github.com/rust-lang/rust/issues/74564 still fails on s390x even though the original fixes are applied.  This is probably due to the larger stack requirements on the platforms.  Can be fixed by adding another call to `ensure_sufficient_stack`.  This causes failure of:\r\nsrc/test/ui/issues/issue-74564-if-expr-stack-overflow.rs\r\n\r\nIn addition, a number of test cases show (false positive) failures due to assumptions that aren't correct for the platform:\r\n\r\n- [x] LLD does not support the s390x target:\r\nsrc/test/run-make/issue-71519\r\n(Test needs to be ignored.)\r\n- [x] The abi_efiapi feature is not supported on s390x:\r\nsrc/doc/unstable-book/src/language-features/abi-efiapi.md\r\n(Test needs to be ignored.)\r\n- [x] A number of LLVM code-gen tests make invalid assumptions on how the IR looks on s390x:\r\nsrc/test/codegen/catch-unwind.rs\r\nsrc/test/codegen/remap_path_prefix/main.rs\r\nsrc/test/codegen/repr-transparent-aggregates-1.rs\r\nsrc/test/codegen/repr-transparent.rs\r\nsrc/test/codegen/uninit-consts.rs\r\n(I have fixes for these.)\r\n- [x] Several test cases make little-endian assumptions in output files that are tested against - UI tests\r\nsrc/test/ui/const-ptr/forbidden_slices.rs\r\nsrc/test/ui/consts/const-eval/ub-enum.rs\r\nsrc/test/ui/consts/const-eval/ub-nonnull.rs\r\nsrc/test/ui/consts/const-eval/ub-ref-ptr.rs\r\nsrc/test/ui/consts/const-eval/ub-uninhabit.rs\r\nsrc/test/ui/consts/const-eval/ub-wide-ptr.rs\r\nsrc/test/ui/consts/issue-83182.rs\r\nsrc/test/ui/consts/std/alloc.rs\r\nsrc/test/ui/consts/validate_never_arrays.rs\r\nSome (but not all) of these are listed in https://github.com/rust-lang/rust/issues/89577, with various solutions being proposed.  Options would be to either ignore those on big-endian hosts, provide multiple versions of the output to match against, and/or try to handle big- and little-endian outputs within the same file (e.g. via some transformation).\r\n- [x] Several test cases make little-endian assumptions in output files that are tested against - MIR tests\r\nsrc/test/mir-opt/const_prop/mutable_variable_no_prop.rs\r\nsrc/test/mir-opt/issues/issue_75439.rs\r\nsrc/test/mir-opt/building/custom/consts.rs\r\n\r\n\r\nLonger term, I'm wondering what the best way would be to ensure that the test suite remains clean on the platform - can this be included in CI somehow (either via a native machine somewhere or via qemu-based testing)?\r\n\r\nCC @cuviper \r\n", "closed_by": {"login": "uweigand", "id": 4154057, "node_id": "MDQ6VXNlcjQxNTQwNTc=", "avatar_url": "https://avatars.githubusercontent.com/u/4154057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/uweigand", "html_url": "https://github.com/uweigand", "followers_url": "https://api.github.com/users/uweigand/followers", "following_url": "https://api.github.com/users/uweigand/following{/other_user}", "gists_url": "https://api.github.com/users/uweigand/gists{/gist_id}", "starred_url": "https://api.github.com/users/uweigand/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/uweigand/subscriptions", "organizations_url": "https://api.github.com/users/uweigand/orgs", "repos_url": "https://api.github.com/users/uweigand/repos", "events_url": "https://api.github.com/users/uweigand/events{/privacy}", "received_events_url": "https://api.github.com/users/uweigand/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/105383/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/105383/timeline", "performed_via_github_app": null, "state_reason": "completed"}