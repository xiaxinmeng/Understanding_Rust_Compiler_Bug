{"url": "https://api.github.com/repos/rust-lang/rust/issues/1675", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/1675/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/1675/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/1675/events", "html_url": "https://github.com/rust-lang/rust/issues/1675", "id": 2977995, "node_id": "MDU6SXNzdWUyOTc3OTk1", "number": 1675, "title": "proposal for str::from_bytes_with_error_cb", "user": {"login": "killerswan", "id": 195060, "node_id": "MDQ6VXNlcjE5NTA2MA==", "avatar_url": "https://avatars.githubusercontent.com/u/195060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/killerswan", "html_url": "https://github.com/killerswan", "followers_url": "https://api.github.com/users/killerswan/followers", "following_url": "https://api.github.com/users/killerswan/following{/other_user}", "gists_url": "https://api.github.com/users/killerswan/gists{/gist_id}", "starred_url": "https://api.github.com/users/killerswan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/killerswan/subscriptions", "organizations_url": "https://api.github.com/users/killerswan/orgs", "repos_url": "https://api.github.com/users/killerswan/repos", "events_url": "https://api.github.com/users/killerswan/events{/privacy}", "received_events_url": "https://api.github.com/users/killerswan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 36996, "node_id": "MDU6TGFiZWwzNjk5Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-easy", "name": "E-easy", "color": "02e10c", "default": false, "description": "Call for participation: Experience needed to fix: Easy / not much (good first issue)"}, {"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2012-01-26T10:59:35Z", "updated_at": "2014-02-08T21:25:56Z", "closed_at": "2012-04-05T00:42:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "On the pull request for `str::from_bytes` (https://github.com/mozilla/rust/pull/1670), @kevina had a good suggestion for what I think would make a good additional function: \"a version of from_bytes which doesn't fail on invalid input but rather offers some sort of error recovery options. Like maybe it can return the partly converted string with an index to the invalid position. Or perhaps, a callback function to handle the error, etc.\"\n\nAt a glance the easy way to do this would be with a callback to, e.g., drop, replace, or coerce offending sequences into UTF-8 or else return a `result::err`...\n\n``` Rust\nfn from_bytes_with_error_cb <TT> (\n    [u8],                                 // input bytes\n    fn ([u8]) -> result::t<str, TT>       // callback \n) -> result::t<str, TT> {\n...\n}\n```\n\nBut is this a recipe for complex callbacks?  Perhaps providing sensible callback functions like `str::encode::drop_invalid_bytes`, `str::encode::replace_invalid_bytes_with_...`, `str::encode::error_with_detail`, and so on would make this simple enough to use.\n\nMaybe those should just be simple functions for whole byte vector conversion, anyways.\n\nWhat do you think?\n", "closed_by": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/1675/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/1675/timeline", "performed_via_github_app": null, "state_reason": "completed"}