{"url": "https://api.github.com/repos/rust-lang/rust/issues/112417", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/112417/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/112417/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/112417/events", "html_url": "https://github.com/rust-lang/rust/issues/112417", "id": 1747439330, "node_id": "I_kwDOAAsO6M5oJ87i", "number": 112417, "title": "unchecked region constraints for opaque types in dead code", "user": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 203429200, "node_id": "MDU6TGFiZWwyMDM0MjkyMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-high", "name": "P-high", "color": "eb6420", "default": false, "description": "High priority"}, {"id": 267612997, "node_id": "MDU6TGFiZWwyNjc2MTI5OTc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-unsound", "name": "I-unsound", "color": "e11d21", "default": false, "description": "Issue: A soundness hole (worst kind of bug), see: https://en.wikipedia.org/wiki/Soundness"}, {"id": 631673608, "node_id": "MDU6TGFiZWw2MzE2NzM2MDg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-impl-trait", "name": "A-impl-trait", "color": "f7e101", "default": false, "description": "Area: impl Trait. Universally / existentially quantified anonymous types with static dispatch."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2023-06-08T09:06:46Z", "updated_at": "2023-06-08T12:01:42Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```rust\r\ntrait CallMeMaybe<'a, 'b> {\r\n    fn mk() -> Self;\r\n    fn subtype<T>(self, x: &'b T) -> &'a T;\r\n}\r\n\r\nstruct Foo<'a, 'b: 'a>(&'a (), &'b ());\r\nimpl<'a, 'b> CallMeMaybe<'a, 'b> for Foo<'a, 'b> {\r\n    fn mk() -> Self {\r\n        Foo(&(), &())\r\n    }\r\n\r\n    fn subtype<T>(self, x: &'b T) -> &'a T {\r\n        x\r\n    }\r\n}\r\n\r\n// `foo` must not compile but does.\r\nfn foo<'a, 'b>() -> impl CallMeMaybe<'a, 'b> {\r\n    panic!();\r\n    Foo(&(), &())\r\n}\r\n\r\n// The rest is only to exploit that unsoundness.\r\ntrait Func {\r\n    type RetTy;\r\n}\r\nimpl<F: FnOnce() -> R, R> Func for F {\r\n    type RetTy = R;\r\n}\r\n\r\nfn subtype<'a, 'b, F: FnOnce() -> R, R: CallMeMaybe<'a, 'b>, T>(_: F, x: &'b T) -> &'a T {\r\n    let proof = R::mk();\r\n    proof.subtype(x)\r\n}\r\n\r\nfn main() {\r\n    let y = subtype(foo, &String::from(\"Hello World\"));\r\n    println!(\"{y}\"); // use after free\r\n}\r\n```\r\nWith the current implementation `foo` only defines the opaque type during HIR typeck and not in MIR typeck as the defining use is in dead code. HIR typeck does not check regions so we use erased regions instead. This hidden type with erased regions is then used as the actual hidden type of the RPIT because there is no hidden type defined by MIR typeck.\r\n\r\nWe then never check that the RPIT is well-formed outside of HIR typeck itself, so we never check that the region constraints hold for the opaque type.\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/112417/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/112417/timeline", "performed_via_github_app": null, "state_reason": null}