{"url": "https://api.github.com/repos/rust-lang/rust/issues/66450", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/66450/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/66450/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/66450/events", "html_url": "https://github.com/rust-lang/rust/issues/66450", "id": 523560575, "node_id": "MDU6SXNzdWU1MjM1NjA1NzU=", "number": 66450, "title": "Syntax of `rustc --cfg` with key and value is obscure.", "user": {"login": "vext01", "id": 604955, "node_id": "MDQ6VXNlcjYwNDk1NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/604955?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vext01", "html_url": "https://github.com/vext01", "followers_url": "https://api.github.com/users/vext01/followers", "following_url": "https://api.github.com/users/vext01/following{/other_user}", "gists_url": "https://api.github.com/users/vext01/gists{/gist_id}", "starred_url": "https://api.github.com/users/vext01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vext01/subscriptions", "organizations_url": "https://api.github.com/users/vext01/orgs", "repos_url": "https://api.github.com/users/vext01/repos", "events_url": "https://api.github.com/users/vext01/events{/privacy}", "received_events_url": "https://api.github.com/users/vext01/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 36956, "node_id": "MDU6TGFiZWwzNjk1Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-frontend", "name": "A-frontend", "color": "f7e101", "default": false, "description": "Area: frontend (errors, parsing and HIR)"}, {"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-11-15T16:15:01Z", "updated_at": "2020-10-04T21:33:26Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\n\r\nI was recently defeated by `rustc --cfg`.\r\n\r\n`rustc -h` says:\r\n```\r\n--cfg SPEC      Configure the compilation environment\r\n```\r\n\r\nHrm, well I know that stuff like `--cfg var` should work, but that I should also be able to assign a value:\r\n\r\n```\r\n$ rustc --cfg key=val -\r\nerror: invalid `--cfg` argument: `key=val` (expected `key` or `key=\"value\"`)\r\n\r\n$ rustc --cfg key=\"val\" -\r\nerror: invalid `--cfg` argument: `key=val` (expected `key` or `key=\"value\"`)\r\n```\r\n\r\nEh? I passed exactly what the error asked. And obviously the backticks can't form the solution, as they'd open a sub-shell.\r\n\r\nThe solution is to use: `rustc --cfg 'key=\"val\"'`\r\n\r\nThe quoting is very specific.\r\n\r\nSwapping the single and double quotes won't work:\r\n```\r\n$ rustc --cfg \"key='val'\" -\r\nerror: character literal may only contain one codepoint\r\n --> <quote expansion>:1:5\r\n  |\r\n1 | key='val'\r\n  |     ^^^^^\r\nhelp: if you meant to write a `str` literal, use double quotes\r\n  |\r\n1 | key=\"val\"\r\n  |     ^^^^^\r\n```\r\n\r\nAnd oddly, quoting the value is ok, but not the key:\r\n```\r\n$ rustc --cfg '\"key\"=\"val\"' -\r\nerror: invalid `--cfg` argument: `\"key\"=\"val\"` (expected `key` or `key=\"value\"`)\r\n```\r\n\r\nI find this wholly unexpected and I had to grep the source code to find out how to use the argument :(\r\n\r\nSo are the current limitations of the interface intentional?\r\n\r\nIf so, we should improve the `-h` doc and error message.\r\n\r\nIf not, what do we want? Should `--cfg` accept:\r\n * `key=val`\r\n * `'key=\"val\"`\r\n * `\"key='val'\"`\r\n * `'\"key\"=\"val\"'`\r\n * `\"key=val\"`\r\n\r\nThanks.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/66450/reactions", "total_count": 4, "+1": 4, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/66450/timeline", "performed_via_github_app": null, "state_reason": null}