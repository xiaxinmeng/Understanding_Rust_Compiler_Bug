{"url": "https://api.github.com/repos/rust-lang/rust/issues/53366", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/53366/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/53366/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/53366/events", "html_url": "https://github.com/rust-lang/rust/issues/53366", "id": 350607506, "node_id": "MDU6SXNzdWUzNTA2MDc1MDY=", "number": 53366, "title": "Invalid memory ordering in thread park / unpark", "user": {"login": "carllerche", "id": 6180, "node_id": "MDQ6VXNlcjYxODA=", "avatar_url": "https://avatars.githubusercontent.com/u/6180?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carllerche", "html_url": "https://github.com/carllerche", "followers_url": "https://api.github.com/users/carllerche/followers", "following_url": "https://api.github.com/users/carllerche/following{/other_user}", "gists_url": "https://api.github.com/users/carllerche/gists{/gist_id}", "starred_url": "https://api.github.com/users/carllerche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carllerche/subscriptions", "organizations_url": "https://api.github.com/users/carllerche/orgs", "repos_url": "https://api.github.com/users/carllerche/repos", "events_url": "https://api.github.com/users/carllerche/events{/privacy}", "received_events_url": "https://api.github.com/users/carllerche/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 29, "created_at": "2018-08-14T21:38:27Z", "updated_at": "2018-09-19T19:57:37Z", "closed_at": "2018-09-19T19:57:37Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I'm pretty sure that the memory orderings uses in the thread park / unpark are incorrect. They *happen* to work on x86 due to the generated ASM being stronger than the spec, but it will doubtfully work on other architectures.\r\n\r\nThere are a few locations where a `store` is used with `SeqCst` assuming that this would \"acquire\", but this is not the case. For example [here](https://github.com/rust-lang/rust/blob/6e5e63a48c3be7de2faf914c2a9e194ff7cede9e/src/libstd/thread/mod.rs#L800)\r\n\r\nI discovered this issue when a PR was provided to copy the Rust code into Tokio.\r\n\r\nSee the discussion [here](https://github.com/tokio-rs/tokio/pull/528#discussion_r208621737)", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/53366/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/53366/timeline", "performed_via_github_app": null, "state_reason": "completed"}