{"url": "https://api.github.com/repos/rust-lang/rust/issues/51525", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/51525/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/51525/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/51525/events", "html_url": "https://github.com/rust-lang/rust/issues/51525", "id": 331769764, "node_id": "MDU6SXNzdWUzMzE3Njk3NjQ=", "number": 51525, "title": "existential impl trait overlooks \"hidden\" lifetimes from projections", "user": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 631673608, "node_id": "MDU6TGFiZWw2MzE2NzM2MDg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-impl-trait", "name": "A-impl-trait", "color": "f7e101", "default": false, "description": "Area: impl Trait. Universally / existentially quantified anonymous types with static dispatch."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-12T22:01:07Z", "updated_at": "2020-04-02T17:18:15Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In this example ([play](https://play.rust-lang.org/?gist=b02b15c68b0f6576fdf22b81ae7421b3&version=nightly&mode=debug)), we currently get an incorrect compilation error:\r\n\r\n```rust\r\ntrait Foo<'a> {\r\n    type Bar;\r\n}\r\n\r\nimpl<'a> Foo<'a> for u32 {\r\n    type Bar = &'a ();\r\n}\r\n\r\nfn baz<'a, T>() -> impl IntoIterator<Item = T::Bar>\r\nwhere T: Foo<'a> { \r\n    None\r\n}\r\n\r\nfn main() { }\r\n```\r\n\r\nyields\r\n\r\n```\r\nerror[E0308]: mismatched types\r\n  --> src/main.rs:11:5\r\n   |\r\n11 |     None\r\n   |     ^^^^ lifetime mismatch\r\n   |\r\n   = note: expected type `Foo<'static>`\r\n              found type `Foo<'a>`\r\n```\r\n\r\nThis does not seem correct. =)  The problem is that `T::Bar` (at HIR lowering time) does not mention `'a`. So we wind up mapping this -- because of the way the region desugaring works -- to `<T as Foo<'static>>::Bar`. If you manually write `<T as Foo<'a>>::Bar` in the original Rust source, the `'a` becomes visible and is lowered correctly. In other words, [this version compiles](https://play.rust-lang.org/?gist=1a1423e1b69fcc8bf1b0cd693a5e207e&version=nightly&mode=debug):\r\n\r\n```rust\r\ntrait Foo<'a> {\r\n    type Bar;\r\n}\r\n\r\nimpl<'a> Foo<'a> for u32 {\r\n    type Bar = &'a ();\r\n}\r\n\r\nfn baz<'a, T>() -> impl IntoIterator<Item = <T as Foo<'a>>::Bar>\r\nwhere T: Foo<'a> { \r\n    None\r\n}\r\n\r\nfn main() { }\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/51525/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/51525/timeline", "performed_via_github_app": null, "state_reason": null}