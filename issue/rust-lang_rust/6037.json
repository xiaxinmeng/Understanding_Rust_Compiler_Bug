{"url": "https://api.github.com/repos/rust-lang/rust/issues/6037", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/6037/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/6037/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/6037/events", "html_url": "https://github.com/rust-lang/rust/issues/6037", "id": 13561531, "node_id": "MDU6SXNzdWUxMzU2MTUzMQ==", "number": 6037, "title": "New syntax proposal: Conditional matching", "user": {"login": "brendanzab", "id": 695077, "node_id": "MDQ6VXNlcjY5NTA3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/695077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendanzab", "html_url": "https://github.com/brendanzab", "followers_url": "https://api.github.com/users/brendanzab/followers", "following_url": "https://api.github.com/users/brendanzab/following{/other_user}", "gists_url": "https://api.github.com/users/brendanzab/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendanzab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendanzab/subscriptions", "organizations_url": "https://api.github.com/users/brendanzab/orgs", "repos_url": "https://api.github.com/users/brendanzab/repos", "events_url": "https://api.github.com/users/brendanzab/events{/privacy}", "received_events_url": "https://api.github.com/users/brendanzab/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2013-04-23T22:52:10Z", "updated_at": "2013-06-06T06:55:22Z", "closed_at": "2013-06-06T06:55:22Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Currently if you want to match only on conditionals you have to use a pointless expression at the beginning of the match and use `_` at the beginning of each line.\n\n``` rust\nmatch x {\n    _ if x >= 0 => x / y,\n    _ if y >  0 => ((x + 1) / y) - 1,\n    _           => ((x + 1) / y) + 1,\n}\n```\n\nI have also noticed this used out on a [blog post](http://composition.al/blog/2013/03/02/fizzbuzz-revisited/) (under the heading _First version\u2026_).\n\nYes, you could always use if/else, but it's ugly in some use cases.\n\n``` rust\nif x >= 0 { x / y }\nelse if y > 0 { ((x + 1) / y) - 1 }\nelse { ((x + 1) / y) + 1 }\n\n// with formatting\nif x >= 0 {\n    x / y\n} else if y >  0 {\n    ((x + 1) / y) - 1\n} else {\n    ((x + 1) / y) + 1\n}\n\n// or maybe:\nif      x >= 0 { x / y }\nelse if y >  0 { ((x + 1) / y) - 1 }\nelse           { ((x + 1) / y) + 1 }\n```\n\n<br>\n\nWhat if when you leave out the expression at the beginning of the match you could only match on conditionals? This would be equivalent to [Scheme's cond](http://www.cs.indiana.edu/scheme-repository/R4RS/r4rs_6.html#SEC34).\n\n``` rust\nmatch {\n    if x >= 0 => x / y,\n    if y >  0 => ((x + 1) / y) - 1,\n    _         => ((x + 1) / y) + 1,\n}\n```\n\nMaybe you could even get rid of the ifs and just take boolean expressions, although I think it sacrifices some readability.\n\n``` rust\nmatch {\n    x >= 0 => x / y,\n    y >  0 => ((x + 1) / y) - 1,\n    _      => ((x + 1) / y) + 1,\n}\n```\n", "closed_by": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/6037/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/6037/timeline", "performed_via_github_app": null, "state_reason": "completed"}