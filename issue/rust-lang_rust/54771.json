{"url": "https://api.github.com/repos/rust-lang/rust/issues/54771", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/54771/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/54771/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/54771/events", "html_url": "https://github.com/rust-lang/rust/issues/54771", "id": 366121835, "node_id": "MDU6SXNzdWUzNjYxMjE4MzU=", "number": 54771, "title": "Poor Trailing Semicolon Error in -> impl Trait Function", "user": {"login": "cramertj", "id": 5963049, "node_id": "MDQ6VXNlcjU5NjMwNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5963049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cramertj", "html_url": "https://github.com/cramertj", "followers_url": "https://api.github.com/users/cramertj/followers", "following_url": "https://api.github.com/users/cramertj/following{/other_user}", "gists_url": "https://api.github.com/users/cramertj/gists{/gist_id}", "starred_url": "https://api.github.com/users/cramertj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cramertj/subscriptions", "organizations_url": "https://api.github.com/users/cramertj/orgs", "repos_url": "https://api.github.com/users/cramertj/repos", "events_url": "https://api.github.com/users/cramertj/events{/privacy}", "received_events_url": "https://api.github.com/users/cramertj/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234876, "node_id": "MDU6TGFiZWwyMzQ4NzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-hard", "name": "E-hard", "color": "02e10c", "default": false, "description": "Call for participation: Experience needed to fix: Hard / a lot"}, {"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 60344715, "node_id": "MDU6TGFiZWw2MDM0NDcxNQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-medium", "name": "P-medium", "color": "eb6420", "default": false, "description": "Medium priority"}, {"id": 122406831, "node_id": "MDU6TGFiZWwxMjI0MDY4MzE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-closures", "name": "A-closures", "color": "f7e101", "default": false, "description": "Area: closures (`|args| { .. }`)"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 631673608, "node_id": "MDU6TGFiZWw2MzE2NzM2MDg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-impl-trait", "name": "A-impl-trait", "color": "f7e101", "default": false, "description": "Area: impl Trait. Universally / existentially quantified anonymous types with static dispatch."}, {"id": 1183099971, "node_id": "MDU6TGFiZWwxMTgzMDk5OTcx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-suggestion-diagnostics", "name": "A-suggestion-diagnostics", "color": "f7e101", "default": false, "description": "Area: suggestions generated by the compiler applied by cargo fix"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-10-02T23:48:07Z", "updated_at": "2020-06-11T18:00:37Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "The diagnostics that check whether the concrete return type of an `-> impl Trait` function meets the `: Trait` bound should special-case the error when the concrete type is `()` to suggest removing the semicolon. Without this, the errors for a misplaced semicolon are misleading:\r\n\r\nWithout `impl Trait`:\r\n```rust\r\ntrait Bar {}\r\nimpl Bar for u8 {}\r\nfn foo() -> u8 {\r\n    5;\r\n}\r\n```\r\n```\r\nerror[E0308]: mismatched types\r\n --> src/main.rs:3:16\r\n  |\r\n3 |   fn foo() -> u8 {\r\n  |  ________________^\r\n4 | |     5;\r\n  | |      - help: consider removing this semicolon\r\n5 | | }\r\n  | |_^ expected u8, found ()\r\n  |\r\n  = note: expected type `u8`\r\n             found type `()`\r\n\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0308`.\r\nerror: Could not compile `playground`.\r\n```\r\n\r\nWith `impl Trait`:\r\n```rust\r\ntrait Bar {}\r\nimpl Bar for u8 {}\r\nfn foo() -> impl Bar {\r\n    5;\r\n}\r\n```\r\n```\r\nerror[E0277]: the trait bound `(): Bar` is not satisfied\r\n --> src/main.rs:3:13\r\n  |\r\n3 | fn foo() -> impl Bar {\r\n  |             ^^^^^^^^ the trait `Bar` is not implemented for `()`\r\n  |\r\n  = note: the return type of a function must have a statically known size\r\n\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0277`.\r\nerror: Could not compile `playground`.\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/54771/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/54771/timeline", "performed_via_github_app": null, "state_reason": null}