{"url": "https://api.github.com/repos/rust-lang/rust/issues/72081", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/72081/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/72081/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/72081/events", "html_url": "https://github.com/rust-lang/rust/issues/72081", "id": 615408268, "node_id": "MDU6SXNzdWU2MTU0MDgyNjg=", "number": 72081, "title": "`warn(private_doc_tests)` warns about republished items", "user": {"login": "sourcefrog", "id": 346355, "node_id": "MDQ6VXNlcjM0NjM1NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/346355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sourcefrog", "html_url": "https://github.com/sourcefrog", "followers_url": "https://api.github.com/users/sourcefrog/followers", "following_url": "https://api.github.com/users/sourcefrog/following{/other_user}", "gists_url": "https://api.github.com/users/sourcefrog/gists{/gist_id}", "starred_url": "https://api.github.com/users/sourcefrog/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sourcefrog/subscriptions", "organizations_url": "https://api.github.com/users/sourcefrog/orgs", "repos_url": "https://api.github.com/users/sourcefrog/repos", "events_url": "https://api.github.com/users/sourcefrog/events{/privacy}", "received_events_url": "https://api.github.com/users/sourcefrog/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 203738, "node_id": "MDU6TGFiZWwyMDM3Mzg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-rustdoc", "name": "T-rustdoc", "color": "bfd4f2", "default": false, "description": "Relevant to the rustdoc team, which will review and decide on the PR/issue."}, {"id": 235137, "node_id": "MDU6TGFiZWwyMzUxMzc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lint", "name": "A-lint", "color": "f7e101", "default": false, "description": "Area: Lints (warnings about flaws in source code) such as unused_mut."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1118559391, "node_id": "MDU6TGFiZWwxMTE4NTU5Mzkx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-doctests", "name": "A-doctests", "color": "f7e101", "default": false, "description": "Area: Documentation tests, run by rustdoc"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-10T14:54:24Z", "updated_at": "2022-01-06T18:48:47Z", "closed_at": "2022-01-06T18:48:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I have doctests on a type in a private module, that's then republished into the crate's top-level module. I think this is a pretty common pattern in Rust?\r\n\r\nHere's a simplified example:\r\n\r\n```rust\r\n// lib.rs\r\n#[warn(private_doc_tests)]\r\nmod inner {\r\n    /// This is my struct.\r\n    ///\r\n    /// You can make a struct:\r\n    ///\r\n    /// ```\r\n    /// A{}\r\n    /// ```\r\n    pub struct A {}\r\n}\r\n\r\npub use inner::A;\r\n```\r\n\r\nIf you run rustdoc on this, you'll see\r\n\r\n1. The example is visible under the top-level `A` struct.\r\n2. You get a warning about \"documentation test in private item\"\r\n\r\n```\r\n Documenting rustdoc-warning-example v0.1.0 (/Users/mbp/src/rustdoc-warning-example)\r\nwarning: documentation test in private item\r\n --> src/lib.rs:3:5\r\n  |\r\n3 | /     /// This is my struct.\r\n4 | |     ///\r\n5 | |     /// You can construct it:\r\n6 | |     ///\r\n7 | |     /// ```\r\n8 | |     /// A{}\r\n9 | |     /// ```\r\n  | |___________^\r\n  |\r\nnote: the lint level is defined here\r\n --> src/lib.rs:1:8\r\n  |\r\n1 | #[warn(private_doc_tests)]\r\n  |        ^^^^^^^^^^^^^^^^^\r\n\r\nwarning: documentation test in private item\r\n --> src/lib.rs:3:5\r\n  |\r\n3 | /     /// This is my struct.\r\n4 | |     ///\r\n5 | |     /// You can construct it:\r\n6 | |     ///\r\n7 | |     /// ```\r\n8 | |     /// A{}\r\n9 | |     /// ```\r\n  | |___________^\r\n\r\nwarning: 2 warnings emitted\r\n```\r\n\r\nIf you run rustdoc, it does build and run the test. \r\n\r\nI expected there would not be a warning, because the doctest is both visible to users, and run. In other words the warning ought to match whether the item is actually visible. \r\n\r\nAlso, it seems like a glitch that the warning is reported twice.\r\n\r\nFollows on from #55333, #55367, cc @GuillaumeGomez.  \r\n\r\n### Meta\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.44.0-beta.2 (b1162ed50 2020-04-25)\r\nbinary: rustc\r\ncommit-hash: b1162ed5067784cff2bb06afa8910510bf43e2bf\r\ncommit-date: 2020-04-25\r\nhost: x86_64-apple-darwin\r\nrelease: 1.44.0-beta.2\r\nLLVM version: 9.0\r\n```\r\n\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/72081/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/72081/timeline", "performed_via_github_app": null, "state_reason": "completed"}