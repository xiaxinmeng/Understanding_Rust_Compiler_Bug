{"url": "https://api.github.com/repos/rust-lang/rust/issues/12442", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/12442/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/12442/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/12442/events", "html_url": "https://github.com/rust-lang/rust/issues/12442", "id": 28029232, "node_id": "MDU6SXNzdWUyODAyOTIzMg==", "number": 12442, "title": "RFC: Totally ordered wrappers for `f32` and `f64` (and possibly others)", "user": {"login": "lifthrasiir", "id": 323836, "node_id": "MDQ6VXNlcjMyMzgzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/323836?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lifthrasiir", "html_url": "https://github.com/lifthrasiir", "followers_url": "https://api.github.com/users/lifthrasiir/followers", "following_url": "https://api.github.com/users/lifthrasiir/following{/other_user}", "gists_url": "https://api.github.com/users/lifthrasiir/gists{/gist_id}", "starred_url": "https://api.github.com/users/lifthrasiir/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lifthrasiir/subscriptions", "organizations_url": "https://api.github.com/users/lifthrasiir/orgs", "repos_url": "https://api.github.com/users/lifthrasiir/repos", "events_url": "https://api.github.com/users/lifthrasiir/events{/privacy}", "received_events_url": "https://api.github.com/users/lifthrasiir/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 38, "created_at": "2014-02-21T09:44:53Z", "updated_at": "2014-02-24T12:30:52Z", "closed_at": "2014-02-24T12:30:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It is well known that  `f32` and `f64` are not totally orderable by default, and thus does not implement `TotalOrd` and `TotalEq`. However it is less known that we rarely need the total ordering in reality, and the standard library has only two cases requiring the total ordering (sorting and `TreeMap`). #12434 and #12435 are based on this observation, but we can think in the other direction: we can provide totally ordered wrappers for partially ordered types.\n\nThe suggested wrappers, `TotallyOrderedF32` and `TotallyOrderedF64` will be tuple (newtype) structs for `f32` and `f64`. (Yes, I know this name doesn't look good, it's intentional.) They have the following constraints: (`TOF` for any of two types)\n\n```\nx < y  and x == x and y == y implies TOF(x).cmp(&TOF(y)) == Less\nx > y  and x == x and y == y implies TOF(x).cmp(&TOF(y)) == Greater\nx == y and x == x and y == y implies TOF(x).cmp(&TOF(y)) == Equal\n           x != y or  y != y implies TOF(x).cmp(&TOF(y)) is arbitrary (but a function of x/y)\n```\n\nThe actual implementation would be similar to IEEE 754-2008 `totalOrder` except that `TOF(-0).cmp(&TOF(+0)) == Equal`, otherwise we would break the constraints as `-0 == +0`. Combined with `Deref` (#7141, which would have to be implemented eventually) I no longer see the separation of `Ord/Eq` and `TotalOrd/Eq` is necessary. Usability-wise, the compiler can suggest `TotallyOrderedF{32,64}` on the failure to expand `#[deriving(TotalOrd)]` (and others) for `f32` and `f64`.\n\nThis RFC only concerns about `f32` and `f64` since they are commonly encountered non-totally-ordered types, but if we want to pursue this further, we can alternatively provide a `TotalOrder` generic wrapper that massages `Ord` implementors to aforementioned constraints.\n", "closed_by": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/12442/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/12442/timeline", "performed_via_github_app": null, "state_reason": "completed"}