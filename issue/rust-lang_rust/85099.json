{"url": "https://api.github.com/repos/rust-lang/rust/issues/85099", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/85099/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/85099/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/85099/events", "html_url": "https://github.com/rust-lang/rust/issues/85099", "id": 881559978, "node_id": "MDU6SXNzdWU4ODE1NTk5Nzg=", "number": 85099, "title": "A `Pin` unsoundness involving an `impl DerefMut for Pin<&dyn LocalTrait>`", "user": {"login": "steffahn", "id": 3986214, "node_id": "MDQ6VXNlcjM5ODYyMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3986214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steffahn", "html_url": "https://github.com/steffahn", "followers_url": "https://api.github.com/users/steffahn/followers", "following_url": "https://api.github.com/users/steffahn/following{/other_user}", "gists_url": "https://api.github.com/users/steffahn/gists{/gist_id}", "starred_url": "https://api.github.com/users/steffahn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steffahn/subscriptions", "organizations_url": "https://api.github.com/users/steffahn/orgs", "repos_url": "https://api.github.com/users/steffahn/repos", "events_url": "https://api.github.com/users/steffahn/events{/privacy}", "received_events_url": "https://api.github.com/users/steffahn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 67766349, "node_id": "MDU6TGFiZWw2Nzc2NjM0OQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-mentor", "name": "E-mentor", "color": "02E10C", "default": false, "description": "Call for participation: This issue has a mentor. Use RustcContributor::new on Zulip for discussion."}, {"id": 203429200, "node_id": "MDU6TGFiZWwyMDM0MjkyMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-high", "name": "P-high", "color": "eb6420", "default": false, "description": "High priority"}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 267612997, "node_id": "MDU6TGFiZWwyNjc2MTI5OTc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-unsound", "name": "I-unsound", "color": "e11d21", "default": false, "description": "Issue: A soundness hole (worst kind of bug), see: https://en.wikipedia.org/wiki/Soundness"}, {"id": 419557634, "node_id": "MDU6TGFiZWw0MTk1NTc2MzQ=", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-medium", "name": "E-medium", "color": "02e10c", "default": false, "description": "Call for participation: Experience needed to fix: Medium / intermediate"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 2635878519, "node_id": "MDU6TGFiZWwyNjM1ODc4NTE5", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-pin", "name": "A-pin", "color": "f7e101", "default": false, "description": "Area: Pin"}, {"id": 3921861239, "node_id": "LA_kwDOAAsO6M7pwtp3", "url": "https://api.github.com/repos/rust-lang/rust/labels/S-bug-has-test", "name": "S-bug-has-test", "color": "862eff", "default": false, "description": "A `known-bug` test has been added for this bug."}, {"id": 4172483496, "node_id": "LA_kwDOAAsO6M74swuo", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-types", "name": "T-types", "color": "bfd4f2", "default": false, "description": "Relevant to the types team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": {"login": "lambinoo", "id": 57440804, "node_id": "MDQ6VXNlcjU3NDQwODA0", "avatar_url": "https://avatars.githubusercontent.com/u/57440804?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lambinoo", "html_url": "https://github.com/lambinoo", "followers_url": "https://api.github.com/users/lambinoo/followers", "following_url": "https://api.github.com/users/lambinoo/following{/other_user}", "gists_url": "https://api.github.com/users/lambinoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/lambinoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lambinoo/subscriptions", "organizations_url": "https://api.github.com/users/lambinoo/orgs", "repos_url": "https://api.github.com/users/lambinoo/repos", "events_url": "https://api.github.com/users/lambinoo/events{/privacy}", "received_events_url": "https://api.github.com/users/lambinoo/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "lambinoo", "id": 57440804, "node_id": "MDQ6VXNlcjU3NDQwODA0", "avatar_url": "https://avatars.githubusercontent.com/u/57440804?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lambinoo", "html_url": "https://github.com/lambinoo", "followers_url": "https://api.github.com/users/lambinoo/followers", "following_url": "https://api.github.com/users/lambinoo/following{/other_user}", "gists_url": "https://api.github.com/users/lambinoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/lambinoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lambinoo/subscriptions", "organizations_url": "https://api.github.com/users/lambinoo/orgs", "repos_url": "https://api.github.com/users/lambinoo/repos", "events_url": "https://api.github.com/users/lambinoo/events{/privacy}", "received_events_url": "https://api.github.com/users/lambinoo/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 24, "created_at": "2021-05-09T01:10:36Z", "updated_at": "2023-05-30T21:47:01Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Haven\u2019t got the time to do any more explaining right now, but here\u2019s the code (_Edit: I added a few inline comments anyways_):\r\n\r\n```rust\r\nuse std::{\r\n    cell::{RefCell, RefMut},\r\n    future::Future,\r\n    mem,\r\n    ops::DerefMut,\r\n    pin::Pin,\r\n    sync::Arc,\r\n    task::{Context, Poll, Wake},\r\n};\r\n\r\nstruct SomeLocalStruct<'a, Fut>(&'a RefCell<Fut>);\r\n\r\ntrait SomeTrait<'a, Fut> {\r\n    #[allow(clippy::mut_from_ref)]\r\n    fn deref_helper(&self) -> &mut (dyn SomeTrait<'a, Fut> + 'a) {\r\n        unimplemented!()\r\n    }\r\n    fn downcast(self: Pin<&mut Self>) -> Pin<&mut Fut> {\r\n        unimplemented!()\r\n    }\r\n}\r\n\r\nimpl<'a, Fut: Future<Output = ()>> SomeTrait<'a, Fut> for SomeLocalStruct<'a, Fut> {\r\n    fn deref_helper(&self) -> &mut (dyn SomeTrait<'a, Fut> + 'a) {\r\n        let x = Box::new(self.0.borrow_mut());\r\n        let x: &'a mut RefMut<'a, Fut> = Box::leak(x);\r\n        &mut **x\r\n    }\r\n}\r\nimpl<'a, Fut: Future<Output = ()>> SomeTrait<'a, Fut> for Fut {\r\n    fn downcast(self: Pin<&mut Self>) -> Pin<&mut Fut> {\r\n        self\r\n    }\r\n}\r\n\r\n\r\nimpl<'b, 'a, Fut> DerefMut for Pin<&'b dyn SomeTrait<'a, Fut>> {\r\n    fn deref_mut<'c>(\r\n        self: &'c mut Pin<&'b dyn SomeTrait<'a, Fut>>,\r\n    ) -> &'c mut (dyn SomeTrait<'a, Fut> + 'b) {\r\n        self.deref_helper()\r\n    }\r\n}\r\n\r\n// obviously a \u201cworking\u201d function with this signature is problematic\r\npub fn unsound_pin<Fut: Future<Output = ()>>(\r\n    fut: Fut,\r\n    callback: impl FnOnce(Pin<&mut Fut>),\r\n) -> Fut {\r\n    let cell = RefCell::new(fut);\r\n    let s: &SomeLocalStruct<'_, Fut> = &SomeLocalStruct(&cell);\r\n    let p: Pin<Pin<&SomeLocalStruct<'_, Fut>>> = Pin::new(Pin::new(s));\r\n    let mut p: Pin<Pin<&dyn SomeTrait<'_, Fut>>> = p;\r\n    let r: Pin<&mut dyn SomeTrait<'_, Fut>> = p.as_mut();\r\n    let f: Pin<&mut Fut> = r.downcast();\r\n    callback(f);\r\n    cell.into_inner()\r\n}\r\n\r\n////////////////////////////////////////////////////////////////////////////////////////////////////\r\n// everything below here just exploitation of `unsound_pin` to get a segfault\r\n\r\nfn yield_now() -> impl Future<Output = ()> {\r\n    struct Yield(bool);\r\n    impl Future for Yield {\r\n        type Output = ();\r\n\r\n        fn poll(mut self: Pin<&mut Self>, _cx: &mut std::task::Context<'_>) -> Poll<Self::Output> {\r\n            if matches!(mem::replace(&mut *self, Yield(true)), Yield(true)) {\r\n                Poll::Ready(())\r\n            } else {\r\n                Poll::Pending\r\n            }\r\n        }\r\n    }\r\n    Yield(false)\r\n}\r\n\r\nfn main() {\r\n    let fut = async {\r\n        let x = &&0;\r\n        let reference = &x;\r\n        yield_now().await; // future will be moved here\r\n        dbg!(reference);\r\n    };\r\n\r\n    struct Waker;\r\n    impl Wake for Waker {\r\n        fn wake(self: std::sync::Arc<Self>) {}\r\n    }\r\n    let waker = Arc::new(Waker).into();\r\n    let mut cx = Context::from_waker(&waker);\r\n\r\n    let fut = unsound_pin(fut, |fut| {\r\n        let _ = fut.poll(&mut cx);\r\n    });\r\n    // moving `fut`  vvv  after the first poll above, then polling again\r\n    let _ = Box::pin(fut).as_mut().poll(&mut cx);\r\n}\r\n```\r\n```\r\n   Compiling playground v0.0.1 (/playground)\r\n    Finished dev [unoptimized + debuginfo] target(s) in 1.10s\r\n     Running `target/debug/playground`\r\n[src/main.rs:84] reference = timeout: the monitored command dumped core\r\n/playground/tools/entrypoint.sh: line 11:     8 Segmentation fault      timeout --signal=KILL ${timeout} \"$@\"\r\n```\r\n([playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=b434459e9f7adc2cbe47b706f1e918db))\r\n\r\nsegfaults in debug build due to an `async`-block future being moved after the first `.poll()` call\r\n\r\n@rustbot label C-bug, A-pin, T-compiler, T-libs, T-lang\r\nand someone please add I-unsound \ud83d\udca5", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/85099/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/85099/timeline", "performed_via_github_app": null, "state_reason": null}