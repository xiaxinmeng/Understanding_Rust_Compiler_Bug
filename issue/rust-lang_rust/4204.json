{"url": "https://api.github.com/repos/rust-lang/rust/issues/4204", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/4204/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/4204/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/4204/events", "html_url": "https://github.com/rust-lang/rust/issues/4204", "id": 9313695, "node_id": "MDU6SXNzdWU5MzEzNjk1", "number": 4204, "title": "Add `uninit` intrinsic. Use in `core::vec`", "user": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 36996, "node_id": "MDU6TGFiZWwzNjk5Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-easy", "name": "E-easy", "color": "02e10c", "default": false, "description": "Call for participation: Experience needed to fix: Easy / not much (good first issue)"}, {"id": 234956, "node_id": "MDU6TGFiZWwyMzQ5NTY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-codegen", "name": "A-codegen", "color": "f7e101", "default": false, "description": "Area: Code generation"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2012-12-16T05:01:50Z", "updated_at": "2013-05-10T05:44:33Z", "closed_at": "2013-05-10T05:44:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`vec` previously had some code that looked like this:\n\n```\nlet vp: *T = ...;\nlet v = move *vp;\n```\n\nThis had the effect of memcpying `*vp` to `v` and zeroing `*vp`. `move` is being removed so this doesn't work. I've replaced that with:\n\n```\nlet mut vp: *T = ...;\nlet mut v: T = rusti::init(); // Create a zeroed value\nv <-> *vp;\n```\n\nThis could probably be more efficient by 1) not zeroing the value (in most cases), 2) not doing the swap.\n\nProbably this is what we should do:\n\n```\nlet mut vp: *T = ...;\nlet mut v: T = rusti::uninit(); // Create a non-zeroed value\nptr:memcpy(&mut T, vp, 1);\n```\n\nAnd if you need the zeroing you can do a memset.\n", "closed_by": {"login": "Aatch", "id": 342416, "node_id": "MDQ6VXNlcjM0MjQxNg==", "avatar_url": "https://avatars.githubusercontent.com/u/342416?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aatch", "html_url": "https://github.com/Aatch", "followers_url": "https://api.github.com/users/Aatch/followers", "following_url": "https://api.github.com/users/Aatch/following{/other_user}", "gists_url": "https://api.github.com/users/Aatch/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aatch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aatch/subscriptions", "organizations_url": "https://api.github.com/users/Aatch/orgs", "repos_url": "https://api.github.com/users/Aatch/repos", "events_url": "https://api.github.com/users/Aatch/events{/privacy}", "received_events_url": "https://api.github.com/users/Aatch/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/4204/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/4204/timeline", "performed_via_github_app": null, "state_reason": "completed"}