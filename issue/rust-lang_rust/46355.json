{"url": "https://api.github.com/repos/rust-lang/rust/issues/46355", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/46355/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/46355/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/46355/events", "html_url": "https://github.com/rust-lang/rust/issues/46355", "id": 277627073, "node_id": "MDU6SXNzdWUyNzc2MjcwNzM=", "number": 46355, "title": "SIGSEGV when using non-trivial thread_local! with -C target-cpu=haswell on macOS", "user": {"login": "swolchok", "id": 34168, "node_id": "MDQ6VXNlcjM0MTY4", "avatar_url": "https://avatars.githubusercontent.com/u/34168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/swolchok", "html_url": "https://github.com/swolchok", "followers_url": "https://api.github.com/users/swolchok/followers", "following_url": "https://api.github.com/users/swolchok/following{/other_user}", "gists_url": "https://api.github.com/users/swolchok/gists{/gist_id}", "starred_url": "https://api.github.com/users/swolchok/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/swolchok/subscriptions", "organizations_url": "https://api.github.com/users/swolchok/orgs", "repos_url": "https://api.github.com/users/swolchok/repos", "events_url": "https://api.github.com/users/swolchok/events{/privacy}", "received_events_url": "https://api.github.com/users/swolchok/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 100522, "node_id": "MDU6TGFiZWwxMDA1MjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-crash", "name": "I-crash", "color": "e10c02", "default": false, "description": "Issue: The compiler crashes (SIGSEGV, SIGABRT, etc). Use I-ICE instead when the compiler panics."}, {"id": 123111, "node_id": "MDU6TGFiZWwxMjMxMTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-macos", "name": "O-macos", "color": "6e6ec0", "default": false, "description": "Operating system: macOS"}, {"id": 55302148, "node_id": "MDU6TGFiZWw1NTMwMjE0OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-x86_64", "name": "O-x86_64", "color": "6e6ec0", "default": false, "description": "Target: x64 processors"}, {"id": 60344715, "node_id": "MDU6TGFiZWw2MDM0NDcxNQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-medium", "name": "P-medium", "color": "eb6420", "default": false, "description": "Medium priority"}, {"id": 262252840, "node_id": "MDU6TGFiZWwyNjIyNTI4NDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-stable", "name": "regression-from-stable-to-stable", "color": "e4008a", "default": false, "description": "Performance or correctness regression from one stable version to another."}, {"id": 632886930, "node_id": "MDU6TGFiZWw2MzI4ODY5MzA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-thread-locals", "name": "A-thread-locals", "color": "f7e101", "default": false, "description": "Area: Thread local storage (TLS)"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-11-29T04:36:27Z", "updated_at": "2018-06-30T16:17:28Z", "closed_at": "2018-06-30T16:17:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Here's a code sample, narrowed down a bit from my program:\r\n```\r\nextern crate fnv;\r\nextern crate rayon;\r\n\r\nuse fnv::FnvHashMap;\r\nuse rayon::prelude::*;\r\nuse std::cell::RefCell;\r\nuse std::sync::Arc;\r\n\r\n#[derive(Clone)]\r\nstruct Scratchpad {\r\n    vals: FnvHashMap<u32, u32>,\r\n}\r\n\r\nfn main() {\r\n    let per_thread_state = Scratchpad { vals: Default::default() };\r\n    let per_thread_state = Arc::new(per_thread_state);\r\n\r\n    thread_local! {\r\n        static STATE : RefCell<Option<Scratchpad>> = RefCell::new(None);\r\n    }\r\n\r\n    {\r\n        let pts = per_thread_state.clone();\r\n        let configuration = rayon::Configuration::new().start_handler(move |_| {\r\n            STATE.with(|current_value| {\r\n                assert!(current_value.borrow().is_none());\r\n                *current_value.borrow_mut() = Some((*pts).clone());\r\n            });\r\n        });\r\n        rayon::initialize(configuration);\r\n    }\r\n    let sum: u32 = vec![0; 100].par_iter().map(|&item| item).sum();\r\n    println!(\"Sum is {}\", sum);\r\n}\r\n```\r\n\r\nWhen built with `RUSTFLAGS=\"-C target-cpu=native\" cargo build --release` and run, it gets SIGSEGV on my Mac. (I poked around a little bit with lldb and it looks like `tlv_get_addr` is returning something we can't dereference. I couldn't investigate thoroughly because it wasn't showing source line information for whatever reason.) Without the `RUSTFLAGS`, it doesn't segfault.\r\n\r\nHere's an lldb session with some basic information about the crash:\r\n\r\n```\r\nrust-lldb target/release/threadlocalrepro\r\n(lldb) command source -s 0 '/tmp/rust-lldb-commands.vC8eMe'\r\nExecuting commands in '/tmp/rust-lldb-commands.vC8eMe'.\r\n(lldb) command script import \"/usr/local/Cellar/rust/1.22.1/lib/rustlib/etc/lldb_rust_formatters.py\"\r\n(lldb) type summary add --no-value --python-function lldb_rust_formatters.print_val -x \".*\" --category Rust\r\n(lldb) type category enable Rust\r\n(lldb) target create \"target/release/threadlocalrepro\"\r\nCurrent executable set to 'target/release/threadlocalrepro' (x86_64).\r\n(lldb) run\r\nProcess 53759 launched: '/Users/swolchok/threadlocalrepro/target/release/threadlocalrepro' (x86_64)\r\nProcess 53759 stopped\r\n* thread #2, stop reason = EXC_BAD_ACCESS (code=EXC_I386_GPFLT)\r\n    frame #0: 0x00000001000042ae threadlocalrepro`threadlocalrepro::main::_$u7b$$u7b$closure$u7d$$u7d$::h3e975efef0e15fc4 + 302\r\nthreadlocalrepro`threadlocalrepro::main::_$u7b$$u7b$closure$u7d$$u7d$::h3e975efef0e15fc4:\r\n->  0x1000042ae <+302>: vmovdqa (%rax), %ymm0\r\n    0x1000042b2 <+306>: movl   $0x1, %ecx\r\n    0x1000042b7 <+311>: vmovq  %rcx, %xmm1\r\n    0x1000042bc <+316>: vmovdqa %ymm1, (%rax)\r\nTarget 0: (threadlocalrepro) stopped.\r\n(lldb) register read\r\nGeneral Purpose Registers:\r\n       rax = 0x0000000100202890\r\n       rbx = 0x0000000100202890\r\n       rcx = 0x0000000000000003\r\n       rdx = 0x0000000100202890\r\n       rdi = 0x000000010005db08  threadlocalrepro`threadlocalrepro::main::STATE::__getit::__KEY::h3fa22d7abc868d4a\r\n       rsi = 0x0000000100200000\r\n       rbp = 0x0000700004e80c50\r\n       rsp = 0x0000700004e80bf0\r\n        r8 = 0x0000000000000004\r\n        r9 = 0x0000000000000000\r\n       r10 = 0x0000000000000001\r\n       r11 = 0x0000000000000005\r\n       r12 = 0x0000000100624000\r\n       r13 = 0x0000000100624090\r\n       r14 = 0x0000000100617008\r\n       r15 = 0x0000700004e80d08\r\n       rip = 0x00000001000042ae  threadlocalrepro`threadlocalrepro::main::_$u7b$$u7b$closure$u7d$$u7d$::h3e975efef0e15fc4 + 302\r\n    rflags = 0x0000000000010206\r\n        cs = 0x000000000000002b\r\n        fs = 0x0000000000000000\r\n        gs = 0x0000000000000000\r\n\r\n(lldb) bt\r\n* thread #2, stop reason = EXC_BAD_ACCESS (code=EXC_I386_GPFLT)\r\n  * frame #0: 0x00000001000042ae threadlocalrepro`threadlocalrepro::main::_$u7b$$u7b$closure$u7d$$u7d$::h3e975efef0e15fc4 + 302\r\n    frame #1: 0x00000001000221fd threadlocalrepro`panic_unwind::__rust_maybe_catch_panic at lib.rs:99 [opt]\r\n    frame #2: 0x000000010000564b threadlocalrepro`std::sys_common::backtrace::__rust_begin_short_backtrace::h25c1221ba9601a19 + 475\r\n    frame #3: 0x0000000100005e6d threadlocalrepro`std::panicking::try::do_call::habed391336ff94ed + 29\r\n    frame #4: 0x00000001000221fd threadlocalrepro`panic_unwind::__rust_maybe_catch_panic at lib.rs:99 [opt]\r\n    frame #5: 0x000000010000750b threadlocalrepro`_$LT$F$u20$as$u20$alloc..boxed..FnBox$LT$A$GT$$GT$::call_box::hc3095b26e437282e + 171\r\n    frame #6: 0x000000010001a97c threadlocalrepro`std::sys::imp::thread::{{impl}}::new::thread_start [inlined] alloc::boxed::{{impl}}::call_once<(),()> at boxed.rs:736 [opt]\r\n    frame #7: 0x000000010001a979 threadlocalrepro`std::sys::imp::thread::{{impl}}::new::thread_start [inlined] std::sys_common::thread::start_thread at thread.rs:24 [opt]\r\n    frame #8: 0x000000010001a8fe threadlocalrepro`std::sys::imp::thread::{{impl}}::new::thread_start at thread.rs:90 [opt]\r\n    frame #9: 0x00007fffe2c9993b libsystem_pthread.dylib`_pthread_body + 180\r\n    frame #10: 0x00007fffe2c99887 libsystem_pthread.dylib`_pthread_start + 286\r\n    frame #11: 0x00007fffe2c9908d libsystem_pthread.dylib`thread_start + 13\r\n(lldb) bt all\r\n  thread #1, queue = 'com.apple.main-thread'\r\n    frame #0: 0x00007fffe2baebf2 libsystem_kernel.dylib`__psynch_cvwait + 10\r\n    frame #1: 0x00007fffe2c9a7fa libsystem_pthread.dylib`_pthread_cond_wait + 712\r\n    frame #2: 0x0000000100007993 threadlocalrepro`rayon_core::latch::LockLatch::wait::h1a0d2eb553df7e2a + 163\r\n    frame #3: 0x000000010000a1cc threadlocalrepro`rayon_core::initialize::h33e8eefa046130dd + 348\r\n    frame #4: 0x0000000100003e2b threadlocalrepro`threadlocalrepro::main::h5914660853824a52 + 379\r\n    frame #5: 0x00000001000221fd threadlocalrepro`panic_unwind::__rust_maybe_catch_panic at lib.rs:99 [opt]\r\n    frame #6: 0x000000010001bc09 threadlocalrepro`std::rt::lang_start [inlined] std::panicking::try<(),closure> at panicking.rs:459 [opt]\r\n    frame #7: 0x000000010001bbd6 threadlocalrepro`std::rt::lang_start [inlined] std::panic::catch_unwind<closure,()> at panic.rs:361 [opt]\r\n    frame #8: 0x000000010001bbd6 threadlocalrepro`std::rt::lang_start at rt.rs:59 [opt]\r\n    frame #9: 0x00007fffe2a80235 libdyld.dylib`start + 1\r\n    frame #10: 0x00007fffe2a80235 libdyld.dylib`start + 1\r\n* thread #2, stop reason = EXC_BAD_ACCESS (code=EXC_I386_GPFLT)\r\n  * frame #0: 0x00000001000042ae threadlocalrepro`threadlocalrepro::main::_$u7b$$u7b$closure$u7d$$u7d$::h3e975efef0e15fc4 + 302\r\n    frame #1: 0x00000001000221fd threadlocalrepro`panic_unwind::__rust_maybe_catch_panic at lib.rs:99 [opt]\r\n    frame #2: 0x000000010000564b threadlocalrepro`std::sys_common::backtrace::__rust_begin_short_backtrace::h25c1221ba9601a19 + 475\r\n    frame #3: 0x0000000100005e6d threadlocalrepro`std::panicking::try::do_call::habed391336ff94ed + 29\r\n    frame #4: 0x00000001000221fd threadlocalrepro`panic_unwind::__rust_maybe_catch_panic at lib.rs:99 [opt]\r\n    frame #5: 0x000000010000750b threadlocalrepro`_$LT$F$u20$as$u20$alloc..boxed..FnBox$LT$A$GT$$GT$::call_box::hc3095b26e437282e + 171\r\n    frame #6: 0x000000010001a97c threadlocalrepro`std::sys::imp::thread::{{impl}}::new::thread_start [inlined] alloc::boxed::{{impl}}::call_once<(),()> at boxed.rs:736 [opt]\r\n    frame #7: 0x000000010001a979 threadlocalrepro`std::sys::imp::thread::{{impl}}::new::thread_start [inlined] std::sys_common::thread::start_thread at thread.rs:24 [opt]\r\n    frame #8: 0x000000010001a8fe threadlocalrepro`std::sys::imp::thread::{{impl}}::new::thread_start at thread.rs:90 [opt]\r\n    frame #9: 0x00007fffe2c9993b libsystem_pthread.dylib`_pthread_body + 180\r\n    frame #10: 0x00007fffe2c99887 libsystem_pthread.dylib`_pthread_start + 286\r\n    frame #11: 0x00007fffe2c9908d libsystem_pthread.dylib`thread_start + 13\r\n  thread #3\r\n    frame #0: 0x00007fffe2baebf2 libsystem_kernel.dylib`__psynch_cvwait + 10\r\n    frame #1: 0x00007fffe2c9a7fa libsystem_pthread.dylib`_pthread_cond_wait + 712\r\n    frame #2: 0x0000000100009df5 threadlocalrepro`rayon_core::sleep::Sleep::sleep::he476e9c9ebf0bba4 + 277\r\n    frame #3: 0x0000000100009986 threadlocalrepro`rayon_core::registry::WorkerThread::wait_until::h438f955d0a4ae18c + 630\r\n    frame #4: 0x0000000100005701 threadlocalrepro`std::sys_common::backtrace::__rust_begin_short_backtrace::h25c1221ba9601a19 + 657\r\n    frame #5: 0x0000000100005e6d threadlocalrepro`std::panicking::try::do_call::habed391336ff94ed + 29\r\n    frame #6: 0x00000001000221fd threadlocalrepro`panic_unwind::__rust_maybe_catch_panic at lib.rs:99 [opt]\r\n    frame #7: 0x000000010000750b threadlocalrepro`_$LT$F$u20$as$u20$alloc..boxed..FnBox$LT$A$GT$$GT$::call_box::hc3095b26e437282e + 171\r\n    frame #8: 0x000000010001a97c threadlocalrepro`std::sys::imp::thread::{{impl}}::new::thread_start [inlined] alloc::boxed::{{impl}}::call_once<(),()> at boxed.rs:736 [opt]\r\n    frame #9: 0x000000010001a979 threadlocalrepro`std::sys::imp::thread::{{impl}}::new::thread_start [inlined] std::sys_common::thread::start_thread at thread.rs:24 [opt]\r\n    frame #10: 0x000000010001a8fe threadlocalrepro`std::sys::imp::thread::{{impl}}::new::thread_start at thread.rs:90 [opt]\r\n    frame #11: 0x00007fffe2c9993b libsystem_pthread.dylib`_pthread_body + 180\r\n    frame #12: 0x00007fffe2c99887 libsystem_pthread.dylib`_pthread_start + 286\r\n    frame #13: 0x00007fffe2c9908d libsystem_pthread.dylib`thread_start + 13\r\n  thread #4\r\n    frame #0: 0x00007fffe2bb0246 libsystem_kernel.dylib`read + 10\r\n    frame #1: 0x0000000100011637 threadlocalrepro`std::fs::{{impl}}::read [inlined] std::sys::imp::fd::{{impl}}::read at fd.rs:58 [opt]\r\n    frame #2: 0x000000010001161a threadlocalrepro`std::fs::{{impl}}::read [inlined] std::sys::imp::fs::{{impl}}::read at fs.rs:496 [opt]\r\n    frame #3: 0x000000010001161a threadlocalrepro`std::fs::{{impl}}::read at fs.rs:449 [opt]\r\n    frame #4: 0x000000010000af71 threadlocalrepro`_$LT$rand..os..imp..OsRng$u20$as$u20$rand..Rng$GT$::fill_bytes::h8532113fd6db4404 + 65\r\n    frame #5: 0x000000010000b1b1 threadlocalrepro`rand::StdRng::new::hcd2107c72b382959 + 337\r\n    frame #6: 0x000000010000b9c2 threadlocalrepro`rand::thread_rng::THREAD_RNG_KEY::__init::he04c67a54866e26e + 34\r\n    frame #7: 0x000000010000b91d threadlocalrepro`rand::thread_rng::h5fb42a8cb8008a3e + 93\r\n    frame #8: 0x000000010000b26a threadlocalrepro`rand::weak_rng::h1e1cad0723c27821 + 26\r\n    frame #9: 0x00000001000054ae threadlocalrepro`std::sys_common::backtrace::__rust_begin_short_backtrace::h25c1221ba9601a19 + 62\r\n    frame #10: 0x0000000100005e6d threadlocalrepro`std::panicking::try::do_call::habed391336ff94ed + 29\r\n    frame #11: 0x00000001000221fd threadlocalrepro`panic_unwind::__rust_maybe_catch_panic at lib.rs:99 [opt]\r\n    frame #12: 0x000000010000750b threadlocalrepro`_$LT$F$u20$as$u20$alloc..boxed..FnBox$LT$A$GT$$GT$::call_box::hc3095b26e437282e + 171\r\n    frame #13: 0x000000010001a97c threadlocalrepro`std::sys::imp::thread::{{impl}}::new::thread_start [inlined] alloc::boxed::{{impl}}::call_once<(),()> at boxed.rs:736 [opt]\r\n    frame #14: 0x000000010001a979 threadlocalrepro`std::sys::imp::thread::{{impl}}::new::thread_start [inlined] std::sys_common::thread::start_thread at thread.rs:24 [opt]\r\n    frame #15: 0x000000010001a8fe threadlocalrepro`std::sys::imp::thread::{{impl}}::new::thread_start at thread.rs:90 [opt]\r\n    frame #16: 0x00007fffe2c9993b libsystem_pthread.dylib`_pthread_body + 180\r\n    frame #17: 0x00007fffe2c99887 libsystem_pthread.dylib`_pthread_start + 286\r\n    frame #18: 0x00007fffe2c9908d libsystem_pthread.dylib`thread_start + 13\r\n  thread #5\r\n    frame #0: 0x00007fffe2bb0246 libsystem_kernel.dylib`read + 10\r\n    frame #1: 0x0000000100011637 threadlocalrepro`std::fs::{{impl}}::read [inlined] std::sys::imp::fd::{{impl}}::read at fd.rs:58 [opt]\r\n    frame #2: 0x000000010001161a threadlocalrepro`std::fs::{{impl}}::read [inlined] std::sys::imp::fs::{{impl}}::read at fs.rs:496 [opt]\r\n    frame #3: 0x000000010001161a threadlocalrepro`std::fs::{{impl}}::read at fs.rs:449 [opt]\r\n    frame #4: 0x000000010000af71 threadlocalrepro`_$LT$rand..os..imp..OsRng$u20$as$u20$rand..Rng$GT$::fill_bytes::h8532113fd6db4404 + 65\r\n    frame #5: 0x000000010000b1b1 threadlocalrepro`rand::StdRng::new::hcd2107c72b382959 + 337\r\n    frame #6: 0x000000010000b9c2 threadlocalrepro`rand::thread_rng::THREAD_RNG_KEY::__init::he04c67a54866e26e + 34\r\n    frame #7: 0x000000010000b91d threadlocalrepro`rand::thread_rng::h5fb42a8cb8008a3e + 93\r\n    frame #8: 0x000000010000b26a threadlocalrepro`rand::weak_rng::h1e1cad0723c27821 + 26\r\n    frame #9: 0x00000001000054ae threadlocalrepro`std::sys_common::backtrace::__rust_begin_short_backtrace::h25c1221ba9601a19 + 62\r\n    frame #10: 0x0000000100005e6d threadlocalrepro`std::panicking::try::do_call::habed391336ff94ed + 29\r\n    frame #11: 0x00000001000221fd threadlocalrepro`panic_unwind::__rust_maybe_catch_panic at lib.rs:99 [opt]\r\n    frame #12: 0x000000010000750b threadlocalrepro`_$LT$F$u20$as$u20$alloc..boxed..FnBox$LT$A$GT$$GT$::call_box::hc3095b26e437282e + 171\r\n    frame #13: 0x000000010001a97c threadlocalrepro`std::sys::imp::thread::{{impl}}::new::thread_start [inlined] alloc::boxed::{{impl}}::call_once<(),()> at boxed.rs:736 [opt]\r\n    frame #14: 0x000000010001a979 threadlocalrepro`std::sys::imp::thread::{{impl}}::new::thread_start [inlined] std::sys_common::thread::start_thread at thread.rs:24 [opt]\r\n    frame #15: 0x000000010001a8fe threadlocalrepro`std::sys::imp::thread::{{impl}}::new::thread_start at thread.rs:90 [opt]\r\n    frame #16: 0x00007fffe2c9993b libsystem_pthread.dylib`_pthread_body + 180\r\n    frame #17: 0x00007fffe2c99887 libsystem_pthread.dylib`_pthread_start + 286\r\n    frame #18: 0x00007fffe2c9908d libsystem_pthread.dylib`thread_start + 13\r\n  thread #6\r\n    frame #0: 0x00007fffe2baebf2 libsystem_kernel.dylib`__psynch_cvwait + 10\r\n    frame #1: 0x00007fffe2c9a7fa libsystem_pthread.dylib`_pthread_cond_wait + 712\r\n    frame #2: 0x0000000100009df5 threadlocalrepro`rayon_core::sleep::Sleep::sleep::he476e9c9ebf0bba4 + 277\r\n    frame #3: 0x0000000100009986 threadlocalrepro`rayon_core::registry::WorkerThread::wait_until::h438f955d0a4ae18c + 630\r\n    frame #4: 0x0000000100005701 threadlocalrepro`std::sys_common::backtrace::__rust_begin_short_backtrace::h25c1221ba9601a19 + 657\r\n    frame #5: 0x0000000100005e6d threadlocalrepro`std::panicking::try::do_call::habed391336ff94ed + 29\r\n    frame #6: 0x00000001000221fd threadlocalrepro`panic_unwind::__rust_maybe_catch_panic at lib.rs:99 [opt]\r\n    frame #7: 0x000000010000750b threadlocalrepro`_$LT$F$u20$as$u20$alloc..boxed..FnBox$LT$A$GT$$GT$::call_box::hc3095b26e437282e + 171\r\n    frame #8: 0x000000010001a97c threadlocalrepro`std::sys::imp::thread::{{impl}}::new::thread_start [inlined] alloc::boxed::{{impl}}::call_once<(),()> at boxed.rs:736 [opt]\r\n    frame #9: 0x000000010001a979 threadlocalrepro`std::sys::imp::thread::{{impl}}::new::thread_start [inlined] std::sys_common::thread::start_thread at thread.rs:24 [opt]\r\n    frame #10: 0x000000010001a8fe threadlocalrepro`std::sys::imp::thread::{{impl}}::new::thread_start at thread.rs:90 [opt]\r\n    frame #11: 0x00007fffe2c9993b libsystem_pthread.dylib`_pthread_body + 180\r\n    frame #12: 0x00007fffe2c99887 libsystem_pthread.dylib`_pthread_start + 286\r\n    frame #13: 0x00007fffe2c9908d libsystem_pthread.dylib`thread_start + 13\r\n  thread #7\r\n    frame #0: 0x00007fffe2baebf2 libsystem_kernel.dylib`__psynch_cvwait + 10\r\n    frame #1: 0x00007fffe2c9a7fa libsystem_pthread.dylib`_pthread_cond_wait + 712\r\n    frame #2: 0x0000000100009df5 threadlocalrepro`rayon_core::sleep::Sleep::sleep::he476e9c9ebf0bba4 + 277\r\n    frame #3: 0x0000000100009986 threadlocalrepro`rayon_core::registry::WorkerThread::wait_until::h438f955d0a4ae18c + 630\r\n    frame #4: 0x0000000100005701 threadlocalrepro`std::sys_common::backtrace::__rust_begin_short_backtrace::h25c1221ba9601a19 + 657\r\n    frame #5: 0x0000000100005e6d threadlocalrepro`std::panicking::try::do_call::habed391336ff94ed + 29\r\n    frame #6: 0x00000001000221fd threadlocalrepro`panic_unwind::__rust_maybe_catch_panic at lib.rs:99 [opt]\r\n    frame #7: 0x000000010000750b threadlocalrepro`_$LT$F$u20$as$u20$alloc..boxed..FnBox$LT$A$GT$$GT$::call_box::hc3095b26e437282e + 171\r\n    frame #8: 0x000000010001a97c threadlocalrepro`std::sys::imp::thread::{{impl}}::new::thread_start [inlined] alloc::boxed::{{impl}}::call_once<(),()> at boxed.rs:736 [opt]\r\n    frame #9: 0x000000010001a979 threadlocalrepro`std::sys::imp::thread::{{impl}}::new::thread_start [inlined] std::sys_common::thread::start_thread at thread.rs:24 [opt]\r\n    frame #10: 0x000000010001a8fe threadlocalrepro`std::sys::imp::thread::{{impl}}::new::thread_start at thread.rs:90 [opt]\r\n    frame #11: 0x00007fffe2c9993b libsystem_pthread.dylib`_pthread_body + 180\r\n    frame #12: 0x00007fffe2c99887 libsystem_pthread.dylib`_pthread_start + 286\r\n    frame #13: 0x00007fffe2c9908d libsystem_pthread.dylib`thread_start + 13\r\n(lldb)\r\n```\r\n\r\n```\r\nrustc --version --verbose\r\nrustc 1.22.1\r\nbinary: rustc\r\ncommit-hash: unknown\r\ncommit-date: unknown\r\nhost: x86_64-apple-darwin\r\nrelease: 1.22.1\r\nLLVM version: 4.0\r\n```\r\n\r\nI'm on macOS 10.12.6. target-cpu=native on my machine seems to mean haswell, according to `rustc --print target-cpus`.", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/46355/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/46355/timeline", "performed_via_github_app": null, "state_reason": "completed"}