{"url": "https://api.github.com/repos/rust-lang/rust/issues/73958", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/73958/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/73958/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/73958/events", "html_url": "https://github.com/rust-lang/rust/issues/73958", "id": 649745016, "node_id": "MDU6SXNzdWU2NDk3NDUwMTY=", "number": 73958, "title": "Ability from the top-level of the compilation not to mark #[no_mangle] items exported from shared library", "user": {"login": "hsivonen", "id": 478856, "node_id": "MDQ6VXNlcjQ3ODg1Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/478856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hsivonen", "html_url": "https://github.com/hsivonen", "followers_url": "https://api.github.com/users/hsivonen/followers", "following_url": "https://api.github.com/users/hsivonen/following{/other_user}", "gists_url": "https://api.github.com/users/hsivonen/gists{/gist_id}", "starred_url": "https://api.github.com/users/hsivonen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hsivonen/subscriptions", "organizations_url": "https://api.github.com/users/hsivonen/orgs", "repos_url": "https://api.github.com/users/hsivonen/repos", "events_url": "https://api.github.com/users/hsivonen/events{/privacy}", "received_events_url": "https://api.github.com/users/hsivonen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37547, "node_id": "MDU6TGFiZWwzNzU0Nw==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-linkage", "name": "A-linkage", "color": "f7e101", "default": false, "description": "Area: linking into static, shared libraries and binaries"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 31, "created_at": "2020-07-02T08:34:49Z", "updated_at": "2022-11-10T01:53:31Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Firefox currently builds all its Rust code into a static artifact called `gkrust` which is then statically linked, with cross-language LTO, with C++ artifacts to form the shippable `libxul.so/dylib/dll`.\r\n\r\nUpon examining the exported symbols of `libxul`, the FFI functions that are meant for internal glue between Rust and C++ show up.\r\n\r\nThis is a problem for two reasons:\r\n\r\n1. It's a binary size issue, because cross-language LTO is supposed to inline the FFI functions into their callers. However, having them exported means also keeping those copies around. Also, unused FFI functions can't be eliminated as dead code.\r\n2. It gives problematic third-party software more opportunities to hook into `libxul` in unsupported ways.\r\n\r\nSince there's a variety of third-party crates that go into `libxul`, it wouldn't be practical to reannotate each FFI function. Therefore, please add a way from the top level of the Rust compilation to turn off the shared library export metadata generation for `#[no_mangle]` items.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/73958/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/73958/timeline", "performed_via_github_app": null, "state_reason": null}