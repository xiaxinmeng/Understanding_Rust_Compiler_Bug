{"url": "https://api.github.com/repos/rust-lang/rust/issues/47447", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/47447/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/47447/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/47447/events", "html_url": "https://github.com/rust-lang/rust/issues/47447", "id": 288531409, "node_id": "MDU6SXNzdWUyODg1MzE0MDk=", "number": 47447, "title": "Implement method suggestions for associated functions", "user": {"login": "gnzlbg", "id": 904614, "node_id": "MDQ6VXNlcjkwNDYxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/904614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnzlbg", "html_url": "https://github.com/gnzlbg", "followers_url": "https://api.github.com/users/gnzlbg/followers", "following_url": "https://api.github.com/users/gnzlbg/following{/other_user}", "gists_url": "https://api.github.com/users/gnzlbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnzlbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnzlbg/subscriptions", "organizations_url": "https://api.github.com/users/gnzlbg/orgs", "repos_url": "https://api.github.com/users/gnzlbg/repos", "events_url": "https://api.github.com/users/gnzlbg/events{/privacy}", "received_events_url": "https://api.github.com/users/gnzlbg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 149689562, "node_id": "MDU6TGFiZWwxNDk2ODk1NjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-associated-items", "name": "A-associated-items", "color": "f7e101", "default": false, "description": "Area: Associated items such as associated types and consts."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1183099971, "node_id": "MDU6TGFiZWwxMTgzMDk5OTcx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-suggestion-diagnostics", "name": "A-suggestion-diagnostics", "color": "f7e101", "default": false, "description": "Area: suggestions generated by the compiler applied by cargo fix"}, {"id": 1596122130, "node_id": "MDU6TGFiZWwxNTk2MTIyMTMw", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-papercut", "name": "D-papercut", "color": "c9f7a3", "default": false, "description": "Diagnostic error that needs small tweaks"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-15T09:38:02Z", "updated_at": "2023-01-13T17:12:58Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This doesn't suggest `bar` but IMO should ([see it live](https://play.rust-lang.org/?gist=107b9a29435251c232c81653d97290c3&version=stable)):\r\n\r\n```rust\r\nstruct A { }\r\n\r\nimpl A {\r\n    fn foo() -> Self {\r\n      /*Self::*/bar()\r\n    }\r\n    \r\n    fn bar() -> Self { A { } }\r\n}\r\n\r\nfn main() {\r\n    let v = A::foo();\r\n}\r\n```\r\n\r\nproduces\r\n\r\n```shell\r\nerror[E0425]: cannot find function `bar` in this scope\r\n --> src/main.rs:5:17\r\n  |\r\n5 |       /*Self::*/bar()\r\n  |                 ^^^ not found in this scope\r\n\r\nerror: aborting due to previous error\r\nerror: Could not compile `playground`.\r\n```\r\n\r\nI'd like a `help/note` saying: \"Maybe you meant to call `Self::bar()?\" in this case, but if for example `bar` has a typo, I'd like to see more suggestions, like here:\r\n\r\n```rust\r\nimpl A {\r\n    fn foo() -> Self {\r\n      /*Self::*/bar()\r\n    }\r\n    \r\n    fn bar0() -> Self { A { } }\r\n    fn bar1() -> u32 { 0 }  // mismatching-types\r\n    fn bar2() -> Self { A { } }\r\n}\r\n```\r\n\r\nIt should suggest whether I meant `Self::bar0` or `Self::bar2` (`Self::bar1` produces a different type). If I remove `bar0` and `bar2`, I'd expect to see a suggestion for `Self::bar1` though.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/47447/reactions", "total_count": 3, "+1": 3, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/47447/timeline", "performed_via_github_app": null, "state_reason": null}