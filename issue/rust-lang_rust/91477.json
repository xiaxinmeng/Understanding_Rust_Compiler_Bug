{"url": "https://api.github.com/repos/rust-lang/rust/issues/91477", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/91477/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/91477/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/91477/events", "html_url": "https://github.com/rust-lang/rust/issues/91477", "id": 1070104726, "node_id": "I_kwDOAAsO6M4_yICW", "number": 91477, "title": "Compiler panicked when using `yield` keyword.", "user": {"login": "SamMatzko", "id": 95320171, "node_id": "U_kgDOBa54aw", "avatar_url": "https://avatars.githubusercontent.com/u/95320171?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SamMatzko", "html_url": "https://github.com/SamMatzko", "followers_url": "https://api.github.com/users/SamMatzko/followers", "following_url": "https://api.github.com/users/SamMatzko/following{/other_user}", "gists_url": "https://api.github.com/users/SamMatzko/gists{/gist_id}", "starred_url": "https://api.github.com/users/SamMatzko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SamMatzko/subscriptions", "organizations_url": "https://api.github.com/users/SamMatzko/orgs", "repos_url": "https://api.github.com/users/SamMatzko/repos", "events_url": "https://api.github.com/users/SamMatzko/events{/privacy}", "received_events_url": "https://api.github.com/users/SamMatzko/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 679846574, "node_id": "MDU6TGFiZWw2Nzk4NDY1NzQ=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-generators", "name": "A-generators", "color": "f7e101", "default": false, "description": "Area: Generators"}], "state": "closed", "locked": false, "assignee": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2021-12-03T00:37:02Z", "updated_at": "2021-12-04T05:59:14Z", "closed_at": "2021-12-04T05:59:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\n```Rust\r\nfn get_contents() -> impl Iterator {\r\n    // A recursive function, returns a list of items\r\n    yield \"hello\";\r\n}\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.55.0 (c8dfcfe04 2021-09-06)\r\nbinary: rustc\r\ncommit-hash: c8dfcfe046a7680554bf4eb612bad840e7631c4b\r\ncommit-date: 2021-09-06\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.55.0\r\nLLVM version: 12.0.1\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nerror[E0658]: yield syntax is experimental\r\n --> src/main.rs:3:5\r\n  |\r\n3 |     yield \"hello\";\r\n  |     ^^^^^^^^^^^^^\r\n  |\r\n  = note: see issue #43122 <https://github.com/rust-lang/rust/issues/43122> for more information\r\n\r\nerror[E0601]: `main` function not found in crate `problem`\r\n --> src/main.rs:1:1\r\n  |\r\n1 | / fn get_contents() -> impl Iterator {\r\n2 | |     // A recursive function, returns a list of items\r\n3 | |     yield \"hello\";\r\n4 | | }\r\n  | |_^ consider adding a `main` function to `src/main.rs`\r\n\r\nerror[E0627]: yield expression outside of generator literal\r\n --> src/main.rs:3:5\r\n  |\r\n3 |     yield \"hello\";\r\n  |     ^^^^^^^^^^^^^\r\n\r\nerror[E0277]: `()` is not an iterator\r\n --> src/main.rs:1:22\r\n  |\r\n1 | fn get_contents() -> impl Iterator {\r\n  |                      ^^^^^^^^^^^^^ `()` is not an iterator\r\n2 |     // A recursive function, returns a list of items\r\n3 |     yield \"hello\";\r\n  |                  - consider removing this semicolon\r\n  |\r\n  = help: the trait `Iterator` is not implemented for `()`\r\n\r\nthread 'rustc' panicked at 'assertion failed: body.yield_ty().is_some() == universal_regions.yield_ty.is_some()', compiler/rustc_mir/src/borrow_check/type_check/input_output.rs:112:9\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.55.0 (c8dfcfe04 2021-09-06) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [mir_borrowck] borrow-checking `get_contents`\r\n#1 [type_of] computing type of `get_contents::{opaque#0}`\r\nend of query stack\r\nSome errors have detailed explanations: E0277, E0601, E0627, E0658.\r\nFor more information about an error, try `rustc --explain E0277`.\r\nerror: could not compile `problem` due to 4 previous errors\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\n0: rust_begin_unwind\r\n             at /rustc/c8dfcfe046a7680554bf4eb612bad840e7631c4b/library/std/src/panicking.rs:515:5\r\n   1: core::panicking::panic_fmt\r\n             at /rustc/c8dfcfe046a7680554bf4eb612bad840e7631c4b/library/core/src/panicking.rs:92:14\r\n   2: core::panicking::panic\r\n             at /rustc/c8dfcfe046a7680554bf4eb612bad840e7631c4b/library/core/src/panicking.rs:50:5\r\n   3: rustc_mir::borrow_check::type_check::type_check\r\n   4: rustc_mir::borrow_check::nll::compute_regions\r\n   5: rustc_mir::borrow_check::do_mir_borrowck\r\n   6: rustc_infer::infer::InferCtxtBuilder::enter\r\n   7: rustc_mir::borrow_check::mir_borrowck\r\n   8: core::ops::function::FnOnce::call_once\r\n   9: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  10: rustc_data_structures::stack::ensure_sufficient_stack\r\n  11: rustc_query_system::query::plumbing::force_query_with_job\r\n  12: rustc_query_system::query::plumbing::get_query_impl\r\n  13: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::mir_borrowck\r\n  14: rustc_typeck::collect::type_of::type_of\r\n  15: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  16: rustc_data_structures::stack::ensure_sufficient_stack\r\n  17: rustc_query_system::query::plumbing::force_query_with_job\r\n  18: rustc_query_system::query::plumbing::get_query_impl\r\n  19: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::type_of\r\n  20: rustc_typeck::check::check::check_item_type\r\n  21: rustc_middle::hir::map::Map::visit_item_likes_in_module\r\n  22: rustc_typeck::check::check::check_mod_item_types\r\n  23: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  24: rustc_data_structures::stack::ensure_sufficient_stack\r\n  25: rustc_query_system::query::plumbing::force_query_with_job\r\n  26: rustc_query_system::query::plumbing::get_query_impl\r\n  27: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::check_mod_item_types\r\n  28: rustc_session::utils::<impl rustc_session::session::Session>::time\r\n  29: rustc_typeck::check_crate\r\n  30: rustc_interface::passes::analysis\r\n  31: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  32: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  33: rustc_query_system::dep_graph::graph::DepGraph<K>::with_eval_always_task\r\n  34: rustc_data_structures::stack::ensure_sufficient_stack\r\n  35: rustc_query_system::query::plumbing::force_query_with_job\r\n  36: rustc_query_system::query::plumbing::get_query_impl\r\n  37: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::analysis\r\n  38: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n  39: rustc_span::with_source_map\r\n  40: rustc_interface::interface::create_compiler_and_run\r\n  41: scoped_tls::ScopedKey<T>::set\r\n```\r\n</p>\r\n</details>\r\n\r\n\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"compiler-errors\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/91477/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/91477/timeline", "performed_via_github_app": null, "state_reason": "completed"}