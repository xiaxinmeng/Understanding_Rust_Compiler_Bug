{"url": "https://api.github.com/repos/rust-lang/rust/issues/80161", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/80161/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/80161/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/80161/events", "html_url": "https://github.com/rust-lang/rust/issues/80161", "id": 771029579, "node_id": "MDU6SXNzdWU3NzEwMjk1Nzk=", "number": 80161, "title": "Bug in borrow checker with 'while let'", "user": {"login": "dspencer12", "id": 15907814, "node_id": "MDQ6VXNlcjE1OTA3ODE0", "avatar_url": "https://avatars.githubusercontent.com/u/15907814?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dspencer12", "html_url": "https://github.com/dspencer12", "followers_url": "https://api.github.com/users/dspencer12/followers", "following_url": "https://api.github.com/users/dspencer12/following{/other_user}", "gists_url": "https://api.github.com/users/dspencer12/gists{/gist_id}", "starred_url": "https://api.github.com/users/dspencer12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dspencer12/subscriptions", "organizations_url": "https://api.github.com/users/dspencer12/orgs", "repos_url": "https://api.github.com/users/dspencer12/repos", "events_url": "https://api.github.com/users/dspencer12/events{/privacy}", "received_events_url": "https://api.github.com/users/dspencer12/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 60344715, "node_id": "MDU6TGFiZWw2MDM0NDcxNQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-medium", "name": "P-medium", "color": "eb6420", "default": false, "description": "Medium priority"}, {"id": 171502053, "node_id": "MDU6TGFiZWwxNzE1MDIwNTM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-borrow-checker", "name": "A-borrow-checker", "color": "f7e101", "default": false, "description": "Area: The borrow checker"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-12-18T16:52:23Z", "updated_at": "2022-06-06T23:55:46Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI tried to simplify a `loop` and `match` combination using a `while let` expression, but the result fails to compile while the behavior should be the same.\r\n\r\nI tried this code:\r\n\r\n```rust\r\npub fn remove_elements(\r\n    mut head: Option<Box<ListNode>>, val: i32\r\n) -> Option<Box<ListNode>> {        \r\n    let mut current = &mut head;\r\n    while let Some(node) = current {\r\n        if node.val == val {\r\n            *current = node.next.take();\r\n        } else {\r\n            current = &mut node.next;\r\n        }\r\n    }\r\n    head\r\n}\r\n```\r\n\r\nI expected to see this happen: it compiles.\r\n\r\nInstead, this happened: it does not compile, with the compilation errors:\r\n```\r\nerror[E0503]: cannot use `*current` because it was mutably borrowed\r\n  --> src/main.rs:21:15\r\n   |\r\n21 |     while let Some(node) = current {\r\n   |               ^^^^^----^\r\n   |               |    |\r\n   |               |    borrow of `current.0` occurs here\r\n   |               use of borrowed `current.0`\r\n   |               borrow later used here\r\n\r\nerror[E0499]: cannot borrow `current.0` as mutable more than once at a time\r\n  --> src/main.rs:21:20\r\n   |\r\n21 |     while let Some(node) = current {\r\n   |                    ^^^^ mutable borrow starts here in previous iteration of loop\r\n\r\nerror[E0506]: cannot assign to `*current` because it is borrowed\r\n  --> src/main.rs:23:13\r\n   |\r\n21 |     while let Some(node) = current {\r\n   |                    ---- borrow of `*current` occurs here\r\n22 |         if node.val == val {\r\n23 |             *current = node.next.take();\r\n   |             ^^^^^^^^\r\n   |             |\r\n   |             assignment to borrowed `*current` occurs here\r\n   |             borrow later used here\r\n\r\nerror: aborting due to 3 previous errors\r\n```\r\n\r\nThe original `loop` and `match` code, which does compile, is:\r\n```rust\r\npub fn remove_elements(\r\n    mut head: Option<Box<ListNode>>, val: i32\r\n) -> Option<Box<ListNode>> {\r\n    let mut current = &mut head;\r\n    loop {\r\n        match current {\r\n            None => break,\r\n            Some(node) if node.val == val => {\r\n                *current = node.next.take();\r\n            },\r\n            Some(node) => {\r\n                current = &mut node.next;\r\n            }\r\n        }\r\n    }\r\n    head\r\n}\r\n```\r\n\r\nFor completeness, `ListNode` is defined and implemented as:\r\n```rust\r\n#[derive(PartialEq, Eq, Clone, Debug)]                                          \r\npub struct ListNode {                                                           \r\n    pub val: i32,                                                               \r\n    pub next: Option<Box<ListNode>>                                             \r\n}                                                                               \r\n                                                                                \r\nimpl ListNode {                                                                 \r\n    #[inline]                                                                   \r\n    fn new(val: i32) -> Self {                                                  \r\n        ListNode {                                                              \r\n            next: None,                                                         \r\n            val                                                                 \r\n        }                                                                       \r\n    }                                                                           \r\n}\r\n```\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.50.0-nightly (0f6f2d681 2020-12-06)\r\nbinary: rustc\r\ncommit-hash: 0f6f2d681b39c5f95459cd09cb936b6ceb27cd82\r\ncommit-date: 2020-12-06\r\nhost: x86_64-apple-darwin\r\nrelease: 1.50.0-nightly\r\n```\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/80161/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/80161/timeline", "performed_via_github_app": null, "state_reason": null}