{"url": "https://api.github.com/repos/rust-lang/rust/issues/75062", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/75062/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/75062/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/75062/events", "html_url": "https://github.com/rust-lang/rust/issues/75062", "id": 671647174, "node_id": "MDU6SXNzdWU2NzE2NDcxNzQ=", "number": 75062, "title": "[Nightly ICE] Deep in proc macro: panicked at 'empty field list in the map'", "user": {"login": "jhwgh1968", "id": 24486610, "node_id": "MDQ6VXNlcjI0NDg2NjEw", "avatar_url": "https://avatars.githubusercontent.com/u/24486610?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhwgh1968", "html_url": "https://github.com/jhwgh1968", "followers_url": "https://api.github.com/users/jhwgh1968/followers", "following_url": "https://api.github.com/users/jhwgh1968/following{/other_user}", "gists_url": "https://api.github.com/users/jhwgh1968/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhwgh1968/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhwgh1968/subscriptions", "organizations_url": "https://api.github.com/users/jhwgh1968/orgs", "repos_url": "https://api.github.com/users/jhwgh1968/repos", "events_url": "https://api.github.com/users/jhwgh1968/events{/privacy}", "received_events_url": "https://api.github.com/users/jhwgh1968/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 60344715, "node_id": "MDU6TGFiZWw2MDM0NDcxNQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-medium", "name": "P-medium", "color": "eb6420", "default": false, "description": "Medium priority"}, {"id": 147085028, "node_id": "MDU6TGFiZWwxNDcwODUwMjg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-nightly", "name": "regression-from-stable-to-nightly", "color": "e4008a", "default": false, "description": "Performance or correctness regression from stable to nightly."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1791937891, "node_id": "MDU6TGFiZWwxNzkxOTM3ODkx", "url": "https://api.github.com/repos/rust-lang/rust/labels/ICEBreaker-Cleanup-Crew", "name": "ICEBreaker-Cleanup-Crew", "color": "74cc28", "default": false, "description": "Helping to \"clean up\" bugs with minimal examples and bisections"}, {"id": 2079070889, "node_id": "MDU6TGFiZWwyMDc5MDcwODg5", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-proc-macros", "name": "A-proc-macros", "color": "f7e101", "default": false, "description": "Area: Procedural macros"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-08-02T16:31:27Z", "updated_at": "2020-08-07T03:04:36Z", "closed_at": "2020-08-07T03:04:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\nIt is very finicky to reproduce. [This GHE branch](https://github.com/jhwgh1968/rhai/tree/nightly_ice) is as minimal as I could get without significantly changing the structure of the macro or having other errors cover it up. Apologies for the mess!\r\n\r\n**Updated 2020-08-04**: I got it down to a total of only 130 lines of code. Please review the improved `cargo expand` output below.\r\n\r\nInstructions:\r\n1. Clone the project: `git clone -b nightly_ice https://github.com/jhwgh1968/rhai.git`\r\n2. `cd rhai/codegen`\r\n3. `RUST_BACKTRACE=1 cargo check --tests`\r\n\r\n### Meta\r\n\r\nThe ICE was triggered by change in `44600aa2`, where I simply changed the scoping on a nested inner `struct` generated by a macro from public to private.\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.47.0-nightly (6c8927b0c 2020-07-26)\r\nbinary: rustc\r\ncommit-hash: 6c8927b0cf80ceee19386026cf9d7fd4fd9d486f\r\ncommit-date: 2020-07-26\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.47.0-nightly\r\nLLVM version: 10.0\r\n```\r\n\r\n### Error output\r\n\r\nOn stable, errors regarding scoping are printed (this error is repeated many times):\r\n\r\n```\r\nerror[E0603]: tuple struct `Token` is private\r\n  --> tests/test_functions.rs:20:5\r\n   |\r\n20 | /     rhai::register_exported_fn!(\r\n21 | |         m,\r\n22 | |         \"euclidean_distance\".to_string(),\r\n23 | |         raw_fn::distance_function\r\n24 | |     );\r\n   | |______^ private tuple struct\r\n   |\r\nnote: the tuple struct `Token` is defined here\r\n  --> tests/test_functions.rs:9:5\r\n   |\r\n9  |     #[export_fn]\r\n   |     ^^^^^^^^^^^^\r\n   = note: this error originates in an attribute macro (in Nightly builds, run with -Z macro-backtrace for more info)\r\n```\r\n\r\nOn nightly, a backtrace occurs.\r\n\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nthread 'rustc' panicked at 'empty field list in the map', src/librustc_resolve/diagnostics.rs:1068:50\r\nstack backtrace:\r\n   0:     0x7fc302be4215 - backtrace::backtrace::libunwind::trace::h75aedf5f78e5147f\r\n                               at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/libunwind.rs:86\r\n   1:     0x7fc302be4215 - backtrace::backtrace::trace_unsynchronized::h18fb73c9ac9ae753\r\n                               at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/mod.rs:66\r\n   2:     0x7fc302be4215 - std::sys_common::backtrace::_print_fmt::h65f97470ff13ec84\r\n                               at src/libstd/sys_common/backtrace.rs:78\r\n   3:     0x7fc302be4215 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hee061c54ddc9f024\r\n                               at src/libstd/sys_common/backtrace.rs:59\r\n   4:     0x7fc302c2041c - core::fmt::write::hfbd2baad61ed21a8\r\n                               at src/libcore/fmt/mod.rs:1117\r\n   5:     0x7fc302bd5f52 - std::io::Write::write_fmt::h72f9bd227f40dc62\r\n                               at src/libstd/io/mod.rs:1508\r\n   6:     0x7fc302be90b0 - std::sys_common::backtrace::_print::h2d2cd8fe02feb5fa\r\n                               at src/libstd/sys_common/backtrace.rs:62\r\n   7:     0x7fc302be90b0 - std::sys_common::backtrace::print::h801b12991252ba7c\r\n                               at src/libstd/sys_common/backtrace.rs:49\r\n   8:     0x7fc302be90b0 - std::panicking::default_hook::{{closure}}::h25fc1fbf3b63b5c8\r\n                               at src/libstd/panicking.rs:198\r\n   9:     0x7fc302be8dfc - std::panicking::default_hook::h62c897957a5e0f26\r\n                               at src/libstd/panicking.rs:217\r\n  10:     0x7fc30336f719 - rustc_driver::report_ice::h54e3b417084b44b0\r\n  11:     0x7fc2f87eb936 - <alloc::boxed::Box<F> as core::ops::function::Fn<A>>::call::h9c411e66d4b5afe3\r\n                               at /rustc/6c8927b0cf80ceee19386026cf9d7fd4fd9d486f/src/liballoc/boxed.rs:1088\r\n  12:     0x7fc2f87b8ec5 - proc_macro::bridge::client::<impl proc_macro::bridge::Bridge>::enter::{{closure}}::{{closure}}::h967b1f123fdc59e1\r\n                               at /rustc/6c8927b0cf80ceee19386026cf9d7fd4fd9d486f/src/libproc_macro/bridge/client.rs:318\r\n  13:     0x7fc302be9828 - std::panicking::rust_panic_with_hook::hb8a276f163c59810\r\n                               at src/libstd/panicking.rs:530\r\n  14:     0x7fc302be93fb - rust_begin_unwind\r\n                               at src/libstd/panicking.rs:437\r\n  15:     0x7fc302c1cfc1 - core::panicking::panic_fmt::h9cc57011b345cfad\r\n                               at src/libcore/panicking.rs:85\r\n  16:     0x7fc302c1cba3 - core::option::expect_failed::hf0849e257b6323a4\r\n                               at src/libcore/option.rs:1265\r\n  17:     0x7fc3041229b9 - rustc_resolve::Resolver::resolve_crate::h9141d40acb3e873e\r\n  18:     0x7fc30350bc0d - rustc_interface::passes::configure_and_expand_inner::h99f6e5687869f977\r\n  19:     0x7fc303576b99 - rustc_interface::passes::configure_and_expand::{{closure}}::ha0a6222929510b34\r\n  20:     0x7fc303561450 - rustc_data_structures::box_region::PinnedGenerator<I,A,R>::new::h6510d01dfe55aa38\r\n  21:     0x7fc30350a881 - rustc_interface::passes::configure_and_expand::h266ae77065114d38\r\n  22:     0x7fc303523514 - rustc_interface::queries::Queries::expansion::h02073762737d1d86\r\n  23:     0x7fc30332a303 - rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter::h3b5436b320054acc\r\n  24:     0x7fc3033c9277 - rustc_span::with_source_map::hd3215c6d07150bbc\r\n  25:     0x7fc30332bfb6 - rustc_interface::interface::create_compiler_and_run::hc502b394ead637d1\r\n  26:     0x7fc30335532d - scoped_tls::ScopedKey<T>::set::hb09c39dbfa5a4396\r\n  27:     0x7fc30337b4a2 - std::sys_common::backtrace::__rust_begin_short_backtrace::h4fa4ac8c571754e6\r\n  28:     0x7fc30333826e - core::ops::function::FnOnce::call_once{{vtable.shim}}::h23cc72206c0cf83b\r\n  29:     0x7fc302bf7d3a - <alloc::boxed::Box<F> as core::ops::function::FnOnce<A>>::call_once::h3e41d894970cea2f\r\n                               at /rustc/6c8927b0cf80ceee19386026cf9d7fd4fd9d486f/src/liballoc/boxed.rs:1074\r\n  30:     0x7fc302bf7d3a - <alloc::boxed::Box<F> as core::ops::function::FnOnce<A>>::call_once::h9a318bb00b7f8871\r\n                               at /rustc/6c8927b0cf80ceee19386026cf9d7fd4fd9d486f/src/liballoc/boxed.rs:1074\r\n  31:     0x7fc302bf7d3a - std::sys::unix::thread::Thread::new::thread_start::hf522342530b04cb6\r\n                               at src/libstd/sys/unix/thread.rs:87\r\n  32:     0x7fc302af9422 - start_thread\r\n  33:     0x7fc302a0fbf3 - __GI___clone\r\n  34:                0x0 - <unknown>\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.47.0-nightly (6c8927b0c 2020-07-26) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\nend of query stack\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n<details><summary><strong>cargo expand with pub struct (updated 2020-08-04)</strong></summary>\r\n<p>\r\n\r\n```rust\r\n#![feature(prelude_import)]\r\n#[prelude_import]\r\nuse std::prelude::v1::*;\r\n#[macro_use]\r\nextern crate std;\r\nuse rhai::module_resolvers::*;\r\nuse rhai::plugin::*;\r\nuse rhai::Module;\r\npub mod raw_fn {\r\n    use rhai::plugin::*;\r\n    use rhai::FLOAT;\r\n    pub fn distance_function(x1: FLOAT, y1: FLOAT, x2: FLOAT, y2: FLOAT) -> FLOAT {\r\n        ((y2 - y1).abs().powf(2.0) + (x2 - x1).abs().powf(2.0)).sqrt()\r\n    }\r\n    #[allow(unused)]\r\n    pub mod rhai_fn__distance_function {\r\n        use super::*;\r\n        pub struct Token();\r\n        impl PluginFunction for Token {\r\n            fn call(\r\n                &self,\r\n                args: &mut [&mut Dynamic],\r\n                pos: Position,\r\n            ) -> Result<Dynamic, Box<EvalAltResult>> {\r\n                Ok(Dynamic::from(distance_function()))\r\n            }\r\n        }\r\n        pub fn Token__callable() -> CallableFunction {\r\n            CallableFunction::from_plugin(Token())\r\n        }\r\n    }\r\n}\r\nextern crate test;\r\n#[cfg(test)]\r\n#[rustc_test_marker]\r\npub const raw_fn_test: test::TestDescAndFn = test::TestDescAndFn {\r\n    desc: test::TestDesc {\r\n        name: test::StaticTestName(\"raw_fn_test\"),\r\n        ignore: false,\r\n        allow_fail: false,\r\n        should_panic: test::ShouldPanic::No,\r\n        test_type: test::TestType::IntegrationTest,\r\n    },\r\n    testfn: test::StaticTestFn(|| test::assert_test_result(raw_fn_test())),\r\n};\r\nfn raw_fn_test() {\r\n    let mut m = Module::new();\r\n    m.set_fn(\r\n        \"euclidean_distance\".to_string(),\r\n        rhai::FnAccess::Public,\r\n        raw_fn::rhai_fn__distance_function::Token()\r\n            .input_types()\r\n            .as_ref(),\r\n    );\r\n}\r\n#[main]\r\npub fn main() -> () {\r\n    extern crate test;\r\n    test::test_main_static(&[&raw_fn_test])\r\n}\r\n```\r\n</p>\r\n</details>", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/75062/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/75062/timeline", "performed_via_github_app": null, "state_reason": "completed"}