{"url": "https://api.github.com/repos/rust-lang/rust/issues/41742", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/41742/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/41742/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/41742/events", "html_url": "https://github.com/rust-lang/rust/issues/41742", "id": 226223051, "node_id": "MDU6SXNzdWUyMjYyMjMwNTE=", "number": 41742, "title": "ICE (re-trying op failed) when trying to use IndexMut with wrong index type", "user": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-05-04T09:26:38Z", "updated_at": "2017-05-09T05:58:27Z", "closed_at": "2017-05-09T05:58:27Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "(Found while trying to reduce #41726, but I guess it is a different bug)\r\n\r\n```rust\r\nuse std::ops::{Index, IndexMut};\r\n\r\nstruct S;\r\nstruct H;\r\n\r\nimpl S {\r\n    fn f(&mut self) {}\r\n}\r\n\r\nimpl Index<u32> for H {\r\n    type Output = S;\r\n    fn index(&self, index: u32) -> &S {\r\n        unimplemented!()\r\n    }\r\n}\r\n\r\nimpl IndexMut<u32> for H {\r\n    fn index_mut(&mut self, index: u32) -> &mut S {\r\n        unimplemented!()\r\n    }\r\n}\r\n\r\nfn main() {\r\n    H[\"?\"].f();\r\n}\r\n```\r\n\r\nError in nightly:\r\n\r\n```rust\r\n$ RUST_BACKTRACE=full rustc 1.rs\r\nerror[E0308]: mismatched types\r\n  --> 1.rs:24:7\r\n   |\r\n24 |     H[\"?\"].f();\r\n   |       ^^^ expected u32, found reference\r\n   |\r\n   = note: expected type `u32`\r\n              found type `&'static str`\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: run with `RUST_BACKTRACE=1` for a backtrace\r\n\r\nthread 'rustc' panicked at 're-trying op failed', src/libcore/option.rs:794\r\nstack backtrace:\r\n<snip>\r\n   8:        0x10b01e97d - core::option::expect_failed::hf6ddaca0707dee4e\r\n   9:        0x105eb9076 - rustc_typeck::check::method::confirm::ConfirmContext::convert_lvalue_op_to_mutable::h0a19643fe67bd473\r\n  10:        0x105eb8024 - rustc_typeck::check::method::confirm::<impl rustc_typeck::check::FnCtxt<'a, 'gcx, 'tcx>>::confirm_method::h9b8161ac9ec72016\r\n  11:        0x105ecc2c7 - rustc_typeck::check::method::<impl rustc_typeck::check::FnCtxt<'a, 'gcx, 'tcx>>::lookup_method::h56ef9ae2ed618970\r\n  12:        0x105f0c021 - rustc_typeck::check::FnCtxt::check_expr_kind::ha9d720cdd9d40244\r\n  13:        0x105f0b0f1 - rustc_typeck::check::FnCtxt::check_expr_with_expectation_and_lvalue_pref::h4f8d554dc5adc888\r\n  14:        0x105f16456 - rustc_typeck::check::FnCtxt::check_stmt::h1e4e8f5a38945d3e\r\n  15:        0x105f16d9e - rustc_typeck::check::FnCtxt::check_block_with_expected::{{closure}}::h6f559beafce939e1\r\n  16:        0x105f16801 - rustc_typeck::check::FnCtxt::check_block_with_expected::h84f076beaa14901c\r\n  17:        0x105f0bd6a - rustc_typeck::check::FnCtxt::check_expr_kind::ha9d720cdd9d40244\r\n  18:        0x105f0b0f1 - rustc_typeck::check::FnCtxt::check_expr_with_expectation_and_lvalue_pref::h4f8d554dc5adc888\r\n  19:        0x105f0771d - rustc_typeck::check::FnCtxt::check_return_expr::h66476709e0aa025f\r\n  20:        0x105ef9187 - rustc_typeck::check::check_fn::hb2223142c4611e49\r\n  21:        0x105ef7a88 - rustc_typeck::check::typeck_tables_of::h785f93dd2c741a2a\r\n  22:        0x106f0dc45 - rustc::ty::maps::<impl rustc::ty::maps::queries::typeck_tables_of<'tcx>>::try_get::hb0a5c702c688f9b2\r\n  23:        0x106f252da - rustc::ty::maps::TyCtxtAt::typeck_tables_of::h7ee387f800510609\r\n  24:        0x106f2246e - rustc::ty::maps::<impl rustc::ty::context::TyCtxt<'a, 'tcx, 'lcx>>::typeck_tables_of::h5646cf71d082673b\r\n  25:        0x105ef688f - rustc_typeck::check::typeck_item_bodies::h1eba66163e21279e\r\n  26:        0x106f0cdc9 - rustc::ty::maps::<impl rustc::ty::maps::queries::typeck_item_bodies<'tcx>>::try_get::h5bf6b361e42fe78d\r\n  27:        0x106f25166 - rustc::ty::maps::TyCtxtAt::typeck_item_bodies::hc87e6dcd01e3f40e\r\n  28:        0x106f22432 - rustc::ty::maps::<impl rustc::ty::context::TyCtxt<'a, 'tcx, 'lcx>>::typeck_item_bodies::h7c99318169c1ed83\r\n  29:        0x105f4f56e - rustc_typeck::check_crate::h137c39114e0bfc61\r\n<snip>\r\n```\r\n\r\n```sh\r\n$ rustc -vV\r\nrustc 1.19.0-nightly (2d4ed8e0c 2017-05-03)\r\nbinary: rustc\r\ncommit-hash: 2d4ed8e0cbe2c5f3763273a5d8f6b15119473ba7\r\ncommit-date: 2017-05-03\r\nhost: x86_64-apple-darwin\r\nrelease: 1.19.0-nightly\r\nLLVM version: 4.0\r\n```\r\n\r\n------\r\n\r\nAdditionally, on stable 1.17.0 and beta 1.18.0-beta.1 this program prints the error E0308 twice,\r\n\r\n```rust\r\nerror[E0308]: mismatched types\r\n  --> 1.rs:24:7\r\n   |\r\n24 |     H[\"?\"].f();\r\n   |       ^^^ expected u32, found reference\r\n   |\r\n   = note: expected type `u32`\r\n              found type `&'static str`\r\n\r\nerror[E0308]: mismatched types\r\n  --> 1.rs:24:7\r\n   |\r\n24 |     H[\"?\"].f();\r\n   |       ^^^ expected u32, found reference\r\n   |\r\n   = note: expected type `u32`\r\n              found type `&'static str`\r\n\r\nerror: aborting due to 2 previous errors\r\n```", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/41742/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/41742/timeline", "performed_via_github_app": null, "state_reason": "completed"}