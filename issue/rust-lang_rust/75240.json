{"url": "https://api.github.com/repos/rust-lang/rust/issues/75240", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/75240/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/75240/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/75240/events", "html_url": "https://github.com/rust-lang/rust/issues/75240", "id": 674724835, "node_id": "MDU6SXNzdWU2NzQ3MjQ4MzU=", "number": 75240, "title": "Directly passing Rc::clone(...) to a function expecting Rc<dyn Trait> produces unexpected type error", "user": {"login": "periodicaidan", "id": 43938574, "node_id": "MDQ6VXNlcjQzOTM4NTc0", "avatar_url": "https://avatars.githubusercontent.com/u/43938574?v=4", "gravatar_id": "", "url": "https://api.github.com/users/periodicaidan", "html_url": "https://github.com/periodicaidan", "followers_url": "https://api.github.com/users/periodicaidan/followers", "following_url": "https://api.github.com/users/periodicaidan/following{/other_user}", "gists_url": "https://api.github.com/users/periodicaidan/gists{/gist_id}", "starred_url": "https://api.github.com/users/periodicaidan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/periodicaidan/subscriptions", "organizations_url": "https://api.github.com/users/periodicaidan/orgs", "repos_url": "https://api.github.com/users/periodicaidan/repos", "events_url": "https://api.github.com/users/periodicaidan/events{/privacy}", "received_events_url": "https://api.github.com/users/periodicaidan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-07T03:13:25Z", "updated_at": "2020-08-08T20:48:04Z", "closed_at": "2020-08-08T20:10:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Summary\r\n\r\nGiven some struct `S` that implements a trait `T`, attempting to pass `Rc::clone(&s)` (where `s` has type `Rc<S>`) as an argument that should have type `Rc<dyn T>` produces the compiler error, \"expected trait object `dyn T`; found struct `S`\". However, passing simply `s`, or storing the cloned `Rc` in a variable and passing that, produces no such error.\r\n\r\n### Example\r\n\r\nBelow is a trivial example that illustrates how to achieve this particular compiler error. ([Playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=87d836d6563b9b86501a429ae312aec9))\r\n\r\n```rust\r\nuse std::rc::Rc;\r\n\r\n// Readable trait\r\ntrait Readable {\r\n    fn read(&self) -> String;\r\n}\r\n\r\n// Poem implements the Readable trait\r\nstruct Poem {\r\n    pub stanza_number: usize,\r\n    pub stanzas: Vec<String>\r\n}\r\n\r\nimpl Poem {\r\n    pub fn new(stanzas: Vec<&str>) -> Self {\r\n        Self {\r\n            stanza_number: 0,\r\n            stanzas: stanzas.iter().map(|s| s.to_string()).collect()\r\n        }\r\n    }\r\n}\r\n\r\nimpl Readable for Poem {\r\n    fn read(&self) -> String {\r\n        self.stanzas[self.stanza_number].clone()\r\n    }\r\n}\r\n\r\n// A Library holds a collection of structs that implement Readable\r\nstruct Library {\r\n    pub collection: Vec<Rc<dyn Readable>>\r\n}\r\n\r\nfn main() {\r\n    let erlkoenig = Rc::new(Poem::new(vec![\r\n\"Who rides, so late, through night and wind?\\n\r\nIt is the father with his child.\\n\r\nHe has the boy well in his arm\\n\r\nHe holds him safely, he keeps him warm.\",\r\n\r\n// ...\r\n ]));\r\n    \r\n    let goethes_works = Library {\r\n        collection: vec![\r\n            Rc::clone(&erlkoenig)\r\n        ]\r\n    };\r\n}\r\n```\r\n\r\nI would expect this code to compile normally because `erlkoenig` is an instance of `Poem`, which implements `Readable`. However it fails to compile with the following error:\r\n\r\n```\r\nerror[E0308]: mismatched types\r\n  --> src/main.rs:77:23\r\n   |\r\n77 |             Rc::clone(&erlkoenig)\r\n   |                       ^^^^^^^^^^ expected trait object `dyn Readable`, found struct `Poem`\r\n   |\r\n   = note: expected reference `&std::rc::Rc<dyn Readable>`\r\n              found reference `&std::rc::Rc<Poem>`\r\n```\r\n\r\nOn the other hand, the code does compile if you remove the `Rc::clone(...)`:\r\n\r\n```rust\r\nfn main() {\r\n    let erlkoenig = Rc::new(Poem::new(vec![/* ... */]));\r\n    \r\n    let goethes_works = Library {\r\n        collection: vec![\r\n            erlkoenig\r\n        ]\r\n    };\r\n}\r\n```\r\n\r\nOr if the clone is stored in a variable:\r\n\r\n```rust\r\nfn main() {\r\n    let erlkoenig = Rc::new(Poem::new(vec![/* ... */]));\r\n\r\n    let erl_clone_ig = Rc::clone(&erlkoenig);\r\n    \r\n    let goethes_works = Library {\r\n        collection: vec![\r\n            erl_clone_ig\r\n        ]\r\n    };\r\n}\r\n```\r\n\r\n### Meta\r\n\r\nI first encountered this issue trying to compile on nightly (1.47.0-nightly: 6c8927b0c 2020-07-26).\r\n\r\nI have tried this code in the Playground on stable (1.45.1), beta (1.46.0-beta.2: 2020-07-23 6f959902b3103c49ca98), and nightly (1.47.0-nightly: 2020-08-02 81e754c359c471f91263). It fails to compile in any of them and emits the same error.\r\n", "closed_by": {"login": "periodicaidan", "id": 43938574, "node_id": "MDQ6VXNlcjQzOTM4NTc0", "avatar_url": "https://avatars.githubusercontent.com/u/43938574?v=4", "gravatar_id": "", "url": "https://api.github.com/users/periodicaidan", "html_url": "https://github.com/periodicaidan", "followers_url": "https://api.github.com/users/periodicaidan/followers", "following_url": "https://api.github.com/users/periodicaidan/following{/other_user}", "gists_url": "https://api.github.com/users/periodicaidan/gists{/gist_id}", "starred_url": "https://api.github.com/users/periodicaidan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/periodicaidan/subscriptions", "organizations_url": "https://api.github.com/users/periodicaidan/orgs", "repos_url": "https://api.github.com/users/periodicaidan/repos", "events_url": "https://api.github.com/users/periodicaidan/events{/privacy}", "received_events_url": "https://api.github.com/users/periodicaidan/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/75240/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/75240/timeline", "performed_via_github_app": null, "state_reason": "completed"}