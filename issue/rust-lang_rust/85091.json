{"url": "https://api.github.com/repos/rust-lang/rust/issues/85091", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/85091/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/85091/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/85091/events", "html_url": "https://github.com/rust-lang/rust/issues/85091", "id": 881325290, "node_id": "MDU6SXNzdWU4ODEzMjUyOTA=", "number": 85091, "title": "error: internal compiler error: unexpected panic", "user": {"login": "Inspect-Element", "id": 31999926, "node_id": "MDQ6VXNlcjMxOTk5OTI2", "avatar_url": "https://avatars.githubusercontent.com/u/31999926?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Inspect-Element", "html_url": "https://github.com/Inspect-Element", "followers_url": "https://api.github.com/users/Inspect-Element/followers", "following_url": "https://api.github.com/users/Inspect-Element/following{/other_user}", "gists_url": "https://api.github.com/users/Inspect-Element/gists{/gist_id}", "starred_url": "https://api.github.com/users/Inspect-Element/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Inspect-Element/subscriptions", "organizations_url": "https://api.github.com/users/Inspect-Element/orgs", "repos_url": "https://api.github.com/users/Inspect-Element/repos", "events_url": "https://api.github.com/users/Inspect-Element/events{/privacy}", "received_events_url": "https://api.github.com/users/Inspect-Element/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-05-08T21:17:09Z", "updated_at": "2021-05-10T14:16:21Z", "closed_at": "2021-05-10T14:16:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\n```Rust\r\n//main.rs\r\nuse csv;\r\n\r\nfn main() {\r\n    println!(\"Hello, rust!\");\r\n\r\n    let mut rdr = csv ::Reader::from_reader(std::io::stdin());\r\n\r\n    for result in rdr.records(){\r\n        let record = result.expect(\"a CSV record\");\r\n\r\n        println!(\"{:?}\", record);\r\n    }\r\n}\r\n\r\n//Cargo.toml\r\n\r\n[package]\r\nname = \"hello_rust\"\r\nversion = \"0.1.0\"\r\nauthors = [Author-Name]\r\nedition = \"2018\"\r\n\r\n# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html\r\n\r\n[dependencies]\r\ncsv = \"1.1.6\"\r\npolars = \"0.13.3\"\r\ntime = \"0.2.26\"\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\n1.52.0\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nthread 'rustc' panicked at 'found unstable fingerprints for predicates_of(core[7cda]::ops::function::FnOnce): GenericPredicates { parent: None, predicates: [(Binder(TraitPredicate(<Args as std::marker::Sized>)), /Users/<username>/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/ops/function.rs:219:18: 219:22 (#0)), (Binder(TraitPredicate(<Self as std::ops::FnOnce<Args>>)), /Users/<username>/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/ops/function.rs:219:1: 219:23 (#0))] }', /rustc/88f19c6dab716c6281af7602e30f413e809c5974/compiler/rustc_query_system/src/query/plumbing.rs:593:5\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.52.0 (88f19c6da 2021-05-03) running on x86_64-apple-darwin\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [predicates_of] computing predicates of `std::ops::FnOnce`\r\n#1 [param_env] computing normalized predicates of `std::ops::FnOnce::call_once`\r\nend of query stack\r\nerror: could not compile `hello_rust`\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nstack backtrace:\r\n   0: _rust_begin_unwind\r\n   1: std::panicking::begin_panic_fmt\r\n   2: rustc_query_system::query::plumbing::incremental_verify_ich\r\n   3: rustc_query_system::query::plumbing::load_from_disk_and_cache_in_memory\r\n   4: rustc_data_structures::stack::ensure_sufficient_stack\r\n   5: rustc_query_system::query::plumbing::get_query_impl\r\n   6: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::predicates_of\r\n   7: rustc_middle::ty::generics::GenericPredicates::instantiate_identity_into\r\n   8: rustc_middle::ty::generics::GenericPredicates::instantiate_identity\r\n   9: rustc_ty_utils::ty::param_env\r\n  10: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  11: rustc_query_system::query::plumbing::load_from_disk_and_cache_in_memory\r\n  12: rustc_data_structures::stack::ensure_sufficient_stack\r\n  13: rustc_query_system::query::plumbing::get_query_impl\r\n  14: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::param_env\r\n  15: rustc_mir::transform::add_moves_for_packed_drops::add_moves_for_packed_drops\r\n  16: rustc_mir::transform::run_passes\r\n  17: rustc_mir::shim::make_shim\r\n  18: rustc_query_impl::<impl rustc_query_system::query::config::QueryAccessors<rustc_query_impl::plumbing::QueryCtxt> for rustc_query_impl::queries::mir_shims>::compute\r\n  19: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  20: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  21: rustc_data_structures::stack::ensure_sufficient_stack\r\n  22: rustc_query_system::query::plumbing::force_query_with_job\r\n  23: rustc_query_system::query::plumbing::get_query_impl\r\n  24: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::mir_shims\r\n  25: rustc_middle::ty::<impl rustc_middle::ty::context::TyCtxt>::instance_mir\r\n  26: rustc_mir::monomorphize::collector::collect_neighbours\r\n  27: rustc_mir::monomorphize::collector::collect_items_rec\r\n  28: rustc_mir::monomorphize::collector::collect_items_rec\r\n  29: rustc_mir::monomorphize::collector::collect_items_rec\r\n  30: rustc_mir::monomorphize::collector::collect_items_rec\r\n  31: rustc_mir::monomorphize::collector::collect_items_rec\r\n  32: rustc_mir::monomorphize::collector::collect_items_rec\r\n  33: rustc_mir::monomorphize::collector::collect_items_rec\r\n  34: rustc_mir::monomorphize::collector::collect_items_rec\r\n  35: rustc_mir::monomorphize::collector::collect_items_rec\r\n  36: rustc_mir::monomorphize::collector::collect_crate_mono_items\r\n  37: rustc_mir::monomorphize::partitioning::collect_and_partition_mono_items\r\n  38: rustc_query_impl::<impl rustc_query_system::query::config::QueryAccessors<rustc_query_impl::plumbing::QueryCtxt> for rustc_query_impl::queries::collect_and_partition_mono_items>::compute\r\n  39: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  40: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  41: rustc_data_structures::stack::ensure_sufficient_stack\r\n  42: rustc_query_system::query::plumbing::force_query_with_job\r\n  43: rustc_query_system::query::plumbing::get_query_impl\r\n  44: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::collect_and_partition_mono_items\r\n  45: <rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::CodegenBackend>::codegen_crate\r\n  46: rustc_interface::passes::QueryContext::enter\r\n  47: rustc_interface::queries::Queries::ongoing_codegen\r\n  48: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n  49: rustc_span::with_source_map\r\n  50: rustc_interface::interface::create_compiler_and_run\r\n  51: scoped_tls::ScopedKey<T>::set\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/85091/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/85091/timeline", "performed_via_github_app": null, "state_reason": "completed"}