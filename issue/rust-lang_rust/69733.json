{"url": "https://api.github.com/repos/rust-lang/rust/issues/69733", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/69733/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/69733/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/69733/events", "html_url": "https://github.com/rust-lang/rust/issues/69733", "id": 576273583, "node_id": "MDU6SXNzdWU1NzYyNzM1ODM=", "number": 69733, "title": "Import suggestion at incorrect line when first line is a struct attribute", "user": {"login": "Nashenas88", "id": 1673130, "node_id": "MDQ6VXNlcjE2NzMxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1673130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nashenas88", "html_url": "https://github.com/Nashenas88", "followers_url": "https://api.github.com/users/Nashenas88/followers", "following_url": "https://api.github.com/users/Nashenas88/following{/other_user}", "gists_url": "https://api.github.com/users/Nashenas88/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nashenas88/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nashenas88/subscriptions", "organizations_url": "https://api.github.com/users/Nashenas88/orgs", "repos_url": "https://api.github.com/users/Nashenas88/repos", "events_url": "https://api.github.com/users/Nashenas88/events{/privacy}", "received_events_url": "https://api.github.com/users/Nashenas88/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1183099971, "node_id": "MDU6TGFiZWwxMTgzMDk5OTcx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-suggestion-diagnostics", "name": "A-suggestion-diagnostics", "color": "f7e101", "default": false, "description": "Area: suggestions generated by the compiler applied by cargo fix"}, {"id": 1596299768, "node_id": "MDU6TGFiZWwxNTk2Mjk5NzY4", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-invalid-suggestion", "name": "D-invalid-suggestion", "color": "c9f7a3", "default": false, "description": "A structured suggestion resulting in incorrect code"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-05T13:59:46Z", "updated_at": "2020-05-15T00:50:38Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI tried this code:\r\n\r\n(From https://github.com/rust-analyzer/rust-analyzer/issues/3237#issuecomment-591366102)\r\n```rust\r\n#[derive(Copy, Clone)]\r\npub struct Symbol(&'static str);\r\n\r\npub const CRATE: Symbol = Symbol(\"crate\");\r\npub const PROVIDES: Symbol = Symbol(\"provides\");\r\npub const WITH: Symbol = Symbol(\"with\");\r\n\r\nimpl PartialEq<Symbol> for Ident {}\r\n```\r\n\r\nin foo.rs,\r\n\r\n```rust\r\nextern crate proc_macro;\r\n\r\nmod foo;\r\n```\r\n\r\nin lib.rs\r\n\r\nand\r\n\r\n```toml\r\n[package]\r\nname = \"proc-macro-test\"\r\nversion = \"0.1.0\"\r\n\r\n[lib]\r\nproc-macro = true\r\n```\r\n\r\nin Cargo.toml\r\n\r\nAnd ran `cargo check --message-format=json`\r\n\r\nI expected to see this happen:\r\n\r\nA suggestion to place the imports on line 1, e.g. `\"line_start\": 1, \"line_end\": 1, \"suggested_replacement\": \"use proc_macro::Ident;\"`\r\n\r\nInstead, this happened:\r\n```json\r\n{\"reason\":\"compiler-message\",\"package_id\":\"proc-macro-test 0.1.0 (path+file:///home/pfaria/projects/rustc-suggestion-bug)\",\"target\":{\"kind\":[\"proc-macro\"],\"crate_types\":[\"proc-macro\"],\"name\":\"proc-macro-test\",\"src_path\":\"/home/pfaria/projects/rustc-suggestion-bug/src/lib.rs\",\"edition\":\"2015\",\"doctest\":true},\"message\":{\"rendered\":\"error[E0412]: cannot find type `Ident` in this scope\\n --> src/foo.rs:8:28\\n  |\\n8 | impl PartialEq<Symbol> for Ident {}\\n  |                            ^^^^^ not found in this scope\\n  |\\nhelp: possible candidates are found in other modules, you can import them into scope\\n  |\\n2 | use proc_macro::Ident;\\n  |\\n2 | use proc_macro::bridge::server::Ident;\\n  |\\n\\n\",\"children\":[{\"children\":[],\"code\":null,\"level\":\"help\",\"message\":\"possible candidates are found in other modules, you can import them into scope\",\"rendered\":null,\"spans\":[{\"byte_end\":23,\"byte_start\":23,\"column_end\":1,\"column_start\":1,\"expansion\":null,\"file_name\":\"src/foo.rs\",\"is_primary\":true,\"label\":null,\"line_end\":2,\"line_start\":2,\"suggested_replacement\":\"use proc_macro::Ident;\\n\\n\",\"suggestion_applicability\":\"Unspecified\",\"text\":[{\"highlight_end\":1,\"highlight_start\":1,\"text\":\"pub struct Symbol(&'static str);\"}]},{\"byte_end\":23,\"byte_start\":23,\"column_end\":1,\"column_start\":1,\"expansion\":null,\"file_name\":\"src/foo.rs\",\"is_primary\":true,\"label\":null,\"line_end\":2,\"line_start\":2,\"suggested_replacement\":\"use proc_macro::bridge::server::Ident;\\n\\n\",\"suggestion_applicability\":\"Unspecified\",\"text\":[{\"highlight_end\":1,\"highlight_start\":1,\"text\":\"pub struct Symbol(&'static str);\"}]}]}],\"code\":{\"code\":\"E0412\",\"explanation\":\"The type name used is not in scope.\\n\\nErroneous code examples:\\n\\n```compile_fail,E0412\\nimpl Something {} // error: type name `Something` is not in scope\\n\\n// or:\\n\\ntrait Foo {\\n    fn bar(N); // error: type name `N` is not in scope\\n}\\n\\n// or:\\n\\nfn foo(x: T) {} // type name `T` is not in scope\\n```\\n\\nTo fix this error, please verify you didn't misspell the type name, you did\\ndeclare it or imported it into the scope. Examples:\\n\\n```\\nstruct Something;\\n\\nimpl Something {} // ok!\\n\\n// or:\\n\\ntrait Foo {\\n    type N;\\n\\n    fn bar(_: Self::N); // ok!\\n}\\n\\n// or:\\n\\nfn foo<T>(x: T) {} // ok!\\n```\\n\\nAnother case that causes this error is when a type is imported into a parent\\nmodule. To fix this, you can follow the suggestion and use File directly or\\n`use super::File;` which will import the types from the parent namespace. An\\nexample that causes this error is below:\\n\\n```compile_fail,E0412\\nuse std::fs::File;\\n\\nmod foo {\\n    fn some_function(f: File) {}\\n}\\n```\\n\\n```\\nuse std::fs::File;\\n\\nmod foo {\\n    // either\\n    use super::File;\\n    // or\\n    // use std::fs::File;\\n    fn foo(f: File) {}\\n}\\n# fn main() {} // don't insert it for us; that'll break imports\\n```\\n\"},\"level\":\"error\",\"message\":\"cannot find type `Ident` in this scope\",\"spans\":[{\"byte_end\":223,\"byte_start\":218,\"column_end\":33,\"column_start\":28,\"expansion\":null,\"file_name\":\"src/foo.rs\",\"is_primary\":true,\"label\":\"not found in this scope\",\"line_end\":8,\"line_start\":8,\"suggested_replacement\":null,\"suggestion_applicability\":null,\"text\":[{\"highlight_end\":33,\"highlight_start\":28,\"text\":\"impl PartialEq<Symbol> for Ident {}\"}]}]}}\r\n{\"reason\":\"compiler-message\",\"package_id\":\"proc-macro-test 0.1.0 (path+file:///home/pfaria/projects/rustc-suggestion-bug)\",\"target\":{\"kind\":[\"proc-macro\"],\"crate_types\":[\"proc-macro\"],\"name\":\"proc-macro-test\",\"src_path\":\"/home/pfaria/projects/rustc-suggestion-bug/src/lib.rs\",\"edition\":\"2015\",\"doctest\":true},\"message\":{\"rendered\":\"error: aborting due to previous error\\n\\n\",\"children\":[],\"code\":null,\"level\":\"error\",\"message\":\"aborting due to previous error\",\"spans\":[]}}\r\n{\"reason\":\"compiler-message\",\"package_id\":\"proc-macro-test 0.1.0 (path+file:///home/pfaria/projects/rustc-suggestion-bug)\",\"target\":{\"kind\":[\"proc-macro\"],\"crate_types\":[\"proc-macro\"],\"name\":\"proc-macro-test\",\"src_path\":\"/home/pfaria/projects/rustc-suggestion-bug/src/lib.rs\",\"edition\":\"2015\",\"doctest\":true},\"message\":{\"rendered\":\"For more information about this error, try `rustc --explain E0412`.\\n\",\"children\":[],\"code\":null,\"level\":\"failure-note\",\"message\":\"For more information about this error, try `rustc --explain E0412`.\",\"spans\":[]}}\r\n```\r\n\r\nOne of the above in a more readable format:\r\n```json\r\n{\r\n    \"byte_end\": 23,\r\n    \"byte_start\": 23,\r\n    \"column_end\": 1,\r\n    \"column_start\": 1,\r\n    \"expansion\": null,\r\n    \"file_name\": \"src/foo.rs\",\r\n    \"is_primary\": true,\r\n    \"label\": null,\r\n    \"line_end\": 2,\r\n    \"line_start\": 2,\r\n    \"suggested_replacement\": \"use proc_macro::Ident;\\n\\n\",\r\n    \"suggestion_applicability\": \"Unspecified\",\r\n    \"text\": [\r\n        {\r\n            \"highlight_end\": 1,\r\n            \"highlight_start\": 1,\r\n            \"text\": \"pub struct Symbol(&'static str);\"\r\n        }\r\n    ]\r\n}\r\n```\r\n\r\nNote that `line_start` and `line_end` are 2, so the use statement is inserted in between the `derive` attribute and the struct `Symbol`, which causes a compilation error.\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.41.1 (f3e1a954d 2020-02-24)\r\nbinary: rustc\r\ncommit-hash: f3e1a954d2ead4e2fc197c7da7d71e6c61bad196\r\ncommit-date: 2020-02-24\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.41.1\r\nLLVM version: 9.0\r\n```\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/69733/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/69733/timeline", "performed_via_github_app": null, "state_reason": null}