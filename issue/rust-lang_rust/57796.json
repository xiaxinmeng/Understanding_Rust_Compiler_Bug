{"url": "https://api.github.com/repos/rust-lang/rust/issues/57796", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/57796/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/57796/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/57796/events", "html_url": "https://github.com/rust-lang/rust/issues/57796", "id": 401198096, "node_id": "MDU6SXNzdWU0MDExOTgwOTY=", "number": 57796, "title": "ICE when using Self as uninitialized return type in trait method", "user": {"login": "paulocsanz", "id": 6289779, "node_id": "MDQ6VXNlcjYyODk3Nzk=", "avatar_url": "https://avatars.githubusercontent.com/u/6289779?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paulocsanz", "html_url": "https://github.com/paulocsanz", "followers_url": "https://api.github.com/users/paulocsanz/followers", "following_url": "https://api.github.com/users/paulocsanz/following{/other_user}", "gists_url": "https://api.github.com/users/paulocsanz/gists{/gist_id}", "starred_url": "https://api.github.com/users/paulocsanz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paulocsanz/subscriptions", "organizations_url": "https://api.github.com/users/paulocsanz/orgs", "repos_url": "https://api.github.com/users/paulocsanz/repos", "events_url": "https://api.github.com/users/paulocsanz/events{/privacy}", "received_events_url": "https://api.github.com/users/paulocsanz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 9, "created_at": "2019-01-21T05:24:14Z", "updated_at": "2019-02-27T18:51:18Z", "closed_at": "2019-02-27T18:51:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\ntrait FromUnchecked {\r\n    unsafe fn from_unchecked(s: &str) -> Self;\r\n}\r\n\r\nimpl FromUnchecked for [u8; 30] {\r\n    unsafe fn from_unchecked(s: &str) -> Self {\r\n        let mut array: Self = std::mem::uninitialized();\r\n        let ptr = &mut array as *mut [u8] as *mut u8;\r\n        std::ptr::copy_nonoverlapping(s.as_bytes().as_ptr(), ptr, s.len());\r\n        std::ptr::write_bytes(ptr.add(s.len()), 0, 30 - s.len());\r\n        array\r\n    }\r\n}\r\n\r\nfn main() {\r\n    let _: [u8; 30] = unsafe { FromUnchecked::from_unchecked(\"asdasd\") };\r\n}\r\n```\r\n\r\n[Playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=53e2da580843961ccab6e0686c897bdb)\r\n\r\nTo make it compile you can simply replace `Self` for `[u8; 30]` in the `uninitialized` call ([Playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=56c6b124419971f6fe2548d45e85f1bc))\r\n\r\n```\r\n Compiling playground v0.0.1 (/playground)\r\nerror: internal compiler error: src/librustc/ty/sty.rs:2107: expected constant usize, got Const {\r\n    ty: usize,\r\n    val: Unevaluated(\r\n        DefId(0/1:9 ~ playground[ec94]::{{impl}}[0]::{{constant}}[0]),\r\n        []\r\n    )\r\n}\r\n\r\nthread 'main' panicked at 'Box<Any>', src/librustc_errors/lib.rs:600:9\r\nstack backtrace:\r\n   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace\r\n             at src/libstd/sys/unix/backtrace/tracing/gcc_s.rs:49\r\n   1: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:71\r\n   2: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/sys_common/backtrace.rs:59\r\n             at src/libstd/panicking.rs:211\r\n   3: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:227\r\n   4: rustc::util::common::panic_hook\r\n   5: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:495\r\n   6: std::panicking::begin_panic\r\n   7: rustc_errors::Handler::bug\r\n   8: rustc::util::bug::opt_span_bug_fmt::{{closure}}\r\n   9: rustc::ty::context::tls::with_opt::{{closure}}\r\n  10: rustc::ty::context::tls::with_context_opt\r\n  11: rustc::ty::context::tls::with_opt\r\n  12: rustc::util::bug::opt_span_bug_fmt\r\n  13: rustc::util::bug::bug_fmt\r\n  14: rustc::ty::sty::Const::unwrap_usize::{{closure}}\r\n  15: <rustc_mir::transform::qualify_consts::Qualifier<'a, 'tcx, 'tcx> as rustc::mir::visit::Visitor<'tcx>>::visit_rvalue\r\n  16: <rustc_mir::transform::qualify_consts::Qualifier<'a, 'tcx, 'tcx> as rustc::mir::visit::Visitor<'tcx>>::visit_assign\r\n  17: <rustc_mir::transform::qualify_consts::QualifyAndPromoteConstants as rustc_mir::transform::MirPass>::run_pass\r\n  18: rustc_mir::transform::run_passes::{{closure}}\r\n  19: rustc_mir::transform::run_passes\r\n  20: rustc_mir::transform::mir_validated\r\n  21: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors<'tcx> for rustc::ty::query::queries::mir_validated<'tcx>>::compute\r\n  22: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  23: <rustc::ty::query::plumbing::JobOwner<'a, 'tcx, Q>>::start\r\n  24: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::force_query_with_job\r\n  25: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::get_query\r\n  26: rustc_mir::borrow_check::mir_borrowck\r\n  27: rustc::ty::query::__query_compute::mir_borrowck\r\n  28: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors<'tcx> for rustc::ty::query::queries::mir_borrowck<'tcx>>::compute\r\n  29: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  30: <rustc::ty::query::plumbing::JobOwner<'a, 'tcx, Q>>::start\r\n  31: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::force_query_with_job\r\n  32: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::get_query\r\n  33: rustc::ty::query::<impl rustc::ty::context::TyCtxt<'a, 'tcx, 'lcx>>::mir_borrowck\r\n  34: rustc::ty::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::par_body_owners\r\n  35: rustc::util::common::time\r\n  36: rustc::ty::context::tls::enter_context\r\n  37: <std::thread::local::LocalKey<T>>::with\r\n  38: rustc::ty::context::TyCtxt::create_and_enter\r\n  39: rustc_driver::driver::compile_input\r\n  40: rustc_driver::run_compiler_with_pool\r\n  41: <scoped_tls::ScopedKey<T>>::set\r\n  42: rustc_driver::run_compiler\r\n  43: rustc_driver::monitor::{{closure}}\r\n  44: __rust_maybe_catch_panic\r\n             at src/libpanic_unwind/lib.rs:102\r\n  45: rustc_driver::run\r\n  46: rustc_driver::main\r\n  47: std::rt::lang_start::{{closure}}\r\n  48: std::panicking::try::do_call\r\n             at src/libstd/rt.rs:59\r\n             at src/libstd/panicking.rs:310\r\n  49: __rust_maybe_catch_panic\r\n             at src/libpanic_unwind/lib.rs:102\r\n  50: std::rt::lang_start_internal\r\n             at src/libstd/panicking.rs:289\r\n             at src/libstd/panic.rs:398\r\n             at src/libstd/rt.rs:58\r\n  51: main\r\n  52: __libc_start_main\r\n  53: <unknown>\r\nquery stack during panic:\r\n#0 [mir_validated] processing `<[u8; _] as FromUnchecked>::from_unchecked`\r\n#1 [mir_borrowck] processing `<[u8; _] as FromUnchecked>::from_unchecked`\r\nend of query stack\r\nerror: aborting due to previous error\r\n\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.32.0 (9fda7c223 2019-01-16) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C codegen-units=1 -C debuginfo=2 --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nerror: Could not compile `playground`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n```", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/57796/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/57796/timeline", "performed_via_github_app": null, "state_reason": "completed"}