{"url": "https://api.github.com/repos/rust-lang/rust/issues/110532", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/110532/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/110532/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/110532/events", "html_url": "https://github.com/rust-lang/rust/issues/110532", "id": 1674453002, "node_id": "I_kwDOAAsO6M5jziAK", "number": 110532, "title": "conflicting implementations of trait `Borrow<std::option::Option<_>>` for type `Body<_, _>`", "user": {"login": "MaxKingPor", "id": 43533178, "node_id": "MDQ6VXNlcjQzNTMzMTc4", "avatar_url": "https://avatars.githubusercontent.com/u/43533178?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MaxKingPor", "html_url": "https://github.com/MaxKingPor", "followers_url": "https://api.github.com/users/MaxKingPor/followers", "following_url": "https://api.github.com/users/MaxKingPor/following{/other_user}", "gists_url": "https://api.github.com/users/MaxKingPor/gists{/gist_id}", "starred_url": "https://api.github.com/users/MaxKingPor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MaxKingPor/subscriptions", "organizations_url": "https://api.github.com/users/MaxKingPor/orgs", "repos_url": "https://api.github.com/users/MaxKingPor/repos", "events_url": "https://api.github.com/users/MaxKingPor/events{/privacy}", "received_events_url": "https://api.github.com/users/MaxKingPor/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 1596121013, "node_id": "MDU6TGFiZWwxNTk2MTIxMDEz", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-confusing", "name": "D-confusing", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error that should be reworked"}, {"id": 1839565265, "node_id": "MDU6TGFiZWwxODM5NTY1MjY1", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-terse", "name": "D-terse", "color": "c9f7a3", "default": false, "description": "A diagnostic that doesn't give enough information about the problem at hand"}, {"id": 4917350639, "node_id": "LA_kwDOAAsO6M8AAAABJRjQ7w", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-coherence", "name": "A-coherence", "color": "f7e101", "default": false, "description": "Area: Coherence"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2023-04-19T08:42:03Z", "updated_at": "2023-04-20T16:10:49Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "``` Rust\r\n#[derive(Debug, Default)]\r\npub struct Body<C, R> {\r\n    content: Option<C>,\r\n    resp: Option<R>,\r\n}\r\n\r\nimpl<C, R> Deref for Body<C, R> {\r\n    type Target = Option<C>;\r\n    fn deref(&self) -> &Self::Target {\r\n        self.borrow()\r\n    }\r\n}\r\nimpl<C, R> DerefMut for Body<C, R> {\r\n    fn deref_mut(&mut self) -> &mut Self::Target {\r\n        self.borrow_mut()\r\n    }\r\n}\r\n\r\nimpl<C, R> Borrow<Option<C>> for Body<C, R> {\r\n    fn borrow(&self) -> &Option<C> {\r\n        &self.content\r\n    }\r\n}\r\nimpl<C, R> BorrowMut<Option<C>> for Body<C, R> {\r\n    fn borrow_mut(&mut self) -> &mut Option<C> {\r\n        &mut self.content\r\n    }\r\n}\r\nimpl<C, R> Borrow<Option<R>> for Body<C, R> {\r\n    fn borrow(&self) -> &Option<R> {\r\n        &self.resp\r\n    }\r\n}\r\nimpl<C, R> BorrowMut<Option<R>> for Body<C, R> {\r\n    fn borrow_mut(&mut self) -> &mut Option<R> {\r\n        &mut self.resp\r\n    }\r\n}\r\n``` \r\n# out\r\n```\r\nerror[E0119]: conflicting implementations of trait `Borrow<std::option::Option<_>>` for type `Body<_, _>`\r\n   --> model/src/customer.rs:117:1\r\n    |\r\n107 | impl<C, R> Borrow<Option<C>> for Body<C, R> {\r\n    | ---------------------------------------------- first implementation here\r\n...\r\n117 | impl<C, R> Borrow<Option<R>> for Body<C, R> {\r\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `Body<_, _>`\r\n\r\nerror[E0119]: conflicting implementations of trait `BorrowMut<std::option::Option<_>>` for type `Body<_, _>`\r\n   --> model/src/customer.rs:122:1\r\n    |\r\n112 | impl<C, R> BorrowMut<Option<C>> for Body<C, R> {\r\n    | ------------------------------------------------- first implementation here\r\n...\r\n122 | impl<C, R> BorrowMut<Option<R>> for Body<C, R> {\r\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `Body<_, _>`\r\n\r\nFor more information about this error, try `rustc --explain E0119`.\r\n```\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/110532/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/110532/timeline", "performed_via_github_app": null, "state_reason": null}