{"url": "https://api.github.com/repos/rust-lang/rust/issues/29926", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/29926/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/29926/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/29926/events", "html_url": "https://github.com/rust-lang/rust/issues/29926", "id": 117800048, "node_id": "MDU6SXNzdWUxMTc4MDAwNDg=", "number": 29926, "title": "Where should cross-platform types go?", "user": {"login": "dimbleby", "id": 875184, "node_id": "MDQ6VXNlcjg3NTE4NA==", "avatar_url": "https://avatars.githubusercontent.com/u/875184?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dimbleby", "html_url": "https://github.com/dimbleby", "followers_url": "https://api.github.com/users/dimbleby/followers", "following_url": "https://api.github.com/users/dimbleby/following{/other_user}", "gists_url": "https://api.github.com/users/dimbleby/gists{/gist_id}", "starred_url": "https://api.github.com/users/dimbleby/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dimbleby/subscriptions", "organizations_url": "https://api.github.com/users/dimbleby/orgs", "repos_url": "https://api.github.com/users/dimbleby/repos", "events_url": "https://api.github.com/users/dimbleby/events{/privacy}", "received_events_url": "https://api.github.com/users/dimbleby/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-11-19T12:05:43Z", "updated_at": "2015-11-19T18:56:35Z", "closed_at": "2015-11-19T18:56:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "On Windows, the recent `libc` revamp moved quite a few types to `winapi`.  The result is that to write cross-platform code using such a type, I'm pretty much required to write my own boiler-plate module something like this:\n\n``` rust\n#[cfg(windows)]\nmod windows {\n    extern crate winapi;\n    pub type1 = winapi::type1;\n    pub type2 = winapi::type2;\n    ...\n}\n\n#[cfg(unix)]\nmod unix {\n    extern crate libc;\n    pub type1 = libc::type1;\n    pub type2 = libc::type2;\n    ...\n}\n\n#[cfg(windows)]\npub use self::windows::*;\n\n#[cfg(unix)]\npub use self::unix::*;\n```\n\nSee for example [here](https://github.com/dimbleby/rust-c-ares/blob/master/src/ctypes.rs).\n\nNot exactly the end of the world, but surely not ideal either:\n- It's a little annoying for me to have to write this stuff\n- It's more annoying for lots of authors to have to write this stuff.  \n  - Sooner or later we'll have a `crate_a::type1`, a `crate_b::type1`, and a `crate_c::type1`; which all just seems to be noise that would be better avoided.\n\nSo can we do better?\n\nSuggestions:\n- Put the common types in `std::os::raw`\n  - I don't know whether this is a good idea or not, because I don't understand what the intended purpose of `std::os::raw` is.  \n  -  Currently it seems simply to duplicate stuff that's in `libc`.  Or perhaps `libc` is duplicating stuff that should be defined in `std::os::raw`?\n  - Still if the intention is that `std::os::raw` is 'a place for useful and truly cross-platform types' then this sounds like a good plan.\n- Release another crate to do the re-unification\n  - Also seems like a reasonable plan, so long as the new crate is sufficiently blessed and publicised that it actually gets used\n- Restore types to `libc`\n  - I understand that there were good reasons for making the change in the first place\n  - I mention this possibility only for completeness.\n- Something else?\n  - Not least: perhaps the current situation is in fact fine and I should stop worrying about it.\n", "closed_by": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/29926/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/29926/timeline", "performed_via_github_app": null, "state_reason": "completed"}