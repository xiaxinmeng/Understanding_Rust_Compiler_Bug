{"url": "https://api.github.com/repos/rust-lang/rust/issues/69719", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/69719/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/69719/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/69719/events", "html_url": "https://github.com/rust-lang/rust/issues/69719", "id": 575863886, "node_id": "MDU6SXNzdWU1NzU4NjM4ODY=", "number": 69719, "title": "Confusing diagnostics where the error mentions Sized but not that a trait bound is not implemented (where it would be for a Sized type).", "user": {"login": "najamelan", "id": 449589, "node_id": "MDQ6VXNlcjQ0OTU4OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/449589?v=4", "gravatar_id": "", "url": "https://api.github.com/users/najamelan", "html_url": "https://github.com/najamelan", "followers_url": "https://api.github.com/users/najamelan/followers", "following_url": "https://api.github.com/users/najamelan/following{/other_user}", "gists_url": "https://api.github.com/users/najamelan/gists{/gist_id}", "starred_url": "https://api.github.com/users/najamelan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/najamelan/subscriptions", "organizations_url": "https://api.github.com/users/najamelan/orgs", "repos_url": "https://api.github.com/users/najamelan/repos", "events_url": "https://api.github.com/users/najamelan/events{/privacy}", "received_events_url": "https://api.github.com/users/najamelan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1839565265, "node_id": "MDU6TGFiZWwxODM5NTY1MjY1", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-terse", "name": "D-terse", "color": "c9f7a3", "default": false, "description": "A diagnostic that doesn't give enough information about the problem at hand"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-04T23:10:12Z", "updated_at": "2020-03-11T23:44:08Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This comes from the [user forum](https://users.rust-lang.org/t/wrapping-boxed-errors/38951), [playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=66943a8d8e850922681779926208b1fd), moved from #27964:\r\n```rust\r\nuse std::error::Error;\r\n\r\nfn library_function<F1, E1>(f1: F1) -> Result<(), E1>\r\nwhere\r\n    F1: FnOnce() -> Result<(), E1>,\r\n    E1: Error, // <-remove this line -> compile\r\n{\r\n    f1()\r\n}\r\n\r\nfn main() -> Result<(), Box<dyn Error>> \r\n{\r\n    library_function( || Ok(()) )\r\n}\r\n```\r\nError:\r\n```\r\nerror[E0277]: the size for values of type `dyn std::error::Error` cannot be known at compilation time\r\n  --> src/main.rs:13:5\r\n   |\r\n3  | fn library_function<F1, E1>(f1: F1) -> Result<(), E1>\r\n   |    ----------------\r\n...\r\n6  |     E1: Error, // <-remove this line -> compile\r\n   |         ----- required by this bound in `library_function`\r\n...\r\n13 |     library_function( || Ok(()) )\r\n   |     ^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time\r\n   |\r\n   = help: the trait `std::marker::Sized` is not implemented for `dyn std::error::Error`\r\n   = note: to learn more, visit <https://doc.rust-lang.org/book/ch19-04-advanced-types.html#dynamically-sized-types-and-the-sized-trait>\r\n   = note: required because of the requirements on the impl of `std::error::Error` for `std::boxed::Box<dyn std::error::Error>`\r\n```\r\nGo figure why \"library_function doesn't have a size known at compile time\".\r\n\r\nAnalysis:\r\nThere is a blanket impl for `Error` on `Box<T>`, so quickly looking it up in the docs makes you think that it should implement Error, but it's not on `Box<T: ?Sized>`. credit to @Yandros\r\n\r\nI feel the main issue here is that we have a trait bound on Error that isn't satisfied, so probably it would be nice to replace `library_function` not being sized by: `Box<dyn Error> does not implement Error. The following Impls where found: impl<T: Error> Error for Box<T>, but that requires T: Sized`.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/69719/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/69719/timeline", "performed_via_github_app": null, "state_reason": null}