{"url": "https://api.github.com/repos/rust-lang/rust/issues/87917", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/87917/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/87917/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/87917/events", "html_url": "https://github.com/rust-lang/rust/issues/87917", "id": 965114692, "node_id": "MDU6SXNzdWU5NjUxMTQ2OTI=", "number": 87917, "title": "arm-none-eabi (etc) have incorrect repr(C) enum layout (AAPCS vs AAPCS-linux)", "user": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 55301954, "node_id": "MDU6TGFiZWw1NTMwMTk1NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-Arm", "name": "O-Arm", "color": "6e6ec0", "default": false, "description": "Target: 32-bit Arm processors (armv6, armv7, thumb...), including 64-bit Arm in AArch32 state"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1944310735, "node_id": "MDU6TGFiZWwxOTQ0MzEwNzM1", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-layout", "name": "A-layout", "color": "f7e101", "default": false, "description": "Area: Memory layout of types"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2021-08-10T16:30:13Z", "updated_at": "2021-08-13T02:49:51Z", "closed_at": "2021-08-13T02:49:51Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "We're building code for a Cortex-M33 running FreeRTOS, and using C/Rust FFI.\r\n\r\nThe C code is being compiled with:\r\n\r\n```\r\ncompiler is arm-none-eabi-g++ (GNU Arm Embedded Toolchain 10-2020-q4-major) 10.2.1 20201103 (release)\r\ntarget flags -mcpu=cortex-m33 -mthumb -mfloat-abi=hard -mfpu=fpv5-sp-d16\r\n```\r\n\r\nThe rust code is being compiled with:\r\n\r\n```\r\nRUSTFLAGS=\u201d-Ctarget-cpu=cortex-m33\u201d cargo +nightly build -Zbuild-std --target=thumbv8m.main-none-eabihf\r\n```\r\n\r\nThe following enum:\r\n\r\n```rust\r\n#[repr(C)]\r\nenum Foo {A, B}\r\n```\r\n\r\nhas a size of 4 on the rust side and 1 on the C side.\r\n\r\nThe specific choice of Cortex CPU is not relevant here, a reduce testcase that enables us to see the size in a compiler error (so we don't need to actually run the code) is as follows:\r\n\r\n<details>\r\n\r\n```c\r\n// arm-none-eabi-g++ test.c -mthumb -mfloat-abi=hard -mfpu=fpv5-sp-d16\r\ntypedef enum Foo {A, B} Foo;\r\nchar (*error)[sizeof( Foo )] = 1;\r\n```\r\n\r\nProduces the error: `error: invalid conversion from 'int' to 'char (*)[1]'`, whereas:\r\n\r\n```rust\r\n// cargo build --target=thumbv8m.main-none-eabihf -Zbuild-std\r\n#![no_std]\r\n#[repr(C)]\r\nenum Foo { A, B }\r\nconst BAR: [u8; ::core::mem::size_of::<Foo>()] = [];\r\n```\r\n\r\nProduces the error `expected an array with a fixed size of 4 elements, found one with 0 elements`\r\n\r\n</details>\r\n\r\nThis bug traces back to this comment: https://github.com/rust-lang/rust/blob/ae90dcf0207c57c3034f00b07048d63f8b2363c8/compiler/rustc_middle/src/ty/layout.rs#L134-L138 ([see also](https://rust-lang.github.io/unsafe-code-guidelines/layout/enums.html#layout-of-a-fieldless-enum))\r\n\r\nI am able to reproduce this for both thumb and non-thumb, with and without hard floats: `arm-none-eabi-g++ test.c`, regardless of the `-mthumb` and `-mfloat-abi=hard` flags, will always think the enum is of size 1, whereas I tried a bunch of ARM targets on the Rust side and they all think it is of size 4.\r\n\r\n`arm-linux-gnueabi-g++` agrees with Rust about the size of the enum, so I think this has to do specifically with `-none-eabi` and `-none-eabihf`. I feel like we should either follow GCC's convention (which is presumably clang's convention), or expose a codegen flag that flips this.\r\n\r\ncc @joshtriplett @cuviper  @japaric who typically care about stuff like this\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/87917/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/87917/timeline", "performed_via_github_app": null, "state_reason": "completed"}