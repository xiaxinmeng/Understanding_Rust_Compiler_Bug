{"url": "https://api.github.com/repos/rust-lang/rust/issues/69772", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/69772/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/69772/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/69772/events", "html_url": "https://github.com/rust-lang/rust/issues/69772", "id": 576889931, "node_id": "MDU6SXNzdWU1NzY4ODk5MzE=", "number": 69772, "title": "std::net::IpAddr: is_loopback failing on ipv4-in-ipv6 addresses ", "user": {"login": "gh0st42", "id": 1264131, "node_id": "MDQ6VXNlcjEyNjQxMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1264131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gh0st42", "html_url": "https://github.com/gh0st42", "followers_url": "https://api.github.com/users/gh0st42/followers", "following_url": "https://api.github.com/users/gh0st42/following{/other_user}", "gists_url": "https://api.github.com/users/gh0st42/gists{/gist_id}", "starred_url": "https://api.github.com/users/gh0st42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gh0st42/subscriptions", "organizations_url": "https://api.github.com/users/gh0st42/orgs", "repos_url": "https://api.github.com/users/gh0st42/repos", "events_url": "https://api.github.com/users/gh0st42/events{/privacy}", "received_events_url": "https://api.github.com/users/gh0st42/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-03-06T12:05:48Z", "updated_at": "2020-12-02T16:55:31Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "## Summary: \r\nThe issue arises when trying to determine if an `IpAddr` is coming from localhost in a mixed IPv4/IPV6 environment.\r\nThe `is_loopback` [function](https://doc.rust-lang.org/std/net/enum.IpAddr.html#method.is_loopback) should return `true` for loopback IPs such as *127.0.0.1* or *[::1]*. This fails if a socket is bound to *[::]* which responds to IPv4 as well as IPv6. Here, IPv4 is automatically wrapped in IPv6 and *127.0.0.1* is becoming *[::ffff:127.0.0.1]* which is not recognized as a loopback address.\r\n\r\n## Detailed story\r\nIf I bind a server to *0.0.0.0* or *[::1]* and telnet/curl from localhost, I can easily tell whether the connection came from a local user or not by using the `is_loopback` call on `IpAddr`, `Ipv4Addr` or `Ipv6Addr`.\r\n\r\nOnce I bind my server to *[::]* to work on IPv4 AND IPv6 at the same time and then connect to it via v4 to *127.0.0.1* the `is_loopback` call returns `false`.\r\nI then have to manually try conversion of the `Ipv6Addr` into an `Ipv4Addr` (using `to_ipv4`) and perform a second check with `is_loopback`.\r\n\r\nIn my opinion, this behavior should either be clearly documented in the standard library or better yet should happen automatically (at least in `IpAddr`) since an ipv6 encapsulated ipv4 loopback address is still a perfectly valid loopback address.\r\n\r\nThe current documentation in `Ipv6Addr` states that it is a check for *[::1]* but a clear statement that IPv4 in IPv6 loopback addresses are not covered might help. I also guess that having the current minimal checks in both variants (v4 and v6) make sense to keep but the general `is_loopback` in `IpAddr` itself could provide the convenient conversion as it covers v4 and v6 anyways.\r\n\r\n## Example Code\r\n\r\n```rust\r\nuse std::net::{Ipv4Addr, Ipv6Addr};\r\n\r\nfn main() {\r\n    let ipv4 = Ipv4Addr::new(127, 0, 0, 1); // regular 127.0.0.1\r\n    let ipv6 = Ipv6Addr::new(0, 0, 0, 0, 0, 0, 0, 0x1); // regular [::1] \r\n    let v4_in_v6 = Ipv6Addr::new(0, 0, 0, 0, 0, 0xffff, 0x7f00, 0x1); // if binding socket to [::] and connecting from ipv4 localhost\r\n    \r\n    println!(\"{} is loopback? {} \", ipv4, ipv4.is_loopback());\r\n    println!(\"{} is loopback? {} \", ipv6, ipv6.is_loopback());\r\n    println!(\"{} is loopback? {} \", v4_in_v6, v4_in_v6.is_loopback());\r\n    println!(\"{} is loopback? {} \", v4_in_v6, v4_in_v6.to_ipv4().unwrap().is_loopback());\r\n}\r\n```\r\n\r\n([Playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=edf5df48850f188f042dfea062490b67))\r\n\r\nOutput:\r\n\r\n```\r\n127.0.0.1 is loopback? true \r\n::1 is loopback? true \r\n::ffff:127.0.0.1 is loopback? false \r\n::ffff:127.0.0.1 is loopback? true \r\n\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/69772/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/69772/timeline", "performed_via_github_app": null, "state_reason": null}