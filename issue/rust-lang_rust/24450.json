{"url": "https://api.github.com/repos/rust-lang/rust/issues/24450", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/24450/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/24450/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/24450/events", "html_url": "https://github.com/rust-lang/rust/issues/24450", "id": 68597384, "node_id": "MDU6SXNzdWU2ODU5NzM4NA==", "number": 24450, "title": "`std::os::windows::io::RawHandle` exposes `libc::HANDLE`", "user": {"login": "klutzy", "id": 1589355, "node_id": "MDQ6VXNlcjE1ODkzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1589355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/klutzy", "html_url": "https://github.com/klutzy", "followers_url": "https://api.github.com/users/klutzy/followers", "following_url": "https://api.github.com/users/klutzy/following{/other_user}", "gists_url": "https://api.github.com/users/klutzy/gists{/gist_id}", "starred_url": "https://api.github.com/users/klutzy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/klutzy/subscriptions", "organizations_url": "https://api.github.com/users/klutzy/orgs", "repos_url": "https://api.github.com/users/klutzy/repos", "events_url": "https://api.github.com/users/klutzy/events{/privacy}", "received_events_url": "https://api.github.com/users/klutzy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-04-15T07:12:20Z", "updated_at": "2016-03-31T07:02:02Z", "closed_at": "2016-03-31T07:02:02Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`std::os::windows::io::RawHandle` is a re-export of `libc::HANDLE = *mut libc::c_void`, and `c_void` is defined as enum.\nSo it's possible to access non-primitive type of liblibc via `std`. This leads to confusing error if someone uses both `RawHandle` and crates.io's liblibc:\n\n``` Rust\n// use libc from crates.io\nextern crate libc;\nuse std::os::windows::io::AsRawHandle;\n\nfn get_handle(file: File) {\n    let handle = file.as_raw_handle();\n\n    // error: mismatched types: expected `*mut libc::types::common::c95::c_void`,\n    // found `*mut libc::types::common::c95::c_void`\n    // let handle: libc::HANDLE = handle;\n\n    // explicit casting needed\n    let handle: libc::HANDLE = handle as libc::HANDLE;\n}\n```\n\n(On unix, `std::os::unix::io::RawFd` is re-export of `libc::c_int`, which is re-export of primitive type.)\n", "closed_by": {"login": "klutzy", "id": 1589355, "node_id": "MDQ6VXNlcjE1ODkzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1589355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/klutzy", "html_url": "https://github.com/klutzy", "followers_url": "https://api.github.com/users/klutzy/followers", "following_url": "https://api.github.com/users/klutzy/following{/other_user}", "gists_url": "https://api.github.com/users/klutzy/gists{/gist_id}", "starred_url": "https://api.github.com/users/klutzy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/klutzy/subscriptions", "organizations_url": "https://api.github.com/users/klutzy/orgs", "repos_url": "https://api.github.com/users/klutzy/repos", "events_url": "https://api.github.com/users/klutzy/events{/privacy}", "received_events_url": "https://api.github.com/users/klutzy/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/24450/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/24450/timeline", "performed_via_github_app": null, "state_reason": "completed"}