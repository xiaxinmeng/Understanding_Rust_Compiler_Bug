{"url": "https://api.github.com/repos/rust-lang/rust/issues/16515", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/16515/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/16515/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/16515/events", "html_url": "https://github.com/rust-lang/rust/issues/16515", "id": 40331923, "node_id": "MDU6SXNzdWU0MDMzMTkyMw==", "number": 16515, "title": "make use of LLVM's scoped noalias metadata", "user": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 234956, "node_id": "MDU6TGFiZWwyMzQ5NTY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-codegen", "name": "A-codegen", "color": "f7e101", "default": false, "description": "Area: Code generation"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 884691893, "node_id": "MDU6TGFiZWw4ODQ2OTE4OTM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/WG-codegen", "name": "WG-codegen", "color": "c2e0c6", "default": false, "description": "Working Group: Codegen (Runtime perf and code size)"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 36, "created_at": "2014-08-15T08:35:08Z", "updated_at": "2022-12-05T18:15:03Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Rust could pass along lots of aliasing information to LLVM via the new metadata.\r\n\r\nhttp://llvm.org/docs/LangRef.html#noalias-and-alias-scope-metadata\r\n\r\n<hr/>\r\n\r\n**UPDATE**(@eddyb): Currently blocked on an Unsafe Code Guidelines decision, regarding the exact cases we can treat as UB, and optimize - see https://github.com/rust-lang/rust/issues/16515#issuecomment-377742892 below, and further comments.\r\n\r\nWhile LLVM can and will convert `noalias` *attributes* in function signatures into *scoped `!noalias` metadata* on instructions, when inlining, we never *emit* any such metadata ourselves.\r\n\r\nFurthermore, the LLVM conversion is conservative (i.e. scoped to the entire callee) in a way that can't easily be generalized intra-function, without deciding on what to define and what to leave as UB.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/16515/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/16515/timeline", "performed_via_github_app": null, "state_reason": null}