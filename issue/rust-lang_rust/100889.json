{"url": "https://api.github.com/repos/rust-lang/rust/issues/100889", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/100889/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/100889/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/100889/events", "html_url": "https://github.com/rust-lang/rust/issues/100889", "id": 1346918622, "node_id": "I_kwDOAAsO6M5QSFje", "number": 100889, "title": "Using a macro as the tail expression in a function that doesn't return a value should prompt to add a semicolon", "user": {"login": "shepmaster", "id": 174509, "node_id": "MDQ6VXNlcjE3NDUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/174509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shepmaster", "html_url": "https://github.com/shepmaster", "followers_url": "https://api.github.com/users/shepmaster/followers", "following_url": "https://api.github.com/users/shepmaster/following{/other_user}", "gists_url": "https://api.github.com/users/shepmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/shepmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shepmaster/subscriptions", "organizations_url": "https://api.github.com/users/shepmaster/orgs", "repos_url": "https://api.github.com/users/shepmaster/repos", "events_url": "https://api.github.com/users/shepmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/shepmaster/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2022-08-22T20:05:00Z", "updated_at": "2022-10-13T07:42:28Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Given the [following code](https://play.integer32.com/?version=nightly&mode=debug&edition=2021&gist=073a8eed6ad2b2dfa85e7a13296ebb70):\n\n```rust\nfn demo() -> u8 {\n    1\n}\n\nfn good() {\n    demo()\n}\n\nfn subpar() {\n    dbg!(demo())\n}\n```\n\nThe current output is:\n\n```\nerror[E0308]: mismatched types\n --> src/lib.rs:6:5\n  |\n6 |     demo()\n  |     ^^^^^^ expected `()`, found `u8`\n  |\nhelp: consider using a semicolon here\n  |\n6 |     demo();\n  |           +\nhelp: try adding a return type\n  |\n5 | fn good() -> u8 {\n  |           +++++\n\nerror[E0308]: mismatched types\n  --> src/lib.rs:10:5\n   |\n9  | fn subpar() {\n   |             - help: try adding a return type: `-> u8`\n10 |     dbg!(demo())\n   |     ^^^^^^^^^^^^ expected `()`, found `u8`\n   |\n   = note: this error originates in the macro `dbg` (in Nightly builds, run with -Z macro-backtrace for more info)\n```\n\nNote that the `subpar` function does not have help for adding a semicolon.\n\nIdeally the output should look like:\n\n```\nerror[E0308]: mismatched types\n --> src/lib.rs:6:5\n  |\n6 |     demo()\n  |     ^^^^^^ expected `()`, found `u8`\n  |\nhelp: consider using a semicolon here\n  |\n6 |     demo();\n  |           +\nhelp: try adding a return type\n  |\n5 | fn good() -> u8 {\n  |           +++++\n\nerror[E0308]: mismatched types\n  --> src/lib.rs:10:5\n   |\nhelp: consider using a semicolon here\n   |\n10 |     dbg!(demo());\n   |                 +\n9  | fn subpar() {\n   |             - help: try adding a return type: `-> u8`\n10 |     dbg!(demo())\n   |     ^^^^^^^^^^^^ expected `()`, found `u8`\n   |\n   = note: this error originates in the macro `dbg` (in Nightly builds, run with -Z macro-backtrace for more info)\n```\n\nNote that the `subpar` function now has help for adding a semicolon.\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"vincenzopalazzo\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/100889/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/100889/timeline", "performed_via_github_app": null, "state_reason": null}