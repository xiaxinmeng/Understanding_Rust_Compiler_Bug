{"url": "https://api.github.com/repos/rust-lang/rust/issues/72554", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/72554/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/72554/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/72554/events", "html_url": "https://github.com/rust-lang/rust/issues/72554", "id": 623975102, "node_id": "MDU6SXNzdWU2MjM5NzUxMDI=", "number": 72554, "title": "Assertion failed in erroneous recursive types with methods returning a `impl Trait` type", "user": {"login": "ghost", "id": 10137, "node_id": "MDQ6VXNlcjEwMTM3", "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghost", "html_url": "https://github.com/ghost", "followers_url": "https://api.github.com/users/ghost/followers", "following_url": "https://api.github.com/users/ghost/following{/other_user}", "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghost/subscriptions", "organizations_url": "https://api.github.com/users/ghost/orgs", "repos_url": "https://api.github.com/users/ghost/repos", "events_url": "https://api.github.com/users/ghost/events{/privacy}", "received_events_url": "https://api.github.com/users/ghost/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234956, "node_id": "MDU6TGFiZWwyMzQ5NTY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-codegen", "name": "A-codegen", "color": "f7e101", "default": false, "description": "Area: Code generation"}, {"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 46741598, "node_id": "MDU6TGFiZWw0Njc0MTU5OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-test", "name": "E-needs-test", "color": "02e10c", "default": false, "description": "Call for participation: writing correctness tests"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 631673608, "node_id": "MDU6TGFiZWw2MzE2NzM2MDg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-impl-trait", "name": "A-impl-trait", "color": "f7e101", "default": false, "description": "Area: impl Trait. Universally / existentially quantified anonymous types with static dispatch."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2020-05-25T00:08:49Z", "updated_at": "2020-06-04T14:16:09Z", "closed_at": "2020-06-04T14:16:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Summary\r\n- erroneous recursive types (without being wrapped with `Box<_>`) having methods whose return type is `impl Trait` causes the assertion failure.\r\n\r\n## I tried this code:\r\n\r\n```rust\r\nuse std::collections::BTreeSet;\r\n\r\n#[derive(Hash)]\r\npub enum ElemDerived {\r\n    A(ElemDerived)\r\n}\r\n\r\npub enum Elem {\r\n    Derived(ElemDerived)\r\n}\r\n\r\npub struct Set(BTreeSet<Elem>);\r\n\r\nimpl Set {\r\n    pub fn into_iter(self) -> impl Iterator<Item = Elem> {\r\n        self.0.into_iter()\r\n    }\r\n}\r\n\r\nfn main() {}\r\n```\r\n\r\n## I expected to see this happen:\r\n- I expected the error message \"recursive type `ElemDerived` has infinite size.\"\r\n- Indeed, if there is no method with return type `impl Trait`, we got the following normal error messages:\r\n  ```\r\n  error[E0072]: recursive type `ElemDerived` has infinite size\r\n  --> ./bug.rs:4:1\r\n    |\r\n  4 | pub enum ElemDerived {\r\n    | ^^^^^^^^^^^^^^^^^^^^ recursive type has infinite size\r\n  5 |     A(ElemDerived)\r\n    |       ----------- recursive without indirection\r\n    |\r\n    = help: insert indirection (e.g., a `Box`, `Rc`, or `&`) at some point to make `ElemDerived` representable\r\n\r\n  error: aborting due to previous error\r\n  ```\r\n\r\n## Instead, this happened:\r\n- `rustc` aborted with the following assertion failure.\r\n  ```\r\n  % RUST_BACKTRACE=1 rustc ./bug.rs\r\n  error: internal compiler error: src/librustc_infer/traits/codegen/mod.rs:108: Encountered errors `[FulfillmentError(Obligation(predicate=Binder(TraitPredicate(<[type error] as std::marker::Sized>)), depth=2),Ambiguity)]` resolving bounds after type-checking\r\n\r\n  thread 'rustc' panicked at 'Box<Any>', src/librustc_errors/lib.rs:875:9\r\n  stack backtrace:\r\n    0: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt\r\n    1: core::fmt::write\r\n    2: std::io::Write::write_fmt\r\n    3: std::panicking::default_hook::{{closure}}\r\n    4: std::panicking::default_hook\r\n    5: rustc_driver::report_ice\r\n    6: std::panicking::rust_panic_with_hook\r\n    7: std::panicking::begin_panic\r\n    8: rustc_errors::HandlerInner::bug\r\n    9: rustc_errors::Handler::bug\r\n    10: rustc::util::bug::opt_span_bug_fmt::{{closure}}\r\n    11: rustc::ty::context::tls::with_opt::{{closure}}\r\n    12: rustc::ty::context::tls::with_opt\r\n    13: rustc::util::bug::opt_span_bug_fmt\r\n    14: rustc::util::bug::bug_fmt\r\n    15: rustc_infer::traits::codegen::<impl rustc_infer::infer::InferCtxt>::drain_fulfillment_cx_or_panic\r\n    16: rustc::ty::context::GlobalCtxt::enter_local\r\n    17: rustc_infer::traits::codegen::codegen_fulfill_obligation\r\n    18: rustc::ty::query::__query_compute::codegen_fulfill_obligation\r\n    19: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::codegen_fulfill_obligation>::compute\r\n    20: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n    21: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n    22: rustc_ty::instance::resolve_instance\r\n    23: rustc::ty::instance::Instance::resolve\r\n    24: rustc_mir_build::lints::check\r\n    25: rustc::ty::context::GlobalCtxt::enter_local\r\n    26: rustc_mir_build::build::mir_built\r\n    27: rustc::ty::query::__query_compute::mir_built\r\n    28: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::mir_built>::compute\r\n    29: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n    30: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n    31: rustc_mir::transform::check_unsafety::unsafety_check_result\r\n    32: rustc::ty::query::__query_compute::unsafety_check_result\r\n    33: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::unsafety_check_result>::compute\r\n    34: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n    35: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n    36: rustc_mir::transform::mir_const\r\n    37: rustc::ty::query::__query_compute::mir_const\r\n    38: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::mir_const>::compute\r\n    39: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n    40: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n    41: rustc_mir::transform::mir_validated\r\n    42: rustc::ty::query::__query_compute::mir_validated\r\n    43: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::mir_validated>::compute\r\n    44: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n    45: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n    46: rustc_mir::borrow_check::mir_borrowck\r\n    47: rustc::ty::query::__query_compute::mir_borrowck\r\n    48: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::mir_borrowck>::compute\r\n    49: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n    50: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n    51: rustc_typeck::collect::type_of::type_of\r\n    52: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::type_of>::compute\r\n    53: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n    54: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n    55: rustc::ty::util::<impl rustc::ty::context::TyCtxt>::try_expand_impl_trait_type::OpaqueTypeExpander::expand_opaque_ty\r\n    56: rustc::ty::util::<impl rustc::ty::context::TyCtxt>::try_expand_impl_trait_type\r\n    57: rustc_typeck::check::check_item_type\r\n    58: rustc::hir::map::Map::visit_item_likes_in_module\r\n    59: rustc_typeck::check::check_mod_item_types\r\n    60: rustc::ty::query::__query_compute::check_mod_item_types\r\n    61: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::check_mod_item_types>::compute\r\n    62: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n    63: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n    64: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::ensure_query\r\n    65: rustc_session::utils::<impl rustc_session::session::Session>::time\r\n    66: rustc_typeck::check_crate\r\n    67: rustc_interface::passes::analysis\r\n    68: rustc::ty::query::__query_compute::analysis\r\n    69: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n    70: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n    71: rustc::ty::context::tls::enter_global\r\n    72: rustc_interface::interface::run_compiler_in_existing_thread_pool\r\n  note: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\n  note: the compiler unexpectedly panicked. this is a bug.\r\n\r\n  note: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\n  note: rustc 1.43.1 (8d69840ab 2020-05-04) running on x86_64-apple-darwin\r\n\r\n  query stack during panic:\r\n  #0 [codegen_fulfill_obligation] checking if `std::iter::IntoIterator` fulfills its obligations\r\n  #1 [mir_built] building MIR for\r\n  #2 [unsafety_check_result] unsafety-checking `Set::into_iter`\r\n  #3 [mir_const] processing `Set::into_iter`\r\n  #4 [mir_validated] processing `Set::into_iter`\r\n  #5 [mir_borrowck] borrow-checking `Set::into_iter`\r\n  #6 [type_of] processing `Set::into_iter::{{opaque}}#0`\r\n  #7 [check_mod_item_types] checking item types in top-level module\r\n  #8 [analysis] running analysis passes on this crate\r\n  end of query stack\r\n  error: aborting due to previous error\r\n  ```\r\n\r\n## Meta\r\n- `rustc --version --verbose`:\r\n  ```\r\n  % rustc --version --verbose\r\n  rustc 1.43.1 (8d69840ab 2020-05-04)\r\n  binary: rustc\r\n  commit-hash: 8d69840ab92ea7f4d323420088dd8c9775f180cd\r\n  commit-date: 2020-05-04\r\n  host: x86_64-apple-darwin\r\n  release: 1.43.1\r\n  LLVM version: 9.0\r\n  ```", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/72554/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/72554/timeline", "performed_via_github_app": null, "state_reason": "completed"}