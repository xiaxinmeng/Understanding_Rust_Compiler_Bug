{"url": "https://api.github.com/repos/rust-lang/rust/issues/63647", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/63647/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/63647/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/63647/events", "html_url": "https://github.com/rust-lang/rust/issues/63647", "id": 481820893, "node_id": "MDU6SXNzdWU0ODE4MjA4OTM=", "number": 63647, "title": "inline attribute on async fn doesn't work properly", "user": {"login": "comex", "id": 47517, "node_id": "MDQ6VXNlcjQ3NTE3", "avatar_url": "https://avatars.githubusercontent.com/u/47517?v=4", "gravatar_id": "", "url": "https://api.github.com/users/comex", "html_url": "https://github.com/comex", "followers_url": "https://api.github.com/users/comex/followers", "following_url": "https://api.github.com/users/comex/following{/other_user}", "gists_url": "https://api.github.com/users/comex/gists{/gist_id}", "starred_url": "https://api.github.com/users/comex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/comex/subscriptions", "organizations_url": "https://api.github.com/users/comex/orgs", "repos_url": "https://api.github.com/users/comex/repos", "events_url": "https://api.github.com/users/comex/events{/privacy}", "received_events_url": "https://api.github.com/users/comex/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 234948, "node_id": "MDU6TGFiZWwyMzQ5NDg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-attributes", "name": "A-attributes", "color": "f7e101", "default": false, "description": "Area: #[attributes(..)]"}, {"id": 234956, "node_id": "MDU6TGFiZWwyMzQ5NTY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-codegen", "name": "A-codegen", "color": "f7e101", "default": false, "description": "Area: Code generation"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1049510487, "node_id": "MDU6TGFiZWwxMDQ5NTEwNDg3", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-async-await", "name": "A-async-await", "color": "f7e101", "default": false, "description": "Area: Async & Await"}, {"id": 1259721467, "node_id": "MDU6TGFiZWwxMjU5NzIxNDY3", "url": "https://api.github.com/repos/rust-lang/rust/labels/AsyncAwait-Triaged", "name": "AsyncAwait-Triaged", "color": "d4c5f9", "default": false, "description": "Async-await issues that have been triaged during a working group meeting."}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-16T23:40:36Z", "updated_at": "2019-08-17T14:35:29Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "[Playground link](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=3e8d2c145ac7edf44e6eb84ae65e1390)\r\n\r\nIn the playground, an `async fn` is marked `#[inline(always)]`:\r\n```rust\r\n#[inline(always)]\r\npub async fn test() -> i32 {\r\n    12345\r\n}\r\n```\r\n\r\nHowever, if you compile it in debug mode (where inlining only happens for `#[inline(always)]` functions), and search for `12345` in the generated assembly, you can see that it is not inlined.\r\n\r\nIndeed, there are multiple levels of function calls that are not inlined:\r\n\r\n`run_it`\r\n\u2192 `GenFuture<T>::poll`\r\n\u2192 `std::future::set_task_context`\r\n\u2192 `GenFuture<T>::poll::{closure}`\r\n\u2192 `playground::test::{{closure}}`\r\n\r\nThat last closure is the generator that contains the actual body of `test`.\r\n\r\n`#[inline(always)]` *is* taking effect on the post-transformation function `test`, but all that does is initialize the generator struct.\r\n\r\nAs long as async is implemented based on generators, this will be hard to fix.  Even if the generator itself were marked `alwaysinline`, that wouldn't affect `GenFuture` or `set_task_context`, both of which are from `libstd`.\r\n\r\nRelated to #62918, since if you want an async fn to be `#[inline(always)]`, you probably also want to get rid of the TLS usage by `set_task_context`.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/63647/reactions", "total_count": 4, "+1": 4, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/63647/timeline", "performed_via_github_app": null, "state_reason": null}