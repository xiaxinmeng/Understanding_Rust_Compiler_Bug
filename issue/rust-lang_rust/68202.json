{"url": "https://api.github.com/repos/rust-lang/rust/issues/68202", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/68202/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/68202/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/68202/events", "html_url": "https://github.com/rust-lang/rust/issues/68202", "id": 549335827, "node_id": "MDU6SXNzdWU1NDkzMzU4Mjc=", "number": 68202, "title": "Poor error/docs when attempting to constrain associated types in generic functions", "user": {"login": "nyanpasu64", "id": 913957, "node_id": "MDQ6VXNlcjkxMzk1Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/913957?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nyanpasu64", "html_url": "https://github.com/nyanpasu64", "followers_url": "https://api.github.com/users/nyanpasu64/followers", "following_url": "https://api.github.com/users/nyanpasu64/following{/other_user}", "gists_url": "https://api.github.com/users/nyanpasu64/gists{/gist_id}", "starred_url": "https://api.github.com/users/nyanpasu64/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nyanpasu64/subscriptions", "organizations_url": "https://api.github.com/users/nyanpasu64/orgs", "repos_url": "https://api.github.com/users/nyanpasu64/repos", "events_url": "https://api.github.com/users/nyanpasu64/events{/privacy}", "received_events_url": "https://api.github.com/users/nyanpasu64/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 149689562, "node_id": "MDU6TGFiZWwxNDk2ODk1NjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-associated-items", "name": "A-associated-items", "color": "f7e101", "default": false, "description": "Area: Associated items such as associated types and consts."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-01-14T05:06:52Z", "updated_at": "2020-01-14T10:54:16Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Works:\r\n\r\n```\r\nuse std::ops::Deref;\r\nfn f<T: Deref<Target=i32>>(px: T) {\r\n    let _x: i32 = *px;\r\n}\r\n```\r\n\r\nMy attempt at translating this to a logically equivalent statement fails:\r\n\r\n```\r\nuse std::ops::Deref;\r\nfn f<T: Deref>(px: T) where <T as Deref>::Target == i32 {\r\n    let _x: i32 = *px;\r\n}\r\n```\r\n\r\nError:\r\n\r\n```\r\n   Compiling playground v0.0.1 (/playground)\r\nerror: equality constraints are not yet supported in where clauses (see #20041)\r\n --> src/lib.rs:2:29\r\n  |\r\n2 | fn f<T: Deref>(px: T) where <T as Deref>::Target == i32 {\r\n  |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nerror[E0308]: mismatched types\r\n --> src/lib.rs:3:19\r\n  |\r\n3 |     let _x: i32 = *px;\r\n  |                   ^^^ expected i32, found associated type\r\n  |\r\n  = note: expected type `i32`\r\n             found type `<T as std::ops::Deref>::Target`\r\n  = note: consider constraining the associated type `<T as std::ops::Deref>::Target` to `i32`\r\n  = note: for more information, visit https://doc.rust-lang.org/book/ch19-03-advanced-traits.html\r\n\r\nerror: aborting due to 2 previous errors\r\n\r\nFor more information about this error, try `rustc --explain E0308`.\r\nerror: could not compile `playground`.\r\n```\r\n\r\nI ran into this issue on a plane flight without internet, and was unable to discover this myself. I think I tried `Deref<Result=i32>` which failed to compile because it's called Target and not Result (oops). However, the error message for my alternative formulation was not helpful.\r\n\r\nThe reference to issue #20041 suggests the working way to write this code: https://github.com/rust-lang/rust/issues/20041#issuecomment-68645136 `fn foo<I>(it: I) where I: Iterator<Item=Foo> {}`. However I did not have functioning Internet on the plane flight, and was relying on the docs (which, like the rustc error message, appear to be unhelpful).\r\n\r\nThe URL points to the second edition of the book. While DDG searching for `associated type constraint`, I came across the first edition book, https://doc.rust-lang.org/1.30.0/book/first-edition/associated-types.html#trait-objects-with-associated-types , which explains this syntax. The equivalent in the second edition, https://doc.rust-lang.org/book/ch19-03-advanced-traits.html, is linked in the rustc error message. However it is unhelpful for this situation, since it is inexplicably missing instructions on how to constrain associated types as parameters (like a T implementing a specific `Deref`). It only mentions `<PlaceholderType=ConcreteType>` in the context of default values for *input* types in trait *declarations*, not *output* types in trait *usages*.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/68202/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/68202/timeline", "performed_via_github_app": null, "state_reason": null}