{"url": "https://api.github.com/repos/rust-lang/rust/issues/71129", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/71129/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/71129/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/71129/events", "html_url": "https://github.com/rust-lang/rust/issues/71129", "id": 599614852, "node_id": "MDU6SXNzdWU1OTk2MTQ4NTI=", "number": 71129, "title": "Refactor CTFE and const-prop machines to share common code", "user": {"login": "vakaras", "id": 75347, "node_id": "MDQ6VXNlcjc1MzQ3", "avatar_url": "https://avatars.githubusercontent.com/u/75347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vakaras", "html_url": "https://github.com/vakaras", "followers_url": "https://api.github.com/users/vakaras/followers", "following_url": "https://api.github.com/users/vakaras/following{/other_user}", "gists_url": "https://api.github.com/users/vakaras/gists{/gist_id}", "starred_url": "https://api.github.com/users/vakaras/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vakaras/subscriptions", "organizations_url": "https://api.github.com/users/vakaras/orgs", "repos_url": "https://api.github.com/users/vakaras/repos", "events_url": "https://api.github.com/users/vakaras/events{/privacy}", "received_events_url": "https://api.github.com/users/vakaras/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 36996, "node_id": "MDU6TGFiZWwzNjk5Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-easy", "name": "E-easy", "color": "02e10c", "default": false, "description": "Call for participation: Experience needed to fix: Easy / not much (good first issue)"}, {"id": 37234, "node_id": "MDU6TGFiZWwzNzIzNA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-cleanup", "name": "C-cleanup", "color": "f5f1fd", "default": false, "description": "Category: PRs that clean code up or issues documenting cleanup."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1244499056, "node_id": "MDU6TGFiZWwxMjQ0NDk5MDU2", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-miri", "name": "A-miri", "color": "f7e101", "default": false, "description": "Area: The miri tool"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 17, "created_at": "2020-04-14T14:26:12Z", "updated_at": "2020-04-28T19:04:57Z", "closed_at": "2020-04-28T19:04:57Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "[Miri](https://github.com/rust-lang/miri), [CTFE](https://github.com/rust-lang/rust/blob/8e18e26f12b1e8b3e913b15278bf6185f0f61add/src/librustc_mir/const_eval/machine.rs#L169), and [const-prop](https://github.com/rust-lang/rust/blob/8e18e26f12b1e8b3e913b15278bf6185f0f61add/src/librustc_mir/transform/const_prop.rs#L163) are implemented by using a MIR interpreter that can be customized by implementing the [`Machine`](https://github.com/rust-lang/rust/blob/8e18e26f12b1e8b3e913b15278bf6185f0f61add/src/librustc_mir/interpret/machine.rs#L80) trait. Currently, the CTFE and const-prop machines have quite a bit of common code that is duplicated. It would be nice to reduce the code duplication.\r\n\r\nOne idea that could be used to reduce the code duplication would be to add a new trait `CommonMachine` and put all the common implementation into it:\r\n```rust\r\npub trait CommonMachine<'mir, 'tcx>: Sized {\r\n\r\n    /// Borrow the current thread's stack.\r\n    fn stack(\r\n        ecx: &'a InterpCx<'mir, 'tcx, Self>,\r\n    ) -> &'a [Frame<'mir, 'tcx, (), ()>];\r\n\r\n    /// Mutably borrow the current thread's stack.\r\n    fn stack_mut(\r\n        ecx: &'a mut InterpCx<'mir, 'tcx, Self>,\r\n    ) -> &'a mut Vec<Frame<'mir, 'tcx, (), ()>>;\r\n\r\n    // Other methods that require custom implementations for the CTFE and const-prop machines.\r\n}\r\n\r\nimpl<'mir, 'tcx, T: CommonMachine<'mir, 'tcx>> super::machine::Machine<'mir, 'tcx> for T {\r\n\r\n    type MemoryKind = !;\r\n    type PointerTag = ();\r\n    type ExtraFnVal = !;\r\n\r\n    type FrameExtra = ();\r\n    type MemoryExtra = ();\r\n    type AllocExtra = ();\r\n\r\n    #[inline(always)]\r\n    fn enforce_alignment(_memory_extra: &Self::MemoryExtra) -> bool {\r\n        false\r\n    }\r\n\r\n    /// Borrow the current thread's stack.\r\n    fn stack(\r\n        ecx: &'a InterpCx<'mir, 'tcx, Self>,\r\n    ) -> &'a [Frame<'mir, 'tcx, (), ()>] {\r\n        CommonMachine::stack(ecx)\r\n    }\r\n\r\n    /// Mutably borrow the current thread's stack.\r\n    fn stack_mut(\r\n        ecx: &'a mut InterpCx<'mir, 'tcx, Self>,\r\n    ) -> &'a mut Vec<Frame<'mir, 'tcx, (), ()>> {\r\n        CommonMachine::stack_mut(ecx)\r\n    }\r\n\r\n    // TODO: other methods\r\n}\r\n```", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/71129/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/71129/timeline", "performed_via_github_app": null, "state_reason": "completed"}