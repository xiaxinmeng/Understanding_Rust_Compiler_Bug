{"url": "https://api.github.com/repos/rust-lang/rust/issues/85890", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/85890/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/85890/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/85890/events", "html_url": "https://github.com/rust-lang/rust/issues/85890", "id": 908356751, "node_id": "MDU6SXNzdWU5MDgzNTY3NTE=", "number": 85890, "title": "`Zip` implementation optimization using `TrustedRandomAccess` can remove observable side-effects.", "user": {"login": "steffahn", "id": 3986214, "node_id": "MDQ6VXNlcjM5ODYyMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3986214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steffahn", "html_url": "https://github.com/steffahn", "followers_url": "https://api.github.com/users/steffahn/followers", "following_url": "https://api.github.com/users/steffahn/following{/other_user}", "gists_url": "https://api.github.com/users/steffahn/gists{/gist_id}", "starred_url": "https://api.github.com/users/steffahn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steffahn/subscriptions", "organizations_url": "https://api.github.com/users/steffahn/orgs", "repos_url": "https://api.github.com/users/steffahn/repos", "events_url": "https://api.github.com/users/steffahn/events{/privacy}", "received_events_url": "https://api.github.com/users/steffahn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 889209675, "node_id": "MDU6TGFiZWw4ODkyMDk2NzU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-iterators", "name": "A-iterators", "color": "f7e101", "default": false, "description": "Area: Iterators"}, {"id": 2011781731, "node_id": "MDU6TGFiZWwyMDExNzgxNzMx", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs", "name": "T-libs", "color": "bfd4f2", "default": false, "description": "Relevant to the library team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-06-01T14:30:46Z", "updated_at": "2021-06-01T14:41:34Z", "closed_at": "2021-06-01T14:41:34Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "```rust\r\nfn f(x: impl Iterator) {\r\n    let y = x.zip(<[()]>::iter(&[]));\r\n    let mut z = y.zip(<[()]>::iter(&[]));\r\n    z.next();\r\n}\r\n\r\nfn main() {\r\n    let x = [1, 2, 3].iter().map(|_| println!(\"  hi!\"));\r\n    println!(\"first:\");\r\n    f(Box::new(x.clone())); // prints \"hi!\" (Box doesn\u2019t implement TrustedRandomAccess)\r\n    println!(\"second:\");\r\n    f(x.clone()); // doesn\u2019t print \"hi!\" (Cloned<slice::Iter> implements TrustedRandomAccess)\r\n    println!(\"done.\");\r\n}\r\n```\r\n```\r\nfirst:\r\n  hi!\r\nsecond:\r\ndone.\r\n```\r\n([playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=c05cdb4ff85dd7022cb9d8e1ba8ea6d0))\r\n\r\nThis is a flaw in the current specialized implementation of `next()`.\r\n```rust\r\nimpl<A, B> ZipImpl<A, B> for Zip<A, B>\r\nwhere\r\n    A: TrustedRandomAccess + Iterator,\r\n    B: TrustedRandomAccess + Iterator,\r\n{\r\n    #[inline]\r\n    fn next(&mut self) -> Option<(A::Item, B::Item)> {\r\n        if self.index < self.len {\r\n            let i = self.index;\r\n            self.index += 1;\r\n            // SAFETY: `i` is smaller than `self.len`, thus smaller than `self.a.len()` and `self.b.len()`\r\n            unsafe {\r\n                Some((self.a.__iterator_get_unchecked(i), self.b.__iterator_get_unchecked(i)))\r\n            }\r\n        } else if A::MAY_HAVE_SIDE_EFFECT && self.index < self.a_len {\r\n            let i = self.index;\r\n            self.index += 1;\r\n            self.len += 1;\r\n            // match the base implementation's potential side effects\r\n            // SAFETY: we just checked that `i` < `self.a.len()`\r\n            unsafe {\r\n                self.a.__iterator_get_unchecked(i);\r\n            }\r\n            None\r\n        } else {\r\n            None\r\n        }\r\n    }\r\n    \u2026\r\n}\r\n ```\r\n \r\n This implementation makes sure to keep trying to evaluate the first iterator in the `Zip` like the short-circuiting default implementation\r\n ```rust\r\n impl<A, B> ZipImpl<A, B> for Zip<A, B>\r\nwhere\r\n    A: Iterator,\r\n    B: Iterator,\r\n{\r\n     #[inline]\r\n    default fn next(&mut self) -> Option<(A::Item, B::Item)> {\r\n        let x = self.a.next()?;\r\n        let y = self.b.next()?;\r\n        Some((x, y))\r\n    }\r\n    \u2026\r\n}\r\n ```\r\n \r\n However, the default implementation does it differently: It _keeps polling_ the first iterator even if it\u2019s empty as indicated by its `size_hint`, whereas the `TrustedRandomAccess`-using implementation stops as soon as the first iterator is known to be empty based on size calculations.\r\n \r\n @rustbot label T-libs-impl, A-iterators", "closed_by": {"login": "steffahn", "id": 3986214, "node_id": "MDQ6VXNlcjM5ODYyMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3986214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steffahn", "html_url": "https://github.com/steffahn", "followers_url": "https://api.github.com/users/steffahn/followers", "following_url": "https://api.github.com/users/steffahn/following{/other_user}", "gists_url": "https://api.github.com/users/steffahn/gists{/gist_id}", "starred_url": "https://api.github.com/users/steffahn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steffahn/subscriptions", "organizations_url": "https://api.github.com/users/steffahn/orgs", "repos_url": "https://api.github.com/users/steffahn/repos", "events_url": "https://api.github.com/users/steffahn/events{/privacy}", "received_events_url": "https://api.github.com/users/steffahn/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/85890/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/85890/timeline", "performed_via_github_app": null, "state_reason": "completed"}