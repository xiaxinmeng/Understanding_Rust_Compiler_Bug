{"url": "https://api.github.com/repos/rust-lang/rust/issues/1994", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/1994/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/1994/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/1994/events", "html_url": "https://github.com/rust-lang/rust/issues/1994", "id": 3675357, "node_id": "MDU6SXNzdWUzNjc1MzU3", "number": 1994, "title": "self types unsound with boxed ifaces", "user": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2012-03-15T23:34:00Z", "updated_at": "2012-03-16T14:47:52Z", "closed_at": "2012-03-16T14:47:52Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently, if a method on an iface mentions the type `self`, we forbid that method from being called via a boxed iface.  But this restriction can be worked around by using generic types:\n\n```\n    iface i { fn foo() -> self<>; }\n    fn foo<T:i>(v: T) -> T {\n        ret v.foo();\n    }\n    impl of i for uint {\n        fn foo() -> uint { ret self; }\n    }\n    fn main() {\n        let x: i = 3u as i;\n        let y = foo(x); // y has type i, but is in fact a uint\n    }\n```\n\nA couple of solutions spring to mind, but on IRC we discussed saying that if an iface `i` includes a self type, then instances of `i` do not implement `i`.\n", "closed_by": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/1994/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/1994/timeline", "performed_via_github_app": null, "state_reason": "completed"}