{"url": "https://api.github.com/repos/rust-lang/rust/issues/18087", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/18087/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/18087/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/18087/events", "html_url": "https://github.com/rust-lang/rust/issues/18087", "id": 45956927, "node_id": "MDU6SXNzdWU0NTk1NjkyNw==", "number": 18087, "title": "error: mismatched types: expected `core::result::Result<T,syntax::ParseErrorKind>`, found `core::result::Result<T,syntax::ParseErrorKind>` (expected type parameter, found type parameter)", "user": {"login": "kinghajj", "id": 3409, "node_id": "MDQ6VXNlcjM0MDk=", "avatar_url": "https://avatars.githubusercontent.com/u/3409?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kinghajj", "html_url": "https://github.com/kinghajj", "followers_url": "https://api.github.com/users/kinghajj/followers", "following_url": "https://api.github.com/users/kinghajj/following{/other_user}", "gists_url": "https://api.github.com/users/kinghajj/gists{/gist_id}", "starred_url": "https://api.github.com/users/kinghajj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kinghajj/subscriptions", "organizations_url": "https://api.github.com/users/kinghajj/orgs", "repos_url": "https://api.github.com/users/kinghajj/repos", "events_url": "https://api.github.com/users/kinghajj/events{/privacy}", "received_events_url": "https://api.github.com/users/kinghajj/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-10-16T07:38:27Z", "updated_at": "2014-10-16T15:32:51Z", "closed_at": "2014-10-16T15:32:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "I started working on my own toy parser combinator implementation in Rust (because why not?), and ran into what I'm 99% sure is a compiler bug (in \"rustc 0.13.0-dev (126f224d9 2014-10-16 01:22:19 +0000)\").\n\n``` rust\npub struct ParseState {\n  input: Vec<char>,\n  cur: uint,\n}\n\npub enum ParseErrorKind {\n  BadMatch,\n}\n\npub struct ParseError {\n  kind: ParseErrorKind,\n  last: ParseState,\n}\n\npub trait ParserImpl<T> {\n  fn run(&self, state: ParseState) -> Result<(T, ParseState), ParseError>;\n}\n\npub struct Parser<T> {\n  pimpl: Box<ParserImpl<T> + Send>,\n}\n\nimpl<T> Parser<T> {\n  pub fn new<P: ParserImpl<T> + Send>(pimpl: P) -> Parser<T> {\n    Parser { pimpl: box pimpl }\n  }\n\n  pub fn parse<T, S: Str>(&self, input: S) -> Result<T, ParseErrorKind> {\n    let init_state = ParseState { input: input.as_slice().chars().collect(), cur: 0 };\n    // error: mismatched types:\n    // expected `core::result::Result<T,syntax::ParseErrorKind>`,\n    // found `core::result::Result<T,syntax::ParseErrorKind>`\n    // (expected type parameter, found type parameter)\n    match self.run(init_state) {\n      Ok((t, _)) => Ok(t),\n      _ => Err(BadMatch),\n    }\n  }\n}\n\nimpl<T> ParserImpl<T> for Parser<T> {\n  fn run(&self, state: ParseState) -> Result<(T, ParseState), ParseError> {\n    self.pimpl.run(state)\n  }\n}\n```\n\nAs you can see, the 'expected' and 'found' types are the same, yet the compiler has issued a type error!\n", "closed_by": {"login": "kinghajj", "id": 3409, "node_id": "MDQ6VXNlcjM0MDk=", "avatar_url": "https://avatars.githubusercontent.com/u/3409?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kinghajj", "html_url": "https://github.com/kinghajj", "followers_url": "https://api.github.com/users/kinghajj/followers", "following_url": "https://api.github.com/users/kinghajj/following{/other_user}", "gists_url": "https://api.github.com/users/kinghajj/gists{/gist_id}", "starred_url": "https://api.github.com/users/kinghajj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kinghajj/subscriptions", "organizations_url": "https://api.github.com/users/kinghajj/orgs", "repos_url": "https://api.github.com/users/kinghajj/repos", "events_url": "https://api.github.com/users/kinghajj/events{/privacy}", "received_events_url": "https://api.github.com/users/kinghajj/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/18087/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/18087/timeline", "performed_via_github_app": null, "state_reason": "completed"}