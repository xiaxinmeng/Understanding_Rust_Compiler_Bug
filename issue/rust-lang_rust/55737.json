{"url": "https://api.github.com/repos/rust-lang/rust/issues/55737", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/55737/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/55737/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/55737/events", "html_url": "https://github.com/rust-lang/rust/issues/55737", "id": 378112287, "node_id": "MDU6SXNzdWUzNzgxMTIyODc=", "number": 55737, "title": "Distributed libLLVM conflicts with system libraries", "user": {"login": "rinon", "id": 970543, "node_id": "MDQ6VXNlcjk3MDU0Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/970543?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rinon", "html_url": "https://github.com/rinon", "followers_url": "https://api.github.com/users/rinon/followers", "following_url": "https://api.github.com/users/rinon/following{/other_user}", "gists_url": "https://api.github.com/users/rinon/gists{/gist_id}", "starred_url": "https://api.github.com/users/rinon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rinon/subscriptions", "organizations_url": "https://api.github.com/users/rinon/orgs", "repos_url": "https://api.github.com/users/rinon/repos", "events_url": "https://api.github.com/users/rinon/events{/privacy}", "received_events_url": "https://api.github.com/users/rinon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37547, "node_id": "MDU6TGFiZWwzNzU0Nw==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-linkage", "name": "A-linkage", "color": "f7e101", "default": false, "description": "Area: linking into static, shared libraries and binaries"}, {"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-11-07T02:07:43Z", "updated_at": "2019-08-16T16:55:01Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Now that `libLLVM.so` is distributed with rust, we are unable to dynamically link a rust binary against a different `libLLVM.so` library. The rustlib directory containing `libLLVM` is prepended to the linker search path, and I don't see a good way to ask cargo to add a search path earlier than the rustlib is added. It looks to me like the rustlib directory is added here: https://github.com/rust-lang/rust/blob/15d770400eed9018f18bddf83dd65cb7789280a5/src/librustc_codegen_llvm/back/link.rs#L1044\r\n\r\nI noticed that support for appending a suffix to the LLVM libs was added in https://github.com/rust-lang/rust/pull/53987. Can we turn that on for CI so the prebuilt distributions have a suffix on the library?\r\n\r\nUnfortunately, the suffix won't actually fix this issue on MacOS, since the LLVM build does not append the suffix (or any version info) to the name of the dynamic library when building on MacOS: (see https://github.com/rust-lang/llvm/blob/7051ead40a5f825878b59bf08d4e768be9e99a4a/cmake/modules/AddLLVM.cmake#L520)", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/55737/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/55737/timeline", "performed_via_github_app": null, "state_reason": null}