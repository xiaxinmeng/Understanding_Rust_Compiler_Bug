{"url": "https://api.github.com/repos/rust-lang/rust/issues/74096", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/74096/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/74096/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/74096/events", "html_url": "https://github.com/rust-lang/rust/issues/74096", "id": 651539392, "node_id": "MDU6SXNzdWU2NTE1MzkzOTI=", "number": 74096, "title": "Wrong Debug Line Information at O3", "user": {"login": "lucamassarelli", "id": 12794148, "node_id": "MDQ6VXNlcjEyNzk0MTQ4", "avatar_url": "https://avatars.githubusercontent.com/u/12794148?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lucamassarelli", "html_url": "https://github.com/lucamassarelli", "followers_url": "https://api.github.com/users/lucamassarelli/followers", "following_url": "https://api.github.com/users/lucamassarelli/following{/other_user}", "gists_url": "https://api.github.com/users/lucamassarelli/gists{/gist_id}", "starred_url": "https://api.github.com/users/lucamassarelli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lucamassarelli/subscriptions", "organizations_url": "https://api.github.com/users/lucamassarelli/orgs", "repos_url": "https://api.github.com/users/lucamassarelli/repos", "events_url": "https://api.github.com/users/lucamassarelli/events{/privacy}", "received_events_url": "https://api.github.com/users/lucamassarelli/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 203130, "node_id": "MDU6TGFiZWwyMDMxMzA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-debuginfo", "name": "A-debuginfo", "color": "f7e101", "default": false, "description": "Area: Debugging information in compiled programs (DWARF, PDB, etc.)"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-07-06T13:28:33Z", "updated_at": "2020-08-08T06:45:51Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "LLDB show call to function bar while the code is calling function foo.\r\n\r\n```bash\r\n\r\n$ cat -n a.rs\r\n     1  // run-pass\r\n     2  // ignore-cloudabi no std::env\r\n     3  // ignore-wasm32 issue 42629\r\n     4\r\n     5  #[inline(never)]\r\n     6  fn foo(a: f32, b: f32) -> f32 {\r\n     7      a % b\r\n     8  }\r\n     9\r\n    10  #[inline(never)]\r\n    11  fn bar(a: f32, b: f32) -> f32 {\r\n    12      ((a as f64) % (b as f64)) as f32\r\n    13  }\r\n    14\r\n    15  fn main() {\r\n    16      let unknown_float = std::env::args().len();\r\n    17      println!(\"{}\", foo(4.0, unknown_float as f32));\r\n    18      println!(\"{}\", foo(5.0, (unknown_float as f32) + 1.0));\r\n    19      println!(\"{}\", bar(6.0, (unknown_float as f32) + 2.0));\r\n    20      println!(\"{}\", bar(7.0, (unknown_float as f32) + 3.0));\r\n    21  }\r\n\r\n$ cat a.rs \r\n// run-pass\r\n// ignore-cloudabi no std::env\r\n// ignore-wasm32 issue 42629\r\n#[inline(never)]\r\nfn foo(a: f32, b: f32) -> f32 {\r\n    a % b\r\n}\r\n#[inline(never)]\r\nfn bar(a: f32, b: f32) -> f32 {\r\n    ((a as f64) % (b as f64)) as f32\r\n}\r\nfn main() {\r\n    let unknown_float = std::env::args().len();\r\n    println!(\"{}\", foo(4.0, unknown_float as f32));\r\n    println!(\"{}\", foo(5.0, (unknown_float as f32) + 1.0));\r\n    println!(\"{}\", bar(6.0, (unknown_float as f32) + 2.0));\r\n    println!(\"{}\", bar(7.0, (unknown_float as f32) + 3.0));\r\n}\r\n\r\n$ rustc --version\r\nrustc 1.46.0-nightly (3503f565e 2020-07-02)\r\n\r\n$ lldb -v\r\nlldb version 11.0.0\r\n  clang revision ee26a31e7b02e124d71091d47f2ae624774e5e0a\r\n  llvm revision ee26a31e7b02e124d71091d47f2ae624774e5e0a\r\nroot@439ed1cd1caf:/home/stepping/output# \r\n\r\n$ rustc -g -C opt-level=3 -o opt a.rs\r\n\r\n$ lldb opt\r\n(lldb) target create \"opt\"\r\nCurrent executable set to 'opt' (x86_64).\r\n(lldb) b a::main\r\nBreakpoint 1: where = opt`a::main::h1122ef72fcd4218b + 18 at a.rs:16:25, address = 0x0000000000004b72\r\n(lldb) r\r\nProcess 82 launched: 'opt' (x86_64)\r\nProcess 82 stopped\r\n* thread #1, name = 'opt', stop reason = breakpoint 1.1\r\n    frame #0: 0x0000555555558b72 opt`a::main::h1122ef72fcd4218b at a.rs:16:25\r\n   13   }\r\n   14  \r\n   15   fn main() {\r\n-> 16       let unknown_float = std::env::args().len();\r\n   17       println!(\"{}\", foo(4.0, unknown_float as f32));\r\n   18       println!(\"{}\", foo(5.0, (unknown_float as f32) + 1.0));\r\n   19       println!(\"{}\", bar(6.0, (unknown_float as f32) + 2.0));\r\n(lldb) n\r\nProcess 82 stopped\r\n* thread #1, name = 'opt', stop reason = step over\r\n    frame #0: 0x0000555555558c08 opt`a::main::h1122ef72fcd4218b at a.rs:17:29\r\n   14  \r\n   15   fn main() {\r\n   16       let unknown_float = std::env::args().len();\r\n-> 17       println!(\"{}\", foo(4.0, unknown_float as f32));\r\n   18       println!(\"{}\", foo(5.0, (unknown_float as f32) + 1.0));\r\n   19       println!(\"{}\", bar(6.0, (unknown_float as f32) + 2.0));\r\n   20       println!(\"{}\", bar(7.0, (unknown_float as f32) + 3.0));\r\n(lldb) s\r\nProcess 82 stopped\r\n* thread #1, name = 'opt', stop reason = step in\r\n    frame #0: 0x0000555555558b50 opt`a::bar::hffc1dafd692882d8(a=4, b=1) at a.rs:12:5\r\n   9   \r\n   10   #[inline(never)]\r\n   11   fn bar(a: f32, b: f32) -> f32 {\r\n-> 12       ((a as f64) % (b as f64)) as f32\r\n   13   }\r\n   14  \r\n   15   fn main() {\r\n(lldb) \r\n\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/74096/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/74096/timeline", "performed_via_github_app": null, "state_reason": null}