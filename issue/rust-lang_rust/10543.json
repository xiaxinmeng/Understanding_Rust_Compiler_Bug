{"url": "https://api.github.com/repos/rust-lang/rust/issues/10543", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/10543/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/10543/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/10543/events", "html_url": "https://github.com/rust-lang/rust/issues/10543", "id": 22830428, "node_id": "MDU6SXNzdWUyMjgzMDQyOA==", "number": 10543, "title": "linking problem on extern \"C\" fn called via trait method (on type parameter) in other crate", "user": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37547, "node_id": "MDU6TGFiZWwzNzU0Nw==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-linkage", "name": "A-linkage", "color": "f7e101", "default": false, "description": "Area: linking into static, shared libraries and binaries"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2013-11-18T12:05:41Z", "updated_at": "2014-06-16T21:56:31Z", "closed_at": "2013-12-01T00:25:39Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "While spending some time playing with a ncurses wrapper library (one of many), I encountered the following odd linking problem.  I have one crate which attempts to link to the system ncurses library via `#[link_args=\"-lncurses\"]`, and then a main program that pulls in the first crate.\n\nHowever, the crate that links to the system ncurses library is also exposing functionality via type-parametric methods, and something seems to go wrong with the linkage due to this, AFAICT.\n\nHere is the example:\n\nmain crate (call it `ncurses.rs`):\n\n``` rust\n#[link(name=\"ncurses\",vers=\"5.7\")];\n\nuse std::libc::c_int;\nuse ncurses_core::{A_NORMAL, A_STANDOUT, attrset};\n\nmod ncurses_core {\n    use std::libc::c_int;\n\n    #[link_args = \"-lncurses\"]\n    extern { pub fn attrset (_:c_int) -> c_int; }\n\n    pub static A_NORMAL: c_int     = 0;\n    pub static A_STANDOUT: c_int   = (1u << 16) as c_int;\n}\n\npub struct Context;\n\npub enum attr { normal = A_NORMAL, standout = A_STANDOUT }\n\n#[cfg(not(show_bug))]\nimpl Context {\n    pub fn attrset2(&mut self, attrs: attrv) {\n        let i = attrs.encode_direct();\n        unsafe { attrset(i); }\n    }\n}\n\n#[cfg(show_bug)]\nimpl Context {\n    pub fn attrset2<A:EncodesAttrs>(&mut self, attrs: A) {\n        let i = attrs.encode_via_trait();\n        unsafe { attrset(i); }\n    }\n}\n\npub trait EncodesAttrs { fn encode_via_trait(&self) -> c_int; }\n\nimpl<'a> EncodesAttrs for attrv<'a> {\n    fn encode_via_trait(&self) -> c_int { encode_attrs(self.contents) }\n}\n\npub struct attrv<'a> { contents: &'a [attr] }\npub fn attrv<'a>(av: &'a [attr]) -> attrv<'a> { attrv{ contents: av } }\n\nimpl<'a> attrv<'a> {\n    pub fn encode_direct(&self) -> c_int { encode_attrs(self.contents) }\n}\n\nfn encode_attrs(_attrs: &[attr]) -> c_int { 0 }\n```\n\nmain program (`ncurses-intro.rs`):\n\n``` rust\nextern mod ncurses;\n\nfn main() {\n    let mut context = ncurses::Context;\n    context.attrset2(ncurses::attrv(&[ncurses::standout]));\n}\n```\n\nInvocation that works (by _sidestepping_ type-parametricity):\n\n```\n% rustc --lib ncurses.rs && rustc -L. ncurses-intro.rs\nwarning: missing crate link meta `package_id`, using `ncurses` as default\n```\n\nInvocation that illustrates the bug (by using the desired type parametric form):\n\n```\n% rustc --cfg show_bug --lib ncurses.rs && rustc -L. ncurses-intro.rs\nwarning: missing crate link meta `package_id`, using `ncurses` as default\nerror: linking with `cc` failed: exit code: 1\nnote: cc arguments: -L/Users/fklock/opt/rust-dbg/lib/rustc/x86_64-apple-darwin/lib -m64 -o ncurses-intro ncurses-intro.o -L/Users/fklock/opt/rust-dbg/lib/rustc/x86_64-apple-darwin/lib -lstd-6425b930ca146ae9-0.9-pre -L/Users/fklock/opt/rust-dbg/lib/rustc/x86_64-apple-darwin/lib -lrustuv-a13edc95d75df17-0.9-pre -L. -lncurses-dd4798ddf43ebf9-5.7 -L. -L/Users/fklock/Dev/Rust/rust-curses/.rust -L/Users/fklock/Dev/Rust/rust-curses -lmorestack -lrustrt -Wl,-rpath,@loader_path/../../../opt/rust-dbg/lib/rustc/x86_64-apple-darwin/lib -Wl,-rpath,@loader_path/. -Wl,-rpath,/Users/fklock/opt/rust-dbg/lib/rustc/x86_64-apple-darwin/lib -Wl,-rpath,/Users/fklock/Dev/Rust/rust-curses\nnote: ld: warning: directory not found for option '-L/Users/fklock/Dev/Rust/rust-curses/.rust'\nUndefined symbols for architecture x86_64:\n  \"_attrset\", referenced from:\n      Context::attrset2::h3513932d42d079afxaM::v0.0 in ncurses-intro.o\nld: symbol(s) not found for architecture x86_64\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\n\nerror: aborting due to previous error\ntask 'rustc' failed at 'explicit failure', /Users/fklock/Dev/Mozilla/rust.git/src/libsyntax/diagnostic.rs:101\ntask '<main>' failed at 'explicit failure', /Users/fklock/Dev/Mozilla/rust.git/src/librustc/lib.rs:396\n```\n", "closed_by": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/10543/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/10543/timeline", "performed_via_github_app": null, "state_reason": "completed"}