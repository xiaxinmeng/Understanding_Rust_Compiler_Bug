{"url": "https://api.github.com/repos/rust-lang/rust/issues/47665", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/47665/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/47665/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/47665/events", "html_url": "https://github.com/rust-lang/rust/issues/47665", "id": 290617023, "node_id": "MDU6SXNzdWUyOTA2MTcwMjM=", "number": 47665, "title": "2x benchmark loss in rayon-hash from multiple codegen-units", "user": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 234956, "node_id": "MDU6TGFiZWwyMzQ5NTY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-codegen", "name": "A-codegen", "color": "f7e101", "default": false, "description": "Area: Code generation"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2018-01-22T21:13:13Z", "updated_at": "2022-07-18T19:03:21Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "I'm seeing a huge slowdown in [rayon-hash](https://github.com/rayon-rs/rayon-hash) benchmarks, resolved with `-Ccodegen-units=1`.\r\n\r\n```\r\n$ rustc -Vv\r\nrustc 1.25.0-nightly (97520ccb1 2018-01-21)\r\nbinary: rustc\r\ncommit-hash: 97520ccb101609af63f29919bb0a39115269c89e\r\ncommit-date: 2018-01-21\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.25.0-nightly\r\nLLVM version: 4.0\r\n\r\n$ cargo bench --bench set_sum\r\n   Compiling [...]\r\n    Finished release [optimized] target(s) in 5.51 secs\r\n     Running target/release/deps/set_sum-833cf161cf760670\r\n\r\nrunning 4 tests\r\ntest rayon_set_sum_parallel ... bench:   2,295,348 ns/iter (+/- 152,025)\r\ntest rayon_set_sum_serial   ... bench:   7,730,830 ns/iter (+/- 171,552)\r\ntest std_set_sum_parallel   ... bench:  10,038,209 ns/iter (+/- 188,189)\r\ntest std_set_sum_serial     ... bench:   7,733,258 ns/iter (+/- 134,850)\r\n\r\ntest result: ok. 0 passed; 0 failed; 0 ignored; 4 measured; 0 filtered out\r\n\r\n$ RUSTFLAGS=-Ccodegen-units=1 cargo bench --bench set_sum\r\n   Compiling [...]\r\n    Finished release [optimized] target(s) in 6.48 secs\r\n     Running target/release/deps/set_sum-833cf161cf760670\r\n\r\nrunning 4 tests\r\ntest rayon_set_sum_parallel ... bench:   1,092,732 ns/iter (+/- 105,979)\r\ntest rayon_set_sum_serial   ... bench:   6,152,751 ns/iter (+/- 83,103)\r\ntest std_set_sum_parallel   ... bench:   8,957,618 ns/iter (+/- 132,791)\r\ntest std_set_sum_serial     ... bench:   6,144,775 ns/iter (+/- 75,377)\r\n\r\ntest result: ok. 0 passed; 0 failed; 0 ignored; 4 measured; 0 filtered out\r\n```\r\n\r\n`rayon_set_sum_parallel` is the showcase for this crate, and it suffers the most from CGU.\r\n\r\nFrom profiling and disassembly, this seems to mostly be a lost inlining opportunity.  In the slower build, the profile is split 35% `bridge_unindexed_producer_consumer`, 34% `Iterator::fold`, 28% `Sum::sum`, and the hot loop in the first looks like:\r\n\r\n```asm\r\n 16.72 \u2502126d0:   cmpq   $0x0,(%r12,%rbx,8)\r\n  6.73 \u2502126d5: \u2193 jne    126e1 <rayon::iter::plumbing::bridge_unindexed_producer_consumer+0x201>\r\n 16.65 \u2502126d7:   inc    %rbx\r\n  0.00 \u2502126da:   cmp    %rbp,%rbx\r\n  7.20 \u2502126dd: \u2191 jb     126d0 <rayon::iter::plumbing::bridge_unindexed_producer_consumer+0x1f0>\r\n  0.05 \u2502126df: \u2193 jmp    1272f <rayon::iter::plumbing::bridge_unindexed_producer_consumer+0x24f>\r\n 26.93 \u2502126e1:   mov    0x0(%r13,%rbx,4),%eax\r\n  4.26 \u2502126e6:   movq   $0x1,0x38(%rsp)\r\n  2.27 \u2502126ef:   mov    %rax,0x40(%rsp)\r\n  1.88 \u2502126f4:   mov    %r14,%rdi\r\n  4.58 \u2502126f7: \u2192 callq  15b90 <<u64 as core::iter::traits::Sum>::sum>\r\n  0.68 \u2502126fc:   movq   $0x1,0x38(%rsp)\r\n  2.58 \u250212705:   mov    %r15,0x40(%rsp)\r\n  0.62 \u25021270a:   movq   $0x1,0x48(%rsp)\r\n  0.31 \u250212713:   mov    %rax,0x50(%rsp)\r\n  0.49 \u250212718:   movb   $0x0,0x58(%rsp)\r\n  2.50 \u25021271d:   xor    %esi,%esi\r\n  0.41 \u25021271f:   mov    %r14,%rdi\r\n  0.85 \u250212722: \u2192 callq  153f0 <<core::iter::Chain<A, B> as core::iter::iterator::Iterator>::fold>\r\n  1.30 \u250212727:   mov    %rax,%r15\r\n  2.16 \u25021272a: \u2191 jmp    126d7 <rayon::iter::plumbing::bridge_unindexed_producer_consumer+0x1f7>\r\n```\r\n\r\nWith CGU=1, 96% of the profile is in `bridge_unindexed_producer_consumer`, with this hot loop:\r\n\r\n```asm\r\n  2.28 \u25021426d:   test   %rbx,%rbx\r\n       \u250214270: \u2193 je     14296 <rayon::iter::plumbing::bridge_unindexed_producer_consumer+0x146>\r\n  5.40 \u250214272:   mov    (%rbx),%ebx\r\n  2.75 \u250214274:   add    %rbx,%rax\r\n  1.47 \u250214277:   lea    (%rdx,%rsi,4),%rbx\r\n  0.21 \u25021427b:   nopl   0x0(%rax,%rax,1)\r\n 29.56 \u250214280:   cmp    %rdi,%rsi\r\n  0.04 \u250214283: \u2193 jae    14296 <rayon::iter::plumbing::bridge_unindexed_producer_consumer+0x146>\r\n  2.87 \u250214285:   add    $0x4,%rbx\r\n 20.22 \u250214289:   cmpq   $0x0,(%rcx,%rsi,8)\r\n  1.48 \u25021428e:   lea    0x1(%rsi),%rsi\r\n  8.00 \u250214292: \u2191 je     14280 <rayon::iter::plumbing::bridge_unindexed_producer_consumer+0x130>\r\n 25.25 \u250214294: \u2191 jmp    1426d <rayon::iter::plumbing::bridge_unindexed_producer_consumer+0x11d>\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/47665/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/47665/timeline", "performed_via_github_app": null, "state_reason": null}