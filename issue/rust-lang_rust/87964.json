{"url": "https://api.github.com/repos/rust-lang/rust/issues/87964", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/87964/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/87964/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/87964/events", "html_url": "https://github.com/rust-lang/rust/issues/87964", "id": 968627937, "node_id": "MDU6SXNzdWU5Njg2Mjc5Mzc=", "number": 87964, "title": "ICE const generic with where clause", "user": {"login": "PsychicNoodles", "id": 1944082, "node_id": "MDQ6VXNlcjE5NDQwODI=", "avatar_url": "https://avatars.githubusercontent.com/u/1944082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PsychicNoodles", "html_url": "https://github.com/PsychicNoodles", "followers_url": "https://api.github.com/users/PsychicNoodles/followers", "following_url": "https://api.github.com/users/PsychicNoodles/following{/other_user}", "gists_url": "https://api.github.com/users/PsychicNoodles/gists{/gist_id}", "starred_url": "https://api.github.com/users/PsychicNoodles/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PsychicNoodles/subscriptions", "organizations_url": "https://api.github.com/users/PsychicNoodles/orgs", "repos_url": "https://api.github.com/users/PsychicNoodles/repos", "events_url": "https://api.github.com/users/PsychicNoodles/events{/privacy}", "received_events_url": "https://api.github.com/users/PsychicNoodles/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1282665911, "node_id": "MDU6TGFiZWwxMjgyNjY1OTEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-generics", "name": "A-const-generics", "color": "f7e101", "default": false, "description": "Area: const generics (parameters and arguments)"}, {"id": 1486687397, "node_id": "MDU6TGFiZWwxNDg2Njg3Mzk3", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-const_generics", "name": "F-const_generics", "color": "f9c0cc", "default": false, "description": "`#![feature(const_generics)]`"}, {"id": 2341291797, "node_id": "MDU6TGFiZWwyMzQxMjkxNzk3", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-generic_const_exprs", "name": "F-generic_const_exprs", "color": "f9c0cc", "default": false, "description": "`#![feature(generic_const_exprs)]`"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-08-12T11:26:03Z", "updated_at": "2021-12-05T03:41:20Z", "closed_at": "2021-12-05T03:41:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\nI found a compiler bug when trying out const generics on the nightly compiler. The key part here seems to be the `where [(); T::LENGTH]: Sized` addition as removing that allows it to build with no issues (the where clause is there so the `Container` struct can have a field that takes `T::LENGTH` as a type parameter). I also managed to replicate this in the Rust Playground: https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=65d8aa6be2347f0b9af2e5afb6e7d5c9.\r\n\r\nInterestingly, by adding `'static +` to both the `T` definitions a different error message appears, although I'm not sure if they're directly related or not. When I try to add that to `<details>` sections it seems to break GitHub Markdown, but you can find that in this Playground: https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=45a573b960365ffa48a56e0f246a43a8. If it would be better to open a separate issue for that I can do so as well.\r\n\r\n### Code\r\n\r\n```Rust\r\n#![feature(const_generics)]\r\n#![feature(const_evaluatable_checked)]\r\n\r\npub trait Target {\r\n    const LENGTH: usize;\r\n}\r\n\r\n\r\npub struct Container<T: Target>\r\nwhere\r\n    [(); T::LENGTH]: Sized,\r\n{\r\n    target: T,\r\n}\r\n\r\nimpl<T: Target> Container<T>\r\nwhere\r\n    [(); T::LENGTH]: Sized,\r\n{\r\n    pub fn start(\r\n        target: T,\r\n    ) -> Container<T> {\r\n        Container { target }\r\n    }\r\n}\r\n\r\n```\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.56.0-nightly (ccffcafd5 2021-08-11)\r\nbinary: rustc\r\ncommit-hash: ccffcafd55e58f769d4b0efc0064bf65e76998e4\r\ncommit-date: 2021-08-11\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.56.0-nightly\r\nLLVM version: 12.0.1\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nerror: internal compiler error: Encountered error `Unimplemented` selecting `Binder(<^0 as Target>, [Ty(Anon)])` during codegen\r\n  |\r\n  = note: delayed at compiler/rustc_trait_selection/src/traits/codegen.rs:68:32\r\n\r\nerror: internal compiler error: ty::ConstKind::Error constructed but no error reported.\r\n  |\r\n  = note: delayed at /rustc/ccffcafd55e58f769d4b0efc0064bf65e76998e4/compiler/rustc_middle/src/ty/consts.rs:184:43\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nthread 'rustc' panicked at 'no errors encountered even though `delay_span_bug` issued', compiler/rustc_errors/src/lib.rs:1134:13\r\nstack backtrace:\r\n   0: rust_begin_unwind\r\n             at /rustc/ccffcafd55e58f769d4b0efc0064bf65e76998e4/library/std/src/panicking.rs:517:5\r\n   1: std::panicking::begin_panic_fmt\r\n             at /rustc/ccffcafd55e58f769d4b0efc0064bf65e76998e4/library/std/src/panicking.rs:460:5\r\n   2: rustc_errors::HandlerInner::flush_delayed\r\n   3: <rustc_errors::HandlerInner as core::ops::drop::Drop>::drop\r\n   4: core::ptr::drop_in_place<rustc_session::parse::ParseSess>\r\n   5: <alloc::rc::Rc<T> as core::ops::drop::Drop>::drop\r\n   6: core::ptr::drop_in_place<rustc_interface::interface::Compiler>\r\n   7: rustc_span::with_source_map\r\n   8: rustc_interface::interface::create_compiler_and_run\r\n   9: scoped_tls::ScopedKey<T>::set\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/87964/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/87964/timeline", "performed_via_github_app": null, "state_reason": "completed"}