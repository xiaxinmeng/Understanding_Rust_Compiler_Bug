{"url": "https://api.github.com/repos/rust-lang/rust/issues/68465", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/68465/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/68465/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/68465/events", "html_url": "https://github.com/rust-lang/rust/issues/68465", "id": 553716984, "node_id": "MDU6SXNzdWU1NTM3MTY5ODQ=", "number": 68465, "title": "new() returning `impl Fn` closure as type parameter", "user": {"login": "TjeuKayim", "id": 15987676, "node_id": "MDQ6VXNlcjE1OTg3Njc2", "avatar_url": "https://avatars.githubusercontent.com/u/15987676?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TjeuKayim", "html_url": "https://github.com/TjeuKayim", "followers_url": "https://api.github.com/users/TjeuKayim/followers", "following_url": "https://api.github.com/users/TjeuKayim/following{/other_user}", "gists_url": "https://api.github.com/users/TjeuKayim/gists{/gist_id}", "starred_url": "https://api.github.com/users/TjeuKayim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TjeuKayim/subscriptions", "organizations_url": "https://api.github.com/users/TjeuKayim/orgs", "repos_url": "https://api.github.com/users/TjeuKayim/repos", "events_url": "https://api.github.com/users/TjeuKayim/events{/privacy}", "received_events_url": "https://api.github.com/users/TjeuKayim/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-22T18:28:45Z", "updated_at": "2020-01-22T18:38:08Z", "closed_at": "2020-01-22T18:38:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Constructors that return a closure like `impl Fn() -> ()` as type parameter can't be written as `new() -> Self`.\r\n\r\nI tried this code:\r\n\r\n```rust\r\nstruct Foo<T> {\r\n    closure: T,\r\n}\r\nimpl<T: Fn() -> u8> Foo<T> {\r\n    pub fn new() -> Self {\r\n        Foo { closure: || 1 }\r\n    }\r\n\r\n    pub fn get(&self) -> u8 {\r\n        (self.closure)()\r\n    }\r\n}\r\n\r\nassert_eq!(Foo::new().get(), 1);\r\n```\r\n\r\n([Playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=fdeb474b6c9e7d2c61907a16e6726f09))\r\n\r\nErrors:\r\n\r\n```\r\nerror[E0308]: mismatched types\r\n  --> src/main.rs:16:24\r\n   |\r\n14 | impl<T: Fn() -> u8> Foo<T> {\r\n   |      - this type parameter\r\n15 |     pub fn new() -> Self {\r\n16 |         Foo { closure: || 1 }\r\n   |                        ^^^^ expected type parameter `T`, found closure\r\n   |\r\n   = note: expected type parameter `T`\r\n                     found closure `[closure@src/main.rs:16:24: 16:28]`\r\n   = help: type parameters must be constrained to match other types\r\n```\r\n\r\nAs a workaround, you could use a function instead of a method to construct `Foo`:\r\n\r\n```rust\r\nfn foo_new() -> Foo<impl Fn() -> u8> {\r\n    Foo { closure: || 1 }\r\n}\r\nassert_eq!(foo_new().get(), 1);\r\n```\r\n\r\nThis is another workaround if the type parameter on the struct is not constrained:\r\n```rust\r\nimpl Foo<()> {\r\n    fn new() -> Foo<impl Fn() -> u8> {\r\n        Foo { closure: || 1 }\r\n    }\r\n}\r\nimpl<T: Fn() -> u8> Foo<T> {\r\n    pub fn get(&self) -> u8 {\r\n        (self.closure)()\r\n    }\r\n}\r\n```", "closed_by": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/68465/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/68465/timeline", "performed_via_github_app": null, "state_reason": "completed"}