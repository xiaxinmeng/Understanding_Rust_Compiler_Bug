{"url": "https://api.github.com/repos/rust-lang/rust/issues/73510", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/73510/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/73510/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/73510/events", "html_url": "https://github.com/rust-lang/rust/issues/73510", "id": 642063418, "node_id": "MDU6SXNzdWU2NDIwNjM0MTg=", "number": 73510, "title": "rustc uses insane amounts of memory when compiling a function that loads 1500+ function pointers from a DLL", "user": {"login": "fschutt", "id": 12084016, "node_id": "MDQ6VXNlcjEyMDg0MDE2", "avatar_url": "https://avatars.githubusercontent.com/u/12084016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fschutt", "html_url": "https://github.com/fschutt", "followers_url": "https://api.github.com/users/fschutt/followers", "following_url": "https://api.github.com/users/fschutt/following{/other_user}", "gists_url": "https://api.github.com/users/fschutt/gists{/gist_id}", "starred_url": "https://api.github.com/users/fschutt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fschutt/subscriptions", "organizations_url": "https://api.github.com/users/fschutt/orgs", "repos_url": "https://api.github.com/users/fschutt/repos", "events_url": "https://api.github.com/users/fschutt/events{/privacy}", "received_events_url": "https://api.github.com/users/fschutt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 64037154, "node_id": "MDU6TGFiZWw2NDAzNzE1NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-compiletime", "name": "I-compiletime", "color": "e11d21", "default": false, "description": "Problems and improvements with respect to compile times."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 604454086, "node_id": "MDU6TGFiZWw2MDQ0NTQwODY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-inference", "name": "A-inference", "color": "f7e101", "default": false, "description": "Area: Type inference"}, {"id": 630799571, "node_id": "MDU6TGFiZWw2MzA3OTk1NzE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-compilemem", "name": "I-compilemem", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to memory usage during compilation."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2020-06-19T15:48:23Z", "updated_at": "2020-06-19T19:47:03Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "For my use-case, I'm trying to load a lot of function pointers from a .dll file using the `libloading` crate. However, I can't compile a `load_my_dll()` function if I have more than maybe 1000 function pointers, because rustc uses an insane amount of memory for compilation:\r\n\r\n![test](https://user-images.githubusercontent.com/12084016/85151466-19ea3d80-b254-11ea-999a-e98fd0787558.gif)\r\n\r\nI can pretty much watch my computer lock up in real time because it runs out of memory (see the pie in the lower left corner).\r\n\r\nI've built a test-case here: https://github.com/fschutt/libloading-loadtest\r\n\r\nLook in the `generate.py` file, I've currently set it to 2000 function pointers, but that's not even a lot. Larger DLLs will likely need 5000 - 30000 function pointers. Clone the repository and run `cargo check`. After you wait a while, the memory usage will go up dramatically. This bug also happens on nightly.\r\n\r\nI think this may have to do with how verbose the code output of generics are. Is there a way to fix it from my side?\r\n\r\n### Meta\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.44.1 (c7087fe00 2020-06-17)\r\nbinary: rustc\r\ncommit-hash: c7087fe00d2ba919df1d813c040a5d47e43b0fe7\r\ncommit-date: 2020-06-17\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.44.1\r\nLLVM version: 9.0\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/73510/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/73510/timeline", "performed_via_github_app": null, "state_reason": null}