{"url": "https://api.github.com/repos/rust-lang/rust/issues/74502", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/74502/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/74502/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/74502/events", "html_url": "https://github.com/rust-lang/rust/issues/74502", "id": 660587970, "node_id": "MDU6SXNzdWU2NjA1ODc5NzA=", "number": 74502, "title": "Independent lifetimes still considered overly constrained", "user": {"login": "philip-peterson", "id": 1326208, "node_id": "MDQ6VXNlcjEzMjYyMDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1326208?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philip-peterson", "html_url": "https://github.com/philip-peterson", "followers_url": "https://api.github.com/users/philip-peterson/followers", "following_url": "https://api.github.com/users/philip-peterson/following{/other_user}", "gists_url": "https://api.github.com/users/philip-peterson/gists{/gist_id}", "starred_url": "https://api.github.com/users/philip-peterson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philip-peterson/subscriptions", "organizations_url": "https://api.github.com/users/philip-peterson/orgs", "repos_url": "https://api.github.com/users/philip-peterson/repos", "events_url": "https://api.github.com/users/philip-peterson/events{/privacy}", "received_events_url": "https://api.github.com/users/philip-peterson/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1596121013, "node_id": "MDU6TGFiZWwxNTk2MTIxMDEz", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-confusing", "name": "D-confusing", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error that should be reworked"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-19T04:42:56Z", "updated_at": "2023-01-17T21:25:59Z", "closed_at": "2023-01-17T21:25:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "I saw a confusing error message today which seems related to #60216, but not sure if it's the same.\r\n\r\n```\r\n\r\nerror[E0495]: cannot infer an appropriate lifetime for lifetime parameter `'a` due to conflicting requirements\r\n  --> cli/src/main.rs:27:14\r\n   |\r\n27 |             .arg(\r\n   |              ^^^\r\n   |\r\nnote: first, the lifetime cannot outlive the lifetime `'a` as defined on the function body at 24:20...\r\n  --> cli/src/main.rs:24:20\r\n   |\r\n24 | fn with_build_args<'a, 'b, 'c, 'd>(app: Box<App<'a, 'b>>) -> Box<App<'c, 'd>> {\r\n   |                    ^^\r\nnote: ...so that the types are compatible\r\n  --> cli/src/main.rs:27:14\r\n   |\r\n27 |             .arg(\r\n   |              ^^^\r\n   = note: expected `clap::App<'_, '_>`\r\n              found `clap::App<'a, 'b>`\r\nnote: but, the lifetime must be valid for the lifetime `'c` as defined on the function body at 24:28...\r\n  --> cli/src/main.rs:24:28\r\n   |\r\n24 | fn with_build_args<'a, 'b, 'c, 'd>(app: Box<App<'a, 'b>>) -> Box<App<'c, 'd>> {\r\n   |                            ^^\r\nnote: ...so that the expression is assignable\r\n  --> cli/src/main.rs:25:5\r\n   |\r\n25 | /     Box::new(\r\n26 | |         (*app)\r\n27 | |             .arg(\r\n28 | |                 Arg::with_name(\"release\")\r\n...  |\r\n31 | |             )\r\n32 | |     )\r\n   | |_____^\r\n   = note: expected `std::boxed::Box<clap::App<'c, 'd>>`\r\n              found `std::boxed::Box<clap::App<'_, '_>>`\r\n\r\nerror: aborting due to previous error; 7 warnings emitted\r\n\r\nFor more information about this error, try `rustc --explain E0495`.\r\n```\r\n\r\nThe function in question takes four independent lifetimes which (in my mind) should be free to grow as large as the compiler would like.\r\n\r\n```rust\r\nfn with_build_args<'a, 'b, 'c, 'd>(app: Box<App<'a, 'b>>) -> Box<App<'c, 'd>> {\r\n    Box::new(\r\n        (*app)\r\n            .arg(\r\n                Arg::with_name(\"release\")\r\n                    .help(\"Whether to invoke `cargo build` using the --release flag\")\r\n                    .long(\"release\")\r\n            )\r\n    )\r\n}\r\n```", "closed_by": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/74502/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/74502/timeline", "performed_via_github_app": null, "state_reason": "completed"}