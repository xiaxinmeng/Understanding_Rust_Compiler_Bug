{"url": "https://api.github.com/repos/rust-lang/rust/issues/37519", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/37519/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/37519/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/37519/events", "html_url": "https://github.com/rust-lang/rust/issues/37519", "id": 186607773, "node_id": "MDU6SXNzdWUxODY2MDc3NzM=", "number": 37519, "title": "Command::spawn has weird rules for finding binaries on Windows", "user": {"login": "ollie27", "id": 7189418, "node_id": "MDQ6VXNlcjcxODk0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/7189418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ollie27", "html_url": "https://github.com/ollie27", "followers_url": "https://api.github.com/users/ollie27/followers", "following_url": "https://api.github.com/users/ollie27/following{/other_user}", "gists_url": "https://api.github.com/users/ollie27/gists{/gist_id}", "starred_url": "https://api.github.com/users/ollie27/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ollie27/subscriptions", "organizations_url": "https://api.github.com/users/ollie27/orgs", "repos_url": "https://api.github.com/users/ollie27/repos", "events_url": "https://api.github.com/users/ollie27/events{/privacy}", "received_events_url": "https://api.github.com/users/ollie27/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 123109, "node_id": "MDU6TGFiZWwxMjMxMDk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-windows", "name": "O-windows", "color": "6e6ec0", "default": false, "description": "Operating system: Windows"}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2016-11-01T18:20:22Z", "updated_at": "2021-12-02T18:16:22Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "The offending code is [here](https://github.com/rust-lang/rust/blob/ac968c466451cb9aafd9e8598ddb396ed0e6fe31/src/libstd/sys/windows/process.rs#L130-L149) which is apparently to have it search the child's `%Path%` for the binary to fix #15149. It has a few issues though.\r\n\r\n1. It is only triggered when the child's environment has been customised. This means `Command::new(\"foo.exe\").spawn()` and `Command::new(\"foo.exe\").env(\"Thing\", \"\").spawn()` uses different rules for finding the binary which seems unexpected.\r\n2. It will replace any extension on the program name with `.exe`. This means `Command::new(\"foo.bar\").env(\"Thing\", \"\").spawn()` attempts to launch `foo.exe` first. `Command::new(\"foo.bar\").spawn()` correctly tries to launch `foo.bar` as [`CreateProcess`](https://msdn.microsoft.com/en-us/library/windows/desktop/ms682425(v=vs.85).aspx) will not replace the extension.\r\n3. If the program name is an absolute path then this is still triggered but will just try that path for every item in the child's `%Path%`. For example `Command::new(r\"C:\\foo.bar\").env(\"Thing\", \"\").spawn()` looks for `C:\\foo.exe` several times.\r\n4. The use of `.to_str().unwrap()` means it `panic!`s if the program name is not valid Unicode.\r\n5. Prehaps the biggest issue, but maybe it's itentional, is that none of the logic for finding binaries seems to be documented ([`std::process::Command`](https://doc.rust-lang.org/nightly/std/process/struct.Command.html)).\r\n\r\nAn easy way to fix this is to just remove the hack so we just rely on the behaviour of [`CreateProcess`](https://msdn.microsoft.com/en-us/library/windows/desktop/ms682425(v=vs.85).aspx) on Windows which is a least documented. The behaviour is already very different between Windows and Linux and we should probably just accept that in order to get reliable results cross-platform it's best to use absolute paths.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/37519/reactions", "total_count": 11, "+1": 11, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/37519/timeline", "performed_via_github_app": null, "state_reason": null}