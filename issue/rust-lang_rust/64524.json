{"url": "https://api.github.com/repos/rust-lang/rust/issues/64524", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/64524/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/64524/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/64524/events", "html_url": "https://github.com/rust-lang/rust/issues/64524", "id": 494244481, "node_id": "MDU6SXNzdWU0OTQyNDQ0ODE=", "number": 64524, "title": "Weird compiler error for type annotations", "user": {"login": "olegnn", "id": 6822848, "node_id": "MDQ6VXNlcjY4MjI4NDg=", "avatar_url": "https://avatars.githubusercontent.com/u/6822848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olegnn", "html_url": "https://github.com/olegnn", "followers_url": "https://api.github.com/users/olegnn/followers", "following_url": "https://api.github.com/users/olegnn/following{/other_user}", "gists_url": "https://api.github.com/users/olegnn/gists{/gist_id}", "starred_url": "https://api.github.com/users/olegnn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olegnn/subscriptions", "organizations_url": "https://api.github.com/users/olegnn/orgs", "repos_url": "https://api.github.com/users/olegnn/repos", "events_url": "https://api.github.com/users/olegnn/events{/privacy}", "received_events_url": "https://api.github.com/users/olegnn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-16T19:53:58Z", "updated_at": "2022-03-22T08:51:55Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```rust\r\nuse std::thread;\r\n\r\nfn main() {\r\n    let result = {\r\n        let spawned_result = thread::spawn(|| 3).join();\r\n        let result = spawned_result.map_err(|e| e.into());\r\n        let handler = |a| Ok(a + 1);\r\n        result.and_then(handler)\r\n    };\r\n\r\n    println!(\"{:?}\", result);\r\n}\r\n```\r\n\r\n([Playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=fd15bd5e992bbd13c2f7cbda39c1f312))\r\n\r\nError will be\r\n```\r\nerror[E0282]: type annotations needed for `std::result::Result<i32, E>`\r\n --> src/main.rs:6:37\r\n  |\r\n4 |     let result = {\r\n  |         ------ consider giving `result` the explicit type `std::result::Result<i32, E>`, where the type parameter `F` is specified\r\n5 |         let spawned_result = thread::spawn(|| 3).join();\r\n6 |         let result = spawned_result.map_err(|e| e.into());\r\n  |                                     ^^^^^^^ cannot infer type for `F`\r\n```\r\n\r\nWhich is a little bit confusing because there's no type parameter `F` in `std::result::Result<i32, E>`.\r\n\r\nOn the other hand, if we place `let handler = |a| Ok(a + 1);` before `let result = spawned_result.map_err(|e| e.into());`, we will receive correct message: \r\n```\r\nerror[E0282]: type annotations needed for `std::result::Result<i32, E>`\r\n --> src/main.rs:6:27\r\n  |\r\n4 |     let result = {\r\n  |         ------ consider giving `result` the explicit type `std::result::Result<i32, E>`, where the type parameter `E` is specified\r\n5 |         let spawned_result = thread::spawn(|| 3).join();\r\n6 |         let handler = |a| Ok(a + 1);\r\n  |                           ^^ cannot infer type for `E`\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/64524/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/64524/timeline", "performed_via_github_app": null, "state_reason": null}