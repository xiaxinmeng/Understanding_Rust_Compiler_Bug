{"url": "https://api.github.com/repos/rust-lang/rust/issues/51069", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/51069/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/51069/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/51069/events", "html_url": "https://github.com/rust-lang/rust/issues/51069", "id": 326691788, "node_id": "MDU6SXNzdWUzMjY2OTE3ODg=", "number": 51069, "title": "impl Trait return value causes an over-restricted lifetime requirement", "user": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 631673608, "node_id": "MDU6TGFiZWw2MzE2NzM2MDg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-impl-trait", "name": "A-impl-trait", "color": "f7e101", "default": false, "description": "Area: impl Trait. Universally / existentially quantified anonymous types with static dispatch."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-05-25T23:55:24Z", "updated_at": "2019-07-11T15:55:16Z", "closed_at": "2019-07-11T15:55:16Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Reduced from an [example](https://play.rust-lang.org/?gist=5426bc367e943bed5b8051f421d36672&version=stable&mode=debug) given on the [users forum](https://users.rust-lang.org/t/lifetime-in-method-params-data-flow-and-impl-trait-or-how-i-lost-my-mind/17697).\r\n\r\nThis code ([playground](https://play.rust-lang.org/?gist=6b078fc0711d466d5518bcd05cf8cc0f&version=nightly&mode=debug)) fails to compile:\r\n\r\n```rust\r\nfn main() {\r\n    let v = vec![\"\"];\r\n    runner(&v);\r\n}\r\n\r\nfn runner<'p>(v: &Vec<&'p str>) -> impl Iterator<Item = &'p str> {\r\n    find(&vec![0], v)\r\n}\r\n\r\nfn find<'n, 'p, I, S>(_: &'n I, _: &Vec<&'p str>) -> impl Iterator<Item = &'p str>\r\nwhere\r\n    &'n I: IntoIterator<Item = S>,\r\n{\r\n    std::iter::empty()\r\n}\r\n```\r\n\r\n```text\r\nerror[E0597]: borrowed value does not live long enough\r\n --> src/main.rs:7:11\r\n  |\r\n7 |     find(&vec![0], v)\r\n  |           ^^^^^^^ temporary value does not live long enough\r\n8 | }\r\n  | - temporary value only lives until here\r\n  |\r\nnote: borrowed value must be valid for the lifetime 'p as defined on the function body at 6:1...\r\n --> src/main.rs:6:1\r\n  |\r\n6 | fn runner<'p>(v: &Vec<&'p str>) -> impl Iterator<Item = &'p str> {\r\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\r\n```\r\n\r\nIt seems the `'n` lifetime is getting tied into the return type somehow.\r\n\r\nIt works if you make `find` return an explicit type:\r\n\r\n```rust\r\nfn find<'n, 'p, I, S>(_: &'n I, _: &Vec<&'p str>) -> std::iter::Empty<&'p str>\r\nwhere\r\n    &'n I: IntoIterator<Item = S>,\r\n{\r\n    std::iter::empty()\r\n}\r\n```\r\n\r\nIt also works if you instead remove the `S` parameter:\r\n\r\n```rust\r\nfn find<'n, 'p, I>(_: &'n I, _: &Vec<&'p str>) -> impl Iterator<Item = &'p str>\r\nwhere\r\n    &'n I: IntoIterator,\r\n{\r\n    std::iter::empty()\r\n}\r\n```", "closed_by": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/51069/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/51069/timeline", "performed_via_github_app": null, "state_reason": "completed"}