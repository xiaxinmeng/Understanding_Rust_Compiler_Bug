{"url": "https://api.github.com/repos/rust-lang/rust/issues/74007", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/74007/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/74007/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/74007/events", "html_url": "https://github.com/rust-lang/rust/issues/74007", "id": 650728127, "node_id": "MDU6SXNzdWU2NTA3MjgxMjc=", "number": 74007, "title": "Naming an associated type can cause a compile failure", "user": {"login": "e2-71828", "id": 26780705, "node_id": "MDQ6VXNlcjI2NzgwNzA1", "avatar_url": "https://avatars.githubusercontent.com/u/26780705?v=4", "gravatar_id": "", "url": "https://api.github.com/users/e2-71828", "html_url": "https://github.com/e2-71828", "followers_url": "https://api.github.com/users/e2-71828/followers", "following_url": "https://api.github.com/users/e2-71828/following{/other_user}", "gists_url": "https://api.github.com/users/e2-71828/gists{/gist_id}", "starred_url": "https://api.github.com/users/e2-71828/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/e2-71828/subscriptions", "organizations_url": "https://api.github.com/users/e2-71828/orgs", "repos_url": "https://api.github.com/users/e2-71828/repos", "events_url": "https://api.github.com/users/e2-71828/events{/privacy}", "received_events_url": "https://api.github.com/users/e2-71828/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}, {"id": 149689562, "node_id": "MDU6TGFiZWwxNDk2ODk1NjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-associated-items", "name": "A-associated-items", "color": "f7e101", "default": false, "description": "Area: Associated items such as associated types and consts."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-03T18:43:43Z", "updated_at": "2021-01-25T22:47:53Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI have found two different pieces of code that should be equivalent, but one compiles and the other does not.\r\n\r\nThis code  compiles successfully: ([Playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=907f7fefa2a2f9d02f4a6a178a4f55ed))\r\n\r\n```rust\r\nstruct Lazy<Ptr>(Ptr) where Ptr: Deref, Ptr::Target: Record;\r\n\r\nimpl<Ptr:Deref> Record for Lazy<Ptr> where Ptr::Target: Record {\r\n    fn try_field_ref<F:Field>(&self)->Option<&F> {\r\n        self.0.try_field_ref()\r\n    }\r\n}\r\n```\r\n\r\nBut this code fails to compile: ([Playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=f9d0dca192e5702b1528ab19d3e5bba5))\r\n\r\n```rust\r\nstruct Lazy<Ptr>(Ptr) where Ptr: Deref, Ptr::Target: Record;\r\n\r\nimpl<R:Record, Ptr:Deref<Target=R>> Record for Lazy<Ptr> {\r\n    fn try_field_ref<F:Field>(&self)->Option<&F> {\r\n        self.0.try_field_ref()\r\n    }\r\n}\r\n```\r\n\r\nError Message:\r\n```\r\n\r\n   Compiling playground v0.0.1 (/playground)\r\nerror[E0311]: the parameter type `R` may not live long enough\r\n  --> src/lib.rs:14:9\r\n   |\r\n14 |         self.0.try_field_ref()\r\n   |         ^^^^^^\r\n   |\r\n   = help: consider adding an explicit lifetime bound for `R`\r\nnote: the parameter type `R` must be valid for the anonymous lifetime #1 defined on the method body at 13:5...\r\n  --> src/lib.rs:13:5\r\n   |\r\n13 | /     fn try_field_ref<F:Field>(&self)->Option<&F> {\r\n14 | |         self.0.try_field_ref()\r\n15 | |     }\r\n   | |_____^\r\nnote: ...so that the type `R` is not borrowed for too long\r\n  --> src/lib.rs:14:9\r\n   |\r\n14 |         self.0.try_field_ref()\r\n   |         ^^^^^^\r\n\r\nerror[E0311]: the parameter type `R` may not live long enough\r\n  --> src/lib.rs:14:16\r\n   |\r\n14 |         self.0.try_field_ref()\r\n   |                ^^^^^^^^^^^^^\r\n   |\r\n   = help: consider adding an explicit lifetime bound for `R`\r\nnote: the parameter type `R` must be valid for the anonymous lifetime #1 defined on the method body at 13:5...\r\n  --> src/lib.rs:13:5\r\n   |\r\n13 | /     fn try_field_ref<F:Field>(&self)->Option<&F> {\r\n14 | |         self.0.try_field_ref()\r\n15 | |     }\r\n   | |_____^\r\nnote: ...so that the reference type `&R` does not outlive the data it points at\r\n  --> src/lib.rs:14:16\r\n   |\r\n14 |         self.0.try_field_ref()\r\n   |                ^^^^^^^^^^^^^\r\n\r\nerror: aborting due to 2 previous errors\r\n\r\nerror: could not compile `playground`.\r\n\r\n```\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/74007/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/74007/timeline", "performed_via_github_app": null, "state_reason": null}