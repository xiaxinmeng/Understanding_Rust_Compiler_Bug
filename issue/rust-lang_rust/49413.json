{"url": "https://api.github.com/repos/rust-lang/rust/issues/49413", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/49413/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/49413/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/49413/events", "html_url": "https://github.com/rust-lang/rust/issues/49413", "id": 308902462, "node_id": "MDU6SXNzdWUzMDg5MDI0NjI=", "number": 49413, "title": "lightweight submodule landing", "user": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 325438536, "node_id": "MDU6TGFiZWwzMjU0Mzg1MzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-bootstrap", "name": "T-bootstrap", "color": "bfd4f2", "default": false, "description": "Relevant to the bootstrap subteam: Rust's build system (x.py and src/bootstrap)"}, {"id": 593503757, "node_id": "MDU6TGFiZWw1OTM1MDM3NTc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-infra", "name": "T-infra", "color": "bfd4f2", "default": false, "description": "Relevant to the infrastructure team, which will review and decide on the PR/issue."}, {"id": 602425123, "node_id": "MDU6TGFiZWw2MDI0MjUxMjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-dev-tools", "name": "T-dev-tools", "color": "bfd4f2", "default": false, "description": "Relevant to the dev-tools subteam, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2018-03-27T10:02:41Z", "updated_at": "2023-02-03T13:59:55Z", "closed_at": "2023-02-03T13:59:54Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The goal is to make landing submodule updates quicker and use fewer resources. The high level idea is that we would only run the tests for the updated submodule, not the entire bootstrap and test suite, e.g., to update the Cargo submodule we would only run `.x.py src/tools/cargo`. That makes landing submodule updates quicker and easier and lets us update more often. This is a little bit more complicated than it sounds.\r\n\r\nKey parts of this work:\r\n* [ ] tools and the compiler/libs should use different Cargo.lock files so that updating a submodule cannot break the compiler/libs.\r\n* a concept of a submodule-only commit. This should probably be opt-in and explicit, so that tools like bisect can skip these commits (e.g., a keyword in the commit message). These should only update submodules and touch the 'tools' Cargo.lock.\r\n*  when testing a submodule commit we should pull artefacts for `HEAD~1` rather than bootstrapping a toolchain\r\n* [ ] the build system needs to be able to build and test submodules using these artefacts\r\n* [ ] CI and build system (my understanding is vague here) knows only to run the subset of tests for these commits (and detect which tests to run).\r\n* [ ] these commits do not create new artefacts\r\n* [ ] the dist machinery should ignore these commits when producing a nightly (and I guess beta, stable)\r\n* [ ] update tools such as perf/bisect which need artefacts to ignore these commits\r\n\r\ncc @alexcrichton @Mark-Simulacrum could you add more detailed mentoring instructions please?", "closed_by": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/49413/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/49413/timeline", "performed_via_github_app": null, "state_reason": "not_planned"}