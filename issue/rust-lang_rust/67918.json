{"url": "https://api.github.com/repos/rust-lang/rust/issues/67918", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/67918/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/67918/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/67918/events", "html_url": "https://github.com/rust-lang/rust/issues/67918", "id": 545571659, "node_id": "MDU6SXNzdWU1NDU1NzE2NTk=", "number": 67918, "title": "Specialization works only if type annotation is provided", "user": {"login": "kdy1", "id": 29931815, "node_id": "MDQ6VXNlcjI5OTMxODE1", "avatar_url": "https://avatars.githubusercontent.com/u/29931815?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kdy1", "html_url": "https://github.com/kdy1", "followers_url": "https://api.github.com/users/kdy1/followers", "following_url": "https://api.github.com/users/kdy1/following{/other_user}", "gists_url": "https://api.github.com/users/kdy1/gists{/gist_id}", "starred_url": "https://api.github.com/users/kdy1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kdy1/subscriptions", "organizations_url": "https://api.github.com/users/kdy1/orgs", "repos_url": "https://api.github.com/users/kdy1/repos", "events_url": "https://api.github.com/users/kdy1/events{/privacy}", "received_events_url": "https://api.github.com/users/kdy1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1472579062, "node_id": "MDU6TGFiZWwxNDcyNTc5MDYy", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-specialization", "name": "F-specialization", "color": "f9c0cc", "default": false, "description": "`#![feature(specialization)]`"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-06T06:55:09Z", "updated_at": "2023-02-14T20:20:00Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Playground link: https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=a26a9e2af3acda5b9911458a6f54a72d\r\n\r\n\r\nThis trait implementation\r\n\r\n```rust\r\nimpl<T, V, O, E> Validate<[T]> for V\r\nwhere\r\n    Self: Validate<T, Output = Result<O, E>>,\r\n{\r\n    type Output = Result<Vec<O>, E>;\r\n\r\n    fn validate(&mut self, nodes: &[T]) -> Self::Output {\r\n        nodes.iter().map(|node| self.validate(node)).collect()\r\n    }\r\n}\r\n```\r\n\r\ndoes not like a method defined as\r\n\r\n```rust\r\nimpl Analyzer {\r\n    /// Validates and store errors if required.\r\n    pub fn check<T, O>(&mut self, node: &T) -> Option<O>\r\n    where\r\n        Self: Validate<T, Output = Result<O, Error>>,\r\n    {\r\n        let res: Result<O, _> = self.validate(node);\r\n        match res {\r\n            Ok(v) => Some(v),\r\n            Err(..) => {\r\n                // handle error\r\n                None\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nHowever, it works if type annotation is provided\r\n```rust\r\nfn main() {\r\n    let mut a = Analyzer;\r\n    let expr = Expr;\r\n    // Uncomment this to see impl for [T] explodes\r\n    // a.check(&expr);\r\n\r\n    // This works without error\r\n    a.check::<Expr, ()>(&expr);\r\n}\r\n```\r\n\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/67918/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/67918/timeline", "performed_via_github_app": null, "state_reason": null}