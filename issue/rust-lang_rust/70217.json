{"url": "https://api.github.com/repos/rust-lang/rust/issues/70217", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/70217/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/70217/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/70217/events", "html_url": "https://github.com/rust-lang/rust/issues/70217", "id": 585470751, "node_id": "MDU6SXNzdWU1ODU0NzA3NTE=", "number": 70217, "title": "ICE with explicit const params in method call.", "user": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1282665911, "node_id": "MDU6TGFiZWwxMjgyNjY1OTEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-generics", "name": "A-const-generics", "color": "f7e101", "default": false, "description": "Area: const generics (parameters and arguments)"}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}, {"id": 1486687397, "node_id": "MDU6TGFiZWwxNDg2Njg3Mzk3", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-const_generics", "name": "F-const_generics", "color": "f9c0cc", "default": false, "description": "`#![feature(const_generics)]`"}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-03-21T10:21:25Z", "updated_at": "2020-07-16T22:23:13Z", "closed_at": "2020-07-16T22:23:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "split from https://github.com/rust-lang/rust/issues/70167\r\n\r\ncomment by @eddyb\r\n\r\n> Alternatively, instead of using `path.res` to get the `DefId`, maybe we could use the `Res`olution from the segment we found the const parameter in?\r\n> I believe nowadays we have per-segment resolutions, which would avoid breaking GATs in the future.\r\n> \r\n> Actually, I expect `Struct::<N>::method::<M>()` is also broken, let's try it... Yupp: ([playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=1d5e83116fbd2675ca18caeecd6c8dc2))\r\n> \r\n> ```rust\r\n> #![feature(const_generics)]\r\n> \r\n> struct Struct<const N: usize>;\r\n> \r\n> impl<const N: usize> Struct<N> {\r\n>     fn method<const M: usize>(&self) {}\r\n> }\r\n> \r\n> fn test<const N: usize, const M: usize>(x: Struct<N>) {\r\n>     Struct::<N>::method::<M>(&x);\r\n>     x.method::<N>();\r\n> }\r\n> ```\r\n> \r\n> **EDIT**: took a second look and that `M` is in a `QPath::TypeRelative`, which has to be resolved by the body of `test`, which means it's as bad as the method call form (which I just added).\r\n> \r\n> Maybe we should disallow passing explicit generic args to methods for now?\r\n> Since I have no idea how one would figure out the expected type.\r\n\r\n[playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=58fc49205abf2b2c2121f3275ab6d52d)\r\n\r\nThis fails with\r\n```plain\r\nwarning: the feature `const_generics` is incomplete and may cause the compiler to crash\r\n --> src/lib.rs:1:12\r\n  |\r\n1 | #![feature(const_generics)]\r\n  |            ^^^^^^^^^^^^^^\r\n  |\r\n  = note: `#[warn(incomplete_features)]` on by default\r\n\r\nerror: internal compiler error: unexpected const parent path Expr(expr(HirId { owner: DefId(0:10 ~ playground[eddc]::test[0]), local_id: 12 }: Struct<>::method::<>))\r\n\r\nerror: internal compiler error: unexpected const parent in type_of_def_id(): Expr(expr(HirId { owner: DefId(0:10 ~ playground[eddc]::test[0]), local_id: 24 }: x.method::<>()))\r\n\r\nerror: internal compiler error: mir_const_qualif: MIR had errors\r\n  --> src/lib.rs:10:27\r\n   |\r\n10 |     Struct::<N>::method::<M>(&x);\r\n   |                           ^\r\n\r\nerror: internal compiler error: PromoteTemps: MIR had errors\r\n  --> src/lib.rs:10:27\r\n   |\r\n10 |     Struct::<N>::method::<M>(&x);\r\n   |                           ^\r\n\r\nerror: internal compiler error: broken MIR in DefId(0:15 ~ playground[eddc]::test[0]::{{constant}}[1]) (\"return type\"): bad type [type error]\r\n  --> src/lib.rs:10:27\r\n   |\r\n10 |     Struct::<N>::method::<M>(&x);\r\n   |                           ^\r\n\r\nerror: internal compiler error: broken MIR in DefId(0:15 ~ playground[eddc]::test[0]::{{constant}}[1]) (LocalDecl { mutability: Mut, local_info: Other, internal: false, is_block_tail: None, ty: [type error], user_ty: UserTypeProjections { contents: [] }, source_info: SourceInfo { span: src/lib.rs:10:27: 10:28, scope: scope[0] } }): bad type [type error]\r\n  --> src/lib.rs:10:27\r\n   |\r\n10 |     Struct::<N>::method::<M>(&x);\r\n   |                           ^\r\n\r\nerror: internal compiler error: mir_const_qualif: MIR had errors\r\n  --> src/lib.rs:11:16\r\n   |\r\n11 |     x.method::<N>();\r\n   |                ^\r\n\r\nerror: internal compiler error: PromoteTemps: MIR had errors\r\n  --> src/lib.rs:11:16\r\n   |\r\n11 |     x.method::<N>();\r\n   |                ^\r\n\r\nerror: internal compiler error: broken MIR in DefId(0:16 ~ playground[eddc]::test[0]::{{constant}}[2]) (\"return type\"): bad type [type error]\r\n  --> src/lib.rs:11:16\r\n   |\r\n11 |     x.method::<N>();\r\n   |                ^\r\n\r\nerror: internal compiler error: broken MIR in DefId(0:16 ~ playground[eddc]::test[0]::{{constant}}[2]) (LocalDecl { mutability: Mut, local_info: Other, internal: false, is_block_tail: None, ty: [type error], user_ty: UserTypeProjections { contents: [] }, source_info: SourceInfo { span: src/lib.rs:11:16: 11:17, scope: scope[0] } }): bad type [type error]\r\n  --> src/lib.rs:11:16\r\n   |\r\n11 |     x.method::<N>();\r\n   |                ^\r\n\r\nthread 'rustc' panicked at 'no errors encountered even though `delay_span_bug` issued', src/librustc_errors/lib.rs:360:17\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.44.0-nightly (1057dc97a 2020-03-20) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C codegen-units=1 -C debuginfo=2 --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nerror: could not compile `playground`.\r\n```", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/70217/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/70217/timeline", "performed_via_github_app": null, "state_reason": "completed"}