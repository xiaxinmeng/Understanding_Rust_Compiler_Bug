{"url": "https://api.github.com/repos/rust-lang/rust/issues/4077", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/4077/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/4077/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/4077/events", "html_url": "https://github.com/rust-lang/rust/issues/4077", "id": 8838653, "node_id": "MDU6SXNzdWU4ODM4NjUz", "number": 4077, "title": "Add Ability for Closure to Allow Argument But Never Use It", "user": {"login": "therealgymmy", "id": 667861, "node_id": "MDQ6VXNlcjY2Nzg2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/667861?v=4", "gravatar_id": "", "url": "https://api.github.com/users/therealgymmy", "html_url": "https://github.com/therealgymmy", "followers_url": "https://api.github.com/users/therealgymmy/followers", "following_url": "https://api.github.com/users/therealgymmy/following{/other_user}", "gists_url": "https://api.github.com/users/therealgymmy/gists{/gist_id}", "starred_url": "https://api.github.com/users/therealgymmy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/therealgymmy/subscriptions", "organizations_url": "https://api.github.com/users/therealgymmy/orgs", "repos_url": "https://api.github.com/users/therealgymmy/repos", "events_url": "https://api.github.com/users/therealgymmy/events{/privacy}", "received_events_url": "https://api.github.com/users/therealgymmy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2012-11-30T01:48:42Z", "updated_at": "2012-11-30T02:30:44Z", "closed_at": "2012-11-30T02:30:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm not sure how to phrase this properly, but basically I believe it'd be nice to see the following possible in rust.\n\nA closure that takes in an argument, but never actually binds that argument to a name.\n\nThe reason being that in a loop, sometimes we don't actually need to know which iteration we are in. We just need to repeat a certain action for an arbitrary number of times.\n\nFor example,\n\n```\n// Imaginary syntax\neach( [0, ..10], | :uint | {    // or maybe does not need |:uint| at all...\n    doStuff(); // for 10 times\n\n               // we don't actually need to use the element in the vector\n               // Hence, really no need to assign the param a name,\n               // and get a warning for not using it.\n});\n```\n\nEssentially, argument wise, the closure will treat its argument the same way as the following C/C++ function.\n\n```\nint foo (uint32_t) {    // never use the param\n   doStuff();\n}\n```\n\nIn C++, we could use the above function for something like this.\n\n```\n// Performance here is probably not nearly as good as hand-written loops,\n// but that's general idea.\nstd::vector<uint32_t> num {1, 2, 3, 4, 5, 6};\nstd::for_each(num.begin(), num.end(), foo());\n```\n\nAlternatively, perhaps we could enhance the `loop` expression and allow it to take an argument to specify the number of iterations we want.\n\nFor example,\n\n```\nloop (until 10) {\n    doStuff();\n}\n```\n", "closed_by": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/4077/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/4077/timeline", "performed_via_github_app": null, "state_reason": "completed"}