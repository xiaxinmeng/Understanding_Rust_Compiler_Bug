{"url": "https://api.github.com/repos/rust-lang/rust/issues/38787", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/38787/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/38787/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/38787/events", "html_url": "https://github.com/rust-lang/rust/issues/38787", "id": 198391869, "node_id": "MDU6SXNzdWUxOTgzOTE4Njk=", "number": 38787, "title": "NVPTX: non-inlined functions can't be used cross crate", "user": {"login": "japaric", "id": 5018213, "node_id": "MDQ6VXNlcjUwMTgyMTM=", "avatar_url": "https://avatars.githubusercontent.com/u/5018213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/japaric", "html_url": "https://github.com/japaric", "followers_url": "https://api.github.com/users/japaric/followers", "following_url": "https://api.github.com/users/japaric/following{/other_user}", "gists_url": "https://api.github.com/users/japaric/gists{/gist_id}", "starred_url": "https://api.github.com/users/japaric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/japaric/subscriptions", "organizations_url": "https://api.github.com/users/japaric/orgs", "repos_url": "https://api.github.com/users/japaric/repos", "events_url": "https://api.github.com/users/japaric/events{/privacy}", "received_events_url": "https://api.github.com/users/japaric/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 510582527, "node_id": "MDU6TGFiZWw1MTA1ODI1Mjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-NVPTX", "name": "O-NVPTX", "color": "6e6ec0", "default": false, "description": "Target: the NVPTX LLVM backend for running rust on GPUs, https://llvm.org/docs/NVPTXUsage.html"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-01-02T23:41:36Z", "updated_at": "2019-02-02T02:18:45Z", "closed_at": "2019-02-02T02:18:45Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Or all functions should be \"inlined\" for the nvptx targets\r\n\r\n### STR\r\n\r\n```\r\n$ cargo new --lib lib\r\n\r\n$ edit lib/src/lib.rs && cat $_\r\n```\r\n\r\n``` rust\r\n#![no_std]\r\n\r\npub fn foo() -> i32 {\r\n    42\r\n}\r\n```\r\n\r\n```\r\n$ cargo new --lib kernel && cd $_\r\n\r\n$ edit src/lib.rs && cat $_\r\n```\r\n\r\n``` rust\r\n#![no_std]\r\n\r\nextern crate lib;\r\n\r\nfn bar() -> i32 {\r\n    lib::foo()\r\n}\r\n```\r\n\r\n```\r\n$ edit Cargo.toml && tail -n5 $_\r\n```\r\n\r\n``` toml\r\n[dependencies]\r\nlib = \"../lib\"\r\n\r\n[profile.dev]\r\ndebug = false  # cf. rust-lang/rust#38785\r\n```\r\n\r\n```\r\n$ edit nvptx64-nvidia-cuda.json && cat $_\r\n```\r\n\r\n``` js\r\n{\r\n  \"arch\": \"nvptx64\",\r\n  \"cpu\": \"sm_20\",\r\n  \"data-layout\": \"e-i64:64-v16:16-v32:32-n16:32:64\",\r\n  \"llvm-target\": \"nvptx64-nvidia-cuda\",\r\n  \"max-atomic-width\": 0,\r\n  \"os\": \"cuda\",\r\n  \"panic-strategy\": \"abort\",\r\n  \"target-endian\": \"little\",\r\n  \"target-pointer-width\": \"64\"\r\n}\r\n```\r\n\r\n```\r\n$ cargo install xargo --vers 0.3.0 || true\r\n\r\n$ xargo rustc --target nvptx64-nvidia-cuda -- --emit=asm\r\n\r\n$ cat $(find target/nvptx64-nvidia-cuda/debug -name '*.s')\r\n.version 3.2\r\n.target sm_20\r\n.address_size 64\r\n\r\n.extern .func  (.param .b32 func_retval0) _ZN3lib3foo17h3feefc42e145764bE\r\n()\r\n;\r\n\r\n.func  (.param .b32 func_retval0) _ZN6kernel3bar17h7b762ababaef9f36E()\r\n{\r\n        .reg .s32       %r<2>;\r\n\r\n        bra.uni         LBB0_1;\r\nLBB0_1:\r\n        { // callseq 0\r\n        .reg .b32 temp_param_reg;\r\n        .param .b32 retval0;\r\n        call.uni (retval0),\r\n        _ZN3lib3foo17h3feefc42e145764bE,\r\n        (\r\n        );\r\n        ld.param.b32    %r1, [retval0+0];\r\n        } // callseq 0\r\n        bra.uni         LBB0_2;\r\nLBB0_2:\r\n        st.param.b32    [func_retval0+0], %r1;\r\n        ret;\r\n}\r\n```\r\n\r\nNote that `foo` appears as undefined (`.extern .func`) in the PTX module.\r\n\r\n### Workaround\r\n\r\nMark `lib::foo` as `#[inline]`. Then you'll get the translation of `foo` in the final PTX module:\r\n\r\n```\r\n.version 3.2\r\n.target sm_20\r\n.address_size 64\r\n\r\n\r\n.func  (.param .b32 func_retval0) _ZN3lib3foo17h3feefc42e145764bE()\r\n{\r\n        .reg .s32       %r<2>;\r\n\r\n        bra.uni         LBB0_1;\r\nLBB0_1:\r\n        mov.u32         %r1, 42;\r\n        st.param.b32    [func_retval0+0], %r1;\r\n        ret;\r\n}\r\n\r\n.func  (.param .b32 func_retval0) _ZN6kernel3bar17h7b762ababaef9f36E()\r\n{\r\n        .reg .s32       %r<2>;\r\n\r\n        bra.uni         LBB1_1;\r\nLBB1_1:\r\n        { // callseq 0\r\n        .reg .b32 temp_param_reg;\r\n        .param .b32 retval0;\r\n        call.uni (retval0),\r\n        _ZN3lib3foo17h3feefc42e145764bE,\r\n        (\r\n        );\r\n        ld.param.b32    %r1, [retval0+0];\r\n        } // callseq 0\r\n        bra.uni         LBB1_2;\r\nLBB1_2:\r\n        st.param.b32    [func_retval0+0], %r1;\r\n        ret;\r\n}\r\n```\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/38787/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/38787/timeline", "performed_via_github_app": null, "state_reason": "completed"}