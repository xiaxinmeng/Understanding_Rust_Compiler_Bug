{"url": "https://api.github.com/repos/rust-lang/rust/issues/55658", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/55658/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/55658/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/55658/events", "html_url": "https://github.com/rust-lang/rust/issues/55658", "id": 377077864, "node_id": "MDU6SXNzdWUzNzcwNzc4NjQ=", "number": 55658, "title": "None-delimited identifiers (sometimes) stringified with strange spaces", "user": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132910982, "node_id": "MDU6TGFiZWwxMzI5MTA5ODI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-macros", "name": "A-macros", "color": "f7e101", "default": false, "description": "Area: All kinds of macros (custom derive, macro_rules!, proc macros, ..)"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-11-03T17:55:53Z", "updated_at": "2018-11-03T23:19:56Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "I have the following procedural macro and invocation of the macro. In this code I construct two identical functions `f` and `g` which simply return `stringify!(i32)`, but with a none-delimited group around the `i32` (because of https://github.com/rust-lang/rust/issues/55557). As far as I can tell the function bodies of `f` and `g` are identical token streams.\r\n\r\nBut `f` returns `\"i32\"` and `g` returns `\"  i32  \"`.\r\n\r\nI believe that as written, both functions should return `\"i32\"` without spaces.\r\n\r\n```rust\r\nextern crate proc_macro;\r\nuse self::proc_macro::{Delimiter, Group, Ident, Punct, Spacing, Span, TokenStream, TokenTree};\r\n\r\nuse std::iter::FromIterator;\r\n\r\n#[proc_macro]\r\npub fn repro(input: TokenStream) -> TokenStream {\r\n    println!(\"{:#?}\", input);\r\n\r\n    TokenStream::from_iter(vec![\r\n        // fn f() -> &'static str { $input }\r\n        TokenTree::Ident(Ident::new(\"fn\", Span::call_site())),\r\n        TokenTree::Ident(Ident::new(\"f\", Span::call_site())),\r\n        TokenTree::Group(Group::new(Delimiter::Parenthesis, TokenStream::new())),\r\n        TokenTree::Punct(Punct::new('-', Spacing::Joint)),\r\n        TokenTree::Punct(Punct::new('>', Spacing::Alone)),\r\n        TokenTree::Punct(Punct::new('&', Spacing::Alone)),\r\n        TokenTree::Punct(Punct::new('\\'', Spacing::Joint)),\r\n        TokenTree::Ident(Ident::new(\"static\", Span::call_site())),\r\n        TokenTree::Ident(Ident::new(\"str\", Span::call_site())),\r\n        TokenTree::Group(Group::new(Delimiter::Brace, input)),\r\n\r\n        // fn g() -> &'static str { stringify!(i32) }\r\n        TokenTree::Ident(Ident::new(\"fn\", Span::call_site())),\r\n        TokenTree::Ident(Ident::new(\"g\", Span::call_site())),\r\n        TokenTree::Group(Group::new(Delimiter::Parenthesis, TokenStream::new())),\r\n        TokenTree::Punct(Punct::new('-', Spacing::Joint)),\r\n        TokenTree::Punct(Punct::new('>', Spacing::Alone)),\r\n        TokenTree::Punct(Punct::new('&', Spacing::Alone)),\r\n        TokenTree::Punct(Punct::new('\\'', Spacing::Joint)),\r\n        TokenTree::Ident(Ident::new(\"static\", Span::call_site())),\r\n        TokenTree::Ident(Ident::new(\"str\", Span::call_site())),\r\n        TokenTree::Group(Group::new(Delimiter::Brace, TokenStream::from_iter(vec![\r\n            TokenTree::Ident(Ident::new(\"stringify\", Span::call_site())),\r\n            TokenTree::Punct(Punct::new('!', Spacing::Alone)),\r\n            TokenTree::Group(Group::new(Delimiter::Parenthesis, TokenStream::from_iter(vec![\r\n                TokenTree::Group(Group::new(Delimiter::None, TokenStream::from_iter(vec![\r\n                    TokenTree::Ident(Ident::new(\"i32\", Span::call_site())),\r\n                ]))),\r\n            ]))),\r\n        ])))\r\n    ])\r\n}\r\n```\r\n\r\n```rust\r\nmacro_rules! m {\r\n    ($id:ident) => {\r\n        repro::repro! {\r\n            stringify!($id)\r\n        }\r\n    }\r\n}\r\n\r\nm!(i32);\r\n\r\nfn main() {\r\n    assert_eq!(f(), \"i32\", \"f()\");\r\n    assert_eq!(g(), \"i32\", \"g()\"); // broken, is `\"  i32  \"`\r\n}\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/55658/reactions", "total_count": 3, "+1": 3, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/55658/timeline", "performed_via_github_app": null, "state_reason": null}