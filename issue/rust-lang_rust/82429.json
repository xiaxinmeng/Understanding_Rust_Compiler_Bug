{"url": "https://api.github.com/repos/rust-lang/rust/issues/82429", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/82429/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/82429/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/82429/events", "html_url": "https://github.com/rust-lang/rust/issues/82429", "id": 814008398, "node_id": "MDU6SXNzdWU4MTQwMDgzOTg=", "number": 82429, "title": "Come up with a way to de-duplicate common test 'headers'", "user": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 120005, "node_id": "MDU6TGFiZWwxMjAwMDU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-testsuite", "name": "A-testsuite", "color": "f7e101", "default": false, "description": "Area: The testsuite used to check the correctness of rustc"}, {"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 2345380158, "node_id": "MDU6TGFiZWwyMzQ1MzgwMTU4", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-contributor-roadblock", "name": "A-contributor-roadblock", "color": "f7e101", "default": false, "description": "Area: Makes things more difficult for new contributors to rust itself"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2021-02-23T01:22:10Z", "updated_at": "2021-02-23T01:53:19Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "A growing number of tests having the following 'header':\r\n\r\n```\r\n// compile-flags: -Z span-debug\r\n\r\n#![no_std] // Don't load unnecessary hygiene information from std\r\nextern crate std;\t\r\n```\r\n\r\nThis ensures that if a proc-macro prints out a `Span`, its `SyntaxContext` id will be platform-independent. Without this 'header', the prelude will import a large amount of hygiene information from libstd, some of which comes from expansion of platform-specific `cfg_if!` macros.\r\n\r\nNormally, this could be accomplished by writing a macro. However, all of these tests are designed to *test* some part of the macro infrastructure, so requiring them to use a macro is a recipe for confusion.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/82429/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/82429/timeline", "performed_via_github_app": null, "state_reason": null}