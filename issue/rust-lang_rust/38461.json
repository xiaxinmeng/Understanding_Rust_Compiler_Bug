{"url": "https://api.github.com/repos/rust-lang/rust/issues/38461", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/38461/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/38461/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/38461/events", "html_url": "https://github.com/rust-lang/rust/issues/38461", "id": 196308606, "node_id": "MDU6SXNzdWUxOTYzMDg2MDY=", "number": 38461, "title": "Generic/where clause bounds generated by a macro fail to parse even when syntactically correct", "user": {"login": "abonander", "id": 3198595, "node_id": "MDQ6VXNlcjMxOTg1OTU=", "avatar_url": "https://avatars.githubusercontent.com/u/3198595?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abonander", "html_url": "https://github.com/abonander", "followers_url": "https://api.github.com/users/abonander/followers", "following_url": "https://api.github.com/users/abonander/following{/other_user}", "gists_url": "https://api.github.com/users/abonander/gists{/gist_id}", "starred_url": "https://api.github.com/users/abonander/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abonander/subscriptions", "organizations_url": "https://api.github.com/users/abonander/orgs", "repos_url": "https://api.github.com/users/abonander/repos", "events_url": "https://api.github.com/users/abonander/events{/privacy}", "received_events_url": "https://api.github.com/users/abonander/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-12-19T00:01:46Z", "updated_at": "2016-12-21T13:32:08Z", "closed_at": "2016-12-21T13:21:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There is **no** fragment specifier to make `$genericbnd` work in the following macro:\r\n\r\n([playpen](https://is.gd/uSRu8D))\r\n```rust\r\nmacro_rules! takes_fn {\r\n    (fn $fnname:ident <$generic:ident : $genericbnd:ty> () {}) => (\r\n        fn $fnname <$generic : $genericbnd > () {}\r\n    )\r\n}\r\n\r\ntakes_fn! {\r\n    fn foo<T: ToString>() {}\r\n}\r\n```\r\n\r\nThe parser assumes the `$generic` token encompasses the whole type and fails to parse the actual bound:\r\n\r\n```\r\nerror: expected one of `,`, `=`, `>`, or `?`, found `ToString`\r\n --> <anon>:3:32\r\n  |\r\n3 |         fn $fnname <$generic : $genericbnd > () {}\r\n  |                                ^^^^^^^^^^^\r\n```\r\n\r\nThis similarly fails with `where` clauses:\r\n\r\n([playpen](https://is.gd/bws0m5))\r\n\r\n```rust\r\nmacro_rules! takes_fn {\r\n    (fn $fnname:ident <$generic:ident> () where $whereid:path : $wherebnd:ty {}) => (\r\n        fn $fnname <$generic> () where $whereid : $wherebnd {}\r\n    )\r\n}\r\n\r\ntakes_fn! {\r\n    fn foo<T>() where T: ToString {}\r\n}\r\n```\r\n\r\nWhich yields the following error: \r\n\r\n```\r\nerror: each predicate in a `where` clause must have at least one bound in it\r\n --> <anon>:3:40\r\n  |\r\n3 |         fn $fnname <$generic> () where $whereid : $wherebnd {}\r\n  |                                        ^^^^^^^^^^\r\n\r\nerror: expected one of `,`, `?`, or `{`, found `ToString`\r\n --> <anon>:3:51\r\n  |\r\n3 |         fn $fnname <$generic> () where $whereid : $wherebnd {}\r\n  |              \r\n```\r\n\r\nThis makes it very difficult to create macros which wrap the generation of an item containing generic bounds or where clauses. It would be nice to just use `tt` for the generics but `>` is not a valid closing delimiter for stopping a `tt` fragment at the end of the generics clause, and neither is `{` for stopping it at the end of a `where` clause. This can be done if you modify the Rust grammar to wrap generics and where clauses in parenthesis or curly brackets (because `tt` will not eat a closing parenthesis or curly bracket), but this is ugly and unintuitive.", "closed_by": {"login": "abonander", "id": 3198595, "node_id": "MDQ6VXNlcjMxOTg1OTU=", "avatar_url": "https://avatars.githubusercontent.com/u/3198595?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abonander", "html_url": "https://github.com/abonander", "followers_url": "https://api.github.com/users/abonander/followers", "following_url": "https://api.github.com/users/abonander/following{/other_user}", "gists_url": "https://api.github.com/users/abonander/gists{/gist_id}", "starred_url": "https://api.github.com/users/abonander/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abonander/subscriptions", "organizations_url": "https://api.github.com/users/abonander/orgs", "repos_url": "https://api.github.com/users/abonander/repos", "events_url": "https://api.github.com/users/abonander/events{/privacy}", "received_events_url": "https://api.github.com/users/abonander/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/38461/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/38461/timeline", "performed_via_github_app": null, "state_reason": "completed"}