{"url": "https://api.github.com/repos/rust-lang/rust/issues/99160", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/99160/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/99160/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/99160/events", "html_url": "https://github.com/rust-lang/rust/issues/99160", "id": 1300958199, "node_id": "I_kwDOAAsO6M5Niwv3", "number": 99160, "title": "Should we allow StorageLive on a live local?", "user": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 256133398, "node_id": "MDU6TGFiZWwyNTYxMzMzOTg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-mir", "name": "A-mir", "color": "f7e101", "default": false, "description": "Area: Mid-level IR (MIR) - https://blog.rust-lang.org/2016/04/19/MIR.html"}, {"id": 2352122097, "node_id": "MDU6TGFiZWwyMzUyMTIyMDk3", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-discussion", "name": "C-discussion", "color": "f5f1fd", "default": false, "description": "Category: Discussion or questions that doesn't represent real issues."}, {"id": 5226679137, "node_id": "LA_kwDOAAsO6M8AAAABN4jLYQ", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-opsem", "name": "T-opsem", "color": "bfd4f2", "default": false, "description": "Relevant to the opsem team"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2022-07-11T16:39:04Z", "updated_at": "2023-04-10T17:34:45Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Currently, we disallow `StorageLive` being called on a local that is already live (both in Miri, and in the MIR docs). This was originally motivated by some very vague wording in LLVM making it unclear whether LLVM would behave properly when there are multiple `lifetime.start` without intermediate `lifetime.end`.\r\n\r\nHowever,  LLVM has in the mean time clarified that such a redundant `lifetime.start` is fine, and just resets the contents of the storage to be uninitialized. So @JakobDegen [is suggesting](https://github.com/rust-lang/rust/pull/99050#discussion_r917308299) that we change our StorageLive semantics for the case where the local is already live: this could be be defined behavior, and it will re-allocate the backing local, potentially giving it a new address and resetting its contents to be uninitialized.\r\n\r\nI do not have any fundamental objections to this, but I also don't know if this could cause other problems, or maybe even help in other situations. Having such a \"reallocation\" primitive has previously been [suggested](https://github.com/rust-lang/rust/issues/61849) by @tmandry ; the proposed semantics would mean we don't need another primitive. But maybe some MIR opts would prefer the stricter interpretation of the storage annotations? https://github.com/rust-lang/rust/issues/98896 sounds like @vakaras would prefer a stricter interpretation than what we currently implement for StorageDead, so making StorageLive more relaxed might be a problem for them.\r\n\r\nSo, let's collect all the potential benefits of the current semantics of StorageLive before deciding that we change it. (And also all benefits of the change, of course.)\r\n\r\nCc @rust-lang/wg-unsafe-code-guidelines @rust-lang/wg-mir-opt ", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/99160/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/99160/timeline", "performed_via_github_app": null, "state_reason": null}