{"url": "https://api.github.com/repos/rust-lang/rust/issues/82193", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/82193/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/82193/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/82193/events", "html_url": "https://github.com/rust-lang/rust/issues/82193", "id": 809551393, "node_id": "MDU6SXNzdWU4MDk1NTEzOTM=", "number": 82193, "title": "Incompatibility between musl and crates linking to shared libraries", "user": {"login": "ath-inactive-account", "id": 23701412, "node_id": "MDQ6VXNlcjIzNzAxNDEy", "avatar_url": "https://avatars.githubusercontent.com/u/23701412?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ath-inactive-account", "html_url": "https://github.com/ath-inactive-account", "followers_url": "https://api.github.com/users/ath-inactive-account/followers", "following_url": "https://api.github.com/users/ath-inactive-account/following{/other_user}", "gists_url": "https://api.github.com/users/ath-inactive-account/gists{/gist_id}", "starred_url": "https://api.github.com/users/ath-inactive-account/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ath-inactive-account/subscriptions", "organizations_url": "https://api.github.com/users/ath-inactive-account/orgs", "repos_url": "https://api.github.com/users/ath-inactive-account/repos", "events_url": "https://api.github.com/users/ath-inactive-account/events{/privacy}", "received_events_url": "https://api.github.com/users/ath-inactive-account/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 17, "created_at": "2021-02-16T18:31:27Z", "updated_at": "2023-01-24T23:23:11Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to rewrite [kmscube](https://gitlab.freedesktop.org/mesa/kmscube/) in rust, targetting an environment with musl as libc implementation.\r\nkmscube's goal is to demonstrate the use of opengl without any compositor. It relies on mesa3d's libgbm, which is present as a shared library in my musl environment, at `/usr/lib/libgbm.so`. There is a rust crate wrapping libgbm : [gbm.rs](https://github.com/Smithay/gbm.rs). I'm using the crate as follows:\r\n```rust\r\nextern crate gbm;\r\n\r\nuse gbm::Device as GBMDevice;\r\nuse std::fs::OpenOptions;\r\n\r\nfn main() {\r\n\tlet card = {\r\n\t\tlet mut options = OpenOptions::new();\r\n\t\toptions.read(true);\r\n\t\toptions.write(true);\r\n\t\toptions.open(\"/dev/dri/card0\").unwrap()\r\n\t};\r\n\r\n\tprintln!(\"pre-gbm\");\r\n\tlet _card = GBMDevice::new(card).unwrap();\r\n\tprintln!(\"post-gbm\");\r\n}\r\n```\r\n\r\nUsing the gnu (non-musl) target, this happens:\r\n```\r\ncargo run\r\n    Finished dev [unoptimized + debuginfo] target(s) in 0.01s\r\n     Running `target/debug/azimuth`\r\npre-gbm\r\npost-gbm\r\n```\r\n\r\nUsing the musl target, this happens:\r\n```\r\ncargo run --target=x86_64-unknown-linux-musl\r\n    Finished dev [unoptimized + debuginfo] target(s) in 0.01s\r\n     Running `target/debug/azimuth`\r\npre-gbm\r\nSegmentation fault (core dumped)\r\n```\r\nAnd this SIGSEGV is my problem.\r\n\r\n## Analysis\r\n\r\n`readelf` reveals the dynamic section of each file:\r\n\r\nGNU\r\n```\r\n 0x0000000000000001 (NEEDED)             Shared library: [libEGL.so.1]\r\n 0x0000000000000001 (NEEDED)             Shared library: [libdl.so.2]\r\n 0x0000000000000001 (NEEDED)             Shared library: [libpthread.so.0]\r\n 0x0000000000000001 (NEEDED)             Shared library: [libgcc_s.so.1]\r\n 0x0000000000000001 (NEEDED)             Shared library: [libc.so.6]\r\n 0x0000000000000001 (NEEDED)             Shared library: [ld-linux-x86-64.so.2]\r\n[numeric entries]\r\n 0x000000006ffffffb (FLAGS_1)            Flags: NOW PIE\r\n[numeric entries]\r\n```\r\n\r\nMUSL\r\n```\r\n 0x0000000000000001 (NEEDED)             Shared library: [libgbm.so.1]\r\n[numeric entries]\r\n 0x000000006ffffffb (FLAGS_1)            Flags: NOW PIE\r\n[numeric entries]\r\n```\r\n\r\nAs well as the program headers:\r\n\r\nGNU\r\n```\r\n  Type           Offset             VirtAddr           PhysAddr\r\n                 FileSiz            MemSiz              Flags  Align\r\n  PHDR           0x0000000000000040 0x0000000000000040 0x0000000000000040\r\n                 0x0000000000000310 0x0000000000000310  R      0x8\r\n  INTERP         0x0000000000000350 0x0000000000000350 0x0000000000000350\r\n                 0x000000000000001c 0x000000000000001c  R      0x1\r\n      [Requesting program interpreter: /lib64/ld-linux-x86-64.so.2]\r\n  LOAD           0x0000000000000000 0x0000000000000000 0x0000000000000000\r\n                 0x00000000000040e0 0x00000000000040e0  R      0x1000\r\n  LOAD           0x0000000000005000 0x0000000000005000 0x0000000000005000\r\n                 0x00000000000265a5 0x00000000000265a5  R E    0x1000\r\n  LOAD           0x000000000002c000 0x000000000002c000 0x000000000002c000\r\n                 0x0000000000009d58 0x0000000000009d58  R      0x1000\r\n  LOAD           0x0000000000036320 0x0000000000037320 0x0000000000037320\r\n                 0x0000000000001d18 0x0000000000001e98  RW     0x1000\r\n  DYNAMIC        0x00000000000377a8 0x00000000000387a8 0x00000000000387a8\r\n                 0x0000000000000240 0x0000000000000240  RW     0x8\r\n  NOTE           0x0000000000000370 0x0000000000000370 0x0000000000000370\r\n                 0x0000000000000020 0x0000000000000020  R      0x8\r\n  NOTE           0x0000000000000390 0x0000000000000390 0x0000000000000390\r\n                 0x0000000000000044 0x0000000000000044  R      0x4\r\n  TLS            0x0000000000036320 0x0000000000037320 0x0000000000037320\r\n                 0x0000000000000000 0x0000000000000098  R      0x20\r\n  GNU_PROPERTY   0x0000000000000370 0x0000000000000370 0x0000000000000370\r\n                 0x0000000000000020 0x0000000000000020  R      0x8\r\n  GNU_EH_FRAME   0x0000000000030158 0x0000000000030158 0x0000000000030158\r\n                 0x0000000000000b9c 0x0000000000000b9c  R      0x4\r\n  GNU_STACK      0x0000000000000000 0x0000000000000000 0x0000000000000000\r\n                 0x0000000000000000 0x0000000000000000  RW     0x10\r\n  GNU_RELRO      0x0000000000036320 0x0000000000037320 0x0000000000037320\r\n                 0x0000000000001ce0 0x0000000000001ce0  R      0x1\r\n```\r\n\r\nMUSL\r\n```\r\n  Type           Offset             VirtAddr           PhysAddr\r\n                 FileSiz            MemSiz              Flags  Align\r\n  LOAD           0x0000000000000000 0x0000000000000000 0x0000000000000000\r\n                 0x0000000000006e10 0x0000000000006e10  R      0x1000\r\n  LOAD           0x0000000000007000 0x0000000000007000 0x0000000000007000\r\n                 0x00000000000420eb 0x00000000000420eb  R E    0x1000\r\n  LOAD           0x000000000004a000 0x000000000004a000 0x000000000004a000\r\n                 0x000000000000fda4 0x000000000000fda4  R      0x1000\r\n  LOAD           0x000000000005a060 0x000000000005b060 0x000000000005b060\r\n                 0x0000000000002100 0x0000000000003d08  RW     0x1000\r\n  DYNAMIC        0x000000000005b788 0x000000000005c788 0x000000000005c788\r\n                 0x0000000000000140 0x0000000000000140  RW     0x8\r\n  NOTE           0x0000000000000270 0x0000000000000270 0x0000000000000270\r\n                 0x0000000000000024 0x0000000000000024  R      0x4\r\n  TLS            0x000000000005a060 0x000000000005b060 0x000000000005b060\r\n                 0x0000000000000000 0x00000000000000d8  R      0x20\r\n  GNU_EH_FRAME   0x0000000000051e24 0x0000000000051e24 0x0000000000051e24\r\n                 0x000000000000125c 0x000000000000125c  R      0x4\r\n  GNU_STACK      0x0000000000000000 0x0000000000000000 0x0000000000000000\r\n                 0x0000000000000000 0x0000000000000000  RW     0x10\r\n  GNU_RELRO      0x000000000005a060 0x000000000005b060 0x000000000005b060\r\n                 0x0000000000001fa0 0x0000000000001fa0  R      0x1\r\n```\r\n\r\nUsing `strace`, I was able to see that the musl binary never tries to reach for libgbm.\r\nThe function call at line 15 results in the use of the symbol `gbm_create_device`, which was never resolved and points to NULL.\r\n\u2192 segmentation fault.\r\n\r\n## Interpretation\r\n\r\nUpon inspection of the musl target specification in [rust-lang/rust](https://github.com/rust-lang/rust/blob/master/compiler/rustc_target/src/spec/x86_64_unknown_linux_musl.rs), I understand that the musl target systematically produces static binaries. [Further in the targets code](https://github.com/rust-lang/rust/blob/master/compiler/rustc_codegen_ssa/src/back/linker.rs#L291), the `static_position_independent_executables` target option is converted to a command line argument for gcc: `-static`.\r\n\r\nFrom the GCC manual:\r\n```\r\n-static: On systems that support dynamic linking, this overrides -pie and prevents linking with the shared libraries.\r\n```\r\nI think GCC achieves this by simply removing the code relocating imported symbols, leaving them unresolved. If we try to use them, we get a segfault.\r\n\r\nDoes this mean that the musl target is incompatible with any crate that links with shared library at runtime ?\r\nMy motivation for using musl is not getting fully static binaries, I just like that it's lightweight and simple. If this incompatibility exists, I'd be happier if I could disable the `static_position_independent_executables` as a feature, so I could use all crates with musl.\r\n\r\n**I'm reporting this as a bug because rustc does not warn the developer that using crates linking to a shlib will lead to segfaults.**\r\n\r\n## Meta\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.50.0 (cb75ad5db 2021-02-10)\r\nbinary: rustc\r\ncommit-hash: cb75ad5db02783e8b0222fee363c5f63f7e2cf5b\r\ncommit-date: 2021-02-10\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.50.0\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/82193/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/82193/timeline", "performed_via_github_app": null, "state_reason": null}