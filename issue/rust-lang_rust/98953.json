{"url": "https://api.github.com/repos/rust-lang/rust/issues/98953", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/98953/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/98953/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/98953/events", "html_url": "https://github.com/rust-lang/rust/issues/98953", "id": 1294644498, "node_id": "I_kwDOAAsO6M5NKrUS", "number": 98953, "title": "std panicking implementation comments suggest we might make double-panic not abort", "user": {"login": "CAD97", "id": 5992217, "node_id": "MDQ6VXNlcjU5OTIyMTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5992217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CAD97", "html_url": "https://github.com/CAD97", "followers_url": "https://api.github.com/users/CAD97/followers", "following_url": "https://api.github.com/users/CAD97/following{/other_user}", "gists_url": "https://api.github.com/users/CAD97/gists{/gist_id}", "starred_url": "https://api.github.com/users/CAD97/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CAD97/subscriptions", "organizations_url": "https://api.github.com/users/CAD97/orgs", "repos_url": "https://api.github.com/users/CAD97/repos", "events_url": "https://api.github.com/users/CAD97/events{/privacy}", "received_events_url": "https://api.github.com/users/CAD97/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37234, "node_id": "MDU6TGFiZWwzNzIzNA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-cleanup", "name": "C-cleanup", "color": "f5f1fd", "default": false, "description": "Category: PRs that clean code up or issues documenting cleanup."}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 3812070271, "node_id": "LA_kwDOAAsO6M7jN5N_", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-technical-debt", "name": "A-technical-debt", "color": "f7e101", "default": false, "description": "Area: Internal cleanup work"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-07-05T18:44:19Z", "updated_at": "2022-07-05T18:44:21Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "https://github.com/rust-lang/rust/blob/efb171e2350de2bec6dd1f035b99bc00535c1c15/library/std/src/panicking.rs#L707-L714\r\n\r\nAt this point, I think we've effectively guaranteed in practice that a panicking while already unwinding leads to a full-process abort, and changing this to attempt to unwind the inner panic or even just to abort the thread but not the whole process is likely *far* to breaking. We're even considering [making unwinds from drops always abort](https://github.com/rust-lang/lang-team/issues/97), though AIUI this cannot replace the panic while unwinding immediate abort check.\r\n\r\nBest guess at appropriate labels...\r\n\r\n@rustbot modify labels +T-compiler +T-lang +C-cleanup +A-technical-debt", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/98953/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/98953/timeline", "performed_via_github_app": null, "state_reason": null}