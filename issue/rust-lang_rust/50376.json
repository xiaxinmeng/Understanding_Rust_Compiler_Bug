{"url": "https://api.github.com/repos/rust-lang/rust/issues/50376", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/50376/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/50376/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/50376/events", "html_url": "https://github.com/rust-lang/rust/issues/50376", "id": 319292673, "node_id": "MDU6SXNzdWUzMTkyOTI2NzM=", "number": 50376, "title": "How to determine hygienic context for the \"crate root\" in absolute-by-default paths", "user": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 632573348, "node_id": "MDU6TGFiZWw2MzI1NzMzNDg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-macros-2.0", "name": "A-macros-2.0", "color": "f7e101", "default": false, "description": "Area: declarative macros 2.0, https://github.com/rust-lang/rust/issues/39412"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-05-01T19:03:39Z", "updated_at": "2018-11-26T21:26:27Z", "closed_at": "2018-11-26T21:26:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Procedural macros generate tokens, but sometimes the information is kept not in tokens, but rather in the lack of them (compare with https://github.com/rust-lang/rust/issues/50130).\r\n\r\nIn particular, paths in `use` are resolved as absolute-by-default.\r\nEffectively, they have one extra segment added at the start during name resolution\r\n```rust\r\nuse a::b::c;\r\n\r\n=>\r\n\r\nuse {{root}}::a::b::c;\r\n// Or using the syntax from https://github.com/rust-lang/rust/issues/44660\r\nuse crate::a::b::c;\r\n```\r\n\r\nThe added root segment has its hygienic context and may be resolved at definition site (similarly to  `use $crate::a::b::c` from Macros 1.0) or at call site (similarly to `use a::b::c` in Macros 1.0).\r\n\r\nThe question is how to determine this context, given that the root segment doesn't have its own explicit token?\r\nWithout its own token the crate root needs to inherit context from some other token that really exists (compare with https://github.com/rust-lang/rust/issues/50122), but what token it should be exactly is a pretty tough choice.\r\n```rust\r\nmacro m() {\r\n    use a::b::c; // ctxt(root) is most probably def-site because *everything* here has def-site context\r\n    use a::$b; // ctxt(root) is probably def-site?\r\n    use ::$a; // ctxt(root) is probably def-site??\r\n    use $a; // ctxt(root) is ???\r\n    $use_passed_from_the_outside a::b::c; // ctxt(root) is call-site??? should it be inherited from `use`?\r\n    $use_passed_from_the_outside $a; // this is not even funny\r\n}\r\n```\r\n\r\n---\r\nI *hope* this issue doesn't affect Procedural Macros 1.2 (crossing my fingers).\r\nSince all tokens generated and accepted by those macros are supposed to have the same call-site context, implicitly created crate roots will have the same call-site context anyway regardless of the token from which it's going to inherit it.", "closed_by": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/50376/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/50376/timeline", "performed_via_github_app": null, "state_reason": "completed"}