{"url": "https://api.github.com/repos/rust-lang/rust/issues/73584", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/73584/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/73584/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/73584/events", "html_url": "https://github.com/rust-lang/rust/issues/73584", "id": 642581706, "node_id": "MDU6SXNzdWU2NDI1ODE3MDY=", "number": 73584, "title": "ICE with main lang items", "user": {"login": "benbrittain", "id": 207432, "node_id": "MDQ6VXNlcjIwNzQzMg==", "avatar_url": "https://avatars.githubusercontent.com/u/207432?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benbrittain", "html_url": "https://github.com/benbrittain", "followers_url": "https://api.github.com/users/benbrittain/followers", "following_url": "https://api.github.com/users/benbrittain/following{/other_user}", "gists_url": "https://api.github.com/users/benbrittain/gists{/gist_id}", "starred_url": "https://api.github.com/users/benbrittain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benbrittain/subscriptions", "organizations_url": "https://api.github.com/users/benbrittain/orgs", "repos_url": "https://api.github.com/users/benbrittain/repos", "events_url": "https://api.github.com/users/benbrittain/events{/privacy}", "received_events_url": "https://api.github.com/users/benbrittain/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1353613039, "node_id": "MDU6TGFiZWwxMzUzNjEzMDM5", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lang-item", "name": "A-lang-item", "color": "f7e101", "default": false, "description": "Area: lang items"}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-21T15:12:42Z", "updated_at": "2021-10-01T06:19:50Z", "closed_at": "2021-10-01T06:19:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\nin library:\r\n```Rust\r\n#[lang = \"start\"]                                                                                                                             \r\nextern \"C\" fn start(main: fn(), _argc: isize, _argv: *const *const u8) -> isize {                                                             \r\n    main();                                                                                                                                   \r\n    0                                                                                                                                         \r\n}                                                                                                                                             \r\n ```\r\nin no_std binary:\r\n```Rust\r\nfn main() {\r\n...\r\n}\r\n```\r\n\r\nThis goes away if I turn on `#![no_main]` in the binary and annotate main with `#[no_mangle]`.\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```rustc 1.46.0-nightly (f455e46ea 2020-06-20)\r\nbinary: rustc\r\ncommit-hash: f455e46eae1a227d735091091144601b467e1565\r\ncommit-date: 2020-06-20\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.46.0-nightly\r\nLLVM version: 10.0\r\n```\r\n\r\n### Error output\r\n\r\n```\r\n   Compiling rust-example v0.1.0 (/home/ben/workspace/nrf-test/rust-example)\r\nerror: internal compiler error: src/librustc_metadata/rmeta/decoder.rs:1106:17: get_optimized_mir: missing MIR for `DefId(4:22 ~ nrf52_sys[e357]::start[0])`\r\n\r\nthread 'rustc' panicked at 'Box<Any>', src/librustc_errors/lib.rs:916:9\r\nstack backtrace:\r\n   0: backtrace::backtrace::libunwind::trace\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/libunwind.rs:86\r\n   1: backtrace::backtrace::trace_unsynchronized\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/mod.rs:66\r\n   2: std::sys_common::backtrace::_print_fmt\r\n             at src/libstd/sys_common/backtrace.rs:78\r\n   3: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt\r\n             at src/libstd/sys_common/backtrace.rs:59\r\n   4: core::fmt::write\r\n             at src/libcore/fmt/mod.rs:1076\r\n   5: std::io::Write::write_fmt\r\n             at src/libstd/io/mod.rs:1537\r\n   6: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:62\r\n   7: std::sys_common::backtrace::print\r\n             at src/libstd/sys_common/backtrace.rs:49\r\n   8: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/panicking.rs:198\r\n   9: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:217\r\n  10: rustc_driver::report_ice\r\n  11: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:477\r\n  12: std::panicking::begin_panic\r\n  13: rustc_errors::HandlerInner::bug\r\n  14: rustc_errors::Handler::bug\r\n  15: rustc_middle::util::bug::opt_span_bug_fmt::{{closure}}\r\n  16: rustc_middle::ty::context::tls::with_opt::{{closure}}\r\n  17: rustc_middle::ty::context::tls::with_opt\r\n  18: rustc_middle::util::bug::opt_span_bug_fmt\r\n  19: rustc_middle::util::bug::bug_fmt\r\n  20: rustc_metadata::rmeta::decoder::<impl rustc_metadata::creader::CrateMetadataRef>::get_optimized_mir::{{closure}}\r\n  21: rustc_metadata::rmeta::decoder::<impl rustc_metadata::creader::CrateMetadataRef>::get_optimized_mir\r\n  22: rustc_metadata::rmeta::decoder::cstore_impl::provide_extern::optimized_mir\r\n  23: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::optimized_mir>::compute\r\n  24: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  25: rustc_data_structures::stack::ensure_sufficient_stack\r\n  26: rustc_query_system::query::plumbing::get_query_impl\r\n  27: rustc_middle::ty::<impl rustc_middle::ty::context::TyCtxt>::instance_mir\r\n  28: rustc_mir::monomorphize::collector::collect_neighbours\r\n  29: rustc_data_structures::stack::ensure_sufficient_stack\r\n  30: rustc_mir::monomorphize::collector::collect_items_rec\r\n  31: rustc_mir::monomorphize::collector::collect_crate_mono_items\r\n  32: rustc_mir::monomorphize::partitioning::collect_and_partition_mono_items\r\n  33: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::collect_and_partition_mono_items>::compute\r\n  34: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  35: rustc_data_structures::stack::ensure_sufficient_stack\r\n  36: rustc_query_system::query::plumbing::get_query_impl\r\n  37: rustc_codegen_ssa::base::codegen_crate\r\n  38: <rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::CodegenBackend>::codegen_crate\r\n  39: rustc_interface::passes::start_codegen\r\n  40: rustc_middle::ty::context::tls::enter_global\r\n  41: rustc_interface::queries::Queries::ongoing_codegen\r\n  42: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n  43: rustc_span::with_source_map\r\n  44: rustc_interface::interface::run_compiler_in_existing_thread_pool\r\n  45: scoped_tls::ScopedKey<T>::set\r\n  46: rustc_ast::attr::with_globals\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.46.0-nightly (f455e46ea 2020-06-20) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C panic=abort -C embed-bitcode=no -C debuginfo=2 -C linker=arm-none-eabi-gcc -C link-arg=-mthumb -C link-arg=-Tnrf52.ld -C link-arg=-mcpu=cortex-m4 -C link-arg=--specs=nano.specs -C link-arg=-Wl,--gc-sections -C link-arg=-Wl,--start-group -C link-arg=-Wl,--end-group -C link-arg=-Wl,--build-id=none -C link-arg=-mabi=aapcs -C link-arg=-mfloat-abi=hard -C link-arg=-mfpu=fpv4-sp-d16 --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [optimized_mir] optimizing MIR for `nrf52_sys::start`\r\n#1 [collect_and_partition_mono_items] collect_and_partition_mono_items\r\nend of query stack\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/73584/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/73584/timeline", "performed_via_github_app": null, "state_reason": "completed"}