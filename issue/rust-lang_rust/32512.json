{"url": "https://api.github.com/repos/rust-lang/rust/issues/32512", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/32512/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/32512/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/32512/events", "html_url": "https://github.com/rust-lang/rust/issues/32512", "id": 143731127, "node_id": "MDU6SXNzdWUxNDM3MzExMjc=", "number": 32512, "title": "Support death tests in libtest", "user": {"login": "gnzlbg", "id": 904614, "node_id": "MDQ6VXNlcjkwNDYxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/904614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnzlbg", "html_url": "https://github.com/gnzlbg", "followers_url": "https://api.github.com/users/gnzlbg/followers", "following_url": "https://api.github.com/users/gnzlbg/following{/other_user}", "gists_url": "https://api.github.com/users/gnzlbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnzlbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnzlbg/subscriptions", "organizations_url": "https://api.github.com/users/gnzlbg/orgs", "repos_url": "https://api.github.com/users/gnzlbg/repos", "events_url": "https://api.github.com/users/gnzlbg/events{/privacy}", "received_events_url": "https://api.github.com/users/gnzlbg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 630810559, "node_id": "MDU6TGFiZWw2MzA4MTA1NTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-libtest", "name": "A-libtest", "color": "f7e101", "default": false, "description": "Area: #[test] related"}, {"id": 657353545, "node_id": "MDU6TGFiZWw2NTczNTM1NDU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-accepted", "name": "C-feature-accepted", "color": "f5f1fd", "default": false, "description": "Category: A feature request that has been accepted pending implementation."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2016-03-26T17:11:53Z", "updated_at": "2019-08-27T05:36:54Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I would like to be able to mark a test as a death test of some kind, like, running this code should trigger an `abort` (instead of just an unwind), an `exit` with a particular exit code, or an `assert` (in case `assert` doesn't unwind if, e.g. `panic=abort`).\n\nThis requires two fundamental ingredients, libtests needs to support:\n- spawning test in different processes (that is, process spawning/setup and teardown)\n- marking tests as death tests (and maybe indicate the type).\n\nA way to mark a test as a _death test_ is important, since in the case in which `panic != abort` one still wants all the non death tests to happen within the same process for speed, but libtest stills need to spawn different processes for the _death tests_ only (so it needs a way to tell these apart).\n\nFor crates in which `panic == abort`, it would be nice if one could turn all tests into _death tests_ at the crate level. \n\nThis issue is tangentially related to: https://github.com/rust-lang/rfcs/pull/1513\n\nGoogle Test is probably the most famous unit-testing framework that supports these although in C++ other frameworks do as well. It usually takes 3k LOC C++ code to implement a \"portable\" process spawning/set up/tear down mechanism for spawning death tests, so it is quite a bit of machinery that might better belong outside of rustc.\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/32512/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/32512/timeline", "performed_via_github_app": null, "state_reason": null}