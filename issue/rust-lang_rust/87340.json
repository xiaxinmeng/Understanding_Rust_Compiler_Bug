{"url": "https://api.github.com/repos/rust-lang/rust/issues/87340", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/87340/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/87340/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/87340/events", "html_url": "https://github.com/rust-lang/rust/issues/87340", "id": 949353846, "node_id": "MDU6SXNzdWU5NDkzNTM4NDY=", "number": 87340, "title": "ICE: impl-with-unconstrained-param.rs -Zsave-analysis --emit=mir : Err value: UnresolvedTy(_#0t)", "user": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1472502130, "node_id": "MDU6TGFiZWwxNDcyNTAyMTMw", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-type_alias_impl_trait", "name": "F-type_alias_impl_trait", "color": "f9c0cc", "default": false, "description": "`#[feature(type_alias_impl_trait)]`"}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-07-21T05:57:15Z", "updated_at": "2022-03-30T07:45:41Z", "closed_at": "2022-03-30T07:45:41Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\ncode from `src/test/ui/type-alias-impl-trait/impl-with-unconstrained-param.rs ` (may no longer exist)\r\n```Rust\r\n#![feature(type_alias_impl_trait)]\r\n\r\ntrait X {\r\n    type I;\r\n    fn f() -> Self::I;\r\n}\r\n\r\nimpl<T> X for () {\r\n    type I = impl Sized;\r\n    //~^ ERROR could not find defining uses\r\n    fn f() -> Self::I {}\r\n    //~^ ERROR type annotations needed\r\n}\r\n\r\nfn main() {}\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.55.0-nightly (014026d1a 2021-07-19)\r\nbinary: rustc\r\ncommit-hash: 014026d1a7ca991f82f12efa95ef4dffb29dc8af\r\ncommit-date: 2021-07-19\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.55.0-nightly\r\nLLVM version: 12.0.1\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nerror[E0658]: `impl Trait` in type aliases is unstable\r\n  --> ./src/test/ui/type-alias-impl-trait/impl-with-unconstrained-param.rs:12:14\r\n   |\r\n12 |     type I = impl Sized;\r\n   |              ^^^^^^^^^^\r\n   |\r\n   = note: see issue #63063 <https://github.com/rust-lang/rust/issues/63063> for more information\r\n   = help: add `#![feature(min_type_alias_impl_trait)]` to the crate attributes to enable\r\n\r\nwarning: the feature `type_alias_impl_trait` is incomplete and may not be safe to use and/or cause compiler crashes\r\n --> ./src/test/ui/type-alias-impl-trait/impl-with-unconstrained-param.rs:4:12\r\n  |\r\n4 | #![feature(type_alias_impl_trait)]\r\n  |            ^^^^^^^^^^^^^^^^^^^^^\r\n  |\r\n  = note: `#[warn(incomplete_features)]` on by default\r\n  = note: see issue #63063 <https://github.com/rust-lang/rust/issues/63063> for more information\r\n\r\nerror[E0207]: the type parameter `T` is not constrained by the impl trait, self type, or predicates\r\n  --> ./src/test/ui/type-alias-impl-trait/impl-with-unconstrained-param.rs:11:6\r\n   |\r\n11 | impl<T> X for () {\r\n   |      ^ unconstrained type parameter\r\n\r\nerror[E0282]: type annotations needed\r\n  --> ./src/test/ui/type-alias-impl-trait/impl-with-unconstrained-param.rs:14:23\r\n   |\r\n14 |     fn f() -> Self::I {}\r\n   |                       ^^ cannot infer type for type parameter `T`\r\n\r\nthread 'rustc' panicked at 'called `Result::unwrap()` on an `Err` value: UnresolvedTy(_#0t)', compiler/rustc_typeck/src/check/writeback.rs:499:75\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.55.0-nightly (014026d1a 2021-07-19) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -Z save-analysis\r\n\r\nquery stack during panic:\r\n#0 [typeck] type-checking `<impl at ./src/test/ui/type-alias-impl-trait/impl-with-unconstrained-param.rs:11:1: 16:2>::f`\r\nend of query stack\r\nerror: aborting due to 3 previous errors; 1 warning emitted\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nerror[E0658]: `impl Trait` in type aliases is unstable\r\n  --> ./src/test/ui/type-alias-impl-trait/impl-with-unconstrained-param.rs:12:14\r\n   |\r\n12 |     type I = impl Sized;\r\n   |              ^^^^^^^^^^\r\n   |\r\n   = note: see issue #63063 <https://github.com/rust-lang/rust/issues/63063> for more information\r\n   = help: add `#![feature(min_type_alias_impl_trait)]` to the crate attributes to enable\r\n\r\nwarning: the feature `type_alias_impl_trait` is incomplete and may not be safe to use and/or cause compiler crashes\r\n --> ./src/test/ui/type-alias-impl-trait/impl-with-unconstrained-param.rs:4:12\r\n  |\r\n4 | #![feature(type_alias_impl_trait)]\r\n  |            ^^^^^^^^^^^^^^^^^^^^^\r\n  |\r\n  = note: `#[warn(incomplete_features)]` on by default\r\n  = note: see issue #63063 <https://github.com/rust-lang/rust/issues/63063> for more information\r\n\r\nerror[E0207]: the type parameter `T` is not constrained by the impl trait, self type, or predicates\r\n  --> ./src/test/ui/type-alias-impl-trait/impl-with-unconstrained-param.rs:11:6\r\n   |\r\n11 | impl<T> X for () {\r\n   |      ^ unconstrained type parameter\r\n\r\nerror[E0282]: type annotations needed\r\n  --> ./src/test/ui/type-alias-impl-trait/impl-with-unconstrained-param.rs:14:23\r\n   |\r\n14 |     fn f() -> Self::I {}\r\n   |                       ^^ cannot infer type for type parameter `T`\r\n\r\nthread 'rustc' panicked at 'called `Result::unwrap()` on an `Err` value: UnresolvedTy(_#0t)', compiler/rustc_typeck/src/check/writeback.rs:499:75\r\nstack backtrace:\r\n   0:     0x7f0497f07b90 - std::backtrace_rs::backtrace::libunwind::trace::h0f5cd2ee8b0d7274\r\n                               at /rustc/014026d1a7ca991f82f12efa95ef4dffb29dc8af/library/std/src/../../backtrace/src/backtrace/libunwind.rs:90:5\r\n   1:     0x7f0497f07b90 - std::backtrace_rs::backtrace::trace_unsynchronized::h06905b5aeda069a1\r\n                               at /rustc/014026d1a7ca991f82f12efa95ef4dffb29dc8af/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\r\n   2:     0x7f0497f07b90 - std::sys_common::backtrace::_print_fmt::h4fe4c7c875072f30\r\n                               at /rustc/014026d1a7ca991f82f12efa95ef4dffb29dc8af/library/std/src/sys_common/backtrace.rs:67:5\r\n   3:     0x7f0497f07b90 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hcc0746f004a9b7ef\r\n                               at /rustc/014026d1a7ca991f82f12efa95ef4dffb29dc8af/library/std/src/sys_common/backtrace.rs:46:22\r\n   4:     0x7f0497f756cc - core::fmt::write::h9a6d9c74526a6c1b\r\n                               at /rustc/014026d1a7ca991f82f12efa95ef4dffb29dc8af/library/core/src/fmt/mod.rs:1115:17\r\n   5:     0x7f0497ef9315 - std::io::Write::write_fmt::h23dab4cc9ce72ee2\r\n                               at /rustc/014026d1a7ca991f82f12efa95ef4dffb29dc8af/library/std/src/io/mod.rs:1665:15\r\n   6:     0x7f0497f0b8ab - std::sys_common::backtrace::_print::h173dc702502d65d2\r\n                               at /rustc/014026d1a7ca991f82f12efa95ef4dffb29dc8af/library/std/src/sys_common/backtrace.rs:49:5\r\n   7:     0x7f0497f0b8ab - std::sys_common::backtrace::print::h61bd27c4742ba817\r\n                               at /rustc/014026d1a7ca991f82f12efa95ef4dffb29dc8af/library/std/src/sys_common/backtrace.rs:36:9\r\n   8:     0x7f0497f0b8ab - std::panicking::default_hook::{{closure}}::hcaae87f0495ae613\r\n                               at /rustc/014026d1a7ca991f82f12efa95ef4dffb29dc8af/library/std/src/panicking.rs:208:50\r\n   9:     0x7f0497f0b381 - std::panicking::default_hook::h0538e728ee080db0\r\n                               at /rustc/014026d1a7ca991f82f12efa95ef4dffb29dc8af/library/std/src/panicking.rs:225:9\r\n  10:     0x7f04986e4e91 - rustc_driver::DEFAULT_HOOK::{{closure}}::{{closure}}::h9137b7ac1a66352b\r\n  11:     0x7f0497f0c0d9 - std::panicking::rust_panic_with_hook::h3039e236b6ca482c\r\n                               at /rustc/014026d1a7ca991f82f12efa95ef4dffb29dc8af/library/std/src/panicking.rs:626:17\r\n  12:     0x7f0497f0bb97 - std::panicking::begin_panic_handler::{{closure}}::h884fbab544ffd91c\r\n                               at /rustc/014026d1a7ca991f82f12efa95ef4dffb29dc8af/library/std/src/panicking.rs:519:13\r\n  13:     0x7f0497f0808c - std::sys_common::backtrace::__rust_end_short_backtrace::hdaf2e18ba3d91210\r\n                               at /rustc/014026d1a7ca991f82f12efa95ef4dffb29dc8af/library/std/src/sys_common/backtrace.rs:141:18\r\n  14:     0x7f0497f0baf9 - rust_begin_unwind\r\n                               at /rustc/014026d1a7ca991f82f12efa95ef4dffb29dc8af/library/std/src/panicking.rs:515:5\r\n  15:     0x7f0497ed6b71 - core::panicking::panic_fmt::hcf5f6d96e1dd7099\r\n                               at /rustc/014026d1a7ca991f82f12efa95ef4dffb29dc8af/library/core/src/panicking.rs:92:14\r\n  16:     0x7f0497ed6c63 - core::result::unwrap_failed::he898b02f57993c42\r\n                               at /rustc/014026d1a7ca991f82f12efa95ef4dffb29dc8af/library/core/src/result.rs:1599:5\r\n  17:     0x7f0499988b79 - rustc_typeck::check::writeback::WritebackCx::visit_opaque_types::h232a08fae1c90ee2\r\n  18:     0x7f04998e6fcf - rustc_typeck::check::writeback::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::resolve_type_vars_in_body::h8b54c18e0f3a4b79\r\n  19:     0x7f0499963887 - rustc_infer::infer::InferCtxtBuilder::enter::h5b0049019ece2d91\r\n  20:     0x7f04999c25f0 - rustc_typeck::check::typeck::h45b639d5069c89f7\r\n  21:     0x7f0499d73a8c - rustc_query_system::query::plumbing::get_query_impl::h475bb642f2deb506\r\n  22:     0x7f0499de5c3b - <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::typeck::h34bb83bc2eb7a080\r\n  23:     0x7f0498735d79 - rustc_save_analysis::dump_visitor::DumpVisitor::process_method::hc8aa5dbea4311631\r\n  24:     0x7f0498738766 - rustc_save_analysis::dump_visitor::DumpVisitor::process_impl_item::h59b684c892943cde\r\n  25:     0x7f0498734253 - rustc_save_analysis::dump_visitor::DumpVisitor::nest_typeck_results::h253be14039dac37b\r\n  26:     0x7f049873b40c - <rustc_save_analysis::dump_visitor::DumpVisitor as rustc_hir::intravisit::Visitor>::visit_item::h9b52cebc0df4f7b9\r\n  27:     0x7f0498733216 - rustc_hir::intravisit::Visitor::visit_nested_item::h9e975cc0f2a00c21\r\n  28:     0x7f0498720bb1 - rustc_hir::intravisit::walk_crate::he7f189f23867b6fd\r\n  29:     0x7f0498738b70 - rustc_save_analysis::dump_visitor::DumpVisitor::process_crate::h8b9b619ce8c21fa3\r\n  30:     0x7f0498713f5b - rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps::h411459e0c11e6a97\r\n  31:     0x7f0498716487 - std::thread::local::LocalKey<T>::with::h12d2413a7a54a096\r\n  32:     0x7f04986e6d87 - rustc_save_analysis::process_crate::hbe9c7d8fa9d24483\r\n  33:     0x7f04986f14b7 - rustc_session::utils::<impl rustc_session::session::Session>::time::ha6483c63bbc8b307\r\n  34:     0x7f049a1e56d8 - rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter::hc31f40c1543d1436\r\n  35:     0x7f049a1d3dcc - rustc_span::with_source_map::h0260ea075482ae79\r\n  36:     0x7f049a1e61ba - rustc_interface::interface::create_compiler_and_run::he7ef8517199cf024\r\n  37:     0x7f049a1d9099 - scoped_tls::ScopedKey<T>::set::h603cbfb5f6e2dd76\r\n  38:     0x7f049a1d5eda - std::sys_common::backtrace::__rust_begin_short_backtrace::h23393d8936f34bfc\r\n  39:     0x7f049a1d4765 - core::ops::function::FnOnce::call_once{{vtable.shim}}::h513135f67ecd4e6b\r\n  40:     0x7f0497f18667 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::hd5b860c6542b008a\r\n                               at /rustc/014026d1a7ca991f82f12efa95ef4dffb29dc8af/library/alloc/src/boxed.rs:1572:9\r\n  41:     0x7f0497f18667 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::hc87b98c8a3a585ed\r\n                               at /rustc/014026d1a7ca991f82f12efa95ef4dffb29dc8af/library/alloc/src/boxed.rs:1572:9\r\n  42:     0x7f0497f18667 - std::sys::unix::thread::Thread::new::thread_start::ha990175c8f3779cc\r\n                               at /rustc/014026d1a7ca991f82f12efa95ef4dffb29dc8af/library/std/src/sys/unix/thread.rs:74:17\r\n  43:     0x7f0497e24259 - start_thread\r\n  44:     0x7f0497d395e3 - __GI___clone\r\n  45:                0x0 - <unknown>\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.55.0-nightly (014026d1a 2021-07-19) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -Z save-analysis\r\n\r\nquery stack during panic:\r\n#0 [typeck] type-checking `<impl at ./src/test/ui/type-alias-impl-trait/impl-with-unconstrained-param.rs:11:1: 16:2>::f`\r\nend of query stack\r\nerror: aborting due to 3 previous errors; 1 warning emitted\r\n\r\nSome errors have detailed explanations: E0207, E0282, E0658.\r\nFor more information about an error, try `rustc --explain E0207`.\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/87340/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/87340/timeline", "performed_via_github_app": null, "state_reason": "completed"}