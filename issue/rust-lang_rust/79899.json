{"url": "https://api.github.com/repos/rust-lang/rust/issues/79899", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/79899/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/79899/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/79899/events", "html_url": "https://github.com/rust-lang/rust/issues/79899", "id": 761300910, "node_id": "MDU6SXNzdWU3NjEzMDA5MTA=", "number": 79899, "title": "Output filenames for -Z instrument-coverage", "user": {"login": "vmx", "id": 42839, "node_id": "MDQ6VXNlcjQyODM5", "avatar_url": "https://avatars.githubusercontent.com/u/42839?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vmx", "html_url": "https://github.com/vmx", "followers_url": "https://api.github.com/users/vmx/followers", "following_url": "https://api.github.com/users/vmx/following{/other_user}", "gists_url": "https://api.github.com/users/vmx/gists{/gist_id}", "starred_url": "https://api.github.com/users/vmx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vmx/subscriptions", "organizations_url": "https://api.github.com/users/vmx/orgs", "repos_url": "https://api.github.com/users/vmx/repos", "events_url": "https://api.github.com/users/vmx/events{/privacy}", "received_events_url": "https://api.github.com/users/vmx/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}, {"id": 2483744621, "node_id": "MDU6TGFiZWwyNDgzNzQ0NjIx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-code-coverage", "name": "A-code-coverage", "color": "f7e101", "default": false, "description": "Area: Source-based code coverage (-Cinstrument-coverage)"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-12-10T14:43:55Z", "updated_at": "2021-01-18T20:05:02Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm trying out the new `-Z instrument-coverage` support. One issue I ran into that by default the output is stored in a file called `default.profraw`. That file gets overridden on every new run.\r\n\r\nWhen running `cargo test` that is a problem. It runs several executables (e.g. for the library tests, integration tests doc tests), where each of them overrides the `default.profraw`.\r\n\r\nI don't know if that is possible, but it would b great to have `.profraw` files named after the executable they were run with.\r\n\r\nUntil then what you can do is running `cargo test` with `LLVM_PROFILE_FILE` set to `%m.profraw`:\r\n\r\n    LLVM_PROFILE_FILE=\"%m.profraw\" CARGO_INCREMENTAL=0 RUSTFLAGS=\"-Clink-dead-code -Copt-level=0 -Ccodegen-units=1 -Zpanic_abort_tests -Cpanic=abort -Coverflow-checks=off -Zinstrument-coverage -Cinline-threshold=0\" cargo +nightly test\r\n\r\nWhich will then result in file names something like `52458732642933725367_0.profraw`, which can then be merged into a single indexed profile file via `llvm-profdata merge -o default.profdata *.profraw`.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/79899/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/79899/timeline", "performed_via_github_app": null, "state_reason": null}