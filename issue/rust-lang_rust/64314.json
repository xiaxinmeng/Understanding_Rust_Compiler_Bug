{"url": "https://api.github.com/repos/rust-lang/rust/issues/64314", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/64314/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/64314/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/64314/events", "html_url": "https://github.com/rust-lang/rust/issues/64314", "id": 491179677, "node_id": "MDU6SXNzdWU0OTExNzk2Nzc=", "number": 64314, "title": "Add other variants to std::io::ErrorKind enum", "user": {"login": "Alphare", "id": 9445758, "node_id": "MDQ6VXNlcjk0NDU3NTg=", "avatar_url": "https://avatars.githubusercontent.com/u/9445758?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Alphare", "html_url": "https://github.com/Alphare", "followers_url": "https://api.github.com/users/Alphare/followers", "following_url": "https://api.github.com/users/Alphare/following{/other_user}", "gists_url": "https://api.github.com/users/Alphare/gists{/gist_id}", "starred_url": "https://api.github.com/users/Alphare/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Alphare/subscriptions", "organizations_url": "https://api.github.com/users/Alphare/orgs", "repos_url": "https://api.github.com/users/Alphare/repos", "events_url": "https://api.github.com/users/Alphare/events{/privacy}", "received_events_url": "https://api.github.com/users/Alphare/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-09-09T15:49:30Z", "updated_at": "2019-09-11T19:52:51Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "I was trying to rewrite Python code in Rust and I need to match against what could be `NotADirectory` (`ENOTDIR`) and saw that `ErrorKind`'s variants do not include many `errno`s present in `libc` - to speak only of the Unix platform - including the one I need.\r\n\r\nIs there a reason why those variants were not implemented? Could this be my first contribution to Rust?", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/64314/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/64314/timeline", "performed_via_github_app": null, "state_reason": null}