{"url": "https://api.github.com/repos/rust-lang/rust/issues/108593", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/108593/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/108593/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/108593/events", "html_url": "https://github.com/rust-lang/rust/issues/108593", "id": 1604381621, "node_id": "I_kwDOAAsO6M5foOu1", "number": 108593, "title": "implied bounds from uncaptured lifetimes in TAIT", "user": {"login": "aliemjay", "id": 28497461, "node_id": "MDQ6VXNlcjI4NDk3NDYx", "avatar_url": "https://avatars.githubusercontent.com/u/28497461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aliemjay", "html_url": "https://github.com/aliemjay", "followers_url": "https://api.github.com/users/aliemjay/followers", "following_url": "https://api.github.com/users/aliemjay/following{/other_user}", "gists_url": "https://api.github.com/users/aliemjay/gists{/gist_id}", "starred_url": "https://api.github.com/users/aliemjay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aliemjay/subscriptions", "organizations_url": "https://api.github.com/users/aliemjay/orgs", "repos_url": "https://api.github.com/users/aliemjay/repos", "events_url": "https://api.github.com/users/aliemjay/events{/privacy}", "received_events_url": "https://api.github.com/users/aliemjay/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1472502130, "node_id": "MDU6TGFiZWwxNDcyNTAyMTMw", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-type_alias_impl_trait", "name": "F-type_alias_impl_trait", "color": "f9c0cc", "default": false, "description": "`#[feature(type_alias_impl_trait)]`"}, {"id": 4172483496, "node_id": "LA_kwDOAAsO6M74swuo", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-types", "name": "T-types", "color": "bfd4f2", "default": false, "description": "Relevant to the types team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2023-03-01T07:10:44Z", "updated_at": "2023-04-05T17:27:42Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Should `Opaque<'a, 'b>` imply `'a: 'b`?\r\n\r\n```rust\r\n#![feature(type_alias_impl_trait)]\r\n\r\ntype Opaque<'a: 'b, 'b> = impl Sized;\r\nfn define<'a, 'b>() -> Opaque<'a, 'b> {}\r\n\r\nfn test<'a, 'b: 'b>(s: &'a str, _: Opaque<'a, 'b>) -> &'b str {\r\n    s\r\n}\r\n```\r\n\r\nI don't think so because we could implement TAIT in a way like:\r\n```diff\r\n\r\n- type Opaque<'a: 'b, 'b> = impl Sized;\r\n+ type OpaqueInner = impl Sized;\r\n+ type Opaque<'a: 'b, 'b> = OpaqueInner;\r\nfn define<'a, 'b>() -> Opaque<'a, 'b> {}\r\n```\r\nand then the bound `'a: 'b` wouldn't be enforced or implied because the lifetimes doesn't appear in the inner opaque types's generics.\r\n\r\n@rustbot label T-types T-lang F-type_alias_impl_trait", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/108593/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/108593/timeline", "performed_via_github_app": null, "state_reason": null}