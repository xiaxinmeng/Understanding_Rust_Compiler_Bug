{"url": "https://api.github.com/repos/rust-lang/rust/issues/67932", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/67932/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/67932/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/67932/events", "html_url": "https://github.com/rust-lang/rust/issues/67932", "id": 545738571, "node_id": "MDU6SXNzdWU1NDU3Mzg1NzE=", "number": 67932, "title": "unconditional recursion warning not displayed when passing &self", "user": {"login": "yoshuawuyts", "id": 2467194, "node_id": "MDQ6VXNlcjI0NjcxOTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2467194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yoshuawuyts", "html_url": "https://github.com/yoshuawuyts", "followers_url": "https://api.github.com/users/yoshuawuyts/followers", "following_url": "https://api.github.com/users/yoshuawuyts/following{/other_user}", "gists_url": "https://api.github.com/users/yoshuawuyts/gists{/gist_id}", "starred_url": "https://api.github.com/users/yoshuawuyts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yoshuawuyts/subscriptions", "organizations_url": "https://api.github.com/users/yoshuawuyts/orgs", "repos_url": "https://api.github.com/users/yoshuawuyts/repos", "events_url": "https://api.github.com/users/yoshuawuyts/events{/privacy}", "received_events_url": "https://api.github.com/users/yoshuawuyts/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235137, "node_id": "MDU6TGFiZWwyMzUxMzc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lint", "name": "A-lint", "color": "f7e101", "default": false, "description": "Area: Lints (warnings about flaws in source code) such as unused_mut."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-06T13:54:01Z", "updated_at": "2020-09-16T10:21:50Z", "closed_at": "2020-09-16T10:21:49Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Today I hit a segfault caused by stack overflow that wasn't caught by the compiler. This only occurred in debug mode, not release.\r\n\r\n## Current Behavior\r\n\r\nThe cause was the following piece of code, which passes the compiler without emitting any warnings:\r\n\r\n```rust\r\nuse std::fmt::{self, Display};\r\n\r\nstruct Foo;\r\n\r\nimpl Display for Foo {\r\n    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\r\n        Display::fmt(&self, f)\r\n    }\r\n}\r\n```\r\n[playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=c37ebd71c4fe248128fdc6e68b322d9e)\r\n\r\nAs would be obvious to most people carefully reviewing this code, there's a clear case of unconditional recursion happening. We pass `&self` to the same impl over and over.\r\n\r\n## Expected behavior\r\n\r\nA similar case *is* already caught by the compiler: passing `self` rather than `&self` to the same impl. This triggers the \"unconditional recursion\" warning. I would've expected the `&self` case to hit the same warning.\r\n\r\n```rust\r\nuse std::fmt::{self, Display};\r\n\r\nstruct Foo;\r\n\r\nimpl Display for Foo {\r\n    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\r\n        Display::fmt(self, f)\r\n    }\r\n}\r\n```\r\n```txt\r\nwarning: function cannot return without recursing\r\n --> src/lib.rs:6:5\r\n  |\r\n6 |     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\r\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot return without recursing\r\n7 |         Display::fmt(self, f)\r\n  |         --------------------- recursive call site\r\n  |\r\n  = note: `#[warn(unconditional_recursion)]` on by default\r\n  = help: a `loop` may express intention better if this is on purpose\r\n```\r\n[playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=38d8a981d84ef6c9285d6f23f8977ca8)\r\n\r\n---\r\n\r\nIt'd be nice if the `&self` case would also emit diagnostics when detecting infinite recursion. Seeing a segfault occur in your program can be pretty scary. Added to that it wasn't triggering for us in release mode, and searching for \"debug stack overflow rust\" yields some pretty poor results (because \"stack overflow\" is also the name of a popular website, heh).\r\n\r\nThis seems like a case where we could probably use better diagnostics. Thanks!", "closed_by": {"login": "yoshuawuyts", "id": 2467194, "node_id": "MDQ6VXNlcjI0NjcxOTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2467194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yoshuawuyts", "html_url": "https://github.com/yoshuawuyts", "followers_url": "https://api.github.com/users/yoshuawuyts/followers", "following_url": "https://api.github.com/users/yoshuawuyts/following{/other_user}", "gists_url": "https://api.github.com/users/yoshuawuyts/gists{/gist_id}", "starred_url": "https://api.github.com/users/yoshuawuyts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yoshuawuyts/subscriptions", "organizations_url": "https://api.github.com/users/yoshuawuyts/orgs", "repos_url": "https://api.github.com/users/yoshuawuyts/repos", "events_url": "https://api.github.com/users/yoshuawuyts/events{/privacy}", "received_events_url": "https://api.github.com/users/yoshuawuyts/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/67932/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/67932/timeline", "performed_via_github_app": null, "state_reason": "completed"}