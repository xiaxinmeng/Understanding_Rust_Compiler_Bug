{"url": "https://api.github.com/repos/rust-lang/rust/issues/11671", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/11671/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/11671/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/11671/events", "html_url": "https://github.com/rust-lang/rust/issues/11671", "id": 25888563, "node_id": "MDU6SXNzdWUyNTg4ODU2Mw==", "number": 11671, "title": "`--libdir` is not used by `rustc` and `rustpkg`", "user": {"login": "fabiand", "id": 83456, "node_id": "MDQ6VXNlcjgzNDU2", "avatar_url": "https://avatars.githubusercontent.com/u/83456?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fabiand", "html_url": "https://github.com/fabiand", "followers_url": "https://api.github.com/users/fabiand/followers", "following_url": "https://api.github.com/users/fabiand/following{/other_user}", "gists_url": "https://api.github.com/users/fabiand/gists{/gist_id}", "starred_url": "https://api.github.com/users/fabiand/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fabiand/subscriptions", "organizations_url": "https://api.github.com/users/fabiand/orgs", "repos_url": "https://api.github.com/users/fabiand/repos", "events_url": "https://api.github.com/users/fabiand/events{/privacy}", "received_events_url": "https://api.github.com/users/fabiand/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2014-01-19T21:17:21Z", "updated_at": "2014-11-21T08:56:52Z", "closed_at": "2014-11-21T08:56:52Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "After configuring and installing rust using the `--libdir` switch, `rustc` and `rustpkg` don't search in that dir:\n\n<pre>\n+ ./configure --build=x86_64-redhat-linux-gnu --host=x86_64-redhat-linux-gnu --program-prefix= --disable-dependency-tracking --prefix=/usr --exec-prefix=/usr --bindir=/usr/bin --sbindir=/usr/sbin --sysconfdir=/etc --datadir=/usr/share --includedir=/usr/include --libdir=/usr/lib64 --libexecdir=/usr/libexec --localstatedir=/var --sharedstatedir=/var/lib --mandir=/usr/share/man --infodir=/usr/share/info --build=x86_64-unknown-linux-gnu --host=x86_64-unknown-linux-gnu --target=x86_64-unknown-linux-gnu\nconfigure: looking for configure programs\n...\nconfigure: processing /builddir/build/BUILD/rust-0.9/configure args\nconfigure: \nconfigure: CFG_PREFIX           := /usr \nconfigure: CFG_LOCAL_RUST_ROOT  := /usr/local \nconfigure: CFG_LLVM_ROOT        :=  \nconfigure: CFG_ANDROID_CROSS_PATH := /opt/ndk_standalone \nconfigure: CFG_MINGW32_CROSS_PATH :=  \nconfigure: CFG_BUILD            := x86_64-unknown-linux-gnu \nconfigure: CFG_HOST             := x86_64-unknown-linux-gnu \nconfigure: CFG_TARGET           := x86_64-unknown-linux-gnu \nconfigure: CFG_LOCALSTATEDIR    := /var \nconfigure: CFG_SYSCONFDIR       := /etc \nconfigure: CFG_DATADIR          := /usr/share \nconfigure: CFG_INFODIR          := /usr/share/info \nconfigure: CFG_MANDIR           := /usr/share/man \nconfigure: CFG_LIBDIR           := /usr/lib64 \nconfigure: CFG_RUSTLIBDIR       := rustlib \n....\n</pre>\n\n\nWhen building:\n\n<pre>\n$ RUST_LOG=rustc=4 rustc ex.rs \nusing sysroot = /usr\ntesting name: macro_escape\ntesting name: doc\ntesting name: allow\ntesting name: doc\ntesting name: doc\ntesting name: doc\ntesting name: doc\ntesting name: doc\ntesting name: doc\ntesting name: doc\ntesting name: doc\ntesting name: doc\ntesting name: doc\ntesting name: doc\ntesting name: doc\ntesting name: doc\ntesting name: doc\ntesting name: doc\ntesting name: doc\ntesting name: doc\ntesting name: doc\ntesting name: doc\ntesting name: doc\ntesting name: doc\ntesting name: macro_escape\ntesting name: doc\ntesting name: allow\ntesting name: address_insignificant\ntesting name: allow\n  testing: nogc\n  testing: unix\n  testing: target_os\n  testing: target_family\n  testing: target_arch\n  testing: target_endian\n  testing: target_word_size\n  testing: macro_escape\n  testing: doc\n  testing: allow\n  testing: macro_escape\n  testing: doc\n  testing: allow\n  testing: address_insignificant\n  testing: allow\n  testing: address_insignificant\n  testing: allow\n  testing: macro_escape\n  testing: doc\n  testing: allow\n  testing: address_insignificant\n  testing: allow\nresolving extern mod stmt. ident: @\"std\" path_opt: Some((@\"std#0.9\", CookedStr))\nfilesearch: searching additional lib search paths [0u]\nfilesearch: searching target lib path\nsearching /usr/lib/rustlib/x86_64-unknown-linux-gnu/lib\nis /home/fabiand/tmp/.rust/lib/x86_64-unknown-linux-gnu in visited_dirs? false\nsearching /home/fabiand/tmp/.rust/lib/x86_64-unknown-linux-gnu\nis /home/fabiand/tmp/lib/x86_64-unknown-linux-gnu in visited_dirs? false\nsearching /home/fabiand/tmp/lib/x86_64-unknown-linux-gnu\nex.rs:1:1: 1:1 error: can't find crate for `std`\nex.rs:1 fn main() {\n        ^\ntask 'rustc' failed at 'explicit failure', /builddir/build/BUILD/rust-0.9/src/libsyntax/diagnostic.rs:41\ntask '<main>' failed at 'explicit failure', /builddir/build/BUILD/rust-0.9/src/librustc/lib.rs:453\n</pre>\n\n\nand\n\n<pre>\n$ RUST_LOG=rustpkg=4 rustpkg build rustyworld\nWARNING: The Rust package manager is experimental and may be unstable\nFinished parsing commandline args ~[~\"rustyworld\"]\n  Using command: BuildCmd\n  Using args ~[~\"rustyworld\"]\n  Using cflags: context::RustcFlags{compile_upto: Nothing, linker: None, link_args: None, optimization_level: No, save_temps: false, target: None, target_cpu: None, additional_library_paths: std::hashmap::HashSet<std::path::posix::Path>{map: std::hashmap::HashMap<std::path::posix::Path,()>{k0: 3087137010850483033u64, k1: 10051317995362439294u64, resize_at: 24u, size: 0u, buckets: ~[None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]}}, experimental_features: None}\n  Using rust_path_hack false\n  Using cfgs: ~[]\n  Using supplied_sysroot: None\nUsing sysroot: /usr\nWill store workcache in /home/fabiand/work/rust-lang/example/.rust\nWorkcache database file: /home/fabiand/work/rust-lang/example/.rust/rustpkg_db.json\nFound rustyworld-0.0 in /home/fabiand/work/rust-lang/example\nfound pkg rustyworld-0.0 in workspace /home/fabiand/work/rust-lang/example, trying to build\nChecking package source for package ID rustyworld-0.0, workspace = /home/fabiand/work/rust-lang/example -> /home/fabiand/work/rust-lang/example, use_rust_path_hack = false\nChecking dirs: ~\"/home/fabiand/work/rust-lang/example/src/rustyworld-0.0:/home/fabiand/work/rust-lang/example/src/rustyworld:/home/fabiand/work/rust-lang/example/build/x86_64-unknown-linux-gnu/src/rustyworld-0.0:/home/fabiand/work/rust-lang/example/build/x86_64-unknown-linux-gnu/src/rustyworld\"\n1. build_in_destination = false\n3. build_in_destination = false\nsource: /home/fabiand/work/rust-lang/example dest: /home/fabiand/work/rust-lang/example\nFor package id rustyworld-0.0, returning /home/fabiand/work/rust-lang/example/src/rustyworld\nbuild: workspace = /home/fabiand/work/rust-lang/example (in Rust path? true is git dir? false crateid = rustyworld-0.0 pkgsrc start_dir = /home/fabiand/work/rust-lang/example/src/rustyworld\nbuild: what to build = &target::WhatToBuild{build_type: MaybeCustom, sources: Everything, inputs_to_discover: ~[]}\nPackage source directory = Package ID rustyworld-0.0 in start dir /home/fabiand/work/rust-lang/example/src/rustyworld [workspaces = /home/fabiand/work/rust-lang/example -> /home/fabiand/work/rust-lang/example]\npackage_script_option: checking whether /home/fabiand/work/rust-lang/example/src/rustyworld/pkg.rs exists\nCalling pkg_script_option on None\npackage_script_option: checking whether /home/fabiand/work/rust-lang/example/src/rustyworld/pkg.rs exists\nNo package script, continuing\nMatching against rustyworld\nWill compile crate bench.rs\nWill compile crate lib.rs\nWill compile crate main.rs\nWill compile crate test.rs\nIn /home/fabiand/work/rust-lang/example/src/rustyworld, found 1 libs, 1 mains, 1 tests, 1 benchs\nBuilding libs in /home/fabiand/work/rust-lang/example, destination = /home/fabiand/work/rust-lang/example\nbuild_crates: compiling /home/fabiand/work/rust-lang/example/src/rustyworld/lib.rs\nBuilding crate /home/fabiand/work/rust-lang/example/src/rustyworld/lib.rs, declaring it as an input\nCompiling crate /home/fabiand/work/rust-lang/example/src/rustyworld/lib.rs; its output will be in /home/fabiand/work/rust-lang/example\ncompile_crate: crate=/home/fabiand/work/rust-lang/example/src/rustyworld/lib.rs, workspace=/home/fabiand/work/rust-lang/example\ncompile_crate: short_name = rustyworld-0.0, flags =...\ncompile_input: /home/fabiand/work/rust-lang/example/src/rustyworld/lib.rs / Lib\nflags: \ncfgs: \ncompile_input's sysroot = /usr\nrustc flags: extra::getopts::Matches{opts: ~[extra::getopts::Opt{name: Short('c'), hasarg: No, occur: Optional, aliases: ~[]}, extra::getopts::Opt{name: Long(~\"cfg\"), hasarg: Yes, occur: Multi, aliases: ~[]}, extra::getopts::Opt{name: Long(~\"emit-llvm\"), hasarg: No, occur: Optional, aliases: ~[]}, extra::getopts::Opt{name: Long(~\"help\"), hasarg: No, occur: Optional, aliases: ~[extra::getopts::Opt{name: Short('h'), hasarg: No, occur: Optional, aliases: ~[]}]}, extra::getopts::Opt{name: Short('L'), hasarg: Yes, occur: Multi, aliases: ~[]}, extra::getopts::Opt{name: Long(~\"bin\"), hasarg: No, occur: Optional, aliases: ~[]}, extra::getopts::Opt{name: Long(~\"lib\"), hasarg: No, occur: Optional, aliases: ~[]}, extra::getopts::Opt{name: Long(~\"rlib\"), hasarg: No, occur: Optional, aliases: ~[]}, extra::getopts::Opt{name: Long(~\"staticlib\"), hasarg: No, occur: Optional, aliases: ~[]}, extra::getopts::Opt{name: Long(~\"dylib\"), hasarg: No, occur: Optional, aliases: ~[]}, extra::getopts::Opt{name: Long(~\"linker\"), hasarg: Yes, occur: Optional, aliases: ~[]}, extra::getopts::Opt{name: Long(~\"ar\"), hasarg: Yes, occur: Optional, aliases: ~[]}, extra::getopts::Opt{name: Long(~\"crate-id\"), hasarg: No, occur: Optional, aliases: ~[]}, extra::getopts::Opt{name: Long(~\"crate-name\"), hasarg: No, occur: Optional, aliases: ~[]}, extra::getopts::Opt{name: Long(~\"crate-file-name\"), hasarg: No, occur: Optional, aliases: ~[]}, extra::getopts::Opt{name: Long(~\"link-args\"), hasarg: Yes, occur: Multi, aliases: ~[]}, extra::getopts::Opt{name: Long(~\"ls\"), hasarg: No, occur: Optional, aliases: ~[]}, extra::getopts::Opt{name: Long(~\"no-trans\"), hasarg: No, occur: Optional, aliases: ~[]}, extra::getopts::Opt{name: Long(~\"no-analysis\"), hasarg: No, occur: Optional, aliases: ~[]}, extra::getopts::Opt{name: Short('O'), hasarg: No, occur: Optional, aliases: ~[]}, extra::getopts::Opt{name: Short('o'), hasarg: Yes, occur: Optional, aliases: ~[]}, extra::getopts::Opt{name: Long(~\"opt-level\"), hasarg: Yes, occur: Optional, aliases: ~[]}, extra::getopts::Opt{name: Long(~\"passes\"), hasarg: Yes, occur: Optional, aliases: ~[]}, extra::getopts::Opt{name: Long(~\"llvm-args\"), hasarg: Yes, occur: Optional, aliases: ~[]}, extra::getopts::Opt{name: Long(~\"out-dir\"), hasarg: Yes, occur: Optional, aliases: ~[]}, extra::getopts::Opt{name: Long(~\"parse-only\"), hasarg: No, occur: Optional, aliases: ~[]}, extra::getopts::Opt{name: Long(~\"pretty\"), hasarg: Maybe, occur: Optional, aliases: ~[]}, extra::getopts::Opt{name: Short('S'), hasarg: No, occur: Optional, aliases: ~[]}, extra::getopts::Opt{name: Long(~\"dep-info\"), hasarg: Maybe, occur: Optional, aliases: ~[]}, extra::getopts::Opt{name: Long(~\"save-temps\"), hasarg: No, occur: Optional, aliases: ~[]}, extra::getopts::Opt{name: Long(~\"sysroot\"), hasarg: Yes, occur: Optional, aliases: ~[]}, extra::getopts::Opt{name: Long(~\"test\"), hasarg: No, occur: Optional, aliases: ~[]}, extra::getopts::Opt{name: Long(~\"target\"), hasarg: Yes, occur: Optional, aliases: ~[]}, extra::getopts::Opt{name: Long(~\"target-cpu\"), hasarg: Yes, occur: Optional, aliases: ~[]}, extra::getopts::Opt{name: Long(~\"target-feature\"), hasarg: Yes, occur: Optional, aliases: ~[]}, extra::getopts::Opt{name: Long(~\"android-cross-path\"), hasarg: Yes, occur: Optional, aliases: ~[]}, extra::getopts::Opt{name: Long(~\"warn\"), hasarg: Maybe, occur: Optional, aliases: ~[extra::getopts::Opt{name: Short('W'), hasarg: Maybe, occur: Optional, aliases: ~[]}]}, extra::getopts::Opt{name: Long(~\"allow\"), hasarg: Yes, occur: Multi, aliases: ~[extra::getopts::Opt{name: Short('A'), hasarg: Yes, occur: Multi, aliases: ~[]}]}, extra::getopts::Opt{name: Long(~\"deny\"), hasarg: Yes, occur: Multi, aliases: ~[extra::getopts::Opt{name: Short('D'), hasarg: Yes, occur: Multi, aliases: ~[]}]}, extra::getopts::Opt{name: Long(~\"forbid\"), hasarg: Yes, occur: Multi, aliases: ~[extra::getopts::Opt{name: Short('F'), hasarg: Yes, occur: Multi, aliases: ~[]}]}, extra::getopts::Opt{name: Short('Z'), hasarg: Yes, occur: Multi, aliases: ~[]}, extra::getopts::Opt{name: Long(~\"version\"), hasarg: No, occur: Optional, aliases: ~[extra::getopts::Opt{name: Short('v'), hasarg: No, occur: Optional, aliases: ~[]}]}], vals: ~[~[], ~[], ~[], ~[], ~[], ~[], ~[Given], ~[], ~[], ~[], ~[], ~[], ~[], ~[], ~[], ~[], ~[], ~[], ~[], ~[], ~[], ~[], ~[], ~[], ~[], ~[], ~[], ~[], ~[], ~[], ~[], ~[], ~[], ~[], ~[], ~[], ~[], ~[], ~[], ~[], ~[], ~[]], free: ~[]}\nChecking whether /usr is in target\ncompile_input's sysroot = /usr\nsysroot_to_use = /usr\nOutput type = output_type_exe\nCreated options...\nAbout to build session...\nAbout to build config...\nAbout to call find_and_install_dependencies...\nIn find_and_install_dependencies...\nFinding and installing... std#0.9\nListing directory /usr/lib\ndir has 53u entries\nlib_prefix = libstd and lib_filetype = so\np = /usr/lib/alsa, p's extension is None\np = /usr/lib/binfmt.d, p's extension is Some(\"d\")\np = /usr/lib/clang, p's extension is None\np = /usr/lib/cpp, p's extension is None\np = /usr/lib/crda, p's extension is None\np = /usr/lib/cups, p's extension is None\np = /usr/lib/debug, p's extension is None\np = /usr/lib/dracut, p's extension is None\np = /usr/lib/firewalld, p's extension is None\np = /usr/lib/firmware, p's extension is None\np = /usr/lib/games, p's extension is None\np = /usr/lib/gcc, p's extension is None\np = /usr/lib/girepository-1.0, p's extension is Some(\"0\")\np = /usr/lib/gnome-settings-daemon-3.0, p's extension is Some(\"0\")\np = /usr/lib/grub, p's extension is None\np = /usr/lib/hsqldb, p's extension is None\np = /usr/lib/java, p's extension is None\np = /usr/lib/java-1.5.0, p's extension is Some(\"0\")\np = /usr/lib/java-1.6.0, p's extension is Some(\"0\")\np = /usr/lib/java-1.7.0, p's extension is Some(\"0\")\np = /usr/lib/java-1.8.0, p's extension is Some(\"0\")\np = /usr/lib/java-ext, p's extension is None\np = /usr/lib/jvm, p's extension is None\np = /usr/lib/jvm-commmon, p's extension is None\np = /usr/lib/jvm-exports, p's extension is None\np = /usr/lib/jvm-private, p's extension is None\np = /usr/lib/kbd, p's extension is None\np = /usr/lib/kde3, p's extension is None\np = /usr/lib/kde4, p's extension is None\np = /usr/lib/kernel, p's extension is None\np = /usr/lib/locale, p's extension is None\np = /usr/lib/modprobe.d, p's extension is Some(\"d\")\np = /usr/lib/modules, p's extension is None\np = /usr/lib/modules-load.d, p's extension is Some(\"d\")\np = /usr/lib/mozilla, p's extension is None\np = /usr/lib/node_modules, p's extension is None\np = /usr/lib/pkgconfig, p's extension is None\np = /usr/lib/polkit-1, p's extension is None\np = /usr/lib/python2.7, p's extension is Some(\"7\")\np = /usr/lib/python3.3, p's extension is Some(\"3\")\np = /usr/lib/rpm, p's extension is None\np = /usr/lib/rustc, p's extension is None\np = /usr/lib/security, p's extension is None\np = /usr/lib/sendmail, p's extension is None\np = /usr/lib/sendmail.sendmail, p's extension is Some(\"sendmail\")\np = /usr/lib/sse2, p's extension is None\np = /usr/lib/sysctl.d, p's extension is Some(\"d\")\np = /usr/lib/systemd, p's extension is None\np = /usr/lib/tmpfiles.d, p's extension is Some(\"d\")\np = /usr/lib/tuned, p's extension is None\np = /usr/lib/udev, p's extension is None\np = /usr/lib/udisks2, p's extension is None\np = /usr/lib/yum-plugins, p's extension is None\nwarning: library_in_workspace didn't find a library in /usr/lib for std\nsystem library returned None\nTrying to install library std#0.9, rebuilding it\nDidn't find std-0.9 in /home/fabiand/work/rust-lang/example\nChecking package source for package ID std-0.9, workspace = /home/fabiand/work/rust-lang/example/.rust -> /home/fabiand/work/rust-lang/example/.rust, use_rust_path_hack = false\nChecking dirs: ~\"/home/fabiand/work/rust-lang/example/.rust/src/std-0.9:/home/fabiand/work/rust-lang/example/.rust/src/std:/home/fabiand/work/rust-lang/example/.rust/build/x86_64-unknown-linux-gnu/src/std-0.9:/home/fabiand/work/rust-lang/example/.rust/build/x86_64-unknown-linux-gnu/src/std\"\n1. build_in_destination = false\nCalling fetch_git on /home/fabiand/work/rust-lang/example/.rust/build/x86_64-unknown-linux-gnu/src/std-0.9\nChecking whether std-0.9 (path = std) exists locally. Cwd = /home/fabiand/work/rust-lang/example, does it? false\nCalling fetch_git on /home/fabiand/work/rust-lang/example/.rust/build/x86_64-unknown-linux-gnu/src/std\nChecking whether std-0.9 (path = std) exists locally. Cwd = /home/fabiand/work/rust-lang/example, does it? false\nerror: Package rustyworld depends on std, but I don't know how to find it\ntask '<unnamed>' failed at 'explicit failure', /builddir/build/BUILD/rust-0.9/src/librustpkg/util.rs:519\ntask '<unnamed>' failed at 'receiving on a closed channel', /builddir/build/BUILD/rust-0.9/src/libstd/comm/mod.rs:728\n</pre>\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/11671/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/11671/timeline", "performed_via_github_app": null, "state_reason": "completed"}