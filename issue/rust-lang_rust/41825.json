{"url": "https://api.github.com/repos/rust-lang/rust/issues/41825", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/41825/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/41825/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/41825/events", "html_url": "https://github.com/rust-lang/rust/issues/41825", "id": 227025490, "node_id": "MDU6SXNzdWUyMjcwMjU0OTA=", "number": 41825, "title": "Confusing error message with derived Traits", "user": {"login": "stnma7e", "id": 1521389, "node_id": "MDQ6VXNlcjE1MjEzODk=", "avatar_url": "https://avatars.githubusercontent.com/u/1521389?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stnma7e", "html_url": "https://github.com/stnma7e", "followers_url": "https://api.github.com/users/stnma7e/followers", "following_url": "https://api.github.com/users/stnma7e/following{/other_user}", "gists_url": "https://api.github.com/users/stnma7e/gists{/gist_id}", "starred_url": "https://api.github.com/users/stnma7e/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stnma7e/subscriptions", "organizations_url": "https://api.github.com/users/stnma7e/orgs", "repos_url": "https://api.github.com/users/stnma7e/repos", "events_url": "https://api.github.com/users/stnma7e/events{/privacy}", "received_events_url": "https://api.github.com/users/stnma7e/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-05-08T12:07:32Z", "updated_at": "2020-06-11T18:01:46Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "I was trying to drain a referenced HashSet into a Vec to sort it before another operation, \r\n\r\n```rust\r\n\r\nfn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\r\n        for (k, v) in &self.class_times {\r\n            let mut days_clone = v.clone();\r\n            let mut days: Vec<DayOfWeek> = days_clone.drain().collect();\r\n            days.sort();\r\n```\r\n\r\n\r\nbut when I tried to clone the HashSet so that I could mutate it, this error appeared.\r\n\r\n```rust\r\nerror: cannot borrow immutable borrowed content `*days_clone` as mutable\r\n  --> src/models.rs:99:44\r\n   |\r\n99 |             let mut days: Vec<DayOfWeek> = days_clone.drain().collect();\r\n   |                                            ^^^^^^^^^^ cannot borrow as mutable\r\n\r\nerror: aborting due to previous error\r\n```\r\n\r\nAfter cloning the HashSet I assumed that I should be able to use it in a moved, mutable context, so I tried to foce the type of the variable in the declaration, which gave me this error:\r\n\r\n```rust\r\nerror[E0308]: mismatched types\r\n  --> src/models.rs:98:48\r\n   |\r\n98 |             let mut days_clone: HashSet<DayOfWeek> = v.clone();\r\n   |                                                ^^^^^^^^^ expected struct `std::collections::HashSet`, found reference\r\n   |\r\n   = note: expected type `std::collections::HashSet<models::DayOfWeek>`\r\n              found type `&std::collections::HashSet<models::DayOfWeek>`\r\n\r\nerror: aborting due to previous error\r\n```\r\n\r\nThe issue with the borrowing for cloning and reference vs non-reference in the return type of the clone() threw me off the track. Eventually, the solution I found was that I'd forgotten to derive Clone on the enum called DayOfWeek that the HashSet works over, and adding that derivation fixed the problem. The error message seems misleading because I thought I had referencing error somewhere, and the error message didn't reference a Clone trait at all, but the problem only had to do with the derivation. \r\n\r\nAn example set up could look like this:\r\n\r\n```rust\r\nuse std::collections::BTreeMap;\r\nuse std::collections::HashSet;\r\n\r\n#[derive(Debug,Eq,PartialEq,Hash)]\r\nenum Day {\r\n    Mon,\r\n}\r\n\r\nstruct Class {\r\n    days: BTreeMap<u32, HashSet<Day>>\r\n}\r\n\r\nimpl Class {\r\n    fn do_stuff(&self) {\r\n        for (_, v) in &self.days {\r\n            let mut x = v.clone();\r\n            let y: Vec<Day> = x.drain().collect();\r\n            println!(\"{:?}\", x);\r\n        }\r\n    }\r\n}\r\n\r\nfn fail() {\r\n    let c = Class { days: BTreeMap::new() };\r\n    c.do_stuff();\r\n}\r\n```\r\n\r\nAnd this will compile only if the Day enum derives Clone.\r\n\r\nRust version:\r\n```rust\r\nrustc 1.16.0 (30cf806ef 2017-03-10)\r\nbinary: rustc\r\ncommit-hash: 30cf806ef8881c41821fbd43e5cf3699c5290c16\r\ncommit-date: 2017-03-10\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.16.0\r\nLLVM version: 3.9\r\n````", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/41825/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/41825/timeline", "performed_via_github_app": null, "state_reason": null}