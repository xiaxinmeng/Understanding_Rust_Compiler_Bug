{"url": "https://api.github.com/repos/rust-lang/rust/issues/80067", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/80067/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/80067/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/80067/events", "html_url": "https://github.com/rust-lang/rust/issues/80067", "id": 768309059, "node_id": "MDU6SXNzdWU3NjgzMDkwNTk=", "number": 80067, "title": "diagnostics: missing \"consider borrowing here\" when passing format!() as &str", "user": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 132910982, "node_id": "MDU6TGFiZWwxMzI5MTA5ODI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-macros", "name": "A-macros", "color": "f7e101", "default": false, "description": "Area: All kinds of macros (custom derive, macro_rules!, proc macros, ..)"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1183099971, "node_id": "MDU6TGFiZWwxMTgzMDk5OTcx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-suggestion-diagnostics", "name": "A-suggestion-diagnostics", "color": "f7e101", "default": false, "description": "Area: suggestions generated by the compiler applied by cargo fix"}, {"id": 1596122130, "node_id": "MDU6TGFiZWwxNTk2MTIyMTMw", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-papercut", "name": "D-papercut", "color": "c9f7a3", "default": false, "description": "Diagnostic error that needs small tweaks"}, {"id": 1596122811, "node_id": "MDU6TGFiZWwxNTk2MTIyODEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-newcomer-roadblock", "name": "D-newcomer-roadblock", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error hard to understand for new users"}, {"id": 1839565265, "node_id": "MDU6TGFiZWwxODM5NTY1MjY1", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-terse", "name": "D-terse", "color": "c9f7a3", "default": false, "description": "A diagnostic that doesn't give enough information about the problem at hand"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-12-15T23:49:44Z", "updated_at": "2023-03-15T03:29:07Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "````rust\r\nfn borrow_string(_s: &String) {}\r\n\r\nfn main() {\r\n    borrow_string(String::new());\r\n    borrow_string(format!(\"Hello world\"));\r\n}\r\n````\r\n\r\nI noticed that rustc suggests borrowing for the first function call but not the second, although borrowing would fix both errors.\r\n````\r\nerror[E0308]: mismatched types\r\n --> src/main.rs:2:19\r\n  |\r\n2 |     borrow_string(String::new());\r\n  |                   ^^^^^^^^^^^^^\r\n  |                   |\r\n  |                   expected `&String`, found struct `String`\r\n  |                   help: consider borrowing here: `&String::new()`\r\n\r\nerror[E0308]: mismatched types\r\n --> src/main.rs:3:19\r\n  |\r\n3 |     borrow_string(format!(\"Hello world\"));\r\n  |                   ^^^^^^^^^^^^^^^^^^^^^^ expected `&String`, found struct `String`\r\n  |\r\n  = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\r\n````\r\n\r\nit would be nice to have the borrowing suggestion on the second warning as well. :)\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/80067/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/80067/timeline", "performed_via_github_app": null, "state_reason": null}