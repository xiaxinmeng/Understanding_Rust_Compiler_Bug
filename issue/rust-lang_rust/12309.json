{"url": "https://api.github.com/repos/rust-lang/rust/issues/12309", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/12309/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/12309/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/12309/events", "html_url": "https://github.com/rust-lang/rust/issues/12309", "id": 27665368, "node_id": "MDU6SXNzdWUyNzY2NTM2OA==", "number": 12309, "title": "Capturing stdout from test code is inconsistent", "user": {"login": "MicahChalmer", "id": 698400, "node_id": "MDQ6VXNlcjY5ODQwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/698400?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MicahChalmer", "html_url": "https://github.com/MicahChalmer", "followers_url": "https://api.github.com/users/MicahChalmer/followers", "following_url": "https://api.github.com/users/MicahChalmer/following{/other_user}", "gists_url": "https://api.github.com/users/MicahChalmer/gists{/gist_id}", "starred_url": "https://api.github.com/users/MicahChalmer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MicahChalmer/subscriptions", "organizations_url": "https://api.github.com/users/MicahChalmer/orgs", "repos_url": "https://api.github.com/users/MicahChalmer/repos", "events_url": "https://api.github.com/users/MicahChalmer/events{/privacy}", "received_events_url": "https://api.github.com/users/MicahChalmer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 60329014, "node_id": "MDU6TGFiZWw2MDMyOTAxNA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-low", "name": "P-low", "color": "eb6420", "default": false, "description": "Low priority"}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 630810559, "node_id": "MDU6TGFiZWw2MzA4MTA1NTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-libtest", "name": "A-libtest", "color": "f7e101", "default": false, "description": "Area: #[test] related"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 19, "created_at": "2014-02-16T06:47:31Z", "updated_at": "2023-01-30T13:51:48Z", "closed_at": "2019-09-01T13:11:55Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The feature that captures \"stdout\" for tests doesn't capture all the ways that a test could print to stdout.\n\n``` rust\n#[test]\nfn output_capture_tests() {\n    println!(\"This gets captured...\");\n    let _ = std::io::stdout().write_line(\"but this does not...\");\n    let _ = std::task::try(proc() { println!(\"..and neither does this...\") });\n    let _ = std::run::process_status(\"/bin/echo\", [~\"...nor this...\"]);\n    fail!();\n}\n```\n\nOnly the first `println!` call gets captured--the rest appear intermingled with the test output:\n\n```\nrunning 1 test\nbut this does not...\n..and neither does this...\n...nor this...\ntest output_capture_tests ... FAILED\n\nfailures:\n\n---- output_capture_tests stdout ----\n    This gets captured...\n    task 'output_capture_tests' failed at 'explicit failure', subproc-test-stdout.rs:7\n\n\nfailures:\n    output_capture_tests\n\ntest result: FAILED. 0 passed; 1 failed; 0 ignored; 0 measured\n```\n\nIt would be nice if all of these got captured.\n", "closed_by": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/12309/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/12309/timeline", "performed_via_github_app": null, "state_reason": "completed"}