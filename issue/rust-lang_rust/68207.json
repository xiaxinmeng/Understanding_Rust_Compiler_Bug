{"url": "https://api.github.com/repos/rust-lang/rust/issues/68207", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/68207/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/68207/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/68207/events", "html_url": "https://github.com/rust-lang/rust/issues/68207", "id": 549377050, "node_id": "MDU6SXNzdWU1NDkzNzcwNTA=", "number": 68207, "title": "how to prevent the following code from compiling", "user": {"login": "zylthinking", "id": 1066931, "node_id": "MDQ6VXNlcjEwNjY5MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1066931?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zylthinking", "html_url": "https://github.com/zylthinking", "followers_url": "https://api.github.com/users/zylthinking/followers", "following_url": "https://api.github.com/users/zylthinking/following{/other_user}", "gists_url": "https://api.github.com/users/zylthinking/gists{/gist_id}", "starred_url": "https://api.github.com/users/zylthinking/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zylthinking/subscriptions", "organizations_url": "https://api.github.com/users/zylthinking/orgs", "repos_url": "https://api.github.com/users/zylthinking/repos", "events_url": "https://api.github.com/users/zylthinking/events{/privacy}", "received_events_url": "https://api.github.com/users/zylthinking/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-14T07:12:02Z", "updated_at": "2020-01-14T08:06:01Z", "closed_at": "2020-01-14T08:06:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "The code is safe code with obvious bugs; but it can be compiled.\r\nIs it correct? \r\n\r\n```\r\nfn main() {   \r\n    use std::ptr;\r\n\r\n    #[derive(Debug)]\r\n    struct CustomSmartPointer {\r\n        data: String,\r\n    }\r\n\r\n    impl Drop for CustomSmartPointer {\r\n        fn drop(&mut self) {\r\n            println!(\"Dropping CustomSmartPointer with data `{}`!\", self.data);\r\n        }\r\n    }\r\n\r\n    #[derive(Debug)]\r\n    pub struct Unique<T: ?Sized> {\r\n        pointer: ptr::NonNull<T>,\r\n        _marker: std::marker::PhantomData<T>,\r\n    }\r\n\r\n    impl<T: ?Sized> Drop for Unique<T> {\r\n        fn drop(&mut self) {\r\n            println!(\"hello world\");\r\n        }\r\n    }\r\n\r\n    fn d(obj: *mut CustomSmartPointer) -> Unique<CustomSmartPointer> {\r\n        Unique::<CustomSmartPointer> {\r\n            pointer: ptr::NonNull::new(obj).unwrap_or_else(|| unreachable!()),\r\n            _marker: std::marker::PhantomData //Default::default()\r\n        }\r\n    }\r\n\r\n    let mut x = d(0x1 as *mut CustomSmartPointer);\r\n    {\r\n        let mut obj = CustomSmartPointer {\r\n            data: String::from(\"ooo\")\r\n        };\r\n        x = d(&mut obj);\r\n    }\r\n    println!(\"------------------{:?}\",  x);\r\n}\r\n```", "closed_by": {"login": "zylthinking", "id": 1066931, "node_id": "MDQ6VXNlcjEwNjY5MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1066931?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zylthinking", "html_url": "https://github.com/zylthinking", "followers_url": "https://api.github.com/users/zylthinking/followers", "following_url": "https://api.github.com/users/zylthinking/following{/other_user}", "gists_url": "https://api.github.com/users/zylthinking/gists{/gist_id}", "starred_url": "https://api.github.com/users/zylthinking/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zylthinking/subscriptions", "organizations_url": "https://api.github.com/users/zylthinking/orgs", "repos_url": "https://api.github.com/users/zylthinking/repos", "events_url": "https://api.github.com/users/zylthinking/events{/privacy}", "received_events_url": "https://api.github.com/users/zylthinking/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/68207/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/68207/timeline", "performed_via_github_app": null, "state_reason": "completed"}