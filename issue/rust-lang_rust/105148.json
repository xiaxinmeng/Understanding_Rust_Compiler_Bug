{"url": "https://api.github.com/repos/rust-lang/rust/issues/105148", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/105148/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/105148/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/105148/events", "html_url": "https://github.com/rust-lang/rust/issues/105148", "id": 1471827161, "node_id": "I_kwDOAAsO6M5XukzZ", "number": 105148, "title": "macros: elided-lifetimes-in-paths adds same lifetime twice if applied with cargo fix", "user": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1596299768, "node_id": "MDU6TGFiZWwxNTk2Mjk5NzY4", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-invalid-suggestion", "name": "D-invalid-suggestion", "color": "c9f7a3", "default": false, "description": "A structured suggestion resulting in incorrect code"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-12-01T19:26:22Z", "updated_at": "2022-12-01T19:26:22Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n\r\nIf you cannot produce a minimal reproduction case (something that would work in\r\nisolation), please provide the steps or even link to a repository that causes\r\nthe problematic output to occur.\r\n-->\r\n\r\nGiven the following code: <!-- Please provide a link to play.rust-lang.org -->\r\n\r\n```rust\r\nmacro_rules! define_mask {\r\n    { $(#[$attr:meta])* struct $name:ident($type:ty); } => {\r\n        $(#[$attr])*\r\n        #[allow(non_camel_case_types)]\r\n        #[derive(Copy, Clone, Default, PartialEq, PartialOrd, Eq, Ord, Hash)]\r\n        #[repr(transparent)]\r\n        pub struct $name(pub(crate) $type);\r\n\r\n        impl $name {\r\n            /// Construct a mask from the given value.\r\n            pub const fn new(value: bool) -> Self {\r\n                if value {\r\n                    Self(!0)\r\n                } else {\r\n                    Self(0)\r\n                }\r\n            }\r\n\r\n            /// Test if the mask is set.\r\n            pub const fn test(&self) -> bool {\r\n                self.0 != 0\r\n            }\r\n        }\r\n\r\n        impl core::convert::From<bool> for $name {\r\n            fn from(value: bool) -> Self {\r\n                Self::new(value)\r\n            }\r\n        }\r\n\r\n        impl core::convert::From<$name> for bool {\r\n            fn from(mask: $name) -> Self {\r\n                mask.test()\r\n            }\r\n        }\r\n\r\n        impl core::fmt::Debug for $name {\r\n            fn fmt(&self, f: &mut core::fmt::Formatter) -> core::fmt::Result {\r\n                self.test().fmt(f)\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\ndefine_mask! {\r\n    #[doc = \"128-bit mask\"]\r\n    struct mask128(i128);\r\n}\r\n\r\ndefine_mask! {\r\n    #[doc = \"`isize`-wide mask\"]\r\n    struct masksize(isize);\r\n}\r\n\r\npub fn main() {}\r\n```\r\n\r\nThe current output is:\r\n`RUSTFLAGS=\"-Welided-lifetimes-in-paths\" cargo fix`\r\n```\r\nThe following errors were reported:\r\nerror: expected parameter name, found `>`\r\n  --> src/main.rs:38:62\r\n   |\r\n38 |               fn fmt(&self, f: &mut core::fmt::Formatter<'_><'_>) -> core::fmt::Result {\r\n   |                                                                ^ expected parameter name\r\n...\r\n47 | / define_mask! {\r\n48 | |     #[doc = \"128-bit mask\"]\r\n49 | |     struct mask128(i128);\r\n50 | | }\r\n   | |_- in this macro invocation\r\n   |\r\n   = note: this error originates in the macro `define_mask` (in Nightly builds, run with -Z macro-backtrace for more info)\r\nhelp: add `'` to close the char literal\r\n   |\r\n38 |             fn fmt(&self, f: &mut core::fmt::Formatter<'_><'_'>) -> core::fmt::Result {\r\n   |                                                              +\r\n\r\nerror: expected one of `:` or `|`, found `>`\r\n  --> src/main.rs:38:62\r\n   |\r\n38 |               fn fmt(&self, f: &mut core::fmt::Formatter<'_><'_>) -> core::fmt::Result {\r\n   |                                                                ^ expected one of `:` or `|`\r\n...\r\n47 | / define_mask! {\r\n48 | |     #[doc = \"128-bit mask\"]\r\n49 | |     struct mask128(i128);\r\n50 | | }\r\n   | |_- in this macro invocation\r\n   |\r\n   = note: this error originates in the macro `define_mask` (in Nightly builds, run with -Z macro-backtrace for more info)\r\n\r\nerror: expected one of `!`, `)`, `,`, or `::`, found `<`\r\n  --> src/main.rs:38:59\r\n   |\r\n38 |               fn fmt(&self, f: &mut core::fmt::Formatter<'_><'_>) -> core::fmt::Result {\r\n   |                                                             ^\r\n   |                                                             |\r\n   |                                                             expected one of `!`, `)`, `,`, or `::`\r\n   |                                                             help: missing `,`\r\n...\r\n47 | / define_mask! {\r\n48 | |     #[doc = \"128-bit mask\"]\r\n49 | |     struct mask128(i128);\r\n50 | | }\r\n   | |_- in this macro invocation\r\n   |\r\n   = note: this error originates in the macro `define_mask` (in Nightly builds, run with -Z macro-backtrace for more info)\r\n\r\nerror: expected parameter name, found `>`\r\n  --> src/main.rs:38:62\r\n   |\r\n38 |               fn fmt(&self, f: &mut core::fmt::Formatter<'_><'_>) -> core::fmt::Result {\r\n   |                                                                ^ expected parameter name\r\n...\r\n52 | / define_mask! {\r\n53 | |     #[doc = \"`isize`-wide mask\"]\r\n54 | |     struct masksize(isize);\r\n55 | | }\r\n   | |_- in this macro invocation\r\n   |\r\n   = note: this error originates in the macro `define_mask` (in Nightly builds, run with -Z macro-backtrace for more info)\r\nhelp: add `'` to close the char literal\r\n   |\r\n38 |             fn fmt(&self, f: &mut core::fmt::Formatter<'_><'_'>) -> core::fmt::Result {\r\n   |                                                              +\r\n\r\nerror: expected one of `:` or `|`, found `>`\r\n  --> src/main.rs:38:62\r\n   |\r\n38 |               fn fmt(&self, f: &mut core::fmt::Formatter<'_><'_>) -> core::fmt::Result {\r\n   |                                                                ^ expected one of `:` or `|`\r\n...\r\n52 | / define_mask! {\r\n53 | |     #[doc = \"`isize`-wide mask\"]\r\n54 | |     struct masksize(isize);\r\n55 | | }\r\n   | |_- in this macro invocation\r\n   |\r\n   = note: this error originates in the macro `define_mask` (in Nightly builds, run with -Z macro-backtrace for more info)\r\n\r\nerror: expected one of `!`, `)`, `,`, or `::`, found `<`\r\n  --> src/main.rs:38:59\r\n   |\r\n38 |               fn fmt(&self, f: &mut core::fmt::Formatter<'_><'_>) -> core::fmt::Result {\r\n   |                                                             ^\r\n   |                                                             |\r\n   |                                                             expected one of `!`, `)`, `,`, or `::`\r\n   |                                                             help: missing `,`\r\n...\r\n52 | / define_mask! {\r\n53 | |     #[doc = \"`isize`-wide mask\"]\r\n54 | |     struct masksize(isize);\r\n55 | | }\r\n   | |_- in this macro invocation\r\n   |\r\n   = note: this error originates in the macro `define_mask` (in Nightly builds, run with -Z macro-backtrace for more info)\r\n\r\nerror[E0050]: method `fmt` has 3 parameters but the declaration in trait `std::fmt::Debug::fmt` has 2\r\n  --> src/main.rs:38:20\r\n   |\r\n38 |               fn fmt(&self, f: &mut core::fmt::Formatter<'_><'_>) -> core::fmt::Result {\r\n   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected 2 parameters, found 3\r\n...\r\n47 | / define_mask! {\r\n48 | |     #[doc = \"128-bit mask\"]\r\n49 | |     struct mask128(i128);\r\n50 | | }\r\n   | |_- in this macro invocation\r\n   |\r\n   = note: `fmt` from trait: `fn(&Self, &mut Formatter<'_>) -> Result<(), std::fmt::Error>`\r\n   = note: this error originates in the macro `define_mask` (in Nightly builds, run with -Z macro-backtrace for more info)\r\n\r\nerror[E0050]: method `fmt` has 3 parameters but the declaration in trait `std::fmt::Debug::fmt` has 2\r\n  --> src/main.rs:38:20\r\n   |\r\n38 |               fn fmt(&self, f: &mut core::fmt::Formatter<'_><'_>) -> core::fmt::Result {\r\n   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected 2 parameters, found 3\r\n...\r\n52 | / define_mask! {\r\n53 | |     #[doc = \"`isize`-wide mask\"]\r\n54 | |     struct masksize(isize);\r\n55 | | }\r\n   | |_- in this macro invocation\r\n   |\r\n   = note: `fmt` from trait: `fn(&Self, &mut Formatter<'_>) -> Result<(), std::fmt::Error>`\r\n   = note: this error originates in the macro `define_mask` (in Nightly builds, run with -Z macro-backtrace for more info)\r\n\r\nerror: aborting due to 8 previous errors\r\n\r\nFor more information about this error, try `rustc --explain E0050`.\r\nOriginal diagnostics will follow.\r\n\r\nwarning: hidden lifetime parameters in types are deprecated\r\n  --> src/main.rs:38:46\r\n   |\r\n38 |               fn fmt(&self, f: &mut core::fmt::Formatter) -> core::fmt::Result {\r\n   |                                     -----------^^^^^^^^^\r\n   |                                     |\r\n   |                                     expected lifetime parameter\r\n...\r\n47 | / define_mask! {\r\n48 | |     #[doc = \"128-bit mask\"]\r\n49 | |     struct mask128(i128);\r\n50 | | }\r\n   | |_- in this macro invocation\r\n   |\r\n   = note: requested on the command line with `-W elided-lifetimes-in-paths`\r\n   = note: this warning originates in the macro `define_mask` (in Nightly builds, run with -Z macro-backtrace for more info)\r\nhelp: indicate the anonymous lifetime\r\n   |\r\n38 |             fn fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result {\r\n   |                                                       ++++\r\n\r\nwarning: hidden lifetime parameters in types are deprecated\r\n  --> src/main.rs:38:46\r\n   |\r\n38 |               fn fmt(&self, f: &mut core::fmt::Formatter) -> core::fmt::Result {\r\n   |                                     -----------^^^^^^^^^\r\n   |                                     |\r\n   |                                     expected lifetime parameter\r\n...\r\n52 | / define_mask! {\r\n53 | |     #[doc = \"`isize`-wide mask\"]\r\n54 | |     struct masksize(isize);\r\n55 | | }\r\n   | |_- in this macro invocation\r\n   |\r\n   = note: this warning originates in the macro `define_mask` (in Nightly builds, run with -Z macro-backtrace for more info)\r\nhelp: indicate the anonymous lifetime\r\n   |\r\n38 |             fn fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result {\r\n   |                                                       ++++\r\n\r\nwarning: `imcrate` (bin \"imcrate\" test) generated 2 warnings (2 duplicates)\r\nwarning: `imcrate` (bin \"imcrate\") generated 2 warnings (run `cargo fix --bin \"imcrate\"` to apply 2 suggestions)\r\n```\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/105148/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/105148/timeline", "performed_via_github_app": null, "state_reason": null}