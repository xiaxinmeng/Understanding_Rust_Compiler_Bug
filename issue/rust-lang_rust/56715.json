{"url": "https://api.github.com/repos/rust-lang/rust/issues/56715", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/56715/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/56715/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/56715/events", "html_url": "https://github.com/rust-lang/rust/issues/56715", "id": 389799192, "node_id": "MDU6SXNzdWUzODk3OTkxOTI=", "number": 56715, "title": "should `let _: T = RHS` be synonymous with `let _ = RHS: T`?", "user": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 604489711, "node_id": "MDU6TGFiZWw2MDQ0ODk3MTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-NLL", "name": "A-NLL", "color": "f7e101", "default": false, "description": "Area: Non Lexical Lifetimes (NLL)"}, {"id": 867466592, "node_id": "MDU6TGFiZWw4Njc0NjY1OTI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/NLL-sound", "name": "NLL-sound", "color": "f799ea", "default": false, "description": "Working towards the \"invalid code does not compile\" goal"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-12-11T14:48:26Z", "updated_at": "2018-12-19T20:36:21Z", "closed_at": "2018-12-17T15:02:05Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Spawned off of https://github.com/rust-lang/rust/issues/55748#issuecomment-446171809\r\n\r\nThe Rust test suite currently has the following test of how subtyping and \"covariance\" (*) works with respect to regions.\r\n\r\nhttps://github.com/rust-lang/rust/blob/3a3121337122637fa11f0e5d42aec67551e8c125/src/test/run-pass/regions/regions-variance-covariant-use-covariant.rs#L24-L31\r\n\r\nThe problem is that there are small variations on this test that exercise very different parts of the compiler, and potentially expose incoherence in the semantics.\r\n\r\nHere is some code that explores the different behaviors one might witness ([play](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2015&gist=ccfaf7d8ba72b3a063913e8b96f33044)):\r\n\r\n```rust\r\n#![feature(type_ascription)]\r\n#![allow(dead_code)]\r\n\r\n// SUMMARY OF BEHAVIOR\r\n//\r\n// EDITION        WILD      VAR       EXPR      ARG\r\n// -----------    ------    ------    ------    ------\r\n// 2015/AST       accept    accept    reject    accept\r\n// 2018/NLL       accept    accept    reject    accept\r\n// PATCHED        reject    accept    reject    accept\r\n\r\n#[derive(Copy, Clone)]\r\nstruct Covariant<'a> {\r\n    f: extern \"Rust\" fn(&'a isize)\r\n}\r\n\r\nfn ascribe_wild<'a>(co: Covariant<'a>) {\r\n    let _: Covariant<'static> = co;  // (ascribe on) WILD(card)\r\n}\r\n\r\nfn ascribe_var<'a>(co: Covariant<'a>) {\r\n    let _c: Covariant<'static> = co; // (ascribe on) VAR\r\n}\r\n\r\nfn ascribe_expr<'a>(co: Covariant<'a>) {\r\n    let _ = co: Covariant<'static>;  // (ascribe on) EXPR\r\n}\r\n\r\nfn co_arg(_co_s: Covariant<'static>) { }\r\n\r\nfn pass_actual_arg<'a>(co: Covariant<'a>) {\r\n    co_arg(co);                      // (actual )ARG(ument)\r\n}\r\n\r\npub fn main() {}\r\n```\r\n\r\nThe entry in the summary that says \"PATCHED\" is for a 2018 compiler with the following patch applied to the following line of code:\r\n\r\nhttps://github.com/rust-lang/rust/blob/3a3121337122637fa11f0e5d42aec67551e8c125/src/librustc_mir/build/matches/mod.rs#L1339-L1340\r\n\r\n```\r\ndiff --git a/src/librustc_mir/build/matches/mod.rs b/src/librustc_mir/build/matches/mod.rs\r\nindex 7e7c0b1555..89f95368ad 100644\r\n--- a/src/librustc_mir/build/matches/mod.rs\r\n+++ b/src/librustc_mir/build/matches/mod.rs\r\n@@ -1336,7 +1336,7 @@ impl<'a, 'gcx, 'tcx> Builder<'a, 'gcx, 'tcx> {\r\n                     source_info,\r\n                     kind: StatementKind::AscribeUserType(\r\n                         ascription.source.clone(),\r\n-                        ty::Variance::Covariant,\r\n+                        ty::Variance::Invariant,\r\n                         box ascription.user_ty.clone().user_ty(),\r\n                     ),\r\n                 },\r\n```\r\n\r\nThe  original reasoning behind that patch is that *every* other place that we use `AscribeUserType`, we use an `Invariant` relation, not a `Covariant` one.\r\n\r\nNote that the PATCHED version continues to handle the VAR and ARG cases in a manner consistent with the previous editions of Rust. In other words, in this instance, it just changes how `let _: T = RHS;` behaves to act more like `let _ = RHS: T;`\r\n\r\n----\r\n\r\n(*): I put \"covariance\" in quote because I think Rust's definition of co/contravariance on regions is tied to a mental model that is not ideal for practical usage, see also https://github.com/rust-lang/rfcs/issues/391", "closed_by": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/56715/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/56715/timeline", "performed_via_github_app": null, "state_reason": "completed"}