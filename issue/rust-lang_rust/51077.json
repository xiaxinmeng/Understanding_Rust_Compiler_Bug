{"url": "https://api.github.com/repos/rust-lang/rust/issues/51077", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/51077/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/51077/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/51077/events", "html_url": "https://github.com/rust-lang/rust/issues/51077", "id": 326717494, "node_id": "MDU6SXNzdWUzMjY3MTc0OTQ=", "number": 51077, "title": "`<Default>::default()` makes the compiler very mad at me", "user": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 36956, "node_id": "MDU6TGFiZWwzNjk1Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-frontend", "name": "A-frontend", "color": "f7e101", "default": false, "description": "Area: frontend (errors, parsing and HIR)"}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}, {"id": 693665463, "node_id": "MDU6TGFiZWw2OTM2NjU0NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/WG-diagnostics", "name": "WG-diagnostics", "color": "c2e0c6", "default": false, "description": "Working group: diagnostics"}, {"id": 1659943986, "node_id": "MDU6TGFiZWwxNjU5OTQzOTg2", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-verbose", "name": "D-verbose", "color": "c9f7a3", "default": false, "description": "Too much output caused by a single piece of incorrect code"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-05-26T07:23:31Z", "updated_at": "2020-01-22T23:19:03Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Suppose I learned\r\n- That `[f32; 2]::deserialize(deserializer)` doesn't work, and I need to do `<[f32; 2]>::deserialize(deserializer)` instead (thank you https://github.com/rust-lang/rust/pull/46788), and\r\n- That I can do `Default::default()`, instead of `ConcreteType::default()`\r\n\r\nIf I combine those two things together and [try](https://play.rust-lang.org/?gist=0e860a077545909836dd4d0de6324ed4&version=nightly&mode=debug)\r\n\r\n```rust\r\nlet x: u32 = <Default>::default();\r\n```\r\n\r\nThen I get this spew of errors:\r\n\r\n```rust\r\nerror[E0277]: the trait bound `std::default::Default: std::default::Default` is not satisfied\r\n --> src/main.rs:2:18\r\n  |\r\n2 |     let x: u32 = <Default>::default();\r\n  |                  ^^^^^^^^^^^^^^^^^^ the trait `std::default::Default` is not implemented for `std::default::Default`\r\n  |\r\n  = note: required by `std::default::Default::default`\r\n\r\nerror[E0038]: the trait `std::default::Default` cannot be made into an object\r\n --> src/main.rs:2:19\r\n  |\r\n2 |     let x: u32 = <Default>::default();\r\n  |                   ^^^^^^^ the trait `std::default::Default` cannot be made into an object\r\n  |\r\n  = note: the trait cannot require that `Self : Sized`\r\n\r\nerror[E0308]: mismatched types\r\n --> src/main.rs:2:18\r\n  |\r\n2 |     let x: u32 = <Default>::default();\r\n  |                  ^^^^^^^^^^^^^^^^^^^^ expected u32, found trait std::default::Default\r\n  |\r\n  = note: expected type `u32`\r\n             found type `std::default::Default`\r\n\r\nerror[E0038]: the trait `std::default::Default` cannot be made into an object\r\n --> src/main.rs:2:18\r\n  |\r\n2 |     let x: u32 = <Default>::default();\r\n  |                  ^^^^^^^^^^^^^^^^^^^^ the trait `std::default::Default` cannot be made into an object\r\n  |\r\n  = note: the trait cannot require that `Self : Sized`\r\n\r\nerror: aborting due to 4 previous errors\r\n\r\nSome errors occurred: E0038, E0277, E0308.\r\nFor more information about an error, try `rustc --explain E0038`.\r\n```\r\n\r\nI don't know what I'm concretely asking for here (please retitle better), so here are some thoughts:\r\n\r\n- The second error is the valuable one here\r\n- \"found trait std::default::Default\" should perhaps be \"found trait *object* std::default::Default\"?\r\n- Maybe this all will just work in Rust 2021 when `<Default>` can mean `Default`, not `dyn Default>`...", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/51077/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/51077/timeline", "performed_via_github_app": null, "state_reason": null}