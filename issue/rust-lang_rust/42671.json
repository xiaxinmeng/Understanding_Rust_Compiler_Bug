{"url": "https://api.github.com/repos/rust-lang/rust/issues/42671", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/42671/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/42671/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/42671/events", "html_url": "https://github.com/rust-lang/rust/issues/42671", "id": 236163007, "node_id": "MDU6SXNzdWUyMzYxNjMwMDc=", "number": 42671, "title": "Add Vec::contains_ref which is worse for inference but less restrictive than Vec::contains", "user": {"login": "Istvan91", "id": 4958541, "node_id": "MDQ6VXNlcjQ5NTg1NDE=", "avatar_url": "https://avatars.githubusercontent.com/u/4958541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Istvan91", "html_url": "https://github.com/Istvan91", "followers_url": "https://api.github.com/users/Istvan91/followers", "following_url": "https://api.github.com/users/Istvan91/following{/other_user}", "gists_url": "https://api.github.com/users/Istvan91/gists{/gist_id}", "starred_url": "https://api.github.com/users/Istvan91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Istvan91/subscriptions", "organizations_url": "https://api.github.com/users/Istvan91/orgs", "repos_url": "https://api.github.com/users/Istvan91/repos", "events_url": "https://api.github.com/users/Istvan91/events{/privacy}", "received_events_url": "https://api.github.com/users/Istvan91/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 166999014, "node_id": "MDU6TGFiZWwxNjY5OTkwMTQ=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-collections", "name": "A-collections", "color": "f7e101", "default": false, "description": "Area: std::collections."}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2017-06-15T11:48:00Z", "updated_at": "2022-10-20T19:26:23Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "Using Vec::contains currently only works if the contains parameter is of the same &Type as the Vector elements. This means the parameter must be converted to the vec-item-type even though it is comparable with the type in the first place.\r\n\r\ne.g. following code does not work, even though `impl<'a, 'b> PartialEq<str> for String` exists:\r\n```\r\nfn main() {\r\n    let mut v: Vec<String> = Vec::new();\r\n    v.contains(\"mystring\");\r\n}\r\n```\r\nThe Error:\r\n```\r\nerror[E0308]: mismatched types\r\n --> <anon>:3:16\r\n  |\r\n3 |     v.contains(\"mystring\");\r\n  |                ^^^^^^^^^^ expected struct `std::string::String`, found str\r\n  |\r\n  = note: expected type `&std::string::String`\r\n             found type `&'static str`\r\n```\r\n\r\nI'd be better if Vec::contains had definition like:\r\n`fn contains<U>(&self, value: &U) where T: PartialEq<U>, U: ?Sized`\r\n\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/42671/reactions", "total_count": 43, "+1": 42, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 1}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/42671/timeline", "performed_via_github_app": null, "state_reason": null}