{"url": "https://api.github.com/repos/rust-lang/rust/issues/51177", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/51177/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/51177/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/51177/events", "html_url": "https://github.com/rust-lang/rust/issues/51177", "id": 327382289, "node_id": "MDU6SXNzdWUzMjczODIyODk=", "number": 51177, "title": "unused macros fails some obvious cases due to prelude", "user": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 858360099, "node_id": "MDU6TGFiZWw4NTgzNjAwOTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/WG-epoch", "name": "WG-epoch", "color": "c2e0c6", "default": false, "description": "Working group: Epoch (2018) management"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-05-29T15:51:22Z", "updated_at": "2019-08-23T15:17:06Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This example does not warn, even in Rust 2018 edition:\r\n\r\n```rust\r\n// compile-flags: --edition 2018\r\nextern crate foo; \r\nfn main() { foo::bar(); }\r\n```\r\n\r\nThe reason is that we resolve `foo` against the extern crate, when in fact it could *also* be resolved by the extern prelude fallback. But that's tricky! Something like this could also happen:\r\n\r\n```rust\r\n// compile-flags: --edition 2018\r\nmod bar { mod foo { } }\r\nuse bar::*; // `foo` here is shadowed by `foo` below\r\nextern crate foo; \r\nfn main() { foo::bar(); }\r\n```\r\n\r\nIn which case, removing `foo` would result in importing the module, since (I believe) that would shadow the implicit prelude imports.\r\n\r\nTherefore: we can do better here, but with caution -- for example, we could suggest removing an extern crate in a scenario like this, but only if there are no glob imports in the current module. Not sure it's worth it though.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/51177/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/51177/timeline", "performed_via_github_app": null, "state_reason": null}