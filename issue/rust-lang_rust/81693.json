{"url": "https://api.github.com/repos/rust-lang/rust/issues/81693", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/81693/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/81693/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/81693/events", "html_url": "https://github.com/rust-lang/rust/issues/81693", "id": 800012109, "node_id": "MDU6SXNzdWU4MDAwMTIxMDk=", "number": 81693, "title": "Wrapper variable considered live after all of its constituents are consumed ", "user": {"login": "yshui", "id": 366851, "node_id": "MDQ6VXNlcjM2Njg1MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/366851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yshui", "html_url": "https://github.com/yshui", "followers_url": "https://api.github.com/users/yshui/followers", "following_url": "https://api.github.com/users/yshui/following{/other_user}", "gists_url": "https://api.github.com/users/yshui/gists{/gist_id}", "starred_url": "https://api.github.com/users/yshui/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yshui/subscriptions", "organizations_url": "https://api.github.com/users/yshui/orgs", "repos_url": "https://api.github.com/users/yshui/repos", "events_url": "https://api.github.com/users/yshui/events{/privacy}", "received_events_url": "https://api.github.com/users/yshui/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2021-02-03T06:16:38Z", "updated_at": "2022-09-13T21:57:38Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI tried this code:\r\n\r\n```rust\r\nuse either::Either;\r\nstruct A;\r\nstruct B;\r\nstruct AW<'a>(&'a mut A);\r\nimpl<'a> Drop for AW<'a> {\r\n    fn drop(&mut self) {\r\n\r\n    }\r\n}\r\nfn cap(_: &mut A) -> Either::<AW<'_>, B> {\r\n    unimplemented!()\r\n}\r\npub fn main() {\r\n    let mut a = A;\r\n    let b = cap(&mut a);\r\n    match b {\r\n        Either::Left(a) => {\r\n            drop(a);\r\n        },\r\n        Either::Right(y) => {\r\n            a = A; // <- doesn't compile\r\n        }\r\n    }; // No way is the compiler going to drop b at this point in either case\r\n}\r\n\r\n```\r\n\r\nIn this piece of code, the compiler keeps `b` alive for the entire duration of match, preventing me from assigning to `a` in the `Right` arm. The explanation it gives is that it needs to run drop on `b` at the end of the match.\r\n\r\n```\r\nerror[E0506]: cannot assign to `a` because it is borrowed\r\n  --> src/main.rs:22:13\r\n   |\r\n15 |     let b = cap(&mut a);\r\n   |                 ------ borrow of `a` occurs here\r\n...\r\n22 |             a = A;\r\n   |             ^^^^^ assignment to borrowed `a` occurs here\r\n...\r\n26 | }\r\n   | - borrow might be used here, when `b` is dropped and runs the destructor for type `Either<AW<'_>, B>`\r\n```\r\n\r\nHowever, that's not the case at all. `b` is partially moved in both arms, its `drop` cannot be called at the end of match.\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.50.0-nightly (f76ecd066 2020-12-15)\r\nbinary: rustc\r\ncommit-hash: f76ecd0668fcdb289456cdc72a39ad15467cc454\r\ncommit-date: 2020-12-15\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.50.0-nightly\r\n\r\n```\r\n\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/81693/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/81693/timeline", "performed_via_github_app": null, "state_reason": null}