{"url": "https://api.github.com/repos/rust-lang/rust/issues/111857", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/111857/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/111857/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/111857/events", "html_url": "https://github.com/rust-lang/rust/issues/111857", "id": 1720993704, "node_id": "I_kwDOAAsO6M5mlEeo", "number": 111857, "title": "\"cannot use because it was mutably borrowed\" error mentions non-existent field on enum variant", "user": {"login": "asquared31415", "id": 34665709, "node_id": "MDQ6VXNlcjM0NjY1NzA5", "avatar_url": "https://avatars.githubusercontent.com/u/34665709?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asquared31415", "html_url": "https://github.com/asquared31415", "followers_url": "https://api.github.com/users/asquared31415/followers", "following_url": "https://api.github.com/users/asquared31415/following{/other_user}", "gists_url": "https://api.github.com/users/asquared31415/gists{/gist_id}", "starred_url": "https://api.github.com/users/asquared31415/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asquared31415/subscriptions", "organizations_url": "https://api.github.com/users/asquared31415/orgs", "repos_url": "https://api.github.com/users/asquared31415/repos", "events_url": "https://api.github.com/users/asquared31415/events{/privacy}", "received_events_url": "https://api.github.com/users/asquared31415/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2023-05-23T01:47:59Z", "updated_at": "2023-05-23T09:10:15Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Code\r\n\r\n```Rust\r\nfn main() {\r\n    let mut x = Some(0_u32);\r\n    if let Some(ref mut inner /*: &mut u32 */) = x {\r\n        let _moved = x;\r\n        let _moved = inner;\r\n    }\r\n}\r\n```\r\n\r\n\r\n### Current output\r\n\r\n```Shell\r\nerror[E0503]: cannot use `x` because it was mutably borrowed\r\n --> src/main.rs:4:22\r\n  |\r\n3 |     if let Some(ref mut inner /*: &mut u32 */) = x {\r\n  |                 ------------- `x.0` is borrowed here\r\n4 |         let _moved = x;\r\n  |                      ^ use of borrowed `x.0`\r\n5 |         let _moved = inner;\r\n  |                      ----- borrow later used here\r\n```\r\n\r\n\r\n### Desired output\r\n\r\n```Shell\r\nerror[E0503]: cannot use `x` because it was mutably borrowed\r\n --> src/main.rs:4:22\r\n  |\r\n3 |     if let Some(ref mut inner /*: &mut u32 */) = x {\r\n  |                 ------------- `x` is borrowed here\r\n4 |         let _moved = x;\r\n  |                      ^ use of borrowed `x`\r\n5 |         let _moved = inner;\r\n  |                      ----- borrow later used here\r\n```\r\n\r\n\r\n### Rationale and extra context\r\n\r\nThe mentioned `x.0` field access is not valid, since the field only exists on a specific variant of the enum.\r\n\r\n### Other cases\r\n\r\r\nThis can happen with `match` and `if let` using `ref mut` patterns on enums.\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/111857/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/111857/timeline", "performed_via_github_app": null, "state_reason": null}