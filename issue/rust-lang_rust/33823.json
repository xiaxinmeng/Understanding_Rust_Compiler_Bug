{"url": "https://api.github.com/repos/rust-lang/rust/issues/33823", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/33823/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/33823/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/33823/events", "html_url": "https://github.com/rust-lang/rust/issues/33823", "id": 156350655, "node_id": "MDU6SXNzdWUxNTYzNTA2NTU=", "number": 33823, "title": "un-closed delimiter causes compiler to crash.", "user": {"login": "Arzte", "id": 7450443, "node_id": "MDQ6VXNlcjc0NTA0NDM=", "avatar_url": "https://avatars.githubusercontent.com/u/7450443?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Arzte", "html_url": "https://github.com/Arzte", "followers_url": "https://api.github.com/users/Arzte/followers", "following_url": "https://api.github.com/users/Arzte/following{/other_user}", "gists_url": "https://api.github.com/users/Arzte/gists{/gist_id}", "starred_url": "https://api.github.com/users/Arzte/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Arzte/subscriptions", "organizations_url": "https://api.github.com/users/Arzte/orgs", "repos_url": "https://api.github.com/users/Arzte/repos", "events_url": "https://api.github.com/users/Arzte/events{/privacy}", "received_events_url": "https://api.github.com/users/Arzte/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-05-23T19:42:38Z", "updated_at": "2016-05-24T19:11:25Z", "closed_at": "2016-05-24T15:59:04Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I ran this code:\n\n`````` rust\n// External Crate Imports\nextern crate clap;\nextern crate diesel;\n\n// Distro enum import\nuse super::distro::{Distro, which_distro};\n\n// Imports needed to run each command\nuse std::process::Command;\n// Std Lib Imports\nuse std::process::exit;\nuse std::collections::HashSet;\n\nuse db;\n\n// Gets what distro is being used from distro.rs\n// then sets that as a function.\n\npub fn getWhichDistro() {\n    let opt_dist = which_distro();\n    if opt_dist.is_none() {\n        println!(\"Your distribution is not supported\");\n        exit(0);\n}\n\n/// Installs packages for what ever Distro is returned\n/// from which_distro();\n///\n/// #Examples\n///\n/// ```\n/// let mut packages: HashSet<&str> = HashSet::new();\n/// packages.push(\"sudo\");\n/// packages.push(\"postgresql\");\n/// void_install(packages);\n/// ```\n///\npub fn opt_distro_install(packages: HashSet<String>) {\n    let opt_distro_packages = convert_to_opt_distro(packages);\n    if !opt_distro_packages.is_empty() {\n        pac(opt_distro_packages);\n    }\n}\n\n/// Convert package names from other distros to void\nfn convert_to_opt_distro(input_packages: HashSet<String>) -> HashSet<String> {\n    let results = db::pack_query(input_packages);\n    let mut pac_converted: HashSet<String> = HashSet::new();\n\n    // Using the querys store into the HashSet the actual\n    // void package name for use later\n    for i in results {\n        // All querys will either be a string or '' in the db\n        // allowing us to use is_empty()\n        if !i.opt_distro.is_empty() {\n            pac_converted.insert(i.opt_distro);\n        }\n    }\n\n    pac_converted\n}\n\n// Figures out the current package manager based on Distro\n\npub fn setFunctionVaribles() {\n    if opt_distro().contains(\"Ubuntu\") {\n        let opt_pac_install = \"apt-get\";\n        let opt_pac_install_args = \"install\";\n        let opt_pac_refresh = \"apt-get\";\n        let opt_pac_refresh_args = \"update\";\n        let opt_pac_upgrade = \"apt-get\";\n        let opt_pac_upgrade_args = \"upgrade\";\n    } else if opt_distro().contains(\"Void\") {\n        let opt_pac_install = \"xbps-install\";\n        let opt_pac_install_args = \"-S\";\n        let opt_pac_refresh = \"xbps-install\";\n        let opt_pac_refresh_args = \"-Sy\";\n        let opt_pac_upgrade = \"xbps-install\";\n        let opt_pac_upgrade_args = \"-Syu\";\n    } else if opt_distro().contains(\"Debian\") {\n        let opt_pac_install = \"apt-get\";\n        let opt_pac_install_args = \"install\";\n        let opt_pac_refresh = \"apt-get\";\n        let opt_pac_refresh_args = \"update\";\n        let opt_pac_upgrade = \"apt-get\";\n        let opt_pac_upgrade_args = \"upgrade\";\n    } else if opt_distro().contains(\"Mint\") {\n        let opt_pac_install = \"apt-get\";\n        let opt_pac_install_args = \"install\";\n        let opt_pac_refresh = \"apt-get\";\n        let opt_pac_refresh_args = \"update\";\n        let opt_pac_upgrade = \"apt-get\";\n        let opt_pac_upgrade_args = \"upgrade\";\n    } else if opt_distro().contains(\"FreeBSD\") {\n        let opt_pac_install = \"pkg\";\n        let opt_pac_install_args = \"install\";\n        let opt_pac_refresh = \"pkg\";\n        let opt_pac_refresh_args = \"update\";\n        let opt_pac_upgrade = \"pkg\";\n        let opt_pac_upgrade_args = \"upgrade\";\n    }\n}\n\n// Package Manager specific functions\n\n/// Calls the package manager program to install packages\n///\n/// #Examples\n///\n/// ```\n/// let mut packages: HashSet<String> = HashSet::new();\n/// packages.push(\"sudo\".to_owned());\n/// pac(packages);\n/// ```\n///\npub fn pac(mut packages: HashSet<String>) {\n    let mut child = match Command::new(opt_pac_install)\n        .arg(opt_pac_install_args)\n        .args(packages.drain()\n            .collect::<Vec<String>>()\n            .as_slice())\n        .spawn() {\n        Ok(child) => child,\n        Err(e) => panic!(\"Failed to execute child: {}\", e),\n    };\n    let _unused = child.wait();\n}\n\n/// Calls the xbps-install program to refresh the package list\n///\n/// #Examples\n///\n/// ```\n/// refresh_list();\n/// ```\n///\npub fn refresh_list() {\n    let mut child = match Command::new(opt_pac_refresh)\n        .arg(opt_pac_refresh_args)\n        .spawn() {\n        Ok(child) => child,\n        Err(e) => panic!(\"Failed to execute child: {}\", e),\n    };\n    let _unused = child.wait();\n}\n\n/// Calls the xbps-install program to upgrage all packages\n///\n/// #Examples\n///\n/// ```\n/// refresh_list();\n/// ```\n///\npub fn upgrade_packages() {\n    let mut child = match Command::new(opt_pac_upgrade)\n        .arg(opt_pac_upgrade_args)\n        .spawn() {\n        Ok(child) => child,\n        Err(e) => panic!(\"Failed to execute child: {}\", e),\n    };\n    let _unused = child.wait();\n}\n``````\n\nI expected it to tell me whats wrong with the code.\nInstead it crashed with a un-closed delimiter error.\n## Meta\n\n`rustc --version --verbose`\n\n``` bash\nrustc 1.10.0-nightly (d91f8ab0f 2016-05-07)\nbinary: rustc\ncommit-hash: d91f8ab0f58fa123857d96b9e151fc5185f5ff08\ncommit-date: 2016-05-07\nhost: x86_64-unknown-linux-gnu\nrelease: 1.10.0-nightly\n```\n\nBacktrace:\n\n``` rust\n   Compiling Alchemist v0.4.0 (file:///home/benjamin/git-projects/Alchemist)\nsrc/alchemy/function.rs:163:3: 163:3 error: this file contains an un-closed delimiter\nsrc/alchemy/function.rs:163:3: 163:3 error: this file contains an un-closed delimiter\nerror: internal compiler error: unexpected panic\nnote: the compiler unexpectedly panicked. this is a bug.\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\nnote: run with `RUST_BACKTRACE=1` for a backtrace\nthread 'rustc' panicked at 'no annotations resulted from: Line { line_index: 162, annotations: [Annotation { start_col: 2, end_col: 2, is_primary: true, label: None }] }', ../src/libsyntax/errors/snippet/mod.rs:495\nstack backtrace:\n   1:     0x7fdf604f8d20 - std::sys::backtrace::tracing::imp::write::h9fb600083204ae7f\n   2:     0x7fdf6050656b - std::panicking::default_hook::_$u7b$$u7b$closure$u7d$$u7d$::hca543c34f11229ac\n   3:     0x7fdf6050610c - std::panicking::default_hook::hc2c969e7453d080c\n   4:     0x7fdf604cb8cf - std::sys_common::unwind::begin_unwind_inner::h30e12d15ce2b2e25\n   5:     0x7fdf604cd9b8 - std::sys_common::unwind::begin_unwind_fmt::hb2de8a9968d38523\n   6:     0x7fdf5bb3a3f0 - _<std..iter..FlatMap<I, U, F> as std..iter..Iterator>::next::h5f2bd9e6e7475c71\n   7:     0x7fdf5bb2529d - syntax::errors::snippet::SnippetData::render_lines::hcf468c4f4b065b33\n   8:     0x7fdf5bb1de5d - _<errors..emitter..EmitterWriter as errors..emitter..CoreEmitter>::emit_message::h90dab4fc68091626\n   9:     0x7fdf5cdb581d - _<T as syntax..errors..emitter..Emitter>::emit_struct::h7b7bf4316e311f87\n  10:     0x7fdf5bbfea79 - syntax::parse::parser::Parser::parse_token_tree::hd7887691a0224788\n  11:     0x7fdf5bbecd8e - syntax::parse::parser::Parser::parse_all_token_trees::hd7d5e9405b2cb448\n  12:     0x7fdf5bbedb06 - syntax::parse::filemap_to_tts::hef694d21976dabc3\n  13:     0x7fdf5bbed222 - syntax::parse::filemap_to_parser::haaf76e155992a193\n  14:     0x7fdf5bbed5a5 - syntax::parse::new_sub_parser_from_file::h958bfc7a4123d826\n  15:     0x7fdf5bc66c0e - syntax::parse::parser::Parser::eval_src_mod::hc1b930270df2f2db\n  16:     0x7fdf5bc46dfa - syntax::parse::parser::Parser::parse_item_::h42775dc76ed27882\n  17:     0x7fdf5bbebea2 - syntax::parse::parser::Parser::parse_item::h10c52ea29e5c06b9\n  18:     0x7fdf5bc64985 - syntax::parse::parser::Parser::parse_mod_items::h66337b460d5459b0\n  19:     0x7fdf5bbea357 - syntax::parse::parser::Parser::parse_crate_mod::hab124b9c61eef337\n  20:     0x7fdf5bbea0ee - syntax::parse::parse_crate_from_file::h9d8c63cd0dc10cd2\n  21:     0x7fdf60a5ba7f - rustc_driver::driver::phase_1_parse_input::_$u7b$$u7b$closure$u7d$$u7d$::h356ebaf3d4ce86d0\n  22:     0x7fdf60a36698 - rustc_driver::driver::phase_1_parse_input::h338b1890954f9a2c\n  23:     0x7fdf60a11e97 - rustc_driver::driver::compile_input::h0629572e6f316b31\n  24:     0x7fdf60a0857d - rustc_driver::run_compiler::h8902aebf8b1849a8\n  25:     0x7fdf60a0583d - std::sys_common::unwind::try::try_fn::h4c74456035d0fcc7\n  26:     0x7fdf604f64fb - __rust_try\n  27:     0x7fdf604f648d - std::sys_common::unwind::inner_try::h47a4d9cd4a369dcd\n  28:     0x7fdf60a0626a - _<F as std..boxed..FnBox<A>>::call_box::h27f542a39f1d61ef\n  29:     0x7fdf605046d4 - std::sys::thread::Thread::new::thread_start::h6f266e069bf4ec2b\n  30:     0x7fdf5829e3f3 - start_thread\n                        at /builddir/glibc-2.23/nptl/pthread_create.c:333\n  31:     0x7fdf60161bac - clone\n                        at ../sysdeps/unix/sysv/linux/x86_64/clone.S:109\n  32:                0x0 - <unknown>\n\nBuild failed, waiting for other jobs to finish...\nerror: internal compiler error: unexpected panic\nnote: the compiler unexpectedly panicked. this is a bug.\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\nnote: run with `RUST_BACKTRACE=1` for a backtrace\nthread 'rustc' panicked at 'no annotations resulted from: Line { line_index: 162, annotations: [Annotation { start_col: 2, end_col: 2, is_primary: true, label: None }] }', ../src/libsyntax/errors/snippet/mod.rs:495\nstack backtrace:\n   1:     0x7f1398831d20 - std::sys::backtrace::tracing::imp::write::h9fb600083204ae7f\n   2:     0x7f139883f56b - std::panicking::default_hook::_$u7b$$u7b$closure$u7d$$u7d$::hca543c34f11229ac\n   3:     0x7f139883f10c - std::panicking::default_hook::hc2c969e7453d080c\n   4:     0x7f13988048cf - std::sys_common::unwind::begin_unwind_inner::h30e12d15ce2b2e25\n   5:     0x7f13988069b8 - std::sys_common::unwind::begin_unwind_fmt::hb2de8a9968d38523\n   6:     0x7f1393e733f0 - _<std..iter..FlatMap<I, U, F> as std..iter..Iterator>::next::h5f2bd9e6e7475c71\n   7:     0x7f1393e5e29d - syntax::errors::snippet::SnippetData::render_lines::hcf468c4f4b065b33\n   8:     0x7f1393e56e5d - _<errors..emitter..EmitterWriter as errors..emitter..CoreEmitter>::emit_message::h90dab4fc68091626\n   9:     0x7f13950ee81d - _<T as syntax..errors..emitter..Emitter>::emit_struct::h7b7bf4316e311f87\n  10:     0x7f1393f37a79 - syntax::parse::parser::Parser::parse_token_tree::hd7887691a0224788\n  11:     0x7f1393f25d8e - syntax::parse::parser::Parser::parse_all_token_trees::hd7d5e9405b2cb448\n  12:     0x7f1393f26b06 - syntax::parse::filemap_to_tts::hef694d21976dabc3\n  13:     0x7f1393f26222 - syntax::parse::filemap_to_parser::haaf76e155992a193\n  14:     0x7f1393f265a5 - syntax::parse::new_sub_parser_from_file::h958bfc7a4123d826\n  15:     0x7f1393f9fc0e - syntax::parse::parser::Parser::eval_src_mod::hc1b930270df2f2db\n  16:     0x7f1393f7fdfa - syntax::parse::parser::Parser::parse_item_::h42775dc76ed27882\n  17:     0x7f1393f24ea2 - syntax::parse::parser::Parser::parse_item::h10c52ea29e5c06b9\n  18:     0x7f1393f9d985 - syntax::parse::parser::Parser::parse_mod_items::h66337b460d5459b0\n  19:     0x7f1393f23357 - syntax::parse::parser::Parser::parse_crate_mod::hab124b9c61eef337\n  20:     0x7f1393f230ee - syntax::parse::parse_crate_from_file::h9d8c63cd0dc10cd2\n  21:     0x7f1398d94a7f - rustc_driver::driver::phase_1_parse_input::_$u7b$$u7b$closure$u7d$$u7d$::h356ebaf3d4ce86d0\n  22:     0x7f1398d6f698 - rustc_driver::driver::phase_1_parse_input::h338b1890954f9a2c\n  23:     0x7f1398d4ae97 - rustc_driver::driver::compile_input::h0629572e6f316b31\n  24:     0x7f1398d4157d - rustc_driver::run_compiler::h8902aebf8b1849a8\n  25:     0x7f1398d3e83d - std::sys_common::unwind::try::try_fn::h4c74456035d0fcc7\n  26:     0x7f139882f4fb - __rust_try\n  27:     0x7f139882f48d - std::sys_common::unwind::inner_try::h47a4d9cd4a369dcd\n  28:     0x7f1398d3f26a - _<F as std..boxed..FnBox<A>>::call_box::h27f542a39f1d61ef\n  29:     0x7f139883d6d4 - std::sys::thread::Thread::new::thread_start::h6f266e069bf4ec2b\n  30:     0x7f13905d73f3 - start_thread\n                        at /builddir/glibc-2.23/nptl/pthread_create.c:333\n  31:     0x7f139849abac - clone\n                        at ../sysdeps/unix/sysv/linux/x86_64/clone.S:109\n  32:                0x0 - <unknown>\n\nerror: Could not compile `Alchemist`.\n\nTo learn more, run the command again with --verbose.\n```\n", "closed_by": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/33823/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/33823/timeline", "performed_via_github_app": null, "state_reason": "completed"}