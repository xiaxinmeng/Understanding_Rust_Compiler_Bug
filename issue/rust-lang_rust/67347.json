{"url": "https://api.github.com/repos/rust-lang/rust/issues/67347", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/67347/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/67347/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/67347/events", "html_url": "https://github.com/rust-lang/rust/issues/67347", "id": 538359029, "node_id": "MDU6SXNzdWU1MzgzNTkwMjk=", "number": 67347, "title": "`==` after unsafe block is not correctly recognized", "user": {"login": "upsuper", "id": 333750, "node_id": "MDQ6VXNlcjMzMzc1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/333750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/upsuper", "html_url": "https://github.com/upsuper", "followers_url": "https://api.github.com/users/upsuper/followers", "following_url": "https://api.github.com/users/upsuper/following{/other_user}", "gists_url": "https://api.github.com/users/upsuper/gists{/gist_id}", "starred_url": "https://api.github.com/users/upsuper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/upsuper/subscriptions", "organizations_url": "https://api.github.com/users/upsuper/orgs", "repos_url": "https://api.github.com/users/upsuper/repos", "events_url": "https://api.github.com/users/upsuper/events{/privacy}", "received_events_url": "https://api.github.com/users/upsuper/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1183099971, "node_id": "MDU6TGFiZWwxMTgzMDk5OTcx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-suggestion-diagnostics", "name": "A-suggestion-diagnostics", "color": "f7e101", "default": false, "description": "Area: suggestions generated by the compiler applied by cargo fix"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-12-16T11:39:55Z", "updated_at": "2020-07-24T11:53:59Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Given the following code:\r\n```rust\r\nlet mut a = std::mem::MaybeUninit::new(10);\r\nunsafe { std::ptr::read(a.as_ptr()) } == 10;\r\n```\r\nRust reports error:\r\n```\r\nerror: expected expression, found `==`\r\n --> src/main.rs:3:43\r\n  |\r\n3 |     unsafe { std::ptr::read(a.as_ptr()) } == 10;\r\n  |                                           ^^ expected expression\r\n```\r\n\r\nHowever, if I change `==` to `+`, Rust would instead mentions that a pair of parens should be added to wrap the block:\r\n```\r\nerror: expected expression, found `+`\r\n --> src/main.rs:3:43\r\n  |\r\n3 |     unsafe { std::ptr::read(a.as_ptr()) } + 10;\r\n  |     ------------------------------------- ^ expected expression\r\n  |     |\r\n  |     help: parentheses are required to parse this as an expression: `(unsafe { std::ptr::read(a.as_ptr()) })`\r\n```\r\n\r\nI guess the error message should probably be updated for the `==` case as well.\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":null}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/67347/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/67347/timeline", "performed_via_github_app": null, "state_reason": null}