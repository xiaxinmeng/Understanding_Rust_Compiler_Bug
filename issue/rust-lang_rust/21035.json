{"url": "https://api.github.com/repos/rust-lang/rust/issues/21035", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/21035/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/21035/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/21035/events", "html_url": "https://github.com/rust-lang/rust/issues/21035", "id": 54097154, "node_id": "MDU6SXNzdWU1NDA5NzE1NA==", "number": 21035, "title": "String guide: make distinction between `str` and `&str`", "user": {"login": "mdinger", "id": 4156987, "node_id": "MDQ6VXNlcjQxNTY5ODc=", "avatar_url": "https://avatars.githubusercontent.com/u/4156987?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mdinger", "html_url": "https://github.com/mdinger", "followers_url": "https://api.github.com/users/mdinger/followers", "following_url": "https://api.github.com/users/mdinger/following{/other_user}", "gists_url": "https://api.github.com/users/mdinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/mdinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mdinger/subscriptions", "organizations_url": "https://api.github.com/users/mdinger/orgs", "repos_url": "https://api.github.com/users/mdinger/repos", "events_url": "https://api.github.com/users/mdinger/events{/privacy}", "received_events_url": "https://api.github.com/users/mdinger/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-01-12T19:40:58Z", "updated_at": "2015-03-24T20:59:21Z", "closed_at": "2015-03-24T20:59:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The [string guide](http://doc.rust-lang.org/book/strings.html) distinguishes between `String` and `&str` but makes no mention of a third type people will come across: `str`. `&str` is defined as _the_ type which you refer to? Perhaps define `str` as the type and mention that in most cases it must be borrowed...\n\nThis honestly threw me the first time I saw it. I thought, \"what is `str`...there's only `&str` and `String` ...\".\n\n[Problematic case](http://is.gd/RstJBV):\n\n``` rust\nfn main() {\n    let str_slice = \"str slice\";\n    let mut string = String::new();\n\n    // Doesn't work because `str_slice[0..3]` needs a `&`\n    string = string + str_slice[0..3] + \"ing\";\n    println!(\"{:?}\", string); // Would print `string` without the error.\n}\n```\n\nError:\n\n``` cmd\n... error ... expected str, found &-ptr\n<anon>:5     string = string + str_slice[0..3] + \"ing\";\n                               ^~~~~~~~~~~~~~~\n```\n", "closed_by": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/21035/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/21035/timeline", "performed_via_github_app": null, "state_reason": "completed"}