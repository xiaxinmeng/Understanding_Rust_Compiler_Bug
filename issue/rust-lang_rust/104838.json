{"url": "https://api.github.com/repos/rust-lang/rust/issues/104838", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/104838/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/104838/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/104838/events", "html_url": "https://github.com/rust-lang/rust/issues/104838", "id": 1463660720, "node_id": "I_kwDOAAsO6M5XPbCw", "number": 104838, "title": "Error E0507 suggestion is invalid with `let else`\u00a0statements", "user": {"login": "sgued", "id": 51865119, "node_id": "MDQ6VXNlcjUxODY1MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/51865119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgued", "html_url": "https://github.com/sgued", "followers_url": "https://api.github.com/users/sgued/followers", "following_url": "https://api.github.com/users/sgued/following{/other_user}", "gists_url": "https://api.github.com/users/sgued/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgued/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgued/subscriptions", "organizations_url": "https://api.github.com/users/sgued/orgs", "repos_url": "https://api.github.com/users/sgued/repos", "events_url": "https://api.github.com/users/sgued/events{/privacy}", "received_events_url": "https://api.github.com/users/sgued/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2022-11-24T17:41:42Z", "updated_at": "2022-12-14T01:19:20Z", "closed_at": "2022-12-14T01:19:20Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Given the following code ([playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021&gist=537fe56a67206a6c8918592455e4aa0d)):\r\n\r\n```rust\r\nstruct Testing {\r\n    a: Option<String>\r\n}\r\n\r\nfn testing(a: &Testing) {\r\n    let Some(_s) = a.a else {\r\n        return;\r\n    };\r\n}\r\n```\r\n\r\nThe current output is:\r\n\r\n```\r\nerror[[E0507]](https://doc.rust-lang.org/nightly/error-index.html#E0507): cannot move out of `a.a` as enum variant `Some` which is behind a shared reference\r\n --> src/lib.rs:6:14\r\n  |\r\n6 |     let Some(_s) = a.a else {\r\n  |              ^^\r\n  |              |\r\n  |              move occurs because `a.a.0` has type `String`, which does not implement the `Copy` trait\r\n  |              help: consider borrowing here: `&_s`\r\n\r\nFor more information about this error, try `rustc --explain E0507`.\r\nerror: could not compile `playground` due to previous error\r\n```\r\n\r\nIdeally the output should look like:\r\n\r\n```\r\nerror[[E0507]](https://doc.rust-lang.org/nightly/error-index.html#E0507): cannot move out of `a.a` as enum variant `Some` which is behind a shared reference\r\n --> src/lib.rs:6:14\r\n  |\r\n6 |     let Some(_s) = a.a else {\r\n  |              ^^    ^^^\r\n  |              |     |\r\n  |              |     help: consider borrowing here: `&a.a`       \r\n  |              |\r\n  |              move occurs because `a.a.0` has type `String`, which does not implement the `Copy` trait\r\n\r\n\r\nFor more information about this error, try `rustc --explain E0507`.\r\nerror: could not compile `playground` due to previous error\r\n```\r\n\r\nAn alternative would be to recommend using `ref`, but this would not be consistent with the `match` suggestion:\r\n\r\n```rust\r\nfn testing2(a: &Testing) {\r\n    match a.a {\r\n        Some(_s) => return,\r\n        None => {}\r\n    }\r\n}\r\n```\r\n\r\n```\r\nerror[[E0507]](https://doc.rust-lang.org/nightly/error-index.html#E0507): cannot move out of `a.a` as enum variant `Some` which is behind a shared reference\r\n  --> src/lib.rs:12:11\r\n   |\r\n12 |     match a.a {\r\n   |           ^^^ help: consider borrowing here: `&a.a`\r\n13 |         Some(_s) => return,\r\n   |              --\r\n   |              |\r\n   |              data moved here\r\n   |              move occurs because `_s` has type `String`, which does not implement the `Copy` trait\r\n```\r\n\r\nTested with Nightly version: 1.67.0-nightly (2022-11-23 70f8737b2f5d3bf7d6b7)", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/104838/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/104838/timeline", "performed_via_github_app": null, "state_reason": "completed"}