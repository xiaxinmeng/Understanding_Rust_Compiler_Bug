{"url": "https://api.github.com/repos/rust-lang/rust/issues/18104", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/18104/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/18104/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/18104/events", "html_url": "https://github.com/rust-lang/rust/issues/18104", "id": 46045470, "node_id": "MDU6SXNzdWU0NjA0NTQ3MA==", "number": 18104, "title": "libs: make TypeId opaque", "user": {"login": "aturon", "id": 709807, "node_id": "MDQ6VXNlcjcwOTgwNw==", "avatar_url": "https://avatars.githubusercontent.com/u/709807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aturon", "html_url": "https://github.com/aturon", "followers_url": "https://api.github.com/users/aturon/followers", "following_url": "https://api.github.com/users/aturon/following{/other_user}", "gists_url": "https://api.github.com/users/aturon/gists{/gist_id}", "starred_url": "https://api.github.com/users/aturon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aturon/subscriptions", "organizations_url": "https://api.github.com/users/aturon/orgs", "repos_url": "https://api.github.com/users/aturon/repos", "events_url": "https://api.github.com/users/aturon/events{/privacy}", "received_events_url": "https://api.github.com/users/aturon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2014-10-16T22:56:11Z", "updated_at": "2014-10-16T23:45:05Z", "closed_at": "2014-10-16T23:44:51Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Currently, `std::intrinsics::TypeId` exposes equality testing and hashing, and the `Any` trait allows you to get a `TypeId` for any `'static` data. Previously, `Any` hid these capabilities through a private supertrait, but changed to privacy rules have made that impossible.\n\nWe should consider exposing equality and hashing on `TypeId` only through a private, internal trait used by `Any`. This should mitigate ABI stability hazards.\n", "closed_by": {"login": "aturon", "id": 709807, "node_id": "MDQ6VXNlcjcwOTgwNw==", "avatar_url": "https://avatars.githubusercontent.com/u/709807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aturon", "html_url": "https://github.com/aturon", "followers_url": "https://api.github.com/users/aturon/followers", "following_url": "https://api.github.com/users/aturon/following{/other_user}", "gists_url": "https://api.github.com/users/aturon/gists{/gist_id}", "starred_url": "https://api.github.com/users/aturon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aturon/subscriptions", "organizations_url": "https://api.github.com/users/aturon/orgs", "repos_url": "https://api.github.com/users/aturon/repos", "events_url": "https://api.github.com/users/aturon/events{/privacy}", "received_events_url": "https://api.github.com/users/aturon/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/18104/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/18104/timeline", "performed_via_github_app": null, "state_reason": "completed"}