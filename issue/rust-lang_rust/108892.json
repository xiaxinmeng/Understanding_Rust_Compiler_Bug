{"url": "https://api.github.com/repos/rust-lang/rust/issues/108892", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/108892/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/108892/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/108892/events", "html_url": "https://github.com/rust-lang/rust/issues/108892", "id": 1614753802, "node_id": "I_kwDOAAsO6M5gPzAK", "number": 108892, "title": "Decryption works in build.rs but not when calling function from tests.", "user": {"login": "Nordgaren", "id": 83100346, "node_id": "MDQ6VXNlcjgzMTAwMzQ2", "avatar_url": "https://avatars.githubusercontent.com/u/83100346?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nordgaren", "html_url": "https://github.com/Nordgaren", "followers_url": "https://api.github.com/users/Nordgaren/followers", "following_url": "https://api.github.com/users/Nordgaren/following{/other_user}", "gists_url": "https://api.github.com/users/Nordgaren/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nordgaren/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nordgaren/subscriptions", "organizations_url": "https://api.github.com/users/Nordgaren/orgs", "repos_url": "https://api.github.com/users/Nordgaren/repos", "events_url": "https://api.github.com/users/Nordgaren/events{/privacy}", "received_events_url": "https://api.github.com/users/Nordgaren/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2023-03-08T06:58:55Z", "updated_at": "2023-04-05T17:26:40Z", "closed_at": "2023-04-05T17:26:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "```rust\r\n        let mut aes_strings = vec![];\r\n        let mut aes_hashes = vec![];\r\n        for string_name in AES_STRINGS {\r\n            let encrypted = aes_encrypt_bytes(string_name.as_bytes(), &aes_key, &aes_iv);\r\n            aes_strings.push(AESString {\r\n                string_name,\r\n                encrypted,\r\n                offset: usize::MAX,\r\n            });\r\n\r\n            //also store the hash, if it's needed.\r\n            let hash = if string_name.ends_with(\".dll\") || string_name.ends_with(\".DLL\") {    \r\n                hash_case_insensitive(string_name.as_ptr() as usize, string_name.len())\r\n            } else {\r\n                let mut c_string = string_name.to_string();\r\n                c_string.push(0 as char);\r\n                hash(string_name.as_ptr() as usize)\r\n            };\r\n\r\n            let encrypted = aes_encrypt_bytes(&hash.to_ne_bytes(), &aes_key, &aes_iv);\r\n            //if I add these checks to each aes encrypted hash, it decrypts correctly\r\n            if string_name == \"NtFlushInstructionCache\" {\r\n            }\r\n            if string_name == \"GetProcAddress\" {\r\n            }\r\n            if string_name == \"VirtualAlloc\" {\r\n            }\r\n\r\n            aes_hashes.push(AESHash {\r\n                string_name,\r\n                encrypted,\r\n                offset: usize::MAX,\r\n            })\r\n        }\r\n```\r\n\r\nThe above code is part of my `build.rs` script that generates a PE resource and embeds it into the main application. Currently working on a red team tool that can search for functions via hash or via string name, but for some reason when I aes 256 encrypt the hashes, they don't come out correctly on the other end, inside the actual program.\r\n\r\nI have compared the key iv and encrypted bytes to the ones a runtime,and they are the correct bytes. I even had cyberchef decrypt them with the key and iv being output from `build.rs` and the encrypted data from the main program, and it gives me the correct value, as well.\r\n\r\nAfter toying around a bit, I found these things out:\r\n\r\n-  If I decrypt them in the build script, they decrypt properly.  \r\n-  If I add a check for each string, like I do the above example, it \"fixes\" the issue.   \r\n-  If I exchange un-commented line below for the ones in comments, it breaks the \"fix\" when checking each string (and I need to do the u16 encoding).    \r\n\r\n```rust\r\n               let hash = if string_name.ends_with(\".dll\") || string_name.ends_with(\".DLL\") {\r\n               //let wString = string_name.encode_utf16().collect::<Vec<u16>>();\r\n               //hash_case_insensitive(wString.as_ptr() as usize, string_name.len() * 2)\r\n           \r\n                hash_case_insensitive(string_name.as_ptr() as usize, string_name.len())\r\n            } else {\r\n                let mut c_string = string_name.to_string();\r\n                c_string.push(0 as char);\r\n                hash(string_name.as_ptr() as usize)\r\n            };\r\n```\r\n\r\nDoes anyone have a clue what is going on, here?", "closed_by": {"login": "Nilstrieb", "id": 48135649, "node_id": "MDQ6VXNlcjQ4MTM1NjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/48135649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nilstrieb", "html_url": "https://github.com/Nilstrieb", "followers_url": "https://api.github.com/users/Nilstrieb/followers", "following_url": "https://api.github.com/users/Nilstrieb/following{/other_user}", "gists_url": "https://api.github.com/users/Nilstrieb/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nilstrieb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nilstrieb/subscriptions", "organizations_url": "https://api.github.com/users/Nilstrieb/orgs", "repos_url": "https://api.github.com/users/Nilstrieb/repos", "events_url": "https://api.github.com/users/Nilstrieb/events{/privacy}", "received_events_url": "https://api.github.com/users/Nilstrieb/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/108892/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/108892/timeline", "performed_via_github_app": null, "state_reason": "not_planned"}