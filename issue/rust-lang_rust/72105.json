{"url": "https://api.github.com/repos/rust-lang/rust/issues/72105", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/72105/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/72105/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/72105/events", "html_url": "https://github.com/rust-lang/rust/issues/72105", "id": 615773308, "node_id": "MDU6SXNzdWU2MTU3NzMzMDg=", "number": 72105, "title": "ICE: expected memory, got Static(DefId(0:6 ...  ice-zst-static-access.rs with --emir mir", "user": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108435, "node_id": "MDU6TGFiZWwxMDg0MzU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-pretty", "name": "A-pretty", "color": "f7e101", "default": false, "description": "Area: Pretty printing."}, {"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 256133398, "node_id": "MDU6TGFiZWwyNTYxMzMzOTg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-mir", "name": "A-mir", "color": "f7e101", "default": false, "description": "Area: Mid-level IR (MIR) - https://blog.rust-lang.org/2016/04/19/MIR.html"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2020-05-11T10:26:44Z", "updated_at": "2020-05-27T12:21:46Z", "closed_at": "2020-05-26T01:43:39Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\nCommand: `rustc src/test/ui/consts/ice-zst-static-access.rs   --emit mir`\r\n\r\n### Code\r\nThis code is from `src/test/ui/consts/ice-zst-static-access.rs`\r\n```Rust\r\n// check-pass\r\n\r\n// This is a regression test for ICEs from\r\n// https://github.com/rust-lang/rust/issues/71612\r\n// and\r\n// https://github.com/rust-lang/rust/issues/71709\r\n\r\n#[derive(Copy, Clone)]\r\npub struct Glfw;\r\n\r\nstatic mut GLFW: Option<Glfw> = None;\r\npub fn new() -> Glfw {\r\n    unsafe {\r\n        if let Some(glfw) = GLFW {\r\n            return glfw;\r\n        } else {\r\n            todo!()\r\n        }\r\n    };\r\n}\r\n\r\nextern \"C\" {\r\n    static _dispatch_queue_attr_concurrent: [u8; 0];\r\n}\r\n\r\nstatic DISPATCH_QUEUE_CONCURRENT: &'static [u8; 0] =\r\n    unsafe { &_dispatch_queue_attr_concurrent };\r\n\r\nfn main() {\r\n    *DISPATCH_QUEUE_CONCURRENT;\r\n    new();\r\n}\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\nThe compiler is at revision aeb473803d1ead96fab51224ba3e366f44883423\r\n```\r\nrustc 1.45.0-dev\r\nbinary: rustc\r\ncommit-hash: unknown\r\ncommit-date: unknown\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.45.0-dev\r\nLLVM version: 9.0\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nwarning: unused unary operation that must be used\r\n  --> ./ui/consts/ice-zst-static-access.rs:30:5\r\n   |\r\n30 |     *DISPATCH_QUEUE_CONCURRENT;\r\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n   |\r\n   = note: `#[warn(unused_must_use)]` on by default\r\n\r\nerror: internal compiler error: src/librustc_middle/mir/interpret/mod.rs:389: expected memory, got Static(DefId(0:6 ~ ice_zst_static_access[317d]::[0]::_dispatch_queue_attr_concurrent[0]))\r\n\r\nthread 'rustc' panicked at 'Box<Any>', src/librustc_errors/lib.rs:907:9\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.45.0-dev running on x86_64-unknown-linux-gnu\r\n\r\nerror: aborting due to previous error; 1 warning emitted\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nwarning: unused unary operation that must be used\r\n  --> ./ui/consts/ice-zst-static-access.rs:30:5\r\n   |\r\n30 |     *DISPATCH_QUEUE_CONCURRENT;\r\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n   |\r\n   = note: `#[warn(unused_must_use)]` on by default\r\n\r\nerror: internal compiler error: src/librustc_middle/mir/interpret/mod.rs:389: expected memory, got Static(DefId(0:6 ~ ice_zst_static_access[317d]::[0]::_dispatch_queue_attr_concurrent[0]))\r\n\r\nthread 'rustc' panicked at 'Box<Any>', src/librustc_errors/lib.rs:907:9\r\nstack backtrace:\r\n   0:     0x7fee57224089 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hd08e85f94cff0dfc\r\n   1:     0x7fee5726eadc - core::fmt::write::h65255e7874586eb2\r\n   2:     0x7fee572115a0 - std::io::Write::write_fmt::h3426e27a15389754\r\n   3:     0x7fee571feb25 - std::panicking::default_hook::{{closure}}::hf30497d1f1ca597f\r\n   4:     0x7fee571fe80f - std::panicking::default_hook::h9e9a0711680f7c71\r\n   5:     0x7fee589fcd83 - rustc_driver::report_ice::h5ae862a314f73c0a\r\n   6:     0x7fee571ff21d - std::panicking::rust_panic_with_hook::hf9e06a37c137122b\r\n   7:     0x7fee5ca83563 - std::panicking::begin_panic::h33636113330b48aa\r\n   8:     0x7fee5cabda80 - rustc_errors::HandlerInner::bug::h52d7e1cb0240ea9a\r\n   9:     0x7fee5cabc310 - rustc_errors::Handler::bug::hb9179f645d9eebfc\r\n  10:     0x7fee5c5c99bd - rustc_middle::util::bug::opt_span_bug_fmt::{{closure}}::ha2320eff725974f0\r\n  11:     0x7fee5c5ba015 - rustc_middle::ty::context::tls::with_opt::{{closure}}::ha5fdac267ed6d665\r\n  12:     0x7fee5c5b9f7e - rustc_middle::ty::context::tls::with_opt::h5a46bd0f8944e3da\r\n  13:     0x7fee5c5c98c5 - rustc_middle::util::bug::opt_span_bug_fmt::hca9e39ad66e1e817\r\n  14:     0x7fee5c5c9830 - rustc_middle::util::bug::bug_fmt::h12c26b5ba6d149ef\r\n  15:     0x7fee5c2fb158 - rustc_middle::ty::print::pretty::PrettyPrinter::pretty_print_const::h817e42958e0f08aa\r\n  16:     0x7fee5c3eff8c - rustc_middle::mir::pretty_print_const::h3e9268740a5abca3\r\n  17:     0x7fee5726eadc - core::fmt::write::h65255e7874586eb2\r\n  18:     0x7fee5726ff72 - <core::fmt::Formatter as core::fmt::Write>::write_fmt::h4391506298bd83e2\r\n  19:     0x7fee5c717774 - <&T as core::fmt::Debug>::fmt::h57a5131d265df8f0\r\n  20:     0x7fee5726eadc - core::fmt::write::h65255e7874586eb2\r\n  21:     0x7fee5726ff72 - <core::fmt::Formatter as core::fmt::Write>::write_fmt::h4391506298bd83e2\r\n  22:     0x7fee5c3ed5c8 - <rustc_middle::mir::Operand as core::fmt::Debug>::fmt::hb676f8b47d6c04be\r\n  23:     0x7fee5726eadc - core::fmt::write::h65255e7874586eb2\r\n  24:     0x7fee5726ff72 - <core::fmt::Formatter as core::fmt::Write>::write_fmt::h4391506298bd83e2\r\n  25:     0x7fee5c3edc2b - <rustc_middle::mir::Rvalue as core::fmt::Debug>::fmt::h08da1cab9d3f68fd\r\n  26:     0x7fee5726eadc - core::fmt::write::h65255e7874586eb2\r\n  27:     0x7fee5726ff72 - <core::fmt::Formatter as core::fmt::Write>::write_fmt::h4391506298bd83e2\r\n  28:     0x7fee5c3ecf37 - <rustc_middle::mir::Statement as core::fmt::Debug>::fmt::h36848a833a8ff140\r\n  29:     0x7fee5726ea4c - core::fmt::write::h65255e7874586eb2\r\n  30:     0x7fee5724d903 - alloc::fmt::format::h133900b0fc9df957\r\n  31:     0x7fee5b2d700a - rustc_mir::util::pretty::write_mir_pretty::hb3aac4600eda79f5\r\n  32:     0x7fee5b5317d1 - rustc_mir::transform::dump_mir::emit_mir::h1bd5e01ce1a125e0\r\n  33:     0x7fee58dadff3 - rustc_interface::passes::start_codegen::h57d97e26628aab71\r\n  34:     0x7fee58c976f0 - rustc_middle::ty::context::tls::enter_global::h5b0209aac3b02988\r\n  35:     0x7fee58cb1ac6 - rustc_interface::queries::Queries::ongoing_codegen::h6cad2d99c2dcd590\r\n  36:     0x7fee589ca1b1 - rustc_interface::interface::run_compiler_in_existing_thread_pool::h9998dbf493c360fb\r\n  37:     0x7fee58a0a08e - scoped_tls::ScopedKey<T>::set::h429ea38eed219381\r\n  38:     0x7fee58a03494 - rustc_ast::attr::with_globals::h520bb7fad596003b\r\n  39:     0x7fee58a1214f - std::sys_common::backtrace::__rust_begin_short_backtrace::h66a2db9ac00d8f49\r\n  40:     0x7fee58b58a5e - core::ops::function::FnOnce::call_once{{vtable.shim}}::hed3e3cb32357dea8\r\n  41:     0x7fee571ffb38 - std::sys::unix::thread::Thread::new::thread_start::h294f0533d573419f\r\n  42:     0x7fee56f2d46f - start_thread\r\n  43:     0x7fee5704a3d3 - clone\r\n  44:                0x0 - <unknown>\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.45.0-dev running on x86_64-unknown-linux-gnu\r\n\r\nquery stack during panic:\r\nend of query stack\r\nerror: aborting due to previous error; 1 warning emitted\r\n\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/72105/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/72105/timeline", "performed_via_github_app": null, "state_reason": "completed"}