{"url": "https://api.github.com/repos/rust-lang/rust/issues/99597", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/99597/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/99597/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/99597/events", "html_url": "https://github.com/rust-lang/rust/issues/99597", "id": 1314859827, "node_id": "I_kwDOAAsO6M5OXysz", "number": 99597, "title": "Incorrect compiler hint on missing stricter trait bound", "user": {"login": "SadiinsoSnowfall", "id": 32017313, "node_id": "MDQ6VXNlcjMyMDE3MzEz", "avatar_url": "https://avatars.githubusercontent.com/u/32017313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SadiinsoSnowfall", "html_url": "https://github.com/SadiinsoSnowfall", "followers_url": "https://api.github.com/users/SadiinsoSnowfall/followers", "following_url": "https://api.github.com/users/SadiinsoSnowfall/following{/other_user}", "gists_url": "https://api.github.com/users/SadiinsoSnowfall/gists{/gist_id}", "starred_url": "https://api.github.com/users/SadiinsoSnowfall/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SadiinsoSnowfall/subscriptions", "organizations_url": "https://api.github.com/users/SadiinsoSnowfall/orgs", "repos_url": "https://api.github.com/users/SadiinsoSnowfall/repos", "events_url": "https://api.github.com/users/SadiinsoSnowfall/events{/privacy}", "received_events_url": "https://api.github.com/users/SadiinsoSnowfall/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1596299768, "node_id": "MDU6TGFiZWwxNTk2Mjk5NzY4", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-invalid-suggestion", "name": "D-invalid-suggestion", "color": "c9f7a3", "default": false, "description": "A structured suggestion resulting in incorrect code"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-07-22T10:58:32Z", "updated_at": "2023-05-16T21:39:51Z", "closed_at": "2023-05-16T21:39:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Let's consider the following snippet:\r\n```rust\r\ntrait T1 { }\r\n\r\ntrait T2 {\r\n    fn test(&self) { }\r\n}\r\n\r\nfn go(s: &impl T1) {\r\n    s.test();\r\n}\r\n```\r\nThe compiler will throw the following error + hint:\r\n```\r\nerror[[E0599]](https://doc.rust-lang.org/stable/error-index.html#E0599): no method named `test` found for reference `&impl T1` in the current scope\r\n --> src/lib.rs:8:7\r\n  |\r\n8 |     s.test();\r\n  |       ^^^^ method not found in `&impl T1`\r\n  |\r\n  = help: items from traits can only be used if the type parameter is bounded by the trait\r\nhelp: the following trait defines an item `test`, perhaps you need to restrict type parameter `impl T1` with it:\r\n  |\r\n7 | fn go(s: &impl T1 + T2) {\r\n  |                   ++++\r\n\r\nFor more information about this error, try `rustc --explain E0599`.\r\n```\r\n\r\nBut the hint is not correct: changing the `go` function as suggested by the compiler\r\n```rust\r\nfn go(s: &impl T1 + T2) {\r\n    s.test();\r\n}\r\n```\r\nWill result in a new error:\r\n```\r\nerror: ambiguous `+` in a type\r\n --> src/lib.rs:7:11\r\n  |\r\n7 | fn go(s: &impl T1 + T2) {\r\n  |           ^^^^^^^^^^^^ help: use parentheses to disambiguate: `(impl T1 + T2)`\r\n```\r\n\r\nThe compiler hint should be something like this:\r\n```\r\nhelp: the following trait defines an item `test`, perhaps you need to restrict type parameter `impl T1` with it:\r\n  |\r\n7 | fn go(s: &(impl T1 + T2)) {\r\n  |           +        +++++\r\n```\r\n\r\nThe only case where just adding the restriction works out of the box is when taking an owned value as a parameter:\r\n```rust\r\nfn go(s: impl T1 + T2) {\r\n    s.test();\r\n}\r\n```", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/99597/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/99597/timeline", "performed_via_github_app": null, "state_reason": "completed"}