{"url": "https://api.github.com/repos/rust-lang/rust/issues/74939", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/74939/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/74939/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/74939/events", "html_url": "https://github.com/rust-lang/rust/issues/74939", "id": 668546590, "node_id": "MDU6SXNzdWU2Njg1NDY1OTA=", "number": 74939, "title": "Tracking issue for const `<*const T>::is_null`", "user": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 268744493, "node_id": "MDU6TGFiZWwyNjg3NDQ0OTM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-fn", "name": "A-const-fn", "color": "f7e101", "default": false, "description": "Area: const fn foo(..) {..}. Pure functions which can be applied at compile time."}, {"id": 650846969, "node_id": "MDU6TGFiZWw2NTA4NDY5Njk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-tracking-issue", "name": "C-tracking-issue", "color": "f5f1fd", "default": false, "description": "Category: A tracking issue for an RFC or an unstable feature."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-07-30T09:36:27Z", "updated_at": "2023-03-22T12:18:08Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This is tracking `#[feature(const_ptr_is_null)]`.\r\n\r\nComparing pointers in const eval is [dangerous business](https://github.com/rust-lang/rust/issues/53020).\r\n\r\nBut checking whether a pointer is the null pointer is actually completely fine, as Rust does not support items being placed at the null address. Any otherwise created null pointers are supposed to return `true` for `is_null` anyway, so that's ok. Thus, we implement `is_null` as `ptr.guaranteed_eq(ptr::null())`, which returns true if it's guaranteed that `ptr` is null, and there are no cases where it will return false where it *may be* `null`, but we don't know.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/74939/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/74939/timeline", "performed_via_github_app": null, "state_reason": null}