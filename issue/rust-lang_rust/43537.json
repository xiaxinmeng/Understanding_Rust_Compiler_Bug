{"url": "https://api.github.com/repos/rust-lang/rust/issues/43537", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/43537/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/43537/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/43537/events", "html_url": "https://github.com/rust-lang/rust/issues/43537", "id": 246501540, "node_id": "MDU6SXNzdWUyNDY1MDE1NDA=", "number": 43537, "title": "enum discriminant should be picked to make enum `NonZero`", "user": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-29T05:44:52Z", "updated_at": "2017-07-29T19:37:00Z", "closed_at": "2017-07-29T19:37:00Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I would expect the following program to demonstrate that `Test` is `NonZero`:\r\n```rust\r\n#![allow(dead_code)]\r\nuse std::mem;\r\n\r\nenum Test { A(i32), B(i32) }\r\n\r\nfn main() {\r\n    println!(\"{} {}\", mem::size_of::<Test>(), mem::size_of::<Option<Test>>());\r\n}\r\n```\r\nThe reasoning is that `Test` itself can never use the `NonZero` discriminant optimization itself, so it should use discriminants 1 and 2 to guarantee that it is itself never all-zero. This should be backwards-compatible as AFAIK safe code cannot observe, and unsafe code is not allowed to rely on, the concrete values of the discriminants.\r\n\r\n(Not sure if an issue is enough for this or if it needs an RFC, so I started with the simpler-to-do one. ;)\r\n", "closed_by": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/43537/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/43537/timeline", "performed_via_github_app": null, "state_reason": "completed"}