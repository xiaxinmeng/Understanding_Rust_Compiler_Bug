{"url": "https://api.github.com/repos/rust-lang/rust/issues/77218", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/77218/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/77218/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/77218/events", "html_url": "https://github.com/rust-lang/rust/issues/77218", "id": 709453238, "node_id": "MDU6SXNzdWU3MDk0NTMyMzg=", "number": 77218, "title": "ICE on `if let Some() = ...` expression in loop with variable shadowing and missing let keyword", "user": {"login": "zdenek-crha", "id": 35028759, "node_id": "MDQ6VXNlcjM1MDI4NzU5", "avatar_url": "https://avatars.githubusercontent.com/u/35028759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdenek-crha", "html_url": "https://github.com/zdenek-crha", "followers_url": "https://api.github.com/users/zdenek-crha/followers", "following_url": "https://api.github.com/users/zdenek-crha/following{/other_user}", "gists_url": "https://api.github.com/users/zdenek-crha/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdenek-crha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdenek-crha/subscriptions", "organizations_url": "https://api.github.com/users/zdenek-crha/orgs", "repos_url": "https://api.github.com/users/zdenek-crha/repos", "events_url": "https://api.github.com/users/zdenek-crha/events{/privacy}", "received_events_url": "https://api.github.com/users/zdenek-crha/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37544, "node_id": "MDU6TGFiZWwzNzU0NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-typesystem", "name": "A-typesystem", "color": "f7e101", "default": false, "description": "Area: The type system"}, {"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 203429200, "node_id": "MDU6TGFiZWwyMDM0MjkyMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-high", "name": "P-high", "color": "eb6420", "default": false, "description": "High priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 262252628, "node_id": "MDU6TGFiZWwyNjIyNTI2Mjg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-beta", "name": "regression-from-stable-to-beta", "color": "e4008a", "default": false, "description": "Performance or correctness regression from stable to beta."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}], "state": "closed", "locked": false, "assignee": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 10, "created_at": "2020-09-26T07:58:03Z", "updated_at": "2020-10-26T04:34:45Z", "closed_at": "2020-10-26T04:34:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Code\r\n\r\n```Rust\r\nuse std::collections::BTreeMap;\r\n\r\n// Type aliases to replace complex data types used in the original code.\r\npub type Data = usize;\r\npub type Key = String;\r\npub type DataRef<'c> = &'c Data;\r\n\r\npub struct Storage(BTreeMap<Key, Data>);\r\n\r\nimpl Storage {\r\n    pub fn list<'a>(&'a self, key: &Key) -> Vec<&Data> {\r\n        unimplemented!()\r\n    }\r\n}\r\n\r\npub struct Cache<'c> {\r\n    storage: Storage,\r\n    cached_data_refs: BTreeMap<Key, DataRef<'c>>,\r\n}\r\n\r\nimpl<'c> Cache<'c> {\r\n\r\n    pub fn data_ref_list<'a>(&'a mut self, key: &Key) {\r\n        for reference in self.storage.list(key) {\r\n            self.cached_data_refs.insert(key.clone(), reference);\r\n\r\n            // Following `if` statement is the reason for compiler crash. To trigger the crash it\r\n            // is required to:\r\n            //\r\n            // * have `let` keyword missing from `if let Some(...)` expression\r\n            // * have binding name in the `Some(...)` portion of the `if let Some()` shadow the\r\n            //   name from the outer loop\r\n            //\r\n            if /*let*/ Some(reference) = self.cached_data_refs.get(key) {\r\n                unimplemented!()\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfn main() {}\r\n```\r\n\r\n### Meta\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.48.0-nightly (043f6d747 2020-09-25)\r\nbinary: rustc\r\ncommit-hash: 043f6d747c15068f0053a0542e9b0f17ae7f4de4\r\ncommit-date: 2020-09-25\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.48.0-nightly\r\nLLVM version: 11.0\r\n```\r\n\r\n### Error output\r\n\r\n```\r\n$ rustc bugtest.rs\r\nerror: internal compiler error: compiler/rustc_typeck/src/check/fn_ctxt.rs:459:25: while adjusting Expr { hir_id: HirI\r\nd { owner: DefId(0:20 ~ bugtest[317d]::{{impl}}[1]::data_ref_list[0]), local_id: 70 }, kind: Path(Resolved(None, Path\r\n{ span: bugtest.rs:34:42: 34:46 (#0), res: Local(HirId { owner: DefId(0:20 ~ bugtest[317d]::{{impl}}[1]::data_ref_list\r\n[0]), local_id: 1 }), segments: [PathSegment { ident: self#0, hir_id: Some(HirId { owner: DefId(0:20 ~ bugtest[317d]::\r\n{{impl}}[1]::data_ref_list[0]), local_id: 69 }), res: Some(Local(HirId { owner: DefId(0:20 ~ bugtest[317d]::{{impl}}[1\r\n]::data_ref_list[0]), local_id: 1 })), args: None, infer_args: true }] })), attrs: ThinVec(None), span: bugtest.rs:34:\r\n42: 34:46 (#0) }, can't compose [Deref(None) -> Cache<'c>] and [Deref(None) -> Cache<'c>]\r\n\r\nthread 'rustc' panicked at 'Box<Any>', compiler/rustc_errors/src/lib.rs:945:9\r\n\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compil\r\ner&template=ice.md\r\nnote: rustc 1.48.0-nightly (043f6d747 2020-09-25) running on x86_64-unknown-linux-gnu\r\n\r\nerror: aborting due to previous error\r\n```\r\n\r\n\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nstack backtrace:\r\n   0: std::panicking::begin_panic\r\n   1: rustc_errors::HandlerInner::bug\r\n   2: rustc_errors::Handler::bug\r\n   3: rustc_middle::util::bug::opt_span_bug_fmt::{{closure}}\r\n   4: rustc_middle::ty::context::tls::with_opt::{{closure}}\r\n   5: rustc_middle::ty::context::tls::with_opt\r\n   6: rustc_middle::util::bug::opt_span_bug_fmt\r\n   7: rustc_middle::util::bug::bug_fmt\r\n   8: rustc_typeck::check::fn_ctxt::FnCtxt::apply_adjustments\r\n   9: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_field\r\n  10: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  11: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n  12: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  13: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n  14: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_coercable_to_type\r\n  15: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  16: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n  17: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  18: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n  19: rustc_typeck::check::_match::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_match\r\n  20: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  21: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n  22: rustc_typeck::check::fn_ctxt::FnCtxt::check_block_with_expected\r\n  23: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  24: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n  25: rustc_typeck::check::fn_ctxt::FnCtxt::check_stmt\r\n  26: rustc_typeck::check::fn_ctxt::FnCtxt::check_block_with_expected\r\n  27: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  28: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n  29: rustc_typeck::check::_match::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_match\r\n  30: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  31: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n  32: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  33: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n  34: rustc_typeck::check::fn_ctxt::FnCtxt::check_block_with_expected\r\n  35: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  36: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n  37: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_return_expr\r\n  38: rustc_typeck::check::check::check_fn\r\n  39: rustc_infer::infer::InferCtxtBuilder::enter\r\n  40: rustc_typeck::check::typeck\r\n  41: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCt\r\nxt> for rustc_middle::ty::query::queries::typeck>::compute\r\n  42: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  43: rustc_data_structures::stack::ensure_sufficient_stack\r\n  44: rustc_query_system::query::plumbing::get_query_impl\r\n  45: rustc_query_system::query::plumbing::ensure_query_impl\r\n  46: rustc_typeck::check::typeck_item_bodies\r\n  47: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCt\r\nxt> for rustc_middle::ty::query::queries::typeck_item_bodies>::compute\r\n  48: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  49: rustc_data_structures::stack::ensure_sufficient_stack\r\n  50: rustc_query_system::query::plumbing::get_query_impl\r\n  51: rustc_typeck::check_crate\r\n  52: rustc_interface::passes::analysis\r\n  53: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCt\r\nxt> for rustc_middle::ty::query::queries::analysis>::compute\r\n  54: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  55: rustc_data_structures::stack::ensure_sufficient_stack\r\n  56: rustc_query_system::query::plumbing::get_query_impl\r\n  57: rustc_interface::passes::QueryContext::enter\r\n  58: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n  59: rustc_span::with_source_map\r\n  60: rustc_interface::interface::create_compiler_and_run\r\n  61: scoped_tls::ScopedKey<T>::set\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/77218/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/77218/timeline", "performed_via_github_app": null, "state_reason": "completed"}