{"url": "https://api.github.com/repos/rust-lang/rust/issues/65876", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/65876/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/65876/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/65876/events", "html_url": "https://github.com/rust-lang/rust/issues/65876", "id": 513005706, "node_id": "MDU6SXNzdWU1MTMwMDU3MDY=", "number": 65876, "title": "Missed optimization: regression 1.29 -> 1.30, makes unnecessary load from memory", "user": {"login": "safinaskar", "id": 859494, "node_id": "MDQ6VXNlcjg1OTQ5NA==", "avatar_url": "https://avatars.githubusercontent.com/u/859494?v=4", "gravatar_id": "", "url": "https://api.github.com/users/safinaskar", "html_url": "https://github.com/safinaskar", "followers_url": "https://api.github.com/users/safinaskar/followers", "following_url": "https://api.github.com/users/safinaskar/following{/other_user}", "gists_url": "https://api.github.com/users/safinaskar/gists{/gist_id}", "starred_url": "https://api.github.com/users/safinaskar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/safinaskar/subscriptions", "organizations_url": "https://api.github.com/users/safinaskar/orgs", "repos_url": "https://api.github.com/users/safinaskar/repos", "events_url": "https://api.github.com/users/safinaskar/events{/privacy}", "received_events_url": "https://api.github.com/users/safinaskar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-27T18:53:36Z", "updated_at": "2019-11-17T16:22:50Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Consider this code: https://godbolt.org/z/QpiBK3 .\r\nCode:\r\n```rust\r\npub fn f(a: &mut i32, b: &mut i32) -> (i32, i32, i32) {\r\n    let c = *a;\r\n    let d = *b;\r\n    *a = 0;\r\n    (c, d, *b)\r\n}\r\n```\r\nAsm (1.30):\r\n```asm\r\nexample::f:\r\n        movl    (%rsi), %eax\r\n        movl    (%rdx), %ecx\r\n        movl    $0, (%rsi)\r\n        movl    (%rdx), %edx\r\n        movl    %eax, (%rdi)\r\n        movl    %ecx, 4(%rdi)\r\n        movl    %edx, 8(%rdi)\r\n        movq    %rdi, %rax\r\n        retq\r\n```\r\n\r\nWe read from memory at line `let d = *b` (from `%rdx`) and then we read from memory again at line `(c, d, *b)` (again from `%rdx`).\r\n\r\nBut in Rust (unlike C and C++) we know that two mutable references cannot point to same location. So, we missed optimization. This is regression", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/65876/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/65876/timeline", "performed_via_github_app": null, "state_reason": null}