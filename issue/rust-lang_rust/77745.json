{"url": "https://api.github.com/repos/rust-lang/rust/issues/77745", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/77745/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/77745/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/77745/events", "html_url": "https://github.com/rust-lang/rust/issues/77745", "id": 718034213, "node_id": "MDU6SXNzdWU3MTgwMzQyMTM=", "number": 77745, "title": "Must a `const fn` behave exactly the same at runtime as at compile-time?", "user": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 268744493, "node_id": "MDU6TGFiZWwyNjg3NDQ0OTM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-fn", "name": "A-const-fn", "color": "f7e101", "default": false, "description": "Area: const fn foo(..) {..}. Pure functions which can be applied at compile time."}, {"id": 900795185, "node_id": "MDU6TGFiZWw5MDA3OTUxODU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-eval", "name": "A-const-eval", "color": "f7e101", "default": false, "description": "Area: constant evaluation (mir interpretation)"}, {"id": 2139259423, "node_id": "MDU6TGFiZWwyMTM5MjU5NDIz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-floating-point", "name": "A-floating-point", "color": "f7e101", "default": false, "description": "Area: Floating point numbers and arithmetic"}, {"id": 2352122097, "node_id": "MDU6TGFiZWwyMzUyMTIyMDk3", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-discussion", "name": "C-discussion", "color": "f5f1fd", "default": false, "description": "Category: Discussion or questions that doesn't represent real issues."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 84, "created_at": "2020-10-09T10:26:53Z", "updated_at": "2023-02-07T15:59:35Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "TLDR: should we allow floating point types in const fn?\r\n\r\nBasically the question is whether the following const fn\r\n\r\n```rust\r\nconst fn foo(a: f32, b: f32) -> f32 {\r\n    a / b\r\n}\r\n```\r\n\r\nmust yield the same results for the same arguments if it is invoked at runtime or compile-time:\r\n\r\n```rust\r\nconst RES1: f32 = foo(1.0, 0.0);\r\n\r\nfn main() {\r\n  let res2: f32 = foo(1.0, 0.0);\r\n  assert_eq!(RES1.to_bits(), res2.to_bits());\r\n}\r\n```\r\n\r\nDepending on the platform's NaN behavior, the result will differ between runtime and compile-time execution of `foo(1.0, 0.0)`. Compile-time execution is determined by the Rust port of apfloat (a soft-float implementation); runtime behavior depends on the actual NaN patterns used by the hardware which are not always fully determined by the IEEE specification.\r\n\r\nNote that this is entirely independent of any optimizations; we are discussing here the relationship between code that the user explicitly requests to be executed at compile-time, and regular run-time code. Optimizations apply to all code equally and they treat `fn` and `const fn` the same, so the the questions of how floating-point operations can be optimized is an entirely separate from and off-topic for this issue.\r\n\r\ncc @rust-lang/wg-const-eval ", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/77745/reactions", "total_count": 10, "+1": 10, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/77745/timeline", "performed_via_github_app": null, "state_reason": null}