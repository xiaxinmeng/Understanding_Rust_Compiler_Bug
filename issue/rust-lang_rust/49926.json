{"url": "https://api.github.com/repos/rust-lang/rust/issues/49926", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/49926/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/49926/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/49926/events", "html_url": "https://github.com/rust-lang/rust/issues/49926", "id": 314065036, "node_id": "MDU6SXNzdWUzMTQwNjUwMzY=", "number": 49926, "title": "impossible case reached on lifetime inference for impl Trait in return position", "user": {"login": "nivkner", "id": 22821514, "node_id": "MDQ6VXNlcjIyODIxNTE0", "avatar_url": "https://avatars.githubusercontent.com/u/22821514?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nivkner", "html_url": "https://github.com/nivkner", "followers_url": "https://api.github.com/users/nivkner/followers", "following_url": "https://api.github.com/users/nivkner/following{/other_user}", "gists_url": "https://api.github.com/users/nivkner/gists{/gist_id}", "starred_url": "https://api.github.com/users/nivkner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nivkner/subscriptions", "organizations_url": "https://api.github.com/users/nivkner/orgs", "repos_url": "https://api.github.com/users/nivkner/repos", "events_url": "https://api.github.com/users/nivkner/events{/privacy}", "received_events_url": "https://api.github.com/users/nivkner/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 262252628, "node_id": "MDU6TGFiZWwyNjIyNTI2Mjg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-beta", "name": "regression-from-stable-to-beta", "color": "e4008a", "default": false, "description": "Performance or correctness regression from stable to beta."}, {"id": 631673608, "node_id": "MDU6TGFiZWw2MzE2NzM2MDg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-impl-trait", "name": "A-impl-trait", "color": "f7e101", "default": false, "description": "Area: impl Trait. Universally / existentially quantified anonymous types with static dispatch."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/rust-lang/rust/milestones/48", "html_url": "https://github.com/rust-lang/rust/milestone/48", "labels_url": "https://api.github.com/repos/rust-lang/rust/milestones/48/labels", "id": 3125374, "node_id": "MDk6TWlsZXN0b25lMzEyNTM3NA==", "number": 48, "title": "1.26", "description": "", "creator": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 23, "state": "closed", "created_at": "2018-02-19T01:33:50Z", "updated_at": "2018-05-07T19:32:56Z", "due_on": "2018-05-10T07:00:00Z", "closed_at": "2018-05-07T19:32:56Z"}, "comments": 2, "created_at": "2018-04-13T11:07:00Z", "updated_at": "2018-04-21T07:16:40Z", "closed_at": "2018-04-21T07:16:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## summery\r\nwhen the inferred associated types of the trait contain lifetimes, the compiler produces an internal error\r\n\r\n## details\r\nI tried this code:\r\n\r\n```rust\r\nfn iter() -> impl Iterator {\r\n    (1..2).map(|_| \"hello\")\r\n}\r\n```\r\n\r\nI expected to see this happen:\r\nthe return type is inferred to be `impl Iterator<Item=&'static str>`,\r\nwhich, when written like that, is accepted by the compiler.\r\n\r\nInstead, this happened:\r\n```\r\nerror: internal compiler error: librustc/infer/error_reporting/mod.rs:184: impossible case reached\r\n\r\nthread 'main' panicked at 'Box<Any>', librustc_errors/lib.rs:542:9\r\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\r\nerror: aborting due to previous error\r\n```\r\n\r\n## Meta\r\n\r\n```\r\nrustc 1.25.0 (84203cac6 2018-03-25)  \r\nbinary: rustc                        \r\ncommit-hash: 84203cac67e65ca8640b8392348411098c856985\r\ncommit-date: 2018-03-25                              \r\nhost: x86_64-unknown-linux-gnu                      \r\nrelease: 1.25.0                                       \r\nLLVM version: 6.0\r\n```\r\n\r\n\r\n<details/>\r\n<summary>Backtrace</summary>\r\n\r\n```\r\n   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace\r\n             at libstd/sys/unix/backtrace/tracing/gcc_s.rs:49\r\n   1: std::sys_common::backtrace::print\r\n             at libstd/sys_common/backtrace.rs:71\r\n             at libstd/sys_common/backtrace.rs:59\r\n   2: std::panicking::default_hook::{{closure}}\r\n             at libstd/panicking.rs:206\r\n   3: std::panicking::default_hook\r\n             at libstd/panicking.rs:222\r\n   4: rustc::util::common::panic_hook\r\n   5: std::panicking::rust_panic_with_hook\r\n             at libstd/panicking.rs:401\r\n   6: std::panicking::begin_panic\r\n   7: rustc_errors::Handler::bug\r\n   8: rustc::session::opt_span_bug_fmt::{{closure}}\r\n   9: rustc::ty::context::tls::with_opt::{{closure}}\r\n  10: rustc::ty::context::tls::with_context_opt\r\n  11: rustc::ty::context::tls::with_opt\r\n  12: rustc::session::opt_span_bug_fmt\r\n  13: rustc::session::bug_fmt\r\n  14: rustc::infer::error_reporting::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::msg_span_from_free_region\r\n  15: <rustc::infer::anon_types::ReverseMapper<'cx, 'gcx, 'tcx> as rustc::ty::fold::TypeFolder<'gcx, 'tcx>>::fold_region\r\n  16: rustc::ty::structural_impls::<impl rustc::ty::fold::TypeFoldable<'tcx> for &'tcx rustc::ty::TyS<'tcx>>::super_fold_with\r\n  17: <rustc::infer::anon_types::ReverseMapper<'cx, 'gcx, 'tcx> as rustc::ty::fold::TypeFolder<'gcx, 'tcx>>::fold_ty\r\n  18: <rustc_data_structures::accumulate_vec::AccumulateVec<A> as core::iter::traits::FromIterator<<A as rustc_data_structures::array_vec::Array>::Element>>::from_iter\r\n  19: rustc::ty::fold::TypeFoldable::fold_with\r\n  20: rustc::ty::structural_impls::<impl rustc::ty::fold::TypeFoldable<'tcx> for &'tcx rustc::ty::TyS<'tcx>>::super_fold_with\r\n  21: <rustc::infer::anon_types::ReverseMapper<'cx, 'gcx, 'tcx> as rustc::ty::fold::TypeFolder<'gcx, 'tcx>>::fold_ty\r\n  22: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &'a mut F>::call_once\r\n  23: <rustc_data_structures::accumulate_vec::AccumulateVec<A> as core::iter::traits::FromIterator<<A as rustc_data_structures::array_vec::Array>::Element>>::from_iter\r\n  24: <T as rustc::ty::context::InternIteratorElement<T, R>>::intern_with\r\n  25: <rustc::infer::anon_types::ReverseMapper<'cx, 'gcx, 'tcx> as rustc::ty::fold::TypeFolder<'gcx, 'tcx>>::fold_ty\r\n  26: <rustc_data_structures::accumulate_vec::AccumulateVec<A> as core::iter::traits::FromIterator<<A as rustc_data_structures::array_vec::Array>::Element>>::from_iter\r\n  27: rustc::ty::fold::TypeFoldable::fold_with\r\n  28: rustc::ty::structural_impls::<impl rustc::ty::fold::TypeFoldable<'tcx> for &'tcx rustc::ty::TyS<'tcx>>::super_fold_with\r\n  29: <rustc::infer::anon_types::ReverseMapper<'cx, 'gcx, 'tcx> as rustc::ty::fold::TypeFolder<'gcx, 'tcx>>::fold_ty\r\n  30: rustc::infer::anon_types::<impl rustc::infer::InferCtxt<'a, 'gcx, 'tcx>>::infer_anon_definition_from_instantiation\r\n  31: rustc_typeck::check::writeback::WritebackCx::visit_anon_types\r\n  32: rustc_typeck::check::writeback::<impl rustc_typeck::check::FnCtxt<'a, 'gcx, 'tcx>>::resolve_type_vars_in_body\r\n  33: rustc::ty::context::tls::with_related_context\r\n  34: rustc::infer::InferCtxtBuilder::enter\r\n  35: rustc_typeck::check::typeck_tables_of\r\n  36: rustc::ty::maps::<impl rustc::ty::maps::queries::typeck_tables_of<'tcx>>::compute_result\r\n  37: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  38: rustc::ty::context::tls::with_related_context\r\n  39: rustc::ty::maps::<impl rustc::ty::maps::queries::typeck_tables_of<'tcx>>::force_with_lock\r\n  40: rustc::ty::maps::<impl rustc::ty::maps::queries::typeck_tables_of<'tcx>>::try_get          \r\n  41: rustc::ty::maps::TyCtxtAt::typeck_tables_of                                                 \r\n  42: rustc::ty::maps::<impl rustc::ty::maps::queries::typeck_tables_of<'tcx>>::ensure           \r\n  43: rustc::session::Session::track_errors                                                 \r\n  44: rustc_typeck::check::typeck_item_bodies                                               \r\n  45: rustc::dep_graph::graph::DepGraph::with_task_impl                                        \r\n  46: rustc::ty::context::tls::with_related_context                                    \r\n  47: rustc::ty::maps::<impl rustc::ty::maps::queries::typeck_item_bodies<'tcx>>::force_with_lock\r\n  48: rustc::ty::maps::<impl rustc::ty::maps::queries::typeck_item_bodies<'tcx>>::try_get        \r\n  49: rustc::ty::maps::TyCtxtAt::typeck_item_bodies                                      \r\n  50: rustc::ty::maps::<impl rustc::ty::context::TyCtxt<'a, 'tcx, 'lcx>>::typeck_item_bodies\r\n  51: rustc_typeck::check_crate                                                             \r\n  52: rustc::ty::context::tls::enter_context       \r\n  53: <std::thread::local::LocalKey<T>>::with                                                    \r\n  54: rustc::ty::context::TyCtxt::create_and_enter                                       \r\n  55: rustc_driver::driver::compile_input          \r\n  56: rustc_driver::run_compiler_impl                                                       \r\n  57: syntax::with_globals             \r\n  58: rustc_driver::run                     \r\n  59: rustc_driver::main                           \r\n  60: std::rt::lang_start::{{closure}}              \r\n  61: std::panicking::try::do_call             \r\n             at libstd/rt.rs:59        \r\n             at libstd/panicking.rs:305\r\n  62: __rust_maybe_catch_panic               \r\n             at libpanic_unwind/lib.rs:101                                                                       \r\n  63: std::rt::lang_start_internal                                                                                      \r\n             at libstd/panicking.rs:284                                                                                      \r\n             at libstd/panic.rs:361                                                                                 \r\n             at libstd/rt.rs:58                                                                                                                                        \r\n  64: main                                    \r\n  65: __libc_start_main                                                                                                      \r\n  66: <unknown>                                                                                                     \r\nquery stack during panic:                                                                       \r\n#0 [typeck_tables_of] processing `iter`                                                                                                                                \r\n --> src/main.rs:1:1                                                     \r\n  |                                                                                                                 \r\n1 | fn iter() -> impl Iterator {                                                                                                                                       \r\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^                      \r\n#1 [typeck_item_bodies] type-checking all item bodies                                                                        \r\nend of query stack\r\n```\r\n</details>", "closed_by": {"login": "nivkner", "id": 22821514, "node_id": "MDQ6VXNlcjIyODIxNTE0", "avatar_url": "https://avatars.githubusercontent.com/u/22821514?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nivkner", "html_url": "https://github.com/nivkner", "followers_url": "https://api.github.com/users/nivkner/followers", "following_url": "https://api.github.com/users/nivkner/following{/other_user}", "gists_url": "https://api.github.com/users/nivkner/gists{/gist_id}", "starred_url": "https://api.github.com/users/nivkner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nivkner/subscriptions", "organizations_url": "https://api.github.com/users/nivkner/orgs", "repos_url": "https://api.github.com/users/nivkner/repos", "events_url": "https://api.github.com/users/nivkner/events{/privacy}", "received_events_url": "https://api.github.com/users/nivkner/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/49926/reactions", "total_count": 2, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 1, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/49926/timeline", "performed_via_github_app": null, "state_reason": "completed"}