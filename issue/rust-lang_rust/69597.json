{"url": "https://api.github.com/repos/rust-lang/rust/issues/69597", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/69597/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/69597/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/69597/events", "html_url": "https://github.com/rust-lang/rust/issues/69597", "id": 573422391, "node_id": "MDU6SXNzdWU1NzM0MjIzOTE=", "number": 69597, "title": "Confusing error when returning impl Iterator<Item=&mut T>", "user": {"login": "manpat", "id": 6134057, "node_id": "MDQ6VXNlcjYxMzQwNTc=", "avatar_url": "https://avatars.githubusercontent.com/u/6134057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/manpat", "html_url": "https://github.com/manpat", "followers_url": "https://api.github.com/users/manpat/followers", "following_url": "https://api.github.com/users/manpat/following{/other_user}", "gists_url": "https://api.github.com/users/manpat/gists{/gist_id}", "starred_url": "https://api.github.com/users/manpat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/manpat/subscriptions", "organizations_url": "https://api.github.com/users/manpat/orgs", "repos_url": "https://api.github.com/users/manpat/repos", "events_url": "https://api.github.com/users/manpat/events{/privacy}", "received_events_url": "https://api.github.com/users/manpat/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 867483626, "node_id": "MDU6TGFiZWw4Njc0ODM2MjY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/NLL-fixed-by-NLL", "name": "NLL-fixed-by-NLL", "color": "f799ea", "default": false, "description": "Bugs fixed, but only when NLL is enabled."}, {"id": 1596121013, "node_id": "MDU6TGFiZWwxNTk2MTIxMDEz", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-confusing", "name": "D-confusing", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error that should be reworked"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-02-29T22:24:14Z", "updated_at": "2020-03-26T01:47:43Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "Hiya! I was trying to write some methods for iterating over a hashmap based on some other iterator, and I was met with some confusing errors about failing to infer lifetimes for only the mutable variant.\r\n\r\nI've since learned that lifetimes for mutable references don't work the same way as lifetimes for immutable references, but the error message didn't really help narrowing this down at all.\r\n\r\nI recognize this is probably quite a difficult thing to write an error for, but it could be helpful to have some specific diagnostics for when the cause of an error is related to the extra strictness of mutable reference lifetimes.\r\n\r\nHere's a snippet that roughly demonstrates what I was trying to do:\r\n```rust\r\nuse std::collections::HashMap;\r\n\r\npub struct Map {\r\n\trooms: HashMap<i32, f32>,\r\n}\r\n\r\nfn some_iter() -> impl Iterator<Item=i32> { (0..10) }\r\n\r\nimpl Map {\r\n\tpub fn iter(&self) -> impl Iterator<Item=&f32> {\r\n\t\tsome_iter().filter_map(move |i| self.rooms.get(&i))\r\n\t}\r\n\r\n\tpub fn iter_mut(&mut self) -> impl Iterator<Item=&mut f32> {\r\n\t\tsome_iter().filter_map(move |i| self.rooms.get_mut(&i))\r\n\t}\r\n}\r\n```\r\n\r\n### Meta\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.43.0-nightly (0eb878d2a 2020-02-28)\r\nbinary: rustc\r\ncommit-hash: 0eb878d2aa6e3a1cb315f3f328681b26bb4bffdb\r\ncommit-date: 2020-02-28\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.43.0-nightly\r\nLLVM version: 9.0\r\n```\r\n\r\n<details><summary>The error</summary>\r\n<p>\r\n\r\n```\r\nerror[E0495]: cannot infer an appropriate lifetime for autoref due to conflicting requirements\r\n  --> <source>:15:46\r\n   |\r\n15 |         some_iter().filter_map(move |i| self.rooms.get_mut(&i))\r\n   |                                                    ^^^^^^^\r\n   |\r\nnote: first, the lifetime cannot outlive the lifetime `'_` as defined on the body at 15:26...\r\n  --> <source>:15:26\r\n   |\r\n15 |         some_iter().filter_map(move |i| self.rooms.get_mut(&i))\r\n   |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nnote: ...so that closure can access `self`\r\n  --> <source>:15:35\r\n   |\r\n15 |         some_iter().filter_map(move |i| self.rooms.get_mut(&i))\r\n   |                                         ^^^^^^^^^^\r\nnote: but, the lifetime must be valid for the anonymous lifetime #1 defined on the method body at 14:2...\r\n  --> <source>:14:2\r\n   |\r\n14 |       pub fn iter_mut(&mut self) -> impl Iterator<Item=&mut f32> {\r\n   |  _____^\r\n15 | |         some_iter().filter_map(move |i| self.rooms.get_mut(&i))\r\n16 | |     }\r\n   | |_____^\r\nnote: ...so that the types are compatible\r\n  --> <source>:14:32\r\n   |\r\n14 |     pub fn iter_mut(&mut self) -> impl Iterator<Item=&mut f32> {\r\n   |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n   = note: expected  `std::option::Option<&mut f32>`\r\n              found  `std::option::Option<&mut f32>`\r\n```\r\n\r\n</p>\r\n</details>\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/69597/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/69597/timeline", "performed_via_github_app": null, "state_reason": null}