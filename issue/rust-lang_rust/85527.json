{"url": "https://api.github.com/repos/rust-lang/rust/issues/85527", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/85527/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/85527/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/85527/events", "html_url": "https://github.com/rust-lang/rust/issues/85527", "id": 897447360, "node_id": "MDU6SXNzdWU4OTc0NDczNjA=", "number": 85527, "title": "The compiler suggests the same thing twice", "user": {"login": "YohDeadfall", "id": 10694013, "node_id": "MDQ6VXNlcjEwNjk0MDEz", "avatar_url": "https://avatars.githubusercontent.com/u/10694013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YohDeadfall", "html_url": "https://github.com/YohDeadfall", "followers_url": "https://api.github.com/users/YohDeadfall/followers", "following_url": "https://api.github.com/users/YohDeadfall/following{/other_user}", "gists_url": "https://api.github.com/users/YohDeadfall/gists{/gist_id}", "starred_url": "https://api.github.com/users/YohDeadfall/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YohDeadfall/subscriptions", "organizations_url": "https://api.github.com/users/YohDeadfall/orgs", "repos_url": "https://api.github.com/users/YohDeadfall/repos", "events_url": "https://api.github.com/users/YohDeadfall/events{/privacy}", "received_events_url": "https://api.github.com/users/YohDeadfall/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1183099971, "node_id": "MDU6TGFiZWwxMTgzMDk5OTcx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-suggestion-diagnostics", "name": "A-suggestion-diagnostics", "color": "f7e101", "default": false, "description": "Area: suggestions generated by the compiler applied by cargo fix"}, {"id": 1596122130, "node_id": "MDU6TGFiZWwxNTk2MTIyMTMw", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-papercut", "name": "D-papercut", "color": "c9f7a3", "default": false, "description": "Diagnostic error that needs small tweaks"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2021-05-20T20:54:32Z", "updated_at": "2021-07-21T02:51:04Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I tried this code:\r\n\r\n```rust\r\nuse clippy_utils::diagnostics::span_lint_and_sugg;\r\nuse clippy_utils::source::snippet;\r\nuse clippy_utils::ty::{is_type_diagnostic_item, is_type_lang_item};\r\nuse if_chain::if_chain;\r\nuse rustc_errors::Applicability;\r\nuse rustc_hir::{Expr, ExprKind, LangItem};\r\nuse rustc_lint::{LateContext, LateLintPass};\r\nuse rustc_session::{declare_lint_pass, declare_tool_lint};\r\nuse rustc_span::sym;\r\n\r\ndeclare_clippy_lint! {\r\n    pub SLICE_FULL_RANGE,\r\n    complexity,\r\n    \"useless full ranged slice creation\"\r\n}\r\n\r\ndeclare_lint_pass!(SliceFullRange => [SLICE_FULL_RANGE]);\r\n\r\nimpl<'tcx> LateLintPass<'tcx> for SliceFullRange {\r\n    fn check_expr(&mut self, cx: &LateContext<'tcx>, expr: &'tcx Expr<'_>) {\r\n        if_chain! {\r\n            if let ExprKind::Index(var, range) = expr.kind;\r\n            if is_slice_or_str(cx, var);\r\n            if is_full_range(cx, range);\r\n            then {\r\n                span_lint_and_sugg(\r\n                    cx,\r\n                    SLICE_FULL_RANGE,\r\n                    expr.span,\r\n                    \"getting a full range should be not necessary\",\r\n                    \"try\",\r\n                    snippet(cx, var.span, \"..\"),\r\n                    Applicability::MachineApplicable,\r\n                )\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfn is_full_range(cx: &LateContext<'_>, expr: &Expr<'_>) -> bool {\r\n    let ty = cx.typeck_results().expr_ty(expr);\r\n    let ty = ty.peel_refs();\r\n    is_type_lang_item(cx, ty, LangItem::RangeFull)\r\n}\r\n\r\nfn is_slice_or_str(cx: &LateContext<'_>, expr: &Expr<'_>) -> bool {\r\n    let ty = cx.typeck_results().expr_ty(expr);\r\n    let ty = ty.peel_refs();\r\n    \r\n    is_type_diagnostic_item(cx, ty, sym::slice)\r\n    || is_type_diagnostic_item(cx, ty, sym::str)\r\n    || is_type_diagnostic_item(cx, ty, sym::string_type)\r\n    || is_type_diagnostic_item(cx, ty, sym::vec_type)\r\n}\r\n```\r\n\r\nThe code above contains an error which is correctly reported by the compiler, but it suggests the same fix twice:\r\n\r\n```\r\nerror[E0308]: mismatched types\r\n  --> clippy_lints\\src\\slice_full_range.rs:43:21\r\n   |\r\n43 |                     snippet(cx, var.span, \"..\"),\r\n   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected struct `std::string::String`, found enum `Cow`\r\n   |\r\n   = note: expected struct `std::string::String`\r\n                found enum `Cow<'_, str>`\r\nhelp: try using a conversion method\r\n   |\r\n43 |                     snippet(cx, var.span, \"..\").to_string(),\r\n   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n43 |                     snippet(cx, var.span, \"..\").to_string(),\r\n   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n```\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.54.0-nightly (bacf770f2 2021-05-05)\r\nbinary: rustc\r\ncommit-hash: bacf770f2983a52f31e3537db5f0fe1ef2eaa874\r\ncommit-date: 2021-05-05\r\nhost: x86_64-pc-windows-msvc\r\nrelease: 1.54.0-nightly\r\nLLVM version: 12.0.0\r\n```\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"hi-rustin\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/85527/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/85527/timeline", "performed_via_github_app": null, "state_reason": null}