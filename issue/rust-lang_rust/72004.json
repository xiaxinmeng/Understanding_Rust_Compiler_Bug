{"url": "https://api.github.com/repos/rust-lang/rust/issues/72004", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/72004/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/72004/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/72004/events", "html_url": "https://github.com/rust-lang/rust/issues/72004", "id": 614565080, "node_id": "MDU6SXNzdWU2MTQ1NjUwODA=", "number": 72004, "title": "constant reference has unstable address acrosss compilation units.", "user": {"login": "moxian", "id": 7831163, "node_id": "MDQ6VXNlcjc4MzExNjM=", "avatar_url": "https://avatars.githubusercontent.com/u/7831163?v=4", "gravatar_id": "", "url": "https://api.github.com/users/moxian", "html_url": "https://github.com/moxian", "followers_url": "https://api.github.com/users/moxian/followers", "following_url": "https://api.github.com/users/moxian/following{/other_user}", "gists_url": "https://api.github.com/users/moxian/gists{/gist_id}", "starred_url": "https://api.github.com/users/moxian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/moxian/subscriptions", "organizations_url": "https://api.github.com/users/moxian/orgs", "repos_url": "https://api.github.com/users/moxian/repos", "events_url": "https://api.github.com/users/moxian/events{/privacy}", "received_events_url": "https://api.github.com/users/moxian/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 431251592, "node_id": "MDU6TGFiZWw0MzEyNTE1OTI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-docs", "name": "A-docs", "color": "f7e101", "default": false, "description": "Area: documentation for any part of the project, including the compiler, standard library, and tools"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 900795185, "node_id": "MDU6TGFiZWw5MDA3OTUxODU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-eval", "name": "A-const-eval", "color": "f7e101", "default": false, "description": "Area: constant evaluation (mir interpretation)"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-08T07:33:41Z", "updated_at": "2020-05-08T11:17:43Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Consider the following code, split across two crates:\r\n\r\n```rust\r\n//crate_b; lib.rs:\r\n#![feature(const_fn)]\r\n\r\npub const fn give_ptr<T>(x: &T) -> *const T { x as *const T }\r\npub const MY_CONST: &'static i32 = &1;\r\npub const fn my_const_ptr() -> *const i32 { give_ptr(MY_CONST) }\r\n\r\n\r\n//crate_a; depends on crate_b; main.rs:\r\nfn main() {\r\n    assert_eq!(crate_b::my_const_ptr(), crate_b::give_ptr(crate_b::MY_CONST));\r\n    // thread 'main' panicked at 'assertion failed: `(left == right)`\r\n    //   left: `0x13fe2b3d0`,\r\n    //  right: `0x13fe2b300`', src\\main.rs:3:5\r\n}\r\n```\r\nThis behavior is mildly surprising - effectively inlining a function changes the computation result.\r\n\r\n[The reference](https://doc.rust-lang.org/reference/items/constant-items.html) mentions a similar situation:\r\n> References to the same constant are not necessarily guaranteed to refer to the same memory address\r\n\r\nhowever, as written, this is not applicable to the code above - there's only *one* reference to a constant, not multiple. It is *the same* reference to a constant that gets treated differently based on the compilation unit.\r\n\r\nI understand that this is an incredibly niche situation, and likely no real code hits it.\r\nI also understand that it's likely very hard to \"fix\" the \"bug\" (i.e. make `assert_eq!` above pass).\r\nI think I'd be happy if the reference doc was simply adjusted instead (but have no suggestion on a better wording). I'm mildly concerned that even with better wording, the code might be obfuscated enough to the point where `main()` does not see any reference types while doing the inlining, yet still triggers the bug (but I couldn't craft such obfuscation myself).", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/72004/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/72004/timeline", "performed_via_github_app": null, "state_reason": null}