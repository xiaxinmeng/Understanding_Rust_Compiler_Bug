{"url": "https://api.github.com/repos/rust-lang/rust/issues/60622", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/60622/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/60622/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/60622/events", "html_url": "https://github.com/rust-lang/rust/issues/60622", "id": 441490040, "node_id": "MDU6SXNzdWU0NDE0OTAwNDA=", "number": 60622, "title": "Compiler crash when dealing with Any and Ref", "user": {"login": "whoiscc", "id": 35130945, "node_id": "MDQ6VXNlcjM1MTMwOTQ1", "avatar_url": "https://avatars.githubusercontent.com/u/35130945?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whoiscc", "html_url": "https://github.com/whoiscc", "followers_url": "https://api.github.com/users/whoiscc/followers", "following_url": "https://api.github.com/users/whoiscc/following{/other_user}", "gists_url": "https://api.github.com/users/whoiscc/gists{/gist_id}", "starred_url": "https://api.github.com/users/whoiscc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whoiscc/subscriptions", "organizations_url": "https://api.github.com/users/whoiscc/orgs", "repos_url": "https://api.github.com/users/whoiscc/repos", "events_url": "https://api.github.com/users/whoiscc/events{/privacy}", "received_events_url": "https://api.github.com/users/whoiscc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 203429200, "node_id": "MDU6TGFiZWwyMDM0MjkyMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-high", "name": "P-high", "color": "eb6420", "default": false, "description": "High priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 262252840, "node_id": "MDU6TGFiZWwyNjIyNTI4NDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-stable", "name": "regression-from-stable-to-stable", "color": "e4008a", "default": false, "description": "Performance or correctness regression from one stable version to another."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 9, "created_at": "2019-05-07T23:43:23Z", "updated_at": "2019-05-17T13:01:59Z", "closed_at": "2019-05-17T13:01:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "```Rust\r\nuse std::cell::{RefCell, Ref};\r\nuse std::any::Any;\r\n\r\ntrait Foo: Any + AsAny {\r\n    //\r\n}\r\n\r\ntrait AsAny {\r\n    fn as_any(&self) -> &dyn Any;\r\n}\r\n\r\nimpl<T: Foo> AsAny for T {\r\n    fn as_any(&self) -> &dyn Any {\r\n        self\r\n    }\r\n}\r\n\r\nfn demo<'a, T: 'static>(cell: &'a RefCell<dyn Foo>) -> Option<&T> {\r\n    // this causes compile error correctly\r\n    // let x: Ref<'a, _> = cell.borrow();\r\n    let x = cell.borrow::<'a, _>();\r\n    x.as_any().downcast_ref::<T>()\r\n}\r\n\r\nfn main() {\r\n    //\r\n}\r\n```\r\n\r\nCompiler crashes with\r\n\r\n```\r\nwarning: cannot specify lifetime arguments explicitly if late bound lifetime parameters are present\r\n   --> src/main.rs:58:27\r\n    |\r\n58  |     let x = cell.borrow::<'a, _>();\r\n    |                           ^^\r\n    |\r\n    = note: #[warn(late_bound_lifetime_arguments)] on by default\r\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\r\n    = note: for more information, see issue #42868 <https://github.com/rust-lang/rust/issues/42868>\r\n\r\nerror: internal compiler error: src/librustc_typeck/check/mod.rs:2461: no type for node 121: type _ (id=121) in fcx 0x70000a15f458\r\n\r\nthread 'rustc' panicked at 'Box<Any>', src/librustc_errors/lib.rs:620:9\r\nstack backtrace:\r\n   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace\r\n   1: std::sys_common::backtrace::_print\r\n   2: std::panicking::default_hook::{{closure}}\r\n   3: std::panicking::default_hook\r\n   4: rustc::util::common::panic_hook\r\n   5: std::panicking::rust_panic_with_hook\r\n   6: std::panicking::begin_panic\r\n   7: rustc_errors::Handler::bug\r\n   8: rustc::util::bug::opt_span_bug_fmt::{{closure}}\r\n   9: rustc::ty::context::tls::with_opt::{{closure}}\r\n  10: rustc::ty::context::tls::with_context_opt\r\n  11: rustc::ty::context::tls::with_opt\r\n  12: rustc::util::bug::opt_span_bug_fmt\r\n  13: rustc::util::bug::bug_fmt\r\n  14: rustc_typeck::check::FnCtxt::node_ty\r\n  15: <rustc_typeck::check::writeback::WritebackCx<'cx, 'gcx, 'tcx> as rustc::hir::intravisit::Visitor<'gcx>>::visit_ty\r\n  16: rustc::hir::intravisit::walk_expr\r\n  17: <rustc_typeck::check::writeback::WritebackCx<'cx, 'gcx, 'tcx> as rustc::hir::intravisit::Visitor<'gcx>>::visit_expr\r\n  18: <rustc_typeck::check::writeback::WritebackCx<'cx, 'gcx, 'tcx> as rustc::hir::intravisit::Visitor<'gcx>>::visit_local\r\n  19: rustc::hir::intravisit::walk_expr\r\n  20: <rustc_typeck::check::writeback::WritebackCx<'cx, 'gcx, 'tcx> as rustc::hir::intravisit::Visitor<'gcx>>::visit_expr\r\n  21: rustc_typeck::check::writeback::<impl rustc_typeck::check::FnCtxt<'a, 'gcx, 'tcx>>::resolve_type_vars_in_body\r\n  22: rustc::ty::context::GlobalCtxt::enter_local\r\n  23: rustc_typeck::check::typeck_tables_of\r\n  24: rustc::ty::query::__query_compute::typeck_tables_of\r\n  25: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors<'tcx> for rustc::ty::query::queries::typeck_tables_of<'tcx>>::compute\r\n  26: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  27: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::get_query\r\n  28: rustc::ty::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::par_body_owners\r\n  29: rustc_typeck::check::typeck_item_bodies\r\n  30: rustc::ty::query::__query_compute::typeck_item_bodies\r\n  31: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors<'tcx> for rustc::ty::query::queries::typeck_item_bodies<'tcx>>::compute\r\n  32: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  33: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::get_query\r\n  34: rustc::util::common::time\r\n  35: rustc_typeck::check_crate\r\n  36: <std::thread::local::LocalKey<T>>::with\r\n  37: rustc::ty::context::TyCtxt::create_and_enter\r\n  38: rustc_driver::driver::compile_input\r\n  39: rustc_driver::run_compiler_with_pool\r\n  40: <scoped_tls::ScopedKey<T>>::set\r\n  41: rustc_driver::run_compiler\r\n  42: syntax::with_globals\r\n  43: __rust_maybe_catch_panic\r\n  44: <F as alloc::boxed::FnBox<A>>::call_box\r\n  45: std::sys::unix::thread::Thread::new::thread_start\r\n  46: _pthread_body\r\n  47: _pthread_start\r\nquery stack during panic:\r\n#0 [typeck_tables_of] processing `demo`\r\n#1 [typeck_item_bodies] type-checking all item bodies\r\nend of query stack\r\nerror: aborting due to previous error\r\n\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.34.1 (fc50f328b 2019-04-24) running on x86_64-apple-darwin\r\n\r\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n```\r\n\r\nAlso, I wonder what is the right way (or is there any way) to write a `demo` with expected behavior. Thanks.", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/60622/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/60622/timeline", "performed_via_github_app": null, "state_reason": "completed"}