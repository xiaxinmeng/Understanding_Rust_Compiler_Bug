{"url": "https://api.github.com/repos/rust-lang/rust/issues/95358", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/95358/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/95358/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/95358/events", "html_url": "https://github.com/rust-lang/rust/issues/95358", "id": 1182400003, "node_id": "I_kwDOAAsO6M5Gef4D", "number": 95358, "title": "Type inference problem", "user": {"login": "jongiddy", "id": 3735327, "node_id": "MDQ6VXNlcjM3MzUzMjc=", "avatar_url": "https://avatars.githubusercontent.com/u/3735327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jongiddy", "html_url": "https://github.com/jongiddy", "followers_url": "https://api.github.com/users/jongiddy/followers", "following_url": "https://api.github.com/users/jongiddy/following{/other_user}", "gists_url": "https://api.github.com/users/jongiddy/gists{/gist_id}", "starred_url": "https://api.github.com/users/jongiddy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jongiddy/subscriptions", "organizations_url": "https://api.github.com/users/jongiddy/orgs", "repos_url": "https://api.github.com/users/jongiddy/repos", "events_url": "https://api.github.com/users/jongiddy/events{/privacy}", "received_events_url": "https://api.github.com/users/jongiddy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 604454086, "node_id": "MDU6TGFiZWw2MDQ0NTQwODY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-inference", "name": "A-inference", "color": "f7e101", "default": false, "description": "Area: Type inference"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-03-27T07:08:59Z", "updated_at": "2022-05-13T13:15:32Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I originally posted this at https://users.rust-lang.org/t/type-inference-failure-in-simple-generic-method-call/73423 but didn't get much response, apart from agreement that this is weird.\r\n\r\nThis code wraps the `reqwest::ReqwestBuilder::header<K, V>` method with a function that has the same signature. Both functions have generic parameters `K` and `V` that should be easily and independently inferred from the types passed to each function.\r\n```rust\r\nfn set_sensitive_header<K, V>(\r\n    builder: reqwest::RequestBuilder,\r\n    key: K,\r\n    value: V,\r\n) -> reqwest::RequestBuilder\r\nwhere\r\n    http::header::HeaderName: TryFrom<K>,\r\n    <http::header::HeaderName as TryFrom<K>>::Error: Into<http::Error>,\r\n    http::HeaderValue: TryFrom<V>,\r\n    <http::HeaderValue as TryFrom<V>>::Error: Into<http::Error>,\r\n    V: Copy\r\n{\r\n    match http::HeaderValue::try_from(value) {\r\n        Ok(mut header_value) => {\r\n            header_value.set_sensitive(true);\r\n            builder.header(key, header_value)\r\n            // builder.header::<K, http::HeaderValue>(key, header_value)\r\n        }\r\n        Err(_) => builder.header(key, value),\r\n    }\r\n}\r\n```\r\nThis fails with:\r\n```\r\nerror[E0308]: mismatched types\r\n  --> src/lib.rs:16:33\r\n   |\r\n1  | fn set_sensitive_header<K, V>(\r\n   |                            - this type parameter\r\n...\r\n16 |             builder.header(key, header_value)\r\n   |                                 ^^^^^^^^^^^^ expected type parameter `V`, found struct `HeaderValue`\r\n   |\r\n   = note: expected type parameter `V`\r\n                      found struct `HeaderValue`\r\n```\r\n\r\nAdding the turbofish, as in the commented-out line, fixes the problem.\r\n\r\nThe generic types `K` and `V` on the `header` method should be trivially inferred from the supplied parameters. So this seems like a failure in type inference.\r\n\r\nI thought this might be related to the `where` clauses constraining the concrete `HeaderValue` type, but changes like using `TryFrom<V> + From<HeaderValue>` did not fix it.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/95358/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/95358/timeline", "performed_via_github_app": null, "state_reason": null}