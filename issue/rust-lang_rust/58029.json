{"url": "https://api.github.com/repos/rust-lang/rust/issues/58029", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/58029/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/58029/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/58029/events", "html_url": "https://github.com/rust-lang/rust/issues/58029", "id": 405313862, "node_id": "MDU6SXNzdWU0MDUzMTM4NjI=", "number": 58029, "title": "Unnecessary implicit reborrow cause confusing compiler error", "user": {"login": "oxalica", "id": 14816024, "node_id": "MDQ6VXNlcjE0ODE2MDI0", "avatar_url": "https://avatars.githubusercontent.com/u/14816024?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oxalica", "html_url": "https://github.com/oxalica", "followers_url": "https://api.github.com/users/oxalica/followers", "following_url": "https://api.github.com/users/oxalica/following{/other_user}", "gists_url": "https://api.github.com/users/oxalica/gists{/gist_id}", "starred_url": "https://api.github.com/users/oxalica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oxalica/subscriptions", "organizations_url": "https://api.github.com/users/oxalica/orgs", "repos_url": "https://api.github.com/users/oxalica/repos", "events_url": "https://api.github.com/users/oxalica/events{/privacy}", "received_events_url": "https://api.github.com/users/oxalica/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-01-31T15:59:02Z", "updated_at": "2020-06-11T18:00:00Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When calling a function with mutable reference itself, it will cause unnecessary implicit reborrow, which may produces \"cannot borrow ... because it is also borrowed as mutable\", though there is \"no borrow\" in the error line.\r\n\r\n[Example](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=5276b24d3ddd33dcd50b62f26dac17dd)\r\n\r\nI think there should be no reborrowing in all 3 calls, and the expected error message should be \"borrow of moved value\" here.\r\n\r\n```rust\r\npub fn id<'a, T>(x: T) -> T { x }\r\npub fn id_ref<'a, T: 'a>(x: &'a mut T) -> &'a mut T { x }\r\n\r\nfn main() {\r\n    let p = &mut 0i32;\r\n    let q = id_ref(p); // error[E0502]: cannot borrow `p` as immutable because it is also borrowed as mutable\r\n    // let q = id(&mut *p); // error[E0502]: cannot borrow `p` as immutable because it is also borrowed as mutable\r\n    // let q = id(p); // error[E0382]: borrow of moved value: `p`\r\n    println!(\"{}\", p);\r\n    q; // Keep `q` lives here\r\n}\r\n```\r\n\r\nNoting that the call to `id_ref` causes reborrowing, but the call to `id` doesn't.\r\nI'm not sure whether it is the expected behavior.\r\n\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/58029/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/58029/timeline", "performed_via_github_app": null, "state_reason": null}