{"url": "https://api.github.com/repos/rust-lang/rust/issues/43696", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/43696/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/43696/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/43696/events", "html_url": "https://github.com/rust-lang/rust/issues/43696", "id": 248245616, "node_id": "MDU6SXNzdWUyNDgyNDU2MTY=", "number": 43696, "title": "Dependency info issue for modules loaded from files with `mod modname;`", "user": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 178802147, "node_id": "MDU6TGFiZWwxNzg4MDIxNDc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-needs-decision", "name": "I-needs-decision", "color": "e11d21", "default": false, "description": "Issues in need of decision."}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-06T12:56:36Z", "updated_at": "2017-08-10T14:46:59Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "How to reproduce:\r\n- Create a Cargo project with source tree looking like this\r\n```\r\n.\r\n\u251c\u2500\u2500 lib.rs\r\n\u2514\u2500\u2500 modname.rs\r\n```\r\nand `lib.rs` looking like this\r\n```rust\r\nmod modname;\r\n```\r\n- run `cargo build`\r\n- add a new directory and file so the source tree becomes\r\n```\r\n.\r\n\u251c\u2500\u2500 lib.d\r\n\u251c\u2500\u2500 lib.rs\r\n\u251c\u2500\u2500 modname\r\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 mod.rs\r\n\u2514\u2500\u2500 modname.rs\r\n```\r\n- run `cargo build` again\r\n\r\n---\r\nIn theory, the second `cargo build` should start running the build and report the error\r\n```\r\nerror[E0584]: file for module `modname` found at both modname.rs and modname\\mod.rs\r\n```\r\nbut no build is started because Cargo thinks everything is up-to-date.\r\n\r\nCargo uses depinfo produced by `rustc` to check file freshness and for this example depinfo produced during the first build looks like this\r\n```\r\nlib.d: lib.rs modname.rs\r\n\r\nlib.rs:\r\nmodname.rs:\r\n```\r\n, so Cargo checks `lib.rs` and `modname.rs` for freshness, but it doesn't know anything `modname/mod.rs`.\r\n\r\n---\r\nThis can be fixed by issuing additional depinfo - `modname/mod.rs` for each `modname.rs`, and `modname.rs` for each `modname/mod.rs`.\r\nThe problem is that it will require build systems (including Cargo) spend roughly twice as much time on checking file freshness on rebuilds for all projects, even if none of them does the madness described in the reproduction paragraph.\r\nSo, it may be reasonable to close this as WONTFIX.\r\n\r\n---\r\nThe issue itself may be esoteric, but I think it's interesting as a glimpse into the world of project structures inferred from filesystem, which is currently discussed in various module system reform proposals.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/43696/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/43696/timeline", "performed_via_github_app": null, "state_reason": null}