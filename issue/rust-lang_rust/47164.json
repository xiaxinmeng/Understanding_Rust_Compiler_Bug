{"url": "https://api.github.com/repos/rust-lang/rust/issues/47164", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/47164/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/47164/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/47164/events", "html_url": "https://github.com/rust-lang/rust/issues/47164", "id": 285778810, "node_id": "MDU6SXNzdWUyODU3Nzg4MTA=", "number": 47164, "title": "Command-line arguments are cloned a lot on Unix", "user": {"login": "mbrubeck", "id": 5920, "node_id": "MDQ6VXNlcjU5MjA=", "avatar_url": "https://avatars.githubusercontent.com/u/5920?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbrubeck", "html_url": "https://github.com/mbrubeck", "followers_url": "https://api.github.com/users/mbrubeck/followers", "following_url": "https://api.github.com/users/mbrubeck/following{/other_user}", "gists_url": "https://api.github.com/users/mbrubeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbrubeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbrubeck/subscriptions", "organizations_url": "https://api.github.com/users/mbrubeck/orgs", "repos_url": "https://api.github.com/users/mbrubeck/repos", "events_url": "https://api.github.com/users/mbrubeck/events{/privacy}", "received_events_url": "https://api.github.com/users/mbrubeck/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 123110, "node_id": "MDU6TGFiZWwxMjMxMTA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-linux", "name": "O-linux", "color": "6e6ec0", "default": false, "description": "Operating system: Linux"}, {"id": 123111, "node_id": "MDU6TGFiZWwxMjMxMTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-macos", "name": "O-macos", "color": "6e6ec0", "default": false, "description": "Operating system: macOS"}, {"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-01-03T19:02:48Z", "updated_at": "2018-04-10T14:56:42Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The `std::sys::unix::args` module does a lot of allocation and cloning of command-line parameters:\r\n\r\n1. On startup, `std::sys::unix::args::init` copies all of the command-line arguments into a `Box<Vec<Vec<u8>>>` (except on macOS and iOS).\r\n2. When `std::env::args` or `args_os` is called, it eagerly copies all of the args into a new `Vec<OsString>`.\r\n\r\nOn non-Apple systems, this means there is at least one allocation and clone per argument (plus 2 additional allocations, for the outer `Vec` and `Box`) even if they are never accessed.  These extra allocations take up space on the heap for the duration of the program.\r\n\r\nOn both Apple and non-Apple systems, accessing any args causes at least one *additional* allocation and clone of every arg.  Calling `std::env::args` more than once causes *all* arguments to be cloned again, even if the caller doesn't iterate through all of them.\r\n\r\nOn Windows, for comparison, each arg is cloned lazily only when it is yielded from the iterator, so there are zero allocations or clones for args that are never accessed (update: at least, no clones in Rust code; see comments below).\r\n  ", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/47164/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/47164/timeline", "performed_via_github_app": null, "state_reason": null}