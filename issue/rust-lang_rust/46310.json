{"url": "https://api.github.com/repos/rust-lang/rust/issues/46310", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/46310/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/46310/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/46310/events", "html_url": "https://github.com/rust-lang/rust/issues/46310", "id": 277090603, "node_id": "MDU6SXNzdWUyNzcwOTA2MDM=", "number": 46310, "title": "Trying to use MSA instructions on MIPS segfaults LLVM", "user": {"login": "gnzlbg", "id": 904614, "node_id": "MDQ6VXNlcjkwNDYxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/904614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnzlbg", "html_url": "https://github.com/gnzlbg", "followers_url": "https://api.github.com/users/gnzlbg/followers", "following_url": "https://api.github.com/users/gnzlbg/following{/other_user}", "gists_url": "https://api.github.com/users/gnzlbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnzlbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnzlbg/subscriptions", "organizations_url": "https://api.github.com/users/gnzlbg/orgs", "repos_url": "https://api.github.com/users/gnzlbg/repos", "events_url": "https://api.github.com/users/gnzlbg/events{/privacy}", "received_events_url": "https://api.github.com/users/gnzlbg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 100522, "node_id": "MDU6TGFiZWwxMDA1MjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-crash", "name": "I-crash", "color": "e10c02", "default": false, "description": "Issue: The compiler crashes (SIGSEGV, SIGABRT, etc). Use I-ICE instead when the compiler panics."}, {"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 106552066, "node_id": "MDU6TGFiZWwxMDY1NTIwNjY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-MIPS", "name": "O-MIPS", "color": "6e6ec0", "default": false, "description": "Target: MIPS processors"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-11-27T16:53:04Z", "updated_at": "2018-03-07T17:07:15Z", "closed_at": "2018-03-07T17:07:15Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I am trying to set up the MIPS SIMD intrinsics in `stdsimd` and am running into the following segfault:\r\n\r\n```rust\r\n#![feature(repr_simd, simd_ffi, link_llvm_intrinsics)]\r\n\r\n#[allow(non_camel_case_types)]\r\n#[repr(simd)]\r\npub struct i8x16(\r\n    i8, i8, i8, i8, i8, i8, i8, i8, \r\n    i8, i8, i8, i8, i8, i8, i8, i8\r\n);\r\n\r\n#[allow(improper_ctypes)]\r\nextern \"C\" {\r\n    #[link_name = \"llvm.mips.add.a.b\"]\r\n    fn msa_add_a_b(a: i8x16, b: i8x16) -> i8x16;\r\n}\r\n\r\npub fn foo(a: i8x16) -> i8x16 {  // FAILS\r\n// switch line above with this like and it works:\r\n// pub fn foo() -> i8x16 {\r\n    let b = i8x16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\r\n    unsafe { msa_add_a_b(a, b) }\r\n}\r\n```\r\n\r\nI have tried [this example on clang](https://godbolt.org/g/DFShji) and it appears to work just fine. The only thing clang does is enabling the target feature `msa` ([here they call AddTargetFeature](https://github.com/llvm-mirror/clang/blob/3edd9221b28c4a229ae5e211a367f6988c12e879/lib/Driver/ToolChains/Arch/Mips.cpp#L318), which is defined [here](https://github.com/llvm-mirror/clang/blob/add8b3b827f8af4dfb9e468f3592fd4cb87d7056/lib/Driver/ToolChains/CommonArgs.cpp#L189)).\r\n\r\nThe segfault is: \r\n\r\n```shell\r\n* thread #3, stop reason = EXC_BAD_ACCESS (code=1, address=0x28)\r\n  * frame #0: 0x00000001023954fc librustc_llvm-a2329f2cbc39342e.dylib`getCopyFromParts(llvm::SelectionDAG&, llvm::SDLoc const&, llvm::SDValue const*, unsigned int, llvm::MVT, llvm::EVT, llvm::Value const*, llvm::Optional<llvm::ISD::NodeType>) + 1740\r\n    frame #1: 0x00000001023ce39f librustc_llvm-a2329f2cbc39342e.dylib`llvm::SelectionDAGISel::LowerArguments(llvm::Function const&) + 5935\r\n    frame #2: 0x000000010241ba2b librustc_llvm-a2329f2cbc39342e.dylib`llvm::SelectionDAGISel::SelectAllBasicBlocks(llvm::Function const&) + 3467\r\n    frame #3: 0x000000010241a212 librustc_llvm-a2329f2cbc39342e.dylib`llvm::SelectionDAGISel::runOnMachineFunction(llvm::MachineFunction&) + 1426\r\n    frame #4: 0x0000000101ab93b0 librustc_llvm-a2329f2cbc39342e.dylib`llvm::MipsDAGToDAGISel::runOnMachineFunction(llvm::MachineFunction&) + 32\r\n    frame #5: 0x0000000101ae1e40 librustc_llvm-a2329f2cbc39342e.dylib`llvm::MipsSEDAGToDAGISel::runOnMachineFunction(llvm::MachineFunction&) + 32\r\n    frame #6: 0x00000001025ddbb6 librustc_llvm-a2329f2cbc39342e.dylib`llvm::MachineFunctionPass::runOnFunction(llvm::Function&) + 134\r\n    frame #7: 0x0000000102d43ee2 librustc_llvm-a2329f2cbc39342e.dylib`llvm::FPPassManager::runOnFunction(llvm::Function&) + 514\r\n    frame #8: 0x0000000102d440e3 librustc_llvm-a2329f2cbc39342e.dylib`llvm::FPPassManager::runOnModule(llvm::Module&) + 51\r\n    frame #9: 0x0000000102d44564 librustc_llvm-a2329f2cbc39342e.dylib`llvm::legacy::PassManagerImpl::run(llvm::Module&) + 900\r\n    frame #10: 0x00000001016ca069 librustc_llvm-a2329f2cbc39342e.dylib`LLVMRustWriteOutputFile + 377\r\n    frame #11: 0x0000000100ae65c2 librustc_trans-7aa3e893b33f5b2f.dylib`rustc_trans::back::write::write_output_file::hd049294080e3f948 + 82\r\n    frame #12: 0x0000000100b1265d librustc_trans-7aa3e893b33f5b2f.dylib`rustc_trans::back::write::codegen::_$u7b$$u7b$closure$u7d$$u7d$::h91658a3b1acaa0c8 (.llvm.303723C2) + 1101\r\n    frame #13: 0x0000000100b0e5d1 librustc_trans-7aa3e893b33f5b2f.dylib`rustc::util::common::time::hd7baa9c382938e50 + 81\r\n    frame #14: 0x0000000100ae866c librustc_trans-7aa3e893b33f5b2f.dylib`rustc_trans::back::write::codegen::hc049fe7d136f626c (.llvm.7E0FE580) + 2892\r\n    frame #15: 0x0000000100ade258 librustc_trans-7aa3e893b33f5b2f.dylib`std::sys_common::backtrace::__rust_begin_short_backtrace::hacfaa5a113f25a93 + 6216\r\n    frame #16: 0x0000000100adf83e librustc_trans-7aa3e893b33f5b2f.dylib`std::panicking::try::do_call::hee7d7a49ebd6d159 (.llvm.7E0FE580) + 46\r\n    frame #17: 0x00000001061b7ccf libstd-44e67c1a5c665082.dylib`__rust_maybe_catch_panic + 31\r\n    frame #18: 0x0000000100ae4b24 librustc_trans-7aa3e893b33f5b2f.dylib`_$LT$F$u20$as$u20$alloc..boxed..FnBox$LT$A$GT$$GT$::call_box::hdd902711ad474596 (.llvm.7E0FE580) + 180\r\n    frame #19: 0x00000001061a8dcc libstd-44e67c1a5c665082.dylib`std::sys::imp::thread::Thread::new::thread_start::h6774aae010e52aa5 + 140\r\n    frame #20: 0x00007fff6dacf6c1 libsystem_pthread.dylib`_pthread_body + 340\r\n    frame #21: 0x00007fff6dacf56d libsystem_pthread.dylib`_pthread_start + 377\r\n    frame #22: 0x00007fff6dacec5d libsystem_pthread.dylib`thread_start + 13\r\n```", "closed_by": {"login": "gnzlbg", "id": 904614, "node_id": "MDQ6VXNlcjkwNDYxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/904614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnzlbg", "html_url": "https://github.com/gnzlbg", "followers_url": "https://api.github.com/users/gnzlbg/followers", "following_url": "https://api.github.com/users/gnzlbg/following{/other_user}", "gists_url": "https://api.github.com/users/gnzlbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnzlbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnzlbg/subscriptions", "organizations_url": "https://api.github.com/users/gnzlbg/orgs", "repos_url": "https://api.github.com/users/gnzlbg/repos", "events_url": "https://api.github.com/users/gnzlbg/events{/privacy}", "received_events_url": "https://api.github.com/users/gnzlbg/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/46310/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/46310/timeline", "performed_via_github_app": null, "state_reason": "completed"}