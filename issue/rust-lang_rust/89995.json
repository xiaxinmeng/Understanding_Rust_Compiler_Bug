{"url": "https://api.github.com/repos/rust-lang/rust/issues/89995", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/89995/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/89995/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/89995/events", "html_url": "https://github.com/rust-lang/rust/issues/89995", "id": 1028509772, "node_id": "I_kwDOAAsO6M49TdBM", "number": 89995, "title": "Inference failure sometimes results in things being considered functions.", "user": {"login": "kythyria", "id": 2553724, "node_id": "MDQ6VXNlcjI1NTM3MjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2553724?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kythyria", "html_url": "https://github.com/kythyria", "followers_url": "https://api.github.com/users/kythyria/followers", "following_url": "https://api.github.com/users/kythyria/following{/other_user}", "gists_url": "https://api.github.com/users/kythyria/gists{/gist_id}", "starred_url": "https://api.github.com/users/kythyria/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kythyria/subscriptions", "organizations_url": "https://api.github.com/users/kythyria/orgs", "repos_url": "https://api.github.com/users/kythyria/repos", "events_url": "https://api.github.com/users/kythyria/events{/privacy}", "received_events_url": "https://api.github.com/users/kythyria/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-10-18T01:18:14Z", "updated_at": "2021-10-18T23:53:35Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n\r\nIf you cannot produce a minimal reproduction case (something that would work in\r\nisolation), please provide the steps or even link to a repository that causes\r\nthe problematic output to occur.\r\n-->\r\n\r\nGiven the following code ([playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021&gist=cc55c36196241f8a82df138ec97af544)): \r\n\r\n```rust\r\nuse std::collections::HashSet;\r\nuse std::rc::Rc;\r\n\r\nfn intern(cache: &mut HashSet<Rc<str>>, data: &str) -> Rc<str> {\r\n   match cache.get(data) {\r\n        Some(s) => s.clone(),\r\n        None => {\r\n            let d = Rc::from(data);\r\n            cache.insert(d.clone());\r\n            d\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nThe current output is:\r\n\r\n```\r\nerror[E0282]: type annotations needed\r\n --> src/lib.rs:9:28\r\n  |\r\n9 |             cache.insert(d.clone());\r\n  |                            ^^^^^ cannot infer type\r\n  |\r\n  = note: type must be known at this point\r\n\r\nerror[E0599]: no method named `clone` found for struct `Rc<_>` in the current scope\r\n --> src/lib.rs:9:28\r\n  |\r\n9 |             cache.insert(d.clone());\r\n  |                            ^^^^^ method not found in `Rc<_>`\r\n  |\r\n  = note: `d` is a function, perhaps you wish to call it\r\n```\r\nI'm surprised it can't infer the type of `d` correctly, considering there are multiple indications it must be `Rc<str>` (and R-A does so). Maybe it's confused by `Rc<&str>` being a thing?\r\n\r\nThe final note is straight up perplexing, however: where on earth is it getting the idea that that's a _function_ from? That should probably be squashed.\r\n\r\nEdit: even shorter reproduction ([playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=bc4a8abf289b4dc992afdee82272c0e2)):\r\n```rust\r\nuse std::rc::Rc;\r\nfn intern(data: &str) -> Rc<str> {\r\n    Rc::from(data).clone()\r\n}\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/89995/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/89995/timeline", "performed_via_github_app": null, "state_reason": null}