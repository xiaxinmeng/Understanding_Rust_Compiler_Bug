{"url": "https://api.github.com/repos/rust-lang/rust/issues/73186", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/73186/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/73186/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/73186/events", "html_url": "https://github.com/rust-lang/rust/issues/73186", "id": 635792785, "node_id": "MDU6SXNzdWU2MzU3OTI3ODU=", "number": 73186, "title": "impl `LowerHex` for slices of types that impl `LowerHex`", "user": {"login": "yaahc", "id": 1993852, "node_id": "MDQ6VXNlcjE5OTM4NTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1993852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaahc", "html_url": "https://github.com/yaahc", "followers_url": "https://api.github.com/users/yaahc/followers", "following_url": "https://api.github.com/users/yaahc/following{/other_user}", "gists_url": "https://api.github.com/users/yaahc/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaahc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaahc/subscriptions", "organizations_url": "https://api.github.com/users/yaahc/orgs", "repos_url": "https://api.github.com/users/yaahc/repos", "events_url": "https://api.github.com/users/yaahc/events{/privacy}", "received_events_url": "https://api.github.com/users/yaahc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-09T22:15:11Z", "updated_at": "2020-06-10T15:47:28Z", "closed_at": "2020-06-09T22:16:48Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Right now it isn't possible to print a slice of bytes as hex conveniently. Ideally rust should be able to compile the following code:\r\n\r\n```rust\r\nfn main() {\r\n    let a: &[u8] = &[0x24, 0x00, 0xFF, 0xDE];\r\n    println!(\"{:x}\", a);\r\n}\r\n```\r\n\r\nRight now, work arounds like this are required: https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=01a92fb1c4f3e7497f91e0fe756d43d6\r\n\r\nThere are probably a few other fmt traits that should get similar treatment, and more types than just `&'_ [T]` that could benefit from blanket impls, but at a minimum it would be nice to add the following impl to `std`.\r\n\r\n```rust\r\nimpl<T> std::fmt::LowerHex for &'_ [T]\r\nwhere\r\n    T: std::fmt::LowerHex,\r\n{\r\n    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {\r\n        for elem in self.0 {\r\n            write!(f, \"{:x}\", elem)?;\r\n        }\r\n        \r\n        Ok(())\r\n    }\r\n}\r\n```", "closed_by": {"login": "yaahc", "id": 1993852, "node_id": "MDQ6VXNlcjE5OTM4NTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1993852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaahc", "html_url": "https://github.com/yaahc", "followers_url": "https://api.github.com/users/yaahc/followers", "following_url": "https://api.github.com/users/yaahc/following{/other_user}", "gists_url": "https://api.github.com/users/yaahc/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaahc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaahc/subscriptions", "organizations_url": "https://api.github.com/users/yaahc/orgs", "repos_url": "https://api.github.com/users/yaahc/repos", "events_url": "https://api.github.com/users/yaahc/events{/privacy}", "received_events_url": "https://api.github.com/users/yaahc/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/73186/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/73186/timeline", "performed_via_github_app": null, "state_reason": "completed"}