{"url": "https://api.github.com/repos/rust-lang/rust/issues/45959", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/45959/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/45959/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/45959/events", "html_url": "https://github.com/rust-lang/rust/issues/45959", "id": 273445663, "node_id": "MDU6SXNzdWUyNzM0NDU2NjM=", "number": 45959, "title": "[NLL] check other sorts of rvalues beyond aggregates", "user": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 693664741, "node_id": "MDU6TGFiZWw2OTM2NjQ3NDE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-mentor", "name": "E-needs-mentor", "color": "02e10c", "default": false, "description": "Call for participation: This issue is in need of a mentor."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-11-13T14:21:06Z", "updated_at": "2017-12-05T09:38:23Z", "closed_at": "2017-12-05T09:38:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "@Nashenas88 [implemented aggregate type-checking](https://github.com/nikomatsakis/rust/blob/nll-master/src/librustc_mir/transform/type_check.rs#L1080-L1128) in nikomatsakis/rust#13, but we [still need to handle other sorts of rvalues](https://github.com/nikomatsakis/rust/blob/nll-master/src/librustc_mir/transform/type_check.rs#L1129-L1139).\r\n\r\nThis is a meta-issue to cover the various cases. As PRs come in, I can check things off. Here is a list. In practice, all of the issues boil down to needing to verify various trait requirements, so the main step here will be building a subroutine for checking that a given trait reference is satisfied at a particular location (somewhat similar to [`normalize`](https://github.com/nikomatsakis/rust/blob/nll-master/src/librustc_mir/transform/type_check.rs#L1169-L1180) -- instructions to come shortly).\r\n\r\n- [x] `Rvalue::Use(Operand)` -- `let y = x`\r\n    - Nothing to do here, I think. **added by @arielb1** verify that the operand is `Sized`? Do that for *every* operand?\r\n- [x] `Rvalue::Repeat(Operand, ConstUsize)` -- `let y = [x; N]`\r\n    - We must check that the operand is `Copy`. \r\n- [x] `Rvalue::Ref(Region, BorrowKind, Lvalue)` -- `let y = &x`\r\n    - The only special rules here are region-specific -- e.g., reborrowing constraints -- so we'll let the NLL region inference handle them.\r\n- [x] `Rvalue::Len(X)`\r\n    - No special rules.\r\n- [x] `Rvalue::Cast(CastKind, Operand, Ty)`, let's break this down by `CastKind`:\r\n    - [x] `Misc` -- some form of bitcast I think, no action needed\r\n    - [x] `ReifyFnPointer` - **added by @arielb1** the signatures must match\r\n    - [x] `ClosureFnPointer` -  **added by @arielb1** the signatures must match\r\n    - [x] `UnsafeFnPointer` -  **added by @arielb1** the signatures must match\r\n    - [x] `Unsize` - I think we should verify a trait obligation here, something like `T: Unsize<U>` where `T is the operand's type and `U` is the target type. Have to double check this.\r\n    - all these cases are handled in https://github.com/nikomatsakis/rust/pull/19\r\n- [x] `Rvalue::BinaryOp(..)` -- built-in binary operators. Probably we should check that e.g. the LHS and RHS are of the same type, but I'm not sure if that *must* be true and it doesn't really affect NLL anyhow. Leave it for now.\r\n- [x] `Rvalue::CheckedBinaryOp(..)` -- as above.\r\n- [x] `Rvalue::UnaryOp(..)` -- as above.\r\n- [x] `Rvalue::Discriminant(..)` -- no special rule.\r\n- [x] `Rvalue::NullaryOp(..)` --\r\n    - [x] `sizeof` should require that the type is sized\r\n    - [x] `box` the same\r\n", "closed_by": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/45959/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/45959/timeline", "performed_via_github_app": null, "state_reason": "completed"}