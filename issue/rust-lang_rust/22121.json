{"url": "https://api.github.com/repos/rust-lang/rust/issues/22121", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/22121/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/22121/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/22121/events", "html_url": "https://github.com/rust-lang/rust/issues/22121", "id": 57098095, "node_id": "MDU6SXNzdWU1NzA5ODA5NQ==", "number": 22121, "title": "Null coalescing and custom operators", "user": {"login": "iluuu1994", "id": 1752683, "node_id": "MDQ6VXNlcjE3NTI2ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1752683?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iluuu1994", "html_url": "https://github.com/iluuu1994", "followers_url": "https://api.github.com/users/iluuu1994/followers", "following_url": "https://api.github.com/users/iluuu1994/following{/other_user}", "gists_url": "https://api.github.com/users/iluuu1994/gists{/gist_id}", "starred_url": "https://api.github.com/users/iluuu1994/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iluuu1994/subscriptions", "organizations_url": "https://api.github.com/users/iluuu1994/orgs", "repos_url": "https://api.github.com/users/iluuu1994/repos", "events_url": "https://api.github.com/users/iluuu1994/events{/privacy}", "received_events_url": "https://api.github.com/users/iluuu1994/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-02-09T22:12:32Z", "updated_at": "2015-02-10T06:10:25Z", "closed_at": "2015-02-09T23:10:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "A null coalescing operator would be awesome. It's quite burdensome to unwrap your `Option`s using `match` all the time. Something like this would be great:\n\n``` rust\nlet x = ... ?? default_value\n```\n\n`Option` is part of the standard library so I guess implementing the `??` doesn't really make sense unless there are custom operators that can be implemented inside the standard library.\n\nI'd like to point you to the Swift implementation of custom operators here. They have solve this problem rather elegantly. There's some controversy over custom operators and them being overused in cases that don't really make sense and can be more confusing than helpful.\n\nI'm interested in opinions on this and custom operator overloading in Rust.\n\nThis is how an implementation of a null coalescing operator could look like.\n\n``` rust\ninfx fn ??<T>(l: Option<T>, r: T) -> T {\n    match l {\n        Some(s) => s,\n        None => r,\n    }\n}\n```\n\nBtw Rust is super awesome :D :metal:\n", "closed_by": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/22121/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/22121/timeline", "performed_via_github_app": null, "state_reason": "completed"}