{"url": "https://api.github.com/repos/rust-lang/rust/issues/53469", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/53469/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/53469/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/53469/events", "html_url": "https://github.com/rust-lang/rust/issues/53469", "id": 351811667, "node_id": "MDU6SXNzdWUzNTE4MTE2Njc=", "number": 53469, "title": "ICE in 2018 edition:  'cannot access a scoped thread local variable without calling `set` first'", "user": {"login": "Kimundi", "id": 2903206, "node_id": "MDQ6VXNlcjI5MDMyMDY=", "avatar_url": "https://avatars.githubusercontent.com/u/2903206?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kimundi", "html_url": "https://github.com/Kimundi", "followers_url": "https://api.github.com/users/Kimundi/followers", "following_url": "https://api.github.com/users/Kimundi/following{/other_user}", "gists_url": "https://api.github.com/users/Kimundi/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kimundi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kimundi/subscriptions", "organizations_url": "https://api.github.com/users/Kimundi/orgs", "repos_url": "https://api.github.com/users/Kimundi/repos", "events_url": "https://api.github.com/users/Kimundi/events{/privacy}", "received_events_url": "https://api.github.com/users/Kimundi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 858360099, "node_id": "MDU6TGFiZWw4NTgzNjAwOTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/WG-epoch", "name": "WG-epoch", "color": "c2e0c6", "default": false, "description": "Working group: Epoch (2018) management"}, {"id": 930400927, "node_id": "MDU6TGFiZWw5MzA0MDA5Mjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-rust-2018-preview", "name": "A-rust-2018-preview", "color": "f7e101", "default": false, "description": "Area: The 2018 edition preview"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-08-18T11:01:10Z", "updated_at": "2018-09-07T18:45:44Z", "closed_at": "2018-09-07T18:45:44Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "```rust\r\nuse std::sync::mpsc::*;\r\nstruct StSt<'ast> {\r\n    store: &'ast (),\r\n    recv: Receiver<CmdFn>,\r\n}\r\ntype CmdFn = Box<for<'ast> FnOnce(&mut Option<StSt<'ast>>) + Send>;\r\nfn store_thread_new_module<'ast>(mut stst: StSt<'ast>) {\r\n    let mut stst = Some(stst);\r\n    while stst.is_some() {\r\n        match stst.as_ref().unwrap().recv.recv() {\r\n            Ok(cmd) => {\r\n                cmd(&mut stst);\r\n            }\r\n            Err(_) => return,\r\n        }\r\n    }\r\n}\r\nfn main() {}\r\n```\r\n\r\nPlayground link: https://play.rust-lang.org/?gist=f6c908320455219974ef86bf45be9abd&version=nightly&mode=debug&edition=2018\r\n\r\n```\r\nthread 'main' panicked at 'cannot access a scoped thread local variable without calling `set` first', /cargo/registry/src/github.com-1ecc6299db9ec823/scoped-tls-0.1.2/src/lib.rs:186:9\r\nstack backtrace:\r\n   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace\r\n             at libstd/sys/unix/backtrace/tracing/gcc_s.rs:49\r\n   1: std::sys_common::backtrace::print\r\n             at libstd/sys_common/backtrace.rs:71\r\n             at libstd/sys_common/backtrace.rs:59\r\n   2: std::panicking::default_hook::{{closure}}\r\n             at libstd/panicking.rs:211\r\n   3: std::panicking::default_hook\r\n             at libstd/panicking.rs:227\r\n   4: rustc::util::common::panic_hook\r\n   5: std::panicking::rust_panic_with_hook\r\n             at libstd/panicking.rs:479\r\n   6: std::panicking::begin_panic\r\n   7: <scoped_tls::ScopedKey<T>>::with\r\n   8: syntax_pos::<impl syntax_pos::span_encoding::Span>::macro_backtrace\r\n   9: rustc_errors::emitter::EmitterWriter::fix_multispan_in_std_macros\r\n  10: <rustc_errors::emitter::EmitterWriter as rustc_errors::emitter::Emitter>::emit\r\n  11: rustc_errors::Handler::emit_db\r\n  12: <rustc_errors::Handler as core::ops::drop::Drop>::drop\r\n  13: core::ptr::drop_in_place\r\n  14: core::ptr::drop_in_place\r\n  15: core::ptr::drop_in_place\r\n  16: <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once\r\n  17: __rust_maybe_catch_panic\r\n             at libpanic_unwind/lib.rs:102\r\n  18: rustc_driver::run\r\n  19: rustc_driver::main\r\n  20: std::rt::lang_start::{{closure}}\r\n  21: std::panicking::try::do_call\r\n             at libstd/rt.rs:59\r\n             at libstd/panicking.rs:310\r\n  22: __rust_maybe_catch_panic\r\n             at libpanic_unwind/lib.rs:102\r\n  23: std::rt::lang_start_internal\r\n             at libstd/panicking.rs:289\r\n             at libstd/panic.rs:392\r\n             at libstd/rt.rs:58\r\n  24: main\r\n  25: __libc_start_main\r\n  26: <unknown>\r\nquery stack during panic:\r\nend of query stack\r\n\r\nerror: internal compiler error: unexpected panic\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\nnote: rustc 1.30.0-nightly (73c78734b 2018-08-05) running on x86_64-unknown-linux-gnu\r\nnote: compiler flags: -C debuginfo=2 -C incremental\r\nnote: some of the compiler flags provided by cargo are hidden\r\n```", "closed_by": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/53469/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/53469/timeline", "performed_via_github_app": null, "state_reason": "completed"}