{"url": "https://api.github.com/repos/rust-lang/rust/issues/67223", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/67223/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/67223/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/67223/events", "html_url": "https://github.com/rust-lang/rust/issues/67223", "id": 536419361, "node_id": "MDU6SXNzdWU1MzY0MTkzNjE=", "number": 67223, "title": "Passing -Z embed-bitcode doesn't embed bitcode for debug builds of external dependencies", "user": {"login": "davehylands", "id": 57382732, "node_id": "MDQ6VXNlcjU3MzgyNzMy", "avatar_url": "https://avatars.githubusercontent.com/u/57382732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davehylands", "html_url": "https://github.com/davehylands", "followers_url": "https://api.github.com/users/davehylands/followers", "following_url": "https://api.github.com/users/davehylands/following{/other_user}", "gists_url": "https://api.github.com/users/davehylands/gists{/gist_id}", "starred_url": "https://api.github.com/users/davehylands/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davehylands/subscriptions", "organizations_url": "https://api.github.com/users/davehylands/orgs", "repos_url": "https://api.github.com/users/davehylands/repos", "events_url": "https://api.github.com/users/davehylands/events{/privacy}", "received_events_url": "https://api.github.com/users/davehylands/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 38105576, "node_id": "MDU6TGFiZWwzODEwNTU3Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-ios", "name": "O-ios", "color": "6e6ec0", "default": false, "description": "Operating system: iOS"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-11T14:48:27Z", "updated_at": "2023-03-04T00:37:24Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "I'm not 100% sure if this is a cargo bug or a rustc bug, but it looks like a rustc bug.\r\n\r\nI tested using `rustc 1.41.0-nightly (412f43ac5 2019-11-24)` running on MacOSX Catalina.\r\n\r\nI put my files in a small repository, which you can find here: https://github.com/davehylands/simple-lib\r\n\r\nWhat I noticed is that if I build using cargo normally (i.e. without using --release) then the object files for external crates do not get bitcode embedded. If I build using cargo with --release when the object files for external creates do get bitcode embedded. In either case, cargo is being run by using `RUSTFLAGS=\"-Z embed-bitcode\"`\r\n\r\nYou can pass `--release` to the build.sh script to get the --release behaviour, and pass no flags to get the debug behaviour. The build.sh script runs otool over the objects included in libsimple_lib.a to show whether bitcode is included or not.\r\n\r\nIf you modify the for loop to use \r\n```bash\r\nfor obj in rand_core*.o; do\r\n```\r\nrather than:\r\n```bash\r\nfor obj in *.o; do\r\n```\r\nthen you'll get simpler output.\r\n\r\nNormally, I use a rust toolchain that has the rust standard libraries built with bitcode, so I realize that these objects won't have bitcode using the nightly compiler.\r\n\r\nCargo.toml\r\n```\r\n[package]\r\nname = \"simple_lib\"\r\nversion = \"0.1.0\"\r\nauthors = [\"Dave Hylands <davehylands@fullstory.com>\"]\r\nedition = \"2018\"\r\n\r\n# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html\r\n\r\n[dependencies]\r\nrand = \"0.7\"\r\n\r\n[lib]\r\nname = \"simple_lib\"\r\n# rustc cannont create dylibs for iOS.\r\n# https://github.com/rust-lang/rust/issues/21727#issuecomment-424026535\r\ncrate-type = [\"staticlib\"]\r\n```\r\nsrc/lib.rs\r\n```\r\nuse rand;\r\n\r\npub fn test_func2() -> String {\r\n    let x = rand::random::<u16>();\r\n    format!(\"Your number is {}\", x)\r\n}\r\n```\r\nbuild.sh\r\n```\r\n#!/bin/sh\r\nset -e\r\nif [ \"$1\" == \"--release\" ]; then\r\n  BUILD_TYPE=\"release\"\r\n  CARGO_ARGS=\"--release\"\r\nelse\r\n  BUILD_TYPE=\"debug\"\r\nfi\r\nTARGET_DIR=target\r\nrm -rf ${TARGET_DIR}\r\nRUSTFLAGS=\"-Z embed-bitcode\" cargo build -v ${CARGO_ARGS}\r\n\r\ncd ${TARGET_DIR}/${BUILD_TYPE}\r\nar x libsimple_lib.a\r\n\r\nfor obj in *.o; do\r\n  if otool -l ${obj} | grep bitcode > /dev/null ; then\r\n    echo \"${obj} has bitcode\"\r\n  else\r\n    echo \"${obj} DOES NOT have bitcode\"\r\n  fi\r\ndone\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/67223/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/67223/timeline", "performed_via_github_app": null, "state_reason": null}