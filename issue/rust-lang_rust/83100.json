{"url": "https://api.github.com/repos/rust-lang/rust/issues/83100", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/83100/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/83100/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/83100/events", "html_url": "https://github.com/rust-lang/rust/issues/83100", "id": 831028840, "node_id": "MDU6SXNzdWU4MzEwMjg4NDA=", "number": 83100, "title": "Windows Miscompliation for String Manipulation (stable, beta, & nightly)", "user": {"login": "jhwgh1968", "id": 24486610, "node_id": "MDQ6VXNlcjI0NDg2NjEw", "avatar_url": "https://avatars.githubusercontent.com/u/24486610?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhwgh1968", "html_url": "https://github.com/jhwgh1968", "followers_url": "https://api.github.com/users/jhwgh1968/followers", "following_url": "https://api.github.com/users/jhwgh1968/following{/other_user}", "gists_url": "https://api.github.com/users/jhwgh1968/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhwgh1968/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhwgh1968/subscriptions", "organizations_url": "https://api.github.com/users/jhwgh1968/orgs", "repos_url": "https://api.github.com/users/jhwgh1968/repos", "events_url": "https://api.github.com/users/jhwgh1968/events{/privacy}", "received_events_url": "https://api.github.com/users/jhwgh1968/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2021-03-14T00:11:23Z", "updated_at": "2021-03-14T13:56:34Z", "closed_at": "2021-03-14T13:55:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Overview\r\n\r\n~It's a giant mess! :smile:  Please ping the Windows team, stat! :ambulance:~\r\n\r\nOne part is a duplicate, the other part is my bad.\r\n\r\n## I tried this code\r\n\r\nCross compiling on Linux to Windows.\r\n\r\n.cargo/config:\r\n\r\n<details>\r\n\r\n```toml\r\n[target.x86_64-pc-windows-gnu]\r\nlinker = \"/usr/bin/x86_64-w64-mingw32-gcc\"\r\nrustflags = [ \"-C\", \"target-cpu=sandybridge\", \"-C\", \"panic=abort\", \"-C\", \"lto=fat\", \"-C\", \"embed-bitcode=yes\"]\r\n```\r\n</details>\r\n\r\nsrc/main.rs:\r\n\r\n<details>\r\n\r\n```rust\r\nuse anyhow;\r\nuse itertools::Itertools;\r\nuse url::Url;\r\n\r\nenum SubForum {\r\n    Help,\r\n    Community,\r\n    Announcements,\r\n}\r\n\r\nfn url_for_post_number(f: SubForum, id: u32) -> Result<Url, url::ParseError> {\r\n    dbg!(id);\r\n    let domain = \"https://users.rust-lang.org\";\r\n\r\n    dbg!(&domain);\r\n\r\n    let path: &str = match f {\r\n        SubForum::Help => \"/c/help\",\r\n        SubForum::Community => \"/c/community\",\r\n        SubForum::Announcements => \"/c/announcements/{}\",\r\n    };\r\n\r\n    dbg!(path);\r\n\r\n    let mut final_url: String = domain.to_string();\r\n    final_url.push('/');\r\n    final_url.push_str(path);\r\n    final_url += &format!(\"/{}\", id);\r\n\r\n    dbg!(&final_url);\r\n\r\n    // Remove any //s due to issues with the filled-in values.\r\n    while let Some(pos) = final_url\r\n        .chars()\r\n        .skip(8)\r\n        .tuple_windows()\r\n        .position(|(a, b)| a == '/' && b == '/')\r\n    {\r\n        debug_assert_eq!(final_url.remove(pos + 8), '/');\r\n    }\r\n\r\n    dbg!(&final_url);\r\n\r\n    Url::parse(&final_url)\r\n}\r\n\r\nfn main() -> anyhow::Result<()> {\r\n    let important_topic_id = 1234;\r\n    let important_topic_url = url_for_post_number(SubForum::Help, important_topic_id)?;\r\n    println!(\"important post url: {}\", important_topic_url);\r\n    \r\n    Ok(())\r\n}\r\n```\r\n</details>\r\n\r\n\r\n## I expected this to happen\r\n\r\n```\r\n[src/main.rs:12] id = 1234\r\n[src/main.rs:15] &domain = \"https://users.rust-lang.org\"\r\n[src/main.rs:23] path = \"/c/help\"\r\n[src/main.rs:30] &final_url = \"https://users.rust-lang.org//c/help/1234\"\r\n[src/main.rs:42] &final_url = \"https://users.rust-lang.org/c/help/1234\"\r\nimportant post url: https://users.rust-lang.org/c/help/1234\r\n```\r\n\r\n## Instead, this happened\r\n\r\nWith a release build on current Beta, Stable, and Nightly it outputs:\r\n\r\n```\r\n[src/main.rs:12] id = 1234\r\n[src/main.rs:15] &domain = \"https://users.rust-lang.org\"\r\n[src/main.rs:23] path = \"/c/help\"\r\n[src/main.rs:30] &final_url = \"https://users.rust-lang.org//c/help/1234\"\r\n```\r\n\r\nIt then busy-waits infinitely. The while loop is the apparent cause, as avoiding putting any two `/`s together prevents the issue.\r\n\r\nOn current nightly in debug mode, it panics:\r\n\r\n<details>\r\n\r\n```\r\n[src/main.rs:12] id = 1234\r\n[src/main.rs:15] &domain = \"thread 'main' panicked at 'index out of bounds: the len is 31 but the index is 184467440\r\n73709551615', library\\core\\src\\unicode\\unicode_data.rs:82:62\r\nstack backtrace:\r\n   0: rust_begin_unwind\r\n             at /rustc/b3e19a221e63dcffdef87e12eadf1f36a8b90295\\/library\\std\\src\\panicking.rs:493:5\r\n   1: core::panicking::panic_fmt\r\n             at /rustc/b3e19a221e63dcffdef87e12eadf1f36a8b90295\\/library\\core\\src\\panicking.rs:92:14\r\n   2: core::panicking::panic_bounds_check\r\n             at /rustc/b3e19a221e63dcffdef87e12eadf1f36a8b90295\\/library\\core\\src\\panicking.rs:69:5\r\n   3: core::unicode::unicode_data::skip_search::{{closure}}\r\n             at /rustc/b3e19a221e63dcffdef87e12eadf1f36a8b90295\\/library\\core\\src\\unicode\\unicode_data.rs:82:62\r\n   4: core::option::Option<T>::map\r\n             at /rustc/b3e19a221e63dcffdef87e12eadf1f36a8b90295\\/library\\core\\src\\option.rs:487:29\r\n   5: core::unicode::unicode_data::skip_search\r\n             at /rustc/b3e19a221e63dcffdef87e12eadf1f36a8b90295\\/library\\core\\src\\unicode\\unicode_data.rs:82:9\r\n   6: core::unicode::unicode_data::grapheme_extend::lookup\r\n             at /rustc/b3e19a221e63dcffdef87e12eadf1f36a8b90295\\/library\\core\\src\\unicode\\unicode_data.rs:305:9\r\n   7: core::char::methods::<impl char>::is_grapheme_extended\r\n             at /rustc/b3e19a221e63dcffdef87e12eadf1f36a8b90295\\/library\\core\\src\\char\\methods.rs:859:9\r\n   8: core::char::methods::<impl char>::escape_debug_ext\r\n             at /rustc/b3e19a221e63dcffdef87e12eadf1f36a8b90295\\/library\\core\\src\\char\\methods.rs:415:46\r\n   9: core::char::methods::<impl char>::escape_debug\r\n             at /rustc/b3e19a221e63dcffdef87e12eadf1f36a8b90295\\/library\\core\\src\\char\\methods.rs:461:9\r\n  10: <str as core::fmt::Debug>::fmt\r\n             at /rustc/b3e19a221e63dcffdef87e12eadf1f36a8b90295\\/library\\core\\src\\fmt\\mod.rs:2057:23\r\n  11: <&T as core::fmt::Debug>::fmt\r\n             at /rustc/b3e19a221e63dcffdef87e12eadf1f36a8b90295\\library\\core\\src\\fmt\\mod.rs:2010:62\r\n  12: <&T as core::fmt::Debug>::fmt\r\n             at /rustc/b3e19a221e63dcffdef87e12eadf1f36a8b90295\\library\\core\\src\\fmt\\mod.rs:2010:62\r\n  13: <&T as core::fmt::Debug>::fmt\r\n             at /rustc/b3e19a221e63dcffdef87e12eadf1f36a8b90295\\library\\core\\src\\fmt\\mod.rs:2010:62\r\n  14: core::fmt::run\r\n             at /rustc/b3e19a221e63dcffdef87e12eadf1f36a8b90295\\/library\\core\\src\\fmt\\mod.rs:1135:5\r\n  15: core::fmt::write\r\n             at /rustc/b3e19a221e63dcffdef87e12eadf1f36a8b90295\\/library\\core\\src\\fmt\\mod.rs:1103:26\r\n  16: std::io::Write::write_fmt\r\n             at /rustc/b3e19a221e63dcffdef87e12eadf1f36a8b90295\\/library\\std\\src\\io\\mod.rs:1567:15\r\n  17: <&std::io::stdio::Stderr as std::io::Write>::write_fmt\r\n             at /rustc/b3e19a221e63dcffdef87e12eadf1f36a8b90295\\/library\\std\\src\\io\\stdio.rs:859:9\r\n  18: <std::io::stdio::Stderr as std::io::Write>::write_fmt\r\n             at /rustc/b3e19a221e63dcffdef87e12eadf1f36a8b90295\\/library\\std\\src\\io\\stdio.rs:833:9\r\n  19: std::io::stdio::print_to\r\n             at /rustc/b3e19a221e63dcffdef87e12eadf1f36a8b90295\\/library\\std\\src\\io\\stdio.rs:939:21\r\n  20: std::io::stdio::_eprint\r\n             at /rustc/b3e19a221e63dcffdef87e12eadf1f36a8b90295\\/library\\std\\src\\io\\stdio.rs:963:5\r\n  21: windows_test::url_for_post_number\r\n             at /tmp/windows_test/src/main.rs:15:5\r\n  22: windows_test::main\r\n             at /tmp/windows_test/src/main.rs:49:31\r\n  23: core::ops::function::FnOnce::call_once\r\n             at /rustc/b3e19a221e63dcffdef87e12eadf1f36a8b90295\\library\\core\\src\\ops\\function.rs:227:5\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n```\r\n</details>\r\n\r\nOn current stable and beta in debug mode, it works correctly.\r\n\r\n## Rust Versions Showing Failure\r\nBeta: `rustc 1.51.0-beta.6 (6a1835ad7 2021-03-12)`\r\nStable: `rustc 1.50.0 (cb75ad5db 2021-02-10)`\r\nNightly: `rustc 1.52.0-nightly (b3e19a221 2021-03-12)`\r\n\r\n## Environment\r\n\r\nThis behavior was first observed under Wine on Linux.\r\n\r\nI have attempted to test the release-mode binary generated by beta on Windows, but failed to do so. It prints an error suggesting Windows Defender is blocking it from running.\r\n\r\nI consider that circumstantial evidence the bug would occur on Windows, since malware might try to \"busy-wait past\" the pre-execution AV engines typically do. But I cannot say for sure.\r\n\r\n## Conclusion\r\n\r\nAll I know is:\r\n\r\n1. It's a mess\r\n1. Wine has never failed to emulate breakage and bad behavior correctly for me, so I think it's real\r\n1. The `.cargo/config` is one I have used in the past for other tools\r\n\r\nThank you for your time.", "closed_by": {"login": "jhwgh1968", "id": 24486610, "node_id": "MDQ6VXNlcjI0NDg2NjEw", "avatar_url": "https://avatars.githubusercontent.com/u/24486610?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhwgh1968", "html_url": "https://github.com/jhwgh1968", "followers_url": "https://api.github.com/users/jhwgh1968/followers", "following_url": "https://api.github.com/users/jhwgh1968/following{/other_user}", "gists_url": "https://api.github.com/users/jhwgh1968/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhwgh1968/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhwgh1968/subscriptions", "organizations_url": "https://api.github.com/users/jhwgh1968/orgs", "repos_url": "https://api.github.com/users/jhwgh1968/repos", "events_url": "https://api.github.com/users/jhwgh1968/events{/privacy}", "received_events_url": "https://api.github.com/users/jhwgh1968/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/83100/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/83100/timeline", "performed_via_github_app": null, "state_reason": "completed"}