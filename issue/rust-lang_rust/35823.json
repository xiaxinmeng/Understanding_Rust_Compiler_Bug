{"url": "https://api.github.com/repos/rust-lang/rust/issues/35823", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/35823/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/35823/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/35823/events", "html_url": "https://github.com/rust-lang/rust/issues/35823", "id": 172137124, "node_id": "MDU6SXNzdWUxNzIxMzcxMjQ=", "number": 35823, "title": "File IO with read_to_end and read_to_string is slower than possible", "user": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2016-08-19T13:57:21Z", "updated_at": "2017-06-17T23:14:15Z", "closed_at": "2017-06-17T23:14:15Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Rust's current implementation of `read_to_end` will read exponentially larger chunks of the buffer, but only up to 8192. This is slow when reading a greater than 16KB file if counting by syscalls.\n\nNodeJS reads the entire file in one go, making 3 syscalls: open, fstat, read, and close.\nRust currently makes (for the same file) 58 syscalls not counting mmap/madvise which may be circumstantial (not related to IO). Specifically: open, ioctl, read \\* 37, mmap, madvise, read \\* 18, madvise \\* 14, close.\n\nI would expect that functions such as read_to_end and read_to_string would do the minimal work necessary to read the entire file.\n\nThe below diff is what it takes to currently get Rust to do 4 syscalls (open, fstat, read, read, close). I think it's reasonable that similar code could be included (perhaps with specialization) in the filesystem reading code.\n\nThe difference between the two (with dropping caches):\nfast version:\n\n```\nreal    2m45.157s\nuser    0m11.484s\nsys 0m1.516s\n```\n\ncurrent, slower version:\n\n```\nreal    3m9.654s\nuser    0m11.580s\nsys 0m1.956s\n```\n\n``` diff\n-            let mut file = File::open(entry.path())?;\n-            let mut file_contents = String::new();\n+\n+            let file = File::open(entry.path())?;\n+            let capacity = match file.metadata() {\n+                Ok(metadata) => metadata.len(),\n+                Err(_) => 0,\n+            };\n+            let mut reader = BufReader::with_capacity(capacity as usize, file);\n+            let mut file_contents = String::with_capacity(capacity as usize);\n+            let len = match reader.fill_buf() {\n+                Ok(buf) => {\n+                    match ::std::str::from_utf8(buf) {\n+                        Ok(s) => file_contents.push_str(s),\n+                        Err(_) => {\n+                            skipped += 1;\n+                            continue;\n+                        }\n+                    };\n+                    buf.len()\n+                },\n+                Err(_) => {\n+                    skipped += 1;\n+                    continue;\n+                }\n+            };\n+            reader.consume(len);\n+            reader.read_to_string(&mut file_contents)?;\n+\n             // Skip files whose size is 0.\n-            if file.read_to_string(&mut file_contents)? == 0 {\n+            if file_contents.is_empty() {\n```\n", "closed_by": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/35823/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/35823/timeline", "performed_via_github_app": null, "state_reason": "completed"}