{"url": "https://api.github.com/repos/rust-lang/rust/issues/47885", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/47885/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/47885/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/47885/events", "html_url": "https://github.com/rust-lang/rust/issues/47885", "id": 292911309, "node_id": "MDU6SXNzdWUyOTI5MTEzMDk=", "number": 47885, "title": "cargo not built when a target is specified", "user": {"login": "cramertj", "id": 5963049, "node_id": "MDQ6VXNlcjU5NjMwNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5963049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cramertj", "html_url": "https://github.com/cramertj", "followers_url": "https://api.github.com/users/cramertj/followers", "following_url": "https://api.github.com/users/cramertj/following{/other_user}", "gists_url": "https://api.github.com/users/cramertj/gists{/gist_id}", "starred_url": "https://api.github.com/users/cramertj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cramertj/subscriptions", "organizations_url": "https://api.github.com/users/cramertj/orgs", "repos_url": "https://api.github.com/users/cramertj/repos", "events_url": "https://api.github.com/users/cramertj/events{/privacy}", "received_events_url": "https://api.github.com/users/cramertj/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 167285428, "node_id": "MDU6TGFiZWwxNjcyODU0Mjg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-cross", "name": "A-cross", "color": "f7e101", "default": false, "description": "Area: Cross compilation"}, {"id": 325438536, "node_id": "MDU6TGFiZWwzMjU0Mzg1MzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-bootstrap", "name": "T-bootstrap", "color": "bfd4f2", "default": false, "description": "Relevant to the bootstrap subteam: Rust's build system (x.py and src/bootstrap)"}, {"id": 593503757, "node_id": "MDU6TGFiZWw1OTM1MDM3NTc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-infra", "name": "T-infra", "color": "bfd4f2", "default": false, "description": "Relevant to the infrastructure team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-01-30T19:39:28Z", "updated_at": "2023-02-03T07:50:15Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "`./x.py build src/tools/cargo` completes without error and without building `cargo` when a target is specified via the command line or via a `config.toml`. I'd expect that `cargo` would build the same regardless of what target is specified, but instead it does not build at all when a target is specified.\r\n\r\nExample:\r\n```\r\n\u279c  rust git:(master) \u2717 ./x.py build src/tools/cargo --target=x86_64-unknown-fuchsia\r\nUpdating submodules\r\n    Finished dev [unoptimized] target(s) in 0.0 secs\r\nBuild completed successfully in 0:00:04\r\n\u279c  rust git:(master) \u2717 ./x.py build src/tools/cargo                                \r\nUpdating submodules\r\n    Finished dev [unoptimized] target(s) in 0.0 secs\r\nBuilding stage0 std artifacts (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu)\r\n    Finished release [optimized] target(s) in 0.0 secs\r\nCopying stage0 std from stage0 (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu / x86_64-unknown-linux-gnu)\r\nBuilding stage0 test artifacts (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu)\r\n    Finished release [optimized] target(s) in 0.0 secs\r\nCopying stage0 test from stage0 (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu / x86_64-unknown-linux-gnu)\r\nBuilding stage0 compiler artifacts (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu)\r\n    Finished release [optimized] target(s) in 0.0 secs\r\nCopying stage0 rustc from stage0 (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu / x86_64-unknown-linux-gnu)\r\nBuilding stage0 codegen artifacts (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu, llvm)\r\n    Finished release [optimized] target(s) in 0.0 secs\r\nAssembling stage1 compiler (x86_64-unknown-linux-gnu)\r\nBuilding stage1 std artifacts (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu)\r\n    Finished release [optimized] target(s) in 0.0 secs\r\nCopying stage1 std from stage1 (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu / x86_64-unknown-linux-gnu)\r\nBuilding stage1 test artifacts (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu)\r\n    Finished release [optimized] target(s) in 0.0 secs\r\nCopying stage1 test from stage1 (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu / x86_64-unknown-linux-gnu)\r\nBuilding stage1 compiler artifacts (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu)\r\n    Finished release [optimized] target(s) in 0.0 secs\r\nCopying stage1 rustc from stage1 (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu / x86_64-unknown-linux-gnu)\r\nBuilding stage1 codegen artifacts (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu, llvm)\r\n    Finished release [optimized] target(s) in 0.0 secs\r\nAssembling stage2 compiler (x86_64-unknown-linux-gnu)\r\nUplifting stage1 std (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu)\r\nCopying stage2 std from stage1 (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu / x86_64-unknown-linux-gnu)\r\nUplifting stage1 test (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu)\r\nCopying stage2 test from stage1 (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu / x86_64-unknown-linux-gnu)\r\nUplifting stage1 rustc (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu)\r\nCopying stage2 rustc from stage1 (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu / x86_64-unknown-linux-gnu)\r\nBuilding stage2 tool cargo (x86_64-unknown-linux-gnu)\r\n   Compiling cargo v0.26.0 (file:///usr/local/google/home/cramertj/src/rust/src/tools/cargo)\r\n    Finished release [optimized] target(s) in 13.21 secs\r\nBuild completed successfully in 0:00:23\r\n```\r\ncc @pylaligand ", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/47885/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/47885/timeline", "performed_via_github_app": null, "state_reason": null}