{"url": "https://api.github.com/repos/rust-lang/rust/issues/59713", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/59713/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/59713/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/59713/events", "html_url": "https://github.com/rust-lang/rust/issues/59713", "id": 429474794, "node_id": "MDU6SXNzdWU0Mjk0NzQ3OTQ=", "number": 59713, "title": "Improved error message when forgetting to specify default type parameter", "user": {"login": "Lehona", "id": 6599941, "node_id": "MDQ6VXNlcjY1OTk5NDE=", "avatar_url": "https://avatars.githubusercontent.com/u/6599941?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lehona", "html_url": "https://github.com/Lehona", "followers_url": "https://api.github.com/users/Lehona/followers", "following_url": "https://api.github.com/users/Lehona/following{/other_user}", "gists_url": "https://api.github.com/users/Lehona/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lehona/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lehona/subscriptions", "organizations_url": "https://api.github.com/users/Lehona/orgs", "repos_url": "https://api.github.com/users/Lehona/repos", "events_url": "https://api.github.com/users/Lehona/events{/privacy}", "received_events_url": "https://api.github.com/users/Lehona/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-04T20:44:02Z", "updated_at": "2020-07-23T22:15:19Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "It's kind of hard to put this scenario into words, so let me just show you a short example of what I mean:\r\n\r\n```\r\nstruct Foo<T=u32>(T);\r\n\r\nimpl<T> Foo<T> {\r\n    fn get(self) -> T { self.0 }\r\n}\r\n\r\nfn bar<T>(foo: Foo) {\r\n    let value: T = foo.get();\r\n}\r\n```\r\ngives the following error:\r\n```\r\nerror[E0308]: mismatched types\r\n --> src/main.rs:9:20\r\n  |\r\n9 |     let value: T = foo.get();\r\n  |                    ^^^^^^^^^ expected type parameter, found u32\r\n  |\r\n  = note: expected type `T`\r\n             found type `u32`\r\n```\r\nThis just came up on the nom gitter (in a more complex code sample) and was somewhat confusing to debug. Maybe the error message could hint about adding the generic type parameter to the argument type? I.e. suggest something along the lines of \"did you mean Foo<T>\" or even \"... instead of Foo<T=u32>\". Currently u32 just seems to appear out of nowhere.\r\n\r\nI am, however, not quite sure how easy this would be to improve or even detect.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/59713/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/59713/timeline", "performed_via_github_app": null, "state_reason": null}