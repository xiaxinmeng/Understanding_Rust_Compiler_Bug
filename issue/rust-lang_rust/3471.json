{"url": "https://api.github.com/repos/rust-lang/rust/issues/3471", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/3471/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/3471/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/3471/events", "html_url": "https://github.com/rust-lang/rust/issues/3471", "id": 6823439, "node_id": "MDU6SXNzdWU2ODIzNDM5", "number": 3471, "title": "RFC: zero initializer / undefined intrinsics for POD types", "user": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2012-09-12T16:07:49Z", "updated_at": "2013-05-10T05:44:58Z", "closed_at": "2013-05-10T05:44:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Perhaps we should add an intrinsic like:\n\n```\nfn zero<T: POD>() -> T\n```\n\nthat basically fills `T` with zeros.  This is perfectly safe for POD types.  Of course, we don't have a POD kind yet, but that's a separate issue I guess.  This is particularly useful in C interop, where you often have functions with out-params that otherwise need to be initialized by hand.\n\nWe could also add an intrinsic like\n\n```\nfn undefined<T: POD>() -> T\n```\n\nwhich would just leave the data uninitialized.  This would be more efficient but less safe in some sense.  Though restricting it to POD at least preserves memory safety, more-or-less.\n\nThe idea is you'd write something like:\n\n```\nstruct FooResult { /*something POD*/ }\n\nextern mod c_library { fn foo(p: &mut FooResult) -> bool; }\n\nfn foo() -> FooResult {\n    let result = defined();\n    if !c_library::foo(&mut result) { fail; }\n    return result;\n}\n```\n", "closed_by": {"login": "Aatch", "id": 342416, "node_id": "MDQ6VXNlcjM0MjQxNg==", "avatar_url": "https://avatars.githubusercontent.com/u/342416?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aatch", "html_url": "https://github.com/Aatch", "followers_url": "https://api.github.com/users/Aatch/followers", "following_url": "https://api.github.com/users/Aatch/following{/other_user}", "gists_url": "https://api.github.com/users/Aatch/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aatch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aatch/subscriptions", "organizations_url": "https://api.github.com/users/Aatch/orgs", "repos_url": "https://api.github.com/users/Aatch/repos", "events_url": "https://api.github.com/users/Aatch/events{/privacy}", "received_events_url": "https://api.github.com/users/Aatch/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/3471/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/3471/timeline", "performed_via_github_app": null, "state_reason": "completed"}