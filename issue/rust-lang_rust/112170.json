{"url": "https://api.github.com/repos/rust-lang/rust/issues/112170", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/112170/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/112170/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/112170/events", "html_url": "https://github.com/rust-lang/rust/issues/112170", "id": 1735853824, "node_id": "I_kwDOAAsO6M5ndwcA", "number": 112170, "title": "Suspected LLVM miscompilation of bool to int cast", "user": {"login": "cbeuw", "id": 7034308, "node_id": "MDQ6VXNlcjcwMzQzMDg=", "avatar_url": "https://avatars.githubusercontent.com/u/7034308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cbeuw", "html_url": "https://github.com/cbeuw", "followers_url": "https://api.github.com/users/cbeuw/followers", "following_url": "https://api.github.com/users/cbeuw/following{/other_user}", "gists_url": "https://api.github.com/users/cbeuw/gists{/gist_id}", "starred_url": "https://api.github.com/users/cbeuw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cbeuw/subscriptions", "organizations_url": "https://api.github.com/users/cbeuw/orgs", "repos_url": "https://api.github.com/users/cbeuw/repos", "events_url": "https://api.github.com/users/cbeuw/events{/privacy}", "received_events_url": "https://api.github.com/users/cbeuw/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 203429200, "node_id": "MDU6TGFiZWwyMDM0MjkyMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-high", "name": "P-high", "color": "eb6420", "default": false, "description": "High priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 267612997, "node_id": "MDU6TGFiZWwyNjc2MTI5OTc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-unsound", "name": "I-unsound", "color": "e11d21", "default": false, "description": "Issue: A soundness hole (worst kind of bug), see: https://en.wikipedia.org/wiki/Soundness"}], "state": "closed", "locked": false, "assignee": {"login": "nikic", "id": 216080, "node_id": "MDQ6VXNlcjIxNjA4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/216080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikic", "html_url": "https://github.com/nikic", "followers_url": "https://api.github.com/users/nikic/followers", "following_url": "https://api.github.com/users/nikic/following{/other_user}", "gists_url": "https://api.github.com/users/nikic/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikic/subscriptions", "organizations_url": "https://api.github.com/users/nikic/orgs", "repos_url": "https://api.github.com/users/nikic/repos", "events_url": "https://api.github.com/users/nikic/events{/privacy}", "received_events_url": "https://api.github.com/users/nikic/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nikic", "id": 216080, "node_id": "MDQ6VXNlcjIxNjA4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/216080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikic", "html_url": "https://github.com/nikic", "followers_url": "https://api.github.com/users/nikic/followers", "following_url": "https://api.github.com/users/nikic/following{/other_user}", "gists_url": "https://api.github.com/users/nikic/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikic/subscriptions", "organizations_url": "https://api.github.com/users/nikic/orgs", "repos_url": "https://api.github.com/users/nikic/repos", "events_url": "https://api.github.com/users/nikic/events{/privacy}", "received_events_url": "https://api.github.com/users/nikic/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2023-06-01T09:16:01Z", "updated_at": "2023-06-06T13:18:36Z", "closed_at": "2023-06-06T13:18:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The reproduction is fuzzer-generated custom MIR then (somewhat) minimised. I couldn't rewrite it into surface Rust as there are back edges to non-dominating basic blocks (they can't be turned into surface Rust loops). It's possible that rustc considers such control flow invalid, though this is likely an LLVM miscompilation and such control flow is valid at LLVM IR level. Miri also does not complain.\r\n\r\nThe actual execution flow has no loops, all statements are executed only once. Indented BBs are not taken, but still required for the reproduction.\r\n\r\n```rust\r\n#![feature(custom_mir, core_intrinsics)]\r\nextern crate core;\r\nuse core::intrinsics::mir::*;\r\n\r\npub fn print_var(x: usize) {\r\n    println!(\"{x}\");\r\n}\r\n\r\n\r\n#[custom_mir(dialect = \"runtime\", phase = \"initial\")]\r\npub fn fn1(){\r\nmir! {\r\nlet _2: i128;\r\nlet _3: i16;\r\nlet _4: usize;\r\nlet _6: (u32, f64);\r\nlet _7: (u32, f64);\r\nlet _8: f64;\r\nlet _9: isize;\r\nlet _10: *mut (u8,);\r\nlet _12: *mut i8;\r\nlet _15: (u32, *mut (u8,));\r\nlet _16: isize;\r\nlet _17: usize;\r\nlet _18: (u128, u8, bool, u32, char, i8, u32, i32);\r\nlet _18_ptr: *mut (u128, u8, bool, u32, char, i8, u32, i32);\r\nlet _24: (i32, ([f32; 6],));\r\nlet _26: f32;\r\nlet _27: f32;\r\nlet _30: *mut i8;\r\nlet _31: isize;\r\nlet _32: isize;\r\nlet _33: u8;\r\nlet _34: u64;\r\nlet _40: f32;\r\nlet _41: bool;\r\nlet _45: f64;\r\nlet _51: *mut (u32, f64);\r\nlet _52: *mut i8;\r\nlet _55: u32;\r\nlet _60: u64;\r\nlet _62: (u8,);\r\nlet _64: usize;\r\nlet _68: *mut (u32, f64);\r\nlet _85: *mut (u32, f64);\r\nlet _88: (u8,);\r\nlet _98: (u8,);\r\nlet _106: f32;\r\nlet _109: (u8,);\r\nlet _111: *mut i8;\r\nlet _113: i16;\r\nlet _115: u64;\r\nlet _335: ();\r\n{\r\n_2 = 0;\r\n_4 = 0;\r\n_6 = (0, 0.);\r\n_7 = _6;\r\n_15.0 = _6.0;\r\n_18_ptr = core::ptr::addr_of_mut!(_18);\r\n_12 = core::ptr::addr_of_mut!((*_18_ptr).5);\r\n(*_18_ptr).7 = 36514_u16 as i32;\r\n_17 = !_4;\r\nGoto(bb2)\r\n}\r\nbb2 = {\r\n_16 = _17 as isize;\r\n_26 = _7.1 as f32;\r\n_27 = _26;\r\n_8 = _6.1 + _7.1;\r\nGoto(bb3)\r\n}\r\nbb3 = {\r\n_24.0 = (*_18_ptr).7;\r\n(*_18_ptr).1 = 170_u8;\r\n*_12 = 49;\r\n(*_18_ptr).7 = -221108602_i32;\r\nGoto(bb6)\r\n}\r\n    bb4 = {\r\n    _27 = _26;\r\n    Goto(bb3)\r\n    }\r\n    bb5 = {\r\n    _12 = core::ptr::addr_of_mut!((*_18_ptr).5);\r\n    Goto(bb2)\r\n    }\r\nbb6 = {\r\n_3 = 18339_i16;\r\n_31 = _6.1 as isize;\r\nGoto(bb7)\r\n}\r\nbb7 = {\r\nmatch (*_18_ptr).5 {\r\n0 => bb8,\r\n49 => bb10,\r\n_ => ret\r\n}\r\n}\r\n    bb8 = {\r\n    _31 = _9 << _15.0;\r\n    Goto(bb7)\r\n    }\r\nbb10 = {\r\nmatch (*_18_ptr).1 {\r\n1 => bb2,\r\n2 => bb3,\r\n3 => bb4,\r\n4 => bb5,\r\n6 => bb7,\r\n170 => bb12,\r\n_ => ret\r\n}\r\n}\r\nbb12 = {\r\n_32 = _31;\r\nmatch (*_18_ptr).7 {\r\n-221108602 => bb13,\r\n_ => bb9\r\n}\r\n}\r\n    bb9 = {\r\n    _17 = _4;\r\n    Goto(bb3)\r\n    }\r\nbb13 = {\r\n_30 = core::ptr::addr_of_mut!((*_18_ptr).5);\r\nGoto(bb20)\r\n}\r\n    bb16 = {\r\n    match (*_18_ptr).1 {\r\n    2 => bb3,\r\n    3 => bb4,\r\n    6 => bb7,\r\n    170 => bb12,\r\n    _ => ret\r\n    }\r\n    }\r\n    bb19 = {\r\n    match (*_18_ptr).5 {\r\n    0 => bb8,\r\n    49 => bb10,\r\n    _ => bb9\r\n    }\r\n    }\r\nbb20 = {\r\nmatch _3 {\r\n0 => bb6,\r\n18339 => bb23,\r\n_ => bb19\r\n}\r\n}\r\nbb23 = {\r\n_51 = core::ptr::addr_of_mut!(_6);\r\n_52 = _12;\r\n(*_18_ptr).0 = 66683941810808954240874936259049749206_u128;\r\n(*_18_ptr).3 = 3241810161_u32;\r\nmatch (*_18_ptr).3 {\r\n3241810161 => bb25,\r\n_ => bb5\r\n}\r\n}\r\nbb25 = {\r\n_34 = 2204794180844018677_u64;\r\n_33 = (*_18_ptr).0 as u8;\r\n(*_51).1 = _7.1 / f64::NAN;\r\nGoto(bb27)\r\n}\r\nbb27 = {\r\n_7.1 = _6.1;\r\n(*_18_ptr).7 = _24.0;\r\n(*_51) = _7;\r\n_40 = _26 - _26;\r\nGoto(bb28)\r\n}\r\nbb28 = {\r\n_12 = _52;\r\n_55 = _40 as u32;\r\n(*_18_ptr).1 = _33;\r\nGoto(bb29)\r\n}\r\nbb29 = {\r\nmatch (*_18_ptr).3 {\r\n3241810161 => bb31,\r\n_ => bb30\r\n}\r\n}\r\n    bb30 = {\r\n    match (*_18_ptr).7 {\r\n    3 => bb16,\r\n    -221108602 => bb20,\r\n    _ => bb19\r\n    }\r\n    }\r\nbb31 = {\r\n_10 = core::ptr::addr_of_mut!(_62);\r\n(*_12) = 115_i8;\r\n_68 = core::ptr::addr_of_mut!(_7);\r\n_51 = _68;\r\nmatch _34 {\r\n2204794180844018677 => bb33,\r\n_ => bb23\r\n}\r\n}\r\nbb33 = {\r\n(*_68).0 = _55;\r\n(*_10).0 = _33;\r\n_45 = (*_68).1;\r\n(*_68).1 = _8;\r\n_106 = _27;\r\n_85 = core::ptr::addr_of_mut!(_6);\r\n_60 = _34;\r\n_111 = _12;\r\n_41 = _45 != (*_68).1;\r\nGoto(bb52)\r\n}\r\nbb52 = {\r\n_98 = *_10;\r\n_113 = _106 as i16;\r\n_33 = !_98.0;\r\n_26 = _106 / f32::NAN;\r\n_52 = _30;\r\n_3 = _113 >> (*_111);\r\nGoto(bb67)\r\n}\r\nbb67 = {\r\n*_51 = *_85;\r\n_109.0 = (*_10).0 | _33;\r\n_115 = _60 << (*_18_ptr).3;\r\n_88 = _109;\r\n(*_18_ptr) = (169547000073183258424114496411693076442_u128, 225_u8, true, 3440650345_u32, '\\u{f03a2}', (-32_i8), 1579607197_u32, (-460487397_i32));\r\n(*_10).0 = _2 as u8;\r\nmatch *_111 {\r\n1 => bb27,\r\n3 => bb67,\r\n-32 => bb75,\r\n_ => bb19\r\n}\r\n}\r\nbb75 = {\r\n(*_10) = _88;\r\n_34 = !_115;\r\n_51 = _85;\r\n(*_18_ptr).5 = -20;\r\nGoto(bb138)\r\n}\r\nbb138 = {\r\nmatch *_12 {\r\n0 => bb28,\r\n2 => bb52,\r\n3 => bb155,\r\n-20 => bb158,\r\n_ => ret\r\n}\r\n}\r\n    bb155 = {\r\n    _12 = _52;\r\n    Goto(bb138)\r\n    }\r\nbb158 = {\r\n_64 = _41 as usize; // _41 is a boolean so this has to print 0 or 1\r\nCall(_335, ret, print_var(Move(_64)))\r\n}\r\nret = {\r\nReturn()\r\n}\r\n}\r\n}\r\n\r\npub fn main() {\r\n    fn1();\r\n}\r\n```\r\n\r\nIn Miri, the program is UB-free under both Stacked Borrows and Tree Borrows. The correct result is 1\r\n```console\r\n$ rustc -Zmir-opt-level=0 -Copt-level=1 255118.rs && ./255118\r\n1\r\n```\r\n\r\nat `-Copt-level>=2`, it prints 255, which is clearly wrong as the value came from a bool to int cast.\r\n```console\r\n$ rustc -Zmir-opt-level=0 -Copt-level=2 255118.rs && ./255118\r\n255\r\n```\r\n\r\n`-Zmir-opt-level>=1` prevents the miscompilation, `-Cno-prepopulate-passes` also does. Implying either the generated IR has UB or this is a bug in LLVM\r\n```console\r\n$ rustc -Zmir-opt-level=1 -Copt-level=3 255118.rs && ./255118\r\n1\r\n$ rustc -Zmir-opt-level=0 -Copt-level=3 -Cno-prepopulate-passes 255118.rs && ./255118\r\n1\r\n```\r\n\r\n_Only_ reproducible on x86_64 Linux, not Apple Silicon macOS\r\n\r\n(This is still reproducible even with https://github.com/llvm/llvm-project/commit/97f0e7b06e6b76fd85fb81b8c12eba2255ff1742 applied, so it's a separate bug)\r\n\r\nI tried to get a standalone LLVM IR file using @Nilstrieb's approach in https://github.com/Nilstrieb/rlo-issue-112061 by having `print_var` in helper C code, but I couldn't reproduce the misoptimisation with `llc` since the pre-populated passes from rustc are required for the reproduction, which `llc -On` does not replicate (or not in the same order)\r\n\r\ncc @nikic ", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/112170/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/112170/timeline", "performed_via_github_app": null, "state_reason": "completed"}