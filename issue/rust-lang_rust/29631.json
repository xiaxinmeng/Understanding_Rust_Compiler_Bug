{"url": "https://api.github.com/repos/rust-lang/rust/issues/29631", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/29631/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/29631/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/29631/events", "html_url": "https://github.com/rust-lang/rust/issues/29631", "id": 115351015, "node_id": "MDU6SXNzdWUxMTUzNTEwMTU=", "number": 29631, "title": "Implement PartialEq for std::process::Command", "user": {"login": "rgardner", "id": 2448476, "node_id": "MDQ6VXNlcjI0NDg0NzY=", "avatar_url": "https://avatars.githubusercontent.com/u/2448476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rgardner", "html_url": "https://github.com/rgardner", "followers_url": "https://api.github.com/users/rgardner/followers", "following_url": "https://api.github.com/users/rgardner/following{/other_user}", "gists_url": "https://api.github.com/users/rgardner/gists{/gist_id}", "starred_url": "https://api.github.com/users/rgardner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rgardner/subscriptions", "organizations_url": "https://api.github.com/users/rgardner/orgs", "repos_url": "https://api.github.com/users/rgardner/repos", "events_url": "https://api.github.com/users/rgardner/events{/privacy}", "received_events_url": "https://api.github.com/users/rgardner/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-11-05T19:06:15Z", "updated_at": "2017-11-17T07:51:44Z", "closed_at": "2017-11-17T07:51:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently, `Command` does not implement `Eq` or `PartialEq`. The implementation of `Command` is private so users are unable to write their own comparison function.\n\nThe tests in [src/std/process.rs](http://doc.rust-lang.org/src/std/process.rs.html) spawn actual programs and test their output. I'm writing a shell that hopes to support input/output file redirection, running processes in the background, and of course running commands with arguments. I'd like to be able to test that user input parsed correctly by comparing two Commands without running them.\n\nA reasonable equality would be that the program name, argument lists (order (in)dependent), environments, and current_dir are the same at the time of the comparison. I'm not sure what comparing stdin/stdout/stderr would look like.\n### Potential Issues\n\nAfter some discussion on #rust, @talchas identified potential equivalence issues around `uid|gid` platform extensions, as well as comparing file descriptors. Reasonable defaults could be to compare `uid|gid` if they both exist, otherwise return false. For file descriptors, a reasonable rule could be to return false for duped file descriptors.\n### Example\n\n``` rust\nuse std::process::Command;\n\nfn main() {\n    let mut c = Command::new(\"prog\");\n    c.arg(\"arg\");\n\n    let mut other = Command::new(\"prog\");\n    other.arg(\"arg\");\n    assert_eq!(c, other);\n}\n```\n\n[Playpen](http://is.gd/yiflXQ)\n", "closed_by": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/29631/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/29631/timeline", "performed_via_github_app": null, "state_reason": "completed"}