{"url": "https://api.github.com/repos/rust-lang/rust/issues/111583", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/111583/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/111583/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/111583/events", "html_url": "https://github.com/rust-lang/rust/issues/111583", "id": 1709577133, "node_id": "I_kwDOAAsO6M5l5hOt", "number": 111583, "title": "Collapsing two if-statements to a single if statement can result in a large performance decrease", "user": {"login": "ClementTsang", "id": 34804052, "node_id": "MDQ6VXNlcjM0ODA0MDUy", "avatar_url": "https://avatars.githubusercontent.com/u/34804052?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ClementTsang", "html_url": "https://github.com/ClementTsang", "followers_url": "https://api.github.com/users/ClementTsang/followers", "following_url": "https://api.github.com/users/ClementTsang/following{/other_user}", "gists_url": "https://api.github.com/users/ClementTsang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ClementTsang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ClementTsang/subscriptions", "organizations_url": "https://api.github.com/users/ClementTsang/orgs", "repos_url": "https://api.github.com/users/ClementTsang/repos", "events_url": "https://api.github.com/users/ClementTsang/events{/privacy}", "received_events_url": "https://api.github.com/users/ClementTsang/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2023-05-15T08:19:53Z", "updated_at": "2023-05-17T06:43:56Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Apologies if this has already been reported.\r\n\r\n---\r\n\r\nLet's say I have some code that looks like this (this is a simplified version of some code a friend was writing):\r\n\r\n```rust\r\npub fn fast(mut ret: u64) -> u64 {\r\n    let mask = (1 << 38) - 1;\r\n\r\n    for _ in 0..100_000 {\r\n        let mut speed = 0.0;\r\n        let mut z: f64 = speed;\r\n        speed += 0.200000001;\r\n\r\n        for _ in 2..14 {\r\n            z += speed;\r\n\r\n            if (z.to_bits() >> 8) & mask == 0 {\r\n                if z % 0.0625 < 1e-13 {\r\n                    println!(\"{}\", z % 0.0625);\r\n                    ret += 1;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    eprintln!(\"ret: {ret}\");\r\n    ret\r\n}\r\n```\r\n\r\nI might be tempted to collapse the if-statement in the middle, since it shouldn't change anything - in fact, clippy will even recommend that I change it to this:\r\n\r\n```rust\r\npub fn slow(mut ret: u64) -> u64 {\r\n    let mask = (1 << 38) - 1;\r\n\r\n    for _ in 0..100_000 {\r\n        let mut speed = 0.0;\r\n        let mut z: f64 = speed;\r\n        speed += 0.200000001;\r\n\r\n        for _ in 2..14 {\r\n            z += speed;\r\n\r\n            if (z.to_bits() >> 8) & mask == 0 && z % 0.0625 < 1e-13 {\r\n                println!(\"{}\", z % 0.0625);\r\n                ret += 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    eprintln!(\"ret: {ret}\");\r\n    ret\r\n}\r\n```\r\n\r\nHowever, if I pit these two against each other using criterion, then when I run a bench (on 1.69.0):\r\n\r\n```bash\r\n\u279c cargo bench 2> out.txt\r\n\r\nrunning 0 tests\r\n\r\ntest result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\r\n\r\n\r\nrunning 0 tests\r\n\r\ntest result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\r\n\r\nslow                    time:   [7.5115 ms 7.5313 ms 7.5583 ms]\r\nFound 4 outliers among 100 measurements (4.00%)\r\n  2 (2.00%) high mild\r\n  2 (2.00%) high severe\r\n\r\nfast                    time:   [577.02 \u00b5s 578.91 \u00b5s 581.29 \u00b5s]\r\nFound 5 outliers among 100 measurements (5.00%)\r\n  1 (1.00%) high mild\r\n  4 (4.00%) high severe\r\n```\r\n\r\nFor some reason, collapsing the if branch leads to a massive performance regression! This is surprising as well since from my testing, where I set `z = 0`, the if branch should never run. Putting the two bits of code on Godbolt seems to also show that there's a bit of a difference in terms of assembly generation ([fast](https://godbolt.org/z/n969brv1b), [slow](https://godbolt.org/z/5M5fc3ae3)).\r\n\r\nFurthermore, from some testing, commenting out either the `eprintln` or the `println` on both would result in them having similar performance.\r\n\r\n~~I can set up a repo with my exact setup if that will be helpful.~~ Repo with code and benchmark: https://github.com/ClementTsang/collapse_if_slowdown\r\n\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/111583/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/111583/timeline", "performed_via_github_app": null, "state_reason": null}