{"url": "https://api.github.com/repos/rust-lang/rust/issues/53491", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/53491/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/53491/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/53491/events", "html_url": "https://github.com/rust-lang/rust/issues/53491", "id": 351891339, "node_id": "MDU6SXNzdWUzNTE4OTEzMzk=", "number": 53491, "title": "Tracking issue for RFC 1892, \"Deprecate uninitialized in favor of a new MaybeUninit type\"", "user": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 67766349, "node_id": "MDU6TGFiZWw2Nzc2NjM0OQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-mentor", "name": "E-mentor", "color": "02E10C", "default": false, "description": "Call for participation: This issue has a mentor. Use RustcContributor::new on Zulip for discussion."}, {"id": 89436934, "node_id": "MDU6TGFiZWw4OTQzNjkzNA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/B-RFC-approved", "name": "B-RFC-approved", "color": "d304cb", "default": false, "description": "Approved by a merged RFC but not yet implemented."}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 650846969, "node_id": "MDU6TGFiZWw2NTA4NDY5Njk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-tracking-issue", "name": "C-tracking-issue", "color": "f5f1fd", "default": false, "description": "Category: A tracking issue for an RFC or an unstable feature."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 384, "created_at": "2018-08-19T10:19:08Z", "updated_at": "2021-04-17T09:40:44Z", "closed_at": "2019-08-14T18:03:57Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## NEW TRACKING ISSUE = https://github.com/rust-lang/rust/issues/63566\r\n\r\nThis is a tracking issue for the RFC \"Deprecate `uninitialized` in favor of a new `MaybeUninit` type\" (rust-lang/rfcs#1892).\r\n\r\n**Steps:**\r\n\r\n- [x] Implement the RFC (cc @rust-lang/libs)\r\n- [x] Adjust documentation (in https://github.com/rust-lang/rust/pull/60445)\r\n- [x] Stabilization PR (in https://github.com/rust-lang/rust/pull/60445)\r\n\r\n[stabilization-guide]: https://forge.rust-lang.org/stabilization-guide.html\r\n[doc-guide]: https://forge.rust-lang.org/stabilization-guide.html#updating-documentation\r\n\r\n**Unresolved questions:**\r\n\r\n- ~~Should we have a safe setter that returns an `&mut T`?~~\r\n- ~~Should we rename `MaybeUninit`? (https://github.com/rust-lang/rust/pull/56138)~~\r\n- ~~Should we rename `into_inner`? Should it be more like `take` instead and take `&mut self`?~~\r\n- ~~Should `MaybeUninit<T>` be `Copy` for `T: Copy`?~~\r\n- Should we allow calling `get_ref` and `get_mut` (but not reading from the returned references) before data got initialized? (AKA: \"Are references to uninitialized data insta-UB, or only UB when being read from?\") Should we rename it similar to `into_inner`?\r\n- ~~Can we make `into_inner` (or whatever it ends up being called) panic when `T` is uninhabited, like `mem::uninitialized` does currently?~~ (done)\r\n- ~~Seems like we want to [not deprecate `mem::zeroed`](https://github.com/rust-lang/rust/issues/53491#issuecomment-451454793). We should however remember to also update its documentation together with `MaybeUninit`, make sure people are aware that this is insta-UB if all-0-bits does not satisfy the type's validity invariant.~~", "closed_by": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/53491/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 1, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/53491/timeline", "performed_via_github_app": null, "state_reason": "completed"}