{"url": "https://api.github.com/repos/rust-lang/rust/issues/78949", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/78949/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/78949/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/78949/events", "html_url": "https://github.com/rust-lang/rust/issues/78949", "id": 740889376, "node_id": "MDU6SXNzdWU3NDA4ODkzNzY=", "number": 78949, "title": "Transparently retrying `Interrupted` `waitpid` calls is not always appropriate", "user": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 2011781731, "node_id": "MDU6TGFiZWwyMDExNzgxNzMx", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs", "name": "T-libs", "color": "bfd4f2", "default": false, "description": "Relevant to the library team, which will review and decide on the PR/issue."}, {"id": 2635899341, "node_id": "MDU6TGFiZWwyNjM1ODk5MzQx", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-unix", "name": "O-unix", "color": "6e6ec0", "default": false, "description": "Operating system: Unix-like"}, {"id": 3812066157, "node_id": "LA_kwDOAAsO6M7jN4Nt", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-process", "name": "A-process", "color": "f7e101", "default": false, "description": "Area: std::process and std::env"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-11-11T16:14:29Z", "updated_at": "2022-02-08T20:29:50Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "NB: this issue is just some rambling based on some drive-by review I've done elsewhere. I think its a genuine and useful thing to track, but its not something I hold strong opinions about.\r\n\r\nCurrently the `Child::wait` call on UNIX systems is implemented to retry in case the `waitpid` call gets interrupted, due to its use of `cvt_r`: https://github.com/rust-lang/rust/blob/d4ea0b3e46a0303d5802b632e88ba1ba84d9d16f/library/std/src/sys/unix/process/process_unix.rs#L434-L443\r\n\r\nI'd like to argue that this is not always correct or appropriate. For instance, consider implementation of a service manager (a-la systemd, supervisord, etc.) Such a thing will in general want to register signal handlers and then forward some of the signals to some of the managed processes. With `Child::wait` retrying automatically the tool wanting to do something on a signal is forced to either drop down to directly calling the libc functions or to avoid the `Child::wait` altogether.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/78949/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/78949/timeline", "performed_via_github_app": null, "state_reason": null}