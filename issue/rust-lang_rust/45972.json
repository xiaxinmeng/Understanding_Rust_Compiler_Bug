{"url": "https://api.github.com/repos/rust-lang/rust/issues/45972", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/45972/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/45972/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/45972/events", "html_url": "https://github.com/rust-lang/rust/issues/45972", "id": 273614658, "node_id": "MDU6SXNzdWUyNzM2MTQ2NTg=", "number": 45972, "title": "Corrupted variable view in the debugger on Windows", "user": {"login": "avkonst", "id": 3971413, "node_id": "MDQ6VXNlcjM5NzE0MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/3971413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/avkonst", "html_url": "https://github.com/avkonst", "followers_url": "https://api.github.com/users/avkonst/followers", "following_url": "https://api.github.com/users/avkonst/following{/other_user}", "gists_url": "https://api.github.com/users/avkonst/gists{/gist_id}", "starred_url": "https://api.github.com/users/avkonst/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/avkonst/subscriptions", "organizations_url": "https://api.github.com/users/avkonst/orgs", "repos_url": "https://api.github.com/users/avkonst/repos", "events_url": "https://api.github.com/users/avkonst/events{/privacy}", "received_events_url": "https://api.github.com/users/avkonst/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 123109, "node_id": "MDU6TGFiZWwxMjMxMDk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-windows", "name": "O-windows", "color": "6e6ec0", "default": false, "description": "Operating system: Windows"}, {"id": 203130, "node_id": "MDU6TGFiZWwyMDMxMzA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-debuginfo", "name": "A-debuginfo", "color": "f7e101", "default": false, "description": "Area: Debugging information in compiled programs (DWARF, PDB, etc.)"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2017-11-13T23:26:11Z", "updated_at": "2022-08-15T14:13:26Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "I am not sure if it belongs to this project. Please advise if it should be moved somewhere else.\r\n\r\nI have got sample code from Hyper project (code sample is below), which I compiled using stable MSVC toolchain on Windows (stable-x86_64-pc-windows-msvc, rustc 1.21.0 (3b72af97e 2017-10-09)). Next I launched it under a debugger and played with breakpoints and variable inspections. I can see that the debugger shows correct view of local variables like `adr` and `strin` inside of `call` function.\r\n\r\n![image](https://user-images.githubusercontent.com/3971413/32754511-d941b25e-c935-11e7-9b7d-e4f4ef5ae170.png)\r\n\r\nHowever, the inspection of the `req` variable is corrupted:\r\n\r\n![image](https://user-images.githubusercontent.com/3971413/32754546-fd966a78-c935-11e7-833b-d464edfac4b3.png)\r\n\r\nI am observing the same with Visual Studio Code + cppvsdbg and with Visual Studio 2017 debugger.\r\n\r\nI am not sure if the issue is inferred by incomplete debug information or incorrect visualization settings for the debugger.  I understand debugger visualization extensions (natvis) are embedded into PDB files now (?). Although, I have configured VS Code debugger visualization extensions (not sure if it was done correctly ?). Could you please advise what I should try / check to resolve the issue?\r\n\r\nDebugger launch config in VS Code:\r\n```json\r\n     {\r\n            \"name\": \"(Windows) Launch\",\r\n            \"type\": \"cppvsdbg\",\r\n            \"request\": \"launch\",\r\n            \"program\": \"${workspaceFolder}/target/debug/hello_cargo.exe\",\r\n            \"args\": [],\r\n            \"stopAtEntry\": false,\r\n            \"cwd\": \"${workspaceFolder}\",\r\n            \"environment\": [],\r\n            \"externalConsole\": true\r\n        }\r\n```\r\n\r\nCode sample used:\r\n```rust\r\nextern crate hyper;\r\nextern crate futures;\r\n\r\nuse futures::future::Future;\r\n\r\nuse hyper::header::ContentLength;\r\nuse hyper::server::{Http, Request, Response, Service};\r\n\r\nstruct HelloWorld;\r\n\r\nconst PHRASE: &'static str = \"Hello, World!\";\r\n\r\nimpl HelloWorld {\r\n    fn callee(&self, str: String) {\r\n\r\n    }\r\n}\r\n\r\nimpl Service for HelloWorld {\r\n    // boilerplate hooking up hyper's server types\r\n    type Request = Request;\r\n    type Response = Response;\r\n    type Error = hyper::Error;\r\n    // The future representing the eventual Response your call will\r\n    // resolve to. This can change to whatever Future you need.\r\n    type Future = Box<Future<Item=Self::Response, Error=Self::Error>>;\r\n\r\n    fn call(&self, req: Request) -> Self::Future {\r\n        let strin = String::from(\"aaaaaaa\");\r\n        let adr = req.remote_addr().unwrap();\r\n        println!(\"{}\", adr);\r\n        println!(\"{}\", strin);\r\n        self.callee(strin.clone());\r\n        self.callee(strin);\r\n        // We're currently ignoring the Request\r\n        // And returning an 'ok' Future, which means it's ready\r\n        // immediately, and build a Response with the 'PHRASE' body.\r\n        Box::new(futures::future::ok(\r\n            Response::new()\r\n                .with_header(ContentLength(PHRASE.len() as u64))\r\n                .with_body(PHRASE)\r\n        ))\r\n    }\r\n}\r\n\r\nfn main() {\r\n    let addr = \"127.0.0.1:3000\".parse().unwrap();\r\n    let server = Http::new().bind(&addr, || Ok(HelloWorld)).unwrap();\r\n    server.run().unwrap();\r\n}\r\n```\r\n\r\n but I observed the same issue happening with VS Code + cppvsdbg extension and Visual Studio 2017 debuggers. I guess it is related to incomplete PDB infromation", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/45972/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/45972/timeline", "performed_via_github_app": null, "state_reason": null}