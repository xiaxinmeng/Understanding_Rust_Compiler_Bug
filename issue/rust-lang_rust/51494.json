{"url": "https://api.github.com/repos/rust-lang/rust/issues/51494", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/51494/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/51494/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/51494/events", "html_url": "https://github.com/rust-lang/rust/issues/51494", "id": 331167027, "node_id": "MDU6SXNzdWUzMzExNjcwMjc=", "number": 51494, "title": "Add a dynamic heap-allocated buffer type to alloc", "user": {"login": "zesterer", "id": 3268430, "node_id": "MDQ6VXNlcjMyNjg0MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/3268430?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zesterer", "html_url": "https://github.com/zesterer", "followers_url": "https://api.github.com/users/zesterer/followers", "following_url": "https://api.github.com/users/zesterer/following{/other_user}", "gists_url": "https://api.github.com/users/zesterer/gists{/gist_id}", "starred_url": "https://api.github.com/users/zesterer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zesterer/subscriptions", "organizations_url": "https://api.github.com/users/zesterer/orgs", "repos_url": "https://api.github.com/users/zesterer/repos", "events_url": "https://api.github.com/users/zesterer/events{/privacy}", "received_events_url": "https://api.github.com/users/zesterer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2018-06-11T12:24:43Z", "updated_at": "2019-03-23T14:07:40Z", "closed_at": "2019-03-23T14:07:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm sure this has been requested many times before, but I couldn't seem to find another issue related to the topic.\r\n\r\nCurrently, when requiring a buffer for something such as network socket I/O, it is conventional to use `Vec<u8>` to allocate a buffer of the necessary size to contain the packet.\r\n\r\nThere are two problems with this approach.\r\n\r\n1) Newcomers to Rust, confused by the lack of a dynamic array type, tend to use `Vec::with_capacity(n)` to allocate enough space for their buffer. Since the vector's length remains at 0 however, the slice returned by `.as_mut_slice()` also has length zero, leading to unintended (and surprisingly subtle) bugs when a supposedly incorrect number of bytes are retrieved from a socket.\r\n\r\n2) An alternative solution is to use the `vec!` macro to produce a zero-filled vector of the intended size like `let mut buf = vec![0u8; n]`. This intuitively feels like an inefficient way to allocate such a buffer since it is unnecessarily zero-filled before use. I'm unsure whether the compiler is capable of optimising this away, but it not an ergonomic solution regardless.\r\n\r\nUsing a vector to solve this problem does not feel clean or ergonomic: it feels like a hack to account for a yet-to-be-implemented feature.\r\n\r\nI am aware of the existence of the experimental `RawVec` type, but as far as I know the intended use case is very different.\r\n\r\nInstead, I suggest a `Buf<T: Copy + Clone>` type be added to `alloc` that provides an interface not dissimilar in nature to `Box<T>`. The type would not be required to zero-fill its contents upon instantiation.\r\n\r\n```rust\r\nlet mut buf = Buf::with_length(n);\r\nmy_socket.read(&mut buf);\r\n```\r\n\r\nas an ergonomic alternative to\r\n\r\n```rust\r\nlet mut buf = vec![0u8; n]\r\nmy_socket.read(buf.as_mut_slice());\r\n```", "closed_by": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/51494/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/51494/timeline", "performed_via_github_app": null, "state_reason": "completed"}