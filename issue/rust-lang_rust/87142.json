{"url": "https://api.github.com/repos/rust-lang/rust/issues/87142", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/87142/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/87142/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/87142/events", "html_url": "https://github.com/rust-lang/rust/issues/87142", "id": 944871972, "node_id": "MDU6SXNzdWU5NDQ4NzE5NzI=", "number": 87142, "title": "ICE using min_type_alias_impl_trait with generators", "user": {"login": "WorldSEnder", "id": 6527051, "node_id": "MDQ6VXNlcjY1MjcwNTE=", "avatar_url": "https://avatars.githubusercontent.com/u/6527051?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WorldSEnder", "html_url": "https://github.com/WorldSEnder", "followers_url": "https://api.github.com/users/WorldSEnder/followers", "following_url": "https://api.github.com/users/WorldSEnder/following{/other_user}", "gists_url": "https://api.github.com/users/WorldSEnder/gists{/gist_id}", "starred_url": "https://api.github.com/users/WorldSEnder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WorldSEnder/subscriptions", "organizations_url": "https://api.github.com/users/WorldSEnder/orgs", "repos_url": "https://api.github.com/users/WorldSEnder/repos", "events_url": "https://api.github.com/users/WorldSEnder/events{/privacy}", "received_events_url": "https://api.github.com/users/WorldSEnder/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 46741598, "node_id": "MDU6TGFiZWw0Njc0MTU5OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-test", "name": "E-needs-test", "color": "02e10c", "default": false, "description": "Call for participation: writing correctness tests"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 679846574, "node_id": "MDU6TGFiZWw2Nzk4NDY1NzQ=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-generators", "name": "A-generators", "color": "f7e101", "default": false, "description": "Area: Generators"}, {"id": 1472502130, "node_id": "MDU6TGFiZWwxNDcyNTAyMTMw", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-type_alias_impl_trait", "name": "F-type_alias_impl_trait", "color": "f9c0cc", "default": false, "description": "`#[feature(type_alias_impl_trait)]`"}, {"id": 1472513502, "node_id": "MDU6TGFiZWwxNDcyNTEzNTAy", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-generators", "name": "F-generators", "color": "f9c0cc", "default": false, "description": "`#![feature(generators)]`"}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-07-14T23:35:33Z", "updated_at": "2022-06-05T01:34:59Z", "closed_at": "2022-06-05T01:34:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Code\r\n\r\n```Rust\r\n#![feature(min_type_alias_impl_trait, generator_trait, generators)]\r\nuse std::ops::{Generator};\r\n\r\npub trait GeneratorProviderAlt: Sized {\r\n    type Gen: Generator<(), Return=(), Yield=()>;\r\n\r\n    fn start(ctx: Context<Self>) -> Self::Gen;\r\n}\r\n\r\npub struct Context<G: 'static + GeneratorProviderAlt> {\r\n    // back-link to our generator state\r\n    // In reality some other pointer type, but Box triggers the bug\r\n    // Also in reality, points to a wrapper struct that only indirectly holds\r\n    //   the generator state.\r\n    link: Box<G::Gen>,\r\n}\r\n\r\nimpl GeneratorProviderAlt for () {\r\n    type Gen = impl Generator<(), Return=(), Yield=()>;\r\n    fn start(ctx: Context<Self>) -> Self::Gen {\r\n        move || {\r\n            match ctx { _ => () } // make sure to use the context\r\n            yield ();\r\n        }\r\n    }\r\n}\r\n```\r\n[playground link](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=710d29b3c22f9d8ffad0415c31e5716c)\r\n\r\nI haven't gotten it to error without nightly features, so I believe it has to do with the generated enum for the Generator.\r\n\r\n### Meta\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.55.0-nightly (952fdf2a1 2021-07-05)\r\nbinary: rustc\r\ncommit-hash: 952fdf2a1119affa1b37bcacb0c49cf9f0168ac8\r\ncommit-date: 2021-07-05\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.55.0-nightly\r\nLLVM version: 12.0.1\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nerror: internal compiler error: compiler/rustc_codegen_llvm/src/debuginfo/metadata.rs:150:13: type metadata for unique ID '324a3be6bacbf95688e06d88c8981eb0' is already in the `TypeMap`!\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nthread 'rustc' panicked at 'Box<dyn Any>', compiler/rustc_errors/src/lib.rs:1034:9\r\nstack backtrace:\r\n   0: std::panicking::begin_panic\r\n   1: std::panic::panic_any\r\n   2: rustc_errors::HandlerInner::bug\r\n   3: rustc_errors::Handler::bug\r\n   4: rustc_middle::ty::context::tls::with_opt\r\n   5: rustc_middle::util::bug::opt_span_bug_fmt\r\n   6: rustc_middle::util::bug::bug_fmt\r\n   7: rustc_codegen_llvm::debuginfo::metadata::create_and_register_recursive_type_forward_declaration\r\n   8: rustc_codegen_llvm::debuginfo::metadata::prepare_enum_metadata\r\n   9: rustc_codegen_llvm::debuginfo::metadata::type_metadata\r\n  10: rustc_codegen_llvm::debuginfo::<impl rustc_codegen_ssa::traits::debuginfo::DebugInfoMethods for rustc_codegen_llvm::context::CodegenCx>::dbg_scope_fn::get_function_signature\r\n  11: rustc_codegen_llvm::debuginfo::<impl rustc_codegen_ssa::traits::debuginfo::DebugInfoMethods for rustc_codegen_llvm::context::CodegenCx>::dbg_scope_fn\r\n  12: rustc_codegen_ssa::mir::codegen_mir\r\n  13: rustc_codegen_ssa::base::codegen_instance\r\n  14: <rustc_middle::mir::mono::MonoItem as rustc_codegen_ssa::mono_item::MonoItemExt>::define\r\n  15: rustc_codegen_llvm::base::compile_codegen_unit::module_codegen\r\n  16: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task\r\n  17: rustc_codegen_llvm::base::compile_codegen_unit\r\n  18: <rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::CodegenBackend>::codegen_crate\r\n  19: rustc_interface::passes::QueryContext::enter\r\n  20: rustc_interface::queries::Queries::ongoing_codegen\r\n  21: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n  22: rustc_span::with_source_map\r\n  23: rustc_interface::interface::create_compiler_and_run\r\n  24: scoped_tls::ScopedKey<T>::set\r\n\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n----\r\n\r\nAs an aside, if one gets rid of the `Box`, this fails (kind of expected, though the error message could be improved) with\r\n```\r\nerror[E0391]: cycle detected when computing layout of `[generator@src/lib.rs:21:9: 24:10]`\r\n   |\r\n   = note: ...which requires computing layout of `Context<()>`...\r\n   = note: ...which again requires computing layout of `[generator@src/lib.rs:21:9: 24:10]`, completing the cycle\r\nnote: cycle used when optimizing MIR for `<impl at src/lib.rs:18:1: 26:2>::start`\r\n  --> src/lib.rs:20:5\r\n```\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/87142/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/87142/timeline", "performed_via_github_app": null, "state_reason": "completed"}