{"url": "https://api.github.com/repos/rust-lang/rust/issues/43437", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/43437/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/43437/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/43437/events", "html_url": "https://github.com/rust-lang/rust/issues/43437", "id": 244929604, "node_id": "MDU6SXNzdWUyNDQ5Mjk2MDQ=", "number": 43437, "title": "Vec iterator causes double mutable borrow compile error", "user": {"login": "ivanbakel", "id": 20319565, "node_id": "MDQ6VXNlcjIwMzE5NTY1", "avatar_url": "https://avatars.githubusercontent.com/u/20319565?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ivanbakel", "html_url": "https://github.com/ivanbakel", "followers_url": "https://api.github.com/users/ivanbakel/followers", "following_url": "https://api.github.com/users/ivanbakel/following{/other_user}", "gists_url": "https://api.github.com/users/ivanbakel/gists{/gist_id}", "starred_url": "https://api.github.com/users/ivanbakel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ivanbakel/subscriptions", "organizations_url": "https://api.github.com/users/ivanbakel/orgs", "repos_url": "https://api.github.com/users/ivanbakel/repos", "events_url": "https://api.github.com/users/ivanbakel/events{/privacy}", "received_events_url": "https://api.github.com/users/ivanbakel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 171502053, "node_id": "MDU6TGFiZWwxNzE1MDIwNTM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-borrow-checker", "name": "A-borrow-checker", "color": "f7e101", "default": false, "description": "Area: The borrow checker"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-23T19:08:42Z", "updated_at": "2017-07-24T20:51:51Z", "closed_at": "2017-07-24T20:51:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Alternative title: Multiple simultaneous overlapping mutable borrows.\r\n\r\nI shouldn't find an existing issue on this, and it doesn't seem to me like a code error - at least, nothing in the documentation suggested to me that this was expected. At the very least, the error message is unclear if it is expected.\r\n\r\nMRE:\r\n\r\n    struct Test<'a, T : 'a> {\r\n        contents : &'a mut T,\r\n        function : &'a fn(&'a mut T) -> ()\r\n    }\r\n    \r\n    impl<'a, T : 'a> Test<'a, T> {\r\n        fn do_thing(self) {\r\n            let v : Vec<()> = vec![];\r\n            for item in v.iter() {\r\n                match (self.function)(self.contents) {\r\n                    () => {}\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\nExpectation:\r\nThis would compile. The mutable borrows don't overlap.\r\n\r\nWhat happens:\r\n`rustc` complains that `self.contents` is mutably borrowed twice at the same position.\r\n\r\n     error[E0499]: cannot borrow `*self.contents` as mutable more than once at a time\r\n       |\r\n    28 |             match (self.function)(self.contents) {\r\n       |                                   ^^^^^^^^^^^^^\r\n       |                                   |\r\n       |                                   second mutable borrow occurs here\r\n       |                                   first mutable borrow occurs here\r\n    ...\r\n    32 |     }\r\n       |     - first borrow ends here\r\n\r\nThis is the only compiler error in the program. Any fixes to this error will cause the entire thing to compile successfully.\r\n\r\nFrom testing, things that will prevent this:\r\n * Removing the outside vec iterator\r\n * Using a named external function with the same signature instead of a function from a field of `Test`.\r\n\r\nThings that will not prevent this:\r\n * Using a function `impl`'d on a field of `Test` - e.g. \r\n\r\n        struct FunctionWrapper<'a, T : 'a> { inner_func : ... }\r\n        impl<a, T : 'a> FunctionWrapper<'a, T> { fn call(&self, arg : &'a mut T) { (self.inner_func)(arg) } }\r\n        struct Test<'a, T : 'a> { function : FunctionWrapper<...> }\r\n\r\n    This is true even if you're not calling a stored function - a stored function was just the simplest example I could think of.\r\n\r\n * Passing in the value which is the argument of the function. `fn do_thing(self, other : &'a mut T)` will still complain of a double borrow at the same position of `other`\r\n\r\n## Meta\r\nTested on \r\n * rustc 1.19.0 (stable)\r\n * rustc 1.20.0-nightly", "closed_by": {"login": "ivanbakel", "id": 20319565, "node_id": "MDQ6VXNlcjIwMzE5NTY1", "avatar_url": "https://avatars.githubusercontent.com/u/20319565?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ivanbakel", "html_url": "https://github.com/ivanbakel", "followers_url": "https://api.github.com/users/ivanbakel/followers", "following_url": "https://api.github.com/users/ivanbakel/following{/other_user}", "gists_url": "https://api.github.com/users/ivanbakel/gists{/gist_id}", "starred_url": "https://api.github.com/users/ivanbakel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ivanbakel/subscriptions", "organizations_url": "https://api.github.com/users/ivanbakel/orgs", "repos_url": "https://api.github.com/users/ivanbakel/repos", "events_url": "https://api.github.com/users/ivanbakel/events{/privacy}", "received_events_url": "https://api.github.com/users/ivanbakel/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/43437/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/43437/timeline", "performed_via_github_app": null, "state_reason": "completed"}