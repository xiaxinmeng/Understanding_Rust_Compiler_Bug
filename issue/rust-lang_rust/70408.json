{"url": "https://api.github.com/repos/rust-lang/rust/issues/70408", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/70408/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/70408/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/70408/events", "html_url": "https://github.com/rust-lang/rust/issues/70408", "id": 587975039, "node_id": "MDU6SXNzdWU1ODc5NzUwMzk=", "number": 70408, "title": "[const generics] symbol `foo` is already defined", "user": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46741598, "node_id": "MDU6TGFiZWw0Njc0MTU5OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-test", "name": "E-needs-test", "color": "02e10c", "default": false, "description": "Call for participation: writing correctness tests"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1282665911, "node_id": "MDU6TGFiZWwxMjgyNjY1OTEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-generics", "name": "A-const-generics", "color": "f7e101", "default": false, "description": "Area: const generics (parameters and arguments)"}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}, {"id": 3313407404, "node_id": "MDU6TGFiZWwzMzEzNDA3NDA0", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-adt_const_params", "name": "F-adt_const_params", "color": "f9c0cc", "default": false, "description": "`#![feature(adt_const_params)]`"}], "state": "closed", "locked": false, "assignee": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2020-03-25T20:36:29Z", "updated_at": "2022-07-07T23:36:19Z", "closed_at": "2022-07-07T23:36:19Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Const generics causes monomorphization to compare constants by identity instead of structurally. This means that two different references to equal data will compare as unequal.\r\n\r\nThe root problem is in https://github.com/rust-lang/rust/blob/3c1d9adb3cb3aad4233075fa296fc3c70b42cdb8/src/librustc_mir/monomorphize/collector.rs#L338 which puts the `Instance` of a function into a `FxHashSet`. Since the `Instance`'s `subst`s contain constants, hashing these constants will cause structurally equal constants to have different hashes.\r\nFor `HashStable` this has been solved by hashing the actual data and not things like pointers. For comparison we have `TypeRelation` which does a more appropriate version of comparison.\r\n\r\nI tried this code:\r\n\r\n```rust\r\n#![feature(const_generics)]\r\n\r\npub fn function_with_bytes<const BYTES: &'static [u8; 4]>() -> &'static [u8] {\r\n    BYTES\r\n}\r\n\r\npub fn main() {\r\n    assert_eq!(function_with_bytes::<b\"AAAA\">(), &[0x41, 0x41, 0x41, 0x41]);\r\n    assert_eq!(function_with_bytes::<{&[0x41, 0x41, 0x41, 0x41]}>(), b\"AAAA\");\r\n}\r\n```\r\n\r\nI expected to see this happen: successful compilation just as if the type were `&'static [u8]`\r\n\r\nInstead, this happened:\r\n\r\n```\r\nerror: symbol `_ZN10playground19function_with_bytes17h85b0fd4613beba85E` is already defined\r\n --> src/main.rs:3:1\r\n  |\r\n3 | / pub fn function_with_bytes<const BYTES: &'static [u8; 4]>() -> &'static [u8] {\r\n4 | |     BYTES\r\n5 | | }\r\n  | |_^\r\n```\r\n\r\ncc @varkor \r\n\r\ncc @rust-lang/wg-const-eval It's a footgun that `ConstKind` and especially `ConstValue` can be compared for equality. Technically a `ConstKind::Unevaluated` is value/structurally equal to any other `ConstKind`. We may need that `Eq` impl for query return value hashing though, not sure.", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/70408/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/70408/timeline", "performed_via_github_app": null, "state_reason": "completed"}