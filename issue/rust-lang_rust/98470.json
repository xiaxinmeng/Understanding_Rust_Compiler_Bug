{"url": "https://api.github.com/repos/rust-lang/rust/issues/98470", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/98470/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/98470/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/98470/events", "html_url": "https://github.com/rust-lang/rust/issues/98470", "id": 1284237469, "node_id": "I_kwDOAAsO6M5Mi-id", "number": 98470, "title": "E0621 Dataflow can point to wrong location causing lifetime obligation", "user": {"login": "aDotInTheVoid", "id": 28781354, "node_id": "MDQ6VXNlcjI4NzgxMzU0", "avatar_url": "https://avatars.githubusercontent.com/u/28781354?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aDotInTheVoid", "html_url": "https://github.com/aDotInTheVoid", "followers_url": "https://api.github.com/users/aDotInTheVoid/followers", "following_url": "https://api.github.com/users/aDotInTheVoid/following{/other_user}", "gists_url": "https://api.github.com/users/aDotInTheVoid/gists{/gist_id}", "starred_url": "https://api.github.com/users/aDotInTheVoid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aDotInTheVoid/subscriptions", "organizations_url": "https://api.github.com/users/aDotInTheVoid/orgs", "repos_url": "https://api.github.com/users/aDotInTheVoid/repos", "events_url": "https://api.github.com/users/aDotInTheVoid/events{/privacy}", "received_events_url": "https://api.github.com/users/aDotInTheVoid/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-06-24T22:14:21Z", "updated_at": "2022-06-24T22:14:21Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n\r\nIf you cannot produce a minimal reproduction case (something that would work in\r\nisolation), please provide the steps or even link to a repository that causes\r\nthe problematic output to occur.\r\n-->\r\n\r\n[Given the following code:](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021&gist=df287459c190ec33a3039f27809383b8) <!-- Please provide a link to play.rust-lang.org -->\r\n\r\n```rust\r\nstruct HasLife<'a>(&'a str);\r\nstruct Store<'a>(Vec<&'a HasLife<'a>>);\r\n\r\nimpl<'a> Store<'a> {\r\n    pub fn run(x: &HasLife<'a>) -> &'a str {\r\n        let mut store = Store(Vec::new());\r\n        store.add_inner(x);\r\n        store.0[0].0\r\n    }\r\n    \r\n    fn add_inner(&mut self, x: &'a HasLife<'a>) {\r\n        self.0.push(x);\r\n    }\r\n}\r\n```\r\n\r\nThe current output is:\r\n\r\n```\r\nerror[E0621]: explicit lifetime required in the type of `x`\r\n --> src/lib.rs:8:9\r\n  |\r\n5 |     pub fn run(x: &HasLife<'a>) -> &'a str {\r\n  |                   ------------ help: add explicit lifetime `'a` to the type of `x`: `&'a HasLife<'a>`\r\n...\r\n8 |         store.0[0].0\r\n  |         ^^^^^^^^^^^^ lifetime `'a` required\r\n```\r\n\r\n<!-- The following is not always necessary. -->\r\nIdeally the output should look like:\r\n\r\n\r\n```\r\nerror[E0621]: explicit lifetime required in the type of `x`\r\n --> src/lib.rs:8:9\r\n  |\r\n5 |     pub fn run(x: &HasLife<'a>) -> &'a str {\r\n  |                   ------------ help: add explicit lifetime `'a` to the type of `x`: `&'a HasLife<'a>`\r\n...\r\n7 |         store.add_inner(x);\r\n  |         ^^^^^^^^^^^^^^^^^^^ lifetime `'a` required\r\n...\r\n11|     fn add_inner(&mut self, x: &'a HasLife<'a>) \r\n  |                                ^^^^^^^^^^^^^^^^ help, because `Store::add_inner` requires `&'a HasLife<'a>`\r\n```\r\n\r\n\r\n\r\n[- If you remove the return from `Store::run` then it just works](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021&gist=9aaceefe329b4d48519f13548e6b9e53)\r\n[- If you make `pub fn run(&mut self, x: &HasLife<'a>) {self.add_inner(x)}`, you get a good E0621 Error](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021&gist=f83dfd1e3ae633d5573933542c96d8a7)\r\n\r\nBuild using the Nightly version: 1.63.0-nightly (2022-06-23 43347397f7c5ca9a670a)\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/98470/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/98470/timeline", "performed_via_github_app": null, "state_reason": null}