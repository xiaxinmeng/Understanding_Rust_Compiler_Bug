{"url": "https://api.github.com/repos/rust-lang/rust/issues/34985", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/34985/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/34985/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/34985/events", "html_url": "https://github.com/rust-lang/rust/issues/34985", "id": 167155583, "node_id": "MDU6SXNzdWUxNjcxNTU1ODM=", "number": 34985, "title": "LTO preserves too many `extern` symbols", "user": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37547, "node_id": "MDU6TGFiZWwzNzU0Nw==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-linkage", "name": "A-linkage", "color": "f7e101", "default": false, "description": "Area: linking into static, shared libraries and binaries"}, {"id": 67766349, "node_id": "MDU6TGFiZWw2Nzc2NjM0OQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-mentor", "name": "E-mentor", "color": "02E10C", "default": false, "description": "Call for participation: This issue has a mentor. Use RustcContributor::new on Zulip for discussion."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-07-23T00:17:32Z", "updated_at": "2016-07-30T22:58:25Z", "closed_at": "2016-07-30T22:58:25Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Right now the standard library ends up exporting a bunch of `extern` symbols from liblibc:\n\n```\n$ echo '#[no_mangle] pub extern fn foo() { panic!() }' > foo.rs\n$ echo 'extern void foo(); int main() { foo(); return 0; }' > foo.c\n$ rustc foo.rs --crate-type staticlib -C lto\n$ gcc foo.c libfoo.a\n$ nm -g ./a.out | grep libc\n000000000049e310 T _ZN4libc4unix6notbsd11WEXITSTATUS17hdf8e9951afe1c101E\n000000000049e530 T _ZN4libc4unix6notbsd5linux7CPU_SET17hb5ba54c4f04e4ad5E\n000000000049e510 T _ZN4libc4unix6notbsd5linux8CPU_ZERO17hc3389841ca5535cfE\n000000000049e630 T _ZN4libc4unix6notbsd5linux9CPU_EQUAL17h6aa5067ba806ec07E\n000000000049e5b0 T _ZN4libc4unix6notbsd5linux9CPU_ISSET17h25c9bc3ffd366857E\n000000000049e170 T _ZN4libc4unix6notbsd6FD_CLR17h82439e27c061361cE\n000000000049e250 T _ZN4libc4unix6notbsd6FD_SET17h6f0001978b943490E\n000000000049e2c0 T _ZN4libc4unix6notbsd7FD_ZERO17h157d16767431163aE\n000000000049e1e0 T _ZN4libc4unix6notbsd8FD_ISSET17h9bb2d4903026e75fE\n000000000049e320 T _ZN4libc4unix6notbsd8WTERMSIG17h140bc8346daf707fE\n000000000049e2f0 T _ZN4libc4unix6notbsd9WIFEXITED17h9b79d0f36c3cdb42E\n```\n\nThese are all defined in the libc crate, but LTO should be stripping them out.\n\nI believe the reason that this is happening is we attempt to preserve `extern` symbols from upstream crates (as they may be part of the ABI), but we don't check for `#[no_mangle]` (which none of these functions have).\n\nI think the relevant clause [is here](https://github.com/rust-lang/rust/blob/ad264f7f39b6113fb87a489d72d31abbc03ab148/src/librustc_trans/base.rs#L2639-L2654) which ends up calling [this function](https://github.com/rust-lang/rust/blob/ad264f7f39b6113fb87a489d72d31abbc03ab148/src/librustc_metadata/csearch.rs#L276) coming over to [this function](https://github.com/rust-lang/rust/blob/ad264f7f39b6113fb87a489d72d31abbc03ab148/src/librustc_metadata/decoder.rs#L1534-L1562). Although there's [a clause](https://github.com/rust-lang/rust/blob/ad264f7f39b6113fb87a489d72d31abbc03ab148/src/librustc_metadata/decoder.rs#L1557-L1558) which [looks like it checks for this](https://github.com/rust-lang/rust/blob/ad264f7f39b6113fb87a489d72d31abbc03ab148/src/libsyntax/attr.rs#L339-L342), I think we're [falling through too quickly](https://github.com/rust-lang/rust/blob/ad264f7f39b6113fb87a489d72d31abbc03ab148/src/librustc_metadata/decoder.rs#L1549) and we may wish to change that.\n\nNote that this is mostly just a hunch though, some more investigation may be required! For an aspiring trans hacker though I don't think this should be _too_ hard and I'd be willing to help out!\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/34985/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/34985/timeline", "performed_via_github_app": null, "state_reason": "completed"}