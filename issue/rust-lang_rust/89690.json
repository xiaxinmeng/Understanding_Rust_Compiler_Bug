{"url": "https://api.github.com/repos/rust-lang/rust/issues/89690", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/89690/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/89690/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/89690/events", "html_url": "https://github.com/rust-lang/rust/issues/89690", "id": 1021535804, "node_id": "I_kwDOAAsO6M4842Y8", "number": 89690, "title": "panic on trait implementation selection when using `adt_const_params`", "user": {"login": "superwhiskers", "id": 10212424, "node_id": "MDQ6VXNlcjEwMjEyNDI0", "avatar_url": "https://avatars.githubusercontent.com/u/10212424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/superwhiskers", "html_url": "https://github.com/superwhiskers", "followers_url": "https://api.github.com/users/superwhiskers/followers", "following_url": "https://api.github.com/users/superwhiskers/following{/other_user}", "gists_url": "https://api.github.com/users/superwhiskers/gists{/gist_id}", "starred_url": "https://api.github.com/users/superwhiskers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/superwhiskers/subscriptions", "organizations_url": "https://api.github.com/users/superwhiskers/orgs", "repos_url": "https://api.github.com/users/superwhiskers/repos", "events_url": "https://api.github.com/users/superwhiskers/events{/privacy}", "received_events_url": "https://api.github.com/users/superwhiskers/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1282665911, "node_id": "MDU6TGFiZWwxMjgyNjY1OTEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-generics", "name": "A-const-generics", "color": "f7e101", "default": false, "description": "Area: const generics (parameters and arguments)"}, {"id": 3313407404, "node_id": "MDU6TGFiZWwzMzEzNDA3NDA0", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-adt_const_params", "name": "F-adt_const_params", "color": "f9c0cc", "default": false, "description": "`#![feature(adt_const_params)]`"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2021-10-08T23:35:21Z", "updated_at": "2022-12-22T15:08:34Z", "closed_at": "2022-12-22T15:08:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "### code\r\n\r\n```rust\r\n#![allow(incomplete_features)]\r\n#![feature(adt_const_params)]\r\n\r\n#[derive(PartialEq, Eq)]\r\npub enum A {\r\n    A,\r\n    B,\r\n}\r\n\r\npub trait B<const __: &'static A> {\r\n    fn a(&self) {}\r\n}\r\n\r\nstruct C;\r\n\r\nimpl B<{ &A::A }> for C {}\r\n\r\nimpl B<{ &A::B }> for C {}\r\n\r\nfn ice() {\r\n    B::<{ &A::A }>::a(&C);\r\n}\r\n```\r\n\r\n### meta\r\n\r\nthis is only possible on the nightly version, due to it using an unstable and incomplete feature (`adt_const_params`)\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.57.0-nightly (485ced56b 2021-10-07) \r\n```\r\n\r\n### error\r\n\r\n```\r\nthread 'rustc' panicked at 'forcing query with already existing `DepNode`\r\n- query-key: Canonical { max_universe: U0, variables: [], value: ParamEnvAnd { param_env: ParamEnv { caller_bounds: [], reveal: UserFacing }, value: Binder(TraitPredicate(<C as B<{&_: &'static A}>>), []) } }\r\n- dep-node: evaluate_obligation(bcbd867fecf3da2d-c598572d933665fd)', /rustc/485ced56b8753ec86936903f2a8c95e9be8996a1/compiler/rustc_query_system/src/dep_graph/graph.rs:247:9\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.57.0-nightly (485ced56b 2021-10-07) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [evaluate_obligation] evaluating trait selection obligation `C: B<{&_: &'static A}>`\r\n#1 [typeck] type-checking `test::ice`\r\nend of query stack\r\nerror: could not compile `rust`\r\n```\r\n\r\n### backtrace\r\n\r\n```\r\nthread 'rustc' panicked at 'forcing query with already existing `DepNode`\r\n- query-key: Canonical { max_universe: U0, variables: [], value: ParamEnvAnd { param_env: ParamEnv { caller_bounds: [], reveal: UserFacing }, value: Binder(TraitPredicate(<C as B<{&_: &'static A}>>), []) } }\r\n- dep-node: evaluate_obligation(bcbd867fecf3da2d-c598572d933665fd)', /rustc/485ced56b8753ec86936903f2a8c95e9be8996a1/compiler/rustc_query_system/src/dep_graph/graph.rs:247:9\r\nstack backtrace:\r\n   0: rust_begin_unwind\r\n             at /rustc/485ced56b8753ec86936903f2a8c95e9be8996a1/library/std/src/panicking.rs:517:5\r\n   1: core::panicking::panic_fmt\r\n             at /rustc/485ced56b8753ec86936903f2a8c95e9be8996a1/library/core/src/panicking.rs:100:14\r\n   2: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task\r\n   3: rustc_data_structures::stack::ensure_sufficient_stack\r\n   4: rustc_query_system::query::plumbing::get_query\r\n   5: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::evaluate_obligation\r\n   6: rustc_trait_selection::traits::fulfill::FulfillProcessor::progress_changed_obligations\r\n   7: rustc_data_structures::obligation_forest::ObligationForest<O>::process_obligations\r\n   8: <rustc_trait_selection::traits::fulfill::FulfillmentContext as rustc_infer::traits::engine::TraitEngine>::select_with_constness_where_possible\r\n   9: rustc_typeck::check::fn_ctxt::checks::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_argument_types\r\n  10: rustc_typeck::check::callee::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_call\r\n  11: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  12: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n  13: rustc_typeck::check::fn_ctxt::checks::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_stmt\r\n  14: rustc_typeck::check::fn_ctxt::checks::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_block_with_expected\r\n  15: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n  16: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_return_expr\r\n  17: rustc_typeck::check::check::check_fn\r\n  18: rustc_infer::infer::InferCtxtBuilder::enter\r\n  19: rustc_typeck::check::typeck\r\n  20: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task\r\n  21: rustc_data_structures::stack::ensure_sufficient_stack\r\n  22: rustc_query_system::query::plumbing::try_execute_query\r\n  23: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::typeck\r\n  24: rustc_typeck::collect::type_of::opt_const_param_of\r\n  25: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task\r\n  26: rustc_data_structures::stack::ensure_sufficient_stack\r\n  27: rustc_query_system::query::plumbing::try_execute_query\r\n  28: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::opt_const_param_of\r\n  29: rustc_typeck::check::typeck\r\n  30: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task\r\n  31: rustc_data_structures::stack::ensure_sufficient_stack\r\n  32: rustc_query_system::query::plumbing::try_execute_query\r\n  33: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::typeck\r\n  34: rustc_data_structures::sync::par_for_each_in\r\n  35: rustc_typeck::check::typeck_item_bodies\r\n  36: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task\r\n  37: rustc_data_structures::stack::ensure_sufficient_stack\r\n  38: rustc_query_system::query::plumbing::try_execute_query\r\n  39: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::typeck_item_bodies\r\n  40: rustc_session::utils::<impl rustc_session::session::Session>::time\r\n  41: rustc_typeck::check_crate\r\n  42: rustc_interface::passes::analysis\r\n  43: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task\r\n  44: rustc_data_structures::stack::ensure_sufficient_stack\r\n  45: rustc_query_system::query::plumbing::try_execute_query\r\n  46: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::analysis\r\n  47: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n  48: rustc_span::with_source_map\r\n  49: scoped_tls::ScopedKey<T>::set\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.57.0-nightly (485ced56b 2021-10-07) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [evaluate_obligation] evaluating trait selection obligation `C: B<{&_: &'static A}>`\r\n#1 [typeck] type-checking `test::ice`\r\n#2 [opt_const_param_of] computing the optional const parameter of `test::ice::{constant#0}`\r\n#3 [typeck] type-checking `test::ice::{constant#0}`\r\n#4 [typeck_item_bodies] type-checking all item bodies\r\n#5 [analysis] running analysis passes on this crate\r\nend of query stack\r\nerror: could not compile `rust`\r\n```\r\n\r\n### details\r\n\r\nthis panic is not triggered if the source is compiled with `rustc` directly (assuming the `ice` function is renamed to `main`). this detail may or may not be useful, but i ran into this distinction trying to reproduce it.\r\n\r\nthe error returned instead is this:\r\n```\r\nerror[E0277]: the trait bound `C: B<{&_: &'static A}>` is not satisfied\r\n  --> lib.rs:22:23\r\n   |\r\n22 |     B::<{ &A::A }>::a(&C);\r\n   |     ----------------- ^^ the trait `B<{&_: &'static A}>` is not implemented for `C`\r\n   |     |\r\n   |     required by a bound introduced by this call\r\n   |\r\n   = help: the following implementations were found:\r\n             <C as B<{&_: &'static A}>>\r\n             <C as B<{&_: &'static A}>>\r\nnote: required by `B::a`\r\n  --> lib.rs:11:5\r\n   |\r\n11 |     fn a(&self) {}\r\n   |     ^^^^^^^^^^^\r\n\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0277`.\r\n```", "closed_by": {"login": "apiraino", "id": 6098822, "node_id": "MDQ6VXNlcjYwOTg4MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6098822?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apiraino", "html_url": "https://github.com/apiraino", "followers_url": "https://api.github.com/users/apiraino/followers", "following_url": "https://api.github.com/users/apiraino/following{/other_user}", "gists_url": "https://api.github.com/users/apiraino/gists{/gist_id}", "starred_url": "https://api.github.com/users/apiraino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apiraino/subscriptions", "organizations_url": "https://api.github.com/users/apiraino/orgs", "repos_url": "https://api.github.com/users/apiraino/repos", "events_url": "https://api.github.com/users/apiraino/events{/privacy}", "received_events_url": "https://api.github.com/users/apiraino/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/89690/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/89690/timeline", "performed_via_github_app": null, "state_reason": "not_planned"}