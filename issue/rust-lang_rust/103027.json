{"url": "https://api.github.com/repos/rust-lang/rust/issues/103027", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/103027/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/103027/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/103027/events", "html_url": "https://github.com/rust-lang/rust/issues/103027", "id": 1408522453, "node_id": "I_kwDOAAsO6M5T9FjV", "number": 103027, "title": "ICE (failed to get layout for `[type error]`) when attempting to doc-test an internal struct of rustfmt", "user": {"login": "anforowicz", "id": 12191912, "node_id": "MDQ6VXNlcjEyMTkxOTEy", "avatar_url": "https://avatars.githubusercontent.com/u/12191912?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anforowicz", "html_url": "https://github.com/anforowicz", "followers_url": "https://api.github.com/users/anforowicz/followers", "following_url": "https://api.github.com/users/anforowicz/following{/other_user}", "gists_url": "https://api.github.com/users/anforowicz/gists{/gist_id}", "starred_url": "https://api.github.com/users/anforowicz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anforowicz/subscriptions", "organizations_url": "https://api.github.com/users/anforowicz/orgs", "repos_url": "https://api.github.com/users/anforowicz/repos", "events_url": "https://api.github.com/users/anforowicz/events{/privacy}", "received_events_url": "https://api.github.com/users/anforowicz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-10-13T23:08:12Z", "updated_at": "2022-10-13T23:11:56Z", "closed_at": "2022-10-13T23:11:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Code\r\n\r\nTo repro, try the following steps:\r\n\r\n1. Get a local copy of https://github.com/rust-lang/rustfmt.git\r\n2. Apply the patch from https://github.com/anforowicz/rustfmt/tree/doc-test-ice-repro (see the `git diff` output below)\r\n3. Run `cargo test` against `rustfmt`\r\n\r\nI haven't yet tried minimizing this example, because it seems that part of the repro may require depending on the internal `rustc_foo` crates (like `rustfmt` does AFAIU).  At least the following does *not* repro the problem:\r\n\r\n```\r\n$ cat src/lib.rs\r\nstruct SomeStruct(i32);\r\n\r\nimpl SomeStruct {\r\n    /// ```\r\n    /// use ice_20221013::SomeStruct;\r\n    /// SomeStruct::foo();\r\n    /// ```\r\n    fn foo() {\r\n    }\r\n}\r\n\r\n$ cargo test\r\n...\r\nerror[E0603]: struct `SomeStruct` is private\r\n...\r\n```\r\n\r\n### Meta\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.64.0-nightly (affe0d3a0 2022-08-05)\r\nbinary: rustc\r\ncommit-hash: affe0d3a00e92fa7885e3f5d2c5073fde432d154\r\ncommit-date: 2022-08-05\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.64.0-nightly\r\nLLVM version: 14.0.6\r\n```\r\n\r\nI've tried to see if the ICE also repros on a more recent nightly, but with `rustc 1.66.0-nightly (c0983a9aa 2022-10-12)` I've hit much earlier, different errors when running `cargo test` against `rustfmt`.\r\n\r\n### Error output\r\n\r\n```\r\n$ cd ~/src/github/rustfmt\r\n$ git diff fork/master\r\ndiff --git a/src/comment.rs b/src/comment.rs\r\nindex 4d565afc..32e1e57b 100644\r\n--- a/src/comment.rs\r\n+++ b/src/comment.rs\r\n@@ -417,6 +417,12 @@ impl CodeBlockAttribute {\r\n     /// Parse comma separated attributes list. Return rust only if all\r\n     /// attributes are valid rust attributes\r\n     /// See <https://doc.rust-lang.org/rustdoc/print.html#attributes>\r\n+    ///\r\n+    /// Example:\r\n+    /// ```\r\n+    /// use rustfmt::comment::CodeBlockAttribute;\r\n+    /// let _ = CodeBlockAttribute::new(\"rust\");\r\n+    /// ```\r\n     fn new(attributes: &str) -> CodeBlockAttribute {\r\n         for attribute in attributes.split(',') {\r\n             match attribute.trim() {\r\n\r\n$ RUST_BACKTRACE=1 cargo test\r\n...\r\n\r\n   Doc-tests rustfmt-nightly\r\n\r\nrunning 3 tests\r\ntest src/comment.rs - comment::CodeBlockAttribute::new (line 422) ... FAILED\r\ntest src/utils.rs - utils::trim_left_preserve_layout (line 560) - compile fail ... ok\r\ntest src/utils.rs - utils::trim_left_preserve_layout (line 546) - compile fail ... ok\r\n\r\nfailures:\r\n\r\n---- src/comment.rs - comment::CodeBlockAttribute::new (line 422) stdout ----\r\nerror: internal compiler error: compiler/rustc_codegen_llvm/src/context.rs:974:13: failed to get layout for `[type error]`: the type `[type error]` has an unknown layout\r\n --> src/comment.rs:422:38\r\n  |\r\n2 | fn main() { #[allow(non_snake_case)] fn _doctest_main_src_comment_rs_422_0() {\r\n  |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nthread 'rustc' panicked at 'Box<dyn Any>', /rustc/affe0d3a00e92fa7885e3f5d2c5073fde432d154/compiler/rustc_errors/src/lib.rs:1332:9\r\nstack backtrace:\r\n   0: std::panicking::begin_panic::<rustc_errors::ExplicitBug>\r\n   1: std::panic::panic_any::<rustc_errors::ExplicitBug>\r\n   2: <rustc_errors::HandlerInner>::span_bug::<rustc_span::span_encoding::Span, &alloc::string::String>\r\n   3: <rustc_errors::Handler>::span_bug::<rustc_span::span_encoding::Span, &alloc::string::String>\r\n   4: rustc_middle::ty::context::tls::with_context_opt::<rustc_middle::ty::context::tls::with_opt<rustc_middle::util::bug::opt_span_bug_fmt<rustc_span::span_encoding::Span>::{closure#0}, ()>::{closure#0}, ()>\r\n   5: rustc_middle::util::bug::opt_span_bug_fmt::<rustc_span::span_encoding::Span>\r\n   6: rustc_middle::util::bug::span_bug_fmt::<rustc_span::span_encoding::Span>\r\n   7: <rustc_codegen_llvm::context::CodegenCx as rustc_middle::ty::layout::LayoutOfHelpers>::handle_layout_err\r\n   8: <rustc_codegen_llvm::context::CodegenCx as rustc_middle::ty::layout::LayoutOf>::spanned_layout_of::{closure#0}\r\n   9: <core::iter::adapters::map::Map<core::slice::iter::Iter<rustc_middle::mir::LocalDecl>, rustc_codegen_ssa::mir::analyze::non_ssa_locals<rustc_codegen_llvm::builder::Builder>::{closure#0}> as core::iter::traits::iterator::Iterator>::fold::<(), core::iter::traits::iterator::Iterator::for_each::call<rustc_codegen_ssa::mir::analyze::LocalKind, <alloc::vec::Vec<rustc_codegen_ssa::mir::analyze::LocalKind> as alloc::vec::spec_extend::SpecExtend<rustc_codegen_ssa::mir::analyze::LocalKind, core::iter::adapters::map::Map<core::slice::iter::Iter<rustc_middle::mir::LocalDecl>, rustc_codegen_ssa::mir::analyze::non_ssa_locals<rustc_codegen_llvm::builder::Builder>::{closure#0}>>>::spec_extend::{closure#0}>::{closure#0}>\r\n  10: rustc_codegen_ssa::mir::analyze::non_ssa_locals::<rustc_codegen_llvm::builder::Builder>\r\n  11: rustc_codegen_ssa::mir::codegen_mir::<rustc_codegen_llvm::builder::Builder>\r\n  12: rustc_codegen_llvm::base::compile_codegen_unit::module_codegen\r\n  13: <rustc_query_system::dep_graph::graph::DepGraph<rustc_middle::dep_graph::dep_node::DepKind>>::with_task::<rustc_middle::ty::context::TyCtxt, rustc_span::symbol::Symbol, rustc_codegen_ssa::ModuleCodegen<rustc_codegen_llvm::ModuleLlvm>>\r\n  14: rustc_codegen_llvm::base::compile_codegen_unit\r\n  15: rustc_codegen_ssa::base::codegen_crate::<rustc_codegen_llvm::LlvmCodegenBackend>\r\n  16: <rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::CodegenBackend>::codegen_crate\r\n  17: <rustc_session::session::Session>::time::<alloc::boxed::Box<dyn core::any::Any>, rustc_interface::passes::start_codegen::{closure#0}>\r\n  18: <rustc_interface::passes::QueryContext>::enter::<<rustc_interface::queries::Queries>::ongoing_codegen::{closure#0}::{closure#0}, core::result::Result<alloc::boxed::Box<dyn core::any::Any>, rustc_errors::ErrorGuaranteed>>\r\n  19: <rustc_interface::queries::Queries>::ongoing_codegen\r\n  20: <rustc_interface::interface::Compiler>::enter::<rustc_driver::run_compiler::{closure#1}::{closure#2}, core::result::Result<core::option::Option<rustc_interface::queries::Linker>, rustc_errors::ErrorGuaranteed>>\r\n  21: rustc_span::with_source_map::<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_interface::interface::create_compiler_and_run<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver::run_compiler::{closure#1}>::{closure#1}>\r\n  22: rustc_interface::interface::create_compiler_and_run::<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver::run_compiler::{closure#1}>\r\n  23: <scoped_tls::ScopedKey<rustc_span::SessionGlobals>>::set::<rustc_interface::interface::run_compiler<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver::run_compiler::{closure#1}>::{closure#0}, core::result::Result<(), rustc_errors::ErrorGuaranteed>>\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.64.0-nightly (affe0d3a0 2022-08-05) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: --crate-type bin -C codegen-units=1 -C embed-bitcode=no\r\n\r\nquery stack during panic:\r\nend of query stack\r\nerror: aborting due to previous error\r\n\r\nCouldn't compile the test.\r\n\r\nfailures:\r\n    src/comment.rs - comment::CodeBlockAttribute::new (line 422)\r\n\r\ntest result: FAILED. 2 passed; 1 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.05s\r\n\r\nerror: test failed, to rerun pass '--doc'\r\n```", "closed_by": {"login": "anforowicz", "id": 12191912, "node_id": "MDQ6VXNlcjEyMTkxOTEy", "avatar_url": "https://avatars.githubusercontent.com/u/12191912?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anforowicz", "html_url": "https://github.com/anforowicz", "followers_url": "https://api.github.com/users/anforowicz/followers", "following_url": "https://api.github.com/users/anforowicz/following{/other_user}", "gists_url": "https://api.github.com/users/anforowicz/gists{/gist_id}", "starred_url": "https://api.github.com/users/anforowicz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anforowicz/subscriptions", "organizations_url": "https://api.github.com/users/anforowicz/orgs", "repos_url": "https://api.github.com/users/anforowicz/repos", "events_url": "https://api.github.com/users/anforowicz/events{/privacy}", "received_events_url": "https://api.github.com/users/anforowicz/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/103027/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/103027/timeline", "performed_via_github_app": null, "state_reason": "completed"}