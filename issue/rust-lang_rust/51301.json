{"url": "https://api.github.com/repos/rust-lang/rust/issues/51301", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/51301/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/51301/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/51301/events", "html_url": "https://github.com/rust-lang/rust/issues/51301", "id": 328741383, "node_id": "MDU6SXNzdWUzMjg3NDEzODM=", "number": 51301, "title": "thread 'rustc' panicked at 'called `Result::unwrap()` on an `Err`", "user": {"login": "IllusiveS", "id": 7921065, "node_id": "MDQ6VXNlcjc5MjEwNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/7921065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/IllusiveS", "html_url": "https://github.com/IllusiveS", "followers_url": "https://api.github.com/users/IllusiveS/followers", "following_url": "https://api.github.com/users/IllusiveS/following{/other_user}", "gists_url": "https://api.github.com/users/IllusiveS/gists{/gist_id}", "starred_url": "https://api.github.com/users/IllusiveS/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/IllusiveS/subscriptions", "organizations_url": "https://api.github.com/users/IllusiveS/orgs", "repos_url": "https://api.github.com/users/IllusiveS/repos", "events_url": "https://api.github.com/users/IllusiveS/events{/privacy}", "received_events_url": "https://api.github.com/users/IllusiveS/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 36996, "node_id": "MDU6TGFiZWwzNjk5Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-easy", "name": "E-easy", "color": "02e10c", "default": false, "description": "Call for participation: Experience needed to fix: Easy / not much (good first issue)"}, {"id": 46741598, "node_id": "MDU6TGFiZWw0Njc0MTU5OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-test", "name": "E-needs-test", "color": "02e10c", "default": false, "description": "Call for participation: writing correctness tests"}, {"id": 256133398, "node_id": "MDU6TGFiZWwyNTYxMzMzOTg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-mir", "name": "A-mir", "color": "f7e101", "default": false, "description": "Area: Mid-level IR (MIR) - https://blog.rust-lang.org/2016/04/19/MIR.html"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-06-02T12:46:15Z", "updated_at": "2019-06-14T06:46:34Z", "closed_at": "2019-06-14T06:46:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "I tried this code:\r\n\r\n```\r\n#![allow(dead_code)]\r\n#![allow(unused_must_use)]\r\n\r\nuse std::collections::HashMap;\r\nuse std::any::{Any, TypeId};\r\nuse std::result::Result::Ok;\r\nuse std::hash::Hash;\r\n\r\ntrait State {\r\n\ttype EventType;\r\n\r\n\tfn on_enter(&mut self);\r\n\tfn on_event_enter(&mut self, event: Self::EventType);\r\n\r\n\tfn get_type_id_of_state(&self) -> TypeId;\r\n}\r\n\r\nstruct StateMachine<EventType : Hash + Eq> {\r\n\tcurrent_state : Box<State<EventType=EventType>>,\r\n\ttransition_table : HashMap<TypeId, HashMap<EventType, fn() -> Box<State<EventType=EventType>>>>\r\n}\r\n\r\nimpl <EventType : Hash + Eq> StateMachine<EventType> {\r\n\tfn process_event(&mut self, event : EventType) {\r\n\t\tself.inner_process_event(event);\r\n\t}\r\n\r\n\tfn is_state<T: ?Sized + Any>(&mut self) -> bool {\r\n\t\tself.current_state.get_type_id_of_state() == TypeId::of::<T>()\r\n\t}\r\n\r\n\tfn inner_process_event(&mut self, event : EventType) -> Result<(), i8> {\r\n\t\tlet new_state_creation_function = self.transition_table\r\n\t\t\t.iter()\r\n\t\t\t.find(|(&event_typeid, _)| event_typeid == self.current_state.get_type_id_of_state())\r\n\t\t\t.ok_or(1)?\r\n\t\t\t.1\r\n\t\t\t.iter()\r\n\t\t\t.find(|(&event_type, _)|event == event_type)\r\n\t\t\t.ok_or(2)?\r\n\t\t\t.1;\r\n\r\n\t\t//TODO on_exit from state\r\n\t\tself.current_state = new_state_creation_function();\r\n\t\tOk(())\r\n\t}\r\n}\r\n\r\n#[cfg(test)]\r\nmod tests {\r\n    #[test]\r\n    fn it_works() {\r\n        assert_eq!(2 + 2, 4);\r\n    }\r\n}\r\n```\r\n\r\nI expected to see this happen:  for this code to compile, or throw an error\r\n\r\nInstead, this happened: i broke the compiler\r\n\r\n## Meta\r\n\r\n`rustc --version --verbose`:\r\nrustc 1.26.1 (827013a31 2018-05-25)\r\nbinary: rustc\r\ncommit-hash: 827013a31b88e536e85b8e6ceb5b9988042ec335\r\ncommit-date: 2018-05-25\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.26.1\r\nLLVM version: 6.0\r\n\r\nBacktrace:\r\n```\r\nthread 'rustc' panicked at 'called `Result::unwrap()` on an `Err` value: (MoveData { move_paths: [MovePath { place: _0 }, MovePath { place: _1 }, MovePath { place: _2 }, MovePath { place: _3 }, MovePath { place: _4 }, MovePath { place: _5 }], moves: [mp4@bb0[6], mp5@bb0[6], mp5@bb2[0], mp4@bb2[1], mp3@bb2[2], mp3@bb3[0], mp3@bb4[0], mp0@bb4[1]], loc_map: LocationMap { map: [[[], [], [], [], [], [], [mo0, mo1]], [[]], [[mo2], [mo3], [mo4]], [[mo5]], [[mo6], [mo7]]] }, path_map: [[mo7], [], [], [mo4, mo5, mo6], [mo0, mo3], [mo1, mo2]], rev_lookup: MovePathLookup { locals: [mp0, mp1, mp2, mp3, mp4, mp5], projections: {} }, inits: [mp1@src/lib.rs:39:10: 39:47 (Deep), mp2@src/lib.rs:39:11: 39:27 (Deep), mp3@src/lib.rs:39:13: 39:23 (Deep), mp4@src/lib.rs:39:28: 39:33 (Deep), mp5@src/lib.rs:39:37: 39:47 (Deep), mp0@src/lib.rs:39:28: 39:47 (NonPanicPathOnly)], init_loc_map: LocationMap { map: [[[], [in2], [], [in3], [], [in4], [in5]], [[]], [[], [], []], [[]], [[], []]] }, init_path_map: [[in5], [in0], [in1], [in2], [in3], [in4]] }, [IllegalMove { cannot_move_out_of: IllegalMoveOrigin { span: src/lib.rs:39:13: 39:23, kind: BorrowedContent } }])', libcore/result.rs:945:5\r\nstack backtrace:\r\n   0:     0x7f65eff6366b - std::sys::unix::backtrace::tracing::imp::unwind_backtrace::hc94fccaa2a711028\r\n                               at libstd/sys/unix/backtrace/tracing/gcc_s.rs:49\r\n   1:     0x7f65eff317f0 - std::sys_common::backtrace::print::h8c9041d44f9f1a2c\r\n                               at libstd/sys_common/backtrace.rs:71\r\n                               at libstd/sys_common/backtrace.rs:59\r\n   2:     0x7f65eff570ad - std::panicking::default_hook::{{closure}}::ha2f043e73975ac4b\r\n                               at libstd/panicking.rs:207\r\n   3:     0x7f65eff56e0b - std::panicking::default_hook::h1db43126ea6aa931\r\n                               at libstd/panicking.rs:223\r\n   4:     0x7f65ec581c7d - core::ops::function::Fn::call::h4c0721031e98bbc2\r\n   5:     0x7f65eff575f9 - std::panicking::rust_panic_with_hook::h4de9fd85b55cffd7\r\n                               at libstd/panicking.rs:403\r\n   6:     0x7f65eff573e2 - std::panicking::begin_panic_fmt::h2cd49505797e619d\r\n                               at libstd/panicking.rs:349\r\n   7:     0x7f65eff57312 - rust_begin_unwind\r\n                               at libstd/panicking.rs:325\r\n   8:     0x7f65effc9650 - core::panicking::panic_fmt::h2bc4e257e1a74d55\r\n                               at libcore/panicking.rs:72\r\n   9:     0x7f65ed222fe8 - core::result::unwrap_failed::h3a709c5b32360d64\r\n  10:     0x7f65ed0f354e - <rustc_mir::transform::elaborate_drops::ElaborateDrops as rustc_mir::transform::MirPass>::run_pass::h660045041abc7571\r\n  11:     0x7f65ed173de7 - rustc_mir::transform::optimized_mir::{{closure}}::h7cb0d0add4eb4184\r\n  12:     0x7f65ed16e4e6 - rustc_mir::transform::optimized_mir::h7cb7fa1e30d4354e\r\n  13:     0x7f65ec19d2c4 - rustc::dep_graph::graph::DepGraph::with_task_impl::h878c22fb5122f9c6\r\n  14:     0x7f65ec130299 - rustc_errors::Handler::track_diagnostics::h918b4586db0c6597\r\n  15:     0x7f65ec3f46f7 - rustc::ty::maps::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::cycle_check::h0eef73757e8f6ac7\r\n  16:     0x7f65ec062c10 - rustc::ty::maps::<impl rustc::ty::maps::queries::optimized_mir<'tcx>>::force::hf2f063865577b696\r\n  17:     0x7f65ec063569 - rustc::ty::maps::<impl rustc::ty::maps::queries::optimized_mir<'tcx>>::try_get::hce2244b4b273c61b\r\n  18:     0x7f65ec4759fa - rustc::ty::maps::TyCtxtAt::optimized_mir::hc7898fa6d1e4cf46\r\n  19:     0x7f65ec4728e0 - rustc::ty::maps::<impl rustc::ty::context::TyCtxt<'a, 'tcx, 'lcx>>::optimized_mir::h151511e9befcfbcc\r\n  20:     0x7f65ee1996d7 - rustc_metadata::encoder::<impl rustc_metadata::isolated_encoder::IsolatedEncoder<'a, 'b, 'tcx>>::encode_optimized_mir::hc555dd2c28fae047\r\n  21:     0x7f65ee19b2ed - rustc_metadata::encoder::<impl rustc_metadata::isolated_encoder::IsolatedEncoder<'a, 'b, 'tcx>>::encode_info_for_closure::h16853ae6f89c1dc6\r\n  22:     0x7f65ee0b09fa - rustc::dep_graph::graph::DepGraph::with_ignore::h05704be9e04a9fb6\r\n  23:     0x7f65ee1864da - rustc_metadata::encoder::<impl rustc_metadata::index_builder::IndexBuilder<'a, 'b, 'tcx>>::encode_info_for_expr::hbcf521968e6680b1\r\n  24:     0x7f65ee088569 - rustc::hir::intravisit::walk_expr::haa934655629b9d52\r\n  25:     0x7f65ee08855a - rustc::hir::intravisit::walk_expr::haa934655629b9d52\r\n  26:     0x7f65ee08875a - rustc::hir::intravisit::walk_expr::haa934655629b9d52\r\n  27:     0x7f65ee088783 - rustc::hir::intravisit::walk_expr::haa934655629b9d52\r\n  28:     0x7f65ee088bc6 - rustc::hir::intravisit::walk_expr::haa934655629b9d52\r\n  29:     0x7f65ee08503e - rustc::hir::intravisit::walk_local::hfbe4bc5f617e268b\r\n  30:     0x7f65ee08897f - rustc::hir::intravisit::walk_expr::haa934655629b9d52\r\n  31:     0x7f65edff2dd4 - rustc::hir::intravisit::Visitor::visit_nested_body::hef2dfe74809641b6\r\n  32:     0x7f65ee1a9ada - rustc::hir::Crate::visit_all_item_likes::hbf8265e514e7d5ba\r\n  33:     0x7f65ee04388b - rustc_metadata::encoder::encode_metadata::he4cc4242b9c6db42\r\n  34:     0x7f65ee1bca41 - rustc_metadata::cstore_impl::<impl rustc::middle::cstore::CrateStore for rustc_metadata::cstore::CStore>::encode_metadata::h8690a83dd23db74e\r\n  35:     0x7f65ec459c40 - rustc::ty::context::TyCtxt::encode_metadata::h4066fda02cc5f5b3\r\n  36:     0x7f65e484b4f4 - rustc_trans::base::write_metadata::h92808802d3f10fb1\r\n  37:     0x7f65e48eeb86 - rustc::util::common::time::h7afbe841455208f3\r\n  38:     0x7f65e484bd99 - rustc_trans::base::trans_crate::h14dc7fce48712af1\r\n  39:     0x7f65e47fa367 - <rustc_trans::LlvmTransCrate as rustc_trans_utils::trans_crate::TransCrate>::trans_crate::hdaf690ee5d727ebc\r\n  40:     0x7f65f02edce5 - rustc::util::common::time::h3cd3b736e582b0e7\r\n  41:     0x7f65f02e1d64 - rustc_driver::driver::phase_4_translate_to_llvm::h464b5474b0ef515a\r\n  42:     0x7f65f036a159 - rustc_driver::driver::compile_input::{{closure}}::h23e22af9bd83b9e4\r\n  43:     0x7f65f036650a - <std::thread::local::LocalKey<T>>::with::hc77f0fdf41eb34ff\r\n  44:     0x7f65f0362c96 - <std::thread::local::LocalKey<T>>::with::h62237ca090d08843\r\n  45:     0x7f65f03e029e - rustc::ty::context::TyCtxt::create_and_enter::hbfec67eee3dde235\r\n  46:     0x7f65f02db217 - rustc_driver::driver::compile_input::hef0281f2d009ea71\r\n  47:     0x7f65f038facf - rustc_driver::run_compiler_impl::hfe6dafc265c4aa95\r\n  48:     0x7f65f02b5578 - syntax::with_globals::h0c3db56419a08c06\r\n  49:     0x7f65f02f5b8d - std::sys_common::backtrace::__rust_begin_short_backtrace::h78942b1d792cc36a\r\n  50:     0x7f65eff71cce - __rust_maybe_catch_panic\r\n                               at libpanic_unwind/lib.rs:102\r\n  51:     0x7f65f030189d - <F as alloc::boxed::FnBox<A>>::call_box::h7dcda0c9ae6259a6\r\n  52:     0x7f65eff68d57 - std::sys_common::thread::start_thread::hbdb0265288bf7dcc\r\n                               at /checkout/src/liballoc/boxed.rs:794\r\n                               at libstd/sys_common/thread.rs:24\r\n  53:     0x7f65eff37e18 - std::sys::unix::thread::Thread::new::thread_start::h99a7fe00c40fd1be\r\n                               at libstd/sys/unix/thread.rs:90\r\n  54:     0x7f65ea2db6b9 - start_thread\r\n  55:     0x7f65efc1741c - clone\r\n  56:                0x0 - <unknown>\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.26.1 (827013a31 2018-05-25) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nerror: Could not compile `rust_state_machine`.\r\nwarning: build failed, waiting for other jobs to finish...\r\nerror: build failed\r\n\r\nProcess finished with exit code 101\r\n```", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/51301/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/51301/timeline", "performed_via_github_app": null, "state_reason": "completed"}