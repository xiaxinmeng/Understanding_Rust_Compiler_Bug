{"url": "https://api.github.com/repos/rust-lang/rust/issues/41468", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/41468/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/41468/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/41468/events", "html_url": "https://github.com/rust-lang/rust/issues/41468", "id": 223577896, "node_id": "MDU6SXNzdWUyMjM1Nzc4OTY=", "number": 41468, "title": "Order of parameters matter when processing an unsigned value?", "user": {"login": "lfiolhais", "id": 7164049, "node_id": "MDQ6VXNlcjcxNjQwNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/7164049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lfiolhais", "html_url": "https://github.com/lfiolhais", "followers_url": "https://api.github.com/users/lfiolhais/followers", "following_url": "https://api.github.com/users/lfiolhais/following{/other_user}", "gists_url": "https://api.github.com/users/lfiolhais/gists{/gist_id}", "starred_url": "https://api.github.com/users/lfiolhais/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lfiolhais/subscriptions", "organizations_url": "https://api.github.com/users/lfiolhais/orgs", "repos_url": "https://api.github.com/users/lfiolhais/repos", "events_url": "https://api.github.com/users/lfiolhais/events{/privacy}", "received_events_url": "https://api.github.com/users/lfiolhais/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-04-22T16:59:48Z", "updated_at": "2017-04-24T21:06:15Z", "closed_at": "2017-04-24T21:06:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm not sure if this is intended behavior. I searched for similar issues but couldn't find any, sorry if this is duplicate.\r\n\r\nWhen processing an expression that is going to be stored in an unsigned type where intermediary results overflow but the final result doesn't causes the program to panic. For example:\r\n```rust\r\nfn main() {\r\n    let var: usize = 1 - 0 - 2 + 1;\r\n    println!(\"My var: {:#?}\", var);\r\n}\r\n```\r\nThe compiler issues four warnings:\r\n```\r\nwarning: attempt to subtract with overflow, #[warn(const_err)] on by default\r\n --> src/main.rs:2:22\r\n  |\r\n2 |     let var: usize = 1 - 0 - 2 + 1;\r\n  |                      ^^^^^^^^^\r\n\r\nwarning: attempt to subtract with overflow, #[warn(const_err)] on by default\r\n --> src/main.rs:2:22\r\n  |\r\n2 |     let var: usize = 1 - 0 - 2 + 1;\r\n  |                      ^^^^^^^^^\r\n\r\nwarning: this expression will panic at run-time\r\n --> src/main.rs:2:22\r\n  |\r\n2 |     let var: usize = 1 - 0 - 2 + 1;\r\n  |                      ^^^^^^^^^ attempt to subtract with overflow\r\n\r\nwarning: this expression will panic at run-time\r\n --> src/main.rs:2:22\r\n  |\r\n2 |     let var: usize = 1 - 0 - 2 + 1;\r\n  |                      ^^^^^^^^^^^^^ attempt to add with overflow\r\n\r\n```\r\nThen the program panics on runtime with `attempt to subtract with overflow` and this backtrace:\r\n```\r\nthread 'main' panicked at 'attempt to subtract with overflow', src/main.rs:2\r\nstack backtrace:\r\n   1:        0x10421ddbc - std::sys::imp::backtrace::tracing::imp::write::h21ca2762819c7ae8\r\n   2:        0x10421f29e - std::panicking::default_hook::{{closure}}::h38f99a37d00bb19b\r\n   3:        0x10421ef40 - std::panicking::default_hook::ha2186ee24b50729c\r\n   4:        0x10421f697 - std::panicking::rust_panic_with_hook::h979db19ee91d2a53\r\n   5:        0x10421f544 - std::panicking::begin_panic::h6a69f5b54391c64d\r\n   6:        0x10421f462 - std::panicking::begin_panic_fmt::h9de2343580b3c2c4\r\n   7:        0x10421f3c7 - rust_begin_unwind\r\n   8:        0x1042414f0 - core::panicking::panic_fmt::haa2997386017a96f\r\n   9:        0x1042413f4 - core::panicking::panic::h2349bf4700260ab6\r\n  10:        0x1042177fe - bug_test::main::h2f392d20ef902ff9\r\n  11:        0x1042210ba - __rust_maybe_catch_panic\r\n  12:        0x10421f916 - std::rt::lang_start::hfc9882558f9403bf\r\n  13:        0x104217839 - main\r\n```\r\n\r\nHowever, the following programs won't panic or issue any warnings:\r\n```rust\r\nfn main() {\r\n    let var: usize = 1 - 0 - (2 - 1);\r\n    println!(\"My var: {:#?}\", var);\r\n}\r\n```\r\nand\r\n```rust\r\nfn main() {\r\n    let var: usize = 1 + 1 - 0 - 2;\r\n    println!(\"My var: {:#?}\", var);\r\n}\r\n```\r\n\r\nI managed to reproduce this on stable, beta and the latest nightly (1785bca51 2017-04-21). I'm confused because all of these representations are equivalent mathematically. The result is always zero.\r\nWhat is even weirder to me is that the order of the operands matter, is this the case (I didn't look at the code)? Furthermore, putting part of the expression in parentheses negates the issue.\r\n\r\nIf this is intended behavior could you please explain why?\r\n\r\n## Meta\r\n* Stable\r\n```\r\nrustc 1.16.0 (30cf806ef 2017-03-10)\r\nbinary: rustc\r\ncommit-hash: 30cf806ef8881c41821fbd43e5cf3699c5290c16\r\ncommit-date: 2017-03-10\r\nhost: x86_64-apple-darwin\r\nrelease: 1.16.0\r\nLLVM version: 3.9\r\n```\r\n\r\nThis is my first Rust issue so if anything is missing or poorly explained I apologize in advance. \ud83d\ude04 ", "closed_by": {"login": "lfiolhais", "id": 7164049, "node_id": "MDQ6VXNlcjcxNjQwNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/7164049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lfiolhais", "html_url": "https://github.com/lfiolhais", "followers_url": "https://api.github.com/users/lfiolhais/followers", "following_url": "https://api.github.com/users/lfiolhais/following{/other_user}", "gists_url": "https://api.github.com/users/lfiolhais/gists{/gist_id}", "starred_url": "https://api.github.com/users/lfiolhais/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lfiolhais/subscriptions", "organizations_url": "https://api.github.com/users/lfiolhais/orgs", "repos_url": "https://api.github.com/users/lfiolhais/repos", "events_url": "https://api.github.com/users/lfiolhais/events{/privacy}", "received_events_url": "https://api.github.com/users/lfiolhais/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/41468/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/41468/timeline", "performed_via_github_app": null, "state_reason": "completed"}