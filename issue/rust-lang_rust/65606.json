{"url": "https://api.github.com/repos/rust-lang/rust/issues/65606", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/65606/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/65606/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/65606/events", "html_url": "https://github.com/rust-lang/rust/issues/65606", "id": 509500512, "node_id": "MDU6SXNzdWU1MDk1MDA1MTI=", "number": 65606, "title": "Suggest comparison with binary char when comparing u8 with char literal", "user": {"login": "mqudsi", "id": 606923, "node_id": "MDQ6VXNlcjYwNjkyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/606923?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mqudsi", "html_url": "https://github.com/mqudsi", "followers_url": "https://api.github.com/users/mqudsi/followers", "following_url": "https://api.github.com/users/mqudsi/following{/other_user}", "gists_url": "https://api.github.com/users/mqudsi/gists{/gist_id}", "starred_url": "https://api.github.com/users/mqudsi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mqudsi/subscriptions", "organizations_url": "https://api.github.com/users/mqudsi/orgs", "repos_url": "https://api.github.com/users/mqudsi/repos", "events_url": "https://api.github.com/users/mqudsi/events{/privacy}", "received_events_url": "https://api.github.com/users/mqudsi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1183099971, "node_id": "MDU6TGFiZWwxMTgzMDk5OTcx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-suggestion-diagnostics", "name": "A-suggestion-diagnostics", "color": "f7e101", "default": false, "description": "Area: suggestions generated by the compiler applied by cargo fix"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-10-19T19:42:03Z", "updated_at": "2019-10-19T19:43:59Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently attempting to compare a `u8` with a literal `char` gives a generic error about missing trait implementations:\r\n\r\n```rust\r\nlet mut next: u8;\r\n...\r\nwhile next != ']' {\r\n```\r\n\r\n> can't compare `u8` with `char`    no implementation for `u8 == char`   \r\n> help: the trait `std::cmp::PartialEq<char>` is not implemented for `u8`\r\n\r\nAs the comparison is being made between a single, literal char (vs a runtime value or multiple characters), I believe it is safe for a help message suggesting comparing against `b'\u2026'` instead.\r\n\r\ne.g. something along the lines of\r\n\r\n> can't compare `u8` with `char`    no implementation for `u8 == char`    \r\n> help: did you mean to compare with b'X' instead?\r\n\r\nIdeally `X` would be substituted with the actual value that was in the code.\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/65606/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/65606/timeline", "performed_via_github_app": null, "state_reason": null}