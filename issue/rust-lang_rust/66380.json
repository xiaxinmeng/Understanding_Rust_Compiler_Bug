{"url": "https://api.github.com/repos/rust-lang/rust/issues/66380", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/66380/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/66380/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/66380/events", "html_url": "https://github.com/rust-lang/rust/issues/66380", "id": 522394493, "node_id": "MDU6SXNzdWU1MjIzOTQ0OTM=", "number": 66380, "title": "Confusing error message for missing associated type", "user": {"login": "amunra", "id": 1499096, "node_id": "MDQ6VXNlcjE0OTkwOTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1499096?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amunra", "html_url": "https://github.com/amunra", "followers_url": "https://api.github.com/users/amunra/followers", "following_url": "https://api.github.com/users/amunra/following{/other_user}", "gists_url": "https://api.github.com/users/amunra/gists{/gist_id}", "starred_url": "https://api.github.com/users/amunra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amunra/subscriptions", "organizations_url": "https://api.github.com/users/amunra/orgs", "repos_url": "https://api.github.com/users/amunra/repos", "events_url": "https://api.github.com/users/amunra/events{/privacy}", "received_events_url": "https://api.github.com/users/amunra/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 149689562, "node_id": "MDU6TGFiZWwxNDk2ODk1NjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-associated-items", "name": "A-associated-items", "color": "f7e101", "default": false, "description": "Area: Associated items such as associated types and consts."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1183099971, "node_id": "MDU6TGFiZWwxMTgzMDk5OTcx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-suggestion-diagnostics", "name": "A-suggestion-diagnostics", "color": "f7e101", "default": false, "description": "Area: suggestions generated by the compiler applied by cargo fix"}, {"id": 1596122811, "node_id": "MDU6TGFiZWwxNTk2MTIyODEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-newcomer-roadblock", "name": "D-newcomer-roadblock", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error hard to understand for new users"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-13T18:24:50Z", "updated_at": "2019-12-26T06:58:51Z", "closed_at": "2019-12-26T06:58:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have encountered associated types for the first time through a build error.\r\n\r\nAssociated types are used infrequently and other programmers will probably encounter the feature for the first time in a similar manner.\r\n\r\nThe error was particularly confusing because I thought that I was asked to provide a generic type to a type that was not generic. I was left rather puzzled.\r\n\r\nIt would be particularly helpful if in this instance the compiler could use information passed in from the single call point (i.e., from `main`) to suggest a fix (`Feather<Error=String>`).\r\n\r\nThe error message:\r\n\r\n```\r\nerror[E0191]: the value of the associated type `Error` (from the trait `Feather`) must be specified\r\n  --> src/main.rs:22:83\r\n   |\r\n3  |     type Error;\r\n   |     ----------- `Error` defined here\r\n...\r\n22 | fn pick_feather<'a>(first: bool, f1: &'a dyn Feather, f2: &'a dyn Feather) -> &'a dyn Feather {\r\n   |                                                                                   ^^^^^^^^^^^ associated type `Error` must be specified\r\n```\r\n\r\nA short program to replicate the error message:\r\n\r\n```rust\r\ntrait Feather {\r\n    type Error;\r\n\r\n    fn float(&self, x: i32, y: Self::Error) -> Result<i32, Self::Error> {\r\n        if x > 0 {\r\n            Ok(x)\r\n        }\r\n        else {\r\n            Err(y)\r\n        }\r\n    }\r\n}\r\n\r\nstruct RedFeather {}\r\nimpl Feather for RedFeather {\r\n    type Error = String;\r\n}\r\n\r\nstruct BlueFeather {}\r\nimpl Feather for BlueFeather {\r\n    type Error = String;\r\n}\r\n\r\nfn pick_feather<'a>(first: bool, f1: &'a dyn Feather, f2: &'a dyn Feather) -> &'a dyn Feather {\r\n    if first {\r\n        f1\r\n    }\r\n    else {\r\n        f2\r\n    }\r\n}\r\n\r\nfn main() {\r\n    let red = RedFeather {};\r\n    let blue = BlueFeather {};\r\n    let feather = pick_feather(false, &red, &red);\r\n    feather.float(3, \"oh no\".to_owned()).unwrap();\r\n}\r\n```\r\n\r\nIdeally, the final suggestion would read:\r\n\r\n```rust\r\nfn pick_feather<'a>(\r\n    first: bool,\r\n    f1: &'a dyn Feather<Error=String>,\r\n    f2: &'a dyn Feather<Error=String>) -> &'a dyn Feather<Error=String> {\r\n```\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/66380/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/66380/timeline", "performed_via_github_app": null, "state_reason": "completed"}