{"url": "https://api.github.com/repos/rust-lang/rust/issues/41399", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/41399/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/41399/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/41399/events", "html_url": "https://github.com/rust-lang/rust/issues/41399", "id": 222800095, "node_id": "MDU6SXNzdWUyMjI4MDAwOTU=", "number": 41399, "title": "(eg) TcpStream::shutdown() can't interrupt pending I/O", "user": {"login": "dimbleby", "id": 875184, "node_id": "MDQ6VXNlcjg3NTE4NA==", "avatar_url": "https://avatars.githubusercontent.com/u/875184?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dimbleby", "html_url": "https://github.com/dimbleby", "followers_url": "https://api.github.com/users/dimbleby/followers", "following_url": "https://api.github.com/users/dimbleby/following{/other_user}", "gists_url": "https://api.github.com/users/dimbleby/gists{/gist_id}", "starred_url": "https://api.github.com/users/dimbleby/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dimbleby/subscriptions", "organizations_url": "https://api.github.com/users/dimbleby/orgs", "repos_url": "https://api.github.com/users/dimbleby/repos", "events_url": "https://api.github.com/users/dimbleby/events{/privacy}", "received_events_url": "https://api.github.com/users/dimbleby/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-04-19T16:44:10Z", "updated_at": "2017-04-19T18:48:36Z", "closed_at": "2017-04-19T18:48:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Not sure whether this one is only confusing docs, or a more serious awkwardness, or possibly just my misunderstanding.\r\n\r\nDocs for `TcpStream::shutdown()`, eg [here](https://doc.rust-lang.org/std/net/struct.TcpStream.html#method.shutdown), claim that \"This function will cause all pending and future I/O on the specified portions to return immediately\".\r\n\r\nBut is it possible for there even to be any pending I/O?  Both `read()` and `write()` take `&mut self`: so if there were pending I/O, then it would be impossible to have a reference on which to call `shutdown()` - right?\r\n\r\n(I suppose if we're being super-pedantic, it's strictly correct to say that all of \"no things\" will return immediately, but it's not very helpful!)\r\n\r\nIf I haven't misunderstood then this is at least a docs infelicity.  But perhaps it's worse than that - wouldn't it be useful to be able to call `shutdown()` on a `TcpStream`, precisely so as to interrupt `read()` or `write()` calls?\r\n\r\n(Same for other similar things eg `UdpStream`, `UnixStream`, any others that I've not thought of).", "closed_by": {"login": "dimbleby", "id": 875184, "node_id": "MDQ6VXNlcjg3NTE4NA==", "avatar_url": "https://avatars.githubusercontent.com/u/875184?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dimbleby", "html_url": "https://github.com/dimbleby", "followers_url": "https://api.github.com/users/dimbleby/followers", "following_url": "https://api.github.com/users/dimbleby/following{/other_user}", "gists_url": "https://api.github.com/users/dimbleby/gists{/gist_id}", "starred_url": "https://api.github.com/users/dimbleby/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dimbleby/subscriptions", "organizations_url": "https://api.github.com/users/dimbleby/orgs", "repos_url": "https://api.github.com/users/dimbleby/repos", "events_url": "https://api.github.com/users/dimbleby/events{/privacy}", "received_events_url": "https://api.github.com/users/dimbleby/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/41399/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/41399/timeline", "performed_via_github_app": null, "state_reason": "completed"}