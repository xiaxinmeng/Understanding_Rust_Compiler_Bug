{"url": "https://api.github.com/repos/rust-lang/rust/issues/10703", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/10703/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/10703/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/10703/events", "html_url": "https://github.com/rust-lang/rust/issues/10703", "id": 23457790, "node_id": "MDU6SXNzdWUyMzQ1Nzc5MA==", "number": 10703, "title": "Lifetime bound \"forgotten\" in a function", "user": {"login": "honzasp", "id": 64298, "node_id": "MDQ6VXNlcjY0Mjk4", "avatar_url": "https://avatars.githubusercontent.com/u/64298?v=4", "gravatar_id": "", "url": "https://api.github.com/users/honzasp", "html_url": "https://github.com/honzasp", "followers_url": "https://api.github.com/users/honzasp/followers", "following_url": "https://api.github.com/users/honzasp/following{/other_user}", "gists_url": "https://api.github.com/users/honzasp/gists{/gist_id}", "starred_url": "https://api.github.com/users/honzasp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/honzasp/subscriptions", "organizations_url": "https://api.github.com/users/honzasp/orgs", "repos_url": "https://api.github.com/users/honzasp/repos", "events_url": "https://api.github.com/users/honzasp/events{/privacy}", "received_events_url": "https://api.github.com/users/honzasp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2013-11-28T16:12:50Z", "updated_at": "2013-12-02T14:24:35Z", "closed_at": "2013-12-02T14:24:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nif a struct is bound by a lifetime which is not used in the body of the struct, this bound seems to be excluded from typechecking.\n\nConsider following functions (not valid Rust, because the function and struct bodies are omitted):\n\n```\nstruct BananaTree;\nstruct Banana<'a>;\n\nfn create_banana<'a>(tree: &'a BananaTree) -> Banana<'a>;\nfn banana_calories<'a>(banana: Banana<'a>) -> int;\nfn transform_banana<'a>(banana: Banana<'a>) -> Banana<'a>;\n```\n\n`Banana`s are created from `BananaTree`s and their lifetime must not exceed the lifetime of their tree. `banana_calories` expects the passed banana to be alive, and `transform_banana` creates a banana from another one, preserving the lifetime information.\n\nThe lifetimes should cause the following function to be rejected by the compiler, because the result of `transform_banana` has lifetime bound to the lifetime of `tree`, which is tied to the enclosing block. `leaked_banana` and the following call to `banana_calories` should then be invalid.\n\n```\nfn main() {\n  let leaked_banana = {\n    let tree = BananaTree { ... };\n    let banana = create_banana(&tree);\n    transform_banana(banana)\n  };\n  println!(\"{}\", banana_calories(leaked_banana));\n}\n```\n\n---\n\nIf the bananas and functions are defined like this:\n\n```\nstruct BananaTree { calories: int, }\nstruct Banana<'a> { calories: &'a int }\n\nfn create_banana<'a>(tree: &'a BananaTree) -> Banana<'a> {\n  Banana { calories: &tree.calories }\n}\n\nfn banana_calories<'a>(banana: Banana<'a>) -> int {\n  *banana.calories\n}\n\nfn transform_banana<'a>(banana: Banana<'a>) -> Banana<'a> {\n  banana\n}\n```\n\nThe lifetime bound `'a` in `Banana<'a>` is used in the field `calories`, forcing the borrow checks and making the invalid use shown above fail with appropriate error message (`tree` does not live long enough):\n\n```\nfn main() {\n  let leaked_banana = {\n    let tree = BananaTree { calories: 105 };\n    let banana = create_banana(&tree);\n    transform_banana(banana)\n  };\n  println!(\"{}\", banana_calories(leaked_banana));\n}\n```\n\n---\n\nOn the other hand, if the implementation is like:\n\n```\nstruct BananaTree;\nstruct Banana<'a> { calories: int }\n\nfn create_banana<'a>(tree: &'a BananaTree) -> Banana<'a> {\n  Banana { calories: 105 }\n}\n\nfn banana_calories<'a>(banana: Banana<'a>) -> int {\n  banana.calories\n}\n\nfn transform_banana<'a>(banana: Banana<'a>) -> Banana<'a> {\n  banana\n}\n```\n\nThen the lifetime bound on `Banana<'a>` is not used in the member fields at all, but it still should be tied to the lifetime of the `BananaTree` passed to `create_banana` and it should limit the use of the created banana. It doesn't work like that, though, because the following function compiles:\n\n```\nfn main() {\n  let leaked_banana = {\n    let tree = BananaTree;\n    let banana = create_banana(&tree);\n    transform_banana(banana)\n  };\n  println!(\"{}\", banana_calories(leaked_banana));\n}\n```\n\nThe lifetime of banana from `create_banana` is clearly not tied to lifetime of `tree`, because the compiler allows us to use the banana when its mother tree went out of scope.\n\nThis is in fact safe, because `Banana` didn't contain any reference to the `BananaTree`. The point is that I would like to use Rust's lifetimes in a C library bindings, where the `Banana` values live as long as their respective `BananaTree`s (as a matter of fact, the library is LLVM, banana trees are modules/functions and bananas are values).\n", "closed_by": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/10703/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/10703/timeline", "performed_via_github_app": null, "state_reason": "completed"}