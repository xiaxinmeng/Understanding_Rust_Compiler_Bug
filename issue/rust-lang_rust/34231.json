{"url": "https://api.github.com/repos/rust-lang/rust/issues/34231", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/34231/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/34231/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/34231/events", "html_url": "https://github.com/rust-lang/rust/issues/34231", "id": 159797388, "node_id": "MDU6SXNzdWUxNTk3OTczODg=", "number": 34231, "title": "Concurrency Example in The Rust Book", "user": {"login": "nslay", "id": 6295986, "node_id": "MDQ6VXNlcjYyOTU5ODY=", "avatar_url": "https://avatars.githubusercontent.com/u/6295986?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslay", "html_url": "https://github.com/nslay", "followers_url": "https://api.github.com/users/nslay/followers", "following_url": "https://api.github.com/users/nslay/following{/other_user}", "gists_url": "https://api.github.com/users/nslay/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslay/subscriptions", "organizations_url": "https://api.github.com/users/nslay/orgs", "repos_url": "https://api.github.com/users/nslay/repos", "events_url": "https://api.github.com/users/nslay/events{/privacy}", "received_events_url": "https://api.github.com/users/nslay/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-06-11T22:45:24Z", "updated_at": "2016-12-12T18:16:48Z", "closed_at": "2016-12-12T18:16:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "First of all, I really appreciate all your work on the language and documentation! I am very eager to use Rust in my work. Now, I come from the numerics side of computation. I have no problem using every single core on the machine and sometimes no problem pushing a GPU either!\n\nBut I was both shocked and disappointed by your Concurrency example:\nhttps://doc.rust-lang.org/book/concurrency.html\n\nIf I understand correctly, this example parallel code is actually a serialized solution in disguise:\n\n```\nuse std::sync::{Arc, Mutex};\nuse std::thread;\nuse std::time::Duration;\n\nfn main() {\n    let data = Arc::new(Mutex::new(vec![1, 2, 3]));\n\n    for i in 0..3 {\n        let data = data.clone();\n        thread::spawn(move || {\n            let mut data = data.lock().unwrap(); // The .lock() usage here is a bad solution and a bad example for readers like me\n            data[i] += 1;\n        });\n    }\n\n    thread::sleep(Duration::from_millis(50));\n}\n```\n\nIt is less efficient to use this example than to do a simple serial for loop over the array elements. And the Book did indeed mention that no real data race existed in the first place. Assigning elements to an array position unique to a thread is very common in numerical algorithms (e.g. finite difference methods, image processing, etc...).\n\nSo, the book leaves me wondering: How do you really solve the above problem without serializing it? Can it be done within the confines of the language's rules? Or do we have to use `unsafe { }` to insist to the compiler that we really know that no data race exists?\n\nI would suggest update this chapter with a better example. Or at least show a solution where the above algorithm can actually be parallelized without serializing it with a lock.\n", "closed_by": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/34231/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/34231/timeline", "performed_via_github_app": null, "state_reason": "completed"}