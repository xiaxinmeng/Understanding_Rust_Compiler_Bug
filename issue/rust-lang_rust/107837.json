{"url": "https://api.github.com/repos/rust-lang/rust/issues/107837", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/107837/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/107837/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/107837/events", "html_url": "https://github.com/rust-lang/rust/issues/107837", "id": 1577560510, "node_id": "I_kwDOAAsO6M5eB6m-", "number": 107837, "title": "Reached the recursion limit while instantiating <the type> in `pub` functions", "user": {"login": "Mingun", "id": 450131, "node_id": "MDQ6VXNlcjQ1MDEzMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/450131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mingun", "html_url": "https://github.com/Mingun", "followers_url": "https://api.github.com/users/Mingun/followers", "following_url": "https://api.github.com/users/Mingun/following{/other_user}", "gists_url": "https://api.github.com/users/Mingun/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mingun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mingun/subscriptions", "organizations_url": "https://api.github.com/users/Mingun/orgs", "repos_url": "https://api.github.com/users/Mingun/repos", "events_url": "https://api.github.com/users/Mingun/events{/privacy}", "received_events_url": "https://api.github.com/users/Mingun/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2023-02-09T09:44:25Z", "updated_at": "2023-04-27T03:18:45Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "This issue was reported in [quick-xml](https://github.com/tafia/quick-xml/issues/540) repo, but I think, this is a bug in `rustc`. After minification I ended with that code:\r\n\r\n```rust\r\npub fn main() {// removing \"pub\" eliminates error\r\n    use serde::ser::{SerializeStructVariant, Serializer};\r\n\r\n    let serializer = quick_xml::se::Serializer::new(String::new());\r\n\r\n    let mut state = serializer.serialize_map(None).unwrap();\r\n    serde::__private::ser::FlatMapSerializer(&mut state)\r\n        .serialize_struct_variant(\"Enum\", 0u32, \"Variant\", 0)\r\n        .unwrap().end() // Commenting this line eliminates error\r\n        .unwrap();\r\n}\r\n```\r\nUsed libraries:\r\n```toml\r\n[dependencies]\r\nquick-xml = { version = \"0.27.1\", features = [\"serialize\"] }\r\nserde = \"1.0.152\"\r\n```\r\n\r\nI expected to see this happen: this code should compile\r\n\r\nInstead, this happened:\r\n```\r\n$ cargo build\r\n   Compiling hk_modlinks v0.1.0 (/home/mingun/Projects/hk_modlinks)\r\nerror: reached the recursion limit while instantiating `<serde::__private::ser::content:... &mut &mut std::string::String>>`\r\n   --> /home/mingun/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.152/src/ser/impls.rs:433:1\r\n    |\r\n433 | deref_impl!(<'a, T: ?Sized> Serialize for &'a T where T: Serialize);\r\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n    |\r\nnote: `<serde::__private::ser::content::Content as Serialize>::serialize` defined here\r\n   --> /home/mingun/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.152/src/private/ser.rs:472:9\r\n    |\r\n472 | /         fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>\r\n473 | |         where\r\n474 | |             S: Serializer,\r\n    | |__________________________^\r\n    = note: the full type name has been written to '/home/mingun/Projects/hk_modlinks/target/debug/deps/hk_modlinks-59717a86221e1ac9.long-type.txt'\r\n    = note: this error originates in the macro `deref_impl` (in Nightly builds, run with -Z macro-backtrace for more info)\r\n\r\nerror: could not compile `hk_modlinks` due to previous error\r\n$\r\n```\r\n\r\n### Meta\r\n\r\nI've tries several compilers (the first I had, then I've updated and checked again):\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.66.1 (90743e729 2023-01-10)\r\nbinary: rustc\r\ncommit-hash: 90743e7298aca107ddaa0c202a4d3604e29bfeb6\r\ncommit-date: 2023-01-10\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.66.1\r\nLLVM version: 15.0.2\r\n```\r\n```\r\nrustc 1.67.0 (fc594f156 2023-01-24)\r\nbinary: rustc\r\ncommit-hash: fc594f15669680fa70d255faec3ca3fb507c3405\r\ncommit-date: 2023-01-24\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.67.0\r\nLLVM version: 15.0.6\r\n```\r\n```\r\nrustc 1.69.0-nightly (ef934d9b6 2023-02-08)\r\nbinary: rustc\r\ncommit-hash: ef934d9b632b8ac00276558824664c104b92b5f0\r\ncommit-date: 2023-02-08\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.69.0-nightly\r\nLLVM version: 15.0.7\r\n```\r\n\r\nContent of hk_modlinks-59717a86221e1ac9.long-type.txt (`&mut ...128...String`):\r\n```\r\n<serde::__private::ser::content::Content as Serialize>::serialize::<se::element::ElementSerializer<'_, &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut &mut std::string::String>>\r\n```\r\n\r\nThe strange thing here is that the compilation succeed if I remove `pub` modifier from the function, this is why I think this is a bug in `rustc` and not in my code. Moreover, the compiled code never create 128 `&mut` references\r\n\r\nBacktrace is not generated with `RUST_BACKTRACE=1 cargo build`.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/107837/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/107837/timeline", "performed_via_github_app": null, "state_reason": null}