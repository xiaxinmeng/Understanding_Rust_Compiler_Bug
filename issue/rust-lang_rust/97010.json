{"url": "https://api.github.com/repos/rust-lang/rust/issues/97010", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/97010/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/97010/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/97010/events", "html_url": "https://github.com/rust-lang/rust/issues/97010", "id": 1235184951, "node_id": "I_kwDOAAsO6M5Jn203", "number": 97010, "title": "E0308 expected and found are identical", "user": {"login": "jendrikw", "id": 12938023, "node_id": "MDQ6VXNlcjEyOTM4MDIz", "avatar_url": "https://avatars.githubusercontent.com/u/12938023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jendrikw", "html_url": "https://github.com/jendrikw", "followers_url": "https://api.github.com/users/jendrikw/followers", "following_url": "https://api.github.com/users/jendrikw/following{/other_user}", "gists_url": "https://api.github.com/users/jendrikw/gists{/gist_id}", "starred_url": "https://api.github.com/users/jendrikw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jendrikw/subscriptions", "organizations_url": "https://api.github.com/users/jendrikw/orgs", "repos_url": "https://api.github.com/users/jendrikw/repos", "events_url": "https://api.github.com/users/jendrikw/events{/privacy}", "received_events_url": "https://api.github.com/users/jendrikw/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-05-13T12:33:53Z", "updated_at": "2022-06-19T21:07:23Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Given the following code: [play](https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&code=fn%20rec_clone%3C%27a%3E(v%3A%20%26%27a%20str%2C%20rec%3A%20%26dyn%20Fn(%26%27a%20str)%20-%3E%20String)%20-%3E%20String%20%7B%0A%20%20%20%20todo!()%0A%7D%0A%0Apub%20fn%20clone()%20-%3E%20impl%20Fn(%26str)%20-%3E%20String%20%7B%0A%20%20%20%20fix%3A%3A%3C%26str%2C%20String%3E(rec_clone)%0A%7D%0A%0A%2F%2F%20https%3A%2F%2Fstackoverflow.com%2Fa%2F42182841%0Afn%20fix%3CA%2C%20B%3E(func%3A%20fn(A%2C%20%26dyn%20Fn(A)%20-%3E%20B)%20-%3E%20B)%20-%3E%20impl%20Fn(A)%20-%3E%20B%20%7B%0A%20%20%20%20move%20%7Cval%3A%20A%7C%20func(val%2C%20%26fix(func))%0A%7D%0A)\r\n\r\n```rust\r\nfn rec_clone<'a>(v: &'a str, rec: &dyn Fn(&'a str) -> String) -> String {\r\n    todo!()\r\n}\r\n\r\npub fn clone() -> impl Fn(&str) -> String {\r\n    fix::<&str, String>(rec_clone)\r\n}\r\n\r\n// https://stackoverflow.com/a/42182841\r\nfn fix<A, B>(func: fn(A, &dyn Fn(A) -> B) -> B) -> impl Fn(A) -> B {\r\n    move |val: A| func(val, &fix(func))\r\n}\r\n```\r\n\r\nThe current output is:\r\n\r\n```\r\nerror[E0308]: mismatched types\r\n  --> src/lib.rs:5:19\r\n   |\r\n5  | pub fn clone() -> impl Fn(&str) -> String {\r\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^ one type is more general than the other\r\n...\r\n10 | fn fix<A, B>(func: fn(A, &dyn Fn(A) -> B) -> B) -> impl Fn(A) -> B {\r\n   |                                                    ---------------\r\n   |                                                    |\r\n   |                                                    the expected opaque type\r\n   |                                                    the found opaque type\r\n   |\r\n   = note: expected associated type `<impl Fn(&str)-> String as FnOnce<(&str,)>>::Output`\r\n              found associated type `<impl Fn(&str)-> String as FnOnce<(&str,)>>::Output`\r\n```\r\n\r\nIt's irritating that expected and found are the same. Also \"one type is more general than the other\" could give an explanation *why* one is more general (like, what parameter). And, I don't know how `FnOnce::Output` is relevant.\r\n\r\nOne more thing: When you delete the return type from the signature of clone, it says ``expected unit type `()` found opaque type `impl Fn(&Fix<FC>)-> Fix<FC>` ``, which when implemented, doesn't work.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/97010/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/97010/timeline", "performed_via_github_app": null, "state_reason": null}