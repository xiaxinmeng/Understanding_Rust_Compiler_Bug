{"url": "https://api.github.com/repos/rust-lang/rust/issues/44225", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/44225/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/44225/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/44225/events", "html_url": "https://github.com/rust-lang/rust/issues/44225", "id": 254460217, "node_id": "MDU6SXNzdWUyNTQ0NjAyMTc=", "number": 44225, "title": "request: allow `-fsanitize-blacklist=/path/to/blacklist/file` to squelch sanitizer false positives", "user": {"login": "spacejam", "id": 1505488, "node_id": "MDQ6VXNlcjE1MDU0ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/1505488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spacejam", "html_url": "https://github.com/spacejam", "followers_url": "https://api.github.com/users/spacejam/followers", "following_url": "https://api.github.com/users/spacejam/following{/other_user}", "gists_url": "https://api.github.com/users/spacejam/gists{/gist_id}", "starred_url": "https://api.github.com/users/spacejam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spacejam/subscriptions", "organizations_url": "https://api.github.com/users/spacejam/orgs", "repos_url": "https://api.github.com/users/spacejam/repos", "events_url": "https://api.github.com/users/spacejam/events{/privacy}", "received_events_url": "https://api.github.com/users/spacejam/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-31T20:36:27Z", "updated_at": "2017-09-01T10:34:13Z", "closed_at": "2017-09-01T10:34:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "The LLVM sanitizers are invaluable tools while writing unsafe code. However, they are a bit naive, and don't pick up on things like raw memory fences or addresses accessed in safe ways, but without explicit atomic variables facilitating their access. This is a huge headache for people writing unsafe code, and they often ignore tsan because they would be underwater in false positives by using them.\r\n\r\nWould it be possible to support passing in the `-fsanitize-blacklist=/path/to/blacklist/file` argument for the sanitizers as clang allows? This would be an amazing help for selectively muting known false positives (like the `lazy_static` crate).\r\n\r\nAlso, LLVM supports `__attribute__((no_sanitize(\"thread\")))` (and the ability to suppress other sanitizers as well). Would support for this attribute be something that would be welcome in rust? I am unfamiliar with the path forward for adding support for various attributes but this is something that causes me a lot of pain, and I'd be willing to work on it if folks are receptive.", "closed_by": {"login": "spacejam", "id": 1505488, "node_id": "MDQ6VXNlcjE1MDU0ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/1505488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spacejam", "html_url": "https://github.com/spacejam", "followers_url": "https://api.github.com/users/spacejam/followers", "following_url": "https://api.github.com/users/spacejam/following{/other_user}", "gists_url": "https://api.github.com/users/spacejam/gists{/gist_id}", "starred_url": "https://api.github.com/users/spacejam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spacejam/subscriptions", "organizations_url": "https://api.github.com/users/spacejam/orgs", "repos_url": "https://api.github.com/users/spacejam/repos", "events_url": "https://api.github.com/users/spacejam/events{/privacy}", "received_events_url": "https://api.github.com/users/spacejam/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/44225/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/44225/timeline", "performed_via_github_app": null, "state_reason": "completed"}