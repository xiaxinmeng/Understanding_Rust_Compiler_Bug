{"url": "https://api.github.com/repos/rust-lang/rust/issues/59450", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/59450/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/59450/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/59450/events", "html_url": "https://github.com/rust-lang/rust/issues/59450", "id": 425683740, "node_id": "MDU6SXNzdWU0MjU2ODM3NDA=", "number": 59450, "title": "Targeted suggestions for specific \"no method\" errors on standard library types", "user": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1183099971, "node_id": "MDU6TGFiZWwxMTgzMDk5OTcx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-suggestion-diagnostics", "name": "A-suggestion-diagnostics", "color": "f7e101", "default": false, "description": "Area: suggestions generated by the compiler applied by cargo fix"}, {"id": 1596122811, "node_id": "MDU6TGFiZWwxNTk2MTIyODEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-newcomer-roadblock", "name": "D-newcomer-roadblock", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error hard to understand for new users"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-03-26T22:52:20Z", "updated_at": "2023-01-23T22:15:10Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Rustc currently shows a perfectly reasonable error message when calling a nonexistent method:\r\n\r\n```rust\r\nuse std::collections::BTreeSet;\r\n\r\nfn main() {\r\n    let mut set = BTreeSet::new();\r\n    set.push(\"\");\r\n}\r\n```\r\n\r\n```console\r\nerror[E0599]: no method named `push` found for type `std::collections::BTreeSet<_>` in the current scope\r\n --> src/main.rs:5:9\r\n  |\r\n5 |     set.push(\"\");\r\n  |         ^^^^\r\n```\r\n\r\n<br>\r\n\r\nBut for specific frequently encountered cases, it would be great to show a more targeted error that gives the name of the method you almost definitely meant to call, despite not being similar enough to trigger the \"did you mean\" suggestion.\r\n\r\nCandidates would be cases that arise often from refactoring (this applies to BTreeSet::push, which I see every now and then after replacing a Vec with a BTreeSet) or cases of a Rust API being named differently from an equivalent C++ API.\r\n\r\n- BTreeSet::push \u27f6 suggest `insert`\r\n- [Vec::push_back](https://en.cppreference.com/w/cpp/container/vector/push_back) \u27f6 suggest `push`\r\n- VecDeque::push \u27f6 suggest `push_back`\r\n- Vec::length, [Vec::size](https://en.cppreference.com/w/cpp/container/vector/size) \u27f6 suggest `len`", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/59450/reactions", "total_count": 6, "+1": 6, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/59450/timeline", "performed_via_github_app": null, "state_reason": null}