{"url": "https://api.github.com/repos/rust-lang/rust/issues/81974", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/81974/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/81974/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/81974/events", "html_url": "https://github.com/rust-lang/rust/issues/81974", "id": 805883572, "node_id": "MDU6SXNzdWU4MDU4ODM1NzI=", "number": 81974, "title": "Compiler panic using fn_traits", "user": {"login": "AlecsFerra", "id": 35380179, "node_id": "MDQ6VXNlcjM1MzgwMTc5", "avatar_url": "https://avatars.githubusercontent.com/u/35380179?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlecsFerra", "html_url": "https://github.com/AlecsFerra", "followers_url": "https://api.github.com/users/AlecsFerra/followers", "following_url": "https://api.github.com/users/AlecsFerra/following{/other_user}", "gists_url": "https://api.github.com/users/AlecsFerra/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlecsFerra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlecsFerra/subscriptions", "organizations_url": "https://api.github.com/users/AlecsFerra/orgs", "repos_url": "https://api.github.com/users/AlecsFerra/repos", "events_url": "https://api.github.com/users/AlecsFerra/events{/privacy}", "received_events_url": "https://api.github.com/users/AlecsFerra/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 46741598, "node_id": "MDU6TGFiZWw0Njc0MTU5OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-test", "name": "E-needs-test", "color": "02e10c", "default": false, "description": "Call for participation: writing correctness tests"}, {"id": 122406831, "node_id": "MDU6TGFiZWwxMjI0MDY4MzE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-closures", "name": "A-closures", "color": "f7e101", "default": false, "description": "Area: closures (`|args| { .. }`)"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}, {"id": 1657845351, "node_id": "MDU6TGFiZWwxNjU3ODQ1MzUx", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-unboxed_closures", "name": "F-unboxed_closures", "color": "f9c0cc", "default": false, "description": "`#![feature(unboxed_closures)]`"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2021-02-10T21:20:17Z", "updated_at": "2023-04-30T16:10:52Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\n```Rust\r\n#![feature(unboxed_closures)]\r\n#![feature(fn_traits)]\r\n\r\nuse std::collections::HashMap;\r\nuse std::hash::Hash;\r\n\r\nstruct CachedFun<A, B>{\r\n  cache: HashMap<A, B>,\r\n  fun: fn(&mut CachedFun<A, B>, A) -> B\r\n}\r\n\r\nimpl<A: Eq + Hash, B> CachedFun<A, B> {\r\n    fn new(fun: fn(&mut Self, A) -> B) -> Self {\r\n        CachedFun {\r\n            cache: HashMap::new(),\r\n            fun\r\n        }\r\n    }\r\n}\r\n\r\nimpl<A, B> FnOnce<A> for CachedFun<A, B> where\r\n    A: Eq + Hash + Clone,\r\n    B: Clone,\r\n{\r\n    type Output = B;\r\n    extern \"rust-call\" fn call_once(mut self, a: A) -> Self::Output {\r\n        self.call_mut(a)\r\n    }\r\n}\r\n\r\n\r\nimpl<A, B> FnMut<A> for CachedFun<A, B> where\r\n    A: Eq + Hash + Clone,\r\n    B: Clone,\r\n{\r\n    extern \"rust-call\" fn call_mut(&mut self, a: A) -> Self::Output {\r\n        self.cache.get(&a)\r\n            .map(|a| a.clone())\r\n            .unwrap_or_else(|| {\r\n                let b = (self.fun)(self, a.clone());\r\n                self.cache.insert(a, b.clone());\r\n                b\r\n            })\r\n    }\r\n}\r\n\r\nfn main() -> () {\r\n    let pesce = |y: &mut CachedFun<i32, i32>, x| x + 1;\r\n    let cachedcoso = CachedFun::new(pesce);\r\n    cachedcoso.call_once(1);\r\n}\r\n```\r\n[playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=ebf16c8273c6076fd56838606a78cacc)\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\n Build using the Nightly version: 1.52.0-nightly (2021-02-09 097bc6a84f2280a889b9)\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nerror: internal compiler error: /rustc/097bc6a84f2280a889b9ab4b544f27851a978927/compiler/rustc_middle/src/ty/layout.rs:2693:21: argument to function with \"rust-call\" ABI is not a tuple\r\n\r\nthread 'rustc' panicked at 'Box<Any>', /rustc/097bc6a84f2280a889b9ab4b544f27851a978927/library/std/src/panic.rs:59:5\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n```\r\n</p>\r\n</details>\r\n\r\nNote: I have the same issue even without a closure or by using the mut call\r\n\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/81974/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/81974/timeline", "performed_via_github_app": null, "state_reason": null}