{"url": "https://api.github.com/repos/rust-lang/rust/issues/71722", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/71722/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/71722/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/71722/events", "html_url": "https://github.com/rust-lang/rust/issues/71722", "id": 610433802, "node_id": "MDU6SXNzdWU2MTA0MzM4MDI=", "number": 71722, "title": "Error handling of non references when expecting a references (borrow)", "user": {"login": "ralpha", "id": 2608639, "node_id": "MDQ6VXNlcjI2MDg2Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/2608639?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ralpha", "html_url": "https://github.com/ralpha", "followers_url": "https://api.github.com/users/ralpha/followers", "following_url": "https://api.github.com/users/ralpha/following{/other_user}", "gists_url": "https://api.github.com/users/ralpha/gists{/gist_id}", "starred_url": "https://api.github.com/users/ralpha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ralpha/subscriptions", "organizations_url": "https://api.github.com/users/ralpha/orgs", "repos_url": "https://api.github.com/users/ralpha/repos", "events_url": "https://api.github.com/users/ralpha/events{/privacy}", "received_events_url": "https://api.github.com/users/ralpha/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1359848690, "node_id": "MDU6TGFiZWwxMzU5ODQ4Njkw", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-mcve", "name": "E-needs-mcve", "color": "02e10c", "default": false, "description": "Call for participation: This issue needs a Minimal Complete and Verifiable Example"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-30T22:37:26Z", "updated_at": "2020-04-30T22:44:39Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "This is in mostly a re-post of https://github.com/diesel-rs/diesel/issues/2380\r\n\r\nI tried this code:\r\n\r\nI used the code from: https://docs.diesel.rs/diesel/associations/index.html\r\n```rust\r\nuse schema::{posts, users};\r\n\r\n#[derive(Identifiable, Queryable, PartialEq, Debug)]\r\n#[table_name = \"users\"]\r\npub struct User {\r\n    id: i32,\r\n    name: String,\r\n}\r\n\r\n#[derive(Identifiable, Queryable, Associations, PartialEq, Debug)]\r\n#[belongs_to(User)]\r\n#[table_name = \"posts\"]\r\npub struct Post {\r\n    id: i32,\r\n    user_id: i32,\r\n    title: String,\r\n}\r\n\r\nlet user = users.find(2).get_result::<User>(&connection)?;\r\nlet users_post = Post::belonging_to(&user)\r\n    .first(&connection)?;\r\nlet expected = Post { id: 3, user_id: 2, title: \"My first post too\".into() };\r\nassert_eq!(expected, users_post);\r\n```\r\n\r\nThis code works, as it should.\r\nBut when changing the line from:\r\n```\r\nlet users_post = Post::belonging_to(&user)\r\n```\r\nto (the `&` is removed )\r\n```\r\nlet users_post = Post::belonging_to(user)\r\n```\r\n\r\nThe compiler gives an error that is very hard to figure out:\r\n```\r\nerror[E0277]: the trait bound `Post: diesel::BelongingToDsl<User>` is not satisfied\r\n  --> src/main.rs:30:29\r\n   |\r\n30 |     let _users_post: Post = Post::belonging_to(user)\r\n   |                             ^^^^^^^^^^^^^^^^^^ the trait `diesel::BelongingToDsl<User>` is not implemented for `Post`\r\n   |\r\n   = note: required by `diesel::BelongingToDsl::belonging_to`\r\n\r\nerror: aborting due to previous error\r\n```\r\nThis error is not so useful. \r\nAn error like this could be **much** more helpful: (the error below is handcrafted from other errors)\r\n```\r\nerror[E0308]: mismatched types\r\n  --> src/main.rs:30:48\r\n   |\r\n30 |     let _users_post: Post = Post::belonging_to(user)\r\n   |                                                ^^^^\r\n   |                                                |\r\n   |                                           expected reference, found struct `User`\r\n   |                                           help: consider borrowing here: `&user`\r\n   |\r\n   = note: expected reference `&_`\r\n                 found struct `User`\r\n\r\nerror: aborting due to previous error\r\n```\r\n\r\nGiving better errors would real help here.\r\n\r\nI think this might have something to do with many layers of generic data types. But I am not sure at all. I was unable to reproduce this with shorter code.\r\n\r\n### Meta\r\nSorry but don't want to try this under nightly. (Already spending to much time on this error)\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.43.0 (4fb7144ed 2020-04-20)\r\nbinary: rustc\r\ncommit-hash: 4fb7144ed159f94491249e86d5bbd033b5d60550\r\ncommit-date: 2020-04-20\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.43.0\r\nLLVM version: 9.0\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/71722/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/71722/timeline", "performed_via_github_app": null, "state_reason": null}