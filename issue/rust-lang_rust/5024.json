{"url": "https://api.github.com/repos/rust-lang/rust/issues/5024", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/5024/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/5024/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/5024/events", "html_url": "https://github.com/rust-lang/rust/issues/5024", "id": 11139494, "node_id": "MDU6SXNzdWUxMTEzOTQ5NA==", "number": 5024, "title": "enum discriminant should only be as big as needed", "user": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-02-19T02:52:44Z", "updated_at": "2013-03-14T21:28:11Z", "closed_at": "2013-03-14T21:28:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I don't think there's any need to make these 64-bit, or even require that they be 32-bit. It's somewhat surprising how big stuff like `Option<()>` is at the moment. It's very painful for stuff like `SmallIntMap` and `Deque` that use `~[Option<T>]`, and for implementing set types as wrappers around map types.\n\nFor compatibility with C code, a `#[discriminant = c_int]` attribute can be offered to choose whatever primitive integer type is desired (C++11 has this feature too, as `class enum foo: uint8_t`)\n", "closed_by": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/5024/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/5024/timeline", "performed_via_github_app": null, "state_reason": "completed"}