{"url": "https://api.github.com/repos/rust-lang/rust/issues/83193", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/83193/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/83193/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/83193/events", "html_url": "https://github.com/rust-lang/rust/issues/83193", "id": 832770585, "node_id": "MDU6SXNzdWU4MzI3NzA1ODU=", "number": 83193, "title": "remove redundant clones via mir opt?", "user": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1927601458, "node_id": "MDU6TGFiZWwxOTI3NjAxNDU4", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-mir-opt", "name": "A-mir-opt", "color": "f7e101", "default": false, "description": "Area: MIR optimizations"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-03-16T12:55:53Z", "updated_at": "2023-02-22T10:57:57Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "I wonder if it is possible to have an optimization pass that removes redundant clones if we know that `.clone()` does not do anything funky and that the original object would have been untouched and dropped  in the same block where it was cloned.\r\n\r\nThere's a clippy lint which tries to warn about useless clones https://rust-lang.github.io/rust-clippy/master/index.html#redundant_clone\r\n\r\n\r\n\r\nThe pass could optimize something like\r\n````rust\r\n#[derive(Clone)]\r\npub struct S {\r\n    inner: String,\r\n}\r\n\r\npub fn a(a: S) -> S {\r\n    a.clone()\r\n}\r\n````\r\nto\r\n````rust\r\n#[derive(Clone)]\r\npub struct S {\r\n    inner: String,\r\n}\r\n\r\npub fn a(a: S) -> S {\r\n    a // just return the object\r\n}\r\n````\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/83193/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/83193/timeline", "performed_via_github_app": null, "state_reason": null}