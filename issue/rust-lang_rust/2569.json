{"url": "https://api.github.com/repos/rust-lang/rust/issues/2569", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/2569/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/2569/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/2569/events", "html_url": "https://github.com/rust-lang/rust/issues/2569", "id": 5010357, "node_id": "MDU6SXNzdWU1MDEwMzU3", "number": 2569, "title": "Change inner attribute syntax for clarity and consistency", "user": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 36996, "node_id": "MDU6TGFiZWwzNjk5Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-easy", "name": "E-easy", "color": "02e10c", "default": false, "description": "Call for participation: Experience needed to fix: Easy / not much (good first issue)"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/rust-lang/rust/milestones/20", "html_url": "https://github.com/rust-lang/rust/milestone/20", "labels_url": "https://api.github.com/repos/rust-lang/rust/milestones/20/labels", "id": 452034, "node_id": "MDk6TWlsZXN0b25lNDUyMDM0", "number": 20, "title": "1.0", "description": "This will be the first major release of Rust, where we offer some guaranteed level of support and backwards compatibility.\r\n\r\nThe significant criteria for this release are:\r\n\r\n* Language backwards compatibility - All major features are in, and in their final form. Generally, the only new language features added after this milestone must be backwards compatible, or to fix soundness holes, though we do expect to have some leeway to make small incompatible fixes that have low impact on existing code bases.\r\n\r\n* Library stability - We have a system of measuring and ensuring the stability of API's, and a significant portion of the standard library is declared stable. Stable API's will not change. Large portions of the standard library need to be stable for 1.0, including primitive types, vectors, strings, option, numerics, collections, some I/O and concurrency.\r\n\r\n* User experience - The system is polished and the presentation is complete and professional. New users have a clear path to using and learning the system. This encompasses the web site, documentation, installation, and tooling.\r\n", "creator": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 376, "state": "closed", "created_at": "2013-10-10T18:48:33Z", "updated_at": "2016-08-28T23:13:24Z", "due_on": "2015-05-15T07:00:00Z", "closed_at": "2015-05-21T20:59:13Z"}, "comments": 68, "created_at": "2012-06-11T19:39:03Z", "updated_at": "2014-04-12T03:54:52Z", "closed_at": "2014-03-29T01:26:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As discussed in #2568, the trailing semicolon to differentiate 'inner' from 'outer' attributes is not intuitive. Also, #2498 will add doc comments as a special form of attribute, which will differentiate 'inner' doc comments using doxygen's `/**<  */` syntax. To make inner attribute syntax more consistent with doc comments and more visually distinct I would like to change the inner attribute syntax to:\n\n`#<attribute>`\n\nThe meaning would still be the same - it's an inner attribute - but in practice you would probably think of them as 'crate attributes' or 'module attributes' since they typically would appear at the top of files and apply to whatever the file represents.\n\nNo attribute is followed by a semicolon.\n\n---\n\nAdded clarification for people visiting this bug in the future (e.g. for triage), mostly to explain the \"inner\" vs \"outer\" distinction, because that terminology is not used in the Rust manual: _Currently_ attributes in Rust can either be terminated by a semi-colon, or they can leave out the semi-colon; the former denotes an \"inner attribute\", which applies to the (entire) entity that the attribute is declared within, and the latter denotes an \"outer attribute\", which must be followed by an entity (and applies solely to that entity).\n\nThis bug is discussing a number of alternatives to that syntax.  Lets see if we can enumerate the proposals and how much interest they have garnered.  (Most of the proposals keep the existing outer attribute syntax unchanged, but there is one exception, so I include it in my examples below.)\n1. (current) semi-colon inner: `mod foo { #[outer(attr)] mod bar { #[inner(attr)]; } }`\n2. brson's orginal angle-bracketed inner: `mod foo { #[outer(attr)] mod bar { #<inner(attr)> } }`\n3. bstrie leading exclamation inner: `mod foo { #[outer(attr)] mod bar { #![inner(attr)] } }`\n4. graydon nested exclamation inner: `mod foo { #[outer(attr)] mod bar { #[!inner(attr)] } }`\n5. brson bracket-less for both, leading exclamation inner: `mod foo { #outer(attr) mod bar { #! inner(attr) } }`\n6. bstrie bracketed-inner, bracket-less outer: `mod foo { #outer(attr) mod bar { #[inner(attr)] } }`\n7. pnkfelix semi-colon terminated bracket-less inner, bracketed outer: `mod foo { #[outer(attr)] mod bar { #inner(attr); } }`\n\nNote also of course that we have indeed now switched to denoting macros with a trailing `!` as discussed in the comments, which paves the way for the bracket-less forms.\n", "closed_by": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/2569/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/2569/timeline", "performed_via_github_app": null, "state_reason": "completed"}