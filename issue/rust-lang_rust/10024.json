{"url": "https://api.github.com/repos/rust-lang/rust/issues/10024", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/10024/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/10024/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/10024/events", "html_url": "https://github.com/rust-lang/rust/issues/10024", "id": 21429761, "node_id": "MDU6SXNzdWUyMTQyOTc2MQ==", "number": 10024, "title": "RFC: change import syntax to `use ::some::absolute::path;`", "user": {"login": "ben0x539", "id": 24142, "node_id": "MDQ6VXNlcjI0MTQy", "avatar_url": "https://avatars.githubusercontent.com/u/24142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ben0x539", "html_url": "https://github.com/ben0x539", "followers_url": "https://api.github.com/users/ben0x539/followers", "following_url": "https://api.github.com/users/ben0x539/following{/other_user}", "gists_url": "https://api.github.com/users/ben0x539/gists{/gist_id}", "starred_url": "https://api.github.com/users/ben0x539/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ben0x539/subscriptions", "organizations_url": "https://api.github.com/users/ben0x539/orgs", "repos_url": "https://api.github.com/users/ben0x539/repos", "events_url": "https://api.github.com/users/ben0x539/events{/privacy}", "received_events_url": "https://api.github.com/users/ben0x539/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2013-10-23T02:08:51Z", "updated_at": "2017-08-03T06:49:04Z", "closed_at": "2013-10-24T17:29:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "as in, don't allow relative paths in `use` items but require that they're explicitly absolute. `use ::std::os;` instead of `use std::os;` etc. (`use super::` should probably remain as it is.)\n\nI've seen this brought up a few times when people got confused about paths in `use` being implicitly absolute unlike paths elsewhere, which are implicitly relative, but I don't think there's been any real discussion on it.\n\nimo it is somewhat surprising that, eg., `std::os::args()` in an expression position in a non-toplevel-mod doesn't work while `use std::os::args; args()` does, but I'm not sure whether that merits all the extra `::` keystrokes I'm proposing here.\n\nToo ugly? Not helpful? Not sure! :(\n", "closed_by": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/10024/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/10024/timeline", "performed_via_github_app": null, "state_reason": "completed"}