{"url": "https://api.github.com/repos/rust-lang/rust/issues/78344", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/78344/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/78344/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/78344/events", "html_url": "https://github.com/rust-lang/rust/issues/78344", "id": 728952409, "node_id": "MDU6SXNzdWU3Mjg5NTI0MDk=", "number": 78344, "title": "Rustdoc doctest attribute splitting is probably too liberal", "user": {"login": "casey", "id": 1945, "node_id": "MDQ6VXNlcjE5NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/1945?v=4", "gravatar_id": "", "url": "https://api.github.com/users/casey", "html_url": "https://github.com/casey", "followers_url": "https://api.github.com/users/casey/followers", "following_url": "https://api.github.com/users/casey/following{/other_user}", "gists_url": "https://api.github.com/users/casey/gists{/gist_id}", "starred_url": "https://api.github.com/users/casey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/casey/subscriptions", "organizations_url": "https://api.github.com/users/casey/orgs", "repos_url": "https://api.github.com/users/casey/repos", "events_url": "https://api.github.com/users/casey/events{/privacy}", "received_events_url": "https://api.github.com/users/casey/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 203738, "node_id": "MDU6TGFiZWwyMDM3Mzg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-rustdoc", "name": "T-rustdoc", "color": "bfd4f2", "default": false, "description": "Relevant to the rustdoc team, which will review and decide on the PR/issue."}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 1118559391, "node_id": "MDU6TGFiZWwxMTE4NTU5Mzkx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-doctests", "name": "A-doctests", "color": "f7e101", "default": false, "description": "Area: Documentation tests, run by rustdoc"}, {"id": 2499041632, "node_id": "MDU6TGFiZWwyNDk5MDQxNjMy", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-markdown-parsing", "name": "A-markdown-parsing", "color": "f7e101", "default": false, "description": "Area: Markdown parsing for doc-comments"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-10-25T06:26:26Z", "updated_at": "2021-02-26T02:58:21Z", "closed_at": "2021-02-26T02:58:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I was thinking about [proposing a new doctest attribute](https://github.com/casey/rfcs/blob/doctest-name/text/0000-doctest-name.md) of the form `name=TEXT` that would allow giving a documentation tests names which would be printed when they run. \r\n\r\nI was looking at what it would take to implement this change, so I checked out the way that doctest attributes are parsed from markdown info strings, and found that they are split using the following code:\r\n\r\n```rust\r\nlet tokens = string.split(|c: char| !(c == '_' || c == '-' || c.is_alphanumeric()));\r\n```\r\n\r\n(\"info string\" is the name that common mark and GFM use for the text that follows a ```` ``` ````.)\r\n\r\nThis conflicts with the `name=foo` syntax that I was hoping to use, since the attribute would be split on the `=`.\r\n\r\nI think this behavior also conflicts with how people think the feature works, since a few people told me that attributes are split on `,`, which is also [what Clippy does](https://github.com/rust-lang/rust-clippy/blob/8b70b84639a368eafbc278dbdd93a6286abf23b2/clippy_lints/src/doc.rs#L409).\r\n\r\nMy feeling is that the current attribute splitting is probably too liberal in what it accepts, and prevents otherwise desirable attributes, such as attributes of the form `foo=bar`, or attributes with more freeform text, from being possible.\r\n\r\nA few thoughts:\r\n\r\n- Is this worth worrying about at all? It's unfortunate, but it's not a *huge* deal, since workarounds like having attributes of the form `foo-bar` are possible.\r\n\r\n- If nobody (according to crater) is relying on the liberal splitting, would it be acceptable to consider this to be a bug, and change it to just split on `,`? Of course, this could break non-public code.\r\n\r\n- Would it be worth doing as part of an edition? It would be pretty easy to automatically transform info strings from being whatever-split to being comma split as part of an edition upgrade. It would also be easy to create a lint or warning for it, just check that the current splitting rules and comma splitting produce the same attributes, and warn if they don't.", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/78344/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/78344/timeline", "performed_via_github_app": null, "state_reason": "completed"}