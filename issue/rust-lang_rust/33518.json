{"url": "https://api.github.com/repos/rust-lang/rust/issues/33518", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/33518/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/33518/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/33518/events", "html_url": "https://github.com/rust-lang/rust/issues/33518", "id": 153819595, "node_id": "MDU6SXNzdWUxNTM4MTk1OTU=", "number": 33518, "title": "Performance issue in `write_all` (`Vec::extend_from_slice`)", "user": {"login": "frankmcsherry", "id": 5741500, "node_id": "MDQ6VXNlcjU3NDE1MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/5741500?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frankmcsherry", "html_url": "https://github.com/frankmcsherry", "followers_url": "https://api.github.com/users/frankmcsherry/followers", "following_url": "https://api.github.com/users/frankmcsherry/following{/other_user}", "gists_url": "https://api.github.com/users/frankmcsherry/gists{/gist_id}", "starred_url": "https://api.github.com/users/frankmcsherry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frankmcsherry/subscriptions", "organizations_url": "https://api.github.com/users/frankmcsherry/orgs", "repos_url": "https://api.github.com/users/frankmcsherry/repos", "events_url": "https://api.github.com/users/frankmcsherry/events{/privacy}", "received_events_url": "https://api.github.com/users/frankmcsherry/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-05-09T16:45:44Z", "updated_at": "2016-09-12T08:33:49Z", "closed_at": "2016-09-12T08:33:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi folks. Chatted a bit on IRC, seemed to think this wasn't obviously a dup, so reporting here.\n\nI'm using `write_all` to push some bytes into a buffer. If I do this in-line, all goes well performance-wise (memcpy speeds; about 50GB/s on my machine). If I put it in a method, even with a `#[inline(always)]` attribute, it drops down to about 1GB/s (and assembly looks like a loop doing something).\n\nThe problem goes away if I don't push the leading 24 bytes on using `write_all`. Meaning, if I don't push them on, great! If I call `push(0u8);` 24 times, also great! Something about the existence of the preceding `write_all` seems to tank the perf of the second `write_all` (the big one). If I push 32 bytes (i.e. use a `&[0u8; 32]`) the problem goes away as well (quadword alignment?). \n\nBut there never seems to be a problem with the manually inlined code; it always goes nice and fast.\n\n``` rust\nextern crate time;\n\nuse std::io::Write;\n\nfn main() {\n\n    let dataz = vec![0u8; 1 << 20];\n    let mut bytes = Vec::new();\n\n    let rounds = 1_000;\n    let start = time::precise_time_ns();\n\n    for _ in 0..rounds {\n        bytes.clear();\n\n        // these two: \"average time: 81135\"\n        // bytes.write_all(&[0u8; 24]).unwrap();\n        // bytes.write_all(&dataz[..]).unwrap();\n\n        // this one: \"average time: 530736\"\n        test(&dataz, &mut bytes)\n    }\n\n    println!(\"average time: {:?}\", (time::precise_time_ns() - start) / rounds);\n\n}\n\n#[inline(always)]\nfn test(typed: &Vec<u8>, bytes: &mut Vec<u8>) {\n    // comment first line out to go fast!\n    // weirdly, to me: if you replace the first line with 24x `bytes.push(0u8)` you get good performance.\n    bytes.write_all(&[0u8; 24]).unwrap();\n    bytes.write_all(&typed[..]).unwrap();\n}\n```\n\n**Edit**: stable, beta, and nightly.\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/33518/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/33518/timeline", "performed_via_github_app": null, "state_reason": "completed"}