{"url": "https://api.github.com/repos/rust-lang/rust/issues/65734", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/65734/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/65734/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/65734/events", "html_url": "https://github.com/rust-lang/rust/issues/65734", "id": 511551073, "node_id": "MDU6SXNzdWU1MTE1NTEwNzM=", "number": 65734, "title": "Misleading error message with Trait and unimplemented std::marker::Sized", "user": {"login": "Weasy666", "id": 11967542, "node_id": "MDQ6VXNlcjExOTY3NTQy", "avatar_url": "https://avatars.githubusercontent.com/u/11967542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Weasy666", "html_url": "https://github.com/Weasy666", "followers_url": "https://api.github.com/users/Weasy666/followers", "following_url": "https://api.github.com/users/Weasy666/following{/other_user}", "gists_url": "https://api.github.com/users/Weasy666/gists{/gist_id}", "starred_url": "https://api.github.com/users/Weasy666/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Weasy666/subscriptions", "organizations_url": "https://api.github.com/users/Weasy666/orgs", "repos_url": "https://api.github.com/users/Weasy666/repos", "events_url": "https://api.github.com/users/Weasy666/events{/privacy}", "received_events_url": "https://api.github.com/users/Weasy666/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-23T20:22:56Z", "updated_at": "2023-02-03T15:31:01Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "When doing something like this\r\n\r\n``` rust\r\nuse std::path::{Path, PathBuf};\r\n\r\npub trait Control {\r\n    type Output;\r\n    fn open<P: AsRef<Path>>(path: P) -> Result<Self::Output, String>;\r\n}\r\n\r\n#[derive(Debug)]\r\npub struct Foo {\r\n    path: Path,\r\n}\r\n\r\nimpl Control for Foo {\r\n    type Output = Self;\r\n\r\n    fn open<P: AsRef<Path>>(path: P) -> Result<Self, String> {\r\n        Ok(Foo {\r\n            path: path.as_ref().into(),\r\n        })\r\n    }\r\n}\r\n\r\nfn main() {\r\n    let path = Path::new(\"/test\");\r\n    let c = Foo::open(path);\r\n    print!(\"{:?}\", c);\r\n}\r\n```\r\n> [Playground Link](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=4f343d8cacd8c0d40e889a389c17d42c)\r\n\r\nyou get an error like this\r\n```\r\nCompiling playground v0.0.1 (/playground)\r\nerror[E0277]: the size for values of type `[u8]` cannot be known at compilation time\r\n  --> src/main.rs:14:6\r\n   |\r\n14 | impl Control for Foo {\r\n   |      ^^^^^^^ doesn't have a size known at compile-time\r\n   |\r\n   = help: within `Foo`, the trait `std::marker::Sized` is not implemented for `[u8]`\r\n   = note: to learn more, visit <https://doc.rust-lang.org/book/ch19-04-advanced-types.html#dynamically-sized-types-and-the-sized-trait>\r\n   = note: required because it appears within the type `Foo`\r\n\r\nerror[E0277]: the size for values of type `[u8]` cannot be known at compilation time\r\n  --> src/main.rs:17:5\r\n   |\r\n17 | /     fn open<P: AsRef<Path>>(path: P) -> Result<Self, String> {\r\n18 | |         Ok(Foo {\r\n19 | |             path: path.as_ref(),\r\n20 | |         })\r\n21 | |     }\r\n   | |_____^ doesn't have a size known at compile-time\r\n   |\r\n   = help: within `Foo`, the trait `std::marker::Sized` is not implemented for `[u8]`\r\n   = note: to learn more, visit <https://doc.rust-lang.org/book/ch19-04-advanced-types.html#dynamically-sized-types-and-the-sized-trait>\r\n   = note: required because it appears within the type `Foo`\r\n   = note: required by `std::result::Result`\r\n\r\n```\r\n\r\n---\r\nI would expect an error like the one from this code\r\n``` rust\r\nuse std::path::{Path, PathBuf};\r\n\r\npub trait Control<'a> {\r\n    type Output;\r\n    fn open<P: 'a + AsRef<Path>>(path: P) -> Result<Self::Output, String>;\r\n}\r\n\r\npub struct Foo<'a> {\r\n    path: &'a Path,\r\n}\r\n\r\nimpl<'a> Control<'a> for Foo<'a> {\r\n    type Output = Self;\r\n\r\n    fn open<P: 'a + AsRef<Path>>(path: P) -> Result<Self, String> {\r\n        Ok(Foo {\r\n            path: path.as_ref(),\r\n        })\r\n    }\r\n}\r\n\r\nfn main() {\r\n    let path  = PathBuf::from(\"/test\");\r\n    let c = Foo::open(path  );\r\n}\r\n```\r\n> [Playground Link](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=49205816abdac866ddf01a7bd33499d5)\r\n\r\n```\r\nerror[E0515]: cannot return value referencing function parameter `path`\r\n  --> src/main.rs:16:9\r\n   |\r\n16 | /         Ok(Foo {\r\n17 | |             path: path.as_ref(),\r\n   | |                   ---- `path` is borrowed here\r\n18 | |         })\r\n   | |__________^ returns a value referencing data owned by the current function\r\n```\r\n\r\n*Edit:* Sorry, had the wrong error output and playground link on the first example", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/65734/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/65734/timeline", "performed_via_github_app": null, "state_reason": null}