{"url": "https://api.github.com/repos/rust-lang/rust/issues/65431", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/65431/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/65431/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/65431/events", "html_url": "https://github.com/rust-lang/rust/issues/65431", "id": 507140016, "node_id": "MDU6SXNzdWU1MDcxNDAwMTY=", "number": 65431, "title": "Compilation memory spikes during LTO", "user": {"login": "tiagolam", "id": 2976679, "node_id": "MDQ6VXNlcjI5NzY2Nzk=", "avatar_url": "https://avatars.githubusercontent.com/u/2976679?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tiagolam", "html_url": "https://github.com/tiagolam", "followers_url": "https://api.github.com/users/tiagolam/followers", "following_url": "https://api.github.com/users/tiagolam/following{/other_user}", "gists_url": "https://api.github.com/users/tiagolam/gists{/gist_id}", "starred_url": "https://api.github.com/users/tiagolam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tiagolam/subscriptions", "organizations_url": "https://api.github.com/users/tiagolam/orgs", "repos_url": "https://api.github.com/users/tiagolam/repos", "events_url": "https://api.github.com/users/tiagolam/events{/privacy}", "received_events_url": "https://api.github.com/users/tiagolam/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 630799571, "node_id": "MDU6TGFiZWw2MzA3OTk1NzE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-compilemem", "name": "I-compilemem", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to memory usage during compilation."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-10-15T10:01:53Z", "updated_at": "2020-10-01T17:50:34Z", "closed_at": "2020-10-01T17:50:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Test case:\r\n```\r\nstatic FILLER: [u8; 60 * 1024 * 1024] = [1; 60 * 1024 * 1024];\r\n\r\nfn main() {\r\n    println!(\"Hello, world! {}\", FILLER[0]);\r\n\r\n    tokio::runtime::current_thread::Runtime::new().unwrap();\r\n}\r\n```\r\n(with the dependency `tokio = \"^0.2.0-alpha.3\"` added to `Cargo.toml`)\r\n\r\nThe `FILLER` is there so we can simulate a binary of a certain size.\r\n\r\nCompiling with:\r\n```\r\ncargo build --release\r\n```\r\n\r\nGenerates memory spikes of around 12GiB, which sometimes means the compilation fails as it ends up being killed by the OS (`signal: 9, SIGKILL: kill`).\r\n\r\nFurther analysis suggests it has to do with lto `cargo rustc --release -p spike -- -Ztime-passes`:\r\n```\r\ntime: 0.000; rss: 51MB    parsing\r\n  time: 0.000; rss: 51MB    attributes injection\r\n  time: 0.000; rss: 51MB    recursion limit\r\n  time: 0.000; rss: 51MB    plugin loading\r\n  time: 0.000; rss: 51MB    plugin registration\r\n  time: 0.000; rss: 51MB    pre-AST-expansion lint checks\r\n  time: 0.000; rss: 54MB    crate injection\r\n    time: 0.009; rss: 67MB  expand crate\r\n    time: 0.000; rss: 67MB  check unused macros\r\n  time: 0.009; rss: 67MB    expansion\r\n  time: 0.000; rss: 67MB    maybe building test harness\r\n  time: 0.000; rss: 67MB    AST validation\r\n  time: 0.000; rss: 67MB    maybe creating a macro crate\r\n  time: 0.013; rss: 85MB    name resolution\r\n  time: 0.000; rss: 85MB    complete gated feature checking\r\n  time: 0.000; rss: 87MB    lowering AST -> HIR\r\n  time: 0.000; rss: 87MB    early lint checks\r\n    time: 0.000; rss: 87MB  validate HIR map\r\n  time: 0.000; rss: 87MB    indexing HIR\r\n  time: 0.000; rss: 87MB    load query result cache\r\n  time: 0.000; rss: 89MB    dep graph tcx init\r\n    time: 0.000; rss: 89MB  looking for entry point\r\n    time: 0.000; rss: 89MB  looking for plugin registrar\r\n    time: 0.000; rss: 89MB  looking for derive registrar\r\n  time: 0.000; rss: 89MB    misc checking 1\r\n  time: 0.000; rss: 92MB    type collecting\r\n  time: 0.000; rss: 92MB    impl wf inference\r\n    time: 0.000; rss: 92MB  unsafety checking\r\n    time: 0.000; rss: 92MB  orphan checking\r\n  time: 0.000; rss: 92MB    coherence checking\r\n  time: 0.009; rss: 112MB   wf checking\r\n  time: 0.000; rss: 112MB   item-types checking\r\n  time: 0.013; rss: 127MB   item-bodies checking\r\n    time: 0.000; rss: 127MB match checking\r\n    time: 0.000; rss: 127MB liveness checking + intrinsic checking\r\n  time: 0.000; rss: 127MB   misc checking 2\r\n  time: 0.002; rss: 127MB   MIR borrow checking\r\n  time: 0.000; rss: 127MB   dumping Chalk-like clauses\r\n  time: 0.000; rss: 127MB   MIR effect checking\r\n  time: 0.000; rss: 127MB   layout testing\r\n    time: 0.000; rss: 127MB privacy access levels\r\n    time: 0.000; rss: 127MB private in public\r\n    time: 0.000; rss: 127MB death checking\r\n    time: 0.000; rss: 127MB unused lib feature checking\r\n      time: 3.072; rss: 199MB   crate lints\r\n      time: 0.000; rss: 199MB   module lints\r\n    time: 3.072; rss: 199MB lint checking\r\n    time: 0.000; rss: 199MB privacy checking modules\r\n  time: 3.073; rss: 199MB   misc checking 3\r\n  time: 0.000; rss: 199MB   metadata encoding and writing\r\n      time: 0.000; rss: 199MB   collecting roots\r\n      time: 0.169; rss: 214MB   collecting mono items\r\n    time: 0.169; rss: 214MB monomorphization collection\r\n    time: 0.001; rss: 214MB codegen unit partitioning\r\n    time: 0.000; rss: 215MB write allocator module\r\n    time: 0.003; rss: 221MB llvm function passes [what.i4xg1d4t-cgu.0]\r\n    time: 0.003; rss: 225MB llvm function passes [what.i4xg1d4t-cgu.3]\r\n    time: 0.003; rss: 227MB llvm function passes [what.i4xg1d4t-cgu.8]\r\n    time: 0.002; rss: 228MB llvm function passes [what.i4xg1d4t-cgu.15]\r\n    time: 0.002; rss: 229MB llvm function passes [what.i4xg1d4t-cgu.9]\r\n    time: 0.002; rss: 231MB llvm function passes [what.i4xg1d4t-cgu.4]\r\n    time: 0.003; rss: 233MB llvm function passes [what.i4xg1d4t-cgu.2]\r\n    time: 0.023; rss: 233MB llvm module passes [what.i4xg1d4t-cgu.15]\r\n    time: 0.002; rss: 234MB llvm function passes [what.i4xg1d4t-cgu.6]\r\n    time: 0.002; rss: 235MB llvm function passes [what.i4xg1d4t-cgu.13]\r\n    time: 0.023; rss: 235MB llvm module passes [what.i4xg1d4t-cgu.4]\r\n    time: 0.039; rss: 235MB llvm module passes [what.i4xg1d4t-cgu.8]\r\n    time: 0.031; rss: 235MB llvm module passes [what.i4xg1d4t-cgu.9]\r\n    time: 0.060; rss: 236MB llvm module passes [what.i4xg1d4t-cgu.0]\r\n    time: 0.055; rss: 237MB llvm module passes [what.i4xg1d4t-cgu.3]\r\n    time: 0.026; rss: 237MB llvm module passes [what.i4xg1d4t-cgu.2]\r\n    time: 0.014; rss: 237MB llvm module passes [what.i4xg1d4t-cgu.13]\r\n    time: 0.025; rss: 238MB llvm module passes [what.i4xg1d4t-cgu.6]\r\n    time: 0.002; rss: 301MB llvm function passes [what.i4xg1d4t-cgu.12]\r\n    time: 0.001; rss: 301MB llvm function passes [what.i4xg1d4t-cgu.11]\r\n    time: 0.001; rss: 301MB llvm function passes [what.i4xg1d4t-cgu.1]\r\n    time: 0.001; rss: 301MB llvm function passes [what.i4xg1d4t-cgu.5]\r\n    time: 0.001; rss: 301MB llvm function passes [what.i4xg1d4t-cgu.7]\r\n    time: 0.001; rss: 300MB llvm function passes [what.i4xg1d4t-cgu.14]\r\n    time: 0.160; rss: 300MB codegen to LLVM IR\r\n    time: 0.000; rss: 300MB assert dep graph\r\n    time: 0.000; rss: 300MB serialize dep graph\r\n  time: 0.335; rss: 300MB   codegen\r\n    time: 0.008; rss: 300MB llvm module passes [what.i4xg1d4t-cgu.11]\r\n    time: 0.001; rss: 300MB llvm function passes [what.i4xg1d4t-cgu.10]\r\n    time: 0.006; rss: 301MB llvm module passes [what.i4xg1d4t-cgu.7]\r\n    time: 0.011; rss: 301MB llvm module passes [what.i4xg1d4t-cgu.1]\r\n    time: 0.004; rss: 301MB llvm module passes [what.i4xg1d4t-cgu.10]\r\n    time: 0.007; rss: 301MB llvm module passes [what.i4xg1d4t-cgu.14]\r\n    time: 0.017; rss: 301MB llvm module passes [what.i4xg1d4t-cgu.5]\r\n    time: 0.027; rss: 301MB llvm module passes [what.i4xg1d4t-cgu.12]\r\n    time: 0.001; rss: 1359MB    LTO passes\r\n    time: 0.002; rss: 1369MB    LTO passes\r\n    time: 0.001; rss: 1371MB    codegen passes [what.i4xg1d4t-cgu.1]\r\n    time: 0.003; rss: 1386MB    codegen passes [what.i4xg1d4t-cgu.10]\r\n    time: 0.007; rss: 1397MB    LTO passes\r\n    time: 0.004; rss: 1408MB    LTO passes\r\n    time: 0.010; rss: 1416MB    LTO passes\r\n    time: 0.008; rss: 1463MB    codegen passes [what.i4xg1d4t-cgu.14]\r\n    time: 0.013; rss: 1480MB    codegen passes [what.i4xg1d4t-cgu.7]\r\n    time: 0.015; rss: 1515MB    codegen passes [what.i4xg1d4t-cgu.4]\r\n    time: 0.009; rss: 1561MB    LTO passes\r\n    time: 0.001; rss: 1569MB    LTO passes\r\n    time: 0.001; rss: 1575MB    codegen passes [what.i4xg1d4t-cgu.11]\r\n    time: 0.006; rss: 1586MB    codegen passes [what.i4xg1d4t-cgu.5]\r\n    time: 0.065; rss: 7193MB    LTO passes\r\n    time: 0.222; rss: 8929MB    codegen passes [what.i4xg1d4t-cgu.12]\r\n    time: 0.032; rss: 9334MB    LTO passes\r\n    time: 0.034; rss: 9430MB    codegen passes [what.i4xg1d4t-cgu.0]\r\n    time: 0.025; rss: 9572MB    LTO passes\r\n    time: 0.021; rss: 9604MB    LTO passes\r\n    time: 0.021; rss: 9620MB    codegen passes [what.i4xg1d4t-cgu.2]\r\n    time: 0.028; rss: 9622MB    LTO passes\r\n    time: 0.017; rss: 9668MB    codegen passes [what.i4xg1d4t-cgu.8]\r\n    time: 0.026; rss: 9669MB    codegen passes [what.i4xg1d4t-cgu.3]\r\n    time: 0.006; rss: 9756MB    LTO passes\r\n    time: 0.007; rss: 9756MB    codegen passes [what.i4xg1d4t-cgu.13]\r\n    time: 0.035; rss: 9756MB    LTO passes\r\n    time: 0.019; rss: 9756MB    LTO passes\r\n    time: 0.040; rss: 9756MB    LTO passes\r\n    time: 0.013; rss: 9756MB    codegen passes [what.i4xg1d4t-cgu.9]\r\n    time: 0.016; rss: 9756MB    codegen passes [what.i4xg1d4t-cgu.15]\r\n    time: 0.048; rss: 9757MB    codegen passes [what.i4xg1d4t-cgu.6]\r\n  time: 2.697; rss: 9757MB  LLVM passes\r\n  time: 0.000; rss: 9757MB  serialize work products\r\n    time: 0.493; rss: 9758MB    running linker\r\n  time: 0.500; rss: 9758MB  linking\r\ntime: 6.535; rss: 9713MB        total\r\n    Finished release [optimized] target(s) in 6.82s\r\n```\r\n\r\nThe issue can be worked around by either disabling LTO with `RUSTFLAGS='-C lto=no'` or change the FILLER to be a static array of 0's:\r\n```\r\nstatic FILLER: [u8; 60 * 1024 * 1024] = [0; 60 * 1024 * 1024];\r\n```", "closed_by": {"login": "tiagolam", "id": 2976679, "node_id": "MDQ6VXNlcjI5NzY2Nzk=", "avatar_url": "https://avatars.githubusercontent.com/u/2976679?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tiagolam", "html_url": "https://github.com/tiagolam", "followers_url": "https://api.github.com/users/tiagolam/followers", "following_url": "https://api.github.com/users/tiagolam/following{/other_user}", "gists_url": "https://api.github.com/users/tiagolam/gists{/gist_id}", "starred_url": "https://api.github.com/users/tiagolam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tiagolam/subscriptions", "organizations_url": "https://api.github.com/users/tiagolam/orgs", "repos_url": "https://api.github.com/users/tiagolam/repos", "events_url": "https://api.github.com/users/tiagolam/events{/privacy}", "received_events_url": "https://api.github.com/users/tiagolam/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/65431/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/65431/timeline", "performed_via_github_app": null, "state_reason": "completed"}