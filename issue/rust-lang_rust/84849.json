{"url": "https://api.github.com/repos/rust-lang/rust/issues/84849", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/84849/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/84849/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/84849/events", "html_url": "https://github.com/rust-lang/rust/issues/84849", "id": 874216436, "node_id": "MDU6SXNzdWU4NzQyMTY0MzY=", "number": 84849, "title": "`dsymutil` hits SIGBUS during `cargo build`, and spams warnings like \"could not find object file symbol for symbol\"", "user": {"login": "thomcc", "id": 860665, "node_id": "MDQ6VXNlcjg2MDY2NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/860665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomcc", "html_url": "https://github.com/thomcc", "followers_url": "https://api.github.com/users/thomcc/followers", "following_url": "https://api.github.com/users/thomcc/following{/other_user}", "gists_url": "https://api.github.com/users/thomcc/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomcc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomcc/subscriptions", "organizations_url": "https://api.github.com/users/thomcc/orgs", "repos_url": "https://api.github.com/users/thomcc/repos", "events_url": "https://api.github.com/users/thomcc/events{/privacy}", "received_events_url": "https://api.github.com/users/thomcc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234956, "node_id": "MDU6TGFiZWwyMzQ5NTY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-codegen", "name": "A-codegen", "color": "f7e101", "default": false, "description": "Area: Code generation"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-05-03T04:31:10Z", "updated_at": "2021-05-28T11:40:54Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "When building `evcxr_repl` on macOS (via, e.g. `cargo build -p evcxr_repl`), around the end of the build, I sometimes (often) get these warnings:\r\n\r\n```\r\n   Compiling evcxr v0.9.0 (/Users/thom/src/evcxr/evcxr)\r\n   Compiling evcxr_repl v0.9.0 (/Users/thom/src/evcxr/evcxr_repl)\r\n   Compiling evcxr_jupyter v0.9.0 (/Users/thom/src/evcxr/evcxr_jupyter)\r\n   Compiling print_performance_info v0.1.0 (/Users/thom/src/evcxr/print_performance_info)\r\nwarning: processing debug info with `dsymutil` failed: signal: 10\r\n  |\r\n  = note: warning: (x86_64)  could not find object file symbol for symbol _anon.0badcb2317405270e2661460eadb52d3.13\r\n          warning: (x86_64)  could not find object file symbol for symbol _anon.0badcb2317405270e2661460eadb52d3.14\r\n          warning: (x86_64)  could not find object file symbol for symbol _anon.0badcb2317405270e2661460eadb52d3.22\r\n          warning: (x86_64)  could not find object file symbol for symbol _anon.0badcb2317405270e2661460eadb52d3.56\r\n          warning: (x86_64)  could not find object file symbol for symbol _anon.0badcb2317405270e2661460eadb52d3.57\r\n          warning: (x86_64)  could not find object file symbol for symbol _anon.0badcb2317405270e2661460eadb52d3.58\r\n          warning: (x86_64)  could not find object file symbol for symbol _anon.0badcb2317405270e2661460eadb52d3.59\r\n          warning: (x86_64)  could not find object file symbol for symbol _anon.0badcb2317405270e2661460eadb52d3.60\r\n.... snip ....\r\n```\r\n\r\nNot just `_anon.$hash.$counter` tho, in the output it also has a bunch of static vars and the like:\r\n\r\n```\r\n          warning: (x86_64)  could not find object file symbol for symbol _str.0\r\n          warning: (x86_64)  could not find object file symbol for symbol __ZN4rand4rngs7adapter9reseeding4fork26RESEEDING_RNG_FORK_COUNTER17ha4496ddbf5daa60fE\r\n          warning: (x86_64)  could not find object file symbol for symbol __ZN16parking_lot_core11parking_lot11NUM_THREADS17hf52042d8081b2715E\r\n          warning: (x86_64)  could not find object file symbol for symbol __ZN4json6object4NULL17he3487848e2e9f694E\r\n```\r\n\r\nAnyway, this is abridged. It has about 6000 more lines with similar complaints. It doesn't cause the build to fail, but seems undesirable nonetheless. Presumably, debugging one of those builds wouldn't work (but I could be wrong, I haven't tried).\r\n\r\n---\r\n\r\nThis pretty clearly has something to do with the split-debuginfo change, but I'm not sure what exactly it means.\r\n\r\nI believe signal 10 is SIGBUS on macOS, which *probably* means dsymutil was trying to mmap some nonsense and something went wrong.\r\n\r\nIt cold also just be run of the mill memory corruption and such (ofc, something that could have been a SIGSEGV can always happen to show up as a SIGBUS), but... IME, SIGBUS is usually a symptom of `mmap`-gone-wrong.\r\n\r\nPerhaps part of the rust build process modified one of the files it was reading or writing? Or rust-analyzer, as I had vscode open in the background... (No idea, although if I were forced to bet on what I thought the outcome was, I guess this seems most likely at the moment).\r\n\r\nI've only seen it when building `evcxr`, specifically the `evcxr_repl` binary, but it's the only project I've really been in since I updated my rust toolchain to `1.53.0-nightly (2021-04-23)` (the latest one that has the components I use \u2014 apologies if this is likely to be fixed in the past 2 weeks) \u2014 previously I was over a month older. Also, `evcxr_repl` is really the main package I build in that project, so... only seeing it in this situation might not mean that much in practice, and could just be coincidental timing.\r\n\r\nIt doesn't happen always, although it's reasonably frequent. I've seen it with `split-debuginfo=packed` in addition to the default.\r\n\r\nI'm not sure if its relevant, but it's possibly worth noting that evcxr is a project that enables opt-level=2 for debug builds https://github.com/google/evcxr/blob/main/Cargo.toml#L16-L18.\r\n\r\n---\r\n\r\nSome versions:\r\n\r\n- macOS: 11.2.1 (20D74) (uh, yeah, I guess I need to update...)\r\n- Xcode: Version 12.5 (12E262)\r\n\r\n```\r\n$ dsymutil --version\r\nApple LLVM version 12.0.5 (clang-1205.0.22.9)\r\n  Optimized build.\r\n  Default target: x86_64-apple-darwin20.3.0\r\n  Host CPU: skylake\r\n\r\n$ rustc -Vv\r\nrustc 1.53.0-nightly (42816d61e 2021-04-24)\r\nbinary: rustc\r\ncommit-hash: 42816d61ead7e46d462df997958ccfd514f8c21c\r\ncommit-date: 2021-04-24\r\nhost: x86_64-apple-darwin\r\nrelease: 1.53.0-nightly\r\nLLVM version: 12.0.0\r\n```\r\n\r\n  ", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/84849/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/84849/timeline", "performed_via_github_app": null, "state_reason": null}