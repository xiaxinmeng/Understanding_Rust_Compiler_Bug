{"url": "https://api.github.com/repos/rust-lang/rust/issues/30127", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/30127/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/30127/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/30127/events", "html_url": "https://github.com/rust-lang/rust/issues/30127", "id": 119606913, "node_id": "MDU6SXNzdWUxMTk2MDY5MTM=", "number": 30127, "title": "Desugared x.index(y) is not equivalent to x[y]", "user": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}, {"id": 60344715, "node_id": "MDU6TGFiZWw2MDM0NDcxNQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-medium", "name": "P-medium", "color": "eb6420", "default": false, "description": "Medium priority"}, {"id": 178802147, "node_id": "MDU6TGFiZWwxNzg4MDIxNDc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-needs-decision", "name": "I-needs-decision", "color": "e11d21", "default": false, "description": "Issues in need of decision."}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2015-11-30T23:36:21Z", "updated_at": "2022-03-22T08:15:36Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "``` rust\nuse std::ops::Index;\n\nfn main() {\n    let _sugar = &\"a\".to_owned()[..];\n    let _desugar1 = \"a\".to_owned().index(..);\n    let _desugar2 = &*\"a\".to_owned().index(..);\n}\n```\n\n```\n<anon>:5:21: 5:35 error: borrowed value does not live long enough\n<anon>:5     let _desugar1 = \"a\".to_owned().index(..);\n                             ^~~~~~~~~~~~~~\n<anon>:5:46: 6:49 note: reference must be valid for the block suffix following statement 1 at 5:45...\n<anon>:5     let _desugar1 = \"a\".to_owned().index(..);\n<anon>:6     let _desugar2 = &*\"a\".to_owned().index(..);}\n<anon>:5:5: 5:46 note: ...but borrowed value is only valid for the statement at 5:4\n<anon>:5     let _desugar1 = \"a\".to_owned().index(..);\n             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n<anon>:5:5: 5:46 help: consider using a `let` binding to increase its lifetime\n<anon>:5     let _desugar1 = \"a\".to_owned().index(..);\n             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n<anon>:6:23: 6:37 error: borrowed value does not live long enough\n<anon>:6     let _desugar2 = &*\"a\".to_owned().index(..);}\n                               ^~~~~~~~~~~~~~\n<anon>:6:48: 6:49 note: reference must be valid for the block suffix following statement 2 at 6:47...\n<anon>:6     let _desugar2 = &*\"a\".to_owned().index(..);}\n                                                        ^\n<anon>:6:5: 6:48 note: ...but borrowed value is only valid for the statement at 6:4\n<anon>:6     let _desugar2 = &*\"a\".to_owned().index(..);}\n             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n<anon>:6:5: 6:48 help: consider using a `let` binding to increase its lifetime\n<anon>:6     let _desugar2 = &*\"a\".to_owned().index(..);}\n             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n```\n\nIf the `let _desugar`s are commented out, it compiles fine.\n\nIt seems a method call is treated differently to the `[]` syntax. This may be a purposeful consequence of the design of temporary lifetimes, I don't know.\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/30127/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/30127/timeline", "performed_via_github_app": null, "state_reason": null}