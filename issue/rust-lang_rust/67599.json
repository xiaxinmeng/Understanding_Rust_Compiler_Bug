{"url": "https://api.github.com/repos/rust-lang/rust/issues/67599", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/67599/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/67599/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/67599/events", "html_url": "https://github.com/rust-lang/rust/issues/67599", "id": 542229109, "node_id": "MDU6SXNzdWU1NDIyMjkxMDk=", "number": 67599, "title": "Backtrace is <unknown> for dynamic library loaded through dlopen using absolute file path for rust >= 1.37.0 on OSX", "user": {"login": "t-mw", "id": 9677694, "node_id": "MDQ6VXNlcjk2Nzc2OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/9677694?v=4", "gravatar_id": "", "url": "https://api.github.com/users/t-mw", "html_url": "https://github.com/t-mw", "followers_url": "https://api.github.com/users/t-mw/followers", "following_url": "https://api.github.com/users/t-mw/following{/other_user}", "gists_url": "https://api.github.com/users/t-mw/gists{/gist_id}", "starred_url": "https://api.github.com/users/t-mw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/t-mw/subscriptions", "organizations_url": "https://api.github.com/users/t-mw/orgs", "repos_url": "https://api.github.com/users/t-mw/repos", "events_url": "https://api.github.com/users/t-mw/events{/privacy}", "received_events_url": "https://api.github.com/users/t-mw/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 36953, "node_id": "MDU6TGFiZWwzNjk1Mw==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-runtime", "name": "A-runtime", "color": "f7e101", "default": false, "description": "Area: std's runtime and \"pre-main\" init for handling backtraces, unwinds, stack overflows"}, {"id": 123111, "node_id": "MDU6TGFiZWwxMjMxMTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-macos", "name": "O-macos", "color": "6e6ec0", "default": false, "description": "Operating system: macOS"}, {"id": 60344715, "node_id": "MDU6TGFiZWw2MDM0NDcxNQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-medium", "name": "P-medium", "color": "eb6420", "default": false, "description": "Medium priority"}, {"id": 262252840, "node_id": "MDU6TGFiZWwyNjIyNTI4NDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-stable", "name": "regression-from-stable-to-stable", "color": "e4008a", "default": false, "description": "Performance or correctness regression from one stable version to another."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 2011781731, "node_id": "MDU6TGFiZWwyMDExNzgxNzMx", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs", "name": "T-libs", "color": "bfd4f2", "default": false, "description": "Relevant to the library team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2019-12-25T01:17:32Z", "updated_at": "2021-07-21T19:17:12Z", "closed_at": "2021-07-21T19:17:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "From Rust v1.37.0 onwards on Mac OS 10.14.6, a panic triggered in a dynamically loaded library does not produce a full stacktrace if the library was loaded by passing an absolute path to `dlopen`. ~~I haven't been able to test other platforms~~ Windows and Linux do not have the issue, see https://github.com/rust-lang/rust/issues/67599#issuecomment-568822600 and https://github.com/rust-lang/rust/issues/67599#issuecomment-568825463.\r\n\r\nThe project at https://github.com/t-mw/libreloading-test-rs loads a library using its absolute path by default. The loading is done by [`libloading`](https://github.com/nagisa/rust_libloading) which uses `dlopen` internally.\r\n\r\nWith Rust 1.40 and `RUST_BACKTRACE=full cargo run` the following output is produced  (Rust 1.37 produces similar output):\r\n```\r\nthread '<unnamed>' panicked at '!!!', src/lib.rs:6:9\r\nstack backtrace:\r\n   0:        0x10d4df815 - <unknown>\r\n   1:        0x10d4f6a20 - <unknown>\r\n   2:        0x10d4de60b - <unknown>\r\n   3:        0x10d4e0f73 - <unknown>\r\n   4:        0x10d4e0c7a - <unknown>\r\n   5:        0x10d4e15cb - <unknown>\r\n   6:        0x10d4db94c - <unknown>\r\n   7:        0x10d4db5a4 - <unknown>\r\n   8:        0x10d4db3b1 - <unknown>\r\n   9:        0x10d445269 - libloading_test::main::h9b608f0903e21359\r\n                               at src/main.rs:13\r\n...\r\n```\r\n\r\nThe expected output can be seen by compiling the same code with Rust 1.36. However, this is still missing some details about line numbers, for example for `reloadable::RELOAD_API::{{closure}}`:\r\n\r\n```\r\nthread '<unnamed>' panicked at '!!!', src/lib.rs:6:9\r\nstack backtrace:\r\n   0:        0x101056663 - std::sys::unix::backtrace::tracing::imp::unwind_backtrace::hbc4a87dc97d9c209\r\n   1:        0x1010535d2 - std::sys_common::backtrace::_print::h411a08c36ea9f4e9\r\n   2:        0x101055ca6 - std::panicking::default_hook::{{closure}}::hc6f50b761777cef2\r\n   3:        0x101055a4f - std::panicking::default_hook::h871283332e86768d\r\n   4:        0x10105632f - std::panicking::rust_panic_with_hook::hddd286a9c773fc67\r\n   5:        0x10104e010 - std::panicking::begin_panic::h6dc165374aa0a9bd\r\n   6:        0x10104e923 - reloadable::RELOAD_API::{{closure}}::h42ed074a77f6faff\r\n   7:        0x10104e830 - core::ops::function::FnOnce::call_once::h5642339838887a68\r\n   8:        0x100fba70d - libloading_test::main::h7208d4e03f17b192\r\n                               at src/main.rs:13\r\n...\r\n```\r\n\r\nIdeally, the output would be the same as when a relative path name is passed to `dlopen` (by uncommenting https://github.com/t-mw/libreloading-test-rs/blob/master/src/main.rs#L11), which produces a complete backtrace in Rust 1.36 to 1.40. Rust 1.40 produces the following output in that case:\r\n\r\n```\r\nthread '<unnamed>' panicked at '!!!', src/lib.rs:6:9\r\nstack backtrace:\r\n   0:        0x10fe8c815 - backtrace::backtrace::libunwind::trace::hb16ec6045891ce5a\r\n                               at /Users/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.40/src/backtrace/libunwind.rs:88\r\n   1:        0x10fe8c815 - backtrace::backtrace::trace_unsynchronized::hcacbd0efdffd74c6\r\n                               at /Users/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.40/src/backtrace/mod.rs:66\r\n   2:        0x10fe8c815 - std::sys_common::backtrace::_print_fmt::h39e22de9d6757d12\r\n                               at src/libstd/sys_common/backtrace.rs:77\r\n   3:        0x10fe8c815 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::h415ddd0ba88caaaf\r\n                               at src/libstd/sys_common/backtrace.rs:61\r\n   4:        0x10fea3a20 - core::fmt::write::h3335552e2df81c1d\r\n                               at src/libcore/fmt/mod.rs:1028\r\n   5:        0x10fe8b60b - std::io::Write::write_fmt::he6837371b9a45188\r\n                               at src/libstd/io/mod.rs:1412\r\n   6:        0x10fe8df73 - std::sys_common::backtrace::_print::h89459d14ba97f5fa\r\n                               at src/libstd/sys_common/backtrace.rs:65\r\n   7:        0x10fe8df73 - std::sys_common::backtrace::print::ha4c6688e811b8829\r\n                               at src/libstd/sys_common/backtrace.rs:50\r\n   8:        0x10fe8df73 - std::panicking::default_hook::{{closure}}::h708e66cfeb0483ba\r\n                               at src/libstd/panicking.rs:188\r\n   9:        0x10fe8dc7a - std::panicking::default_hook::h39ea8ddf674c04ec\r\n                               at src/libstd/panicking.rs:205\r\n  10:        0x10fe8e5cb - std::panicking::rust_panic_with_hook::h9db77b22c2255a16\r\n                               at src/libstd/panicking.rs:464\r\n  11:        0x10fe8894c - std::panicking::begin_panic::h21574f5509dfe34a\r\n                               at /rustc/73528e339aae0f17a15ffa49a8ac608f50c6cf14/src/libstd/panicking.rs:400\r\n  12:        0x10fe885a4 - reloadable::RELOAD_API::{{closure}}::haea0cf290bcd83d5\r\n                               at src/lib.rs:6\r\n  13:        0x10fe883b1 - core::ops::function::FnOnce::call_once::h32c523a7aa5b79f3\r\n                               at /rustc/73528e339aae0f17a15ffa49a8ac608f50c6cf14/src/libcore/ops/function.rs:227\r\n  14:        0x10fdf2279 - libloading_test::main::h9b608f0903e21359\r\n                               at src/main.rs:13\r\n...\r\n```\r\n", "closed_by": {"login": "t-mw", "id": 9677694, "node_id": "MDQ6VXNlcjk2Nzc2OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/9677694?v=4", "gravatar_id": "", "url": "https://api.github.com/users/t-mw", "html_url": "https://github.com/t-mw", "followers_url": "https://api.github.com/users/t-mw/followers", "following_url": "https://api.github.com/users/t-mw/following{/other_user}", "gists_url": "https://api.github.com/users/t-mw/gists{/gist_id}", "starred_url": "https://api.github.com/users/t-mw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/t-mw/subscriptions", "organizations_url": "https://api.github.com/users/t-mw/orgs", "repos_url": "https://api.github.com/users/t-mw/repos", "events_url": "https://api.github.com/users/t-mw/events{/privacy}", "received_events_url": "https://api.github.com/users/t-mw/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/67599/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/67599/timeline", "performed_via_github_app": null, "state_reason": "completed"}