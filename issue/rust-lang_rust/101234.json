{"url": "https://api.github.com/repos/rust-lang/rust/issues/101234", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/101234/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/101234/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/101234/events", "html_url": "https://github.com/rust-lang/rust/issues/101234", "id": 1357216100, "node_id": "I_kwDOAAsO6M5Q5Xlk", "number": 101234, "title": "Nested match not being treated as an expression", "user": {"login": "Lonami", "id": 6297805, "node_id": "MDQ6VXNlcjYyOTc4MDU=", "avatar_url": "https://avatars.githubusercontent.com/u/6297805?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lonami", "html_url": "https://github.com/Lonami", "followers_url": "https://api.github.com/users/Lonami/followers", "following_url": "https://api.github.com/users/Lonami/following{/other_user}", "gists_url": "https://api.github.com/users/Lonami/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lonami/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lonami/subscriptions", "organizations_url": "https://api.github.com/users/Lonami/orgs", "repos_url": "https://api.github.com/users/Lonami/repos", "events_url": "https://api.github.com/users/Lonami/events{/privacy}", "received_events_url": "https://api.github.com/users/Lonami/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 27424086, "node_id": "MDU6TGFiZWwyNzQyNDA4Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-parser", "name": "A-parser", "color": "f7e101", "default": false, "description": "Area: The parsing of Rust source code to an AST."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1596122130, "node_id": "MDU6TGFiZWwxNTk2MTIyMTMw", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-papercut", "name": "D-papercut", "color": "c9f7a3", "default": false, "description": "Diagnostic error that needs small tweaks"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-08-31T11:44:29Z", "updated_at": "2022-09-09T23:31:29Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Apologies if this has been reported before. I'm not sure what keywords I could use to find a similar issue. I tried this code:\r\n\r\n```rust\r\nfn main() {\r\n    let a = match 1 {\r\n        1 => match 2 {\r\n            2 => true,\r\n            _ => false\r\n        } && true,\r\n        _ => false\r\n    };\r\n}\r\n```\r\n\r\nI expected to see this happen: the code compiles, and `a` ends up being `true`.\r\n\r\nInstead, this happened: the inner `match` does not seem to be treated as an expression and fails as follows:\r\n\r\n```\r\n   Compiling playground v0.0.1 (/playground)\r\nerror: unexpected `,` in pattern\r\n --> src/main.rs:6:18\r\n  |\r\n6 |         } && true,\r\n  |                  ^\r\n  |\r\nhelp: try adding parentheses to match on a tuple...\r\n  |\r\n6 ~         } (&& true,\r\n7 ~         _) => false\r\n  |\r\nhelp: ...or a vertical bar to match on multiple alternatives\r\n  |\r\n6 ~         } && true |\r\n7 ~         _ => false\r\n  |\r\n\r\nerror: could not compile `playground` due to previous error\r\n```\r\n\r\nNeither of the suggestions fix the problem. However, writing `true && match 2` instead, or adding parenthesis around the entire inner `match` expression does solve the problem:\r\n\r\n```rust\r\nfn main() {\r\n    let a = match 1 {\r\n        1 => (match 2 {\r\n            2 => true,\r\n            _ => false\r\n        }) && true,\r\n        _ => false\r\n    };\r\n}\r\n```\r\n\r\n---\r\n\r\nThe following code also fails:\r\n\r\n```rust\r\nfn main() {\r\n    let a = match 1 {\r\n        1 => {\r\n            match 2 {\r\n                2 => true,\r\n                _ => false\r\n            } && true\r\n        },\r\n        _ => false\r\n    };\r\n}\r\n```\r\n\r\nBut this time with another error (it thinks I meant `&&true` as in `&&bool`):\r\n\r\n```\r\nCompiling playground v0.0.1 (/playground)\r\nerror[[E0308]](https://doc.rust-lang.org/nightly/error-index.html#E0308): mismatched types\r\n --> src/main.rs:4:13\r\n  |\r\n4 | /             match 2 {\r\n5 | |                 2 => true,\r\n6 | |                 _ => false\r\n7 | |             } && true\r\n  | |             ^- help: consider using a semicolon here\r\n  | |_____________|\r\n  |               expected `()`, found `bool`\r\n\r\nerror[[E0308]](https://doc.rust-lang.org/nightly/error-index.html#E0308): `match` arms have incompatible types\r\n  --> src/main.rs:9:14\r\n   |\r\n2  |       let a = match 1 {\r\n   |  _____________-\r\n3  | |         1 => {\r\n4  | |             match 2 {\r\n5  | |                 2 => true,\r\n6  | |                 _ => false\r\n7  | |             } && true\r\n   | |               ------- this is found to be of type `&&bool`\r\n8  | |         },\r\n9  | |         _ => false\r\n   | |              ^^^^^ expected `&&bool`, found `bool`\r\n10 | |     };\r\n   | |_____- `match` arms have incompatible types\r\n\r\nFor more information about this error, try `rustc --explain E0308`.\r\nerror: could not compile `playground` due to 2 previous errors\r\n```\r\n\r\nWrapping the inner `match` in `()` fixes it. Writing `true && match 2` instead also fixes it.\r\n\r\nBoth of the failing examples also seem to work if the inner `match` is not nested and it's the only `match` in the code.\r\n\r\n### Meta\r\n\r\n`rustc --version --verbose`:\r\n```\r\nNightly channel\r\n\r\nBuild using the Nightly version: 1.65.0-nightly\r\n\r\n(2022-08-30 02654a0844f5c8d29bac)\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/101234/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/101234/timeline", "performed_via_github_app": null, "state_reason": null}