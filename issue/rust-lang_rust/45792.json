{"url": "https://api.github.com/repos/rust-lang/rust/issues/45792", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/45792/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/45792/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/45792/events", "html_url": "https://github.com/rust-lang/rust/issues/45792", "id": 271314122, "node_id": "MDU6SXNzdWUyNzEzMTQxMjI=", "number": 45792, "title": "Rust generates guard instructions around match statements", "user": {"login": "jrmuizel", "id": 332653, "node_id": "MDQ6VXNlcjMzMjY1Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/332653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jrmuizel", "html_url": "https://github.com/jrmuizel", "followers_url": "https://api.github.com/users/jrmuizel/followers", "following_url": "https://api.github.com/users/jrmuizel/following{/other_user}", "gists_url": "https://api.github.com/users/jrmuizel/gists{/gist_id}", "starred_url": "https://api.github.com/users/jrmuizel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jrmuizel/subscriptions", "organizations_url": "https://api.github.com/users/jrmuizel/orgs", "repos_url": "https://api.github.com/users/jrmuizel/repos", "events_url": "https://api.github.com/users/jrmuizel/events{/privacy}", "received_events_url": "https://api.github.com/users/jrmuizel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-05T21:05:15Z", "updated_at": "2017-11-06T13:35:18Z", "closed_at": "2017-11-06T13:33:55Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```rust\r\ntrait A {\r\n    fn k(&self, x: i32) -> i32;\r\n}\r\n\r\npub struct O {\r\n}\r\n\r\npub struct P {\r\n}\r\n\r\nimpl A for O {\r\n    #[inline(never)]\r\n    fn k(&self, x: i32) -> i32 {\r\n        x\r\n    }\r\n}\r\n\r\npub struct M {\r\n}\r\n\r\nimpl A for M {\r\n    #[inline(never)]\r\n    fn k(&self, x: i32) -> i32 {\r\n        x\r\n    }\r\n}\r\n\r\npub struct N {\r\n}\r\n\r\nimpl A for N {\r\n    #[inline(never)]\r\n    fn k(&self, x: i32) -> i32 {\r\n        x\r\n    }\r\n}\r\n\r\npub struct Q {\r\n}\r\n\r\nimpl A for Q {\r\n    #[inline(never)]\r\n    fn k(&self, x: i32) -> i32 {\r\n        x\r\n    }\r\n}\r\n\r\nimpl A for P {\r\n    #[inline(never)]\r\n    fn k(&self, x: i32) -> i32 {\r\n        x\r\n    }\r\n}\r\n\r\npub enum R {\r\n    P(P),\r\n    O(O),\r\n    M(M),\r\n    N(N),\r\n    Q(Q),\r\n}\r\nimpl R {\r\n\r\n    pub fn k(&self, x: i32) -> i32 {\r\n        match self {\r\n            &R::P(ref p) => p.k(x),\r\n            &R::O(ref o) => o.k(x),\r\n            &R::M(ref o) => o.k(x),\r\n            &R::N(ref o) => o.k(x),\r\n            &R::Q(ref o) => o.k(x),\r\n\r\n        }\r\n    }\r\n}\r\n```\r\n\r\ncompiles to:\r\n\r\n```assembly\r\n<example::O as example::A>::k:\r\n        push    rbp\r\n        mov     rbp, rsp\r\n        mov     eax, esi\r\n        pop     rbp\r\n        ret\r\n\r\n<example::M as example::A>::k:\r\n        push    rbp\r\n        mov     rbp, rsp\r\n        mov     eax, esi\r\n        pop     rbp\r\n        ret\r\n\r\n<example::N as example::A>::k:\r\n        push    rbp\r\n        mov     rbp, rsp\r\n        mov     eax, esi\r\n        pop     rbp\r\n        ret\r\n\r\n<example::Q as example::A>::k:\r\n        push    rbp\r\n        mov     rbp, rsp\r\n        mov     eax, esi\r\n        pop     rbp\r\n        ret\r\n\r\n<example::P as example::A>::k:\r\n        push    rbp\r\n        mov     rbp, rsp\r\n        mov     eax, esi\r\n        pop     rbp\r\n        ret\r\n\r\nexample::R::k:\r\n        push    rbp\r\n        mov     rbp, rsp\r\n        movzx   eax, byte ptr [rdi]\r\n        mov     ecx, eax\r\n        shl     cl, 5\r\n        sar     cl, 5\r\n        js      .LBB5_6\r\n        lea     rcx, [rip + .LJTI5_0]\r\n        movsxd  rax, dword ptr [rcx + 4*rax]\r\n        add     rax, rcx\r\n        jmp     rax\r\n.LBB5_2:\r\n        pop     rbp\r\n        jmp     <example::P as example::A>::k@PLT\r\n.LBB5_6:\r\n        pop     rbp\r\n        jmp     <example::Q as example::A>::k@PLT\r\n.LBB5_3:\r\n        pop     rbp\r\n        jmp     <example::O as example::A>::k@PLT\r\n.LBB5_4:\r\n        pop     rbp\r\n        jmp     <example::M as example::A>::k@PLT\r\n.LBB5_5:\r\n        pop     rbp\r\n        jmp     <example::N as example::A>::k@PLT\r\n.LJTI5_0:\r\n        .long   .LBB5_2-.LJTI5_0\r\n        .long   .LBB5_3-.LJTI5_0\r\n        .long   .LBB5_4-.LJTI5_0\r\n        .long   .LBB5_5-.LJTI5_0\r\n```\r\n\r\nNotice this set of instructions:\r\n```assembly\r\n        shl     cl, 5\r\n        sar     cl, 5\r\n        js      .LBB5_6\r\n```\r\nIt seems like these could be dropped.\r\n\r\nThe corresponding llvm ir is here:\r\n```\r\n  %0 = getelementptr inbounds %R, %R* %self, i64 0, i32 0\r\n  %1 = load i8, i8* %0, align 1, !range !0\r\n  %trunc = trunc i8 %1 to i3\r\n  switch i3 %trunc, label %bb5 [\r\n    i3 0, label %bb1\r\n    i3 1, label %bb2\r\n    i3 2, label %bb3\r\n    i3 3, label %bb4\r\n  ]\r\n```", "closed_by": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/45792/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/45792/timeline", "performed_via_github_app": null, "state_reason": "completed"}