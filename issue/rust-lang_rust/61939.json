{"url": "https://api.github.com/repos/rust-lang/rust/issues/61939", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/61939/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/61939/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/61939/events", "html_url": "https://github.com/rust-lang/rust/issues/61939", "id": 457670202, "node_id": "MDU6SXNzdWU0NTc2NzAyMDI=", "number": 61939, "title": "Missed optimizations for Vec::pop() followed by Vec::push()", "user": {"login": "troiganto", "id": 5731814, "node_id": "MDQ6VXNlcjU3MzE4MTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5731814?v=4", "gravatar_id": "", "url": "https://api.github.com/users/troiganto", "html_url": "https://github.com/troiganto", "followers_url": "https://api.github.com/users/troiganto/followers", "following_url": "https://api.github.com/users/troiganto/following{/other_user}", "gists_url": "https://api.github.com/users/troiganto/gists{/gist_id}", "starred_url": "https://api.github.com/users/troiganto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/troiganto/subscriptions", "organizations_url": "https://api.github.com/users/troiganto/orgs", "repos_url": "https://api.github.com/users/troiganto/repos", "events_url": "https://api.github.com/users/troiganto/events{/privacy}", "received_events_url": "https://api.github.com/users/troiganto/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 166999014, "node_id": "MDU6TGFiZWwxNjY5OTkwMTQ=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-collections", "name": "A-collections", "color": "f7e101", "default": false, "description": "Area: std::collections."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-06-18T20:03:25Z", "updated_at": "2021-05-25T00:39:54Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "The following example should be get optimized to a no-op by the compiler:\r\n```rust\r\npub fn noop(v: &mut Vec<i32>) {\r\n    if let Some(last) = v.pop() {\r\n        v.push(last)\r\n    }\r\n}\r\n```\r\nInstead, it produces about 60 lines of assembly, which also contain calls to `__rust_alloc()` and `alloc::raw_vec::capacity_overflow()`.\r\nThe following code is better:\r\n```rust\r\npub fn noop(v: &mut Vec<i32>) {\r\n    if let Some(last) = v.pop() {\r\n        assert!(v.len() < v.capacity());\r\n        v.push(last)\r\n    }\r\n}\r\n```\r\nproducing:\r\n```asm\r\nexample::noop:\r\n        push    rax\r\n        mov     rax, qword ptr [rdi + 16]\r\n        test    rax, rax\r\n        je      .LBB7_3\r\n        lea     rcx, [rax - 1]\r\n        mov     qword ptr [rdi + 16], rcx\r\n        cmp     rcx, qword ptr [rdi + 8]\r\n        jae     .LBB7_4\r\n        mov     qword ptr [rdi + 16], rax\r\n.LBB7_3:\r\n        pop     rax\r\n        ret\r\n.LBB7_4:\r\n        call    std::panicking::begin_panic\r\n        ud2\r\n```\r\nAnd even better:\r\n```rust\r\npub fn noop(v: &mut Vec<i32>) {\r\n    if let Some(last) = v.pop() {\r\n        if v.capacity() <= v.len() {\r\n            unsafe { std::hint::unreachable_unchecked() }\r\n        }\r\n        v.push(last)\r\n    }\r\n}\r\n```\r\nproducing:\r\n```asm\r\nexample::noop:\r\n        ret\r\n```\r\n\r\n[Compiler explorer](https://godbolt.org/z/lQS6Pr)\r\n\r\nI feel like the compiler should be able to handle this situation better, considering that all the information is readily available.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/61939/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/61939/timeline", "performed_via_github_app": null, "state_reason": null}