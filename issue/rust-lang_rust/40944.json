{"url": "https://api.github.com/repos/rust-lang/rust/issues/40944", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/40944/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/40944/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/40944/events", "html_url": "https://github.com/rust-lang/rust/issues/40944", "id": 218496606, "node_id": "MDU6SXNzdWUyMTg0OTY2MDY=", "number": 40944, "title": "Error uses parameter name out of context: cannot infer type for `U`", "user": {"login": "kornelski", "id": 72159, "node_id": "MDQ6VXNlcjcyMTU5", "avatar_url": "https://avatars.githubusercontent.com/u/72159?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kornelski", "html_url": "https://github.com/kornelski", "followers_url": "https://api.github.com/users/kornelski/followers", "following_url": "https://api.github.com/users/kornelski/following{/other_user}", "gists_url": "https://api.github.com/users/kornelski/gists{/gist_id}", "starred_url": "https://api.github.com/users/kornelski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kornelski/subscriptions", "organizations_url": "https://api.github.com/users/kornelski/orgs", "repos_url": "https://api.github.com/users/kornelski/repos", "events_url": "https://api.github.com/users/kornelski/events{/privacy}", "received_events_url": "https://api.github.com/users/kornelski/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-03-31T13:06:56Z", "updated_at": "2017-06-22T16:22:02Z", "closed_at": "2017-06-22T16:22:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The message is technically correct, but it refers to a generic name `U` that is not present in user's source code, and has no meaning in the current context.\r\n\r\n```rust\r\nfn main() {\r\n    assert_eq!(\"bar\".into(), \"foo\".into());\r\n}\r\n```\r\n\r\n> error[E0282]: unable to infer enough type information about `U`\r\n>  cannot infer type for `U`\r\n\r\nIt's even weirder that the type `U` is [not in `Into<T>`'s definition](https://doc.rust-lang.org/std/convert/trait.Into.html), but comes from somewhere else inside stdlib.\r\n\r\n```rust\r\npub trait Into<T> {\r\n    fn into(self) -> T;\r\n}\r\n```\r\n\r\nIt would be clearer if rustc has shown `Into<U>` instead, or perhaps the stdlib implementation could rename the cryptic `U` to something self-explanatory like `TypeToBeConvertedInto`.", "closed_by": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/40944/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/40944/timeline", "performed_via_github_app": null, "state_reason": "completed"}