{"url": "https://api.github.com/repos/rust-lang/rust/issues/34028", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/34028/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/34028/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/34028/events", "html_url": "https://github.com/rust-lang/rust/issues/34028", "id": 158063460, "node_id": "MDU6SXNzdWUxNTgwNjM0NjA=", "number": 34028, "title": "Macro hygiene regression", "user": {"login": "sfackler", "id": 1455697, "node_id": "MDQ6VXNlcjE0NTU2OTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1455697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfackler", "html_url": "https://github.com/sfackler", "followers_url": "https://api.github.com/users/sfackler/followers", "following_url": "https://api.github.com/users/sfackler/following{/other_user}", "gists_url": "https://api.github.com/users/sfackler/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfackler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfackler/subscriptions", "organizations_url": "https://api.github.com/users/sfackler/orgs", "repos_url": "https://api.github.com/users/sfackler/repos", "events_url": "https://api.github.com/users/sfackler/events{/privacy}", "received_events_url": "https://api.github.com/users/sfackler/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 147085028, "node_id": "MDU6TGFiZWwxNDcwODUwMjg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-nightly", "name": "regression-from-stable-to-nightly", "color": "e4008a", "default": false, "description": "Performance or correctness regression from stable to nightly."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-06-02T05:39:50Z", "updated_at": "2016-06-05T06:49:39Z", "closed_at": "2016-06-05T06:49:39Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "[rust-security-framework](https://github.com/sfackler/rust-security-framework) no longer compiles on nightly due to what I think is a regression in macro hygiene:\n\n```\nsrc/os/macos/secure_transport.rs:95:13: 101:14 error: method `set_allow_server_identity_change` is not a member of trait `SslContextExt` [E0407]\nsrc/os/macos/secure_transport.rs:95             fn $set(&mut self, value: bool) -> Result<()> {\n                                                ^\nsrc/os/macos/secure_transport.rs:165:5: 172:6 note: in this expansion of impl_options! (defined in src/os/macos/secure_transport.rs)\nsrc/os/macos/secure_transport.rs:95:13: 101:14 help: run `rustc --explain E0407` to see a detailed explanation\nsrc/os/macos/secure_transport.rs:167:57: 167:58 error: unresolved name `kSSLSessionOptionAllowServerIdentityChange` [E0425]\nsrc/os/macos/secure_transport.rs:167         const kSSLSessionOptionAllowServerIdentityChange: allow_server_identity_change & set_allow_server_identity_change,\n                                                                                             ^\nsrc/os/macos/secure_transport.rs:165:5: 172:6 note: in this expansion of impl_options! (defined in src/os/macos/secure_transport.rs)\nsrc/os/macos/secure_transport.rs:167:57: 167:58 help: run `rustc --explain E0425` to see a detailed explanation\nsrc/os/macos/secure_transport.rs:104:13: 108:14 error: method `allow_server_identity_change` is not a member of trait `SslContextExt` [E0407]\nsrc/os/macos/secure_transport.rs:104             fn $get(&self) -> Result<bool> {\n                                                 ^\nsrc/os/macos/secure_transport.rs:165:5: 172:6 note: in this expansion of impl_options! (defined in src/os/macos/secure_transport.rs)\nsrc/os/macos/secure_transport.rs:104:13: 108:14 help: run `rustc --explain E0407` to see a detailed explanation\nsrc/os/macos/secure_transport.rs:167:57: 167:58 error: unresolved name `kSSLSessionOptionAllowServerIdentityChange` [E0425]\nsrc/os/macos/secure_transport.rs:167         const kSSLSessionOptionAllowServerIdentityChange: allow_server_identity_change & set_allow_server_identity_change,\n                                                                                             ^\nsrc/os/macos/secure_transport.rs:106:26: 106:92 note: in this expansion of try! (defined in <std macros>)\nsrc/os/macos/secure_transport.rs:165:5: 172:6 note: in this expansion of impl_options! (defined in src/os/macos/secure_transport.rs)\nsrc/os/macos/secure_transport.rs:167:57: 167:58 help: run `rustc --explain E0425` to see a detailed explanation\nsrc/os/macos/secure_transport.rs:95:13: 101:14 error: method `set_fallback` is not a member of trait `SslContextExt` [E0407]\nsrc/os/macos/secure_transport.rs:95             fn $set(&mut self, value: bool) -> Result<()> {\n                                                ^\nsrc/os/macos/secure_transport.rs:165:5: 172:6 note: in this expansion of impl_options! (defined in src/os/macos/secure_transport.rs)\nsrc/os/macos/secure_transport.rs:95:13: 101:14 help: run `rustc --explain E0407` to see a detailed explanation\nsrc/os/macos/secure_transport.rs:169:40: 169:41 error: unresolved name `kSSLSessionOptionFallback` [E0425]\nsrc/os/macos/secure_transport.rs:169         const kSSLSessionOptionFallback: fallback & set_fallback,\n                                                                            ^\nsrc/os/macos/secure_transport.rs:165:5: 172:6 note: in this expansion of impl_options! (defined in src/os/macos/secure_transport.rs)\nsrc/os/macos/secure_transport.rs:169:40: 169:41 help: run `rustc --explain E0425` to see a detailed explanation\nsrc/os/macos/secure_transport.rs:104:13: 108:14 error: method `fallback` is not a member of trait `SslContextExt` [E0407]\nsrc/os/macos/secure_transport.rs:104             fn $get(&self) -> Result<bool> {\n                                                 ^\nsrc/os/macos/secure_transport.rs:165:5: 172:6 note: in this expansion of impl_options! (defined in src/os/macos/secure_transport.rs)\nsrc/os/macos/secure_transport.rs:104:13: 108:14 help: run `rustc --explain E0407` to see a detailed explanation\nsrc/os/macos/secure_transport.rs:169:40: 169:41 error: unresolved name `kSSLSessionOptionFallback` [E0425]\nsrc/os/macos/secure_transport.rs:169         const kSSLSessionOptionFallback: fallback & set_fallback,\n                                                                            ^\nsrc/os/macos/secure_transport.rs:106:26: 106:92 note: in this expansion of try! (defined in <std macros>)\nsrc/os/macos/secure_transport.rs:165:5: 172:6 note: in this expansion of impl_options! (defined in src/os/macos/secure_transport.rs)\nsrc/os/macos/secure_transport.rs:169:40: 169:41 help: run `rustc --explain E0425` to see a detailed explanation\nsrc/os/macos/secure_transport.rs:95:13: 101:14 error: method `set_break_on_client_hello` is not a member of trait `SslContextExt` [E0407]\nsrc/os/macos/secure_transport.rs:95             fn $set(&mut self, value: bool) -> Result<()> {\n                                                ^\nsrc/os/macos/secure_transport.rs:165:5: 172:6 note: in this expansion of impl_options! (defined in src/os/macos/secure_transport.rs)\nsrc/os/macos/secure_transport.rs:95:13: 101:14 help: run `rustc --explain E0407` to see a detailed explanation\nsrc/os/macos/secure_transport.rs:171:50: 171:51 error: unresolved name `kSSLSessionOptionBreakOnClientHello` [E0425]\nsrc/os/macos/secure_transport.rs:171         const kSSLSessionOptionBreakOnClientHello: break_on_client_hello & set_break_on_client_hello,\n                                                                                      ^\nsrc/os/macos/secure_transport.rs:165:5: 172:6 note: in this expansion of impl_options! (defined in src/os/macos/secure_transport.rs)\nsrc/os/macos/secure_transport.rs:171:50: 171:51 help: run `rustc --explain E0425` to see a detailed explanation\nsrc/os/macos/secure_transport.rs:104:13: 108:14 error: method `break_on_client_hello` is not a member of trait `SslContextExt` [E0407]\nsrc/os/macos/secure_transport.rs:104             fn $get(&self) -> Result<bool> {\n                                                 ^\nsrc/os/macos/secure_transport.rs:165:5: 172:6 note: in this expansion of impl_options! (defined in src/os/macos/secure_transport.rs)\nsrc/os/macos/secure_transport.rs:104:13: 108:14 help: run `rustc --explain E0407` to see a detailed explanation\nsrc/os/macos/secure_transport.rs:171:50: 171:51 error: unresolved name `kSSLSessionOptionBreakOnClientHello` [E0425]\nsrc/os/macos/secure_transport.rs:171         const kSSLSessionOptionBreakOnClientHello: break_on_client_hello & set_break_on_client_hello,\n                                                                                      ^\nsrc/os/macos/secure_transport.rs:106:26: 106:92 note: in this expansion of try! (defined in <std macros>)\nsrc/os/macos/secure_transport.rs:165:5: 172:6 note: in this expansion of impl_options! (defined in src/os/macos/secure_transport.rs)\nsrc/os/macos/secure_transport.rs:171:50: 171:51 help: run `rustc --explain E0425` to see a detailed explanation\nsrc/secure_transport.rs:654:49: 654:50 error: unresolved name `kSSLSessionOptionBreakOnClientAuth` [E0425]\nsrc/secure_transport.rs:654         const kSSLSessionOptionBreakOnClientAuth: break_on_client_auth & set_break_on_client_auth,\n                                                                            ^\nsrc/secure_transport.rs:642:5: 667:6 note: in this expansion of impl_options! (defined in src/secure_transport.rs)\nsrc/secure_transport.rs:654:49: 654:50 help: run `rustc --explain E0425` to see a detailed explanation\nsrc/secure_transport.rs:654:49: 654:50 error: unresolved name `kSSLSessionOptionBreakOnClientAuth` [E0425]\nsrc/secure_transport.rs:654         const kSSLSessionOptionBreakOnClientAuth: break_on_client_auth & set_break_on_client_auth,\n                                                                            ^\nsrc/secure_transport.rs:373:26: 373:83 note: in this expansion of try! (defined in <std macros>)\nsrc/secure_transport.rs:642:5: 667:6 note: in this expansion of impl_options! (defined in src/secure_transport.rs)\nsrc/secure_transport.rs:654:49: 654:50 help: run `rustc --explain E0425` to see a detailed explanation\nsrc/secure_transport.rs:660:42: 660:43 error: unresolved name `kSSLSessionOptionFalseStart` [E0425]\nsrc/secure_transport.rs:660         const kSSLSessionOptionFalseStart: false_start & set_false_start,\n                                                                     ^\nsrc/secure_transport.rs:642:5: 667:6 note: in this expansion of impl_options! (defined in src/secure_transport.rs)\nsrc/secure_transport.rs:660:42: 660:43 help: run `rustc --explain E0425` to see a detailed explanation\nsrc/secure_transport.rs:660:42: 660:43 error: unresolved name `kSSLSessionOptionFalseStart` [E0425]\nsrc/secure_transport.rs:660         const kSSLSessionOptionFalseStart: false_start & set_false_start,\n                                                                     ^\nsrc/secure_transport.rs:373:26: 373:83 note: in this expansion of try! (defined in <std macros>)\nsrc/secure_transport.rs:642:5: 667:6 note: in this expansion of impl_options! (defined in src/secure_transport.rs)\nsrc/secure_transport.rs:660:42: 660:43 help: run `rustc --explain E0425` to see a detailed explanation\nsrc/secure_transport.rs:666:49: 666:50 error: unresolved name `kSSLSessionOptionSendOneByteRecord` [E0425]\nsrc/secure_transport.rs:666         const kSSLSessionOptionSendOneByteRecord: send_one_byte_record & set_send_one_byte_record,\n                                                                            ^\nsrc/secure_transport.rs:642:5: 667:6 note: in this expansion of impl_options! (defined in src/secure_transport.rs)\nsrc/secure_transport.rs:666:49: 666:50 help: run `rustc --explain E0425` to see a detailed explanation\nsrc/secure_transport.rs:666:49: 666:50 error: unresolved name `kSSLSessionOptionSendOneByteRecord` [E0425]\nsrc/secure_transport.rs:666         const kSSLSessionOptionSendOneByteRecord: send_one_byte_record & set_send_one_byte_record,\n                                                                            ^\nsrc/secure_transport.rs:373:26: 373:83 note: in this expansion of try! (defined in <std macros>)\nsrc/secure_transport.rs:642:5: 667:6 note: in this expansion of impl_options! (defined in src/secure_transport.rs)\nsrc/secure_transport.rs:666:49: 666:50 help: run `rustc --explain E0425` to see a detailed explanation\n```\n\nHere we have methods on a trait that are defined by hand, but implemented by macro. The function names are not generated by the macro - they're passed in, so I would not expect any hygiene shenanigans to apply.\n\nPossibly #32923?\n\ncc @nrc @jseyfried \n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/34028/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/34028/timeline", "performed_via_github_app": null, "state_reason": "completed"}