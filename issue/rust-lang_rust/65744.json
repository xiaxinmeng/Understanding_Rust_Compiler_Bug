{"url": "https://api.github.com/repos/rust-lang/rust/issues/65744", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/65744/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/65744/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/65744/events", "html_url": "https://github.com/rust-lang/rust/issues/65744", "id": 511624477, "node_id": "MDU6SXNzdWU1MTE2MjQ0Nzc=", "number": 65744, "title": "Improve std::hash::Hasher to finish with an associated type", "user": {"login": "afranchuk", "id": 4296804, "node_id": "MDQ6VXNlcjQyOTY4MDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4296804?v=4", "gravatar_id": "", "url": "https://api.github.com/users/afranchuk", "html_url": "https://github.com/afranchuk", "followers_url": "https://api.github.com/users/afranchuk/followers", "following_url": "https://api.github.com/users/afranchuk/following{/other_user}", "gists_url": "https://api.github.com/users/afranchuk/gists{/gist_id}", "starred_url": "https://api.github.com/users/afranchuk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/afranchuk/subscriptions", "organizations_url": "https://api.github.com/users/afranchuk/orgs", "repos_url": "https://api.github.com/users/afranchuk/repos", "events_url": "https://api.github.com/users/afranchuk/events{/privacy}", "received_events_url": "https://api.github.com/users/afranchuk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 308787505, "node_id": "MDU6TGFiZWwzMDg3ODc1MDU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/rust-2-breakage-wishlist", "name": "rust-2-breakage-wishlist", "color": "F1AA00", "default": false, "description": "In the wishlist of breaking changes that requires rust 2.0"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-10-23T23:33:18Z", "updated_at": "2019-10-24T15:35:10Z", "closed_at": "2019-10-23T23:42:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "`std::hash::Hasher` currently defines a `finish()` method that returns a fixed type (`u64`). This trait could be improved by changing the return type to some associated `Output` type. I don't see a particular reason this wouldn't work, since, for instance, `std::collections::HashMap` can simply provide a `Hasher` which produces the type it expects. This would be nice as then types implementing `std::hash::Hash` could be used with, for example, cryptographic hash functions. I am aware of the `digest` crate intended for that use case, but I don't see a reason not to improve the existing trait.", "closed_by": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/65744/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 1}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/65744/timeline", "performed_via_github_app": null, "state_reason": "completed"}