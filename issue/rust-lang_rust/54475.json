{"url": "https://api.github.com/repos/rust-lang/rust/issues/54475", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/54475/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/54475/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/54475/events", "html_url": "https://github.com/rust-lang/rust/issues/54475", "id": 362859240, "node_id": "MDU6SXNzdWUzNjI4NTkyNDA=", "number": 54475, "title": "const eval Vec::new() the same as vec![]", "user": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-09-22T13:58:11Z", "updated_at": "2021-03-13T19:49:46Z", "closed_at": "2021-03-13T19:49:46Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "For some reason, it seems that rustc can deduce `.len() == 0` better for `vec![]` than for `Vec::new()`.\r\n\r\n````rust\r\npub fn a() -> usize {\r\n    let v: Vec<u8> = Vec::new(); \r\n    let mut v2: Vec<u8> = Vec::new();\r\n\r\n    if v.len() > 1 { // false\r\n        v2 = vec![2];\r\n    } else { \r\n        v2 = Vec::new();\r\n    }\r\n    v.len() + v2.len() // 0\r\n}\r\n````\r\n````asm\r\nexample::a:\r\n        push    rbx\r\n        sub     rsp, 48\r\n        xorps   xmm0, xmm0\r\n        movaps  xmmword ptr [rsp + 32], xmm0\r\n        mov     qword ptr [rsp + 8], 1\r\n        movups  xmmword ptr [rsp + 16], xmm0\r\n        mov     rsi, qword ptr [rsp + 16]\r\n        mov     rbx, qword ptr [rsp + 24]\r\n        test    rsi, rsi\r\n        je      .LBB0_2\r\n        mov     edi, 1\r\n        mov     edx, 1\r\n        call    __rust_dealloc@PLT\r\n.LBB0_2:\r\n        mov     rax, rbx\r\n        add     rsp, 48\r\n        pop     rbx\r\n        ret\r\n````\r\nhttps://rust.godbolt.org/z/xEhPhI\r\n\r\nsurprisingly, when I replaced one `Vec::new()` with `vec![]`, rustc was able to const-eval the return value to `0`.\r\n\r\n````rust\r\npub fn a() -> usize {\r\n    let v: Vec<u8> = Vec::new(); \r\n    let mut v2: Vec<u8> = Vec::new();\r\n\r\n    if v.len() > 1 { // false\r\n        v2 = vec![2];\r\n    } else { \r\n        v2 = vec![]; // I changed this\r\n    }\r\n    v.len() + v2.len() // 0\r\n}\r\n````\r\n````asm\r\nexample::a:\r\n        xor     eax, eax\r\n        ret\r\n````\r\nhttps://rust.godbolt.org/z/cdbEGU\r\n\r\nApparently \r\n````rust\r\npub fn a() -> usize {\r\n    let v: Vec<u8> = vec![];\r\n    v.len()\r\n}\r\n````\r\nand\r\n````rust\r\npub fn a() -> usize {\r\n    let v: Vec<u8> = Vec::new();\r\n    v.len()\r\n}\r\n````\r\ngenerate the same code tough.", "closed_by": {"login": "nikic", "id": 216080, "node_id": "MDQ6VXNlcjIxNjA4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/216080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikic", "html_url": "https://github.com/nikic", "followers_url": "https://api.github.com/users/nikic/followers", "following_url": "https://api.github.com/users/nikic/following{/other_user}", "gists_url": "https://api.github.com/users/nikic/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikic/subscriptions", "organizations_url": "https://api.github.com/users/nikic/orgs", "repos_url": "https://api.github.com/users/nikic/repos", "events_url": "https://api.github.com/users/nikic/events{/privacy}", "received_events_url": "https://api.github.com/users/nikic/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/54475/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/54475/timeline", "performed_via_github_app": null, "state_reason": "completed"}