{"url": "https://api.github.com/repos/rust-lang/rust/issues/28449", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/28449/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/28449/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/28449/events", "html_url": "https://github.com/rust-lang/rust/issues/28449", "id": 106870706, "node_id": "MDU6SXNzdWUxMDY4NzA3MDY=", "number": 28449, "title": "Mutable borrows in an `else if` after an `if let` are disallowed", "user": {"login": "ftxqxd", "id": 2055302, "node_id": "MDQ6VXNlcjIwNTUzMDI=", "avatar_url": "https://avatars.githubusercontent.com/u/2055302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ftxqxd", "html_url": "https://github.com/ftxqxd", "followers_url": "https://api.github.com/users/ftxqxd/followers", "following_url": "https://api.github.com/users/ftxqxd/following{/other_user}", "gists_url": "https://api.github.com/users/ftxqxd/gists{/gist_id}", "starred_url": "https://api.github.com/users/ftxqxd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ftxqxd/subscriptions", "organizations_url": "https://api.github.com/users/ftxqxd/orgs", "repos_url": "https://api.github.com/users/ftxqxd/repos", "events_url": "https://api.github.com/users/ftxqxd/events{/privacy}", "received_events_url": "https://api.github.com/users/ftxqxd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-09-16T21:47:08Z", "updated_at": "2016-01-21T10:18:36Z", "closed_at": "2016-01-21T10:18:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "``` rust\nfn main() {\n    let mut f = Some(1);\n    if let Some(a) = f {\n    } else if f.as_mut().is_some() {}\n}\n```\n\nGives:\n\n```\n<anon>:4:15: 4:16 error: cannot mutably borrow in a pattern guard [E0301]\n<anon>:4     } else if f.as_mut().is_some() {}\n                       ^\nnote: in expansion of if let expansion\n<anon>:3:5: 4:38 note: expansion site\n```\n\nThis is an unexpected result of how `if let` desugaring works, presumably. It\u2019s unexpected because mutable borrowing is normally allowed in `else if` conditions, but because `if let` seems to desugar a following `else if` into a pattern guard, this is disallowed.\n\nTo me it would make more sense for this to be treated like any other `else if`, and be permitted, or at the very least have a clearer message (because it\u2019s not obvious (and is really just an implementation detail) how an `else if` condition is a pattern guard).\n", "closed_by": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/28449/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/28449/timeline", "performed_via_github_app": null, "state_reason": "completed"}