{"url": "https://api.github.com/repos/rust-lang/rust/issues/106576", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/106576/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/106576/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/106576/events", "html_url": "https://github.com/rust-lang/rust/issues/106576", "id": 1524198904, "node_id": "I_kwDOAAsO6M5a2W34", "number": 106576, "title": "create_object_file doesn't set correct ELF header flags for AVR targets", "user": {"login": "agausmann", "id": 6611767, "node_id": "MDQ6VXNlcjY2MTE3Njc=", "avatar_url": "https://avatars.githubusercontent.com/u/6611767?v=4", "gravatar_id": "", "url": "https://api.github.com/users/agausmann", "html_url": "https://github.com/agausmann", "followers_url": "https://api.github.com/users/agausmann/followers", "following_url": "https://api.github.com/users/agausmann/following{/other_user}", "gists_url": "https://api.github.com/users/agausmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/agausmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/agausmann/subscriptions", "organizations_url": "https://api.github.com/users/agausmann/orgs", "repos_url": "https://api.github.com/users/agausmann/repos", "events_url": "https://api.github.com/users/agausmann/events{/privacy}", "received_events_url": "https://api.github.com/users/agausmann/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1884641928, "node_id": "MDU6TGFiZWwxODg0NjQxOTI4", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-AVR", "name": "O-AVR", "color": "6e6ec0", "default": false, "description": "Target: AVR processors (ATtiny, ATmega, etc.)"}], "state": "open", "locked": false, "assignee": {"login": "agausmann", "id": 6611767, "node_id": "MDQ6VXNlcjY2MTE3Njc=", "avatar_url": "https://avatars.githubusercontent.com/u/6611767?v=4", "gravatar_id": "", "url": "https://api.github.com/users/agausmann", "html_url": "https://github.com/agausmann", "followers_url": "https://api.github.com/users/agausmann/followers", "following_url": "https://api.github.com/users/agausmann/following{/other_user}", "gists_url": "https://api.github.com/users/agausmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/agausmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/agausmann/subscriptions", "organizations_url": "https://api.github.com/users/agausmann/orgs", "repos_url": "https://api.github.com/users/agausmann/repos", "events_url": "https://api.github.com/users/agausmann/events{/privacy}", "received_events_url": "https://api.github.com/users/agausmann/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "agausmann", "id": 6611767, "node_id": "MDQ6VXNlcjY2MTE3Njc=", "avatar_url": "https://avatars.githubusercontent.com/u/6611767?v=4", "gravatar_id": "", "url": "https://api.github.com/users/agausmann", "html_url": "https://github.com/agausmann", "followers_url": "https://api.github.com/users/agausmann/followers", "following_url": "https://api.github.com/users/agausmann/following{/other_user}", "gists_url": "https://api.github.com/users/agausmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/agausmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/agausmann/subscriptions", "organizations_url": "https://api.github.com/users/agausmann/orgs", "repos_url": "https://api.github.com/users/agausmann/repos", "events_url": "https://api.github.com/users/agausmann/events{/privacy}", "received_events_url": "https://api.github.com/users/agausmann/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2023-01-07T22:43:28Z", "updated_at": "2023-01-27T07:54:04Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "(Downstream issue: Rahix/avr-hal#388)\r\n\r\nA bug was introduced in #103240 (5642a751ecc76fff232351f5686d49475fb06a09) when compiling for AVR targets, causing errors in linking which look like:\r\n\r\n```\r\nerror: linking with `avr-gcc` failed: exit status: 1\r\n  |\r\n  = note: \"avr-gcc\" \"-mmcu=attiny404\" \"/tmp/rustcmivxhx/symbols.o\" \"/home/goose/dev/hwlife/life-cell/firmware/target/avr-attiny404/debug/deps/life_cell-6668cd99ba2eaeff.avrxmega_hal-cc404b4688795bef.avrxmega_hal.d6125529-cgu.0.rcgu.o.rcgu.o\" \"-Wl,--as-needed\" \"-L\" \"/home/goose/dev/hwlife/life-cell/firmware/target/avr-attiny404/debug/deps\" \"-L\" \"/home/goose/dev/hwlife/life-cell/firmware/target/debug/deps\" \"-L\" \"/home/goose/build/rust/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/avr-attiny404/lib\" \"-Wl,-Bstatic\" \"/home/goose/dev/hwlife/life-cell/firmware/target/avr-attiny404/debug/deps/libcompiler_builtins-dfbc3c77452aecc4.rlib\" \"-Wl,-Bdynamic\" \"-lgcc\" \"-Wl,-znoexecstack\" \"-L\" \"/home/goose/build/rust/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/avr-attiny404/lib\" \"-o\" \"/home/goose/dev/hwlife/life-cell/firmware/target/avr-attiny404/debug/deps/life_cell-6668cd99ba2eaeff.elf\" \"-Wl,--gc-sections\" \"-no-pie\"\r\n  = note: /usr/lib/arduino/hardware/tools/avr/bin/../lib/gcc/avr/7.3.0/../../../../avr/bin/ld: avr architecture of input file `/tmp/rustcmivxhx/symbols.o' is incompatible with avr:103 output\r\n          collect2: error: ld returned 1 exit status\r\n```\r\n\r\nThe PR in question added support for AVR architecture in `create_object_file`, but it doesn't actually make the necessary changes to set the `e_flags` field, which is used to specify the AVR ISA revision. As a knock-on-effect, this causes [`add_linked_symbol_object`](https://github.com/BelovDV/rustc/blob/5642a751ecc76fff232351f5686d49475fb06a09/compiler/rustc_codegen_ssa/src/back/link.rs#L1729-L1741) to avoid an early return and succeed in creating a `symbols.o` file, but this object file doesn't have `e_flags` set correctly.\r\n\r\nI believe that is the cause of this error; the AVR linker checks the `e_flags` field to make sure the ISA revision matches what is expected, and rustc is not setting that field correctly.\r\n\r\n<!-- TRIAGEBOT_START -->\r\n\r\n<!-- TRIAGEBOT_ASSIGN_START -->\r\n\r\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"agausmann\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\r\n\r\n<!-- TRIAGEBOT_ASSIGN_END -->\r\n<!-- TRIAGEBOT_END -->", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/106576/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/106576/timeline", "performed_via_github_app": null, "state_reason": null}