{"url": "https://api.github.com/repos/rust-lang/rust/issues/112046", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/112046/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/112046/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/112046/events", "html_url": "https://github.com/rust-lang/rust/issues/112046", "id": 1729599391, "node_id": "I_kwDOAAsO6M5nF5ef", "number": 112046, "title": "Mismatch reported for fn impl with HRTB lifetime without cast", "user": {"login": "mqudsi", "id": 606923, "node_id": "MDQ6VXNlcjYwNjkyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/606923?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mqudsi", "html_url": "https://github.com/mqudsi", "followers_url": "https://api.github.com/users/mqudsi/followers", "following_url": "https://api.github.com/users/mqudsi/following{/other_user}", "gists_url": "https://api.github.com/users/mqudsi/gists{/gist_id}", "starred_url": "https://api.github.com/users/mqudsi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mqudsi/subscriptions", "organizations_url": "https://api.github.com/users/mqudsi/orgs", "repos_url": "https://api.github.com/users/mqudsi/repos", "events_url": "https://api.github.com/users/mqudsi/events{/privacy}", "received_events_url": "https://api.github.com/users/mqudsi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2023-05-28T18:16:17Z", "updated_at": "2023-05-31T12:31:01Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```rust\r\ntype IntCallback = fn(&i32);\r\n\r\nenum Callback {\r\n    Int(IntCallback)\r\n}\r\n\r\nimpl Into<Callback> for for<'a> fn(&'a i32) {\r\n    fn into(self) -> Callback {\r\n        Callback::Int(self)\r\n    }\r\n}\r\n\r\nfn callback(_: &i32) {\r\n}\r\n\r\nfn main() {\r\n    let callback: Callback = callback.into();\r\n}\r\n```\r\n\r\nI expected to see this happen: the impl for the fn pointer should be picked up and used.\r\n\r\nInstead, this happened:\r\n\r\n```\r\nCompiling playground v0.0.1 (/playground)\r\nerror[[E0277]](https://doc.rust-lang.org/nightly/error_codes/E0277.html): the trait bound `Callback: From<for<'a> fn(&'a i32) {callback}>` is not satisfied\r\n  --> src/main.rs:17:39\r\n   |\r\n17 |     let callback: Callback = callback.into();\r\n   |                                       ^^^^ the trait `From<for<'a> fn(&'a i32) {callback}>` is not implemented for `Callback`\r\n   |\r\n   = help: the trait `Into<Callback>` is implemented for fn pointer `for<'a> fn(&'a i32)`, cast using `as`\r\n   = note: required for `for<'a> fn(&'a i32) {callback}` to implement `Into<Callback>`\r\n\r\nFor more information about this error, try `rustc --explain E0277`.\r\nerror: could not compile `playground` (bin \"playground\") due to previous error\r\n```\r\n\r\nSince `callback` can be passed directly to a function taking `IntCallback` as a parameter, it should be possible for the existing `From<>` impl to be used directly.\r\n\r\nThis makes it extremely verbose to use generic bounds to accept a callback:\r\n\r\n```rust\r\nfn callback(_: &i32) {\r\n}\r\n\r\nfn foo<C: Into<Callback>>(c: C) {\r\n    todo!();\r\n}\r\n\r\nfn main() {\r\n    foo(callback);\r\n}\r\n```\r\n\r\nwhich returns\r\n\r\n```\r\nerror[[E0277]](https://doc.rust-lang.org/nightly/error_codes/E0277.html): the trait bound `Callback: From<for<'a> fn(&'a i32) {callback}>` is not satisfied\r\n  --> src/main.rs:17:9\r\n   |\r\n17 |     foo(callback);\r\n   |     --- ^^^^^^^^ the trait `From<for<'a> fn(&'a i32) {callback}>` is not implemented for `Callback`\r\n   |     |\r\n   |     required by a bound introduced by this call\r\n   |\r\n   = help: the trait `Into<Callback>` is implemented for fn pointer `for<'a> fn(&'a i32)`, cast using `as`\r\n   = note: required for `for<'a> fn(&'a i32) {callback}` to implement `Into<Callback>`\r\nnote: required by a bound in `foo`\r\n  --> src/main.rs:20:11\r\n   |\r\n20 | fn foo<C: Into<Callback>>(c: C) {\r\n   |           ^^^^^^^^^^^^^^ required by this bound in `foo`\r\n\r\nFor more information about this error, try `rustc --explain E0277`.\r\nerror: could not compile `playground` (bin \"playground\") due to previous error\r\n```\r\n\r\nPlayground link: https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021&gist=c367afd81fc7219e802099735acc2507\r\n\r\nSide note: the diagnostics for this have drastically improved in the latest nightlies. The nightly build I have installed didn't give me the \"cast using `as`\" hint and instead said \"type xxxx doesn't implement Foo, implemented for \\<same type xxxx\\>\"\r\n\r\n### Meta\r\n\r\n`rustc --version --verbose`:\r\n```\r\n 1.71.0-nightly (2023-05-27 cca7ee58110726983951)\r\n```\r\n\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/112046/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/112046/timeline", "performed_via_github_app": null, "state_reason": null}