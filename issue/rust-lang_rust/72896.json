{"url": "https://api.github.com/repos/rust-lang/rust/issues/72896", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/72896/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/72896/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/72896/events", "html_url": "https://github.com/rust-lang/rust/issues/72896", "id": 628711437, "node_id": "MDU6SXNzdWU2Mjg3MTE0Mzc=", "number": 72896, "title": "ICE when structurally matching a struct containing an associated type on latest Nightly.", "user": {"login": "Lymia", "id": 483849, "node_id": "MDQ6VXNlcjQ4Mzg0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/483849?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lymia", "html_url": "https://github.com/Lymia", "followers_url": "https://api.github.com/users/Lymia/followers", "following_url": "https://api.github.com/users/Lymia/following{/other_user}", "gists_url": "https://api.github.com/users/Lymia/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lymia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lymia/subscriptions", "organizations_url": "https://api.github.com/users/Lymia/orgs", "repos_url": "https://api.github.com/users/Lymia/repos", "events_url": "https://api.github.com/users/Lymia/events{/privacy}", "received_events_url": "https://api.github.com/users/Lymia/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 147085028, "node_id": "MDU6TGFiZWwxNDcwODUwMjg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-nightly", "name": "regression-from-stable-to-nightly", "color": "e4008a", "default": false, "description": "Performance or correctness regression from stable to nightly."}, {"id": 149689562, "node_id": "MDU6TGFiZWwxNDk2ODk1NjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-associated-items", "name": "A-associated-items", "color": "f7e101", "default": false, "description": "Area: Associated items such as associated types and consts."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 900795185, "node_id": "MDU6TGFiZWw5MDA3OTUxODU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-eval", "name": "A-const-eval", "color": "f7e101", "default": false, "description": "Area: constant evaluation (mir interpretation)"}, {"id": 1966877457, "node_id": "MDU6TGFiZWwxOTY2ODc3NDU3", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-critical", "name": "P-critical", "color": "eb6420", "default": false, "description": "Critical priority"}, {"id": 1976249039, "node_id": "MDU6TGFiZWwxOTc2MjQ5MDM5", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-patterns", "name": "A-patterns", "color": "f7e101", "default": false, "description": "Relating to patterns and pattern matching"}], "state": "closed", "locked": false, "assignee": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2020-06-01T20:38:52Z", "updated_at": "2020-06-11T01:26:30Z", "closed_at": "2020-06-11T01:26:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "One of the tests in my enumset crate has started throwing an ICE on the latest nightly.\r\n\r\nThe problem seems to be that I use an associated type as a field in a struct I'm structurally matching, and this has been broken on the latest nightly.\r\n\r\n### Code\r\n\r\n[Playground Link](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=05bb91b14fad31c31f66b4409abd43a7)\r\n\r\n```Rust\r\ntrait EnumSetType: Copy + Eq {\r\n    type Repr;\r\n}\r\n\r\n#[derive(Copy, Clone, PartialEq, Eq)]\r\nenum Enum8 { }\r\nimpl EnumSetType for Enum8 {\r\n    type Repr = u8;\r\n}\r\n\r\n#[derive(Copy, Clone, PartialEq, Eq)]\r\nstruct EnumSet<T: EnumSetType> {\r\n    __enumset_underlying: T::Repr,\r\n}\r\n\r\nconst CONST_SET: EnumSet<Enum8> = EnumSet { __enumset_underlying: 3 };\r\n\r\n#[test]\r\nfn match_const_test() {\r\n    match CONST_SET {\r\n        CONST_SET => { /* ok */ }\r\n        _ => panic!(\"match fell through?\"),\r\n    }\r\n}\r\n```\r\n\r\n### Error output\r\n\r\n```\r\n   Compiling test_crate v0.1.0 (/home/[...]/enumset_test)\r\nerror: internal compiler error: src/librustc_mir_build/hair/pattern/const_to_pat.rs:137: use of a constant whose type is a projection inside a pattern\r\n\r\nthread 'rustc' panicked at 'Box<Any>', src/librustc_errors/lib.rs:907:9\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.45.0-nightly (5fd2f06e9 2020-05-31) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nerror: aborting due to previous error\r\n\r\nerror: could not compile `test_crate`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\n   Compiling test_crate v0.1.0 (/home/[...]/enumset_test)\r\nerror: internal compiler error: src/librustc_mir_build/hair/pattern/const_to_pat.rs:137: use of a constant whose type is a projection inside a pattern\r\n\r\nthread 'rustc' panicked at 'Box<Any>', src/librustc_errors/lib.rs:907:9\r\nstack backtrace:\r\n   0: backtrace::backtrace::libunwind::trace\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/libunwind.rs:86\r\n   1: backtrace::backtrace::trace_unsynchronized\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/mod.rs:66\r\n   2: std::sys_common::backtrace::_print_fmt\r\n             at src/libstd/sys_common/backtrace.rs:78\r\n   3: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt\r\n             at src/libstd/sys_common/backtrace.rs:59\r\n   4: core::fmt::write\r\n             at src/libcore/fmt/mod.rs:1076\r\n   5: std::io::Write::write_fmt\r\n             at src/libstd/io/mod.rs:1537\r\n   6: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:62\r\n   7: std::sys_common::backtrace::print\r\n             at src/libstd/sys_common/backtrace.rs:49\r\n   8: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/panicking.rs:198\r\n   9: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:218\r\n  10: rustc_driver::report_ice\r\n  11: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:490\r\n  12: std::panicking::begin_panic\r\n  13: rustc_errors::HandlerInner::bug\r\n  14: rustc_errors::Handler::bug\r\n  15: rustc_middle::util::bug::opt_span_bug_fmt::{{closure}}\r\n  16: rustc_middle::ty::context::tls::with_opt::{{closure}}\r\n  17: rustc_middle::ty::context::tls::with_opt\r\n  18: rustc_middle::util::bug::opt_span_bug_fmt\r\n  19: rustc_middle::util::bug::bug_fmt\r\n  20: rustc_mir_build::hair::pattern::const_to_pat::ConstToPat::to_pat\r\n  21: rustc_middle::ty::context::GlobalCtxt::enter_local\r\n  22: rustc_mir_build::hair::pattern::PatCtxt::lower_path\r\n  23: rustc_mir_build::hair::pattern::PatCtxt::lower_pattern\r\n  24: rustc_mir_build::hair::pattern::check_match::MatchVisitor::lower_pattern\r\n  25: <core::iter::adapters::Map<I,F> as core::iter::traits::iterator::Iterator>::fold\r\n  26: <rustc_mir_build::hair::pattern::check_match::MatchVisitor as rustc_hir::intravisit::Visitor>::visit_expr\r\n  27: <rustc_mir_build::hair::pattern::check_match::MatchVisitor as rustc_hir::intravisit::Visitor>::visit_expr\r\n  28: rustc_mir_build::hair::pattern::check_match::check_match\r\n  29: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::check_match>::compute\r\n  30: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  31: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  32: rustc_data_structures::stack::ensure_sufficient_stack\r\n  33: rustc_query_system::query::plumbing::get_query_impl\r\n  34: rustc_query_system::query::plumbing::ensure_query_impl\r\n  35: rustc_session::utils::<impl rustc_session::session::Session>::time\r\n  36: rustc_session::utils::<impl rustc_session::session::Session>::time\r\n  37: rustc_interface::passes::analysis\r\n  38: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::analysis>::compute\r\n  39: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  40: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  41: rustc_query_system::query::plumbing::get_query_impl\r\n  42: rustc_middle::ty::context::tls::enter_global\r\n  43: rustc_interface::interface::run_compiler_in_existing_thread_pool\r\n  44: rustc_ast::attr::with_globals\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.45.0-nightly (5fd2f06e9 2020-05-31) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [check_match] processing `match_const_test`\r\n#1 [analysis] running analysis passes on this crate\r\nend of query stack\r\nerror: aborting due to previous error\r\n\r\nerror: could not compile `test_crate`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n</p>\r\n</details>\r\n\r\n\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"lcnr\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/72896/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/72896/timeline", "performed_via_github_app": null, "state_reason": "completed"}