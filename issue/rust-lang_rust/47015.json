{"url": "https://api.github.com/repos/rust-lang/rust/issues/47015", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/47015/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/47015/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/47015/events", "html_url": "https://github.com/rust-lang/rust/issues/47015", "id": 284534589, "node_id": "MDU6SXNzdWUyODQ1MzQ1ODk=", "number": 47015, "title": "Bad native codegen (2017-12-25 Nightly)", "user": {"login": "leonardo-m", "id": 22328461, "node_id": "MDQ6VXNlcjIyMzI4NDYx", "avatar_url": "https://avatars.githubusercontent.com/u/22328461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leonardo-m", "html_url": "https://github.com/leonardo-m", "followers_url": "https://api.github.com/users/leonardo-m/followers", "following_url": "https://api.github.com/users/leonardo-m/following{/other_user}", "gists_url": "https://api.github.com/users/leonardo-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/leonardo-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leonardo-m/subscriptions", "organizations_url": "https://api.github.com/users/leonardo-m/orgs", "repos_url": "https://api.github.com/users/leonardo-m/repos", "events_url": "https://api.github.com/users/leonardo-m/events{/privacy}", "received_events_url": "https://api.github.com/users/leonardo-m/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-26T10:35:13Z", "updated_at": "2018-02-10T05:42:59Z", "closed_at": "2018-02-10T05:42:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Given this small program:\r\n\r\n```\r\n#[inline(never)]\r\nfn e97() -> u64 {\r\n    // Input.\r\n    const BASE: f64 = 28_433.0;\r\n    const EXP: u64 = 7_830_457;\r\n    const BIG: f64 = 1e10;\r\n\r\n    let mut b = EXP.next_power_of_two();\r\n\r\n    let mut n = 1.0;\r\n    while b > 0 {\r\n        if EXP & b != 0 {\r\n            n = (n * n * 2.0) % BIG;\r\n        } else {\r\n            n = (n * n) % BIG;\r\n        }\r\n        b >>= 1;\r\n    }\r\n\r\n    ((n * BASE + 1.0) % BIG) as u64\r\n}\r\n\r\nfn main() {\r\n    assert_eq!(e97(), 8_739_992_577);\r\n}\r\n```\r\n\r\nI am using:\r\n```\r\nrustc 1.24.0-nightly (4a7c072fa 2017-12-25)\r\ncommit-hash: 4a7c072fa61b42f96d8b75c37fc1edfd71172695\r\nhost: x86_64-pc-windows-gnu\r\n```\r\n\r\nIf I compile that program with this it works correctly:\r\n`rustc -C opt-level=1 test.rs`\r\n\r\nIf I compile it with a native CPU target it asserts:\r\n`rustc -C opt-level=1 -C target-cpu=native test.rs`\r\n\r\n\r\nThe llvm-ir of the e97 function produced with a default CPU target:\r\n\r\n```\r\n; test::e97\r\n; Function Attrs: noinline norecurse nounwind readnone uwtable\r\ndefine internal fastcc i64 @_ZN4test3e9717h2a230e2896608cc2E() unnamed_addr #3 {\r\nstart:\r\n  br label %bb4\r\n\r\nbb3:                                              ; preds = %bb4\r\n  %0 = fmul double %n.1.1, 2.843300e+04\r\n  %1 = fadd double %0, 1.000000e+00\r\n  %2 = frem double %1, 1.000000e+10\r\n  %3 = fptoui double %2 to i64\r\n  ret i64 %3\r\n\r\nbb4:                                              ; preds = %bb4, %start\r\n  %b.08 = phi i64 [ 8388608, %start ], [ %12, %bb4 ]\r\n  %n.07 = phi double [ 1.000000e+00, %start ], [ %n.1.1, %bb4 ]\r\n  %4 = and i64 %b.08, 7830457\r\n  %5 = icmp eq i64 %4, 0\r\n  %6 = fmul double %n.07, %n.07\r\n  %7 = fmul double %6, 2.000000e+00\r\n  %n.1.in = select i1 %5, double %6, double %7\r\n  %n.1 = frem double %n.1.in, 1.000000e+10\r\n  %8 = and i64 %b.08, 15660914\r\n  %9 = icmp eq i64 %8, 0\r\n  %10 = fmul double %n.1, %n.1\r\n  %11 = fmul double %10, 2.000000e+00\r\n  %n.1.in.1 = select i1 %9, double %10, double %11\r\n  %n.1.1 = frem double %n.1.in.1, 1.000000e+10\r\n  %12 = lshr i64 %b.08, 2\r\n  %13 = icmp eq i64 %12, 0\r\n  br i1 %13, label %bb3, label %bb4\r\n}\r\n```\r\n\r\nAnd the llvm-ir using the native CPU target:\r\n\r\n```\r\n; test::e97\r\n; Function Attrs: noinline norecurse nounwind readnone uwtable\r\ndefine internal fastcc i64 @_ZN4test3e9717h2a230e2896608cc2E() unnamed_addr #3 {\r\nstart:\r\n  br label %bb4\r\n\r\nbb3:                                              ; preds = %bb4\r\n  %0 = fmul double %n.1.3, 2.843300e+04\r\n  %1 = fadd double %0, 1.000000e+00\r\n  %2 = frem double %1, 1.000000e+10\r\n  %3 = fptoui double %2 to i64\r\n  ret i64 %3\r\n\r\nbb4:                                              ; preds = %bb4, %start\r\n  %b.08 = phi i64 [ 8388608, %start ], [ %20, %bb4 ]\r\n  %n.07 = phi double [ 1.000000e+00, %start ], [ %n.1.3, %bb4 ]\r\n  %4 = and i64 %b.08, 7830457\r\n  %5 = icmp eq i64 %4, 0\r\n  %6 = fmul double %n.07, %n.07\r\n  %7 = fmul double %6, 2.000000e+00\r\n  %n.1.in = select i1 %5, double %6, double %7\r\n  %n.1 = frem double %n.1.in, 1.000000e+10\r\n  %8 = and i64 %b.08, 15660914\r\n  %9 = icmp eq i64 %8, 0\r\n  %10 = fmul double %n.1, %n.1\r\n  %11 = fmul double %10, 2.000000e+00\r\n  %n.1.in.1 = select i1 %9, double %10, double %11\r\n  %n.1.1 = frem double %n.1.in.1, 1.000000e+10\r\n  %12 = and i64 %b.08, 31321828\r\n  %13 = icmp eq i64 %12, 0\r\n  %14 = fmul double %n.1.1, %n.1.1\r\n  %15 = fmul double %14, 2.000000e+00\r\n  %n.1.in.2 = select i1 %13, double %14, double %15\r\n  %n.1.2 = frem double %n.1.in.2, 1.000000e+10\r\n  %16 = and i64 %b.08, 62643656\r\n  %17 = icmp eq i64 %16, 0\r\n  %18 = fmul double %n.1.2, %n.1.2\r\n  %19 = fmul double %18, 2.000000e+00\r\n  %n.1.in.3 = select i1 %17, double %18, double %19\r\n  %n.1.3 = frem double %n.1.in.3, 1.000000e+10\r\n  %20 = lshr i64 %b.08, 4\r\n  %21 = icmp eq i64 %20, 0\r\n  br i1 %21, label %bb3, label %bb4\r\n}\r\n```\r\n\r\nTheir diff:\r\n\r\n```\r\n8c8\r\n<   %0 = fmul double %n.1.1, 2.843300e+04\r\n---\r\n>   %0 = fmul double %n.1.3, 2.843300e+04\r\n15,16c15,16\r\n<   %b.08 = phi i64 [ 8388608, %start ], [ %12, %bb4 ]\r\n<   %n.07 = phi double [ 1.000000e+00, %start ], [ %n.1.1, %bb4 ]\r\n---\r\n>   %b.08 = phi i64 [ 8388608, %start ], [ %20, %bb4 ]\r\n>   %n.07 = phi double [ 1.000000e+00, %start ], [ %n.1.3, %bb4 ]\r\n29,31c29,43\r\n<   %12 = lshr i64 %b.08, 2\r\n<   %13 = icmp eq i64 %12, 0\r\n<   br i1 %13, label %bb3, label %bb4\r\n---\r\n>   %12 = and i64 %b.08, 31321828\r\n>   %13 = icmp eq i64 %12, 0\r\n>   %14 = fmul double %n.1.1, %n.1.1\r\n>   %15 = fmul double %14, 2.000000e+00\r\n>   %n.1.in.2 = select i1 %13, double %14, double %15\r\n>   %n.1.2 = frem double %n.1.in.2, 1.000000e+10\r\n>   %16 = and i64 %b.08, 62643656\r\n>   %17 = icmp eq i64 %16, 0\r\n>   %18 = fmul double %n.1.2, %n.1.2\r\n>   %19 = fmul double %18, 2.000000e+00\r\n>   %n.1.in.3 = select i1 %17, double %18, double %19\r\n>   %n.1.3 = frem double %n.1.in.3, 1.000000e+10\r\n>   %20 = lshr i64 %b.08, 4\r\n>   %21 = icmp eq i64 %20, 0\r\n>   br i1 %21, label %bb3, label %bb4\r\n```", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/47015/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/47015/timeline", "performed_via_github_app": null, "state_reason": "completed"}