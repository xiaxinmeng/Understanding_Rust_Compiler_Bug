{"url": "https://api.github.com/repos/rust-lang/rust/issues/11740", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/11740/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/11740/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/11740/events", "html_url": "https://github.com/rust-lang/rust/issues/11740", "id": 26138880, "node_id": "MDU6SXNzdWUyNjEzODg4MA==", "number": 11740, "title": "Unexplained lifetime error in closure type", "user": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}, {"id": 46741598, "node_id": "MDU6TGFiZWw0Njc0MTU5OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-test", "name": "E-needs-test", "color": "02e10c", "default": false, "description": "Call for participation: writing correctness tests"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2014-01-23T01:45:33Z", "updated_at": "2017-06-18T19:45:50Z", "closed_at": "2017-06-18T19:45:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In the following test, removing the type annotation from `attr` produces lifetime errors:\n\n```\n#[feature(managed_boxes)];\n\nuse std::cast;\nuse std::unstable::raw::Box;\n\nstruct Attr {\n    name: ~str,\n    value: ~str,\n}\n\nstruct Element {\n    attrs: ~[@mut Attr],\n}\n\nimpl Element {\n    pub unsafe fn get_attr<'a>(&'a self, name: &str) {\n        self.attrs.iter().find(|attr| { // To remove error: |attr: & & 'a @mut Attr| {\n                let attr: ***Box<Attr> = cast::transmute(attr);\n                true\n        });\n    }\n}\n\npub fn main() {\n    let element = Element {\n        attrs: ~[],\n    };\n    let _ = unsafe { element.get_attr(\"foo\") };\n}\n```\n\nError message:\n\n```\nRunning /home/nmatsakis/versioned/rust-1/build/i686-unknown-linux-gnu/stage2/bin/rustc:\n/home/nmatsakis/tmp/foo.rs:17:9: 17:27 error: cannot infer an appropriate lifetime for autoref due to conflicting requirements\n/home/nmatsakis/tmp/foo.rs:17         self.attrs.iter().find(|attr| { // |attr: & & 'a @Attr| {\n                                      ^~~~~~~~~~~~~~~~~~\n/home/nmatsakis/tmp/foo.rs:17:9: 17:19 note: first, the lifetime cannot outlive the expression at 17:8...\n/home/nmatsakis/tmp/foo.rs:17         self.attrs.iter().find(|attr| { // |attr: & & 'a @Attr| {\n                                      ^~~~~~~~~~\n/home/nmatsakis/tmp/foo.rs:17:9: 17:19 note: ...so that automatically reference is valid at the time of borrow\n/home/nmatsakis/tmp/foo.rs:17         self.attrs.iter().find(|attr| { // |attr: & & 'a @Attr| {\n                                      ^~~~~~~~~~\n/home/nmatsakis/tmp/foo.rs:17:9: 17:27 note: but, the lifetime must be valid for the method call at 17:8...\n/home/nmatsakis/tmp/foo.rs:17         self.attrs.iter().find(|attr| { // |attr: & & 'a @Attr| {\n                                      ^~~~~~~~~~~~~~~~~~\n/home/nmatsakis/tmp/foo.rs:17:9: 17:19 note: ...so that method receiver is valid for the method call\n/home/nmatsakis/tmp/foo.rs:17         self.attrs.iter().find(|attr| { // |attr: & & 'a @Attr| {\n                                      ^~~~~~~~~~\nerror: aborting due to previous error\ntask 'rustc' failed at 'explicit failure', /home/nmatsakis/versioned/rust-1/src/libsyntax/diagnostic.rs:75\ntask '<main>' failed at 'explicit failure', /home/nmatsakis/versioned/rust-1/src/librustc/lib.rs:448\n```\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/11740/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/11740/timeline", "performed_via_github_app": null, "state_reason": "completed"}