{"url": "https://api.github.com/repos/rust-lang/rust/issues/55021", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/55021/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/55021/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/55021/events", "html_url": "https://github.com/rust-lang/rust/issues/55021", "id": 369675744, "node_id": "MDU6SXNzdWUzNjk2NzU3NDQ=", "number": 55021, "title": "Expected identifer error hides other expected tokens", "user": {"login": "Havvy", "id": 731722, "node_id": "MDQ6VXNlcjczMTcyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/731722?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Havvy", "html_url": "https://github.com/Havvy", "followers_url": "https://api.github.com/users/Havvy/followers", "following_url": "https://api.github.com/users/Havvy/following{/other_user}", "gists_url": "https://api.github.com/users/Havvy/gists{/gist_id}", "starred_url": "https://api.github.com/users/Havvy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Havvy/subscriptions", "organizations_url": "https://api.github.com/users/Havvy/orgs", "repos_url": "https://api.github.com/users/Havvy/repos", "events_url": "https://api.github.com/users/Havvy/events{/privacy}", "received_events_url": "https://api.github.com/users/Havvy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1596122130, "node_id": "MDU6TGFiZWwxNTk2MTIyMTMw", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-papercut", "name": "D-papercut", "color": "c9f7a3", "default": false, "description": "Diagnostic error that needs small tweaks"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-10-12T19:09:32Z", "updated_at": "2020-03-15T05:41:23Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\r\nerror: expected identifier, found `,`\r\n --> src/lib.rs:5:18\r\n  |\r\n5 | #[cfg_attr(all(),,)]\r\n  |                  ^ expected identifier\r\n```\r\n\r\nI would expect the error message to say ``^ expected identifier or `)` ``. It doesn't because this diagnostic is created by [`expected_ident_found`](https://github.com/rust-lang/rust/blob/master/src/libsyntax/parse/parser.rs#L797) which ignores the other expected tokens. I wonder if the suggestion can be added to [`expect_one_of`](https://github.com/rust-lang/rust/blob/master/src/libsyntax/parse/parser.rs#L681) with the rest of the logic.\r\n\r\nThe same seems to happen for \"expected type\" e.g. `impl;` saying only \"expected type\" instead of also expecting a `<` for generics. I'm not sure if I should open another issue for that.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/55021/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/55021/timeline", "performed_via_github_app": null, "state_reason": null}