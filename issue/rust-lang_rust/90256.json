{"url": "https://api.github.com/repos/rust-lang/rust/issues/90256", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/90256/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/90256/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/90256/events", "html_url": "https://github.com/rust-lang/rust/issues/90256", "id": 1035025386, "node_id": "I_kwDOAAsO6M49sTvq", "number": 90256, "title": "Rustc passes syntactically invalid input to attribute macros", "user": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 203429200, "node_id": "MDU6TGFiZWwyMDM0MjkyMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-high", "name": "P-high", "color": "eb6420", "default": false, "description": "High priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 262252840, "node_id": "MDU6TGFiZWwyNjIyNTI4NDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-stable", "name": "regression-from-stable-to-stable", "color": "e4008a", "default": false, "description": "Performance or correctness regression from one stable version to another."}, {"id": 693665463, "node_id": "MDU6TGFiZWw2OTM2NjU0NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/WG-diagnostics", "name": "WG-diagnostics", "color": "c2e0c6", "default": false, "description": "Working group: diagnostics"}, {"id": 2079070889, "node_id": "MDU6TGFiZWwyMDc5MDcwODg5", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-proc-macros", "name": "A-proc-macros", "color": "f7e101", "default": false, "description": "Area: Procedural macros"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2021-10-25T11:35:51Z", "updated_at": "2023-04-14T14:15:35Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "It used to be the case that attribute macros would only ever be invoked with syntactically valid input. Rustc would snip out or otherwise fix up invalid syntax prior to dispatching the macro invocation. This ensures that rustc's recovery from the invalid syntax, and any diagnostics emitted by rustc to that effect, are consistent with any subsequent diagnostics emitted by the macro, rather than requiring both to perform independent and inconsistent heuristics to recover from the invalid input.\r\n\r\nHowever, it looks like recent rustc versions (1.51+) have begun invoking attribute macros on invalid syntax. Can we find out whether this behavior is intended or a regression from recent Span-related work (#43081 &mdash; @Aaron1011)? IMO the newfangled behavior is not necessarily desirable so I have filed this as a regression.\r\n\r\n```rust\r\n// src/lib.rs\r\n\r\nuse proc_macro::TokenStream;\r\n\r\n#[proc_macro_attribute]\r\npub fn repro(_args: TokenStream, input: TokenStream) -> TokenStream {\r\n    eprintln!(\"{:#?}\", input);\r\n    TokenStream::new()\r\n}\r\n```\r\n\r\n```rust\r\n// src/main.rs\r\n\r\n#[repro::repro]\r\ntrait T {\r\n    fn run(&);\r\n}\r\n\r\nfn main() {}\r\n```\r\n\r\n```toml\r\n# Cargo.toml\r\n\r\n[package]\r\nname = \"repro\"\r\nversion = \"0.0.0\"\r\nedition = \"2018\"\r\npublish = false\r\n\r\n[lib]\r\nproc-macro = true\r\n```\r\n\r\n- 1.31 through 1.39: macro is invoked with `trait T {}` as input. Invalid syntax has been snipped out.\r\n- 1.40 through 1.50: macro is invoked with `trait T { fn run(); }` as input, invalid syntax snipped out with finer granularity.\r\n- 1.51+: macro is invoked with `trait T { fn run(&); }` which is invalid syntax and not necessarily desirable.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/90256/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/90256/timeline", "performed_via_github_app": null, "state_reason": null}