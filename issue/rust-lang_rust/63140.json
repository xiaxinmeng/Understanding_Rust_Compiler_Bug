{"url": "https://api.github.com/repos/rust-lang/rust/issues/63140", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/63140/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/63140/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/63140/events", "html_url": "https://github.com/rust-lang/rust/issues/63140", "id": 474667460, "node_id": "MDU6SXNzdWU0NzQ2Njc0NjA=", "number": 63140, "title": "Generic type parameters used in expression?", "user": {"login": "schungx", "id": 661318, "node_id": "MDQ6VXNlcjY2MTMxOA==", "avatar_url": "https://avatars.githubusercontent.com/u/661318?v=4", "gravatar_id": "", "url": "https://api.github.com/users/schungx", "html_url": "https://github.com/schungx", "followers_url": "https://api.github.com/users/schungx/followers", "following_url": "https://api.github.com/users/schungx/following{/other_user}", "gists_url": "https://api.github.com/users/schungx/gists{/gist_id}", "starred_url": "https://api.github.com/users/schungx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/schungx/subscriptions", "organizations_url": "https://api.github.com/users/schungx/orgs", "repos_url": "https://api.github.com/users/schungx/repos", "events_url": "https://api.github.com/users/schungx/events{/privacy}", "received_events_url": "https://api.github.com/users/schungx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-30T15:54:03Z", "updated_at": "2019-07-30T15:56:38Z", "closed_at": "2019-07-30T15:56:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a way to use a generic type parameter in an expression?\r\n\r\nFor example:\r\n\r\n~~~rust\r\nfn SomeGenericFunc<T>() {\r\n    if T : Display {\r\n        // Here we know T implements Display\r\n        println!(\"{}\", T);\r\n    } else if T : Debug {\r\n        // Here we know T implements Debug\r\n        println!(\"{:?}\", T);\r\n    } else {\r\n        println!(\"Hey, don't know how to print!\");\r\n    }\r\n}\r\n~~~\r\n\r\nObviously, during actual code generation when instantiating the actual types, the irrelevant code branches can be safely omitted.\r\n", "closed_by": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/63140/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/63140/timeline", "performed_via_github_app": null, "state_reason": "completed"}