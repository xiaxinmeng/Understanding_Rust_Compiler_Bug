{"url": "https://api.github.com/repos/rust-lang/rust/issues/71432", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/71432/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/71432/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/71432/events", "html_url": "https://github.com/rust-lang/rust/issues/71432", "id": 604871957, "node_id": "MDU6SXNzdWU2MDQ4NzE5NTc=", "number": 71432, "title": "Warn on useless bindings like `let v2 = v1.sort();`", "user": {"login": "mbrubeck", "id": 5920, "node_id": "MDQ6VXNlcjU5MjA=", "avatar_url": "https://avatars.githubusercontent.com/u/5920?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbrubeck", "html_url": "https://github.com/mbrubeck", "followers_url": "https://api.github.com/users/mbrubeck/followers", "following_url": "https://api.github.com/users/mbrubeck/following{/other_user}", "gists_url": "https://api.github.com/users/mbrubeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbrubeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbrubeck/subscriptions", "organizations_url": "https://api.github.com/users/mbrubeck/orgs", "repos_url": "https://api.github.com/users/mbrubeck/repos", "events_url": "https://api.github.com/users/mbrubeck/events{/privacy}", "received_events_url": "https://api.github.com/users/mbrubeck/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235137, "node_id": "MDU6TGFiZWwyMzUxMzc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lint", "name": "A-lint", "color": "f7e101", "default": false, "description": "Area: Lints (warnings about flaws in source code) such as unused_mut."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2020-04-22T15:59:06Z", "updated_at": "2020-04-30T20:29:25Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I've seen a lot of beginning Rust programmers make a mistake similar to the program below, which compiles and runs without warning:\r\n\r\n```rust\r\nfn main() {\r\n    let mut x = [0,1,2];\r\n    x[0] = 5;\r\n    let y = x.sort();\r\n    println!(\"{:?}\", y);\r\n}\r\n```\r\n\r\nThe bug in this program is hard for new Rust programmers to spot. The compiler should help them, by warning that `x.sort()` does not return a value.\r\n\r\nThis could be done with a new attribute `#[must_not_use]`, applied to functions like `sort`. This would be the inverse of `must_use`: It would warn only if the result of the function *is* used. Like `must_use`, it would take an optional argument that provides an additional diagnostic message.\r\n\r\n(Bikeshed: `must_not_use` may be a confusing name. Other suggestions welcome.)\r\n\r\nOr perhaps any assignment `let foo = expr;` where `expr` has type `()` should cause a warning by default. This would be a more general solution, catching more possible errors but also potentially causing more disruption. The warnings in this case might be less helpful, because they wouldn't include suggestions tailored to specific functions.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/71432/reactions", "total_count": 3, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 2, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/71432/timeline", "performed_via_github_app": null, "state_reason": null}