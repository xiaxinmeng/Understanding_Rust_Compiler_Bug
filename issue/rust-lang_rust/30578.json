{"url": "https://api.github.com/repos/rust-lang/rust/issues/30578", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/30578/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/30578/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/30578/events", "html_url": "https://github.com/rust-lang/rust/issues/30578", "id": 123983798, "node_id": "MDU6SXNzdWUxMjM5ODM3OTg=", "number": 30578, "title": "non-exhaustive match for masked integer", "user": {"login": "crawford", "id": 368848, "node_id": "MDQ6VXNlcjM2ODg0OA==", "avatar_url": "https://avatars.githubusercontent.com/u/368848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/crawford", "html_url": "https://github.com/crawford", "followers_url": "https://api.github.com/users/crawford/followers", "following_url": "https://api.github.com/users/crawford/following{/other_user}", "gists_url": "https://api.github.com/users/crawford/gists{/gist_id}", "starred_url": "https://api.github.com/users/crawford/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/crawford/subscriptions", "organizations_url": "https://api.github.com/users/crawford/orgs", "repos_url": "https://api.github.com/users/crawford/repos", "events_url": "https://api.github.com/users/crawford/events{/privacy}", "received_events_url": "https://api.github.com/users/crawford/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-12-27T15:39:37Z", "updated_at": "2015-12-27T23:25:17Z", "closed_at": "2015-12-27T18:29:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have the following program which fails to compile:\n\n``` rust\nfn main() {\n    println!(\"{}\", match 123 & 0x01 {\n        0x00 => \"Hello\",\n        0x01 => \"World\",\n    });\n}\n```\n\nwith the following error:\n\n```\nfoo.rs:2:20: 5:6 error: non-exhaustive patterns: `_` not covered [E0004]\nfoo.rs:2     println!(\"{}\", match 123 & 0x01 {\nfoo.rs:3         0x00 => \"Hello\",\nfoo.rs:4         0x01 => \"World\",\nfoo.rs:5     });\n<std macros>:2:25: 2:56 note: in this expansion of format_args!\n<std macros>:3:1: 3:54 note: in this expansion of print! (defined in <std macros>)\nfoo.rs:2:5: 5:8 note: in this expansion of println! (defined in <std macros>)\nfoo.rs:2:20: 5:6 help: run `rustc --explain E0004` to see a detailed explanation\nerror: aborting due to previous error\n```\n\nIt would be really nice if the compiler could recognize that `foo & 0x01` can only result in `0x00` or `0x01`, making the match exhaustive.\n\nThis looks related to https://github.com/rust-lang/rust/issues/12483.\n", "closed_by": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/30578/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/30578/timeline", "performed_via_github_app": null, "state_reason": "completed"}