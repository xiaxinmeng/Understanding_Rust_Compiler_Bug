{"url": "https://api.github.com/repos/rust-lang/rust/issues/66934", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/66934/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/66934/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/66934/events", "html_url": "https://github.com/rust-lang/rust/issues/66934", "id": 530731985, "node_id": "MDU6SXNzdWU1MzA3MzE5ODU=", "number": 66934, "title": "ICE when using slice patterns in const fn.", "user": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 203429200, "node_id": "MDU6TGFiZWwyMDM0MjkyMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-high", "name": "P-high", "color": "eb6420", "default": false, "description": "High priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 632838966, "node_id": "MDU6TGFiZWw2MzI4Mzg5NjY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-slice-patterns", "name": "A-slice-patterns", "color": "f7e101", "default": false, "description": "Area: slice patterns, https://github.com/rust-lang/rust/issues/23121"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 900795185, "node_id": "MDU6TGFiZWw5MDA3OTUxODU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-eval", "name": "A-const-eval", "color": "f7e101", "default": false, "description": "Area: constant evaluation (mir interpretation)"}, {"id": 1475720422, "node_id": "MDU6TGFiZWwxNDc1NzIwNDIy", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-slice_patterns", "name": "F-slice_patterns", "color": "f9c0cc", "default": false, "description": "`#![feature(slice_patterns)]`"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-12-01T13:28:49Z", "updated_at": "2019-12-21T17:35:10Z", "closed_at": "2019-12-21T17:35:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The following code ICEs\r\n\r\n```rust\r\n#![feature(slice_patterns)]\r\n\r\nconst fn f() {\r\n    let x = [()];\r\n    let [y @ ..] = x;\r\n}\r\n```\r\n\r\n[Playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=3b54cb9afc7b610788162cfa034c3d1a)\r\n\r\n<details>\r\n\r\n<summary>Backtrace</summary>\r\n\r\n```text\r\n   Compiling playground v0.0.1 (/playground)\r\nwarning: unused variable: `y`\r\n --> src/lib.rs:5:10\r\n  |\r\n5 |     let [y @ ..] = x;\r\n  |          ^ help: consider prefixing with an underscore: `_y`\r\n  |\r\n  = note: `#[warn(unused_variables)]` on by default\r\n\r\nwarning: function is never used: `f`\r\n --> src/lib.rs:3:10\r\n  |\r\n3 | const fn f() {\r\n  |          ^\r\n  |\r\n  = note: `#[warn(dead_code)]` on by default\r\n\r\nthread 'rustc' panicked at 'Layout mismatch when copying!\r\nsrc: OpTy {\r\n    op: Immediate(\r\n        Scalar(\r\n            <ZST>,\r\n        ),\r\n    ),\r\n    layout: TyLayout {\r\n        ty: (),\r\n        details: LayoutDetails {\r\n            variants: Single {\r\n                index: 0,\r\n            },\r\n            fields: Arbitrary {\r\n                offsets: [],\r\n                memory_index: [],\r\n            },\r\n            abi: Aggregate {\r\n                sized: true,\r\n            },\r\n            largest_niche: None,\r\n            align: AbiAndPrefAlign {\r\n                abi: Align {\r\n                    pow2: 0,\r\n                },\r\n                pref: Align {\r\n                    pow2: 3,\r\n                },\r\n            },\r\n            size: Size {\r\n                raw: 0,\r\n            },\r\n        },\r\n    },\r\n}\r\ndest: PlaceTy {\r\n    place: Local {\r\n        frame: 0,\r\n        local: _3,\r\n    },\r\n    layout: TyLayout {\r\n        ty: [(); 1],\r\n        details: LayoutDetails {\r\n            variants: Single {\r\n                index: 0,\r\n            },\r\n            fields: Array {\r\n                stride: Size {\r\n                    raw: 0,\r\n                },\r\n                count: 1,\r\n            },\r\n            abi: Aggregate {\r\n                sized: true,\r\n            },\r\n            largest_niche: None,\r\n            align: AbiAndPrefAlign {\r\n                abi: Align {\r\n                    pow2: 0,\r\n                },\r\n                pref: Align {\r\n                    pow2: 3,\r\n                },\r\n            },\r\n            size: Size {\r\n                raw: 0,\r\n            },\r\n        },\r\n    },\r\n}', src/librustc_mir/interpret/place.rs:872:9\r\nstack backtrace:\r\n   0: backtrace::backtrace::libunwind::trace\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.40/src/backtrace/libunwind.rs:88\r\n   1: backtrace::backtrace::trace_unsynchronized\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.40/src/backtrace/mod.rs:66\r\n   2: std::sys_common::backtrace::_print_fmt\r\n             at src/libstd/sys_common/backtrace.rs:84\r\n   3: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt\r\n             at src/libstd/sys_common/backtrace.rs:61\r\n   4: core::fmt::write\r\n             at src/libcore/fmt/mod.rs:1024\r\n   5: std::io::Write::write_fmt\r\n             at src/libstd/io/mod.rs:1428\r\n   6: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:65\r\n   7: std::sys_common::backtrace::print\r\n             at src/libstd/sys_common/backtrace.rs:50\r\n   8: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/panicking.rs:193\r\n   9: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:210\r\n  10: rustc_driver::report_ice\r\n  11: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:475\r\n  12: rust_begin_unwind\r\n             at src/libstd/panicking.rs:375\r\n  13: std::panicking::begin_panic_fmt\r\n             at src/libstd/panicking.rs:326\r\n  14: rustc_mir::interpret::step::<impl rustc_mir::interpret::eval_context::InterpCx<M>>::eval_rvalue_into_place\r\n  15: <rustc_mir::transform::const_prop::ConstPropagator as rustc::mir::visit::MutVisitor>::visit_statement\r\n  16: <rustc_mir::transform::const_prop::ConstProp as rustc_mir::transform::MirPass>::run_pass\r\n  17: rustc_mir::transform::run_passes\r\n  18: rustc_mir::transform::run_optimization_passes\r\n  19: rustc_mir::transform::optimized_mir\r\n  20: rustc::ty::query::__query_compute::optimized_mir\r\n  21: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::optimized_mir>::compute\r\n  22: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  23: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  24: rustc_metadata::rmeta::encoder::EncodeContext::encode_optimized_mir\r\n  25: <rustc_metadata::rmeta::encoder::EncodeContext as rustc::hir::intravisit::Visitor>::visit_item\r\n  26: rustc::hir::Crate::visit_all_item_likes\r\n  27: rustc_metadata::rmeta::encoder::EncodeContext::encode_crate_root\r\n  28: rustc::ty::context::tls::with_context::{{closure}}\r\n  29: rustc_metadata::rmeta::encoder::encode_metadata\r\n  30: rustc_metadata::rmeta::decoder::cstore_impl::<impl rustc::middle::cstore::CrateStore for rustc_metadata::creader::CStore>::encode_metadata\r\n  31: rustc::ty::context::TyCtxt::encode_metadata\r\n  32: rustc_interface::passes::start_codegen::{{closure}}\r\n  33: rustc_interface::passes::start_codegen\r\n  34: rustc::ty::context::tls::enter_global\r\n  35: rustc_interface::queries::Queries::ongoing_codegen\r\n  36: rustc_interface::interface::run_compiler_in_existing_thread_pool\r\n  37: std::thread::local::LocalKey<T>::with\r\n  38: scoped_tls::ScopedKey<T>::set\r\n  39: syntax::with_globals\r\n```\r\n\r\n</details>", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/66934/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 1, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/66934/timeline", "performed_via_github_app": null, "state_reason": "completed"}