{"url": "https://api.github.com/repos/rust-lang/rust/issues/77270", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/77270/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/77270/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/77270/events", "html_url": "https://github.com/rust-lang/rust/issues/77270", "id": 709771546, "node_id": "MDU6SXNzdWU3MDk3NzE1NDY=", "number": 77270, "title": "Help messages could include required `use` line.", "user": {"login": "follower", "id": 189962, "node_id": "MDQ6VXNlcjE4OTk2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/189962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/follower", "html_url": "https://github.com/follower", "followers_url": "https://api.github.com/users/follower/followers", "following_url": "https://api.github.com/users/follower/following{/other_user}", "gists_url": "https://api.github.com/users/follower/gists{/gist_id}", "starred_url": "https://api.github.com/users/follower/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/follower/subscriptions", "organizations_url": "https://api.github.com/users/follower/orgs", "repos_url": "https://api.github.com/users/follower/repos", "events_url": "https://api.github.com/users/follower/events{/privacy}", "received_events_url": "https://api.github.com/users/follower/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 60329014, "node_id": "MDU6TGFiZWw2MDMyOTAxNA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-low", "name": "P-low", "color": "eb6420", "default": false, "description": "Low priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1183099971, "node_id": "MDU6TGFiZWwxMTgzMDk5OTcx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-suggestion-diagnostics", "name": "A-suggestion-diagnostics", "color": "f7e101", "default": false, "description": "Area: suggestions generated by the compiler applied by cargo fix"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-09-27T16:33:50Z", "updated_at": "2021-01-14T22:09:13Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "_{This specific case originates from the following issue & comment: https://github.com/rust-lang/rust/issues/47168#issuecomment-699176014 }_\r\n\r\n**I tried this code:**\r\n\r\n```rust\r\ntest(array.len());\r\n```\r\n\r\n**I expected to see this happen:**\r\n\r\n```\r\nerror[E0308]: mismatched types\r\n --> src/main.rs:3:10\r\n  |\r\n3 |     test(array.len());\r\n  |          ^^^^^^^^^^^ expected u32, found usize\r\nhelp: you can convert an `usize` to `u32` or panic if it the converted value wouldn't fit\r\n  |\r\n3 |     use std::convert::TryInto;\r\n4 |     test(array.len().try_into().unwrap());\r\n  |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n```\r\n\r\n(Or similar.)\r\n\r\ni.e. An error message that includes the required `use` line necessary for the suggestion to compile.\r\n\r\n**Instead, this happened:**\r\n\r\n```\r\nerror[E0308]: mismatched types\r\n --> src/main.rs:3:10\r\n  |\r\n3 |     test(array.len());\r\n  |          ^^^^^^^^^^^ expected u32, found usize\r\nhelp: you can convert an `usize` to `u32` or panic if it the converted value wouldn't fit\r\n  |\r\n3 |     test(array.len().try_into().unwrap());\r\n  |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n```\r\n\r\n(Which would be fine _if_ there is a pre-existing `use std::convert::TryInto;`.)\r\n\r\nThis meant that--after applying the suggested fix--when compiling I got another error relating to the suggested code:\r\n\r\n```\r\nerror[E0599]: no method named `try_into` found for type `usize` in the current scope\r\n --> src/main.rs:3:22\r\n  |\r\n3 |     test(array.len().try_into().unwrap());\r\n  |                      ^^^^^^^^\r\n  |\r\n  = help: items from traits can only be used if the trait is in scope\r\nhelp: the following trait is implemented but not in scope, perhaps add a `use` for it:\r\n  |\r\n1 | use std::convert::TryInto;\r\n```\r\n\r\nThis was surprising to me because I thought the compiler diagnostics were magic & infallible . :D\r\n\r\n_Note: Example code & messages were copy & pasted from original issue._\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/77270/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/77270/timeline", "performed_via_github_app": null, "state_reason": null}