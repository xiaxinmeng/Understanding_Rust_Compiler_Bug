{"url": "https://api.github.com/repos/rust-lang/rust/issues/52305", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/52305/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/52305/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/52305/events", "html_url": "https://github.com/rust-lang/rust/issues/52305", "id": 340633846, "node_id": "MDU6SXNzdWUzNDA2MzM4NDY=", "number": 52305, "title": "rustc-1.27.1 build fails with `extended = true`", "user": {"login": "djc", "id": 158471, "node_id": "MDQ6VXNlcjE1ODQ3MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/158471?v=4", "gravatar_id": "", "url": "https://api.github.com/users/djc", "html_url": "https://github.com/djc", "followers_url": "https://api.github.com/users/djc/followers", "following_url": "https://api.github.com/users/djc/following{/other_user}", "gists_url": "https://api.github.com/users/djc/gists{/gist_id}", "starred_url": "https://api.github.com/users/djc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/djc/subscriptions", "organizations_url": "https://api.github.com/users/djc/orgs", "repos_url": "https://api.github.com/users/djc/repos", "events_url": "https://api.github.com/users/djc/events{/privacy}", "received_events_url": "https://api.github.com/users/djc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 325438536, "node_id": "MDU6TGFiZWwzMjU0Mzg1MzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-bootstrap", "name": "T-bootstrap", "color": "bfd4f2", "default": false, "description": "Relevant to the bootstrap subteam: Rust's build system (x.py and src/bootstrap)"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-07-12T13:17:20Z", "updated_at": "2021-09-25T21:28:12Z", "closed_at": "2021-09-25T21:28:12Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "With this configuration:\r\n\r\n```toml\r\n[llvm]\r\noptimize = true\r\nrelease-debuginfo = false\r\nassertions = false\r\ntargets = \"X86\"\r\n[build]\r\nbuild = \"x86_64-unknown-linux-gnu\"\r\nhost = [\"x86_64-unknown-linux-gnu\"]\r\ntarget = [\"x86_64-unknown-linux-gnu\"]\r\ncargo = \"/var/tmp/portage/dev-lang/rust-1.27.1/work/rust-stage0/bin/cargo\"\r\nrustc = \"/var/tmp/portage/dev-lang/rust-1.27.1/work/rust-stage0/bin/rustc\"\r\ndocs = false\r\nsubmodules = false\r\npython = \"python3.5\"\r\nlocked-deps = true\r\nvendor = true\r\nverbose = 2\r\nextended = true\r\ntools = [\"rustfmt\",\"cargo\",]\r\n[install]\r\nprefix = \"/usr\"\r\nlibdir = \"lib64\"\r\ndocdir = \"share/doc/rust-1.27.1\"\r\nmandir = \"share/rust-1.27.1/man\"\r\n[rust]\r\noptimize = true\r\ndebuginfo = false\r\ndebug-assertions = false\r\nuse-jemalloc = true\r\ndefault-linker = \"x86_64-pc-linux-gnu-gcc\"\r\nrpath = false\r\nlld = false\r\n[target.x86_64-unknown-linux-gnu]\r\ncc = \"x86_64-pc-linux-gnu-gcc\"\r\ncxx = \"x86_64-pc-linux-gnu-g++\"\r\nlinker = \"x86_64-pc-linux-gnu-gcc\"\r\nar = \"x86_64-pc-linux-gnu-ar\"\r\n```\r\n\r\nWhich fails like this:\r\n\r\n```rust\r\nerror[E0432]: unresolved import `syntax::abi`\r\n--\r\n\u00a0 | --> tools/miri/miri/fn_call.rs:7:13\r\n\u00a0 | \\|\r\n\u00a0 | 7 \\| use syntax::abi::Abi;\r\n\u00a0 | \\|             ^^^ Could not find `abi` in `syntax`\r\n\u00a0 | \u00a0\r\n\u00a0 | error[E0616]: field `start` of struct `std::ops::RangeInclusive` is private\r\n\u00a0 | --> tools/miri/miri/fn_call.rs:52:57\r\n\u00a0 | \\|\r\n\u00a0 | 52 \\|                     let niche_value = ((variant_index - niche_variants.start) as u128)\r\n\u00a0 | \\|                                                         ^^^^^^^^^^^^^^^^^^^^\r\n\u00a0 | \\|\r\n\u00a0 | = note: a method `start` also exists, perhaps you wish to call it\r\n\u00a0 | \u00a0\r\n\u00a0 | error[E0308]: match arms have incompatible types\r\n\u00a0 | --> tools/miri/miri/fn_call.rs:178:25\r\n\u00a0 | \\|\r\n\u00a0 | 178 \\|           let link_name = match attr::first_attr_value_str_by_name(&attrs, \"link_name\") {\r\n\u00a0 | \\|  _________________________^\r\n\u00a0 | 179 \\| \\|             Some(name) => name.as_str(),\r\n\u00a0 | 180 \\| \\|             None => self.tcx.item_name(def_id),\r\n\u00a0 | \\| \\|                     -------------------------- match arm with an incompatible type\r\n\u00a0 | 181 \\| \\|         };\r\n\u00a0 | \\| \\|_________^ expected struct `syntax::symbol::LocalInternedString`, found struct `syntax::symbol::InternedString`\r\n\u00a0 | \\|\r\n\u00a0 | = note: expected type `syntax::symbol::LocalInternedString`\r\n\u00a0 | found type `syntax::symbol::InternedString`\r\n\u00a0 | \u00a0\r\n\u00a0 | error[E0608]: cannot index into a value of type `syntax::symbol::InternedString`\r\n\u00a0 | --> tools/miri/miri/intrinsic.rs:32:31\r\n\u00a0 | \\|\r\n\u00a0 | 32 \\|         let intrinsic_name = &self.tcx.item_name(instance.def_id())[..];\r\n\u00a0 | \\|                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\u00a0 | \u00a0\r\n\u00a0 | error[E0599]: no variant named `OverflowingMath` found for type `rustc::mir::interpret::EvalErrorKind<'_, _>` in the current scope\r\n\u00a0 | --> tools/miri/miri/helpers.rs:66:13\r\n\u00a0 | \\|\r\n\u00a0 | 66 \\|             err!(OverflowingMath)\r\n\u00a0 | \\|             ^^^^^^^^^^^^^^^^^^^^^ variant not found in `rustc::mir::interpret::EvalErrorKind<'_, _>`\r\n\u00a0 | \\|\r\n\u00a0 | = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\r\n\u00a0 | \u00a0\r\n\u00a0 | error[E0026]: variant `rustc::ty::layout::Variants::Tagged` does not have a field named `discr`\r\n\u00a0 | --> tools/miri/miri/validation.rs:458:40\r\n\u00a0 | \\|\r\n\u00a0 | 458 \\|                     Variants::Tagged { ref discr, .. } \\|\r\n\u00a0 | \\|                                        ^^^^^^^^^ variant `rustc::ty::layout::Variants::Tagged` does not have this field\r\n\u00a0 | \u00a0\r\n\u00a0 | error: aborting due to 6 previous errors\r\n\u00a0 | \u00a0\r\n\u00a0 | Some errors occurred: E0026, E0308, E0432, E0599, E0608, E0616.\r\n\u00a0 | For more information about an error, try `rustc --explain E0026`.\r\n\u00a0 | error: Could not compile `miri`.\r\n\u00a0 | \u00a0\r\n\u00a0 | Caused by:\r\n\u00a0 | process didn't exit successfully: `/var/tmp/portage/dev-lang/rust-1.27.1/work/rustc-1.27.1-src/build/bootstrap/debug/rustc --crate-name miri tools/miri/miri/lib.rs --error-format json --crate-type lib --emit=dep-info,link -C opt-level=3 -C metadata=3cbebf35d5e2e591 -C extra-filename=-3cbebf35d5e2e591 --out-dir /var/tmp/portage/dev-lang/rust-1.27.1/work/rustc-1.27.1-src/build/x86_64-unknown-linux-gnu/stage2-tools/x86_64-unknown-linux-gnu/release/deps --target x86_64-unknown-linux-gnu -L dependency=/var/tmp/portage/dev-lang/rust-1.27.1/work/rustc-1.27.1-src/build/x86_64-unknown-linux-gnu/stage2-tools/x86_64-unknown-linux-gnu/release/deps -L dependency=/var/tmp/portage/dev-lang/rust-1.27.1/work/rustc-1.27.1-src/build/x86_64-unknown-linux-gnu/stage2-tools/release/deps --extern regex=/var/tmp/portage/dev-lang/rust-1.27.1/work/rustc-1.27.1-src/build/x86_64-unknown-linux-gnu/stage2-tools/x86_64-unknown-linux-gnu/release/deps/libregex-65029f25a27e378d.rlib --extern byteorder=/var/tmp/portage/dev-lang/rust-1.27.1/work/rustc-1.27.1-src/build/x86_64-unknown-linux-gnu/stage2-tools/x86_64-unknown-linux-gnu/release/deps/libbyteorder-62fdd4f3dd91d4df.rlib --extern lazy_static=/var/tmp/portage/dev-lang/rust-1.27.1/work/rustc-1.27.1-src/build/x86_64-unknown-linux-gnu/stage2-tools/x86_64-unknown-linux-gnu/release/deps/liblazy_static-4add5af5c933865c.rlib --extern env_logger=/var/tmp/portage/dev-lang/rust-1.27.1/work/rustc-1.27.1-src/build/x86_64-unknown-linux-gnu/stage2-tools/x86_64-unknown-linux-gnu/release/deps/libenv_logger-706259616e96fef3.rlib --extern log=/var/tmp/portage/dev-lang/rust-1.27.1/work/rustc-1.27.1-src/build/x86_64-unknown-linux-gnu/stage2-tools/x86_64-unknown-linux-gnu/release/deps/liblog-0dac61128b7a7326.rlib` (exit code: 101)\r\n\u00a0 | command did not execute successfully: \"/var/tmp/portage/dev-lang/rust-1.27.1/work/rust-stage0/bin/cargo\" \"build\" \"--target\" \"x86_64-unknown-linux-gnu\" \"-j\" \"8\" \"-v\" \"--release\" \"--locked\" \"--frozen\" \"--manifest-path\" \"/var/tmp/portage/dev-lang/rust-1.27.1/work/rustc-1.27.1-src/src/tools/miri/Cargo.toml\" \"--features\" \"\" \"--message-format\" \"json\"\r\n\u00a0 | expected success, got: exit code: 101\r\n```\r\n\r\n@Mark-Simulacrum mentioned on Discord that this might be fixed by passing `--exclude src/tools/miri`, which is correct. Still, it would be nice if the build system worked correctly here.\r\n\r\nOne option would be to use the `tools` config not just to toggle installation, but also compilation.", "closed_by": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/52305/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/52305/timeline", "performed_via_github_app": null, "state_reason": "completed"}