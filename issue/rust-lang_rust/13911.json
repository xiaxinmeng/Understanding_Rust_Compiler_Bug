{"url": "https://api.github.com/repos/rust-lang/rust/issues/13911", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/13911/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/13911/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/13911/events", "html_url": "https://github.com/rust-lang/rust/issues/13911", "id": 32738076, "node_id": "MDU6SXNzdWUzMjczODA3Ng==", "number": 13911, "title": "only require Show for elements joined with connect", "user": {"login": "panzi", "id": 134175, "node_id": "MDQ6VXNlcjEzNDE3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/134175?v=4", "gravatar_id": "", "url": "https://api.github.com/users/panzi", "html_url": "https://github.com/panzi", "followers_url": "https://api.github.com/users/panzi/followers", "following_url": "https://api.github.com/users/panzi/following{/other_user}", "gists_url": "https://api.github.com/users/panzi/gists{/gist_id}", "starred_url": "https://api.github.com/users/panzi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/panzi/subscriptions", "organizations_url": "https://api.github.com/users/panzi/orgs", "repos_url": "https://api.github.com/users/panzi/repos", "events_url": "https://api.github.com/users/panzi/events{/privacy}", "received_events_url": "https://api.github.com/users/panzi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2014-05-03T02:19:10Z", "updated_at": "2015-01-23T04:07:00Z", "closed_at": "2015-01-23T04:06:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "In most high level languages it's easy to turn a list/array of things into a comma separated string. In Rust there is the `connect` method, but it requires the elements to implement the trait `std::str::Str`. I would like this method to require `std::fmt::Show` instead. Alternatively a `join` method with according semantics that requires `std::fmt::Show` would suffice.\n\nCurrently you have to write:\n\n```\nlet xs = [1, 2, 3];\nlet str_xs: ~[~str] = xs.iter().map(|x| x.to_str()).collect();\nprintln!(\"xs = {}\", str_xs.connect(\", \"));\n\nlet mut ys = Vec::new();\nys.push(4);\nys.push(5);\nys.push(6);\nlet str_ys: Vec<~str> = ys.iter().map(|y| y.to_str()).collect();\nprintln!(\"ys = {}\", str_ys.connect(\", \"));\n```\n\nThis is pretty horrible. This would be much nicer:\n\n```\nlet xs = [1, 2, 3];\nprintln!(\"xs = {}\", xs.connect(\", \"));\n\nlet mut ys = Vec::new();\nys.push(4);\nys.push(5);\nys.push(6);\nprintln!(\"ys = {}\", ys.connect(\", \"));\n```\n", "closed_by": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/13911/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/13911/timeline", "performed_via_github_app": null, "state_reason": "completed"}