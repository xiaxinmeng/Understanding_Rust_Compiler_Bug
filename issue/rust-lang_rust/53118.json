{"url": "https://api.github.com/repos/rust-lang/rust/issues/53118", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/53118/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/53118/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/53118/events", "html_url": "https://github.com/rust-lang/rust/issues/53118", "id": 348020778, "node_id": "MDU6SXNzdWUzNDgwMjA3Nzg=", "number": 53118, "title": "inline assembly documentation needs an overhaul to account for non-default targets", "user": {"login": "mqudsi", "id": 606923, "node_id": "MDQ6VXNlcjYwNjkyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/606923?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mqudsi", "html_url": "https://github.com/mqudsi", "followers_url": "https://api.github.com/users/mqudsi/followers", "following_url": "https://api.github.com/users/mqudsi/following{/other_user}", "gists_url": "https://api.github.com/users/mqudsi/gists{/gist_id}", "starred_url": "https://api.github.com/users/mqudsi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mqudsi/subscriptions", "organizations_url": "https://api.github.com/users/mqudsi/orgs", "repos_url": "https://api.github.com/users/mqudsi/repos", "events_url": "https://api.github.com/users/mqudsi/events{/privacy}", "received_events_url": "https://api.github.com/users/mqudsi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-08-06T17:47:14Z", "updated_at": "2018-12-14T21:36:41Z", "closed_at": "2018-12-14T21:36:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The [section on inline assembly](https://doc.rust-lang.org/unstable-book/language-features/asm.html) needs an overhaul; in its present state it implies that the behavior and syntax is tied to `rustc` and the rust language in general. Pretty much the entire documentation is specific to x86/x86_64 assembly with the llvm toolchain. To be clear, I am not referring to the assembly code itself, which is obviously platform-specific, but rather the general architecture and usage of inline assembly altogether.\r\n\r\nI didn't find an authoritative source for the behavior of inline assembly when it comes to ARM target, but per my experimentation and referencing the [ARM GCC inline assembly documentation](http://www.ethernut.de/en/documents/arm-inline-asm.html), the following points seem to be completely off:\r\n\r\n* The ASM syntax, as ARM/MIPS (and most other CISC?) use intel-esque syntax with the destination register first. I understood the documentation to mean/imply that inline asm took at&t syntax which was transpiled to actual platform/compiler-specific syntax, and that I should just substitute the names of the x86 registers with that of the ARM registers only.\r\n* Relatedly, the `intel` option is invalid, as is it causes \"unknown directive\" errors [when compiling](https://github.com/rust-lang/rust/issues/53066).\r\n* Adapting [from the ARM GCC inline assembly documentation](http://www.ethernut.de/en/documents/arm-inline-asm.html) (for building against `thumbv7em-none-eabi` with the `arm-none-eabi-*` toolchain, it appears that even some basic assumptions about the format of inline assembly are platform-specific. In particular, it seems that for ARM the output register (second macro argument) counts as a register reference, i.e. `$0` refers to the first output register and not the first input register, as is the case with the x86 llvm instructions.\r\n* At the same time, other compiler-specific features are _not_ present; I can't use named references to registers, only indexes (e.g. `asm(\"mov %[result],%[value],ror #1\":[result] \"=r\" (y):[value] \"r\" (x));` is invalid).\r\n* (Even for x86/x86_64 targets, the usage of `$0` and `$2` in the inline assembly example is very confusing, as it does not explain why those numbers were chosen.)\r\n\r\nI think what threw me the most is the closing statement:\r\n\r\n> The current implementation of the asm! macro is a direct binding to LLVM's inline assembler expressions, so be sure to check out their documentation as well for more information about clobbers, constraints, etc.\r\n\r\nWhich does not seem to be universally true.", "closed_by": {"login": "mqudsi", "id": 606923, "node_id": "MDQ6VXNlcjYwNjkyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/606923?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mqudsi", "html_url": "https://github.com/mqudsi", "followers_url": "https://api.github.com/users/mqudsi/followers", "following_url": "https://api.github.com/users/mqudsi/following{/other_user}", "gists_url": "https://api.github.com/users/mqudsi/gists{/gist_id}", "starred_url": "https://api.github.com/users/mqudsi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mqudsi/subscriptions", "organizations_url": "https://api.github.com/users/mqudsi/orgs", "repos_url": "https://api.github.com/users/mqudsi/repos", "events_url": "https://api.github.com/users/mqudsi/events{/privacy}", "received_events_url": "https://api.github.com/users/mqudsi/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/53118/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/53118/timeline", "performed_via_github_app": null, "state_reason": "completed"}