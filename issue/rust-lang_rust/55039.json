{"url": "https://api.github.com/repos/rust-lang/rust/issues/55039", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/55039/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/55039/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/55039/events", "html_url": "https://github.com/rust-lang/rust/issues/55039", "id": 369806614, "node_id": "MDU6SXNzdWUzNjk4MDY2MTQ=", "number": 55039, "title": "Functions still get personality function attached to them when landing pads are disabled", "user": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234956, "node_id": "MDU6TGFiZWwyMzQ5NTY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-codegen", "name": "A-codegen", "color": "f7e101", "default": false, "description": "Area: Code generation"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-10-13T14:20:56Z", "updated_at": "2018-10-13T14:21:21Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Compiling with `-Cpanic=abort` or `-Zno-landing-pads` should make associated personality functions entirely unnecessary, yet they still somehow end up getting attached to functions generated with the \"current\" CG.\r\n\r\nConsider for example this function:\r\n\r\n```rust\r\npub fn fails2(a: &mut u32, b: &mut u32) -> i32 {\r\n    ::std::mem::swap(a, b);\r\n    2 + 2\r\n}\r\n```\r\n\r\nwhich when compiled (with or without optimisations) with `-Cpanic=abort`, will contain no personality functions in `1.27.1` but will contain them starting with `1.28`.\r\n\r\n<details>\r\n<summary>1.27.1</summary>\r\n\r\n```llvm\r\ndefine i32 @_ZN7example6fails217h8dd58cf9651f12a5E(i32* noalias nocapture dereferenceable(4) %a, i32* noalias nocapture dereferenceable(4) %b) unnamed_addr #0 !dbg !4 {\r\nstart:\r\n  %0 = load i32, i32* %a, align 1, !dbg !7, !alias.scope !30, !noalias !33\r\n  %1 = load i32, i32* %b, align 1, !dbg !35, !alias.scope !33, !noalias !30\r\n  store i32 %1, i32* %a, align 1, !dbg !35, !alias.scope !30, !noalias !33\r\n  store i32 %0, i32* %b, align 1, !dbg !36, !alias.scope !33, !noalias !30\r\n  ret i32 4, !dbg !37\r\n}\r\n```\r\n\r\n</details>\r\n\r\n<details>\r\n<summary>1.28</summary>\r\n\r\n```llvm\r\ndefine i32 @_ZN7example6fails217h203cd5a0beec258bE(i32* noalias nocapture dereferenceable(4) %a, i32* noalias nocapture dereferenceable(4) %b) unnamed_addr #0 personality i32 (i32, i32, i64, %\"unwind::libunwind::_Unwind_Exception\"*, %\"unwind::libunwind::_Unwind_Context\"*)* @rust_eh_personality !dbg !4 {\r\nstart:\r\n  %tmp.0.copyload.i.i.i = load i32, i32* %a, align 4, !dbg !7, !alias.scope !21, !noalias !24\r\n  %0 = load i32, i32* %b, align 4, !dbg !26, !alias.scope !24, !noalias !21\r\n  store i32 %0, i32* %a, align 4, !dbg !26, !alias.scope !21, !noalias !24\r\n  store i32 %tmp.0.copyload.i.i.i, i32* %b, align 4, !dbg !28, !alias.scope !24, !noalias !21\r\n  ret i32 4, !dbg !31\r\n}\r\n```\r\n\r\n</details>\r\n\r\nThis is technically a codegen regression, albeit very innocuous one.\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/55039/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/55039/timeline", "performed_via_github_app": null, "state_reason": null}