{"url": "https://api.github.com/repos/rust-lang/rust/issues/85576", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/85576/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/85576/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/85576/events", "html_url": "https://github.com/rust-lang/rust/issues/85576", "id": 898731564, "node_id": "MDU6SXNzdWU4OTg3MzE1NjQ=", "number": 85576, "title": "Implementing `From` for associated type results in confusing error", "user": {"login": "oliver-giersch", "id": 19815381, "node_id": "MDQ6VXNlcjE5ODE1Mzgx", "avatar_url": "https://avatars.githubusercontent.com/u/19815381?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oliver-giersch", "html_url": "https://github.com/oliver-giersch", "followers_url": "https://api.github.com/users/oliver-giersch/followers", "following_url": "https://api.github.com/users/oliver-giersch/following{/other_user}", "gists_url": "https://api.github.com/users/oliver-giersch/gists{/gist_id}", "starred_url": "https://api.github.com/users/oliver-giersch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oliver-giersch/subscriptions", "organizations_url": "https://api.github.com/users/oliver-giersch/orgs", "repos_url": "https://api.github.com/users/oliver-giersch/repos", "events_url": "https://api.github.com/users/oliver-giersch/events{/privacy}", "received_events_url": "https://api.github.com/users/oliver-giersch/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-05-22T06:14:12Z", "updated_at": "2021-05-22T06:14:12Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Disclaimer: I am not sure if this an actual bug or rather a diagnostic issue.\r\n\r\nThe following simplified code\r\n\r\n```rust\r\nuse std::str::FromStr;\r\n\r\ntype BoolErr = <bool as FromStr>::Err;\r\n\r\nstruct Error(BoolErr);\r\n\r\nimpl From<BoolErr> for Error {\r\n    fn from(err: BoolErr) -> Self {\r\n        Self(err)\r\n    }\r\n}\r\n```\r\n\r\n[Playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=ff922cb6871756c87786ff85a02c4d52)\r\n\r\nProduces the following incorrect/confusing error message on both stable and nigthly:\r\n\r\n```\r\nerror[E0119]: conflicting implementations of trait `std::convert::From<Error>` for type `Error`:\r\n --> src/lib.rs:7:1\r\n  |\r\n7 | impl From<BoolErr> for Error {\r\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  |\r\n  = note: conflicting implementation in crate `core`:\r\n          - impl<T> From<T> for T;\r\n```\r\n\r\nI encountered this issue when I wanted to wrap the result returned by `str::parse` for a type from crate A which uses an error type from another crate B, which I did not want to depend on and import directly. I am aware that using an associated type here has implications for backwards compatibility, but in this case this is actually desirable I think, since I only want to forward the result into my custom error type, even if the concrete error type in crate A/B changes.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/85576/reactions", "total_count": 7, "+1": 7, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/85576/timeline", "performed_via_github_app": null, "state_reason": null}