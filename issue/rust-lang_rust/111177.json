{"url": "https://api.github.com/repos/rust-lang/rust/issues/111177", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/111177/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/111177/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/111177/events", "html_url": "https://github.com/rust-lang/rust/issues/111177", "id": 1695344638, "node_id": "I_kwDOAAsO6M5lDOf-", "number": 111177, "title": "`dyn Future` suppresses unconditional recursion ", "user": {"login": "NishantJoshi00", "id": 51093026, "node_id": "MDQ6VXNlcjUxMDkzMDI2", "avatar_url": "https://avatars.githubusercontent.com/u/51093026?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NishantJoshi00", "html_url": "https://github.com/NishantJoshi00", "followers_url": "https://api.github.com/users/NishantJoshi00/followers", "following_url": "https://api.github.com/users/NishantJoshi00/following{/other_user}", "gists_url": "https://api.github.com/users/NishantJoshi00/gists{/gist_id}", "starred_url": "https://api.github.com/users/NishantJoshi00/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NishantJoshi00/subscriptions", "organizations_url": "https://api.github.com/users/NishantJoshi00/orgs", "repos_url": "https://api.github.com/users/NishantJoshi00/repos", "events_url": "https://api.github.com/users/NishantJoshi00/events{/privacy}", "received_events_url": "https://api.github.com/users/NishantJoshi00/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235137, "node_id": "MDU6TGFiZWwyMzUxMzc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lint", "name": "A-lint", "color": "f7e101", "default": false, "description": "Area: Lints (warnings about flaws in source code) such as unused_mut."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2023-05-04T06:34:13Z", "updated_at": "2023-06-05T18:08:57Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "There was a `unconditional_recursion` in code, and there was no warning related to it. (in case of `dyn Future`)\r\n\r\nI tried this code:\r\n## Code\r\n\r\n```rust\r\nuse std::{future::Future, pin::Pin}\r\n\r\nfn do_something() -> Pin<Box<dyn Future<Output = ()>>> {\r\n  Box::pin(async { do_something().await })\r\n}\r\n\r\n```\r\n\r\nThe code mentioned above does not trigger any warning or errors. The behaviour was first caught when working with `async_trait`, where it also does a similar transformation. \r\n\r\nThis is unique to `dyn Future` because, I tried reproducing this with other possible `Future` recursions but, they were instantly caught.\r\n\r\n## Examples\r\n\r\nWith Async Function\r\n```rust\r\nasync fn do_something() {\r\n  do_something().await\r\n}\r\n\r\n/*\r\n\r\nerror[E0733]: recursion in an `async fn` requires boxing\r\n --> src/main.rs:8:25\r\n  |\r\n8 | async fn do_something() {\r\n  |                         ^ recursive `async fn`\r\n  |\r\n  = note: a recursive `async fn` must be rewritten to return a boxed `dyn Future`\r\n  = note: consider using the `async_recursion` crate: https://crates.io/crates/async_recursion\r\n\r\n*/\r\n```\r\n\r\nWith `impl Future`\r\n```rust\r\n\r\nfn do_something() -> Pin<Box<impl Future<Output = ()>>> {\r\n  Box::pin( async { do_something().await } )\r\n}\r\n\r\n/*\r\n\r\nerror[E0720]: cannot resolve opaque type\r\n  --> src/main.rs:12:31\r\n   |\r\n12 | fn do_something() -> Pin<Box<impl Future<Output = ()>>> {\r\n   |                              ^^^^^^^^^^^^^^^^^^^^^^^^^ recursive opaque type\r\n13 |     Box::pin(async { do_something().await })\r\n   |     -----------------------------------------\r\n   |     |                |\r\n   |     |                async closure captures itself here\r\n   |     returning here with type `Pin<Box<[async block@src/main.rs:13:14: 13:45]>>`\r\n\r\n*/\r\n\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/111177/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/111177/timeline", "performed_via_github_app": null, "state_reason": null}