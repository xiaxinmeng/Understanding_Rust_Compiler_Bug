{"url": "https://api.github.com/repos/rust-lang/rust/issues/45459", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/45459/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/45459/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/45459/events", "html_url": "https://github.com/rust-lang/rust/issues/45459", "id": 267516056, "node_id": "MDU6SXNzdWUyNjc1MTYwNTY=", "number": 45459, "title": "Unnecessary compares and branches in asm output", "user": {"login": "Boscop", "id": 535593, "node_id": "MDQ6VXNlcjUzNTU5Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/535593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Boscop", "html_url": "https://github.com/Boscop", "followers_url": "https://api.github.com/users/Boscop/followers", "following_url": "https://api.github.com/users/Boscop/following{/other_user}", "gists_url": "https://api.github.com/users/Boscop/gists{/gist_id}", "starred_url": "https://api.github.com/users/Boscop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Boscop/subscriptions", "organizations_url": "https://api.github.com/users/Boscop/orgs", "repos_url": "https://api.github.com/users/Boscop/repos", "events_url": "https://api.github.com/users/Boscop/events{/privacy}", "received_events_url": "https://api.github.com/users/Boscop/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-10-23T01:15:52Z", "updated_at": "2021-06-09T14:58:17Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "https://godbolt.org/g/62GNZf\r\n```rust\r\npub fn f1(v: &mut Vec<f32>) {\r\n  v.clear();\r\n}\r\n\r\npub fn f2(v: &mut Vec<f32>) {\r\n  unsafe { v.set_len(0); }\r\n}\r\n```\r\n```asm\r\nexample::f1:\r\n  push rbp\r\n  mov rbp, rsp\r\n  cmp qword ptr [rdi + 16], 0\r\n  je .LBB0_2\r\n  mov qword ptr [rdi + 16], 0\r\n.LBB0_2:\r\n  pop rbp\r\n  ret\r\n\r\nexample::f2:\r\n  push rbp\r\n  mov rbp, rsp\r\n  mov qword ptr [rdi + 16], 0\r\n  pop rbp\r\n  ret\r\n```\r\n\r\nIn f1, the lines `cmp qword ptr [rdi + 16], 0` and `je .LBB0_2` should be optimized away, but aren't, why?\r\n(It sets the len to 0 if it's not 0, otherwise leaves it at 0. The len will be 0 afterwards either way, so it should eliminate the check and just set it to 0 like `set_len(0)`.)\r\n\r\nI thought I'd open this issue because I don't think such optimization opportunities should be left on the table because it accumulatively affects a lot of code.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/45459/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/45459/timeline", "performed_via_github_app": null, "state_reason": null}