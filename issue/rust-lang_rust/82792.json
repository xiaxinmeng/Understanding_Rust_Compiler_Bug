{"url": "https://api.github.com/repos/rust-lang/rust/issues/82792", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/82792/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/82792/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/82792/events", "html_url": "https://github.com/rust-lang/rust/issues/82792", "id": 822880654, "node_id": "MDU6SXNzdWU4MjI4ODA2NTQ=", "number": 82792, "title": "ICE: min_const_generics + const_generics_defaults = Broken MIR", "user": {"login": "Soveu", "id": 34382234, "node_id": "MDQ6VXNlcjM0MzgyMjM0", "avatar_url": "https://avatars.githubusercontent.com/u/34382234?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Soveu", "html_url": "https://github.com/Soveu", "followers_url": "https://api.github.com/users/Soveu/followers", "following_url": "https://api.github.com/users/Soveu/following{/other_user}", "gists_url": "https://api.github.com/users/Soveu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Soveu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Soveu/subscriptions", "organizations_url": "https://api.github.com/users/Soveu/orgs", "repos_url": "https://api.github.com/users/Soveu/repos", "events_url": "https://api.github.com/users/Soveu/events{/privacy}", "received_events_url": "https://api.github.com/users/Soveu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 46741598, "node_id": "MDU6TGFiZWw0Njc0MTU5OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-test", "name": "E-needs-test", "color": "02e10c", "default": false, "description": "Call for participation: writing correctness tests"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1282665911, "node_id": "MDU6TGFiZWwxMjgyNjY1OTEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-generics", "name": "A-const-generics", "color": "f7e101", "default": false, "description": "Area: const generics (parameters and arguments)"}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}, {"id": 2237029335, "node_id": "MDU6TGFiZWwyMjM3MDI5MzM1", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-min_const_generics", "name": "F-min_const_generics", "color": "f9c0cc", "default": false, "description": "Minimal const generics MVP"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-03-05T08:46:10Z", "updated_at": "2021-03-30T03:41:15Z", "closed_at": "2021-03-30T03:41:15Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\n```Rust\r\n#![feature(const_generics_defaults)]\r\n\r\n#[repr(C)]\r\npub struct Loaf<T: Sized, const N: usize = 1usize> {\r\n    head: [T; N],\r\n    slice: [T],\r\n}\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nsoveu@localhost /t/rtest> rustc --version --verbose\r\nrustc 1.52.0-nightly (45b3c2851 2021-03-04)\r\nbinary: rustc\r\ncommit-hash: 45b3c28518e4c45dfd12bc2c4400c0d0e9639927\r\ncommit-date: 2021-03-04\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.52.0-nightly\r\nLLVM version: 12.0.0\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nsoveu@localhost /t/rtest [101]> rustc const.rs\r\nwarning: the feature `const_generics_defaults` is incomplete and may not be safe to use and/or cause compiler crashes\r\n --> const.rs:1:12\r\n  |\r\n1 | #![feature(const_generics_defaults)]\r\n  |            ^^^^^^^^^^^^^^^^^^^^^^^\r\n  |\r\n  = note: `#[warn(incomplete_features)]` on by default\r\n  = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\r\n\r\nwarning: 1 warning emitted\r\n\r\nerror: internal compiler error: unexpected const parent in type_of_def_id(): Item(Item { ident: Loaf#0, def_id: DefId(0:3 ~ const[317d]::Loaf), attrs: [Attribute { kind: Normal(AttrItem { path: Path { span: const.rs:3:3: 3:7 (#0), segments: [PathSegment { ident: repr#0, id: NodeId(12), args: None }], tokens: None }, args: Delimited(DelimSpan { open: const.rs:3:7: 3:8 (#0), close: const.rs:3:9: 3:10 (#0) }, Parenthesis, TokenStream([(Token(Token { kind: Ident(\"C\", false), span: const.rs:3:8: 3:9 (#0) }), Alone)])), tokens: None }, None), id: AttrId(1), style: Outer, span: const.rs:3:1: 3:11 (#0) }], kind: Struct(Struct([StructField { span: const.rs:5:5: 5:17 (#0), ident: head#0, vis: Spanned { node: Inherited, span: const.rs:5:5: 5:5 (#0) }, hir_id: HirId { owner: DefId(0:3 ~ const[317d]::Loaf), local_id: 7 }, ty: Ty { hir_id: HirId { owner: DefId(0:3 ~ const[317d]::Loaf), local_id: 6 }, kind: Array(Ty { hir_id: HirId { owner: DefId(0:3 ~ const[317d]::Loaf), local_id: 1 }, kind: Path(Resolved(None, Path { span: const.rs:5:12: 5:13 (#0), res: Def(TyParam, DefId(0:4 ~ const[317d]::Loaf::T)), segments: [PathSegment { ident: T#0, hir_id: Some(HirId { owner: DefId(0:3 ~ const[317d]::Loaf), local_id: 2 }), res: Some(Def(TyParam, DefId(0:4 ~ const[317d]::Loaf::T))), args: None, infer_args: false }] })), span: const.rs:5:12: 5:13 (#0) }, AnonConst { hir_id: HirId { owner: DefId(0:3 ~ const[317d]::Loaf), local_id: 3 }, body: BodyId { hir_id: HirId { owner: DefId(0:3 ~ const[317d]::Loaf), local_id: 5 } } }), span: const.rs:5:11: 5:17 (#0) }, attrs: [] }, StructField { span: const.rs:6:5: 6:15 (#0), ident: slice#0, vis: Spanned { node: Inherited, span: const.rs:6:5: 6:5 (#0) }, hir_id: HirId { owner: DefId(0:3 ~ const[317d]::Loaf), local_id: 11 }, ty: Ty { hir_id: HirId { owner: DefId(0:3 ~ const[317d]::Loaf), local_id: 10 }, kind: Slice(Ty { hir_id: HirId { owner: DefId(0:3 ~ const[317d]::Loaf), local_id: 8 }, kind: Path(Resolved(None, Path { span: const.rs:6:13: 6:14 (#0), res: Def(TyParam, DefId(0:4 ~ const[317d]::Loaf::T)), segments: [PathSegment { ident: T#0, hir_id: Some(HirId { owner: DefId(0:3 ~ const[317d]::Loaf), local_id: 9 }), res: Some(Def(TyParam, DefId(0:4 ~ const[317d]::Loaf::T))), args: None, infer_args: false }] })), span: const.rs:6:13: 6:14 (#0) }), span: const.rs:6:12: 6:15 (#0) }, attrs: [] }], false), Generics { params: [GenericParam { hir_id: HirId { owner: DefId(0:3 ~ const[317d]::Loaf), local_id: 14 }, name: Plain(T#0), attrs: [], bounds: [Trait(PolyTraitRef { bound_generic_params: [], trait_ref: TraitRef { path: Path { span: const.rs:4:20: 4:25 (#0), res: Def(Trait, DefId(2:2150 ~ core[3998]::marker::Sized)), segments: [PathSegment { ident: Sized#0, hir_id: Some(HirId { owner: DefId(0:3 ~ const[317d]::Loaf), local_id: 12 }), res: Some(Def(Trait, DefId(2:2150 ~ core[3998]::marker::Sized))), args: None, infer_args: false }] }, hir_ref_id: HirId { owner: DefId(0:3 ~ const[317d]::Loaf), local_id: 13 } }, span: const.rs:4:20: 4:25 (#0) }, None)], span: const.rs:4:17: 4:18 (#0), pure_wrt_drop: false, kind: Type { default: None, synthetic: None } }, GenericParam { hir_id: HirId { owner: DefId(0:3 ~ const[317d]::Loaf), local_id: 19 }, name: Plain(N#0), attrs: [], bounds: [], span: const.rs:4:33: 4:34 (#0), pure_wrt_drop: false, kind: Const { ty: Ty { hir_id: HirId { owner: DefId(0:3 ~ const[317d]::Loaf), local_id: 15 }, kind: Path(Resolved(None, Path { span: const.rs:4:36: 4:41 (#0), res: PrimTy(Uint(Usize)), segments: [PathSegment { ident: usize#0, hir_id: Some(HirId { owner: DefId(0:3 ~ const[317d]::Loaf), local_id: 16 }), res: Some(Err), args: None, infer_args: false }] })), span: const.rs:4:36: 4:41 (#0) }, default: Some(AnonConst { hir_id: HirId { owner: DefId(0:3 ~ const[317d]::Loaf), local_id: 17 }, body: BodyId { hir_id: HirId { owner: DefId(0:3 ~ const[317d]::Loaf), local_id: 18 } } }) } }], where_clause: WhereClause { predicates: [], span: const.rs:4:51: 4:51 (#0) }, span: const.rs:4:16: 4:51 (#0) }), vis: Spanned { node: Public, span: const.rs:4:1: 4:4 (#0) }, span: const.rs:4:1: 7:2 (#0) })\r\n  |\r\n  = note: delayed at compiler/rustc_typeck/src/collect/type_of.rs:439:26\r\n\r\nerror: internal compiler error: TyKind::Error constructed but no error reported\r\n  |\r\n  = note: delayed at compiler/rustc_typeck/src/check/coercion.rs:154:49\r\n\r\nerror: internal compiler error: TyKind::Error constructed but no error reported\r\n  |\r\n  = note: delayed at compiler/rustc_mir_build/src/build/mod.rs:690:18\r\n\r\nerror: internal compiler error: mir_const_qualif: MIR had errors\r\n --> const.rs:4:44\r\n  |\r\n4 | pub struct Loaf<T: Sized, const N: usize = 1usize> {\r\n  |                                            ^^^^^^\r\n  |\r\n  = note: delayed at compiler/rustc_mir/src/transform/mod.rs:235:18\r\n\r\nerror: internal compiler error: PromoteTemps: MIR had errors\r\n --> const.rs:4:44\r\n  |\r\n4 | pub struct Loaf<T: Sized, const N: usize = 1usize> {\r\n  |                                            ^^^^^^\r\n  |\r\n  = note: delayed at compiler/rustc_mir/src/transform/promote_consts.rs:55:22\r\n\r\nerror: internal compiler error: broken MIR in DefId(0:6 ~ const[317d]::Loaf::{constant#0}) (\"return type\"): bad type [type error]\r\n --> const.rs:4:44\r\n  |\r\n4 | pub struct Loaf<T: Sized, const N: usize = 1usize> {\r\n  |                                            ^^^^^^\r\n  |\r\n  = note: delayed at compiler/rustc_mir/src/borrow_check/type_check/mod.rs:252:27\r\n\r\nerror: internal compiler error: TyKind::Error constructed but no error reported\r\n  |\r\n  = note: delayed at compiler/rustc_mir/src/borrow_check/type_check/mod.rs:714:20\r\n\r\nerror: internal compiler error: broken MIR in DefId(0:6 ~ const[317d]::Loaf::{constant#0}) (LocalDecl { mutability: Mut, local_info: None, internal: false, is_block_tail: None, ty: [type error], user_ty: None, source_info: SourceInfo { span: const.rs:4:44: 4:50 (#0), scope: scope[0] } }): bad type [type error]\r\n --> const.rs:4:44\r\n  |\r\n4 | pub struct Loaf<T: Sized, const N: usize = 1usize> {\r\n  |                                            ^^^^^^\r\n  |\r\n  = note: delayed at compiler/rustc_mir/src/borrow_check/type_check/mod.rs:252:27\r\n\r\nthread 'rustc' panicked at 'no errors encountered even though `delay_span_bug` issued', compiler/rustc_errors/src/lib.rs:1012:13\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.52.0-nightly (45b3c2851 2021-03-04) running on x86_64-unknown-linux-gnu\r\n\r\nquery stack during panic:\r\nend of query stack\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nthread 'rustc' panicked at 'no errors encountered even though `delay_span_bug` issued', compiler/rustc_errors/src/lib.rs:1012:13\r\nstack backtrace:\r\n   0: rust_begin_unwind\r\n             at /rustc/45b3c28518e4c45dfd12bc2c4400c0d0e9639927/library/std/src/panicking.rs:493:5\r\n   1: std::panicking::begin_panic_fmt\r\n             at /rustc/45b3c28518e4c45dfd12bc2c4400c0d0e9639927/library/std/src/panicking.rs:435:5\r\n   2: rustc_errors::HandlerInner::flush_delayed\r\n   3: <rustc_errors::HandlerInner as core::ops::drop::Drop>::drop\r\n   4: core::ptr::drop_in_place<rustc_session::parse::ParseSess>\r\n   5: <alloc::rc::Rc<T> as core::ops::drop::Drop>::drop\r\n   6: core::ptr::drop_in_place<rustc_interface::interface::Compiler>\r\n   7: rustc_span::with_source_map\r\n   8: rustc_interface::interface::create_compiler_and_run\r\n   9: rustc_span::with_session_globals\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/82792/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 1}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/82792/timeline", "performed_via_github_app": null, "state_reason": "completed"}