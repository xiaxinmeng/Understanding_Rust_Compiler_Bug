{"url": "https://api.github.com/repos/rust-lang/rust/issues/108637", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/108637/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/108637/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/108637/events", "html_url": "https://github.com/rust-lang/rust/issues/108637", "id": 1606053012, "node_id": "I_kwDOAAsO6M5fumyU", "number": 108637, "title": "A code with dependent types, that should compile, doesn't", "user": {"login": "vporton", "id": 2900574, "node_id": "MDQ6VXNlcjI5MDA1NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2900574?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vporton", "html_url": "https://github.com/vporton", "followers_url": "https://api.github.com/users/vporton/followers", "following_url": "https://api.github.com/users/vporton/following{/other_user}", "gists_url": "https://api.github.com/users/vporton/gists{/gist_id}", "starred_url": "https://api.github.com/users/vporton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vporton/subscriptions", "organizations_url": "https://api.github.com/users/vporton/orgs", "repos_url": "https://api.github.com/users/vporton/repos", "events_url": "https://api.github.com/users/vporton/events{/privacy}", "received_events_url": "https://api.github.com/users/vporton/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2023-03-02T03:39:27Z", "updated_at": "2023-04-05T17:27:42Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "I tried this code:\r\n\r\n```rust\r\npub struct BinaryFormatWithoutFieldUid<'a, T>(pub &'a T);\r\n\r\npub struct BinaryFormatWithoutLength<'a, T>(pub &'a T);\r\n\r\npub trait Serialize {}\r\n\r\nimpl<'a, T> Serialize for BinaryFormatWithoutFieldUid<'a, T>\r\n    where BinaryFormatWithoutLength<'a, T>: Serialize\r\n{}\r\n\r\nimpl<'a, T> Serialize for BinaryFormatWithoutFieldUid<'a, Option<T>>\r\n    where BinaryFormatWithoutFieldUid<'a, T>: Serialize\r\n{}\r\n\r\nimpl<'a, T> Serialize for BinaryFormatWithoutLength<'a, Option<T>>\r\n    where BinaryFormatWithoutLength<'a, T>: Serialize\r\n{}\r\n```\r\n\r\nI expected it to compile without errors.\r\n\r\nInstead, this happened:\r\n```\r\nerror[E0275]: overflow evaluating the requirement `BinaryFormatWithoutLength<'_, std::option::Option<_>>: Serialize`\r\n   |\r\n   = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`xrpl_async`)\r\nnote: required for `BinaryFormatWithoutLength<'_, std::option::Option<std::option::Option<_>>>` to implement `Serialize`\r\n  --> src/lib.rs:15:13\r\n   |\r\n15 | impl<'a, T> Serialize for BinaryFormatWithoutLength<'a, Option<T>>\r\n   |             ^^^^^^^^^     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n   = note: 127 redundant requirements hidden\r\n   = note: required for `BinaryFormatWithoutLength<'_, std::option::Option<std::option::Option<std::option::Option<...>>>>` to implement `Serialize`\r\n   = note: the full type name has been written to '/home/porton/Projects/bugs/rust-overflow/target/debug/deps/xrpl_async-97a5b377c31d9cdb.long-type-8508140246639481262.txt'\r\n\r\nFor more information about this error, try `rustc --explain E0275`.\r\nerror: could not compile `xrpl_async` due to previous error\r\n```\r\n\r\nThere should be no infinite recursion in this case, because I go from more complex types (like `Option<T>`) to less complex types (`T`). I also go only in the direction `BinaryFormatWithoutFieldUid` -> `BinaryFormatWithoutLength` and not `BinaryFormatWithoutLength` -> `BinaryFormatWithoutFieldUid`, so there should be no infinite recursion.\r\n\r\nA funny thing is that commenting out any of the three last definitions makes the file compile.\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.67.1 (d5a82bbd2 2023-02-07)\r\nbinary: rustc\r\ncommit-hash: d5a82bbd26e1ad8b7401f6a718a9c57c96905483\r\ncommit-date: 2023-02-07\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.67.1\r\nLLVM version: 15.0.6\r\n```\r\nand\r\n```\r\n$ rustc --version --verbose\r\nrustc 1.69.0-nightly (9aa5c24b7 2023-02-17)\r\nbinary: rustc\r\ncommit-hash: 9aa5c24b7d763fb98d998819571128ff2eb8a3ca\r\ncommit-date: 2023-02-17\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.69.0-nightly\r\nLLVM version: 15.0.7\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/108637/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/108637/timeline", "performed_via_github_app": null, "state_reason": null}