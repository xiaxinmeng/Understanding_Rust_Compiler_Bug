{"url": "https://api.github.com/repos/rust-lang/rust/issues/98634", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/98634/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/98634/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/98634/events", "html_url": "https://github.com/rust-lang/rust/issues/98634", "id": 1287650364, "node_id": "I_kwDOAAsO6M5Mv_w8", "number": 98634, "title": "Compiler error when an async function is store in a async struct", "user": {"login": "jfortin42", "id": 15819062, "node_id": "MDQ6VXNlcjE1ODE5MDYy", "avatar_url": "https://avatars.githubusercontent.com/u/15819062?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jfortin42", "html_url": "https://github.com/jfortin42", "followers_url": "https://api.github.com/users/jfortin42/followers", "following_url": "https://api.github.com/users/jfortin42/following{/other_user}", "gists_url": "https://api.github.com/users/jfortin42/gists{/gist_id}", "starred_url": "https://api.github.com/users/jfortin42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jfortin42/subscriptions", "organizations_url": "https://api.github.com/users/jfortin42/orgs", "repos_url": "https://api.github.com/users/jfortin42/repos", "events_url": "https://api.github.com/users/jfortin42/events{/privacy}", "received_events_url": "https://api.github.com/users/jfortin42/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 46741598, "node_id": "MDU6TGFiZWw0Njc0MTU5OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-test", "name": "E-needs-test", "color": "02e10c", "default": false, "description": "Call for participation: writing correctness tests"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": {"login": "Rageking8", "id": 106309953, "node_id": "U_kgDOBlYpQQ", "avatar_url": "https://avatars.githubusercontent.com/u/106309953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rageking8", "html_url": "https://github.com/Rageking8", "followers_url": "https://api.github.com/users/Rageking8/followers", "following_url": "https://api.github.com/users/Rageking8/following{/other_user}", "gists_url": "https://api.github.com/users/Rageking8/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rageking8/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rageking8/subscriptions", "organizations_url": "https://api.github.com/users/Rageking8/orgs", "repos_url": "https://api.github.com/users/Rageking8/repos", "events_url": "https://api.github.com/users/Rageking8/events{/privacy}", "received_events_url": "https://api.github.com/users/Rageking8/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Rageking8", "id": 106309953, "node_id": "U_kgDOBlYpQQ", "avatar_url": "https://avatars.githubusercontent.com/u/106309953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rageking8", "html_url": "https://github.com/Rageking8", "followers_url": "https://api.github.com/users/Rageking8/followers", "following_url": "https://api.github.com/users/Rageking8/following{/other_user}", "gists_url": "https://api.github.com/users/Rageking8/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rageking8/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rageking8/subscriptions", "organizations_url": "https://api.github.com/users/Rageking8/orgs", "repos_url": "https://api.github.com/users/Rageking8/repos", "events_url": "https://api.github.com/users/Rageking8/events{/privacy}", "received_events_url": "https://api.github.com/users/Rageking8/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2022-06-28T17:11:40Z", "updated_at": "2022-10-29T12:07:00Z", "closed_at": "2022-10-29T12:07:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\nhow to create smaller examples.\n\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\n\n-->\n\nHello,\n\nI was trying differents things with Future and callbacks - to be more precise, I am trying to store an asynchronous callback inside an asynchronous struct.\nIn my attempts, I found an unexpected compiler crash  - I have taken the care to create a minimal reproducible example, which you can see, and test for yourself - note that the crash occurs both on the latest \"stable\" and \"nightly\" versions:\n\n### Code\n\n```Rust\nuse std::{\n    future::Future,\n    pin::Pin,\n    task::{Context, Poll},\n};\n\npub struct StructAsync<F: Fn() -> Pin<Box<dyn Future<Output = ()>>>> {\n    pub callback: F,\n}\n\nimpl<F> Future for StructAsync<F>\nwhere\n    F: Fn() -> Pin<Box<dyn Future<Output = ()>>>,\n{\n    type Output = ();\n\n    fn poll(self: Pin<&mut Self>, _cx: &mut Context<'_>) -> Poll<Self::Output> {\n        Poll::Pending\n    }\n}\n\nasync fn callback() {}\n\n#[tokio::main]\nasync fn main() {\n    StructAsync { callback }.await;\n}\n\n```\n\n\n### Meta\n<!--\nIf you're using the stable version of the compiler, you should also check if the\nbug also exists in the beta or nightly versions.\n-->\n\n`rustc --version --verbose`:\n```\nrustc 1.61.0 (fe5b13d68 2022-05-18)\nbinary: rustc\ncommit-hash: fe5b13d681f25ee6474be29d748c65adcd91f69e\ncommit-date: 2022-05-18\nhost: x86_64-apple-darwin\nrelease: 1.61.0\nLLVM version: 14.0.0\n```\n\n### Error output\n\n```\nwarning: Error finalizing incremental compilation session directory `/Users/jonathan/Documents/rust/compiler_error/target/debug/incremental/compiler_error-236kbd4gmvetj/s-gb5nhhpzbs-1n5kt82-working`: No such file or directory (os error 2)\n\nerror: internal compiler error: no errors encountered even though `delay_span_bug` issued\n\nerror: internal compiler error: Encountered errors `[FulfillmentError(Obligation(predicate=Binder(ProjectionPredicate(ProjectionTy { substs: [fn() -> impl std::future::Future<Output = ()> {callback}, ()], item_def_id: DefId(2:3311 ~ core[5293]::ops::function::FnOnce::Output) }, Ty(std::pin::Pin<std::boxed::Box<(dyn std::future::Future<Output = ()> + 'static)>>)), []), depth=2),MismatchedProjectionTypes(Sorts(ExpectedFound { expected: std::future::from_generator::GenFuture<[static generator@src/main.rs:22:21: 22:23]>, found: std::pin::Pin<std::boxed::Box<(dyn std::future::Future<Output = ()> + 'static)>> })))]` resolving bounds outside of type inference\n  |\n  = note: delayed at compiler/rustc_trait_selection/src/traits/codegen.rs:125:24\n\nerror: internal compiler error: Encountered errors `[FulfillmentError(Obligation(predicate=Binder(ProjectionPredicate(ProjectionTy { substs: [fn() -> impl std::future::Future<Output = ()> {callback}, ()], item_def_id: DefId(2:3311 ~ core[5293]::ops::function::FnOnce::Output) }, Ty(std::pin::Pin<std::boxed::Box<(dyn std::future::Future<Output = ()> + 'static)>>)), []), depth=1),MismatchedProjectionTypes(Sorts(ExpectedFound { expected: std::future::from_generator::GenFuture<[static generator@src/main.rs:22:21: 22:23]>, found: std::pin::Pin<std::boxed::Box<(dyn std::future::Future<Output = ()> + 'static)>> })))]` resolving bounds outside of type inference\n  |\n  = note: delayed at compiler/rustc_trait_selection/src/traits/codegen.rs:125:24\n\nthread 'rustc' panicked at 'Box<dyn Any>', compiler/rustc_errors/src/lib.rs:1309:13\n```\n\n<!--\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\n-->\n<details><summary><strong>Backtrace</strong></summary>\n<p>\n\n```\nstack backtrace:\n   0: std::panicking::begin_panic::<rustc_errors::ExplicitBug>\n   1: std::panic::panic_any::<rustc_errors::ExplicitBug>\n   2: <rustc_errors::HandlerInner as core::ops::drop::Drop>::drop\n   3: core::ptr::drop_in_place::<rustc_session::parse::ParseSess>\n   4: <alloc::rc::Rc<rustc_session::session::Session> as core::ops::drop::Drop>::drop\n   5: core::ptr::drop_in_place::<rustc_interface::interface::Compiler>\n   6: rustc_span::with_source_map::<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_interface::interface::create_compiler_and_run<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver::run_compiler::{closure#1}>::{closure#1}>\n   7: rustc_interface::interface::create_compiler_and_run::<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver::run_compiler::{closure#1}>\n   8: <scoped_tls::ScopedKey<rustc_span::SessionGlobals>>::set::<rustc_interface::interface::run_compiler<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver::run_compiler::{closure#1}>::{closure#0}, core::result::Result<(), rustc_errors::ErrorGuaranteed>>\n```\n\n</p>\n</details>\n\n\n### On nightly\n\n### Meta\n<!--\nIf you're using the stable version of the compiler, you should also check if the\nbug also exists in the beta or nightly versions.\n-->\n\n`rustc +nightly --version --verbose`:\n```\nrustc 1.64.0-nightly (2f3ddd9f5 2022-06-27)\nbinary: rustc\ncommit-hash: 2f3ddd9f594adf9773547aa7cedb43c4ac8ffd2f\ncommit-date: 2022-06-27\nhost: x86_64-apple-darwin\nrelease: 1.64.0-nightly\nLLVM version: 14.0.6\n```\n\n### Error output\n\n```\nthread 'rustc' panicked at 'called `Option::unwrap()` on a `None` value', compiler/rustc_monomorphize/src/collector.rs:958:93\n```\n\n<details><summary><strong>Backtrace</strong></summary>\n<p>\n\n```\nstack backtrace:\n   0: _rust_begin_unwind\n   1: core::panicking::panic_fmt\n   2: core::panicking::panic\n   3: <rustc_monomorphize::collector::MirNeighborCollector as rustc_middle::mir::visit::Visitor>::visit_terminator\n   4: rustc_monomorphize::collector::collect_neighbours\n   5: rustc_monomorphize::collector::collect_items_rec\n   6: rustc_monomorphize::collector::collect_items_rec\n   7: rustc_monomorphize::collector::collect_items_rec\n   8: rustc_monomorphize::collector::collect_items_rec\n   9: rustc_monomorphize::collector::collect_items_rec\n  10: rustc_monomorphize::collector::collect_items_rec\n  11: rustc_monomorphize::collector::collect_items_rec\n  12: rustc_monomorphize::collector::collect_items_rec\n  13: rustc_monomorphize::collector::collect_items_rec\n  14: rustc_monomorphize::collector::collect_items_rec\n  15: rustc_monomorphize::collector::collect_items_rec\n  16: rustc_monomorphize::collector::collect_items_rec\n  17: rustc_monomorphize::collector::collect_items_rec\n  18: <rustc_session::session::Session>::time::<(), rustc_monomorphize::collector::collect_crate_mono_items::{closure#1}>\n  19: rustc_monomorphize::collector::collect_crate_mono_items\n  20: rustc_monomorphize::partitioning::collect_and_partition_mono_items\n  21: <rustc_query_system::dep_graph::graph::DepGraph<rustc_middle::dep_graph::dep_node::DepKind>>::with_task::<rustc_middle::ty::context::TyCtxt, (), (&std::collections::hash::set::HashSet<rustc_span::def_id::DefId, core::hash::BuildHasherDefault<rustc_hash::FxHasher>>, &[rustc_middle::mir::mono::CodegenUnit])>\n  22: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::DefaultCache<(), (&std::collections::hash::set::HashSet<rustc_span::def_id::DefId, core::hash::BuildHasherDefault<rustc_hash::FxHasher>>, &[rustc_middle::mir::mono::CodegenUnit])>>\n  23: rustc_query_system::query::plumbing::get_query::<rustc_query_impl::queries::collect_and_partition_mono_items, rustc_query_impl::plumbing::QueryCtxt>\n  24: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::collect_and_partition_mono_items\n  25: <rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::CodegenBackend>::codegen_crate\n  26: <rustc_session::session::Session>::time::<alloc::boxed::Box<dyn core::any::Any>, rustc_interface::passes::start_codegen::{closure#0}>\n  27: <rustc_interface::passes::QueryContext>::enter::<<rustc_interface::queries::Queries>::ongoing_codegen::{closure#0}::{closure#0}, core::result::Result<alloc::boxed::Box<dyn core::any::Any>, rustc_errors::ErrorGuaranteed>>\n  28: <rustc_interface::queries::Queries>::ongoing_codegen\n  29: <rustc_interface::interface::Compiler>::enter::<rustc_driver::run_compiler::{closure#1}::{closure#2}, core::result::Result<core::option::Option<rustc_interface::queries::Linker>, rustc_errors::ErrorGuaranteed>>\n  30: rustc_span::with_source_map::<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_interface::interface::create_compiler_and_run<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver::run_compiler::{closure#1}>::{closure#1}>\n  31: <scoped_tls::ScopedKey<rustc_span::SessionGlobals>>::set::<rustc_interface::interface::run_compiler<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver::run_compiler::{closure#1}>::{closure#0}, core::result::Result<(), rustc_errors::ErrorGuaranteed>>\n```\n\n</p>\n</details>\n\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"Rageking8\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/98634/reactions", "total_count": 5, "+1": 5, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/98634/timeline", "performed_via_github_app": null, "state_reason": "completed"}