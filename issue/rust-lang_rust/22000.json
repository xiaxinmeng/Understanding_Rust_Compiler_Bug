{"url": "https://api.github.com/repos/rust-lang/rust/issues/22000", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/22000/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/22000/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/22000/events", "html_url": "https://github.com/rust-lang/rust/issues/22000", "id": 56803679, "node_id": "MDU6SXNzdWU1NjgwMzY3OQ==", "number": 22000, "title": "rustdoc prints types in traits different than rustc", "user": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-02-06T11:58:51Z", "updated_at": "2015-02-06T16:35:06Z", "closed_at": "2015-02-06T16:35:06Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The syntax that rustdoc uses to refer to types declared internally within a trait (\"associated types\"), is different from what rustc expects. This is fairly confusing for a newbie, who tries to learn the language by example - in particular, by looking at how the standard API does things.\n\nFor example, the documentation of the Iterator trait http://doc.rust-lang.org/std/iter/trait.Iterator.html refers to the type \"Item\" simply by \"Item\", but I have to write \"Self::Item\" for this code to actually compile.\n", "closed_by": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/22000/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/22000/timeline", "performed_via_github_app": null, "state_reason": "completed"}