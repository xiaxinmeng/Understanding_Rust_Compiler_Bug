{"url": "https://api.github.com/repos/rust-lang/rust/issues/93867", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/93867/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/93867/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/93867/events", "html_url": "https://github.com/rust-lang/rust/issues/93867", "id": 1130550923, "node_id": "I_kwDOAAsO6M5DYtaL", "number": 93867, "title": "Misleading diagnostic on missing comma", "user": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": {"login": "terrarier2111", "id": 58695553, "node_id": "MDQ6VXNlcjU4Njk1NTUz", "avatar_url": "https://avatars.githubusercontent.com/u/58695553?v=4", "gravatar_id": "", "url": "https://api.github.com/users/terrarier2111", "html_url": "https://github.com/terrarier2111", "followers_url": "https://api.github.com/users/terrarier2111/followers", "following_url": "https://api.github.com/users/terrarier2111/following{/other_user}", "gists_url": "https://api.github.com/users/terrarier2111/gists{/gist_id}", "starred_url": "https://api.github.com/users/terrarier2111/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/terrarier2111/subscriptions", "organizations_url": "https://api.github.com/users/terrarier2111/orgs", "repos_url": "https://api.github.com/users/terrarier2111/repos", "events_url": "https://api.github.com/users/terrarier2111/events{/privacy}", "received_events_url": "https://api.github.com/users/terrarier2111/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "terrarier2111", "id": 58695553, "node_id": "MDQ6VXNlcjU4Njk1NTUz", "avatar_url": "https://avatars.githubusercontent.com/u/58695553?v=4", "gravatar_id": "", "url": "https://api.github.com/users/terrarier2111", "html_url": "https://github.com/terrarier2111", "followers_url": "https://api.github.com/users/terrarier2111/followers", "following_url": "https://api.github.com/users/terrarier2111/following{/other_user}", "gists_url": "https://api.github.com/users/terrarier2111/gists{/gist_id}", "starred_url": "https://api.github.com/users/terrarier2111/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/terrarier2111/subscriptions", "organizations_url": "https://api.github.com/users/terrarier2111/orgs", "repos_url": "https://api.github.com/users/terrarier2111/repos", "events_url": "https://api.github.com/users/terrarier2111/events{/privacy}", "received_events_url": "https://api.github.com/users/terrarier2111/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2022-02-10T17:46:23Z", "updated_at": "2022-06-14T02:17:35Z", "closed_at": "2022-06-14T02:17:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Given the following code: https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021&gist=4f89aeb79b3d5b09db11201a04b0786e\r\n\r\n```rust\r\npub struct Entry<'a, K, V> {\r\n    k: &'a mut K,\r\n    v: V,\r\n}\r\n\r\npub fn entry<'a, K, V>() -> Entry<'a K, V> {\r\n//                                  ^ missing comma\r\n    unimplemented!()\r\n}\r\n```\r\n\r\nThe current output is:\r\n\r\n```\r\nerror: expected one of `,`, `:`, `=`, or `>`, found `K`\r\n --> src/lib.rs:6:28\r\n  |\r\n6 | pub fn entry() -> Entry<'a K, V> {\r\n  |                            ^ expected one of `,`, `:`, `=`, or `>`\r\n\r\nerror: could not compile `playground` due to previous error\r\n```\r\n\r\nThe `:` and `=` suggestions are misleading, because this is a generic invocation, not a generic declaration. You cannot, in fact, write a `:` or an `=` here:\r\n\r\n<details><summary>When you write a <code>:</code></summary>\r\n\r\nThis code:\r\n\r\n```rust\r\npub struct Entry<'a, K, V> {\r\n    k: &'a mut K,\r\n    v: V,\r\n}\r\n\r\npub fn entry<'a, K, V>() -> Entry<'a: 'static, K, V> {\r\n    unimplemented!()\r\n}\r\n```\r\n\r\nProduces this output: https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021&gist=fe71e2beefbe699e32f4d2c91dfb9b4e\r\n\r\n```\r\nerror: expected one of `,` or `>`, found `:`\r\n --> src/lib.rs:6:37\r\n  |\r\n6 | pub fn entry<'a, K, V>() -> Entry<'a: 'static, K, V> {\r\n  |                                     ^ expected one of `,` or `>`\r\n  |\r\nhelp: expressions must be enclosed in braces to be used as const generic arguments\r\n  |\r\n6 | pub fn entry<'a, K, V>() -> Entry<{ 'a: 'static }, K, V> {\r\n  |                                   +             +\r\n\r\n[E0106]: missing lifetime specifier\r\n --> src/lib.rs:6:35\r\n  |\r\n6 | pub fn entry<'a, K, V>() -> Entry<'a: 'static, K, V> {\r\n  |                                   ^ expected named lifetime parameter\r\n  |\r\n  = help: this function's return type contains a borrowed value, but there is no value for it to be borrowed from\r\nhelp: consider using the `'a` lifetime\r\n  |\r\n6 | pub fn entry<'a, K, V>() -> Entry<'a, 'a: 'static, K, V> {\r\n  |                                   +++\r\n\r\n[E0107]: this struct takes 2 generic arguments but 3 generic arguments were supplied\r\n --> src/lib.rs:6:29\r\n  |\r\n6 | pub fn entry<'a, K, V>() -> Entry<'a: 'static, K, V> {\r\n  |                             ^^^^^                 - help: remove this generic argument\r\n  |                             |\r\n  |                             expected 2 generic arguments\r\n  |\r\nnote: struct defined here, with 2 generic parameters: `K`, `V`\r\n --> src/lib.rs:1:12\r\n  |\r\n1 | pub struct Entry<'a, K, V> {\r\n  |            ^^^^^     -  -\r\n\r\nSome errors have detailed explanations: E0106, E0107.\r\nFor more information about an error, try `rustc --explain E0106`.\r\n```\r\n\r\n</details>\r\n\r\n<details><summary>When you write an <code>=</code></summary>\r\n\r\nThis code:\r\n\r\n```rust\r\npub struct Entry<'a, K, V> {\r\n    k: &'a mut K,\r\n    v: V,\r\n}\r\n\r\npub fn entry<'a, K, V>() -> Entry<'a = 'static, K, V> {\r\n    unimplemented!()\r\n}\r\n```\r\n\r\nProduces this output: https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021&gist=4eb1f410e20dd4e36879637261f0d859\r\n\r\n```\r\nerror: expected one of `,`, `:`, or `>`, found `=`\r\n --> src/lib.rs:6:38\r\n  |\r\n6 | pub fn entry<'a, K, V>() -> Entry<'a = 'static, K, V> {\r\n  |                                   -- ^ expected one of `,`, `:`, or `>`\r\n  |                                   |\r\n  |                                   maybe try to close unmatched angle bracket\r\n```\r\n\r\n</details>\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"terrarier2111\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/93867/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/93867/timeline", "performed_via_github_app": null, "state_reason": "completed"}