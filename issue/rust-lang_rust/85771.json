{"url": "https://api.github.com/repos/rust-lang/rust/issues/85771", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/85771/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/85771/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/85771/events", "html_url": "https://github.com/rust-lang/rust/issues/85771", "id": 904599565, "node_id": "MDU6SXNzdWU5MDQ1OTk1NjU=", "number": 85771, "title": "if Result::is_ok() followed immediately by Result::unwrap() fails to optimize out the second err check", "user": {"login": "TheBlueMatt", "id": 649246, "node_id": "MDQ6VXNlcjY0OTI0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TheBlueMatt", "html_url": "https://github.com/TheBlueMatt", "followers_url": "https://api.github.com/users/TheBlueMatt/followers", "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}", "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}", "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions", "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs", "repos_url": "https://api.github.com/users/TheBlueMatt/repos", "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}", "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 234956, "node_id": "MDU6TGFiZWwyMzQ5NTY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-codegen", "name": "A-codegen", "color": "f7e101", "default": false, "description": "Area: Code generation"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2021-05-28T03:03:22Z", "updated_at": "2021-12-09T21:58:50Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "In the following trivial example, LLVM fails to optimize the `unwrap()` away. While its somewhat contrived in the sense that a `match` or `if let` should be preferred, more complicated logic ends up with similar blocks eventually.\r\n\r\n```rust\r\npub fn print_if_some(arg: Result<u64, u32>) {\r\n    if arg.is_ok() {\r\n        let v = arg.unwrap();\r\n        if v == 42 {\r\n            println!(\"{}\", v);\r\n        }\r\n        return;\r\n    }\r\n}\r\n```\r\n\r\nGodbolt link for the same is https://godbolt.org/z/xrT1GfG7e you can see the `test` and `jne` for panic'ing.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/85771/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/85771/timeline", "performed_via_github_app": null, "state_reason": null}