{"url": "https://api.github.com/repos/rust-lang/rust/issues/54897", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/54897/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/54897/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/54897/events", "html_url": "https://github.com/rust-lang/rust/issues/54897", "id": 367560381, "node_id": "MDU6SXNzdWUzNjc1NjAzODE=", "number": 54897, "title": "'internal error: entered unreachable code', librustc_target/spec/mod.rs:1204:57", "user": {"login": "twirrim", "id": 59949, "node_id": "MDQ6VXNlcjU5OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/59949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twirrim", "html_url": "https://github.com/twirrim", "followers_url": "https://api.github.com/users/twirrim/followers", "following_url": "https://api.github.com/users/twirrim/following{/other_user}", "gists_url": "https://api.github.com/users/twirrim/gists{/gist_id}", "starred_url": "https://api.github.com/users/twirrim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twirrim/subscriptions", "organizations_url": "https://api.github.com/users/twirrim/orgs", "repos_url": "https://api.github.com/users/twirrim/repos", "events_url": "https://api.github.com/users/twirrim/events{/privacy}", "received_events_url": "https://api.github.com/users/twirrim/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 13242248, "node_id": "MDU6TGFiZWwxMzI0MjI0OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-metadata", "name": "A-metadata", "color": "f7e101", "default": false, "description": "Area: crate metadata"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 632453790, "node_id": "MDU6TGFiZWw2MzI0NTM3OTA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-target-specs", "name": "A-target-specs", "color": "f7e101", "default": false, "description": "Area: compile-target specifications"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1359848690, "node_id": "MDU6TGFiZWwxMzU5ODQ4Njkw", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-mcve", "name": "E-needs-mcve", "color": "02e10c", "default": false, "description": "Call for participation: This issue needs a Minimal Complete and Verifiable Example"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-07T14:36:18Z", "updated_at": "2020-03-10T11:23:50Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "This could be down to something with lolbench, but when compiling lolbench on Raspberry Pi3 running Ubuntu 18.04 armv7, I ran in to an issue compiling \"proc-macro-hack-impl\"\r\n\r\nI tried this code:\r\n\r\nGit clone'd lolbench.  This commit is at HEAD:\r\nhttps://github.com/anp/lolbench/tree/e9c210057229bb41eb19b335ff314b54155693c4\r\n\r\nran cargo test-core\r\n\r\nEventually it panics:\r\n```\r\nthread 'main' panicked at 'internal error: entered unreachable code', librustc_target/spec/mod.rs:1204:57\r\n```\r\n\r\nI tried starting a new cargo space and pulling in just proc-macro-hack-impl v0.4.1 and building that, but it builds fine at both normal and release variants.  I'm not sure what lolbench is doing to result in the failure.\r\n\r\nI expected to see this happen: lolbench do its thing.\r\n\r\nInstead, this happened:\r\n\r\n```\r\n   Compiling proc-macro-hack-impl v0.4.1\r\nthread 'main' panicked at 'internal error: entered unreachable code', librustc_target/spec/mod.rs:1204:57\r\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.29.0 (aa3ca1994 2018-09-11) running on armv7-unknown-linux-gnueabihf\r\n\r\nnote: compiler flags: -C prefer-dynamic -C opt-level=1 -C debuginfo=1 -C debug-assertions=on --crate-type proc-macro\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nerror: Could not compile `proc-macro-hack-impl`.\r\n```\r\n\r\n## Meta\r\n\r\n`rustc --version --verbose`:\r\n\r\n```\r\nrustc 1.29.0 (aa3ca1994 2018-09-11)\r\nbinary: rustc\r\ncommit-hash: aa3ca1994904f2e056679fce1f185db8c7ed2703\r\ncommit-date: 2018-09-11\r\nhost: armv7-unknown-linux-gnueabihf\r\nrelease: 1.29.0\r\nLLVM version: 7.0\r\n```\r\n\r\nBacktrace:\r\n```\r\nubuntu@ubuntu:~/lolbench$ RUST_BACKTRACE=1 cargo test-core -j 1\r\n   Compiling proc-macro-hack-impl v0.4.1\r\nthread 'main' panicked at 'internal error: entered unreachable code', librustc_target/spec/mod.rs:1204:57\r\nstack backtrace:\r\n   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace\r\n             at libstd/sys/unix/backtrace/tracing/gcc_s.rs:49\r\n   1: std::sys_common::backtrace::print\r\n             at libstd/sys_common/backtrace.rs:71\r\n             at libstd/sys_common/backtrace.rs:59\r\n   2: std::panicking::default_hook::{{closure}}\r\n             at libstd/panicking.rs:211\r\n   3: std::panicking::default_hook\r\n             at libstd/panicking.rs:227\r\n   4: rustc::util::common::panic_hook\r\n   5: std::panicking::rust_panic_with_hook\r\n             at libstd/panicking.rs:479\r\n   6: std::panicking::begin_panic\r\n   7: serialize::serialize::Decoder::read_enum\r\n   8: <rustc_metadata::schema::CrateRoot as serialize::serialize::Decodable>::decode::{{closure}}\r\n   9: rustc_metadata::decoder::<impl rustc_metadata::schema::Lazy<T>>::decode\r\n  10: rustc_metadata::decoder::<impl rustc_metadata::cstore::MetadataBlob>::get_root\r\n  11: rustc_metadata::locator::Context::extract_one\r\n  12: rustc_metadata::locator::Context::find_library_crate\r\n  13: rustc_metadata::locator::Context::maybe_load_library_crate\r\n  14: rustc_metadata::creader::CrateLoader::load\r\n  15: rustc_metadata::creader::CrateLoader::resolve_crate\r\n  16: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &'a mut F>::call_once\r\n  17: <alloc::vec::Vec<T> as alloc::vec::SpecExtend<T, I>>::from_iter\r\n  18: rustc_metadata::creader::CrateLoader::resolve_crate\r\n  19: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &'a mut F>::call_once\r\n  20: <alloc::vec::Vec<T> as alloc::vec::SpecExtend<T, I>>::from_iter\r\n  21: rustc_metadata::creader::CrateLoader::resolve_crate\r\n  22: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &'a mut F>::call_once\r\n  23: <alloc::vec::Vec<T> as alloc::vec::SpecExtend<T, I>>::from_iter\r\n  24: rustc_metadata::creader::CrateLoader::resolve_crate\r\n  25: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &'a mut F>::call_once\r\n  26: <alloc::vec::Vec<T> as alloc::vec::SpecExtend<T, I>>::from_iter\r\n  27: rustc_metadata::creader::CrateLoader::resolve_crate\r\n  28: <rustc_metadata::creader::CrateLoader<'a> as rustc::middle::cstore::CrateLoader>::process_extern_crate\r\n  29: rustc_resolve::build_reduced_graph::<impl rustc_resolve::Resolver<'a>>::build_reduced_graph_for_item\r\n  30: <rustc_resolve::build_reduced_graph::BuildReducedGraphVisitor<'a, 'b> as syntax::visit::Visitor<'a>>::visit_item\r\n  31: syntax::visit::walk_item\r\n  32: <rustc_resolve::build_reduced_graph::BuildReducedGraphVisitor<'a, 'b> as syntax::visit::Visitor<'a>>::visit_item\r\n  33: syntax::ext::expand::AstFragment::visit_with\r\n  34: rustc_resolve::macros::<impl syntax::ext::base::Resolver for rustc_resolve::Resolver<'a>>::visit_ast_fragment_with_placeholders\r\n  35: syntax::ext::expand::MacroExpander::collect_invocations\r\n  36: syntax::ext::expand::MacroExpander::expand_fragment\r\n  37: syntax::ext::expand::MacroExpander::expand_crate\r\n  38: rustc_driver::driver::phase_2_configure_and_expand_inner::{{closure}}\r\n  39: rustc::util::common::time\r\n  40: rustc_driver::driver::phase_2_configure_and_expand\r\n  41: rustc_driver::driver::compile_input\r\n  42: rustc_driver::run_compiler_with_pool\r\n  43: <scoped_tls::ScopedKey<T>>::set\r\n  44: <scoped_tls::ScopedKey<T>>::set\r\n  45: syntax::with_globals\r\n  46: <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once\r\n  47: __rust_maybe_catch_panic\r\n             at libpanic_unwind/lib.rs:105\r\n  48: rustc_driver::run\r\n  49: rustc_driver::main\r\n  50: std::rt::lang_start::{{closure}}\r\n  51: std::panicking::try::do_call\r\n             at libstd/rt.rs:59\r\n             at libstd/panicking.rs:310\r\n  52: __rust_maybe_catch_panic\r\n             at libpanic_unwind/lib.rs:105\r\n  53: std::rt::lang_start_internal\r\n             at libstd/panicking.rs:289\r\n             at libstd/panic.rs:392\r\n             at libstd/rt.rs:58\r\n  54: main\r\n  55: __libc_start_main\r\nquery stack during panic:\r\nend of query stack\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.29.0 (aa3ca1994 2018-09-11) running on armv7-unknown-linux-gnueabihf\r\n\r\nnote: compiler flags: -C prefer-dynamic -C opt-level=1 -C debuginfo=1 -C debug-assertions=on --crate-type proc-macro\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nerror: Could not compile `proc-macro-hack-impl`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/54897/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/54897/timeline", "performed_via_github_app": null, "state_reason": null}