{"url": "https://api.github.com/repos/rust-lang/rust/issues/97544", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/97544/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/97544/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/97544/events", "html_url": "https://github.com/rust-lang/rust/issues/97544", "id": 1252294054, "node_id": "I_kwDOAAsO6M5KpH2m", "number": 97544, "title": "Tracking Issue for `extern \"rust-cold\"` ABI (feature `rust_cold_cc`)", "user": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650846969, "node_id": "MDU6TGFiZWw2NTA4NDY5Njk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-tracking-issue", "name": "C-tracking-issue", "color": "f5f1fd", "default": false, "description": "Category: A tracking issue for an RFC or an unstable feature."}, {"id": 4288196623, "node_id": "LA_kwDOAAsO6M7_mLAP", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-abi", "name": "A-abi", "color": "f7e101", "default": false, "description": "Area: Concerning the \"application binary interface\" between functions."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-05-30T07:10:30Z", "updated_at": "2023-02-25T21:22:56Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "<!--\r\nNOTE: For library features, please use the \"Library Tracking Issue\" template instead.\r\n\r\nThank you for creating a tracking issue! \ud83d\udcdc Tracking issues are for tracking a\r\nfeature from implementation to stabilisation. Make sure to include the relevant\r\nRFC for the feature if it has one. Otherwise provide a short summary of the\r\nfeature and link any relevant PRs or issues, and remove any sections that are\r\nnot relevant to the feature.\r\n\r\nRemember to add team labels to the tracking issue.\r\nFor a language team feature, this would e.g., be `T-lang`.\r\nSuch a feature should also be labeled with e.g., `F-my_feature`.\r\nThis label is used to associate issues (e.g., bugs and design questions) to the feature.\r\n-->\r\n\r\nThis is a tracking issue for the experimental `extern \"rust-cold\"` ABI.\r\nThe feature gate for the issue is `#![feature(rust_cold_cc)]`.\r\n\r\nThis allows emitting functions with [`coldcc` in LLVM](https://llvm.org/docs/LangRef.html#calling-conventions) and [`CallConv::Cold` in cranelift](https://docs.rs/cranelift-codegen/latest/cranelift_codegen/isa/enum.CallConv.html#variant.Cold).  These are more aggressive than the stable `#[cold]`, as they can use a different calling convention (and thus have incompatible `fn`s), not just affect branch weights -- for example, they might require more/slower code in the callee in exchange for smaller call sites.\r\n\r\n### About tracking issues\r\n\r\nTracking issues are used to record the overall progress of implementation.\r\nThey are also used as hubs connecting to other relevant issues, e.g., bugs or open design questions.\r\nA tracking issue is however *not* meant for large scale discussion, questions, or bug reports about a feature.\r\nInstead, open a dedicated issue for the specific matter and add the relevant feature gate label.\r\n\r\n### Steps\r\n<!--\r\nInclude each step required to complete the feature. Typically this is a PR\r\nimplementing a feature, followed by a PR that stabilises the feature. However\r\nfor larger features an implementation could be broken up into multiple PRs.\r\n-->\r\n\r\n- [x] Implement #97512\r\n- [ ] Adjust documentation ([see instructions on rustc-dev-guide][doc-guide])\r\n- [ ] Stabilization PR ([see instructions on rustc-dev-guide][stabilization-guide])\r\n\r\n[stabilization-guide]: https://rustc-dev-guide.rust-lang.org/stabilization_guide.html#stabilization-pr\r\n[doc-guide]: https://rustc-dev-guide.rust-lang.org/stabilization_guide.html#documentation-prs\r\n\r\n### Unresolved Questions\r\n<!--\r\nInclude any open questions that need to be answered before the feature can be\r\nstabilised.\r\n-->\r\n\r\nXXX --- list all the \"unresolved questions\" found in the RFC to ensure they are\r\nnot forgotten\r\n\r\n### Implementation history\r\n\r\n<!--\r\nInclude a list of all the PRs that were involved in implementing the feature.\r\n-->\r\n- [x] #97512", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/97544/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 1}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/97544/timeline", "performed_via_github_app": null, "state_reason": null}