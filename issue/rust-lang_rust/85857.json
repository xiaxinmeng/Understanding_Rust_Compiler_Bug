{"url": "https://api.github.com/repos/rust-lang/rust/issues/85857", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/85857/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/85857/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/85857/events", "html_url": "https://github.com/rust-lang/rust/issues/85857", "id": 907515434, "node_id": "MDU6SXNzdWU5MDc1MTU0MzQ=", "number": 85857, "title": "`no_hash` queries bypass `-Z verify-ich` checks", "user": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 307747675, "node_id": "MDU6TGFiZWwzMDc3NDc2NzU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-incr-comp", "name": "A-incr-comp", "color": "f7e101", "default": false, "description": "Area: Incremental compilation"}, {"id": 2420759390, "node_id": "MDU6TGFiZWwyNDIwNzU5Mzkw", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-query-system", "name": "A-query-system", "color": "f7e101", "default": false, "description": "Area: The rustc query system (https://rustc-dev-guide.rust-lang.org/query.html)"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2021-05-31T14:21:56Z", "updated_at": "2021-06-05T22:42:50Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "[It was recently shown](https://blog.rust-lang.org/2021/05/10/Rust-1.52.1.html) that \"incremental compilation hash verification\" (i.e. `-Z verify-ich`) is an important tool for finding potentially dangerous bugs in query provider implementations. \r\n\r\nHowever, this verification of query result hashes naturally can only work if we actually compute hashes for the results of a given query. This is not the case for queries marked with the [`no_hash` attribute](https://rustc-dev-guide.rust-lang.org/queries/incremental-compilation-in-detail.html#query-modifiers). As a consequence, for such queries, an indeterministic query provider implementation cannot be detected by the measures we recently put in place.\r\n\r\nThere are two reasons for making a query `no_hash`:\r\n- Performance: hashing some query results is a waste of time because \r\n  1. it is highly unlikely that a re-computed query can turn green or \r\n  2. the result of the query is effectively hashed a second time via cheap \"projection queries\".\r\n- Necessity: The result of the query does not have a `HashStable` implementation and thus cannot be hashed.\r\n\r\nThere is also some good news here: if a query is marked as `eval_always` in addition to `no_hash` we don't have to worry about the kind of inconsistency bug that caused us to make the 1.52.1 point release because in that case there's always a single source of truth for the value of a query result. These also seem to be the kinds of queries that fall into the \"necessity\" category.\r\n\r\nHowever, there still might be queries that are `no_hash` but not `eval_always`. There's usual a good (performance-related) reason for marking them as such. The question is: how can we make them still be checked by `-Zverify-ich`?\r\n\r\n(@rust-lang/wg-incr-comp, @Aaron1011, or @cjgillot, please double check my thinking here, especially whether the combination of `eval_always` and `no_hash` is indeed safe)\r\n\r\ncc https://github.com/rust-lang/rust/issues/85783", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/85857/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/85857/timeline", "performed_via_github_app": null, "state_reason": null}