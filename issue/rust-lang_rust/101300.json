{"url": "https://api.github.com/repos/rust-lang/rust/issues/101300", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/101300/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/101300/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/101300/events", "html_url": "https://github.com/rust-lang/rust/issues/101300", "id": 1359576382, "node_id": "I_kwDOAAsO6M5RCX0-", "number": 101300, "title": "rustc emits calls to `__sync_` when using load/store with `+forced-atomics`", "user": {"login": "Lokathor", "id": 5456384, "node_id": "MDQ6VXNlcjU0NTYzODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5456384?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lokathor", "html_url": "https://github.com/Lokathor", "followers_url": "https://api.github.com/users/Lokathor/followers", "following_url": "https://api.github.com/users/Lokathor/following{/other_user}", "gists_url": "https://api.github.com/users/Lokathor/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lokathor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lokathor/subscriptions", "organizations_url": "https://api.github.com/users/Lokathor/orgs", "repos_url": "https://api.github.com/users/Lokathor/repos", "events_url": "https://api.github.com/users/Lokathor/events{/privacy}", "received_events_url": "https://api.github.com/users/Lokathor/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 4434017660, "node_id": "LA_kwDOAAsO6M8AAAABCEm9fA", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-atomic", "name": "A-atomic", "color": "f7e101", "default": false, "description": "Area: atomics, barriers, and sync primitives"}, {"id": 5223550385, "node_id": "LA_kwDOAAsO6M8AAAABN1kNsQ", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-target-feature", "name": "A-target-feature", "color": "f7e101", "default": false, "description": "Area: Enabling/disabling target features like AVX, Neon, etc."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2022-09-02T00:42:03Z", "updated_at": "2023-04-05T17:33:58Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I went to start a new branch for the `gba` crate and things were going well *until* LLVM demanded that I add a bunch of definitions for atomic intrinsics:\r\n\r\n```\r\n  = note: arm-none-eabi-ld: D:\\dev\\gba\\target\\thumbv4t-none-eabi\\debug\\deps\\libgba-e42d0bb0e1acbf2b.rlib(gba-e42d0bb0e1acbf2b.8ymripsqk83bpm.rcgu.o): in function `core::sync::atomic::atomic_store':\r\n          C:\\Users\\Daniel\\.rustup\\toolchains\\nightly-x86_64-pc-windows-msvc\\lib\\rustlib\\src\\rust\\library\\core\\src\\sync/atomic.rs:2948: undefined reference to `__sync_lock_test_and_set_4'\r\n          arm-none-eabi-ld: D:\\dev\\gba\\target\\thumbv4t-none-eabi\\debug\\examples\\hello-4b3a62c592de993e.5c84v82b0il7lif5.rcgu.o: in function `core::sync::atomic::atomic_store':\r\n          C:\\Users\\Daniel\\.rustup\\toolchains\\nightly-x86_64-pc-windows-msvc\\lib\\rustlib\\src\\rust\\library\\core\\src\\sync/atomic.rs:2948: undefined reference to `__sync_lock_test_and_set_2'\r\n          arm-none-eabi-ld: D:\\dev\\gba\\target\\thumbv4t-none-eabi\\debug\\examples\\hello-4b3a62c592de993e.5c84v82b0il7lif5.rcgu.o: in function `core::sync::atomic::atomic_load':\r\n          C:\\Users\\Daniel\\.rustup\\toolchains\\nightly-x86_64-pc-windows-msvc\\lib\\rustlib\\src\\rust\\library\\core\\src\\sync/atomic.rs:2963: undefined reference to `__sync_val_compare_and_swap_2'\r\n```\r\n\r\nThese are all part of LLVM's [sync](https://llvm.org/docs/Atomics.html#libcalls-sync) function set, and they are probably caused by the atomic accesses I'm using:\r\n\r\n* [lib.rs, u32 store](https://github.com/rust-console/gba/blob/v0.7.0-remake/src/lib.rs#L169)\r\n* [hello.rs, u16 store](https://github.com/rust-console/gba/blob/v0.7.0-remake/examples/hello.rs#L26)\r\n* [hello.rs, u16 load](https://github.com/rust-console/gba/blob/v0.7.0-remake/examples/hello.rs#L41)\r\n\r\nNow the GBA is using the ARMv4T architecture, which *does not have* atomic instructions at the CPU level, but the `+forced-atomic` feature was recently added to many target definitions for older targets. My _understanding_ of how this was supposed to work is that an aligned atomic load/store will just use the normal load/store instruction, and then the \"advanced\" atomic actions like fetch_add would call a function. However, it seems to be the cast that (using the `thumbv4t-none-eabi` target) LLVM still wants to call functions for plain load/store.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/101300/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/101300/timeline", "performed_via_github_app": null, "state_reason": null}