{"url": "https://api.github.com/repos/rust-lang/rust/issues/85589", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/85589/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/85589/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/85589/events", "html_url": "https://github.com/rust-lang/rust/issues/85589", "id": 898870354, "node_id": "MDU6SXNzdWU4OTg4NzAzNTQ=", "number": 85589, "title": "[PowerPC64] Rust performs improper function call linkage when using LLVM's linker", "user": {"login": "DrChat", "id": 2402369, "node_id": "MDQ6VXNlcjI0MDIzNjk=", "avatar_url": "https://avatars.githubusercontent.com/u/2402369?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DrChat", "html_url": "https://github.com/DrChat", "followers_url": "https://api.github.com/users/DrChat/followers", "following_url": "https://api.github.com/users/DrChat/following{/other_user}", "gists_url": "https://api.github.com/users/DrChat/gists{/gist_id}", "starred_url": "https://api.github.com/users/DrChat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DrChat/subscriptions", "organizations_url": "https://api.github.com/users/DrChat/orgs", "repos_url": "https://api.github.com/users/DrChat/repos", "events_url": "https://api.github.com/users/DrChat/events{/privacy}", "received_events_url": "https://api.github.com/users/DrChat/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37547, "node_id": "MDU6TGFiZWwzNzU0Nw==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-linkage", "name": "A-linkage", "color": "f7e101", "default": false, "description": "Area: linking into static, shared libraries and binaries"}, {"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 515028847, "node_id": "MDU6TGFiZWw1MTUwMjg4NDc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-PowerPC", "name": "O-PowerPC", "color": "6e6ec0", "default": false, "description": "Target: PowerPC processors"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-05-22T19:46:50Z", "updated_at": "2023-04-05T17:35:30Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "With this code:\r\n```\r\n#![feature(no_core, lang_items, rustc_attrs, repr_simd)]\r\n#![crate_type = \"bin\"]\r\n#![no_core]\r\n#![no_main]\r\n\r\n#[lang = \"sized\"]\r\ntrait Sized {}\r\n#[lang = \"copy\"]\r\ntrait Copy {}\r\n\r\n#[no_mangle]\r\npub fn my_rad_unmangled_function() {\r\n    loop {}\r\n}\r\n\r\npub fn my_rad_function() {\r\n    loop {}\r\n}\r\n\r\n#[no_mangle]\r\npub extern fn _start() {\r\n    my_rad_unmangled_function();\r\n    my_rad_function();\r\n}\r\n```\r\n\r\nAnd this compiler invocation:\r\n```\r\n$ rustc --version\r\nrustc 1.54.0-nightly (3e99439f4 2021-05-17)\r\n$ rustc --target=powerpc64-unknown-linux-gnu -C linker=lld -C relocation-model=static .\\min.rs\r\n```\r\n\r\nRust will emit code with the ELFv1 ABI, which dispatches function calls to a function descriptor table in the `.opd` section for later fixup by the linker.\r\n\r\nAs per [this LLVM thread](http://llvm.1065342.n5.nabble.com/llvm-dev-lld-11-0-0-ppc64-branch-to-fd-td136602.html), they mention lld does not support the ELFv1 ABI, and will not perform the necessary function call fixups.\r\nAs such, it appears that Rust somehow suffers from the same bug that clang suffered from, wherein it is not explicitly marking binaries as using the ELFv1 ABI, and LLVM is not detecting the ELFv1 ABI.\r\n\r\nThis causes Rust to output an invalid binary:\r\n\r\n```\r\n$ llvm-objdump -d .\\min\r\n\r\n.\\min:  file format ELF64-ppc64\r\n\r\n\r\nDisassembly of section .text:\r\n\r\n0000000010010000 .text:\r\n10010000: 48 00 00 04                   b .+4\r\n10010004: 48 00 00 00                   b .+0\r\n                ...\r\n10010014: 48 00 00 04                   b .+4\r\n10010018: 48 00 00 00                   b .+0\r\n                ...\r\n10010028: 7c 08 02 a6                   mflr 0\r\n1001002c: f8 01 00 10                   std 0, 16(1)\r\n10010030: f8 21 ff 91                   stdu 1, -112(1)\r\n10010034: 48 01 ff cd                   bl .+131020 # <----------------- branch to .opd!\r\n10010038: 60 00 00 00                   nop\r\n1001003c: 48 01 ff dd                   bl .+131036 # <----------------- branch to .opd!\r\n10010040: 60 00 00 00                   nop\r\n10010044: 38 21 00 70                   addi 1, 1, 112\r\n10010048: e8 01 00 10                   ld 0, 16(1)\r\n1001004c: 7c 08 03 a6                   mtlr 0\r\n10010050: 4e 80 00 20                   blr\r\n                ...\r\n```\r\n\r\n```\r\n$ llvm-nm .\\min\r\n0000000010028000 d .TOC.\r\n0000000010030018 d _ZN3min15my_rad_function17h0209550c6e3677ccE\r\n0000000010030030 D _start\r\n0000000010030000 D my_rad_unmangled_function\r\n```\r\n\r\nTesting reveals that linking with GNU's `powerpc64-linux-gnu-ld` linker yields a correct binary:\r\n```\r\n$ llvm-objdump -d .\\min                                                                                                        \r\n.\\min:  file format ELF64-ppc64\r\n\r\n\r\nDisassembly of section .text:\r\n\r\n0000000010000158 .text:\r\n10000158: 48 00 00 04                   b .+4\r\n1000015c: 48 00 00 00                   b .+0\r\n                ...\r\n1000016c: 48 00 00 04                   b .+4\r\n10000170: 48 00 00 00                   b .+0\r\n                ...\r\n10000180: 7c 08 02 a6                   mflr 0\r\n10000184: f8 01 00 10                   std 0, 16(1)\r\n10000188: f8 21 ff 91                   stdu 1, -112(1)\r\n1000018c: 4b ff ff cd                   bl .-52 # <--------------------- branches to code!\r\n10000190: 60 00 00 00                   nop\r\n10000194: 4b ff ff d9                   bl .-40 # <--------------------- branches to code!\r\n10000198: 60 00 00 00                   nop\r\n1000019c: 38 21 00 70                   addi 1, 1, 112\r\n100001a0: e8 01 00 10                   ld 0, 16(1)\r\n100001a4: 7c 08 03 a6                   mtlr 0\r\n100001a8: 4e 80 00 20                   blr\r\n                ...\r\n```\r\n```\r\n$ llvm-nm .\\min \r\n0000000010027f00 d .TOC.\r\n000000001001ffd0 d _ZN3min15my_rad_function17h0209550c6e3677ccE\r\n00000000100001b8 r __GNU_EH_FRAME_HDR\r\n0000000010020000 D __bss_start\r\n0000000010020000 D _edata\r\n0000000010020000 D _end\r\n000000001001ffe8 D _start\r\n000000001001ffb8 D my_rad_unmangled_function\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/85589/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/85589/timeline", "performed_via_github_app": null, "state_reason": null}