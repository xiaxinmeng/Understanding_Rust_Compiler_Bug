{"url": "https://api.github.com/repos/rust-lang/rust/issues/55731", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/55731/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/55731/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/55731/events", "html_url": "https://github.com/rust-lang/rust/issues/55731", "id": 378013220, "node_id": "MDU6SXNzdWUzNzgwMTMyMjA=", "number": 55731, "title": "ICE with HRTB and associated type: \"leak-check would have us replace ReErased with BrNamed\"", "user": {"login": "alecmocatta", "id": 1136246, "node_id": "MDQ6VXNlcjExMzYyNDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1136246?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alecmocatta", "html_url": "https://github.com/alecmocatta", "followers_url": "https://api.github.com/users/alecmocatta/followers", "following_url": "https://api.github.com/users/alecmocatta/following{/other_user}", "gists_url": "https://api.github.com/users/alecmocatta/gists{/gist_id}", "starred_url": "https://api.github.com/users/alecmocatta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alecmocatta/subscriptions", "organizations_url": "https://api.github.com/users/alecmocatta/orgs", "repos_url": "https://api.github.com/users/alecmocatta/repos", "events_url": "https://api.github.com/users/alecmocatta/events{/privacy}", "received_events_url": "https://api.github.com/users/alecmocatta/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 46741598, "node_id": "MDU6TGFiZWw0Njc0MTU5OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-test", "name": "E-needs-test", "color": "02e10c", "default": false, "description": "Call for participation: writing correctness tests"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-06T20:08:22Z", "updated_at": "2019-03-13T01:29:24Z", "closed_at": "2019-03-13T01:29:24Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Affects stable and nightly, with and without `#![feature(nll)]`.\r\n\r\n```rust\r\nuse std::marker::PhantomData;\r\n\r\ntrait DistributedIterator {\r\n    fn reduce(self)\r\n    where\r\n        Self: Sized,\r\n    {\r\n        unreachable!()\r\n    }\r\n}\r\n\r\ntrait DistributedIteratorMulti<Source> {\r\n    type Item;\r\n}\r\n\r\nstruct Connect<I>(PhantomData<fn(I)>);\r\nimpl<I: for<'a> DistributedIteratorMulti<&'a ()>> DistributedIterator for Connect<I> where {}\r\n\r\nstruct Cloned<Source>(PhantomData<fn(Source)>);\r\nimpl<'a, Source> DistributedIteratorMulti<&'a Source> for Cloned<&'a Source> {\r\n    type Item = ();\r\n}\r\n\r\nstruct Map<I, F> {\r\n    i: I,\r\n    f: F,\r\n}\r\nimpl<I: DistributedIteratorMulti<Source>, F, Source> DistributedIteratorMulti<Source> for Map<I, F>\r\nwhere\r\n    F: A<<I as DistributedIteratorMulti<Source>>::Item>,\r\n{\r\n    type Item = ();\r\n}\r\n\r\ntrait A<B> {}\r\n\r\nstruct X;\r\nimpl A<()> for X {}\r\n\r\nfn multi<I>(_reducer: I)\r\nwhere\r\n    I: for<'a> DistributedIteratorMulti<&'a ()>,\r\n{\r\n    DistributedIterator::reduce(Connect::<I>(PhantomData))\r\n}\r\n\r\nfn main() {\r\n    multi(Map {\r\n        i: Cloned(PhantomData),\r\n        f: X,\r\n    });\r\n}\r\n```\r\n\r\n([Playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2015&gist=9fca67335e0a15569ab03aa20809b245))\r\n\r\n```\r\nthread 'main' panicked at 'leak-check would have us replace ReErased with BrNamed(crate0:DefIndex(1:14), 'a)', librustc/infer/higher_ranked/mod.rs:507:21\r\nstack backtrace:\r\n   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace\r\n             at libstd/sys/unix/backtrace/tracing/gcc_s.rs:49\r\n   1: std::sys_common::backtrace::_print\r\n             at libstd/sys_common/backtrace.rs:71\r\n   2: std::panicking::default_hook::{{closure}}\r\n             at libstd/sys_common/backtrace.rs:59\r\n             at libstd/panicking.rs:211\r\n   3: std::panicking::default_hook\r\n             at libstd/panicking.rs:227\r\n   4: rustc::util::common::panic_hook\r\n   5: std::panicking::rust_panic_with_hook\r\n             at libstd/panicking.rs:480\r\n   6: std::panicking::continue_panic_fmt\r\n             at libstd/panicking.rs:390\r\n   7: std::panicking::begin_panic_fmt\r\n             at libstd/panicking.rs:345\r\n   8: rustc::infer::higher_ranked::<impl rustc::infer::InferCtxt<'a, 'gcx, 'tcx>>::plug_leaks::{{closure}}\r\n   9: rustc::ty::fold::TypeFolder::fold_ty\r\n  10: <smallvec::SmallVec<A> as core::iter::traits::FromIterator<<A as smallvec::Array>::Item>>::from_iter\r\n  11: rustc::ty::fold::TypeFoldable::fold_with\r\n  12: rustc::ty::fold::TypeFolder::fold_ty\r\n  13: <smallvec::SmallVec<A> as core::iter::traits::FromIterator<<A as smallvec::Array>::Item>>::from_iter\r\n  14: rustc::ty::fold::TypeFoldable::fold_with\r\n  15: rustc::ty::fold::TypeFoldable::fold_with\r\n  16: <core::iter::Map<I, F> as core::iter::iterator::Iterator>::fold\r\n  17: rustc::ty::fold::TypeFoldable::fold_with\r\n  18: rustc::infer::higher_ranked::<impl rustc::infer::InferCtxt<'a, 'gcx, 'tcx>>::plug_leaks\r\n  19: rustc::traits::select::SelectionContext::impl_or_trait_obligations\r\n  20: rustc::traits::select::SelectionContext::vtable_impl\r\n  21: rustc::infer::InferCtxt::in_snapshot\r\n  22: rustc::traits::select::SelectionContext::confirm_candidate\r\n  23: rustc::infer::InferCtxt::probe\r\n  24: rustc::traits::select::SelectionContext::evaluate_stack\r\n  25: rustc::dep_graph::graph::DepGraph::with_anon_task\r\n  26: rustc::traits::select::SelectionContext::evaluate_predicate_recursively\r\n  27: rustc::traits::select::SelectionContext::evaluate_obligation_recursively\r\n  28: rustc::ty::context::tls::with_related_context\r\n  29: rustc::infer::InferCtxtBuilder::enter_with_canonical\r\n  30: rustc_traits::evaluate_obligation::evaluate_obligation\r\n  31: rustc::ty::query::__query_compute::evaluate_obligation\r\n  32: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors<'tcx> for rustc::ty::query::queries::evaluate_obligation<'tcx>>::compute\r\n  33: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  34: rustc::ty::context::tls::with_related_context\r\n  35: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::force_query_with_job\r\n  36: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::get_query\r\n  37: rustc::traits::query::evaluate_obligation::<impl rustc::infer::InferCtxt<'cx, 'gcx, 'tcx>>::evaluate_obligation\r\n  38: rustc::traits::query::evaluate_obligation::<impl rustc::infer::InferCtxt<'cx, 'gcx, 'tcx>>::evaluate_obligation_no_overflow\r\n  39: <rustc_data_structures::obligation_forest::ObligationForest<O>>::process_obligations\r\n  40: <rustc::traits::fulfill::FulfillmentContext<'tcx> as rustc::traits::engine::TraitEngine<'tcx>>::select_where_possible\r\n  41: <rustc::traits::fulfill::FulfillmentContext<'tcx> as rustc::traits::engine::TraitEngine<'tcx>>::select_all_or_error\r\n  42: rustc::traits::codegen::<impl rustc::infer::InferCtxt<'a, 'gcx, 'tcx>>::drain_fulfillment_cx_or_panic\r\n  43: rustc::ty::context::tls::with_related_context\r\n  44: rustc::infer::InferCtxtBuilder::enter\r\n  45: rustc::traits::codegen::codegen_fulfill_obligation\r\n  46: rustc::ty::query::__query_compute::codegen_fulfill_obligation\r\n  47: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors<'tcx> for rustc::ty::query::queries::codegen_fulfill_obligation<'tcx>>::compute\r\n  48: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  49: rustc::ty::context::tls::with_related_context\r\n  50: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::force_query_with_job\r\n  51: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::get_query\r\n  52: rustc::ty::instance::Instance::resolve\r\n  53: rustc_mir::monomorphize::collector::visit_fn_use\r\n  54: <rustc_mir::monomorphize::collector::MirNeighborCollector<'a, 'tcx> as rustc::mir::visit::Visitor<'tcx>>::visit_terminator_kind\r\n  55: rustc_mir::monomorphize::collector::collect_items_rec\r\n  56: rustc_mir::monomorphize::collector::collect_items_rec\r\n  57: rustc_mir::monomorphize::collector::collect_crate_mono_items::{{closure}}\r\n  58: rustc::util::common::time\r\n  59: rustc_mir::monomorphize::collector::collect_crate_mono_items\r\n  60: rustc::util::common::time\r\n  61: rustc_mir::monomorphize::partitioning::collect_and_partition_mono_items\r\n  62: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors<'tcx> for rustc::ty::query::queries::collect_and_partition_mono_items<'tcx>>::compute\r\n  63: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  64: rustc::ty::context::tls::with_related_context\r\n  65: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::force_query_with_job\r\n  66: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::get_query\r\n  67: rustc_codegen_llvm::base::codegen_crate\r\n  68: <rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_utils::codegen_backend::CodegenBackend>::codegen_crate\r\n  69: rustc::util::common::time\r\n  70: rustc_driver::driver::phase_4_codegen\r\n  71: rustc_driver::driver::compile_input::{{closure}}\r\n  72: rustc::ty::context::tls::enter_context\r\n  73: <std::thread::local::LocalKey<T>>::with\r\n  74: rustc::ty::context::TyCtxt::create_and_enter\r\n  75: rustc_driver::driver::compile_input\r\n  76: rustc_driver::run_compiler_with_pool\r\n  77: rustc_driver::driver::spawn_thread_pool\r\n  78: rustc_driver::run_compiler\r\n  79: <scoped_tls::ScopedKey<T>>::set\r\n  80: syntax::with_globals\r\n  81: __rust_maybe_catch_panic\r\n             at libpanic_unwind/lib.rs:102\r\n  82: rustc_driver::run\r\n  83: rustc_driver::main\r\n  84: std::rt::lang_start::{{closure}}\r\n  85: std::panicking::try::do_call\r\n             at libstd/rt.rs:59\r\n             at libstd/panicking.rs:310\r\n  86: __rust_maybe_catch_panic\r\n             at libpanic_unwind/lib.rs:102\r\n  87: std::rt::lang_start_internal\r\n             at libstd/panicking.rs:289\r\n             at libstd/panic.rs:398\r\n             at libstd/rt.rs:58\r\n  88: main\r\n  89: __libc_start_main\r\n  90: <unknown>\r\nquery stack during panic:\r\n#0 [evaluate_obligation] evaluating trait selection obligation `for<'a> Map<Cloned<&()>, X>: DistributedIteratorMulti<&'a ()>`\r\n#1 [codegen_fulfill_obligation] checking if `DistributedIterator` fulfills its obligations\r\n#2 [collect_and_partition_mono_items] collect_and_partition_mono_items\r\nend of query stack\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: rustc 1.32.0-nightly (13dab66a6 2018-11-05) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C codegen-units=1 -C debuginfo=2 --crate-type bin\r\n```", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/55731/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/55731/timeline", "performed_via_github_app": null, "state_reason": "completed"}