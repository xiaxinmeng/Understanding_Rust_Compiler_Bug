{"url": "https://api.github.com/repos/rust-lang/rust/issues/59052", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/59052/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/59052/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/59052/events", "html_url": "https://github.com/rust-lang/rust/issues/59052", "id": 419118898, "node_id": "MDU6SXNzdWU0MTkxMTg4OTg=", "number": 59052, "title": "Improve multipart, multiline span suggestion cli output", "user": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 1183099971, "node_id": "MDU6TGFiZWwxMTgzMDk5OTcx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-suggestion-diagnostics", "name": "A-suggestion-diagnostics", "color": "f7e101", "default": false, "description": "Area: suggestions generated by the compiler applied by cargo fix"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-03-09T21:45:11Z", "updated_at": "2019-03-09T21:49:30Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "On multipart suggestions that affect multiple lines, we currently only show the code without any differentiator to the original code and hiding the content beyond 6 lines of fixed code. For example:\r\n\r\n```\r\nerror[E0618]: expected function, found `()`\r\n --> file.rs:2:12\r\n  |\r\n2 |    let _ = || {\r\n  |   ____________^\r\n  |  |____________|\r\n  | ||\r\n3 | ||\r\n4 | || println!(\"\");\r\n5 | ||\r\n... ||\r\n8 | ||\r\n9 | || }();\r\n  | ||_^_- call expression requires function\r\n  | |__|\r\n  |\r\nhelp: if you meant to create this closure and immediately call it, surround the closure with parenthesis\r\n  |\r\n2 | let _ = (|| {\r\n3 |\r\n4 | println!(\"\");\r\n5 |\r\n6 |\r\n7 |\r\n...\r\n```\r\n\r\nFor comparison, the output for the same error without spanning multiple lines is\r\n\r\n```\r\nerror[E0618]: expected function, found `()`\r\n --> file.rs:1:23\r\n  |\r\n1 | fn main() { let _ = ||{println!(\"\");}(); }\r\n  |                       ^^^^^^^^^^^^^^^--\r\n  |                       |\r\n  |                       call expression requires function\r\nhelp: if you meant to create this closure and immediately call it, surround the closure with parenthesis\r\n  |\r\n1 | fn main() { let _ = (||{println!(\"\");})(); }\r\n  |                     ^                 ^\r\n```\r\n\r\nI would like for two things to be changed:\r\n\r\n1) Use color to highlight the position of the changed code, using the same color that would be used for the underline in single line suggestions\r\n2) Intelligently choose which lines to show, so that if the multipart suggestion only changes the first and last lines, the code is shown as follows:\r\n\r\n```\r\nerror[E0618]: expected function, found `()`\r\n --> file.rs:2:12\r\n  |\r\n2 |    let _ = || {\r\n  |   ____________^\r\n  |  |____________|\r\n  | ||\r\n3 | ||\r\n4 | || println!(\"\");\r\n5 | ||\r\n... ||\r\n8 | ||\r\n9 | || }();\r\n  | ||_^_- call expression requires function\r\n  | |__|\r\n  |\r\nhelp: if you meant to create this closure and immediately call it, surround the closure with parenthesis\r\n  |\r\n2 | let _ = (|| {\r\n3 |\r\n...\r\n8 |\r\n9 | })();\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/59052/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/59052/timeline", "performed_via_github_app": null, "state_reason": null}