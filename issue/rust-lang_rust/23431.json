{"url": "https://api.github.com/repos/rust-lang/rust/issues/23431", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/23431/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/23431/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/23431/events", "html_url": "https://github.com/rust-lang/rust/issues/23431", "id": 62283221, "node_id": "MDU6SXNzdWU2MjI4MzIyMQ==", "number": 23431, "title": "Incorrectly generated code for struct alignments", "user": {"login": "AerialX", "id": 117295, "node_id": "MDQ6VXNlcjExNzI5NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/117295?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AerialX", "html_url": "https://github.com/AerialX", "followers_url": "https://api.github.com/users/AerialX/followers", "following_url": "https://api.github.com/users/AerialX/following{/other_user}", "gists_url": "https://api.github.com/users/AerialX/gists{/gist_id}", "starred_url": "https://api.github.com/users/AerialX/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AerialX/subscriptions", "organizations_url": "https://api.github.com/users/AerialX/orgs", "repos_url": "https://api.github.com/users/AerialX/repos", "events_url": "https://api.github.com/users/AerialX/events{/privacy}", "received_events_url": "https://api.github.com/users/AerialX/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234956, "node_id": "MDU6TGFiZWwyMzQ5NTY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-codegen", "name": "A-codegen", "color": "f7e101", "default": false, "description": "Area: Code generation"}], "state": "closed", "locked": false, "assignee": {"login": "dotdash", "id": 230962, "node_id": "MDQ6VXNlcjIzMDk2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/230962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotdash", "html_url": "https://github.com/dotdash", "followers_url": "https://api.github.com/users/dotdash/followers", "following_url": "https://api.github.com/users/dotdash/following{/other_user}", "gists_url": "https://api.github.com/users/dotdash/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotdash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotdash/subscriptions", "organizations_url": "https://api.github.com/users/dotdash/orgs", "repos_url": "https://api.github.com/users/dotdash/repos", "events_url": "https://api.github.com/users/dotdash/events{/privacy}", "received_events_url": "https://api.github.com/users/dotdash/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "dotdash", "id": 230962, "node_id": "MDQ6VXNlcjIzMDk2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/230962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotdash", "html_url": "https://github.com/dotdash", "followers_url": "https://api.github.com/users/dotdash/followers", "following_url": "https://api.github.com/users/dotdash/following{/other_user}", "gists_url": "https://api.github.com/users/dotdash/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotdash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotdash/subscriptions", "organizations_url": "https://api.github.com/users/dotdash/orgs", "repos_url": "https://api.github.com/users/dotdash/repos", "events_url": "https://api.github.com/users/dotdash/events{/privacy}", "received_events_url": "https://api.github.com/users/dotdash/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2015-03-17T04:21:58Z", "updated_at": "2015-04-18T21:30:04Z", "closed_at": "2015-04-18T21:30:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "The attached source produces code that misbehaves on some platforms that are picky about memory access alignment. The code should exit with code 2, but on both Emscripten-generated JavaScript and ARMv5, it finishes with exit code 1 to indicate that the `en` field is incorrectly tested as equal to `Enum::A`. Changing the `val` field to a `u32` type results in proper execution on these platforms. All optimization levels seem to cause it.\n\nLibraries that make use of structs with `u8` fields followed by enums seem particularly prone to this problem. It all works fine on platforms that allow unaligned memory access like x86, ARMv6, etc.\n\nExpected output: (x86, ARMv6)\n\n```\ntest: Test { val: 1, en: B }\ntestvalue: B\n```\n\nActual output: (ARMv5, Emscripten)\n\n```\ntest: Test { val: 0, en: A }\ntestvalue: A\n```\n\nNote that the same ARM binary runs on both ARMv5 and ARMv6 platforms, producing the different results.\n\nSee also: https://github.com/kripken/emscripten/issues/3261\n\n[Generated LLVM IR](http://pastie.org/private/mwu1gj5ipb8h3gzvfzaztq) (`println!()` and `derive(Debug)` removed)\n\n``` rust\n#![feature(start)]\n\n#[inline(never)]\nfn testvalue(e: Enum) -> isize {\n    println!(\"testvalue: {:?}\", e);\n    let mut ch = 0;\n    match &e {\n        &Enum::A => ch = 1,\n        &Enum::B => ch = 2,\n        &Enum::C(_) => (),\n    };\n    ch\n}\n\n#[inline(never)]\nfn clonetest(k: Test) -> Test {\n    k.clone()\n}\n\n#[inline(never)]\n#[start]\nfn main(_: isize, _: *const *const u8) -> isize {\n    let test = Test {\n        val: 1,\n        en: Enum::B,\n    };\n\n    let test = clonetest(test.clone());\n    println!(\"test: {:?}\", test);\n    testvalue(test.en)\n}\n\n#[derive(Debug, Copy, Clone)]\npub enum Enum {\n    A,\n    B,\n    C(u16)\n}\n\n#[derive(Debug, Copy, Clone)]\npub struct Test {\n    pub val: u8,\n    pub en: Enum,\n}\n```\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/23431/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/23431/timeline", "performed_via_github_app": null, "state_reason": "completed"}