{"url": "https://api.github.com/repos/rust-lang/rust/issues/104301", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/104301/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/104301/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/104301/events", "html_url": "https://github.com/rust-lang/rust/issues/104301", "id": 1445922093, "node_id": "I_kwDOAAsO6M5WLwUt", "number": 104301, "title": "ICE + other errors when trying to run `cargo test` on Arduino project, involving `vcell`", "user": {"login": "linclelinkpart5", "id": 844735, "node_id": "MDQ6VXNlcjg0NDczNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/844735?v=4", "gravatar_id": "", "url": "https://api.github.com/users/linclelinkpart5", "html_url": "https://github.com/linclelinkpart5", "followers_url": "https://api.github.com/users/linclelinkpart5/followers", "following_url": "https://api.github.com/users/linclelinkpart5/following{/other_user}", "gists_url": "https://api.github.com/users/linclelinkpart5/gists{/gist_id}", "starred_url": "https://api.github.com/users/linclelinkpart5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/linclelinkpart5/subscriptions", "organizations_url": "https://api.github.com/users/linclelinkpart5/orgs", "repos_url": "https://api.github.com/users/linclelinkpart5/repos", "events_url": "https://api.github.com/users/linclelinkpart5/events{/privacy}", "received_events_url": "https://api.github.com/users/linclelinkpart5/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1884641928, "node_id": "MDU6TGFiZWwxODg0NjQxOTI4", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-AVR", "name": "O-AVR", "color": "6e6ec0", "default": false, "description": "Target: AVR processors (ATtiny, ATmega, etc.)"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-11-11T19:28:21Z", "updated_at": "2023-02-05T12:48:13Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\nWeirdly enough, `cargo build` emits warnings, but completes successfully. This ICE only seems to occur with `cargo test`!\r\n\r\n### Code\r\n\r\n[Link to minimized repo](https://github.com/linclelinkpart5/ice-repro)\r\n[Permalink to personal repo, in case more full context is needed](https://github.com/linclelinkpart5/macetech-led-shades/tree/97ea80b87c66838c942a344f16d13549791881ba)\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.67.0-nightly (c1a859b25 2022-11-10)\r\nbinary: rustc\r\ncommit-hash: c1a859b25a95999ba276075bbd8e284ea675b41a\r\ncommit-date: 2022-11-10\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.67.0-nightly\r\nLLVM version: 15.0.4\r\n```\r\n\r\n### Error output\r\n\r\n<details><summary><strong>Output & Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nice-repro on \ue0a0 main is \ud83d\udce6 v0.1.0 via \ud83e\udd80 v1.67.0-nightly \r\n\u276f cargo test\r\n   Compiling nb v1.0.0\r\n   Compiling void v1.0.2\r\n   Compiling cfg-if v0.1.10\r\n   Compiling ufmt-write v0.1.0\r\n   Compiling vcell v0.1.3\r\n   Compiling cfg-if v1.0.0\r\n   Compiling panic-halt v0.2.0\r\n   Compiling bare-metal v0.2.5\r\nerror[E0152]: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `sized`.\r\n  |\r\n  = note: the lang item is first defined in crate `core` (which `vcell` depends on)\r\n  = note: first definition in `core` loaded from /home/mark/Projects/rust/ice-repro/target/avr-atmega328p/debug/deps/libcore-3cf297aae6df8ec5.rmeta\r\n  = note: second definition in `core` loaded from /home/mark/Projects/rust/ice-repro/target/avr-atmega328p/debug/deps/libcore-7aa04c1e2a6fa0ce.rmeta\r\n\r\nerror[E0152]: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `sized`.\r\n  |\r\n  = note: the lang item is first defined in crate `core` (which `ufmt_write` depends on)\r\n  = note: first definition in `core` loaded from /home/mark/Projects/rust/ice-repro/target/avr-atmega328p/debug/deps/libcore-3cf297aae6df8ec5.rmeta\r\n  = note: second definition in `core` loaded from /home/mark/Projects/rust/ice-repro/target/avr-atmega328p/debug/deps/libcore-7aa04c1e2a6fa0ce.rmeta\r\n\r\nthread '<unnamed>' panicked at 'failed to find message in primary or fallback fluent bundles', compiler/rustc_errors/src/translation.rs:78:9\r\nstack backtrace:\r\nerror[E0277]: the size for values of type `()` cannot be known at compilation time\r\n   --> /home/mark/.cargo/registry/src/github.com-1ecc6299db9ec823/ufmt-write-0.1.0/src/lib.rs:27:41\r\n    |\r\n27  |     fn write_str(&mut self, s: &str) -> Result<(), Self::Error>;\r\n    |                                         ^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time\r\n    |\r\n    = help: the trait `Sized` is not implemented for `()`\r\nnote: required by a bound in `Result`\r\n   --> /home/mark/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:504:17\r\n    |\r\n504 | pub enum Result<T, E> {\r\n    |                 ^ required by this bound in `Result`\r\n\r\n   0:     0x7ff06e3d7520 - std::backtrace_rs::backtrace::libunwind::trace::h1c0259b0e54a0ec7\r\n                               at /rustc/c1a859b25a95999ba276075bbd8e284ea675b41a/library/std/src/../../backtrace/src/backtrace/libunwind.rs:93:5\r\n   1:     0x7ff06e3d7520 - std::backtrace_rs::backtrace::trace_unsynchronized::hef156fa43f257fff\r\n                               at /rustc/c1a859b25a95999ba276075bbd8e284ea675b41a/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\r\n   2:     0x7ff06e3d7520 - std::sys_common::backtrace::_print_fmt::h14c30be4df8a453b\r\n                               at /rustc/c1a859b25a95999ba276075bbd8e284ea675b41a/library/std/src/sys_common/backtrace.rs:65:5\r\nerror[E0152]: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `sized`.\r\n  |\r\n  = note: the lang item is first defined in crate `core` (which `nb` depends on)\r\n  = note: first definition in `core` loaded from /home/mark/Projects/rust/ice-repro/target/avr-atmega328p/debug/deps/libcore-3cf297aae6df8ec5.rmeta\r\n  = note: second definition in `core` loaded from /home/mark/Projects/rust/ice-repro/target/avr-atmega328p/debug/deps/libcore-7aa04c1e2a6fa0ce.rmeta\r\n\r\n   3:     0x7ff06e3d7520 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::h6bc9ef49ac207d73\r\n                               at /rustc/c1a859b25a95999ba276075bbd8e284ea675b41a/library/std/src/sys_common/backtrace.rs:44:22\r\nerror[E0277]: the size for values of type `<Self as uWrite>::Error` cannot be known at compilation time\r\n   --> /home/mark/.cargo/registry/src/github.com-1ecc6299db9ec823/ufmt-write-0.1.0/src/lib.rs:27:41\r\n    |\r\n27  |     fn write_str(&mut self, s: &str) -> Result<(), Self::Error>;\r\n    |                                         ^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time\r\n    |\r\n    = help: the trait `Sized` is not implemented for `<Self as uWrite>::Error`\r\nnote: required by a bound in `Result`\r\n   --> /home/mark/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:504:20\r\n    |\r\n504 | pub enum Result<T, E> {\r\n    |                    ^ required by this bound in `Result`\r\nhelp: consider further restricting the associated type\r\n    |\r\n27  |     fn write_str(&mut self, s: &str) -> Result<(), Self::Error> where <Self as uWrite>::Error: Sized;\r\n    |                                                                 ++++++++++++++++++++++++++++++++++++\r\n\r\nerror[E0277]: the size for values of type `()` cannot be known at compilation time\r\n   --> /home/mark/.cargo/registry/src/github.com-1ecc6299db9ec823/ufmt-write-0.1.0/src/lib.rs:34:42\r\n    |\r\n34  |     fn write_char(&mut self, c: char) -> Result<(), Self::Error> {\r\n    |                                          ^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time\r\n    |\r\n    = help: the trait `Sized` is not implemented for `()`\r\nnote: required by a bound in `Result`\r\n   --> /home/mark/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:504:17\r\n    |\r\n504 | pub enum Result<T, E> {\r\n    |                 ^ required by this bound in `Result`\r\n\r\nerror[E0277]: the size for values of type `<Self as uWrite>::Error` cannot be known at compilation time\r\n   --> /home/mark/.cargo/registry/src/github.com-1ecc6299db9ec823/ufmt-write-0.1.0/src/lib.rs:34:42\r\n    |\r\n34  |     fn write_char(&mut self, c: char) -> Result<(), Self::Error> {\r\n    |                                          ^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time\r\n    |\r\n    = help: the trait `Sized` is not implemented for `<Self as uWrite>::Error`\r\nnote: required by a bound in `Result`\r\n   --> /home/mark/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:504:20\r\n    |\r\n504 | pub enum Result<T, E> {\r\n    |                    ^ required by this bound in `Result`\r\nhelp: consider further restricting the associated type\r\n    |\r\n34  |     fn write_char(&mut self, c: char) -> Result<(), Self::Error> where <Self as uWrite>::Error: Sized {\r\n    |                                                                  ++++++++++++++++++++++++++++++++++++\r\n\r\n   4:     0x7ff06e43963e - core::fmt::write::h670e2d8b480677bf\r\n                               at /rustc/c1a859b25a95999ba276075bbd8e284ea675b41a/library/core/src/fmt/mod.rs:1209:17\r\n   5:     0x7ff06e3c7795 - std::io::Write::write_fmt::h96cca416c9a25a8f\r\n                               at /rustc/c1a859b25a95999ba276075bbd8e284ea675b41a/library/std/src/io/mod.rs:1682:15\r\n   6:     0x7ff06e3d72e5 - std::sys_common::backtrace::_print::h209eac292799b1d3\r\n                               at /rustc/c1a859b25a95999ba276075bbd8e284ea675b41a/library/std/src/sys_common/backtrace.rs:47:5\r\n   7:     0x7ff06e3d72e5 - std::sys_common::backtrace::print::h02ded1b579fe176b\r\n                               at /rustc/c1a859b25a95999ba276075bbd8e284ea675b41a/library/std/src/sys_common/backtrace.rs:34:9\r\n   8:     0x7ff06e3da0bf - std::panicking::default_hook::{{closure}}::h8511971ca7cce5b1\r\n                               at /rustc/c1a859b25a95999ba276075bbd8e284ea675b41a/library/std/src/panicking.rs:267:22\r\n   9:     0x7ff06e3d9dfa - std::panicking::default_hook::h8bc8dfd96a84f923\r\n                               at /rustc/c1a859b25a95999ba276075bbd8e284ea675b41a/library/std/src/panicking.rs:286:9\r\n  10:     0x7ff06e3da8cc - std::panicking::rust_panic_with_hook::h9f2bfce9b4c1819d\r\n                               at /rustc/c1a859b25a95999ba276075bbd8e284ea675b41a/library/std/src/panicking.rs:688:13\r\n  11:     0x7ff06e3da667 - std::panicking::begin_panic_handler::{{closure}}::h167b5f05f9579bc1\r\n                               at /rustc/c1a859b25a95999ba276075bbd8e284ea675b41a/library/std/src/panicking.rs:579:13\r\n  12:     0x7ff06e3d79cc - std::sys_common::backtrace::__rust_end_short_backtrace::h99451dfb597ab6ac\r\n                               at /rustc/c1a859b25a95999ba276075bbd8e284ea675b41a/library/std/src/sys_common/backtrace.rs:137:18\r\n  13:     0x7ff06e3da382 - rust_begin_unwind\r\n                               at /rustc/c1a859b25a95999ba276075bbd8e284ea675b41a/library/std/src/panicking.rs:575:5\r\n  14:     0x7ff06e436023 - core::panicking::panic_fmt::hf9d641a075644e68\r\n                               at /rustc/c1a859b25a95999ba276075bbd8e284ea675b41a/library/core/src/panicking.rs:65:14\r\n  15:     0x7ff06e436171 - core::panicking::panic_display::h4d285fa2a7b26f2a\r\n                               at /rustc/c1a859b25a95999ba276075bbd8e284ea675b41a/library/core/src/panicking.rs:139:5\r\n  16:     0x7ff06e43611b - core::panicking::panic_str::h79efa26adb712718\r\n                               at /rustc/c1a859b25a95999ba276075bbd8e284ea675b41a/library/core/src/panicking.rs:123:5\r\n  17:     0x7ff06e435d96 - core::option::expect_failed::h8f4b55925d9edc3f\r\n                               at /rustc/c1a859b25a95999ba276075bbd8e284ea675b41a/library/core/src/option.rs:1879:5\r\nSome errors have detailed explanations: E0152, E0277.\r\nFor more information about an error, try `rustc --explain E0152`.\r\nerror[E0152]: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `sized`.\r\n  |\r\n  = note: the lang item is first defined in crate `core` (which `bare_metal` depends on)\r\n  = note: first definition in `core` loaded from /home/mark/Projects/rust/ice-repro/target/avr-atmega328p/debug/deps/libcore-3cf297aae6df8ec5.rmeta\r\n  = note: second definition in `core` loaded from /home/mark/Projects/rust/ice-repro/target/avr-atmega328p/debug/deps/libcore-7aa04c1e2a6fa0ce.rmeta\r\n\r\nerror: could not compile `ufmt-write` due to 5 previous errors\r\nwarning: build failed, waiting for other jobs to finish...\r\nerror[E0152]: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `sized`.\r\n  |\r\n  = note: the lang item is first defined in crate `core` (which `void` depends on)\r\n  = note: first definition in `core` loaded from /home/mark/Projects/rust/ice-repro/target/avr-atmega328p/debug/deps/libcore-3cf297aae6df8ec5.rmeta\r\n  = note: second definition in `core` loaded from /home/mark/Projects/rust/ice-repro/target/avr-atmega328p/debug/deps/libcore-7aa04c1e2a6fa0ce.rmeta\r\n\r\nerror[E0152]: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `sized`.\r\n  |\r\n  = note: the lang item is first defined in crate `core` (which `panic_halt` depends on)\r\n  = note: first definition in `core` loaded from /home/mark/Projects/rust/ice-repro/target/avr-atmega328p/debug/deps/libcore-3cf297aae6df8ec5.rmeta\r\n  = note: second definition in `core` loaded from /home/mark/Projects/rust/ice-repro/target/avr-atmega328p/debug/deps/libcore-7aa04c1e2a6fa0ce.rmeta\r\n\r\nerror[E0152]: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `sized`.\r\n  |\r\n  = note: the lang item is first defined in crate `core` (which `cfg_if` depends on)\r\n  = note: first definition in `core` loaded from /home/mark/Projects/rust/ice-repro/target/avr-atmega328p/debug/deps/libcore-3cf297aae6df8ec5.rmeta\r\n  = note: second definition in `core` loaded from /home/mark/Projects/rust/ice-repro/target/avr-atmega328p/debug/deps/libcore-7aa04c1e2a6fa0ce.rmeta\r\n\r\nerror[E0277]: the size for values of type `Error<E>` cannot be known at compilation time\r\n   --> /home/mark/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-1.0.0/src/lib.rs:198:10\r\n    |\r\n198 | #[derive(Clone, Copy, PartialEq, Eq, PartialOrd, Ord, Hash)]\r\n    |          ^^^^^ doesn't have a size known at compile-time\r\n    |\r\n    = help: the trait `Sized` is not implemented for `Error<E>`\r\nnote: required by a bound in `Clone`\r\n   --> /home/mark/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18\r\n    |\r\n110 | pub trait Clone: Sized {\r\n    |                  ^^^^^ required by this bound in `Clone`\r\n    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)\r\n\r\nerror: argument should be `&PanicInfo`\r\n  --> /home/mark/.cargo/registry/src/github.com-1ecc6299db9ec823/panic-halt-0.2.0/src/lib.rs:31:17\r\n   |\r\n31 | fn panic(_info: &PanicInfo) -> ! {\r\n   |                 ^^^^^^^^^^\r\n\r\nerror[E0277]: the size for values of type `Error<E>` cannot be known at compilation time\r\n   --> /home/mark/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-1.0.0/src/lib.rs:198:17\r\n    |\r\n198 | #[derive(Clone, Copy, PartialEq, Eq, PartialOrd, Ord, Hash)]\r\n    |                 ^^^^ doesn't have a size known at compile-time\r\n    |\r\n    = help: the trait `Sized` is not implemented for `Error<E>`\r\nnote: required by a bound in `core::marker::Copy`\r\n   --> /home/mark/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:389:17\r\n    |\r\n389 | pub trait Copy: Clone {\r\n    |                 ^^^^^ required by this bound in `core::marker::Copy`\r\n    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)\r\n\r\nFor more information about this error, try `rustc --explain E0152`.\r\nerror[E0277]: the size for values of type `E` cannot be known at compilation time\r\n   --> /home/mark/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-1.0.0/src/lib.rs:232:9\r\n    |\r\n232 | impl<E> From<E> for Error<E> {\r\n    |         ^^^^^^^ doesn't have a size known at compile-time\r\n    |\r\nnote: required by a bound in `From`\r\n   --> /home/mark/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:543:16\r\n    |\r\n543 | pub trait From<T>: Sized {\r\n    |                ^ required by this bound in `From`\r\nhelp: consider restricting type parameter `E`\r\n    |\r\n232 | impl<E: core::marker::Sized> From<E> for Error<E> {\r\n    |       +++++++++++++++++++++\r\n\r\nerror[E0277]: the size for values of type `Error<E>` cannot be known at compilation time\r\n   --> /home/mark/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-1.0.0/src/lib.rs:232:9\r\n    |\r\n232 | impl<E> From<E> for Error<E> {\r\n    |         ^^^^^^^ doesn't have a size known at compile-time\r\n    |\r\n    = help: the trait `Sized` is not implemented for `Error<E>`\r\nnote: required by a bound in `From`\r\n   --> /home/mark/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:543:20\r\n    |\r\n543 | pub trait From<T>: Sized {\r\n    |                    ^^^^^ required by this bound in `From`\r\n\r\nerror[E0277]: the size for values of type `core::cmp::Ordering` cannot be known at compilation time\r\n   --> /home/mark/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-1.0.0/src/lib.rs:198:38\r\n    |\r\n198 | #[derive(Clone, Copy, PartialEq, Eq, PartialOrd, Ord, Hash)]\r\n    |                                      ^^^^^^^^^^ doesn't have a size known at compile-time\r\n    |\r\n    = help: the trait `Sized` is not implemented for `core::cmp::Ordering`\r\nnote: required by a bound in `Option`\r\n   --> /home/mark/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17\r\n    |\r\n518 | pub enum Option<T> {\r\n    |                 ^ required by this bound in `Option`\r\n    = note: this error originates in the derive macro `PartialOrd` (in Nightly builds, run with -Z macro-backtrace for more info)\r\n\r\nerror[E0277]: the size for values of type `()` cannot be known at compilation time\r\n   --> /home/mark/.cargo/registry/src/github.com-1ecc6299db9ec823/bare-metal-0.2.5/src/lib.rs:10:10\r\n    |\r\n10  | #[derive(Debug)]\r\n    |          ^^^^^ doesn't have a size known at compile-time\r\n    |\r\n    = help: the trait `Sized` is not implemented for `()`\r\nnote: required by a bound in `Result`\r\n   --> /home/mark/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:504:17\r\n    |\r\n504 | pub enum Result<T, E> {\r\n    |                 ^ required by this bound in `Result`\r\n    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)\r\n\r\nerror[E0277]: the size for values of type `core::fmt::Error` cannot be known at compilation time\r\n   --> /home/mark/.cargo/registry/src/github.com-1ecc6299db9ec823/bare-metal-0.2.5/src/lib.rs:10:10\r\n    |\r\n10  | #[derive(Debug)]\r\n    |          ^^^^^ doesn't have a size known at compile-time\r\n    |\r\n    = help: the trait `Sized` is not implemented for `core::fmt::Error`\r\nnote: required by a bound in `Result`\r\n   --> /home/mark/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:504:20\r\n    |\r\n504 | pub enum Result<T, E> {\r\n    |                    ^ required by this bound in `Result`\r\n    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)\r\n\r\nerror[E0277]: the size for values of type `()` cannot be known at compilation time\r\n   --> /home/mark/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-1.0.0/src/lib.rs:210:46\r\n    |\r\n210 |     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\r\n    |                                              ^^^^^^^^^^^ doesn't have a size known at compile-time\r\n    |\r\n    = help: the trait `Sized` is not implemented for `()`\r\nnote: required by a bound in `core::result::Result`\r\n   --> /home/mark/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:504:17\r\n    |\r\n504 | pub enum Result<T, E> {\r\n    |                 ^ required by this bound in `core::result::Result`\r\n\r\nerror[E0277]: the size for values of type `core::fmt::Error` cannot be known at compilation time\r\n   --> /home/mark/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-1.0.0/src/lib.rs:210:46\r\n    |\r\n210 |     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\r\n    |                                              ^^^^^^^^^^^ doesn't have a size known at compile-time\r\n    |\r\n    = help: the trait `Sized` is not implemented for `core::fmt::Error`\r\nnote: required by a bound in `core::result::Result`\r\n   --> /home/mark/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:504:20\r\n    |\r\n504 | pub enum Result<T, E> {\r\n    |                    ^ required by this bound in `core::result::Result`\r\n\r\nerror[E0277]: the size for values of type `(E,)` cannot be known at compilation time\r\n   --> /home/mark/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-1.0.0/src/lib.rs:223:12\r\n    |\r\n223 |         F: FnOnce(E) -> T,\r\n    |            ^^^^^^^^^^^^^^ doesn't have a size known at compile-time\r\n    |\r\n    = help: the trait `Sized` is not implemented for `(E,)`\r\nnote: required by a bound in `FnOnce`\r\n   --> /home/mark/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/function.rs:502:18\r\n    |\r\n502 | pub trait FnOnce<Args: Tuple> {\r\n    |                  ^^^^ required by this bound in `FnOnce`\r\n\r\nerror: could not compile `cfg-if` due to previous error\r\nerror[E0277]: `(E,)` is not a tuple\r\n   --> /home/mark/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-1.0.0/src/lib.rs:223:12\r\n    |\r\n223 |         F: FnOnce(E) -> T,\r\n    |            ^^^^^^^^^^^^^^ the trait `Tuple` is not implemented for `(E,)`\r\n    |\r\nnote: required by a bound in `FnOnce`\r\n   --> /home/mark/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/function.rs:502:24\r\n    |\r\n502 | pub trait FnOnce<Args: Tuple> {\r\n    |                        ^^^^^ required by this bound in `FnOnce`\r\n\r\nerror: could not compile `panic-halt` due to 2 previous errors\r\n  18:     0x7ff070c0960e - <rustc_errors[a1ce8dcef9ff7a7d]::emitter::EmitterWriter as rustc_errors[a1ce8dcef9ff7a7d]::translation::Translate>::translate_message\r\n  19:     0x7ff070c09112 - <rustc_errors[a1ce8dcef9ff7a7d]::emitter::EmitterWriter>::msg_to_buffer\r\n  20:     0x7ff070c14276 - <rustc_errors[a1ce8dcef9ff7a7d]::emitter::EmitterWriter>::emit_message_default\r\n  21:     0x7ff070c008d3 - <rustc_errors[a1ce8dcef9ff7a7d]::emitter::EmitterWriter as rustc_errors[a1ce8dcef9ff7a7d]::emitter::Emitter>::emit_diagnostic\r\n  22:     0x7ff070bfe2c2 - <rustc_errors[a1ce8dcef9ff7a7d]::json::Diagnostic>::from_errors_diagnostic\r\n  23:     0x7ff070bfd86c - <rustc_errors[a1ce8dcef9ff7a7d]::json::JsonEmitter as rustc_errors[a1ce8dcef9ff7a7d]::emitter::Emitter>::emit_diagnostic\r\n  24:     0x7ff06f8a788a - <rustc_errors[a1ce8dcef9ff7a7d]::HandlerInner>::emit_diagnostic\r\n  25:     0x7ff0703bcf21 - <rustc_errors[a1ce8dcef9ff7a7d]::Handler>::emit_diagnostic\r\n  26:     0x7ff07037a34d - <rustc_errors[a1ce8dcef9ff7a7d]::ErrorGuaranteed as rustc_errors[a1ce8dcef9ff7a7d]::diagnostic_builder::EmissionGuarantee>::diagnostic_builder_emit_producing_guarantee\r\n  27:     0x7ff071ce26dc - <rustc_session[47f761f7ecc78e0d]::parse::ParseSess>::emit_err::<rustc_passes[1a3c8d413335c20c]::errors::DuplicateDiagnosticItemInCrate>\r\n  28:     0x7ff070a28156 - rustc_passes[1a3c8d413335c20c]::diagnostic_items::collect_item\r\n  29:     0x7ff070a2797d - rustc_passes[1a3c8d413335c20c]::diagnostic_items::all_diagnostic_items\r\n  30:     0x7ff070df4bbb - rustc_query_system[731acdfd61cbbb95]::query::plumbing::try_execute_query::<rustc_query_impl[5d8cc954b14a6b51]::plumbing::QueryCtxt, rustc_query_system[731acdfd61cbbb95]::query::caches::ArenaCache<(), rustc_hir[b8f1839d7a3a65f1]::diagnostic_items::DiagnosticItems>>\r\nerror: could not compile `nb` due to 10 previous errors\r\nerror: could not compile `bare-metal` due to 3 previous errors\r\n  31:     0x7ff070df48a7 - rustc_query_system[731acdfd61cbbb95]::query::plumbing::get_query::<rustc_query_impl[5d8cc954b14a6b51]::queries::all_diagnostic_items, rustc_query_impl[5d8cc954b14a6b51]::plumbing::QueryCtxt>\r\n  32:     0x7ff070133418 - <rustc_middle[ef15c0f09f0ff036]::ty::context::TyCtxt>::get_diagnostic_item\r\n  33:     0x7ff072164d7c - <rustc_infer[183205aa2824036]::infer::error_reporting::TypeErrCtxt as rustc_trait_selection[1a866c97ed6ff1a8]::traits::error_reporting::suggestions::TypeErrCtxtExt>::suggest_add_reference_to_arg\r\n  34:     0x7ff072177a80 - <rustc_infer[183205aa2824036]::infer::error_reporting::TypeErrCtxt as rustc_trait_selection[1a866c97ed6ff1a8]::traits::error_reporting::TypeErrCtxtExt>::report_selection_error\r\n  35:     0x7ff072180568 - <rustc_infer[183205aa2824036]::infer::error_reporting::TypeErrCtxt as rustc_trait_selection[1a866c97ed6ff1a8]::traits::error_reporting::InferCtxtPrivExt>::report_fulfillment_error\r\n  36:     0x7ff07217485f - <rustc_infer[183205aa2824036]::infer::error_reporting::TypeErrCtxt as rustc_trait_selection[1a866c97ed6ff1a8]::traits::error_reporting::TypeErrCtxtExt>::report_fulfillment_errors\r\n  37:     0x7ff06f851ef3 - <rustc_hir_typeck[6da16006badde0e1]::fn_ctxt::FnCtxt>::check_argument_types\r\n  38:     0x7ff06f81d989 - <rustc_hir_typeck[6da16006badde0e1]::fn_ctxt::FnCtxt>::check_call\r\n  39:     0x7ff06fed1f39 - <rustc_hir_typeck[6da16006badde0e1]::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n  40:     0x7ff06ff4b180 - <rustc_hir_typeck[6da16006badde0e1]::fn_ctxt::FnCtxt>::check_expr_struct_fields\r\n  41:     0x7ff06fed4f36 - <rustc_hir_typeck[6da16006badde0e1]::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n  42:     0x7ff06ff143dc - <rustc_hir_typeck[6da16006badde0e1]::fn_ctxt::FnCtxt>::check_block_with_expected\r\n  43:     0x7ff06fed246a - <rustc_hir_typeck[6da16006badde0e1]::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n  44:     0x7ff06fd0ff86 - <rustc_hir_typeck[6da16006badde0e1]::fn_ctxt::FnCtxt>::check_return_expr\r\n  45:     0x7ff06fd07f4c - rustc_hir_typeck[6da16006badde0e1]::check::check_fn\r\n  46:     0x7ff06fcf3cdb - <rustc_hir_typeck[6da16006badde0e1]::inherited::InheritedBuilder>::enter::<rustc_hir_typeck[6da16006badde0e1]::typeck_with_fallback<rustc_hir_typeck[6da16006badde0e1]::typeck::{closure#0}>::{closure#0}::{closure#1}, &rustc_middle[ef15c0f09f0ff036]::ty::context::TypeckResults>\r\n  47:     0x7ff06fce69dd - rustc_hir_typeck[6da16006badde0e1]::typeck\r\n  48:     0x7ff06fce4bef - rustc_query_system[731acdfd61cbbb95]::query::plumbing::try_execute_query::<rustc_query_impl[5d8cc954b14a6b51]::plumbing::QueryCtxt, rustc_query_system[731acdfd61cbbb95]::query::caches::DefaultCache<rustc_span[2c66fb4e929445ca]::def_id::LocalDefId, &rustc_middle[ef15c0f09f0ff036]::ty::context::TypeckResults>>\r\n  49:     0x7ff070d79008 - rustc_data_structures[fcbea81f06a7da6b]::sync::par_for_each_in::<&[rustc_span[2c66fb4e929445ca]::def_id::LocalDefId], <rustc_middle[ef15c0f09f0ff036]::hir::map::Map>::par_body_owners<rustc_hir_typeck[6da16006badde0e1]::typeck_item_bodies::{closure#0}>::{closure#0}>\r\n  50:     0x7ff070d78ce3 - rustc_hir_typeck[6da16006badde0e1]::typeck_item_bodies\r\n  51:     0x7ff070c6f64a - rustc_query_system[731acdfd61cbbb95]::query::plumbing::try_execute_query::<rustc_query_impl[5d8cc954b14a6b51]::plumbing::QueryCtxt, rustc_query_system[731acdfd61cbbb95]::query::caches::DefaultCache<(), ()>>\r\n  52:     0x7ff070c6f347 - rustc_query_system[731acdfd61cbbb95]::query::plumbing::get_query::<rustc_query_impl[5d8cc954b14a6b51]::queries::typeck_item_bodies, rustc_query_impl[5d8cc954b14a6b51]::plumbing::QueryCtxt>\r\n  53:     0x7ff06fa38b0a - <rustc_session[47f761f7ecc78e0d]::session::Session>::time::<(), rustc_hir_analysis[7cbe4a3e57699ef0]::check_crate::{closure#7}>\r\n  54:     0x7ff06fa3824b - rustc_hir_analysis[7cbe4a3e57699ef0]::check_crate\r\n  55:     0x7ff06fa37e7b - rustc_interface[d2b1e7858cec3daa]::passes::analysis\r\n  56:     0x7ff070dd11e4 - rustc_query_system[731acdfd61cbbb95]::query::plumbing::try_execute_query::<rustc_query_impl[5d8cc954b14a6b51]::plumbing::QueryCtxt, rustc_query_system[731acdfd61cbbb95]::query::caches::DefaultCache<(), core[4e899ad432e99573]::result::Result<(), rustc_errors[a1ce8dcef9ff7a7d]::ErrorGuaranteed>>>\r\n  57:     0x7ff070dd0ee7 - rustc_query_system[731acdfd61cbbb95]::query::plumbing::get_query::<rustc_query_impl[5d8cc954b14a6b51]::queries::analysis, rustc_query_impl[5d8cc954b14a6b51]::plumbing::QueryCtxt>\r\n  58:     0x7ff070880b8e - <rustc_interface[d2b1e7858cec3daa]::passes::QueryContext>::enter::<rustc_driver[766838ccb0cc5547]::run_compiler::{closure#1}::{closure#2}::{closure#3}, core[4e899ad432e99573]::result::Result<(), rustc_errors[a1ce8dcef9ff7a7d]::ErrorGuaranteed>>\r\n  59:     0x7ff07087dc5f - <rustc_interface[d2b1e7858cec3daa]::interface::Compiler>::enter::<rustc_driver[766838ccb0cc5547]::run_compiler::{closure#1}::{closure#2}, core[4e899ad432e99573]::result::Result<core[4e899ad432e99573]::option::Option<rustc_interface[d2b1e7858cec3daa]::queries::Linker>, rustc_errors[a1ce8dcef9ff7a7d]::ErrorGuaranteed>>\r\n  60:     0x7ff070878c92 - rustc_span[2c66fb4e929445ca]::with_source_map::<core[4e899ad432e99573]::result::Result<(), rustc_errors[a1ce8dcef9ff7a7d]::ErrorGuaranteed>, rustc_interface[d2b1e7858cec3daa]::interface::run_compiler<core[4e899ad432e99573]::result::Result<(), rustc_errors[a1ce8dcef9ff7a7d]::ErrorGuaranteed>, rustc_driver[766838ccb0cc5547]::run_compiler::{closure#1}>::{closure#0}::{closure#1}>\r\n  61:     0x7ff07087876c - <scoped_tls[a162aae2f2befadc]::ScopedKey<rustc_span[2c66fb4e929445ca]::SessionGlobals>>::set::<rustc_interface[d2b1e7858cec3daa]::interface::run_compiler<core[4e899ad432e99573]::result::Result<(), rustc_errors[a1ce8dcef9ff7a7d]::ErrorGuaranteed>, rustc_driver[766838ccb0cc5547]::run_compiler::{closure#1}>::{closure#0}, core[4e899ad432e99573]::result::Result<(), rustc_errors[a1ce8dcef9ff7a7d]::ErrorGuaranteed>>\r\n  62:     0x7ff070877d58 - std[60fbac34357a1008]::sys_common::backtrace::__rust_begin_short_backtrace::<rustc_interface[d2b1e7858cec3daa]::util::run_in_thread_pool_with_globals<rustc_interface[d2b1e7858cec3daa]::interface::run_compiler<core[4e899ad432e99573]::result::Result<(), rustc_errors[a1ce8dcef9ff7a7d]::ErrorGuaranteed>, rustc_driver[766838ccb0cc5547]::run_compiler::{closure#1}>::{closure#0}, core[4e899ad432e99573]::result::Result<(), rustc_errors[a1ce8dcef9ff7a7d]::ErrorGuaranteed>>::{closure#0}::{closure#0}, core[4e899ad432e99573]::result::Result<(), rustc_errors[a1ce8dcef9ff7a7d]::ErrorGuaranteed>>\r\n  63:     0x7ff070877a7c - <<std[60fbac34357a1008]::thread::Builder>::spawn_unchecked_<rustc_interface[d2b1e7858cec3daa]::util::run_in_thread_pool_with_globals<rustc_interface[d2b1e7858cec3daa]::interface::run_compiler<core[4e899ad432e99573]::result::Result<(), rustc_errors[a1ce8dcef9ff7a7d]::ErrorGuaranteed>, rustc_driver[766838ccb0cc5547]::run_compiler::{closure#1}>::{closure#0}, core[4e899ad432e99573]::result::Result<(), rustc_errors[a1ce8dcef9ff7a7d]::ErrorGuaranteed>>::{closure#0}::{closure#0}, core[4e899ad432e99573]::result::Result<(), rustc_errors[a1ce8dcef9ff7a7d]::ErrorGuaranteed>>::{closure#1} as core[4e899ad432e99573]::ops::function::FnOnce<()>>::call_once::{shim:vtable#0}\r\nerror[E0277]: the size for values of type `Void` cannot be known at compilation time\r\n   --> /home/mark/.cargo/registry/src/github.com-1ecc6299db9ec823/void-1.0.2/src/lib.rs:28:10\r\n    |\r\n28  | #[derive(Copy)]\r\n    |          ^^^^ doesn't have a size known at compile-time\r\n    |\r\n    = help: the trait `Sized` is not implemented for `Void`\r\nnote: required by a bound in `core::marker::Copy`\r\n   --> /home/mark/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:389:17\r\n    |\r\n389 | pub trait Copy: Clone {\r\n    |                 ^^^^^ required by this bound in `core::marker::Copy`\r\n    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)\r\n\r\nerror[E0277]: the size for values of type `Void` cannot be known at compilation time\r\n   --> /home/mark/.cargo/registry/src/github.com-1ecc6299db9ec823/void-1.0.2/src/lib.rs:31:6\r\n    |\r\n31  | impl Clone for Void {\r\n    |      ^^^^^ doesn't have a size known at compile-time\r\n    |\r\n    = help: the trait `Sized` is not implemented for `Void`\r\nnote: required by a bound in `Clone`\r\n   --> /home/mark/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18\r\n    |\r\n110 | pub trait Clone: Sized {\r\n    |                  ^^^^^ required by this bound in `Clone`\r\n\r\nerror[E0277]: the size for values of type `Result<T, Void>` cannot be known at compilation time\r\n  --> /home/mark/.cargo/registry/src/github.com-1ecc6299db9ec823/void-1.0.2/src/lib.rs:90:9\r\n   |\r\n90 | impl<T> ResultVoidExt<T> for Result<T, Void> {\r\n   |         ^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time\r\n   |\r\n   = help: the trait `Sized` is not implemented for `Result<T, Void>`\r\nnote: required by a bound in `ResultVoidExt`\r\n  --> /home/mark/.cargo/registry/src/github.com-1ecc6299db9ec823/void-1.0.2/src/lib.rs:85:29\r\n   |\r\n85 | pub trait ResultVoidExt<T>: Sized {\r\n   |                             ^^^^^ required by this bound in `ResultVoidExt`\r\n\r\nerror[E0277]: the size for values of type `T` cannot be known at compilation time\r\n   --> /home/mark/.cargo/registry/src/github.com-1ecc6299db9ec823/void-1.0.2/src/lib.rs:90:30\r\n    |\r\n90  | impl<T> ResultVoidExt<T> for Result<T, Void> {\r\n    |                              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time\r\n    |\r\nnote: required by a bound in `Result`\r\n   --> /home/mark/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:504:17\r\n    |\r\n504 | pub enum Result<T, E> {\r\n    |                 ^ required by this bound in `Result`\r\nhelp: consider restricting type parameter `T`\r\n    |\r\n90  | impl<T: core::marker::Sized> ResultVoidExt<T> for Result<T, Void> {\r\n    |       +++++++++++++++++++++\r\n\r\nerror[E0277]: the size for values of type `Void` cannot be known at compilation time\r\n   --> /home/mark/.cargo/registry/src/github.com-1ecc6299db9ec823/void-1.0.2/src/lib.rs:90:30\r\n    |\r\n90  | impl<T> ResultVoidExt<T> for Result<T, Void> {\r\n    |                              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time\r\n    |\r\n    = help: the trait `Sized` is not implemented for `Void`\r\nnote: required by a bound in `Result`\r\n   --> /home/mark/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:504:20\r\n    |\r\n504 | pub enum Result<T, E> {\r\n    |                    ^ required by this bound in `Result`\r\n\r\nerror: could not compile `cfg-if` due to previous error\r\nerror[E0277]: the size for values of type `Result<Void, E>` cannot be known at compilation time\r\n   --> /home/mark/.cargo/registry/src/github.com-1ecc6299db9ec823/void-1.0.2/src/lib.rs:109:9\r\n    |\r\n109 | impl<E> ResultVoidErrExt<E> for Result<Void, E> {\r\n    |         ^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time\r\n    |\r\n    = help: the trait `Sized` is not implemented for `Result<Void, E>`\r\nnote: required by a bound in `ResultVoidErrExt`\r\n   --> /home/mark/.cargo/registry/src/github.com-1ecc6299db9ec823/void-1.0.2/src/lib.rs:104:32\r\n    |\r\n104 | pub trait ResultVoidErrExt<E>: Sized {\r\n    |                                ^^^^^ required by this bound in `ResultVoidErrExt`\r\n\r\nerror[E0277]: the size for values of type `Void` cannot be known at compilation time\r\n   --> /home/mark/.cargo/registry/src/github.com-1ecc6299db9ec823/void-1.0.2/src/lib.rs:109:33\r\n    |\r\n109 | impl<E> ResultVoidErrExt<E> for Result<Void, E> {\r\n    |                                 ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time\r\n    |\r\n    = help: the trait `Sized` is not implemented for `Void`\r\nnote: required by a bound in `Result`\r\n   --> /home/mark/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:504:17\r\n    |\r\n504 | pub enum Result<T, E> {\r\n    |                 ^ required by this bound in `Result`\r\n\r\n  64:     0x7ff072309563 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::h9c5bc954debcee72\r\n                               at /rustc/c1a859b25a95999ba276075bbd8e284ea675b41a/library/alloc/src/boxed.rs:2000:9\r\n  65:     0x7ff072309563 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::he1973107145a5c1d\r\n                               at /rustc/c1a859b25a95999ba276075bbd8e284ea675b41a/library/alloc/src/boxed.rs:2000:9\r\n  66:     0x7ff072309563 - std::sys::unix::thread::Thread::new::thread_start::h3f40abd87f665b17\r\n                               at /rustc/c1a859b25a95999ba276075bbd8e284ea675b41a/library/std/src/sys/unix/thread.rs:108:17\r\nerror[E0277]: the size for values of type `E` cannot be known at compilation time\r\n   --> /home/mark/.cargo/registry/src/github.com-1ecc6299db9ec823/void-1.0.2/src/lib.rs:109:33\r\n    |\r\n109 | impl<E> ResultVoidErrExt<E> for Result<Void, E> {\r\n    |                                 ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time\r\n    |\r\nnote: required by a bound in `Result`\r\n   --> /home/mark/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:504:20\r\n    |\r\n504 | pub enum Result<T, E> {\r\n    |                    ^ required by this bound in `Result`\r\nhelp: consider restricting type parameter `E`\r\n    |\r\n109 | impl<E: core::marker::Sized> ResultVoidErrExt<E> for Result<Void, E> {\r\n    |       +++++++++++++++++++++\r\n\r\nerror[E0277]: the size for values of type `()` cannot be known at compilation time\r\n   --> /home/mark/.cargo/registry/src/github.com-1ecc6299db9ec823/void-1.0.2/src/lib.rs:38:46\r\n    |\r\n38  |     fn fmt(&self, _: &mut fmt::Formatter) -> fmt::Result {\r\n    |                                              ^^^^^^^^^^^ doesn't have a size known at compile-time\r\n    |\r\n    = help: the trait `Sized` is not implemented for `()`\r\nnote: required by a bound in `Result`\r\n   --> /home/mark/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:504:17\r\n    |\r\n504 | pub enum Result<T, E> {\r\n    |                 ^ required by this bound in `Result`\r\n\r\nerror[E0277]: the size for values of type `core::fmt::Error` cannot be known at compilation time\r\n   --> /home/mark/.cargo/registry/src/github.com-1ecc6299db9ec823/void-1.0.2/src/lib.rs:38:46\r\n    |\r\n38  |     fn fmt(&self, _: &mut fmt::Formatter) -> fmt::Result {\r\n    |                                              ^^^^^^^^^^^ doesn't have a size known at compile-time\r\n    |\r\n    = help: the trait `Sized` is not implemented for `core::fmt::Error`\r\nnote: required by a bound in `Result`\r\n   --> /home/mark/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:504:20\r\n    |\r\n504 | pub enum Result<T, E> {\r\n    |                    ^ required by this bound in `Result`\r\n\r\nerror[E0277]: the size for values of type `()` cannot be known at compilation time\r\n   --> /home/mark/.cargo/registry/src/github.com-1ecc6299db9ec823/void-1.0.2/src/lib.rs:44:46\r\n    |\r\n44  |     fn fmt(&self, _: &mut fmt::Formatter) -> fmt::Result {\r\n    |                                              ^^^^^^^^^^^ doesn't have a size known at compile-time\r\n    |\r\n    = help: the trait `Sized` is not implemented for `()`\r\nnote: required by a bound in `Result`\r\n   --> /home/mark/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:504:17\r\n    |\r\n504 | pub enum Result<T, E> {\r\n    |                 ^ required by this bound in `Result`\r\n\r\nerror[E0277]: the size for values of type `core::fmt::Error` cannot be known at compilation time\r\n   --> /home/mark/.cargo/registry/src/github.com-1ecc6299db9ec823/void-1.0.2/src/lib.rs:44:46\r\n    |\r\n44  |     fn fmt(&self, _: &mut fmt::Formatter) -> fmt::Result {\r\n    |                                              ^^^^^^^^^^^ doesn't have a size known at compile-time\r\n    |\r\n    = help: the trait `Sized` is not implemented for `core::fmt::Error`\r\nnote: required by a bound in `Result`\r\n   --> /home/mark/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:504:20\r\n    |\r\n504 | pub enum Result<T, E> {\r\n    |                    ^ required by this bound in `Result`\r\n\r\nerror[E0277]: the size for values of type `core::cmp::Ordering` cannot be known at compilation time\r\n   --> /home/mark/.cargo/registry/src/github.com-1ecc6299db9ec823/void-1.0.2/src/lib.rs:56:37\r\n    |\r\n56  |     fn partial_cmp(&self, _: &T) -> Option<cmp::Ordering> {\r\n    |                                     ^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time\r\n    |\r\n    = help: the trait `Sized` is not implemented for `core::cmp::Ordering`\r\nnote: required by a bound in `Option`\r\n   --> /home/mark/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17\r\n    |\r\n518 | pub enum Option<T> {\r\n    |                 ^ required by this bound in `Option`\r\n\r\nerror[E0277]: the size for values of type `T` cannot be known at compilation time\r\n   --> /home/mark/.cargo/registry/src/github.com-1ecc6299db9ec823/void-1.0.2/src/lib.rs:95:20\r\n    |\r\n95  |     fn void_unwrap(self) -> T {\r\n    |                    ^^^^ doesn't have a size known at compile-time\r\n    |\r\nnote: required by a bound in `Result`\r\n   --> /home/mark/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:504:17\r\n    |\r\n504 | pub enum Result<T, E> {\r\n    |                 ^ required by this bound in `Result`\r\nhelp: consider restricting type parameter `T`\r\n    |\r\n90  | impl<T: core::marker::Sized> ResultVoidExt<T> for Result<T, Void> {\r\n    |       +++++++++++++++++++++\r\n\r\nerror[E0277]: the size for values of type `Void` cannot be known at compilation time\r\n   --> /home/mark/.cargo/registry/src/github.com-1ecc6299db9ec823/void-1.0.2/src/lib.rs:95:20\r\n    |\r\n95  |     fn void_unwrap(self) -> T {\r\n    |                    ^^^^ doesn't have a size known at compile-time\r\n    |\r\n    = help: the trait `Sized` is not implemented for `Void`\r\nnote: required by a bound in `Result`\r\n   --> /home/mark/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:504:20\r\n    |\r\n504 | pub enum Result<T, E> {\r\n    |                    ^ required by this bound in `Result`\r\n\r\nerror[E0277]: the size for values of type `Void` cannot be known at compilation time\r\n   --> /home/mark/.cargo/registry/src/github.com-1ecc6299db9ec823/void-1.0.2/src/lib.rs:114:24\r\n    |\r\n114 |     fn void_unwrap_err(self) -> E {\r\n    |                        ^^^^ doesn't have a size known at compile-time\r\n    |\r\n    = help: the trait `Sized` is not implemented for `Void`\r\nnote: required by a bound in `Result`\r\n   --> /home/mark/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:504:17\r\n    |\r\n504 | pub enum Result<T, E> {\r\n    |                 ^ required by this bound in `Result`\r\n\r\nerror[E0277]: the size for values of type `E` cannot be known at compilation time\r\n   --> /home/mark/.cargo/registry/src/github.com-1ecc6299db9ec823/void-1.0.2/src/lib.rs:114:24\r\n    |\r\n114 |     fn void_unwrap_err(self) -> E {\r\n    |                        ^^^^ doesn't have a size known at compile-time\r\n    |\r\nnote: required by a bound in `Result`\r\n   --> /home/mark/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:504:20\r\n    |\r\n504 | pub enum Result<T, E> {\r\n    |                    ^ required by this bound in `Result`\r\nhelp: consider restricting type parameter `E`\r\n    |\r\n109 | impl<E: core::marker::Sized> ResultVoidErrExt<E> for Result<Void, E> {\r\n    |       +++++++++++++++++++++\r\n\r\nerror: could not compile `void` due to 18 previous errors\r\n  67:     0x7ff06e11ab43 - start_thread\r\n                               at ./nptl/./nptl/pthread_create.c:442:8\r\n  68:     0x7ff06e1aca00 - clone3\r\n                               at ./misc/../sysdeps/unix/sysv/linux/x86_64/clone3.S:81\r\n  69:                0x0 - <unknown>\r\nerror: internal compiler error: the following error was constructed but not emitted\r\n\r\nerror[E0277]: the size for values of type `T` cannot be known at compilation time\r\n  --> /home/mark/.cargo/registry/src/github.com-1ecc6299db9ec823/vcell-0.1.3/src/lib.rs:25:47\r\n   |\r\n25 |         VolatileCell { value: UnsafeCell::new(value) }\r\n   |                                               ^^^^^\r\n\r\nthread '<unnamed>' panicked at 'error was constructed but not emitted', compiler/rustc_errors/src/diagnostic_builder.rs:676:21\r\nstack backtrace:\r\n   0:     0x7ff06e3d7520 - std::backtrace_rs::backtrace::libunwind::trace::h1c0259b0e54a0ec7\r\n                               at /rustc/c1a859b25a95999ba276075bbd8e284ea675b41a/library/std/src/../../backtrace/src/backtrace/libunwind.rs:93:5\r\n   1:     0x7ff06e3d7520 - std::backtrace_rs::backtrace::trace_unsynchronized::hef156fa43f257fff\r\n                               at /rustc/c1a859b25a95999ba276075bbd8e284ea675b41a/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\r\n   2:     0x7ff06e3d7520 - std::sys_common::backtrace::_print_fmt::h14c30be4df8a453b\r\n                               at /rustc/c1a859b25a95999ba276075bbd8e284ea675b41a/library/std/src/sys_common/backtrace.rs:65:5\r\n   3:     0x7ff06e3d7520 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::h6bc9ef49ac207d73\r\n                               at /rustc/c1a859b25a95999ba276075bbd8e284ea675b41a/library/std/src/sys_common/backtrace.rs:44:22\r\n   4:     0x7ff06e43963e - core::fmt::write::h670e2d8b480677bf\r\n                               at /rustc/c1a859b25a95999ba276075bbd8e284ea675b41a/library/core/src/fmt/mod.rs:1209:17\r\n   5:     0x7ff06e3c7795 - std::io::Write::write_fmt::h96cca416c9a25a8f\r\n                               at /rustc/c1a859b25a95999ba276075bbd8e284ea675b41a/library/std/src/io/mod.rs:1682:15\r\n   6:     0x7ff06e3d72e5 - std::sys_common::backtrace::_print::h209eac292799b1d3\r\n                               at /rustc/c1a859b25a95999ba276075bbd8e284ea675b41a/library/std/src/sys_common/backtrace.rs:47:5\r\n   7:     0x7ff06e3d72e5 - std::sys_common::backtrace::print::h02ded1b579fe176b\r\n                               at /rustc/c1a859b25a95999ba276075bbd8e284ea675b41a/library/std/src/sys_common/backtrace.rs:34:9\r\n   8:     0x7ff06e3da0bf - std::panicking::default_hook::{{closure}}::h8511971ca7cce5b1\r\n                               at /rustc/c1a859b25a95999ba276075bbd8e284ea675b41a/library/std/src/panicking.rs:267:22\r\n   9:     0x7ff06e3d9dfa - std::panicking::default_hook::h8bc8dfd96a84f923\r\n                               at /rustc/c1a859b25a95999ba276075bbd8e284ea675b41a/library/std/src/panicking.rs:286:9\r\n  10:     0x7ff06e3da8cc - std::panicking::rust_panic_with_hook::h9f2bfce9b4c1819d\r\n                               at /rustc/c1a859b25a95999ba276075bbd8e284ea675b41a/library/std/src/panicking.rs:688:13\r\n  11:     0x7ff06e3da621 - std::panicking::begin_panic_handler::{{closure}}::h167b5f05f9579bc1\r\n                               at /rustc/c1a859b25a95999ba276075bbd8e284ea675b41a/library/std/src/panicking.rs:577:13\r\n  12:     0x7ff06e3d79cc - std::sys_common::backtrace::__rust_end_short_backtrace::h99451dfb597ab6ac\r\n                               at /rustc/c1a859b25a95999ba276075bbd8e284ea675b41a/library/std/src/sys_common/backtrace.rs:137:18\r\n  13:     0x7ff06e3da382 - rust_begin_unwind\r\n                               at /rustc/c1a859b25a95999ba276075bbd8e284ea675b41a/library/std/src/panicking.rs:575:5\r\n  14:     0x7ff06e436023 - core::panicking::panic_fmt::hf9d641a075644e68\r\n                               at /rustc/c1a859b25a95999ba276075bbd8e284ea675b41a/library/core/src/panicking.rs:65:14\r\n  15:     0x7ff0702ed59b - <rustc_errors[a1ce8dcef9ff7a7d]::diagnostic_builder::DiagnosticBuilderInner as core[4e899ad432e99573]::ops::drop::Drop>::drop\r\n  16:     0x7ff07215fa9d - core[4e899ad432e99573]::ptr::drop_in_place::<rustc_errors[a1ce8dcef9ff7a7d]::diagnostic_builder::DiagnosticBuilder<rustc_errors[a1ce8dcef9ff7a7d]::ErrorGuaranteed>>\r\n  17:     0x7ff07217a3aa - <rustc_infer[183205aa2824036]::infer::error_reporting::TypeErrCtxt as rustc_trait_selection[1a866c97ed6ff1a8]::traits::error_reporting::TypeErrCtxtExt>::report_selection_error\r\n  18:     0x7ff072180568 - <rustc_infer[183205aa2824036]::infer::error_reporting::TypeErrCtxt as rustc_trait_selection[1a866c97ed6ff1a8]::traits::error_reporting::InferCtxtPrivExt>::report_fulfillment_error\r\n  19:     0x7ff07217485f - <rustc_infer[183205aa2824036]::infer::error_reporting::TypeErrCtxt as rustc_trait_selection[1a866c97ed6ff1a8]::traits::error_reporting::TypeErrCtxtExt>::report_fulfillment_errors\r\n  20:     0x7ff06f851ef3 - <rustc_hir_typeck[6da16006badde0e1]::fn_ctxt::FnCtxt>::check_argument_types\r\n  21:     0x7ff06f81d989 - <rustc_hir_typeck[6da16006badde0e1]::fn_ctxt::FnCtxt>::check_call\r\n  22:     0x7ff06fed1f39 - <rustc_hir_typeck[6da16006badde0e1]::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n  23:     0x7ff06ff4b180 - <rustc_hir_typeck[6da16006badde0e1]::fn_ctxt::FnCtxt>::check_expr_struct_fields\r\n  24:     0x7ff06fed4f36 - <rustc_hir_typeck[6da16006badde0e1]::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n  25:     0x7ff06ff143dc - <rustc_hir_typeck[6da16006badde0e1]::fn_ctxt::FnCtxt>::check_block_with_expected\r\n  26:     0x7ff06fed246a - <rustc_hir_typeck[6da16006badde0e1]::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n  27:     0x7ff06fd0ff86 - <rustc_hir_typeck[6da16006badde0e1]::fn_ctxt::FnCtxt>::check_return_expr\r\n  28:     0x7ff06fd07f4c - rustc_hir_typeck[6da16006badde0e1]::check::check_fn\r\n  29:     0x7ff06fcf3cdb - <rustc_hir_typeck[6da16006badde0e1]::inherited::InheritedBuilder>::enter::<rustc_hir_typeck[6da16006badde0e1]::typeck_with_fallback<rustc_hir_typeck[6da16006badde0e1]::typeck::{closure#0}>::{closure#0}::{closure#1}, &rustc_middle[ef15c0f09f0ff036]::ty::context::TypeckResults>\r\n  30:     0x7ff06fce69dd - rustc_hir_typeck[6da16006badde0e1]::typeck\r\n  31:     0x7ff06fce4bef - rustc_query_system[731acdfd61cbbb95]::query::plumbing::try_execute_query::<rustc_query_impl[5d8cc954b14a6b51]::plumbing::QueryCtxt, rustc_query_system[731acdfd61cbbb95]::query::caches::DefaultCache<rustc_span[2c66fb4e929445ca]::def_id::LocalDefId, &rustc_middle[ef15c0f09f0ff036]::ty::context::TypeckResults>>\r\n  32:     0x7ff070d79008 - rustc_data_structures[fcbea81f06a7da6b]::sync::par_for_each_in::<&[rustc_span[2c66fb4e929445ca]::def_id::LocalDefId], <rustc_middle[ef15c0f09f0ff036]::hir::map::Map>::par_body_owners<rustc_hir_typeck[6da16006badde0e1]::typeck_item_bodies::{closure#0}>::{closure#0}>\r\n  33:     0x7ff070d78ce3 - rustc_hir_typeck[6da16006badde0e1]::typeck_item_bodies\r\n  34:     0x7ff070c6f64a - rustc_query_system[731acdfd61cbbb95]::query::plumbing::try_execute_query::<rustc_query_impl[5d8cc954b14a6b51]::plumbing::QueryCtxt, rustc_query_system[731acdfd61cbbb95]::query::caches::DefaultCache<(), ()>>\r\n  35:     0x7ff070c6f347 - rustc_query_system[731acdfd61cbbb95]::query::plumbing::get_query::<rustc_query_impl[5d8cc954b14a6b51]::queries::typeck_item_bodies, rustc_query_impl[5d8cc954b14a6b51]::plumbing::QueryCtxt>\r\n  36:     0x7ff06fa38b0a - <rustc_session[47f761f7ecc78e0d]::session::Session>::time::<(), rustc_hir_analysis[7cbe4a3e57699ef0]::check_crate::{closure#7}>\r\n  37:     0x7ff06fa3824b - rustc_hir_analysis[7cbe4a3e57699ef0]::check_crate\r\n  38:     0x7ff06fa37e7b - rustc_interface[d2b1e7858cec3daa]::passes::analysis\r\n  39:     0x7ff070dd11e4 - rustc_query_system[731acdfd61cbbb95]::query::plumbing::try_execute_query::<rustc_query_impl[5d8cc954b14a6b51]::plumbing::QueryCtxt, rustc_query_system[731acdfd61cbbb95]::query::caches::DefaultCache<(), core[4e899ad432e99573]::result::Result<(), rustc_errors[a1ce8dcef9ff7a7d]::ErrorGuaranteed>>>\r\n  40:     0x7ff070dd0ee7 - rustc_query_system[731acdfd61cbbb95]::query::plumbing::get_query::<rustc_query_impl[5d8cc954b14a6b51]::queries::analysis, rustc_query_impl[5d8cc954b14a6b51]::plumbing::QueryCtxt>\r\n  41:     0x7ff070880b8e - <rustc_interface[d2b1e7858cec3daa]::passes::QueryContext>::enter::<rustc_driver[766838ccb0cc5547]::run_compiler::{closure#1}::{closure#2}::{closure#3}, core[4e899ad432e99573]::result::Result<(), rustc_errors[a1ce8dcef9ff7a7d]::ErrorGuaranteed>>\r\n  42:     0x7ff07087dc5f - <rustc_interface[d2b1e7858cec3daa]::interface::Compiler>::enter::<rustc_driver[766838ccb0cc5547]::run_compiler::{closure#1}::{closure#2}, core[4e899ad432e99573]::result::Result<core[4e899ad432e99573]::option::Option<rustc_interface[d2b1e7858cec3daa]::queries::Linker>, rustc_errors[a1ce8dcef9ff7a7d]::ErrorGuaranteed>>\r\n  43:     0x7ff070878c92 - rustc_span[2c66fb4e929445ca]::with_source_map::<core[4e899ad432e99573]::result::Result<(), rustc_errors[a1ce8dcef9ff7a7d]::ErrorGuaranteed>, rustc_interface[d2b1e7858cec3daa]::interface::run_compiler<core[4e899ad432e99573]::result::Result<(), rustc_errors[a1ce8dcef9ff7a7d]::ErrorGuaranteed>, rustc_driver[766838ccb0cc5547]::run_compiler::{closure#1}>::{closure#0}::{closure#1}>\r\n  44:     0x7ff07087876c - <scoped_tls[a162aae2f2befadc]::ScopedKey<rustc_span[2c66fb4e929445ca]::SessionGlobals>>::set::<rustc_interface[d2b1e7858cec3daa]::interface::run_compiler<core[4e899ad432e99573]::result::Result<(), rustc_errors[a1ce8dcef9ff7a7d]::ErrorGuaranteed>, rustc_driver[766838ccb0cc5547]::run_compiler::{closure#1}>::{closure#0}, core[4e899ad432e99573]::result::Result<(), rustc_errors[a1ce8dcef9ff7a7d]::ErrorGuaranteed>>\r\n  45:     0x7ff070877d58 - std[60fbac34357a1008]::sys_common::backtrace::__rust_begin_short_backtrace::<rustc_interface[d2b1e7858cec3daa]::util::run_in_thread_pool_with_globals<rustc_interface[d2b1e7858cec3daa]::interface::run_compiler<core[4e899ad432e99573]::result::Result<(), rustc_errors[a1ce8dcef9ff7a7d]::ErrorGuaranteed>, rustc_driver[766838ccb0cc5547]::run_compiler::{closure#1}>::{closure#0}, core[4e899ad432e99573]::result::Result<(), rustc_errors[a1ce8dcef9ff7a7d]::ErrorGuaranteed>>::{closure#0}::{closure#0}, core[4e899ad432e99573]::result::Result<(), rustc_errors[a1ce8dcef9ff7a7d]::ErrorGuaranteed>>\r\n  46:     0x7ff070877a7c - <<std[60fbac34357a1008]::thread::Builder>::spawn_unchecked_<rustc_interface[d2b1e7858cec3daa]::util::run_in_thread_pool_with_globals<rustc_interface[d2b1e7858cec3daa]::interface::run_compiler<core[4e899ad432e99573]::result::Result<(), rustc_errors[a1ce8dcef9ff7a7d]::ErrorGuaranteed>, rustc_driver[766838ccb0cc5547]::run_compiler::{closure#1}>::{closure#0}, core[4e899ad432e99573]::result::Result<(), rustc_errors[a1ce8dcef9ff7a7d]::ErrorGuaranteed>>::{closure#0}::{closure#0}, core[4e899ad432e99573]::result::Result<(), rustc_errors[a1ce8dcef9ff7a7d]::ErrorGuaranteed>>::{closure#1} as core[4e899ad432e99573]::ops::function::FnOnce<()>>::call_once::{shim:vtable#0}\r\n  47:     0x7ff072309563 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::h9c5bc954debcee72\r\n                               at /rustc/c1a859b25a95999ba276075bbd8e284ea675b41a/library/alloc/src/boxed.rs:2000:9\r\n  48:     0x7ff072309563 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::he1973107145a5c1d\r\n                               at /rustc/c1a859b25a95999ba276075bbd8e284ea675b41a/library/alloc/src/boxed.rs:2000:9\r\n  49:     0x7ff072309563 - std::sys::unix::thread::Thread::new::thread_start::h3f40abd87f665b17\r\n                               at /rustc/c1a859b25a95999ba276075bbd8e284ea675b41a/library/std/src/sys/unix/thread.rs:108:17\r\n  50:     0x7ff06e11ab43 - start_thread\r\n                               at ./nptl/./nptl/pthread_create.c:442:8\r\n  51:     0x7ff06e1aca00 - clone3\r\n                               at ./misc/../sysdeps/unix/sysv/linux/x86_64/clone3.S:81\r\n  52:                0x0 - <unknown>\r\nthread panicked while panicking. aborting.\r\nerror: could not compile `vcell` due to 2 previous errors\r\n\r\nCaused by:\r\n  process didn't exit successfully: `rustc --crate-name vcell /home/mark/.cargo/registry/src/github.com-1ecc6299db9ec823/vcell-0.1.3/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=s -C linker-plugin-lto -C debuginfo=2 -C debug-assertions=on -C metadata=759351f247192a54 -C extra-filename=-759351f247192a54 --out-dir /home/mark/Projects/rust/ice-repro/target/avr-atmega328p/debug/deps --target /home/mark/Projects/rust/ice-repro/avr-atmega328p.json -L dependency=/home/mark/Projects/rust/ice-repro/target/avr-atmega328p/debug/deps -L dependency=/home/mark/Projects/rust/ice-repro/target/debug/deps --extern 'noprelude:compiler_builtins=/home/mark/Projects/rust/ice-repro/target/avr-atmega328p/debug/deps/libcompiler_builtins-a2b92db059b15fe1.rmeta' --extern 'noprelude:core=/home/mark/Projects/rust/ice-repro/target/avr-atmega328p/debug/deps/libcore-3cf297aae6df8ec5.rmeta' -Z unstable-options --cap-lints allow` (signal: 6, SIGABRT: process abort signal)\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/104301/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/104301/timeline", "performed_via_github_app": null, "state_reason": null}