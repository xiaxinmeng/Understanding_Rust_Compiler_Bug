{"url": "https://api.github.com/repos/rust-lang/rust/issues/62307", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/62307/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/62307/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/62307/events", "html_url": "https://github.com/rust-lang/rust/issues/62307", "id": 463247950, "node_id": "MDU6SXNzdWU0NjMyNDc5NTA=", "number": 62307, "title": "structural_match bug:  deep refs like `& &B` leak use of PartialEq", "user": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-07-02T14:02:26Z", "updated_at": "2019-07-10T15:58:36Z", "closed_at": "2019-07-10T15:58:36Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "(Spawned off of investigation of #61188)\r\n\r\nrust-lang/rfcs#1445 says that we're supposed to reject uses of consts with ADT's that don't implement `#[structural_match]` (i.e. ADT's that do not do `#[derive(PartialEq, Eq)]`.\r\n\r\nUnfortunately, we did not quite finish the job. Consider the following code ([play](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=92cbbf1bf22e561eb05ee48a902a94eb)):\r\n\r\n```rust\r\n#[derive(Debug)]\r\nstruct B(i32);\r\n\r\n// Overriding PartialEq to use this strange notion of equality exposes\r\n// whether `match` is using structural-equality or method-dispatch\r\n// under the hood, which is the antithesis of rust-lang/rfcs#1445\r\nimpl PartialEq for B {\r\n    fn eq(&self, other: &B) -> bool { std::cmp::min(self.0, other.0) == 0 }\r\n}\r\n\r\nconst ZER_B: & & B = & & B(0);\r\nconst ONE_B: & & B = & & B(1);\r\n\r\nfn main() {\r\n    if let ONE_B = ZER_B {\r\n        println!(\"CLAIM Z: {:?} matches {:?}\", ONE_B, ZER_B);\r\n    }\r\n\r\n    if let ONE_B = ONE_B {\r\n        println!(\"CLAIM O: {:?} matches {:?}\", ONE_B, ONE_B);\r\n    }\r\n}\r\n```\r\n\r\nThis prints:\r\n\r\n```text\r\nCLAIM Z: B(1) matches B(0)\r\n```\r\n\r\nbut I would expect to see something like the error you get if you use constants of type `&B` instead of `& &B`:\r\n\r\n```text\r\nerror: to use a constant of type `B` in a pattern, `B` must be annotated with `#[derive(PartialEq, Eq)]`\r\n  --> src/main.rs:15:12\r\n   |\r\n15 |     if let ONE_B = ZER_B {\r\n   |            ^^^^^\r\n```", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/62307/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/62307/timeline", "performed_via_github_app": null, "state_reason": "completed"}