{"url": "https://api.github.com/repos/rust-lang/rust/issues/72473", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/72473/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/72473/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/72473/events", "html_url": "https://github.com/rust-lang/rust/issues/72473", "id": 623342460, "node_id": "MDU6SXNzdWU2MjMzNDI0NjA=", "number": 72473, "title": "panicked at 'failed to lookup `SourceFile`", "user": {"login": "s0lst1ce", "id": 46009999, "node_id": "MDQ6VXNlcjQ2MDA5OTk5", "avatar_url": "https://avatars.githubusercontent.com/u/46009999?v=4", "gravatar_id": "", "url": "https://api.github.com/users/s0lst1ce", "html_url": "https://github.com/s0lst1ce", "followers_url": "https://api.github.com/users/s0lst1ce/followers", "following_url": "https://api.github.com/users/s0lst1ce/following{/other_user}", "gists_url": "https://api.github.com/users/s0lst1ce/gists{/gist_id}", "starred_url": "https://api.github.com/users/s0lst1ce/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/s0lst1ce/subscriptions", "organizations_url": "https://api.github.com/users/s0lst1ce/orgs", "repos_url": "https://api.github.com/users/s0lst1ce/repos", "events_url": "https://api.github.com/users/s0lst1ce/events{/privacy}", "received_events_url": "https://api.github.com/users/s0lst1ce/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-22T16:39:20Z", "updated_at": "2020-05-22T16:54:01Z", "closed_at": "2020-05-22T16:54:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\nHello. I'm new to Rust and I've been building a small web api using `rocket` and `serde_json`. All was going well until I started making use of `std::sync::Once` in my test suite (provided in #Code). Now I can't run my tests nor compile the binary (should I link the code to it as well?).\r\n### Code\r\n\r\n```Rust\r\nuse std::fs;\r\nuse std::path::Path;\r\nuse std::sync::Once;\r\n\r\nconst BASE_PATH: &str = \"emulated/\";\r\nconst SERVER_PATH: &str = \"emulated/servers/\";\r\n\r\nstatic INIT: Once = Once::new();\r\nfn setup_env() {\r\n    fs::create_dir_all(SERVER_PATH).expect(\"Couldn't setup environement\");\r\n    fs::write(\r\n        Path::new(BASE_PATH).join(\"settings.py\"),\r\n        \"AVAILABLE_LANGS = [\\\"en\\\", \\\"fr\\\"]\",\r\n    )\r\n    .expect(\"Couldn't setup environement\");\r\n    fs::write(Path::new(SERVER_PATH).join(\"54654564.json\"), \"{}\")\r\n        .expect(\"Couldn't setup environement\");\r\n}\r\n\r\n#[cfg(test)]\r\nmod tests {\r\n    use super::*;\r\n\r\n    #[test]\r\n    fn test_server_all() {\r\n        INIT.call_once(|| {\r\n            setup_env();\r\n        });\r\n    }\r\n    #[test]\r\n    fn test_server_one() {\r\n        INIT.call_once(|| {\r\n            setup_env();\r\n        });\r\n    }\r\n\r\n    #[test]\r\n    fn test_server_conf() {\r\n        INIT.call_once(|| {\r\n            setup_env();\r\n        });\r\n    }\r\n\r\n    #[test]\r\n    fn test_available_langs() {\r\n        INIT.call_once(|| {\r\n            setup_env();\r\n        });\r\n    }\r\n\r\n    #[test]\r\n    fn test_overwrite_conf() {\r\n        INIT.call_once(|| {\r\n            setup_env();\r\n        });\r\n    }\r\n}\r\n\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.45.0-nightly (a74d1862d 2020-05-14)\r\nbinary: rustc\r\ncommit-hash: a74d1862d4d87a56244958416fd05976c58ca1a8\r\ncommit-date: 2020-05-14\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.45.0-nightly\r\nLLVM version: 9.0\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nthread 'rustc' panicked at 'failed to lookup `SourceFile` in new context', src/librustc_middle/ty/query/on_disk_cache.rs:456:17\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.45.0-nightly (a74d1862d 2020-05-14) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nerror: could not compile `linker`.\r\n\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nthread 'rustc' panicked at 'failed to lookup `SourceFile` in new context', src/librustc_middle/ty/query/on_disk_cache.rs:456:17\r\nstack backtrace:\r\n   0: backtrace::backtrace::libunwind::trace\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/libunwind.rs:86\r\n   1: backtrace::backtrace::trace_unsynchronized\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/mod.rs:66\r\n   2: std::sys_common::backtrace::_print_fmt\r\n             at src/libstd/sys_common/backtrace.rs:78\r\n   3: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt\r\n             at src/libstd/sys_common/backtrace.rs:59\r\n   4: core::fmt::write\r\n             at src/libcore/fmt/mod.rs:1069\r\n   5: std::io::Write::write_fmt\r\n             at src/libstd/io/mod.rs:1537\r\n   6: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:62\r\n   7: std::sys_common::backtrace::print\r\n             at src/libstd/sys_common/backtrace.rs:49\r\n   8: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/panicking.rs:198\r\n   9: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:218\r\n  10: rustc_driver::report_ice\r\n  11: <alloc::boxed::Box<F> as core::ops::function::Fn<A>>::call\r\n             at /rustc/a74d1862d4d87a56244958416fd05976c58ca1a8/src/liballoc/boxed.rs:1048\r\n  12: proc_macro::bridge::client::<impl proc_macro::bridge::Bridge>::enter::{{closure}}::{{closure}}\r\n             at /rustc/a74d1862d4d87a56244958416fd05976c58ca1a8/src/libproc_macro/bridge/client.rs:312\r\n  13: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:481\r\n  14: rust_begin_unwind\r\n             at src/libstd/panicking.rs:385\r\n  15: core::panicking::panic_fmt\r\n             at src/libcore/panicking.rs:89\r\n  16: core::option::expect_failed\r\n             at src/libcore/option.rs:1264\r\n  17: <rustc_middle::ty::query::on_disk_cache::CacheDecoder as serialize::serialize::SpecializedDecoder<rustc_span::span_encoding::Span>>::specialized_decode\r\n  18: <rustc_middle::mir::SourceInfo as serialize::serialize::Decodable>::decode\r\n  19: <rustc_middle::mir::Statement as serialize::serialize::Decodable>::decode\r\n  20: serialize::serialize::Decoder::read_seq\r\n  21: <rustc_middle::mir::BasicBlockData as serialize::serialize::Decodable>::decode\r\n  22: serialize::serialize::Decoder::read_seq\r\n  23: <rustc_middle::mir::Body as serialize::serialize::Decodable>::decode\r\n  24: rustc_middle::ty::query::on_disk_cache::OnDiskCache::try_load_query_result\r\n  25: rustc_middle::query::<impl rustc_query_system::query::config::QueryDescription<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::optimized_mir>::try_load_from_disk\r\n  26: rustc_query_system::query::plumbing::load_from_disk_and_cache_in_memory\r\n  27: rustc_query_system::query::plumbing::get_query_impl\r\n  28: rustc_middle::ty::<impl rustc_middle::ty::context::TyCtxt>::instance_mir\r\n  29: rustc_mir::monomorphize::collector::collect_neighbours\r\n  30: rustc_data_structures::stack::ensure_sufficient_stack\r\n  31: rustc_mir::monomorphize::collector::collect_items_rec\r\n  32: rustc_session::utils::<impl rustc_session::session::Session>::time\r\n  33: rustc_mir::monomorphize::collector::collect_crate_mono_items\r\n  34: rustc_mir::monomorphize::partitioning::collect_and_partition_mono_items\r\n  35: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::collect_and_partition_mono_items>::compute\r\n  36: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  37: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  38: rustc_data_structures::stack::ensure_sufficient_stack\r\n  39: rustc_query_system::query::plumbing::get_query_impl\r\n  40: rustc_codegen_ssa::base::codegen_crate\r\n  41: <rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::CodegenBackend>::codegen_crate\r\n  42: rustc_session::utils::<impl rustc_session::session::Session>::time\r\n  43: rustc_interface::passes::start_codegen\r\n  44: rustc_middle::ty::context::tls::enter_global\r\n  45: rustc_interface::queries::Queries::ongoing_codegen\r\n  46: rustc_interface::interface::run_compiler_in_existing_thread_pool\r\n  47: scoped_tls::ScopedKey<T>::set\r\n  48: rustc_ast::attr::with_globals\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.45.0-nightly (a74d1862d 2020-05-14) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [optimized_mir] processing `main`\r\n#1 [collect_and_partition_mono_items] collect_and_partition_mono_items\r\nend of query stack\r\nerror: could not compile `linker`.\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/72473/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/72473/timeline", "performed_via_github_app": null, "state_reason": "completed"}