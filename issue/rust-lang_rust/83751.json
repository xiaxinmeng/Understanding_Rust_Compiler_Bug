{"url": "https://api.github.com/repos/rust-lang/rust/issues/83751", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/83751/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/83751/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/83751/events", "html_url": "https://github.com/rust-lang/rust/issues/83751", "id": 848560980, "node_id": "MDU6SXNzdWU4NDg1NjA5ODA=", "number": 83751, "title": "Windows - std::fs bug - specific file name causes thread to hang or false positive on file open.", "user": {"login": "nothingbutnetcode", "id": 60814460, "node_id": "MDQ6VXNlcjYwODE0NDYw", "avatar_url": "https://avatars.githubusercontent.com/u/60814460?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nothingbutnetcode", "html_url": "https://github.com/nothingbutnetcode", "followers_url": "https://api.github.com/users/nothingbutnetcode/followers", "following_url": "https://api.github.com/users/nothingbutnetcode/following{/other_user}", "gists_url": "https://api.github.com/users/nothingbutnetcode/gists{/gist_id}", "starred_url": "https://api.github.com/users/nothingbutnetcode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nothingbutnetcode/subscriptions", "organizations_url": "https://api.github.com/users/nothingbutnetcode/orgs", "repos_url": "https://api.github.com/users/nothingbutnetcode/repos", "events_url": "https://api.github.com/users/nothingbutnetcode/events{/privacy}", "received_events_url": "https://api.github.com/users/nothingbutnetcode/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 123109, "node_id": "MDU6TGFiZWwxMjMxMDk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-windows", "name": "O-windows", "color": "6e6ec0", "default": false, "description": "Operating system: Windows"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 2238437210, "node_id": "MDU6TGFiZWwyMjM4NDM3MjEw", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-io", "name": "A-io", "color": "f7e101", "default": false, "description": "Area: std::io, std::fs, std::net and std::path"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 17, "created_at": "2021-04-01T15:18:05Z", "updated_at": "2023-03-19T09:44:12Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "\r\nWhen trying to open a file (which in this case did not exist) that starts with con. - eg: con.txt, con.toml - fs::read_to_string will hang the thread.  File::open will incorrectly succeed, and subsequently panic when methods on the file handle are called.\r\n\r\nI tried this code:\r\n\r\n```rust\r\nuse std::fs::File;\r\nuse std::{fs};\r\n\r\nfn main() {\r\n    // 1 - this will hang the app\r\n    let _ = fs::read_to_string(\"con.cxv\").unwrap();\r\n\r\n    // 2 - this returns a file (but it does not exist)\r\n    match File::open(\"con.txt\") {\r\n        Ok(file) => {\r\n            println!(\"length {}\", file.metadata().unwrap().len()) // so this will panic\r\n        }\r\n        Err(err) => {\r\n            println!(\"{:?}\", err);\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nI expected to see this happen:  File not found error returned.\r\n\r\nInstead, this happened: Thread hang or incorrect result as per description above.\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\nBug exists in nightly as well as stable.\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.51.0 (2fd73fabe 2021-03-23)\r\nbinary: rustc\r\ncommit-hash: 2fd73fabe469357a12c2c974c140f67e7cdd76d0\r\ncommit-date: 2021-03-23\r\nhost: x86_64-pc-windows-msvc\r\nrelease: 1.51.0\r\nLLVM version: 11.0.1\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary>Backtrace</summary>\r\n<p>\r\n\r\n```\r\n<backtrace>\r\n```\r\n\r\n</p>\r\n</details>\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/83751/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/83751/timeline", "performed_via_github_app": null, "state_reason": null}