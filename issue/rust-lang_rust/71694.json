{"url": "https://api.github.com/repos/rust-lang/rust/issues/71694", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/71694/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/71694/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/71694/events", "html_url": "https://github.com/rust-lang/rust/issues/71694", "id": 609356454, "node_id": "MDU6SXNzdWU2MDkzNTY0NTQ=", "number": 71694, "title": "Separate `unsized_locals` into \"sound\" and \"unsound\" (i.e. incorrectly implemented) parts", "user": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 203429200, "node_id": "MDU6TGFiZWwyMDM0MjkyMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-high", "name": "P-high", "color": "eb6420", "default": false, "description": "High priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1472526996, "node_id": "MDU6TGFiZWwxNDcyNTI2OTk2", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-unsized_locals", "name": "F-unsized_locals", "color": "f9c0cc", "default": false, "description": "`#![feature(unsized_locals)]`"}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}], "state": "closed", "locked": false, "assignee": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2020-04-29T21:00:02Z", "updated_at": "2020-10-28T03:58:29Z", "closed_at": "2020-10-28T03:58:29Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Spawned off of #71416 \r\n\r\nHere is the example from that issue's description:\r\n\r\nThis is a variant of https://github.com/rust-lang/rust/issues/68304 that was not fixed by https://github.com/rust-lang/rust/pull/71170:\r\n```rust\r\n#![feature(unsized_locals)]\r\n\r\nuse std::any::Any;\r\n\r\n#[repr(align(256))]\r\n#[allow(dead_code)]\r\nstruct A {\r\n    v: u8\r\n}\r\n\r\nimpl A {\r\n    fn f(&self) -> *const A {\r\n        assert_eq!(self as *const A as usize % 256, 0);\r\n        self\r\n    }\r\n}\r\n\r\nfn mk() -> Box<dyn Any> {\r\n    Box::new(A { v: 4 })\r\n}\r\n\r\nfn main() {\r\n    let x = *mk();\r\n    let dwncst = x.downcast_ref::<A>().unwrap();\r\n    let addr = dwncst.f();\r\n    assert_eq!(addr as usize % 256, 0);\r\n}\r\n```\r\n\r\nWhat we want is to factor `unsized_locals` into two features (either giving both fresh names or just allocating one fresh name, it doesn't matter all that much), where one of the two named features would *only* enable support for cases that we have actually implemented (correctly).\r\n\r\n * Specifically, we do not currently handle alignment of `dyn Value` because we would need to query that alignment dynamically and adjust the stack address accordingly (and allowing for such adjustment by allocating `size + (align  1)` ... which actually I guess would have to be done via `alloca` if we cannot put an upper-bound on `align` ... anyway I digress...)\r\n\r\nAnyway, this issue is *just* about creating the new feature name(s), and splitting the current `unsized_locals` support accordingly, so that crates (specifically the internals of `libstd`) can opt into supporting *just* the construct that we know we have actually implemented properly.", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/71694/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/71694/timeline", "performed_via_github_app": null, "state_reason": "completed"}