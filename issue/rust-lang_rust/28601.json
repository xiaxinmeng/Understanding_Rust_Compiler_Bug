{"url": "https://api.github.com/repos/rust-lang/rust/issues/28601", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/28601/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/28601/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/28601/events", "html_url": "https://github.com/rust-lang/rust/issues/28601", "id": 107900353, "node_id": "MDU6SXNzdWUxMDc5MDAzNTM=", "number": 28601, "title": "`Vec::clone_from` is slow", "user": {"login": "apasel422", "id": 8644784, "node_id": "MDQ6VXNlcjg2NDQ3ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/8644784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apasel422", "html_url": "https://github.com/apasel422", "followers_url": "https://api.github.com/users/apasel422/followers", "following_url": "https://api.github.com/users/apasel422/following{/other_user}", "gists_url": "https://api.github.com/users/apasel422/gists{/gist_id}", "starred_url": "https://api.github.com/users/apasel422/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apasel422/subscriptions", "organizations_url": "https://api.github.com/users/apasel422/orgs", "repos_url": "https://api.github.com/users/apasel422/repos", "events_url": "https://api.github.com/users/apasel422/events{/privacy}", "received_events_url": "https://api.github.com/users/apasel422/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2015-09-23T11:33:12Z", "updated_at": "2015-09-24T17:07:13Z", "closed_at": "2015-09-24T17:07:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In the process of implementing #28481 for `BinaryHeap`, I noticed that `Vec::clone_from` is often slower than `Vec::clone`:\n\n``` rust\n#![cfg_attr(test, feature(test))]\n\n#[cfg(test)]\nextern crate test;\n\nmacro_rules! bench {\n    ($name:ident, $src_len:expr, $dst_len:expr) => {\n        mod $name {\n            #[bench]\n            fn clone_from(b: &mut ::test::Bencher) {\n                let src: Vec<i32> = (0..$src_len).collect();\n                let mut dst: Vec<i32> = (0..$dst_len).collect();\n\n                b.iter(|| {\n                    dst.clone_from(&src);\n                    unsafe { dst.set_len($dst_len as usize); }\n                    ::test::black_box(&mut dst);\n                });\n            }\n\n            #[bench]\n            fn clone(b: &mut ::test::Bencher) {\n                let src: Vec<i32> = (0..$src_len).collect();\n                let mut dst: Vec<i32> = (0..$dst_len).collect();\n\n                b.iter(|| {\n                    dst = src.clone();\n                    unsafe { dst.set_len($dst_len as usize); }\n                    ::test::black_box(&mut dst);\n                });\n            }\n        }\n    }\n}\n\nmod eq {\n    bench! { src_100_dst_100, 100, 100 }\n    bench! { src_1000_dst_1000, 1000, 1000 }\n}\n\nmod src_bigger {\n    bench! { src_100_dst_10, 100, 10 }\n    bench! { src_1000_dst_100, 1000, 100 }\n}\n\nmod dst_bigger {\n    bench! { src_10_dst_100, 10, 100 }\n    bench! { src_100_dst_1000, 100, 1000 }\n}\n```\n\nOutput with `rustc 1.5.0-nightly (b2f379cdc 2015-09-23)`:\n\n``` sh\ntest dst_bigger::src_100_dst_1000::clone      ... bench:          34 ns/iter (+/- 1)\ntest dst_bigger::src_100_dst_1000::clone_from ... bench:          75 ns/iter (+/- 3)\n\ntest dst_bigger::src_10_dst_100::clone        ... bench:          25 ns/iter (+/- 0)\ntest dst_bigger::src_10_dst_100::clone_from   ... bench:           9 ns/iter (+/- 1)\n\ntest eq::src_1000_dst_1000::clone             ... bench:         105 ns/iter (+/- 2)\ntest eq::src_1000_dst_1000::clone_from        ... bench:         593 ns/iter (+/- 21)\n\ntest eq::src_100_dst_100::clone               ... bench:          34 ns/iter (+/- 1)\ntest eq::src_100_dst_100::clone_from          ... bench:          75 ns/iter (+/- 1)\n\ntest src_bigger::src_1000_dst_100::clone      ... bench:         103 ns/iter (+/- 5)\ntest src_bigger::src_1000_dst_100::clone_from ... bench:         148 ns/iter (+/- 5)\n\ntest src_bigger::src_100_dst_10::clone        ... bench:          34 ns/iter (+/- 1)\ntest src_bigger::src_100_dst_10::clone_from   ... bench:          20 ns/iter (+/- 0)\n```\n\nThese benchmarks are probably naive (and different sizes may have a more meaningful effect), but it seems to warrant investigation.\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/28601/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/28601/timeline", "performed_via_github_app": null, "state_reason": "completed"}