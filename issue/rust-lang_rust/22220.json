{"url": "https://api.github.com/repos/rust-lang/rust/issues/22220", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/22220/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/22220/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/22220/events", "html_url": "https://github.com/rust-lang/rust/issues/22220", "id": 57464146, "node_id": "MDU6SXNzdWU1NzQ2NDE0Ng==", "number": 22220, "title": "Precisely document the behavior of public unsafe functions", "user": {"login": "mahkoh", "id": 1882250, "node_id": "MDQ6VXNlcjE4ODIyNTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1882250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mahkoh", "html_url": "https://github.com/mahkoh", "followers_url": "https://api.github.com/users/mahkoh/followers", "following_url": "https://api.github.com/users/mahkoh/following{/other_user}", "gists_url": "https://api.github.com/users/mahkoh/gists{/gist_id}", "starred_url": "https://api.github.com/users/mahkoh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mahkoh/subscriptions", "organizations_url": "https://api.github.com/users/mahkoh/orgs", "repos_url": "https://api.github.com/users/mahkoh/repos", "events_url": "https://api.github.com/users/mahkoh/events{/privacy}", "received_events_url": "https://api.github.com/users/mahkoh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-02-12T14:07:16Z", "updated_at": "2015-03-31T23:48:08Z", "closed_at": "2015-03-31T23:48:08Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Some unsafe functions don't have enough documentation and others say too much. E.g. String::from_raw_parts says that it will call Vec::from_raw_parts. This makes it impossible to use String::from_raw_parts from a deconstructed String unless it is also documented that String is just a Vec wrapper.\n\nList of unsafe public functions:\n- [ ] `alloc::heap                       allocate`\n- [ ] `alloc::heap                       deallocate`\n- [ ] `alloc::heap                       reallocate`\n- [ ] `alloc::heap                       reallocate_inplace`\n- [ ] `collections::btree::node          from_raw`\n- [ ] `collections::btree::node          from_raw_mut`\n- [ ] `collections::string               as_mut_vec`\n- [ ] `collections::string               from_raw_parts`\n- [ ] `collections::string               from_utf8_unchecked`\n- [ ] `collections::vec                  from_raw_buf`\n- [ ] `collections::vec                  from_raw_parts`\n- [ ] `collections::vec                  set_len`\n- [ ] `core::cell                        as_unsafe_cell`\n- [ ] `core::cell                        into_inner`\n- [ ] `core::mem                         copy_lifetime`\n- [ ] `core::mem                         copy_mut_lifetime`\n- [ ] `core::mem                         transmute_copy`\n- [ ] `core::mem                         uninitialized`\n- [ ] `core::mem                         zeroed`\n- [ ] `core::nonzero                     new`\n- [ ] `core::ptr                         offset`\n- [ ] `core::ptr                         read`\n- [ ] `core::ptr                         read_and_zero`\n- [ ] `core::ptr                         replace`\n- [ ] `core::ptr                         swap`\n- [ ] `core::ptr                         write`\n- [ ] `core::ptr                         zero_memory`\n- [ ] `core::slice                       from_raw_buf`\n- [ ] `core::slice                       from_raw_mut_buf`\n- [ ] `core::str::mod                    from_c_str`\n- [ ] `core::str::mod                    from_utf8_unchecked`\n- [ ] `rbml::lib                         unsafe_clone`\n- [ ] `rustc_llvm::diagnostic            unpack`\n- [ ] `rustc_llvm::lib                   debug_loc_to_string`\n- [ ] `rustc_llvm::lib                   static_link_hack_this_sucks`\n- [ ] `rustc_llvm::lib                   twine_to_string`\n- [ ] `std::dynamic_lib                  close`\n- [ ] `std::dynamic_lib                  symbol`\n- [ ] `std::ffi::c_str                   c_str_to_bytes`\n- [ ] `std::ffi::c_str                   c_str_to_bytes_with_nul`\n- [ ] `std::ffi::c_str                   from_vec_unchecked`\n- [ ] `std::os                           pipe`\n- [ ] `std::rt::args                     cleanup`\n- [ ] `std::rt::args                     init`\n- [ ] `std::rt::libunwind                _Unwind_RaiseException`\n- [ ] `std::rt::mod                      cleanup`\n- [ ] `std::rt::unwind                   register`\n- [ ] `std::rt::unwind                   try`\n- [ ] `std::rt::util                     report_overflow`\n- [ ] `std::sync::condvar                destroy`\n- [ ] `std::sync::mpsc::blocking         cast_from_uint`\n- [ ] `std::sync::mpsc::blocking         cast_to_uint`\n- [ ] `std::sync::mpsc::select           add`\n- [ ] `std::sync::mpsc::select           remove`\n- [ ] `std::sync::mpsc::spsc_queue       new`\n- [ ] `std::sys::common::condvar         destroy`\n- [ ] `std::sys::common::condvar         new`\n- [ ] `std::sys::common::condvar         notify_all`\n- [ ] `std::sys::common::condvar         notify_one`\n- [ ] `std::sys::common::condvar         wait`\n- [ ] `std::sys::common::condvar         wait_timeout`\n- [ ] `std::sys::common::mutex           destroy`\n- [ ] `std::sys::common::mutex           lock`\n- [ ] `std::sys::common::mutex           new`\n- [ ] `std::sys::common::mutex           try_lock`\n- [ ] `std::sys::common::mutex           unlock`\n- [ ] `std::sys::common::rwlock          destroy`\n- [ ] `std::sys::common::rwlock          new`\n- [ ] `std::sys::common::rwlock          read`\n- [ ] `std::sys::common::rwlock          read_unlock`\n- [ ] `std::sys::common::rwlock          try_read`\n- [ ] `std::sys::common::rwlock          try_write`\n- [ ] `std::sys::common::rwlock          write`\n- [ ] `std::sys::common::rwlock          write_unlock`\n- [ ] `std::sys::common::stack           get_sp_limit`\n- [ ] `std::sys::common::stack           record_os_managed_stack_bounds`\n- [ ] `std::sys::common::stack           record_rust_managed_stack_bounds`\n- [ ] `std::sys::common::stack           record_sp_limit`\n- [ ] `std::sys::common::thread_local    destroy`\n- [ ] `std::sys::common::thread_local    get`\n- [ ] `std::sys::common::thread_local    set`\n- [ ] `std::sys::common::wtf8            from_u32_unchecked`\n- [ ] `std::sys::common::wtf8            slice_unchecked`\n- [ ] `std::sys::unix::backtrace         _Unwind_FindEnclosingFunction`\n- [ ] `std::sys::unix::backtrace         _Unwind_GetIP`\n- [ ] `std::sys::unix::condvar           destroy`\n- [ ] `std::sys::unix::condvar           new`\n- [ ] `std::sys::unix::condvar           notify_all`\n- [ ] `std::sys::unix::condvar           notify_one`\n- [ ] `std::sys::unix::condvar           wait`\n- [ ] `std::sys::unix::condvar           wait_timeout`\n- [ ] `std::sys::unix::mod               close_sock`\n- [ ] `std::sys::unix::mutex             destroy`\n- [ ] `std::sys::unix::mutex             lock`\n- [ ] `std::sys::unix::mutex             new`\n- [ ] `std::sys::unix::mutex             raw`\n- [ ] `std::sys::unix::mutex             try_lock`\n- [ ] `std::sys::unix::mutex             unlock`\n- [ ] `std::sys::unix::os                get_env_pairs`\n- [ ] `std::sys::unix::os                pipe`\n- [ ] `std::sys::unix::process           kill`\n- [ ] `std::sys::unix::process           killpid`\n- [ ] `std::sys::unix::rwlock            destroy`\n- [ ] `std::sys::unix::rwlock            new`\n- [ ] `std::sys::unix::rwlock            read`\n- [ ] `std::sys::unix::rwlock            read_unlock`\n- [ ] `std::sys::unix::rwlock            try_read`\n- [ ] `std::sys::unix::rwlock            try_write`\n- [ ] `std::sys::unix::rwlock            write`\n- [ ] `std::sys::unix::rwlock            write_unlock`\n- [ ] `std::sys::unix::stack_overflow    cleanup`\n- [ ] `std::sys::unix::stack_overflow    drop_handler`\n- [ ] `std::sys::unix::stack_overflow    init`\n- [ ] `std::sys::unix::stack_overflow    make_handler`\n- [ ] `std::sys::unix::stack_overflow    new`\n- [ ] `std::sys::unix::thread            create`\n- [ ] `std::sys::unix::thread            current`\n- [ ] `std::sys::unix::thread            detach`\n- [ ] `std::sys::unix::thread            init`\n- [ ] `std::sys::unix::thread            join`\n- [ ] `std::sys::unix::thread_local      create`\n- [ ] `std::sys::unix::thread_local      destroy`\n- [ ] `std::sys::unix::thread_local      get`\n- [ ] `std::sys::unix::thread_local      set`\n- [ ] `std::sys::unix::thread            main`\n- [ ] `std::sys::unix::thread            main`\n- [ ] `std::sys::unix::thread            set_name`\n- [ ] `std::sys::unix::thread            yield_now`\n- [ ] `std::sys::windows::condvar        destroy`\n- [ ] `std::sys::windows::condvar        new`\n- [ ] `std::sys::windows::condvar        notify_all`\n- [ ] `std::sys::windows::condvar        notify_one`\n- [ ] `std::sys::windows::condvar        wait`\n- [ ] `std::sys::windows::condvar        wait_timeout`\n- [ ] `std::sys::windows::mod            close_sock`\n- [ ] `std::sys::windows::mutex          destroy`\n- [ ] `std::sys::windows::mutex          lock`\n- [ ] `std::sys::windows::mutex          new`\n- [ ] `std::sys::windows::mutex          raw`\n- [ ] `std::sys::windows::mutex          try_lock`\n- [ ] `std::sys::windows::mutex          unlock`\n- [ ] `std::sys::windows::os             get_env_pairs`\n- [ ] `std::sys::windows::os             pipe`\n- [ ] `std::sys::windows::process        kill`\n- [ ] `std::sys::windows::process        killpid`\n- [ ] `std::sys::windows::rwlock         destroy`\n- [ ] `std::sys::windows::rwlock         new`\n- [ ] `std::sys::windows::rwlock         read`\n- [ ] `std::sys::windows::rwlock         read_unlock`\n- [ ] `std::sys::windows::rwlock         try_read`\n- [ ] `std::sys::windows::rwlock         try_write`\n- [ ] `std::sys::windows::rwlock         write`\n- [ ] `std::sys::windows::rwlock         write_unlock`\n- [ ] `std::sys::windows::stack_overflow cleanup`\n- [ ] `std::sys::windows::stack_overflow init`\n- [ ] `std::sys::windows::stack_overflow make_handler`\n- [ ] `std::sys::windows::stack_overflow new`\n- [ ] `std::sys::windows::thread         create`\n- [ ] `std::sys::windows::thread         current`\n- [ ] `std::sys::windows::thread         detach`\n- [ ] `std::sys::windows::thread         init`\n- [ ] `std::sys::windows::thread         join`\n- [ ] `std::sys::windows::thread_local   create`\n- [ ] `std::sys::windows::thread_local   destroy`\n- [ ] `std::sys::windows::thread_local   get`\n- [ ] `std::sys::windows::thread_local   set`\n- [ ] `std::sys::windows::thread         main`\n- [ ] `std::sys::windows::thread         set_name`\n- [ ] `std::sys::windows::thread         yield_now`\n- [ ] `std::thread_local::mod            get`\n- [ ] `std::thread_local::scoped         get`\n- [ ] `std::thread_local::scoped         set`\n", "closed_by": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/22220/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/22220/timeline", "performed_via_github_app": null, "state_reason": "completed"}