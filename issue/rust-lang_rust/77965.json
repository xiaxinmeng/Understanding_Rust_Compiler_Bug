{"url": "https://api.github.com/repos/rust-lang/rust/issues/77965", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/77965/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/77965/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/77965/events", "html_url": "https://github.com/rust-lang/rust/issues/77965", "id": 722122150, "node_id": "MDU6SXNzdWU3MjIxMjIxNTA=", "number": 77965, "title": "Error messages suggest lifetime annotations for stack references in some cases (E 106 instead of E 515)", "user": {"login": "skade", "id": 47542, "node_id": "MDQ6VXNlcjQ3NTQy", "avatar_url": "https://avatars.githubusercontent.com/u/47542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skade", "html_url": "https://github.com/skade", "followers_url": "https://api.github.com/users/skade/followers", "following_url": "https://api.github.com/users/skade/following{/other_user}", "gists_url": "https://api.github.com/users/skade/gists{/gist_id}", "starred_url": "https://api.github.com/users/skade/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skade/subscriptions", "organizations_url": "https://api.github.com/users/skade/orgs", "repos_url": "https://api.github.com/users/skade/repos", "events_url": "https://api.github.com/users/skade/events{/privacy}", "received_events_url": "https://api.github.com/users/skade/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1596122811, "node_id": "MDU6TGFiZWwxNTk2MTIyODEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-newcomer-roadblock", "name": "D-newcomer-roadblock", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error hard to understand for new users"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-10-15T08:35:12Z", "updated_at": "2020-10-19T18:49:27Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In a training, I was presented with the following code that someone wrote:\r\n\r\n```rust\r\nstruct Point {\r\n    x: i32,\r\n    y: i32,\r\n}\r\n\r\nfn x_diff(a: &Point, b: &Point) -> &i32 {\r\n    let diff = b.x - a.x;\r\n    return &diff;\r\n}\r\n\r\nfn main() {\r\n    let a = Point{ x: 1, y: 2 };\r\n    let b = Point{ x: 3, y: 4 };\r\n    let c = x_diff(&a, &b);\r\n}\r\n```\r\n\r\nI expected to see this happen:\r\n\r\n```\r\nerror[E0515]: cannot return reference to local variable `diff`\r\n --> src/main.rs:8:12\r\n  |\r\n8 |     return &diff;\r\n  |            ^^^^^ returns a reference to data owned by the current function\r\n```\r\n\r\nInstead, this happened:\r\n\r\n```\r\nerror[E0106]: missing lifetime specifier\r\n --> src/main.rs:6:36\r\n  |\r\n6 | fn x_diff(a: &Point, b: &Point) -> &i32 {\r\n  |              ------     ------     ^ expected named lifetime parameter\r\n  |\r\n  = help: this function's return type contains a borrowed value, but the signature does not say whether it is borrowed from `a` or `b`\r\nhelp: consider introducing a named lifetime parameter\r\n  |\r\n6 | fn x_diff<'a>(a: &'a Point, b: &'a Point) -> &'a i32 {\r\n  |          ^^^^    ^^^^^^^^^     ^^^^^^^^^     ^^^\r\n```\r\n\r\n[Playground link](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=910c6a8a48e31af15d8baccba6837a97)\r\n\r\n## Meta\r\n\r\nTested versions: 1.47 and 1.49.0-nightly (2020-10-14 e160e5cb80652bc2afe7).\r\n\r\nI personally think those misdiagnoses may lead to learners being sent down the wrong path and interacting with the lifetime feature in places where it is not needed, leading to confusion.\r\n\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/77965/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/77965/timeline", "performed_via_github_app": null, "state_reason": null}