{"url": "https://api.github.com/repos/rust-lang/rust/issues/10761", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/10761/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/10761/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/10761/events", "html_url": "https://github.com/rust-lang/rust/issues/10761", "id": 23551050, "node_id": "MDU6SXNzdWUyMzU1MTA1MA==", "number": 10761, "title": "write!(wr,\"foo\") is 10% to 72% slower than wr.write(\"foo\".as_bytes())", "user": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 2238476604, "node_id": "MDU6TGFiZWwyMjM4NDc2NjA0", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-fmt", "name": "A-fmt", "color": "f7e101", "default": false, "description": "Area: std::fmt"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2013-12-02T03:54:54Z", "updated_at": "2022-08-11T10:11:34Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This example demonstrates that the trivial case of `write!(wr, \"foo\")` is much slower than calling `wr.write(\"foo\".as_bytes())`:\n\n```\nextern mod extra;\n\nuse std::io::mem::MemWriter;\nuse extra::test::BenchHarness;\n\n#[bench]\nfn bench_write_value(bh: &mut BenchHarness) {\n    bh.iter(|| {\n        let mut mem = MemWriter::new();\n        for _ in range(0, 1000) {\n            mem.write(\"abc\".as_bytes());\n        }\n    });\n}\n\n#[bench]\nfn bench_write_ref(bh: &mut BenchHarness) {\n    bh.iter(|| {\n        let mut mem = MemWriter::new();\n        let wr = &mut mem as &mut Writer;\n        for _ in range(0, 1000) {\n            wr.write(\"abc\".as_bytes());\n        }\n    });\n}\n\n#[bench]\nfn bench_write_macro1(bh: &mut BenchHarness) {\n    bh.iter(|| {\n        let mut mem = MemWriter::new();\n        let wr = &mut mem as &mut Writer;\n        for _ in range(0, 1000) {\n            write!(wr, \"abc\");\n        }\n    });\n}\n\n#[bench]\nfn bench_write_macro2(bh: &mut BenchHarness) {\n    bh.iter(|| {\n        let mut mem = MemWriter::new();\n        let wr = &mut mem as &mut Writer;\n        for _ in range(0, 1000) {\n            write!(wr, \"{}\", \"abc\");\n        }\n    });\n}\n```\n\nWith no optimizations:\n\n```\nrunning 4 tests\ntest bench_write_macro1 ... bench:    280153 ns/iter (+/- 73615)\ntest bench_write_macro2 ... bench:    322462 ns/iter (+/- 24886)\ntest bench_write_ref    ... bench:     79974 ns/iter (+/- 3850)\ntest bench_write_value  ... bench:     78709 ns/iter (+/- 4003)\n\ntest result: ok. 0 passed; 0 failed; 0 ignored; 4 measured\n```\n\nWith `--opt-level=3`:\n\n```\nrunning 4 tests\ntest bench_write_macro1 ... bench:     62397 ns/iter (+/- 5485)\ntest bench_write_macro2 ... bench:     80203 ns/iter (+/- 3355)\ntest bench_write_ref    ... bench:     55275 ns/iter (+/- 5156)\ntest bench_write_value  ... bench:     56273 ns/iter (+/- 7591)\n\ntest result: ok. 0 passed; 0 failed; 0 ignored; 4 measured\n```\n\nIs there anything we can do to improve this? I can think of a couple options, but I bet there are more:\n- Special case no-argument `write!` to compile down into `wr.write(\"foo\".as_bytes())`. If we go this route, it'd be nice to also convert a series of str `write!(\"foo {} {}\", \"bar\", \"baz\")`.\n- Revive `wr.write_str(\"foo\")`. From what I understand, that's being blocked on #6164.\n- Figure out why llvm isn't able to optimize away the `write!` overhead. Are there functions that should be getting inlined that are not? My scatter shot attempt didn't get any results.\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/10761/reactions", "total_count": 4, "+1": 3, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 1}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/10761/timeline", "performed_via_github_app": null, "state_reason": null}