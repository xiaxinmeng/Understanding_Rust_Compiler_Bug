{"url": "https://api.github.com/repos/rust-lang/rust/issues/95271", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/95271/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/95271/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/95271/events", "html_url": "https://github.com/rust-lang/rust/issues/95271", "id": 1179460272, "node_id": "I_kwDOAAsO6M5GTSKw", "number": 95271, "title": "ICE when pattern matching an enum on a let binding within a closure, with `--edition 2021`", "user": {"login": "saiintbrisson", "id": 29989290, "node_id": "MDQ6VXNlcjI5OTg5Mjkw", "avatar_url": "https://avatars.githubusercontent.com/u/29989290?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saiintbrisson", "html_url": "https://github.com/saiintbrisson", "followers_url": "https://api.github.com/users/saiintbrisson/followers", "following_url": "https://api.github.com/users/saiintbrisson/following{/other_user}", "gists_url": "https://api.github.com/users/saiintbrisson/gists{/gist_id}", "starred_url": "https://api.github.com/users/saiintbrisson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saiintbrisson/subscriptions", "organizations_url": "https://api.github.com/users/saiintbrisson/orgs", "repos_url": "https://api.github.com/users/saiintbrisson/repos", "events_url": "https://api.github.com/users/saiintbrisson/events{/privacy}", "received_events_url": "https://api.github.com/users/saiintbrisson/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2022-03-24T12:39:01Z", "updated_at": "2022-06-07T21:44:35Z", "closed_at": "2022-06-07T21:44:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was messing around with the `async_trait` crate and an ICE was raised when I tried to pattern match an enum in the function parameter. I narrowed it down to trying to pattern match a variable that exists outside the scope from within a closure.\r\n\r\n### Code\r\n\r\n```Rust\r\nenum Foo {\r\n    Foo(i32),\r\n}\r\n\r\nfn bar(foo: Foo) {\r\n    || {\r\n        // `let foo = foo;` makes the ICE disappear\r\n        let Foo::Foo(baz) = foo;\r\n    };\r\n}\r\n```\r\n\r\nPlayground link: https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=3465e1787d6792e07772f31154877280\r\n\r\n### Meta\r\nPresent in all three channels, beta, nightly and stable. Only present on 2021 edition.\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.59.0 (9d1b2106e 2022-02-23)\r\nbinary: rustc\r\ncommit-hash: 9d1b2106e23b1abd32fce1f17267604a5102f57a\r\ncommit-date: 2022-02-23\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.59.0\r\nLLVM version: 13.0.0\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nerror: internal compiler error: broken MIR in DefId(0:8 ~ playground[20f3]::bar::{closure#0}) (((*((*_1).0: &i32)).0: i32)): can't project out of PlaceTy { ty: i32, variant_index: None }\r\n --> src/lib.rs:7:22\r\n  |\r\n7 |         let Foo::Foo(baz) = foo;\r\n  |                      ^^^\r\n  |\r\n  = note: delayed at compiler/rustc_borrowck/src/type_check/mod.rs:319:27\r\n\r\nerror: internal compiler error: TyKind::Error constructed but no error reported\r\n  |\r\n  = note: delayed at compiler/rustc_borrowck/src/type_check/mod.rs:794:20\r\n\r\nerror: internal compiler error: TyKind::Error constructed but no error reported\r\n  |\r\n  = note: delayed at /rustc/9d1b2106e23b1abd32fce1f17267604a5102f57a/compiler/rustc_middle/src/ty/relate.rs:390:59\r\n\r\nerror: internal compiler error: broken MIR in DefId(0:7 ~ playground[20f3]::bar) ((_1.0: i32)): can't project out of PlaceTy { ty: Foo, variant_index: None }\r\n --> src/lib.rs:6:5\r\n  |\r\n6 | /     || {\r\n7 | |         let Foo::Foo(baz) = foo;\r\n8 | |     };\r\n  | |_____^\r\n  |\r\n  = note: delayed at compiler/rustc_borrowck/src/type_check/mod.rs:319:27\r\n```\r\n\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nthread 'rustc' panicked at 'no errors encountered even though `delay_span_bug` issued', compiler/rustc_errors/src/lib.rs:1188:13\r\nstack backtrace:\r\n   0: rust_begin_unwind\r\n             at /rustc/9d1b2106e23b1abd32fce1f17267604a5102f57a/library/std/src/panicking.rs:498:5\r\n   1: core::panicking::panic_fmt\r\n             at /rustc/9d1b2106e23b1abd32fce1f17267604a5102f57a/library/core/src/panicking.rs:116:14\r\n   2: core::panicking::panic_display::<&str>\r\n   3: <rustc_errors::HandlerInner>::flush_delayed\r\n   4: <rustc_errors::HandlerInner as core::ops::drop::Drop>::drop\r\n   5: core::ptr::drop_in_place::<rustc_session::parse::ParseSess>\r\n   6: <alloc::rc::Rc<rustc_session::session::Session> as core::ops::drop::Drop>::drop\r\n   7: core::ptr::drop_in_place::<rustc_interface::interface::Compiler>\r\n   8: rustc_span::with_source_map::<core::result::Result<(), rustc_errors::ErrorReported>, rustc_interface::interface::create_compiler_and_run<core::result::Result<(), rustc_errors::ErrorReported>, rustc_driver::run_compiler::{closure#1}>::{closure#1}>\r\n   9: rustc_interface::interface::create_compiler_and_run::<core::result::Result<(), rustc_errors::ErrorReported>, rustc_driver::run_compiler::{closure#1}>\r\n  10: <scoped_tls::ScopedKey<rustc_span::SessionGlobals>>::set::<rustc_interface::util::setup_callbacks_and_run_in_thread_pool_with_globals<rustc_interface::interface::run_compiler<core::result::Result<(), rustc_errors::ErrorReported>, rustc_driver::run_compiler::{closure#1}>::{closure#0}, core::result::Result<(), rustc_errors::ErrorReported>>::{closure#0}::{closure#0}, core::result::Result<(), rustc_errors::ErrorReported>>\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/95271/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/95271/timeline", "performed_via_github_app": null, "state_reason": "completed"}