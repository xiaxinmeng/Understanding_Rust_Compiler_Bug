{"url": "https://api.github.com/repos/rust-lang/rust/issues/149", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/149/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/149/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/149/events", "html_url": "https://github.com/rust-lang/rust/issues/149", "id": 278020, "node_id": "MDU6SXNzdWUyNzgwMjA=", "number": 149, "title": "Native types should have crate-relative identifiers", "user": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2010-08-13T23:53:57Z", "updated_at": "2011-01-27T02:03:57Z", "closed_at": "2011-01-27T02:03:57Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Native type identifiers are global, not crate-relative. This doesn't seem easy to typecheck because of the diamond import problem:\n\nSuppose:\n- Crate A defines a native type foo;\n- Crate B imports A and exports A.foo;\n- Crate C imports A and exports A.foo;\n- Crate D imports B and C and unifies B.foo and C.foo.\n\nB.foo and C.foo won't be considered compatible.\n\nInstead of having one global value set, we could subject them to crate-relative name resolution, just like any other type. In other words, we would have e.g. \"TY_native of crate_id \\* native_id\".\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/149/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/149/timeline", "performed_via_github_app": null, "state_reason": "completed"}