{"url": "https://api.github.com/repos/rust-lang/rust/issues/99053", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/99053/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/99053/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/99053/events", "html_url": "https://github.com/rust-lang/rust/issues/99053", "id": 1298923381, "node_id": "I_kwDOAAsO6M5Na_91", "number": 99053, "title": "Add panics inside calls to transmute that can't possibly be valid", "user": {"login": "5225225", "id": 8584210, "node_id": "MDQ6VXNlcjg1ODQyMTA=", "avatar_url": "https://avatars.githubusercontent.com/u/8584210?v=4", "gravatar_id": "", "url": "https://api.github.com/users/5225225", "html_url": "https://github.com/5225225", "followers_url": "https://api.github.com/users/5225225/followers", "following_url": "https://api.github.com/users/5225225/following{/other_user}", "gists_url": "https://api.github.com/users/5225225/gists{/gist_id}", "starred_url": "https://api.github.com/users/5225225/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/5225225/subscriptions", "organizations_url": "https://api.github.com/users/5225225/orgs", "repos_url": "https://api.github.com/users/5225225/repos", "events_url": "https://api.github.com/users/5225225/events{/privacy}", "received_events_url": "https://api.github.com/users/5225225/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-07-08T11:57:56Z", "updated_at": "2022-07-19T07:11:17Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It would be good to be able to detect things like `(u16, u8) -> NonZeroU32`, or if you have enums with disjoint tags.\n\nI'm not proposing that u8 -> bool panics, as there is at least one value u8 that results in a valid bool.\n\nThis needs some level of symbolic execution or something, unlike the mem::uninit and mem::zeroed checks that this inspired by.\n\nThat being said, a basic case of \"for each byte in the input that can't possibly be init (it's padding), if the matching byte in the output can't be uninit (it's got a validity invariant, or depending on how UCG 71 is decided \"it's not a union\"), panic, would work and probably catch at least a few always incorrect transmutes.\n\nWe might also be able to do this for transmute_copy.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/99053/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/99053/timeline", "performed_via_github_app": null, "state_reason": null}