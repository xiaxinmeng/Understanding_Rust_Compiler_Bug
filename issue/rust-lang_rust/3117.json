{"url": "https://api.github.com/repos/rust-lang/rust/issues/3117", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/3117/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/3117/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/3117/events", "html_url": "https://github.com/rust-lang/rust/issues/3117", "id": 6065778, "node_id": "MDU6SXNzdWU2MDY1Nzc4", "number": 3117, "title": "Add library for \"Shared state is just a mode of use of concurrency\"", "user": {"login": "bblum", "id": 1820515, "node_id": "MDQ6VXNlcjE4MjA1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1820515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bblum", "html_url": "https://github.com/bblum", "followers_url": "https://api.github.com/users/bblum/followers", "following_url": "https://api.github.com/users/bblum/following{/other_user}", "gists_url": "https://api.github.com/users/bblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/bblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bblum/subscriptions", "organizations_url": "https://api.github.com/users/bblum/orgs", "repos_url": "https://api.github.com/users/bblum/repos", "events_url": "https://api.github.com/users/bblum/events{/privacy}", "received_events_url": "https://api.github.com/users/bblum/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9695584, "node_id": "MDU6TGFiZWw5Njk1NTg0", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-concurrency", "name": "A-concurrency", "color": "f7e101", "default": false, "description": "Area: Concurrency related issues."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2012-08-07T00:09:28Z", "updated_at": "2012-08-07T17:39:40Z", "closed_at": "2012-08-07T17:39:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The idea is that you can implement shared-state-between-tasks by having some sort of \"shared state management task\", and using message-passing to access/modify the state by communicating over a protocol.\n\nThis will replace exclusive ARCs as the user-facing 'mutable shared state' primitive. We don't want to expose exclusives because there's no way to avoid potential for memory leaks with circular references. (If there is such a way... let me know!)\n\nProposed interface/design, something like:\n\n```\nproto! access {\n    open:recv<T:const send> {\n        acquired(T) -> held<T>\n    }\n    held:send<T:const send> {\n        release(T) -> open<T>\n        wait -> blocked<T>\n        signal -> held<T>\n    }\n    blocked:recv<T:const send> {\n        wake -> held<T>\n    }\n}\nenum shared_mutable_state<T:const send> = { // Please suggest better names for this!\n    control: pipes::shared_chan<access::server::open<T>>,\n    mut access: option<access::client::open<T>,\n}\nfn clone(&self) -> self;\nfn access(&self, fn(&mut T, condition));\nfn access_read(&self, fn(&T, condition)); // is this right? let alone possible?\nfn wait(&condition);\nfn signal(&condition);\n```\n\nSome comments:\n- The task would be unlinked, failure-wise, from all other tasks. It's managed by a reference count, and exits itself when all its users' handles are destroyed.\n- The circular reference problem is addressed by the `const` restriction - handles are sendable but mutable, so the state library will refuse to manage handles recursively. Users can put singly-linked data structures in these using ~-pointers, but still can not create circularly-linked data structures.\n- (old workaround sketch for weaken_task; irrelevant now but just for bblum's reference: https://gist.github.com/3279078)\n- Might make #2795 unnecessary\n- Reader/writer mode would be really nice, but extremely difficult. Maybe some way of promoting the data to an immutable ARC, internally? That would need to be able to unwrap the arc when the last reader exits. (#3123)\n", "closed_by": {"login": "bblum", "id": 1820515, "node_id": "MDQ6VXNlcjE4MjA1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1820515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bblum", "html_url": "https://github.com/bblum", "followers_url": "https://api.github.com/users/bblum/followers", "following_url": "https://api.github.com/users/bblum/following{/other_user}", "gists_url": "https://api.github.com/users/bblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/bblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bblum/subscriptions", "organizations_url": "https://api.github.com/users/bblum/orgs", "repos_url": "https://api.github.com/users/bblum/repos", "events_url": "https://api.github.com/users/bblum/events{/privacy}", "received_events_url": "https://api.github.com/users/bblum/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/3117/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/3117/timeline", "performed_via_github_app": null, "state_reason": "completed"}