{"url": "https://api.github.com/repos/rust-lang/rust/issues/42903", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/42903/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/42903/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/42903/events", "html_url": "https://github.com/rust-lang/rust/issues/42903", "id": 238403621, "node_id": "MDU6SXNzdWUyMzg0MDM2MjE=", "number": 42903, "title": "Moved value gets dropped if reassigned", "user": {"login": "carols10cents", "id": 193874, "node_id": "MDQ6VXNlcjE5Mzg3NA==", "avatar_url": "https://avatars.githubusercontent.com/u/193874?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carols10cents", "html_url": "https://github.com/carols10cents", "followers_url": "https://api.github.com/users/carols10cents/followers", "following_url": "https://api.github.com/users/carols10cents/following{/other_user}", "gists_url": "https://api.github.com/users/carols10cents/gists{/gist_id}", "starred_url": "https://api.github.com/users/carols10cents/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carols10cents/subscriptions", "organizations_url": "https://api.github.com/users/carols10cents/orgs", "repos_url": "https://api.github.com/users/carols10cents/repos", "events_url": "https://api.github.com/users/carols10cents/events{/privacy}", "received_events_url": "https://api.github.com/users/carols10cents/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 100522, "node_id": "MDU6TGFiZWwxMDA1MjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-crash", "name": "I-crash", "color": "e10c02", "default": false, "description": "Issue: The compiler crashes (SIGSEGV, SIGABRT, etc). Use I-ICE instead when the compiler panics."}, {"id": 147085028, "node_id": "MDU6TGFiZWwxNDcwODUwMjg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-nightly", "name": "regression-from-stable-to-nightly", "color": "e4008a", "default": false, "description": "Performance or correctness regression from stable to nightly."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 267612997, "node_id": "MDU6TGFiZWwyNjc2MTI5OTc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-unsound", "name": "I-unsound", "color": "e11d21", "default": false, "description": "Issue: A soundness hole (worst kind of bug), see: https://en.wikipedia.org/wiki/Soundness"}], "state": "closed", "locked": false, "assignee": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 23, "created_at": "2017-06-25T20:20:59Z", "updated_at": "2017-06-28T11:10:34Z", "closed_at": "2017-06-28T11:10:34Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Updated summary:\r\n\r\nUnder some conditions, drops are generated if a previously moved value is reassigned. This was bisected to #39409.\r\n\r\nIn the following minimised code for example:\r\n\r\n```rust\r\npub struct DropHasLifetime<'a>(&'a ());\r\n\r\nimpl<'a> ::std::ops::Drop for DropHasLifetime<'a> {\r\n    fn drop(&mut self) {}\r\n}\r\n\r\nfn move_and_return<T>(val: T) -> T {\r\n    val\r\n}\r\n\r\nstruct Wrapper<'a>(DropHasLifetime<'a>);\r\n\r\nfn main() {\r\n    static STATIC: () = ();\r\n\r\n    let mut wrapper = Wrapper(DropHasLifetime(&STATIC));\r\n\r\n    wrapper.0 = move_and_return(wrapper.0);\r\n}\r\n```\r\n\r\n`wrapper.0` is dropped twice, see https://github.com/rust-lang/rust/issues/42903#issuecomment-310984911 for complete mir.\r\n\r\n-- Edited by @TimNN\r\n\r\n---\r\n\r\nOriginal Description:\r\n\r\nThere are now 3 instances of strange crashes/segfaults/hangs/error messages that happen using nightly 2017-06-20 (or it might be 2017-06-19) that don't happen with rustc 1.19.0-beta.2 (a175ee509 2017-06-15) reported on [this reddit thread](https://www.reddit.com/r/rust/comments/6j7of2/unit_test_crashing_with_recent_rust_nightly/).\r\n\r\nI wanted to start an issue for discussing and investigating this because I think it's clear there's *something* wrong, but I apologize that we haven't yet gotten an isolated reproduction. I also don't know if these cases are the same bug or different bugs yet, please let me know if I should split this out into more issues. \r\n\r\nOr perhaps these already have issues! I didn't see any reported issues that looked similar enough to these and in the right time frame :-/\r\n\r\n## Incident 1 - unit tests crashing with \"error: An unknown error occurred\"\r\n\r\nVia reddit user fulmicoton:\r\n\r\n> My unit tests have been crashing since rustc 1.19.0-nightly (04145943a 2017-06-19) on MacOS.\r\n>\r\n> Previous version do not crash. Later versions do crash with \"error: An unknown error occurred\"\r\n>\r\n> My project is quite large and contains unsafe code, so this could be a bug that got surfaced by a change in the compiler.\r\n\r\nWill ask if they can share more details.\r\n\r\n## Incident 2 - crates.io's tests (at least one in particular)\r\n\r\nDescribed in pull request rust-lang/crates.io#795, but I'm seeing weirdness on master too. All tests are passing using stable Rust on crates.io master.\r\n\r\nOn Wednesday, @jtgeibel was seeing one of cargo's tests (`krate::index_queries`) intermittently segfaulting and crashing with `(signal: 4, SIGILL: illegal instruction)`\r\n\r\nOn master, I'm seeing the tests fail in a really really bizarre way: it looks like serialized JSON is being corrupted???? The test is making a request to the crates.io server, which returns JSON, and then the test attempts to deserialize the JSON and make assertions on it. The JSON returned by the server is valid JSON, but one of the keys looks like it's set to the value of the beginning of the JSON???? Here's the output that won't deserialize, pretty-printed and a bunch of stuff that looks fine removed to make the problem more obvious, also with comments that I've added here even though JSON doesn't have comments:\r\n\r\n```\r\n{\r\n    \"crates\": [\r\n        {\r\n            // removed lots of stuff in here that looks fine\r\n            \"name\": \"BAR_INDEX_QUERIES\",\r\n            \"repository\": null,\r\n            \"versions\": null,\r\n            \"{\\\"crates\\\":\": \"2017-06-25T16:06:06Z\" // <- LOOK AT THIS KEY\r\n        },\r\n        {\r\n            // removed lots of stuff in here that looks fine\r\n            \"name\": \"foo_index_queries\",\r\n            \"owner_tea\": 0,\r\n            \"repository\": null,\r\n            \"updated_at\": \"2017-06-25T16:06:06Z\", // <- THE WEIRD KEY ABOVE SHOULD LOOK LIKE THIS, this is a good result in the same request response though!!!!\r\n            \"versions\": null\r\n        }\r\n    ],\r\n\r\n```\r\n\r\nTo reproduce:\r\n\r\n- [Check out and set up crates.io](https://github.com/rust-lang/crates.io/blob/master/docs/CONTRIBUTING.md#setting-up-a-development-environment) (involves installing postgres, sorry sorry, if this is too complex, I am happy to run experiments/patches on my setup)\r\n- On master, run `cargo test krate::index_queries`. You've reproduced the problem if you see:\r\n\r\n```\r\nrunning 1 test\r\ntest krate::index_queries ... FAILED\r\n\r\nfailures:\r\n\r\n---- krate::index_queries stdout ----\r\n\tthread 'krate::index_queries' panicked at 'failed to decode: MissingFieldError(\"updated_at\")\r\n{\"crates\":[{\"badges\":[],\"categories\":null,\"description\":null,\"documentation\":null,\"downloads\":0,\"exact_match\":false,\"homepage\":null,\"id\":\"BAR_INDEX_QUERIES\",\"keywords\":null,\"license\":null,\"links\":{\"owner_team\":\"/api/v1/crates/BAR_INDEX_QUERIES/owner_team\",\"owner_user\":\"/api/v1/crates/BAR_INDEX_QUERIES/owner_user\",\"owners\":\"/api/v1/crates/BAR_INDEX_QUERIES/owners\",\"reverse_dependencies\":\"/api/v1/crates/BAR_INDEX_QUERIES/reverse_dependencies\",\"version_downloads\":\"/api/v1/crates/BAR_INDEX_QUERIES/downloads\",\"versions\":\"/api/v1/crates/BAR_INDEX_QUERIES/versions\"},\"max_version\":\"0.99.0\",\"name\":\"BAR_INDEX_QUERIES\",\"repository\":null,\"versions\":null,\"{\\\"crates\\\":\":\"2017-06-25T16:16:04Z\"},{\"badges\":[],\"categories\":null,\"created_at\":\"2017-06-25T16:16:04Z\",\"description\":\"description\",\"documentation\":null,\"exact_match\":false,\"homepage\":null,\"id\":\"foo_index_queries\",\"keywords\":null,\"license\":null,\"links\":{\"owner_team\":\"/api/v1/crates/foo_index_queries/owner_team\",\"owner_user\":\"/api/v1/crates/foo_index_queries/owner_user\",\"owners\":\"/api/v1/crates/foo_index_queries/owners\",\"reverse_dependencies\":\"/api/v1/crates/foo_index_queries/reverse_dependencies\",\"version_downloads\":\"/api/v1/crates/foo_index_queries/downloads\",\"versions\":\"/api/v1/crates/foo_index_queries/versions\"},\"max_version\":\"0.99.0\",\"name\":\"foo_index_queries\",\"owner_tea\":0,\"repository\":null,\"updated_at\":\"2017-06-25T16:16:04Z\",\"versions\":null}],\"meta\":{\"total\":2}}', src/tests/all.rs:169\r\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\r\n\r\n\r\nfailures:\r\n    krate::index_queries\r\n\r\ntest result: FAILED. 0 passed; 1 failed; 0 ignored; 0 measured; 101 filtered out\r\n```\r\n\r\n- If I check out the changes in https://github.com/rust-lang/crates.io/pull/795 and run `cargo test krate::index_queries --verbose`, I alternately get a failure that looks like:\r\n\r\n```\r\nrunning 1 test\r\nNOTICE:  text-search query doesn't contain lexemes: \"\"\r\nNOTICE:  text-search query doesn't contain lexemes: \"\"\r\nNOTICE:  text-search query doesn't contain lexemes: \"\"\r\ntest krate::index_queries ... FAILED\r\n\r\nfailures:\r\n\r\n---- krate::index_queries stdout ----\r\n\tthread 'krate::index_queries' panicked at 'assertion failed: `(left == right)` (left: `0`, right: `1`)', src/tests/krate.rs:171\r\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\r\n\r\n\r\nfailures:\r\n    krate::index_queries\r\n\r\ntest result: FAILED. 0 passed; 1 failed; 0 ignored; 0 measured; 98 filtered out\r\n```\r\n\r\nand a crash that looks like:\r\n\r\n```\r\nrunning 1 test\r\nerror: process didn't exit successfully: `/Users/carolnichols/rust/crates.io/target/debug/deps/all-f4f07d01d0cee92f krate::index_queries` (signal: 11, SIGSEGV: invalid memory reference)\r\n```\r\n\r\n## Incident 3 - trust-dns\r\n\r\nVia @bluejekyll, see their description on this issue: bluejekyll/trust-dns#152\r\n\r\nTo reproduce:\r\n\r\n- Check out https://github.com/bluejekyll/trust-dns\r\n- Run `cargo test test_nsec_query_example_nonet`\r\n\r\n\r\n\r\n\r\n/cc @Mark-Simulacrum @jtgeibel @bluejekyll", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/42903/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/42903/timeline", "performed_via_github_app": null, "state_reason": "completed"}