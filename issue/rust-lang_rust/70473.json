{"url": "https://api.github.com/repos/rust-lang/rust/issues/70473", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/70473/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/70473/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/70473/events", "html_url": "https://github.com/rust-lang/rust/issues/70473", "id": 589134736, "node_id": "MDU6SXNzdWU1ODkxMzQ3MzY=", "number": 70473, "title": "#[repr(transparent)] for str and String", "user": {"login": "RReverser", "id": 557590, "node_id": "MDQ6VXNlcjU1NzU5MA==", "avatar_url": "https://avatars.githubusercontent.com/u/557590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RReverser", "html_url": "https://github.com/RReverser", "followers_url": "https://api.github.com/users/RReverser/followers", "following_url": "https://api.github.com/users/RReverser/following{/other_user}", "gists_url": "https://api.github.com/users/RReverser/gists{/gist_id}", "starred_url": "https://api.github.com/users/RReverser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RReverser/subscriptions", "organizations_url": "https://api.github.com/users/RReverser/orgs", "repos_url": "https://api.github.com/users/RReverser/repos", "events_url": "https://api.github.com/users/RReverser/events{/privacy}", "received_events_url": "https://api.github.com/users/RReverser/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-03-27T13:29:50Z", "updated_at": "2022-09-14T15:39:36Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Similarly to https://github.com/rust-lang/rust/issues/52976, I'd suggest that `str` and `String` should have a guaranteed transparent representation of `[u8]` and `Vec<u8>` correspondingly.\r\n\r\nThey are a newtype wrappers of these types under the hood anyway, and I don't see any reasons why they would need to behave differently in the future, and making them different probably would become a breaking change anyway as it would break things like `String::from_raw_parts` constructed from raw parts of the `Vec`.\r\n\r\nWhile `String::from_raw_parts` already covers most common cases, there are still other cases where it would be desired to have guaranteed representation.\r\n\r\nOne such example is constructing `Rc<String>` from a `Rc<Vec<u8>>` where a library might want to check UTF-8 validity before construction and then `Rc::from_raw` + `Rc::into_raw` one type into another without actually copying the data.\r\n\r\nCurrently this is not possible to do safely because it's not guaranteed that the `*const Vec<u8>` returned from the first `into_raw` is compatible with `*const String` accepted by the second.\r\n\r\nWhile this particular case could be alleviated by adding a special method, there are lots of other containers where such compatibility between these types might be desirable, and I don't see any reasons why it couldn't be guaranteed at a lower level.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/70473/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/70473/timeline", "performed_via_github_app": null, "state_reason": null}