{"url": "https://api.github.com/repos/rust-lang/rust/issues/16645", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/16645/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/16645/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/16645/events", "html_url": "https://github.com/rust-lang/rust/issues/16645", "id": 40770808, "node_id": "MDU6SXNzdWU0MDc3MDgwOA==", "number": 16645, "title": "Document why std docs have many apparent duplicates", "user": {"login": "mdinger", "id": 4156987, "node_id": "MDQ6VXNlcjQxNTY5ODc=", "avatar_url": "https://avatars.githubusercontent.com/u/4156987?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mdinger", "html_url": "https://github.com/mdinger", "followers_url": "https://api.github.com/users/mdinger/followers", "following_url": "https://api.github.com/users/mdinger/following{/other_user}", "gists_url": "https://api.github.com/users/mdinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/mdinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mdinger/subscriptions", "organizations_url": "https://api.github.com/users/mdinger/orgs", "repos_url": "https://api.github.com/users/mdinger/repos", "events_url": "https://api.github.com/users/mdinger/events{/privacy}", "received_events_url": "https://api.github.com/users/mdinger/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2014-08-21T04:06:14Z", "updated_at": "2015-02-16T03:52:28Z", "closed_at": "2015-02-16T03:52:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "[Reddit thread](http://www.reddit.com/r/rust/comments/2e47xy/duplication_in_the_standard_library/):\n\n> Why are data structures generally duplicated in the rust standard library, or at least apparently so in the API documentation?\n> \n> e.g. std::string::String vs. collections::string::String, std:fmt::String vs. core::fmt::String, std::vec::Vec vs. collections::vec::Vec?\n\nI'm not certain which of these the user was referring to but both could be possibly weird at first appearance:\n- Why is `String` in `std::string` and `collections::string` and others\n- Why is `String` in `string` and `Vec` in `vec`\n\nIt was suggested that this be included in a **How to read this documentation** somewhere. If it was written, I would imagine it should be automatically included in the rust std documentation system so that it is included in all rust derived projects like **gfx-rs** and **piston** documentation.\n\ncc: @steveklabnik \n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/16645/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/16645/timeline", "performed_via_github_app": null, "state_reason": "completed"}