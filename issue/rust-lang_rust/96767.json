{"url": "https://api.github.com/repos/rust-lang/rust/issues/96767", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/96767/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/96767/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/96767/events", "html_url": "https://github.com/rust-lang/rust/issues/96767", "id": 1227609233, "node_id": "I_kwDOAAsO6M5JK9SR", "number": 96767, "title": "debug assertion failure: debug_assert!(!erased.needs_infer(), \"{:?}\", erased);", "user": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2022-05-06T09:09:25Z", "updated_at": "2022-05-06T18:24:09Z", "closed_at": "2022-05-06T18:24:09Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n`./src/test/ui/hrtb/issue-94034.rs`\r\n```Rust\r\n// known-bug\r\n// failure-status: 101\r\n// compile-flags: --edition=2021 --crate-type=lib\r\n// rustc-env:RUST_BACKTRACE=0\r\n\r\n// normalize-stderr-test \"thread 'rustc' panicked.*\" -> \"thread 'rustc' panicked\"\r\n// normalize-stderr-test \"note:.*RUST_BACKTRACE=1.*\\n\" -> \"\"\r\n// normalize-stderr-test \"\\nerror: internal compiler error.*\\n\\n\" -> \"\"\r\n// normalize-stderr-test \"note:.*unexpectedly panicked.*\\n\\n\" -> \"\"\r\n// normalize-stderr-test \"note: we would appreciate a bug report.*\\n\\n\" -> \"\"\r\n// normalize-stderr-test \"note: compiler flags.*\\n\\n\" -> \"\"\r\n// normalize-stderr-test \"note: rustc.*running on.*\\n\\n\" -> \"\"\r\n// normalize-stderr-test \"query stack during panic:\\n\" -> \"\"\r\n// normalize-stderr-test \"we're just showing a limited slice of the query stack\\n\" -> \"\"\r\n// normalize-stderr-test \"end of query stack\\n\" -> \"\"\r\n// normalize-stderr-test \"#.*\\n\" -> \"\"\r\n\r\n// This should not ICE.\r\n\r\nuse std::{\r\n    future::Future,\r\n    marker::PhantomData,\r\n    pin::Pin,\r\n    task::{Context, Poll},\r\n};\r\n\r\nmod object {\r\n    use super::*;\r\n\r\n    pub trait Object<'a> {\r\n        type Error;\r\n        type Future: Future<Output = Self>;\r\n        fn create() -> Self::Future;\r\n    }\r\n\r\n    impl<'a> Object<'a> for u8 {\r\n        type Error = ();\r\n        type Future = Pin<Box<dyn Future<Output = Self>>>;\r\n        fn create() -> Self::Future {\r\n            unimplemented!()\r\n        }\r\n    }\r\n\r\n    impl<'a, E, A: Object<'a, Error = E>> Object<'a> for (A,) {\r\n        type Error = ();\r\n        type Future = CustomFut<'a, E, A>;\r\n        fn create() -> Self::Future {\r\n            unimplemented!()\r\n        }\r\n    }\r\n\r\n    pub struct CustomFut<'f, E, A: Object<'f, Error = E>> {\r\n        ph: PhantomData<(A::Future,)>,\r\n    }\r\n\r\n    impl<'f, E, A: Object<'f, Error = E>> Future for CustomFut<'f, E, A> {\r\n        type Output = (A,);\r\n        fn poll(self: Pin<&mut Self>, _: &mut Context<'_>) -> Poll<Self::Output> {\r\n            unimplemented!()\r\n        }\r\n    }\r\n}\r\n\r\nmod async_fn {\r\n    use super::*;\r\n\r\n    pub trait AsyncFn {\r\n        type Future: Future<Output = ()>;\r\n        fn call(&self) -> Self::Future;\r\n    }\r\n\r\n    impl<F, Fut> AsyncFn for F\r\n    where\r\n        F: Fn() -> Fut,\r\n        Fut: Future<Output = ()>,\r\n    {\r\n        type Future = Fut;\r\n        fn call(&self) -> Self::Future {\r\n            (self)()\r\n        }\r\n    }\r\n}\r\n\r\npub async fn test() {\r\n    use self::{async_fn::AsyncFn, object::Object};\r\n\r\n    async fn create<T: Object<'static>>() {\r\n        T::create().await;\r\n    }\r\n\r\n    async fn call_async_fn(inner: impl AsyncFn) {\r\n        inner.call().await;\r\n    }\r\n\r\n    call_async_fn(create::<(u8,)>).await;\r\n}\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\n50cf76c24bf6f266ca6d253af82a6cabadcad0f5\r\n```\r\n\r\n### Error output\r\n`rustc  ./src/test/ui/hrtb/issue-94034.rs   --edition=2021 --crate-type lib`\r\n```\r\n<output>\r\n```\r\n\r\n\r\n", "closed_by": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/96767/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/96767/timeline", "performed_via_github_app": null, "state_reason": "completed"}