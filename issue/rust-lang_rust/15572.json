{"url": "https://api.github.com/repos/rust-lang/rust/issues/15572", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/15572/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/15572/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/15572/events", "html_url": "https://github.com/rust-lang/rust/issues/15572", "id": 37542286, "node_id": "MDU6SXNzdWUzNzU0MjI4Ng==", "number": 15572, "title": "circular reference counted pointer is never freed", "user": {"login": "giselher", "id": 364893, "node_id": "MDQ6VXNlcjM2NDg5Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/364893?v=4", "gravatar_id": "", "url": "https://api.github.com/users/giselher", "html_url": "https://github.com/giselher", "followers_url": "https://api.github.com/users/giselher/followers", "following_url": "https://api.github.com/users/giselher/following{/other_user}", "gists_url": "https://api.github.com/users/giselher/gists{/gist_id}", "starred_url": "https://api.github.com/users/giselher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/giselher/subscriptions", "organizations_url": "https://api.github.com/users/giselher/orgs", "repos_url": "https://api.github.com/users/giselher/repos", "events_url": "https://api.github.com/users/giselher/events{/privacy}", "received_events_url": "https://api.github.com/users/giselher/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-07-10T08:39:22Z", "updated_at": "2014-07-10T14:49:29Z", "closed_at": "2014-07-10T14:49:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi I tried to check if circular reference counted pointer are somehow freed in rust, because it is sometimes possible to accidentally create such constructs. Sadly it doesn't seem to be the case.\n\nHere is the code I used to test this (rust playpen): http://is.gd/I40LCd\n\n``` rust\n#![feature(unsafe_destructor)]\n\nuse std::rc::Rc;\nuse std::cell::RefCell;\n\nstruct Object {\n    sub: RefCell<Option<Rc<Object>>>\n}\n\n#[unsafe_destructor]\nimpl Drop for Object {\n    fn drop(&mut self) {\n        println!(\"Dropped\");\n    }\n}\n\nfn main() {\n\n    let obj = Rc::new(Object { sub: RefCell::new(None) });\n\n    (*obj.sub.borrow_mut()) = Some(obj.clone());\n\n    println!(\"Hello, world!\")\n}\n```\n\nI am sorry if this is a duplicate or if I did test it wrong. I don't have access to valgrind right now.\n", "closed_by": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/15572/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/15572/timeline", "performed_via_github_app": null, "state_reason": "completed"}