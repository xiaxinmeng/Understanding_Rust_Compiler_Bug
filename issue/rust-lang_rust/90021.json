{"url": "https://api.github.com/repos/rust-lang/rust/issues/90021", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/90021/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/90021/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/90021/events", "html_url": "https://github.com/rust-lang/rust/issues/90021", "id": 1029329875, "node_id": "I_kwDOAAsO6M49WlPT", "number": 90021, "title": "Latest parallel compiler ICEs on large crates - attempt to steal from stolen value", "user": {"login": "Ten0", "id": 9094255, "node_id": "MDQ6VXNlcjkwOTQyNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/9094255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ten0", "html_url": "https://github.com/Ten0", "followers_url": "https://api.github.com/users/Ten0/followers", "following_url": "https://api.github.com/users/Ten0/following{/other_user}", "gists_url": "https://api.github.com/users/Ten0/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ten0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ten0/subscriptions", "organizations_url": "https://api.github.com/users/Ten0/orgs", "repos_url": "https://api.github.com/users/Ten0/repos", "events_url": "https://api.github.com/users/Ten0/events{/privacy}", "received_events_url": "https://api.github.com/users/Ten0/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 891133401, "node_id": "MDU6TGFiZWw4OTExMzM0MDE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-parallel-queries", "name": "A-parallel-queries", "color": "f7e101", "default": false, "description": "Area: Parallel query execution"}, {"id": 1576178387, "node_id": "MDU6TGFiZWwxNTc2MTc4Mzg3", "url": "https://api.github.com/repos/rust-lang/rust/labels/WG-compiler-parallel", "name": "WG-compiler-parallel", "color": "c2e0c6", "default": false, "description": "Working group working on parallelizing the compiler"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-10-18T16:17:53Z", "updated_at": "2023-05-15T04:13:02Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "### Meta\r\n[Self-compiled](https://rustc-dev-guide.rust-lang.org/building/how-to-build-and-run.html) latest (5dab47dcd8267b8769421b46532414ec36d625e3) Rust [with parallel compilation enabled](https://rustc-dev-guide.rust-lang.org/parallel-rustc.html):\r\n\r\n`config.toml`:\r\n```toml\r\n# Includes one of the default files in src/bootstrap/defaults\r\nprofile = \"user\"\r\nchangelog-seen = 2\r\n[rust]\r\nparallel-compiler = true\r\n[llvm]\r\ndownload-ci-llvm = true\r\n```\r\n\r\n<details><summary>`./x.py build --stage 2 compiler/rustc`</summary><p>\r\n\r\n```\r\nCopying stage1 rustc from stage1 (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu / x86_64-unknown-linux-gnu)\r\nAssembling stage2 compiler (x86_64-unknown-linux-gnu)\r\nUplifting stage1 std (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu)\r\nCopying stage2 std from stage1 (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu / x86_64-unknown-linux-gnu)\r\nUplifting stage1 rustc (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu)\r\nCopying stage2 rustc from stage1 (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu / x86_64-unknown-linux-gnu)\r\nAssembling stage3 compiler (x86_64-unknown-linux-gnu)\r\nthread 'main' panicked at 'fs::read(stamp) failed with No such file or directory (os error 2) (\"/home/ten/Projects/rust/build/x86_64-unknown-linux-gnu/stage2-rustc/x86_64-unknown-linux-gnu/release/.librustc.stamp\")', src/bootstrap/lib.rs:1296:24\r\nstack backtrace:\r\n   0: rust_begin_unwind\r\n             at /rustc/e784c962ea252f0874a4305168077e7048cb39e9/library/std/src/panicking.rs:517:5\r\n   1: core::panicking::panic_fmt\r\n             at /rustc/e784c962ea252f0874a4305168077e7048cb39e9/library/core/src/panicking.rs:101:14\r\n   2: bootstrap::Build::read_stamp_file\r\n             at ./src/bootstrap/lib.rs:1296:24\r\n   3: <bootstrap::compile::Assemble as bootstrap::builder::Step>::run\r\n             at ./src/bootstrap/compile.rs:1107:27\r\n   4: bootstrap::builder::Builder::ensure\r\n             at ./src/bootstrap/builder.rs:1574:23\r\n   5: bootstrap::builder::Builder::compiler\r\n             at ./src/bootstrap/builder.rs:627:9\r\n   6: <bootstrap::compile::Assemble as bootstrap::builder::Step>::make_run\r\n             at ./src/bootstrap/compile.rs:1034:30\r\n   7: bootstrap::builder::StepDescription::maybe_run\r\n             at ./src/bootstrap/builder.rs:175:13\r\n   8: bootstrap::builder::StepDescription::run\r\n             at ./src/bootstrap/builder.rs:231:21\r\n   9: bootstrap::builder::Builder::run_step_descriptions\r\n             at ./src/bootstrap/builder.rs:619:9\r\n  10: bootstrap::builder::Builder::execute_cli\r\n             at ./src/bootstrap/builder.rs:599:9\r\n  11: bootstrap::Build::build\r\n             at ./src/bootstrap/lib.rs:624:13\r\n  12: bootstrap::main\r\n             at ./src/bootstrap/bin/main.rs:33:5\r\n  13: core::ops::function::FnOnce::call_once\r\n             at /rustc/e784c962ea252f0874a4305168077e7048cb39e9/library/core/src/ops/function.rs:227:5\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\nBuild completed unsuccessfully in 0:03:53\r\n```\r\n\r\n</p></details>\r\n\r\n`rustc +stage2 --version --verbose`:\r\n```\r\nrustc 1.58.0-dev\r\nbinary: rustc\r\ncommit-hash: unknown (but actually 5dab47dcd8267b8769421b46532414ec36d625e3)\r\ncommit-date: unknown (but actually Mon Oct 18 06:46:03 2021 +0000)\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.58.0-dev\r\nLLVM version: 13.0.0\r\n```\r\n\r\n### Code\r\n\r\nUnfortunately, I didn't manage to reproduce this consistently because the issue appears to be non-deterministic and didn't happen when trying to reproduce it on a minimal project.\r\nBest I can recommend right now is to try to compile a _large project_ with `-Z threads=n` with `n` > 1, which causes this on diverse amount of crates, but doesn't happen with `n` = 1, nor without `-Zthreads=n` set in RUSTFLAGS.\r\n\r\n### Error output\r\n```bash\r\nRUSTFLAGS=\"-Zthreads=10\" cargo +stage2 check\r\n```\r\n```\r\nthread 'rustc' panicked at 'attempt to steal from stolen value', compiler/rustc_mir_transform/src/lib.rs:622:33\r\nstack backtrace:\r\n   0: rust_begin_unwind\r\n   1: core::panicking::panic_fmt\r\n   2: core::panicking::panic_display\r\n   3: core::option::expect_failed\r\n   4: rustc_mir_transform::promoted_mir\r\n   5: core::ops::function::FnOnce::call_once\r\n   6: rustc_rayon_core::tlv::with\r\n   7: rustc_query_system::query::plumbing::try_execute_query\r\n   8: rustc_query_system::query::plumbing::get_query\r\n   9: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &F>::call_mut\r\n  10: rustc_rayon::iter::plumbing::bridge_producer_consumer::helper\r\n  11: rustc_rayon_core::registry::in_worker\r\n  12: rustc_rayon::iter::plumbing::bridge_producer_consumer::helper\r\n  13: rustc_rayon_core::job::StackJob<L,F,R>::run_inline\r\n  14: rustc_rayon_core::registry::in_worker\r\n  15: rustc_rayon::iter::plumbing::bridge_producer_consumer::helper\r\n  16: rustc_rayon_core::registry::in_worker\r\n  17: rustc_rayon::iter::plumbing::bridge_producer_consumer::helper\r\n  18: rustc_rayon_core::registry::in_worker\r\n  19: rustc_rayon::iter::plumbing::bridge_producer_consumer::helper\r\n  20: <rustc_rayon::vec::IntoIter<T> as rustc_rayon::iter::IndexedParallelIterator>::with_producer\r\n  21: rustc_metadata::rmeta::encoder::prefetch_mir\r\n  22: rustc_rayon_core::registry::in_worker\r\n  23: <rustc_rayon_core::job::StackJob<L,F,R> as rustc_rayon_core::job::Job>::execute\r\n  24: rustc_rayon_core::registry::WorkerThread::wait_until_cold\r\n  25: rustc_rayon_core::registry::ThreadBuilder::run\r\n  26: scoped_tls::ScopedKey<T>::set\r\n  27: crossbeam_utils::thread::ScopedThreadBuilder::spawn::{{closure}}\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.58.0-dev running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -Z threads=10 -C embed-bitcode=no -C debuginfo=2 --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [promoted_mir] optimizing promoted MIR for `token::<impl at /home/ten/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.15.44/src/token.rs:281:13: 283:14>::hash`\r\nend of query stack\r\nerror: build failed\r\n```\r\n\r\nThe `query stack` and backtrace change over runs, but the end error stays the same, e.g.:\r\n```\r\nthread 'rustc' panicked at 'attempt to steal from stolen value', compiler/rustc_mir_transform/src/lib.rs:622:33\r\nstack backtrace:\r\n   0: rust_begin_unwind\r\n   1: core::panicking::panic_fmt\r\n   2: core::panicking::panic_display\r\n   3: core::option::expect_failed\r\n   4: rustc_mir_transform::promoted_mir\r\n   5: core::ops::function::FnOnce::call_once\r\n   6: rustc_rayon_core::tlv::with\r\n   7: rustc_query_system::query::plumbing::try_execute_query\r\n   8: rustc_query_system::query::plumbing::get_query\r\n   9: rustc_metadata::rmeta::encoder::EncodeContext::encode_crate_root\r\n  10: rustc_metadata::rmeta::encoder::encode_metadata_impl\r\n  11: rustc_rayon_core::registry::in_worker\r\n  12: rustc_metadata::rmeta::encoder::encode_metadata\r\n  13: rustc_interface::passes::start_codegen\r\n  14: rustc_rayon_core::tlv::with\r\n  15: rustc_interface::queries::Queries::ongoing_codegen\r\n  16: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n  17: rustc_span::with_source_map\r\n  18: rustc_interface::interface::create_compiler_and_run\r\n  19: std::panicking::try\r\n  20: <rustc_rayon_core::job::StackJob<L,F,R> as rustc_rayon_core::job::Job>::execute\r\n  21: rustc_rayon_core::registry::WorkerThread::wait_until_cold\r\n  22: rustc_rayon_core::registry::ThreadBuilder::run\r\n  23: scoped_tls::ScopedKey<T>::set\r\n  24: crossbeam_utils::thread::ScopedThreadBuilder::spawn::{{closure}}\r\n```\r\n\r\n# Context\r\n\r\nI have a crate that spends one minute in each cargo check in:\r\nhttps://github.com/rust-lang/rust/blob/b27661eb33c74cb514dba059b47d86b6582ac1c2/compiler/rustc_typeck/src/check/mod.rs#L920-L922\r\n\r\nThis makes getting feedback in the IDE super slow. However I'm coding on a machine with a ThreadRipper 3970X so if I thought if I used the parallel-enabled compiler just for the cargo check in my IDE I might bring that down to just a few seconds for getting feedback (and still use the regular stable compiler when the binary is required).\r\nHence this attempt.\r\n\r\nThat being said it wouldn't be so slow if it didn't attempt to re-typecheck every body, even those that weren't touched.\r\nNot sure what's the blocker to this, but I'd love to see some reference on that topic if anyone has any.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/90021/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/90021/timeline", "performed_via_github_app": null, "state_reason": null}