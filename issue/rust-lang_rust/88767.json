{"url": "https://api.github.com/repos/rust-lang/rust/issues/88767", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/88767/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/88767/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/88767/events", "html_url": "https://github.com/rust-lang/rust/issues/88767", "id": 991596678, "node_id": "MDU6SXNzdWU5OTE1OTY2Nzg=", "number": 88767, "title": "unlikely intrinsic does not work", "user": {"login": "stepancheg", "id": 28969, "node_id": "MDQ6VXNlcjI4OTY5", "avatar_url": "https://avatars.githubusercontent.com/u/28969?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stepancheg", "html_url": "https://github.com/stepancheg", "followers_url": "https://api.github.com/users/stepancheg/followers", "following_url": "https://api.github.com/users/stepancheg/following{/other_user}", "gists_url": "https://api.github.com/users/stepancheg/gists{/gist_id}", "starred_url": "https://api.github.com/users/stepancheg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stepancheg/subscriptions", "organizations_url": "https://api.github.com/users/stepancheg/orgs", "repos_url": "https://api.github.com/users/stepancheg/repos", "events_url": "https://api.github.com/users/stepancheg/events{/privacy}", "received_events_url": "https://api.github.com/users/stepancheg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2021-09-08T23:01:32Z", "updated_at": "2023-04-05T17:35:34Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Code:\r\n\r\n```\r\n#![feature(core_intrinsics)]\r\n\r\nuse std::intrinsics::unlikely;\r\n\r\nextern \"C\" {\r\n    fn aaa() -> u32;\r\n    fn bbb() -> u32;\r\n}\r\n\r\npub unsafe fn foo(a: bool) -> u32 {\r\n    if unlikely(a) { aaa() } else { bbb() }\r\n}\r\n```\r\n\r\n[Compiler explorer](https://rust.godbolt.org/z/n3zqcbYd1)\r\n\r\nrustc 1.57.0-nightly (fdf65053e 2021-09-07)\r\n\r\nGenerates assembly:\r\n\r\n```\r\nexample::foo:\r\n        test    edi, edi\r\n        je      .LBB0_1\r\n        jmp     qword ptr [rip + aaa@GOTPCREL]\r\n.LBB0_1:\r\n        jmp     qword ptr [rip + bbb@GOTPCREL]\r\n```\r\n\r\nIf `unlikely` worked, call to `aaa` would be after jump (it works if `aaa` is marked `#[cold]` for example).\r\n\r\nUnlikely is present in Rust MIR:\r\n\r\n```\r\nfn foo(_1: bool) -> u32 {\r\n    debug a => _1;                       // in scope 0 at /app/example.rs:10:19: 10:20\r\n    let mut _0: u32;                     // return place in scope 0 at /app/example.rs:10:31: 10:34\r\n    let mut _2: bool;                    // in scope 0 at /app/example.rs:11:8: 11:19\r\n    let mut _3: bool;                    // in scope 0 at /app/example.rs:11:17: 11:18\r\n\r\n    bb0: {\r\n        _3 = _1;                         // scope 0 at /app/example.rs:11:17: 11:18\r\n        _2 = unlikely(move _3) -> bb1;   // scope 0 at /app/example.rs:11:8: 11:19\r\n                                         // mir::Constant\r\n                                         // + span: /app/example.rs:11:8: 11:16\r\n                                         // + literal: Const { ty: extern \"rust-intrinsic\" fn(bool) -> bool {std::intrinsics::unlikely}, val: Value(Scalar(<ZST>)) }\r\n    }\r\n\r\n    bb1: {\r\n        switchInt(move _2) -> [false: bb3, otherwise: bb2]; // scope 0 at /app/example.rs:11:8: 11:19\r\n    }\r\n\r\n    bb2: {\r\n        _0 = aaa() -> bb4;               // scope 0 at /app/example.rs:11:22: 11:27\r\n                                         // mir::Constant\r\n                                         // + span: /app/example.rs:11:22: 11:25\r\n                                         // + literal: Const { ty: unsafe extern \"C\" fn() -> u32 {aaa}, val: Value(Scalar(<ZST>)) }\r\n    }\r\n\r\n    bb3: {\r\n        _0 = bbb() -> bb4;               // scope 0 at /app/example.rs:11:37: 11:42\r\n                                         // mir::Constant\r\n                                         // + span: /app/example.rs:11:37: 11:40\r\n                                         // + literal: Const { ty: unsafe extern \"C\" fn() -> u32 {bbb}, val: Value(Scalar(<ZST>)) }\r\n    }\r\n\r\n    bb4: {\r\n        return;                          // scope 0 at /app/example.rs:12:2: 12:2\r\n    }\r\n}\r\n```\r\n\r\nbut it is lost in LLVM IR:\r\n\r\n```\r\ndefine i32 @_ZN7example3foo17hdda9a45d5ad75400E(i1 zeroext %a) unnamed_addr #0 !dbg !6 {\r\nstart:\r\n  br i1 %a, label %bb2, label %bb3, !dbg !10\r\n\r\nbb3:                                              ; preds = %start\r\n  %0 = tail call i32 @bbb(), !dbg !11\r\n  br label %bb4, !dbg !11\r\n\r\nbb2:                                              ; preds = %start\r\n  %1 = tail call i32 @aaa(), !dbg !12\r\n  br label %bb4, !dbg !12\r\n\r\nbb4:                                              ; preds = %bb3, %bb2\r\n  %.0 = phi i32 [ %1, %bb2 ], [ %0, %bb3 ], !dbg !13\r\n  ret i32 %.0, !dbg !14\r\n}\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/88767/reactions", "total_count": 2, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 2}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/88767/timeline", "performed_via_github_app": null, "state_reason": null}