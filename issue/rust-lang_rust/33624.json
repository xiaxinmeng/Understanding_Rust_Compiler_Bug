{"url": "https://api.github.com/repos/rust-lang/rust/issues/33624", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/33624/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/33624/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/33624/events", "html_url": "https://github.com/rust-lang/rust/issues/33624", "id": 154799974, "node_id": "MDU6SXNzdWUxNTQ3OTk5NzQ=", "number": 33624, "title": "method has an incompatible type for trait due to lifetimes has too wide a span", "user": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-05-13T21:04:33Z", "updated_at": "2022-06-08T21:52:12Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "[For](https://play.rust-lang.org/?gist=4babb6ed0153e47f82c965a9feafbb28&version=nightly)\r\n\r\n``` rust\r\ntrait A<'a> {\r\n    fn a<'b>(self) -> Box<A<'b>>;\r\n}\r\n\r\nstruct C;\r\n\r\nimpl<'a> A<'a> for C {\r\n    fn a<'b>(self) -> Box<A<'a>>{}\r\n}\r\n```\r\n\r\nit would be much more useful if we spanned the offending lifetime rather than the whole method: i.e. like this\r\n\r\n```\r\nerror: method `a` has an incompatible type for trait:\r\n expected bound lifetime parameter 'b,\r\n    found concrete lifetime [--explain E0053]\r\n --> <anon>:8:5\r\n8 |>     fn a<'b>(self) -> Box<A<'a>>{}\r\n  |>                             ^^\r\n\r\n```\r\n\r\ninstead of \r\n\r\n```\r\nerror: method `a` has an incompatible type for trait:\r\n expected bound lifetime parameter 'b,\r\n    found concrete lifetime [--explain E0053]\r\n --> <anon>:8:5\r\n8 |>     fn a<'b>(self) -> Box<A<'a>>{}\r\n  |>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n```\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/33624/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/33624/timeline", "performed_via_github_app": null, "state_reason": null}