{"url": "https://api.github.com/repos/rust-lang/rust/issues/30535", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/30535/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/30535/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/30535/events", "html_url": "https://github.com/rust-lang/rust/issues/30535", "id": 123610810, "node_id": "MDU6SXNzdWUxMjM2MTA4MTA=", "number": 30535, "title": "rustc panics when compiling code", "user": {"login": "supr", "id": 588566, "node_id": "MDQ6VXNlcjU4ODU2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/588566?v=4", "gravatar_id": "", "url": "https://api.github.com/users/supr", "html_url": "https://github.com/supr", "followers_url": "https://api.github.com/users/supr/followers", "following_url": "https://api.github.com/users/supr/following{/other_user}", "gists_url": "https://api.github.com/users/supr/gists{/gist_id}", "starred_url": "https://api.github.com/users/supr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/supr/subscriptions", "organizations_url": "https://api.github.com/users/supr/orgs", "repos_url": "https://api.github.com/users/supr/repos", "events_url": "https://api.github.com/users/supr/events{/privacy}", "received_events_url": "https://api.github.com/users/supr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-12-23T06:55:45Z", "updated_at": "2016-01-23T07:44:27Z", "closed_at": "2016-01-23T07:44:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "rustc crashes when compiling the following source code.\n\n``` rust\nuse std::env;\nuse std::process;\nuse std::str;\nuse std::io::{Error, Read};\n\nextern crate hyper;\nuse hyper::client::Client;\nuse hyper::header::UserAgent;\nuse hyper::method::Method;\n\nextern crate getopts;\nuse getopts::Options;\n\n#[macro_use]\nextern crate log;\nextern crate env_logger;\n\nextern crate xml;\nuse xml::attribute::OwnedAttribute;\nuse xml::reader::{EventReader, XmlEvent};\n\ntype IoError = std::io::Error;\ntype HyperError = hyper::error::Error;\ntype ParseError = xml::reader::Error;\n\nconst SPEEDTEST_CONFIG:&'static str = \"https://www.speedtest.net/speedtest-config.php\";\n\nstruct Config {\n    client: Vec<OwnedAttribute>,\n    times: Vec<OwnedAttribute>,\n    download: Vec<OwnedAttribute>,\n    upload: Vec<OwnedAttribute>\n}\n\n#[derive(Debug)]\nenum SpeedtestError {\n    Http(HyperError),\n    Xml(ParseError),\n}\n\nimpl From<ParseError> for SpeedtestError {\n    fn from(err: ParseError) -> SpeedtestError {\n        SpeedtestError::Xml(err)\n    }\n}\n\nimpl From<HyperError> for SpeedtestError {\n    fn from(err: HyperError) -> SpeedtestError {\n        SpeedtestError::Http(err)\n    }\n}\n\nfn print_usage(program: &str, opts: Options) {\n    let brief = format!(\"Usage: {} [options]\", program);\n    println!(\"{}\", opts.usage(&brief));\n}\n\nfn find_xml_key<'r>(parser: &mut EventReader<&'r [u8]>, key: &str) -> Result<XmlEvent::StartElement, SpeedtestError> {\n    loop {\n        let evnt = parser.next();\n        match evnt {\n            Ok(XmlEvent::StartElement { ref name, .. }) if name.local_name == key => {\n                return Ok(evnt.unwrap());\n            },\n            Ok(XmlEvent::StartDocument { .. }) | Ok(XmlEvent::StartElement { .. }) | Ok(XmlEvent::EndElement { .. }) | Ok(XmlEvent::EndDocument) | Ok(XmlEvent::ProcessingInstruction { ..}) | Ok(XmlEvent::CData(_)) | Ok(XmlEvent::Comment(_)) | Ok(XmlEvent::Characters(_)) | Ok(XmlEvent::Whitespace(_)) => {\n                continue;\n            },\n            Err(e) => {\n                return Err(SpeedtestError::from(e)); \n            }\n        }\n    }\n}\n\nfn find_xml_key_attrs<'r>(mut parser: EventReader<&'r [u8]>, key: &str) -> Result<Vec<OwnedAttribute>, SpeedtestError> {\n    match find_xml_key(&mut parser, key) {\n        Ok(XmlEvent::StartElement { name, attributes, .. }) => { return Ok(attributes); },\n        Err(e) => { return Err(e); }\n    }\n}\n\nfn get_config() -> Result<Config, SpeedtestError> {\n    //Gather config data from speedtest\n    let resp = try!(Client::new().request(Method::Get, SPEEDTEST_CONFIG).header(UserAgent(\"Mozilla/5.0\".to_owned())).send());\n    info!(\"code={}; headers={};\", resp.status, resp.headers);\n    let mut body = String::new();\n    resp.read_to_string(&mut body);\n\n    Ok(Config {\n        client: try!(find_xml_key_attrs(EventReader::from_str(&*body), \"client\")),\n        times: try!(find_xml_key_attrs(EventReader::from_str(&*body), \"times\")),\n        download: try!(find_xml_key_attrs(EventReader::from_str(&*body), \"download\")),\n        upload: try!(find_xml_key_attrs(EventReader::from_str(&*body), \"download\"))\n    })\n}\n\nfn main() {\n    env_logger::init().unwrap();\n\n    let args: Vec<String> = env::args().collect();\n    let program = args[0].clone();\n\n    let mut opts = Options::new();\n    opts.optflag(\"h\", \"help\", \"Print this help\");\n    opts.optflag(\"l\", \"list\", \"Display a list of speedtest.net servers sorted by distance\");\n    opts.optopt(\"s\", \"server\", \"Specify a server ID to test against\", \"SERVER\");\n    opts.optopt(\"t\", \"timeout\", \"HTTP timeout in seconds. Default 10\", \"TIMEOUT\");\n\n    let matches = match opts.parse(&args[1..]) {\n        Ok(m) => m,\n        Err(e) => { error!(\"{}\", e.to_string());  process::exit(1); }\n    };\n\n    if matches.opt_present(\"h\") {\n        print_usage(&program, opts);\n        process::exit(0);\n    }\n\n    let timeout: u16 = matches.opt_str(\"t\").unwrap_or(\"10\".to_string()).parse::<u16>().unwrap_or(10u16);\n    let server_id: u16 = matches.opt_str(\"s\").unwrap_or(\"0\".to_string()).parse::<u16>().unwrap_or(0u16);\n\n    info!(\"Timeout is {}\", timeout);\n    info!(\"Server ID is {}\", server_id);\n\n    get_config();\n}\n```\n\nI expect this to compile or report error. Instead the compiler crashed.\n\n``` text\n`rustc --version --verbose`:\nrustc 1.5.0 (3d7cd77e4 2015-12-04)\nbinary: rustc\ncommit-hash: 3d7cd77e442ce34eaac8a176ae8be17669498ebc\ncommit-date: 2015-12-04\nhost: x86_64-unknown-linux-gnu\nrelease: 1.5.0\n\nBacktrace:\nthread 'rustc' panicked at 'called `Option::unwrap()` on a `None` value', ../src/libcore/option.rs:366\nstack backtrace:\n   1:     0x7fa59f57fd70 - sys::backtrace::tracing::imp::write::h1fe79f3711caca0eUnt\n   2:     0x7fa59f586685 - panicking::log_panic::_<closure>::closure.39701\n   3:     0x7fa59f5860f5 - panicking::log_panic::hffc6d029fed602571nx\n   4:     0x7fa59f549663 - sys_common::unwind::begin_unwind_inner::h7045c1c64d9ab8edYgs\n   5:     0x7fa59f549fc8 - sys_common::unwind::begin_unwind_fmt::h40ee994bfe85f7a54fs\n   6:     0x7fa59f57dc31 - rust_begin_unwind\n   7:     0x7fa59f5d126f - panicking::panic_fmt::h4c8d12e3c05f3b8cZEK\n   8:     0x7fa59f5cb818 - panicking::panic::hb8a57f0c8013c90awDK\n   9:     0x7fa59e1eb8dc - astconv::finish_resolving_def_to_ty::hde6eb3c2566dd2a9XFw\n  10:     0x7fa59e1b58c5 - astconv::ast_ty_to_ty::hb9cc74773e37aba2rHw\n  11:     0x7fa59e1f6591 - astconv::ast_ty_arg_to_ty::h2acf49059af01d00Wyw\n  12:     0x7fa59e1f6202 - vec::_<impl>::from_iter::from_iter::h16226200009031787591\n  13:     0x7fa59e1f3da3 - astconv::convert_angle_bracketed_parameters::h4bb343d42f9c99b8sBv\n  14:     0x7fa59e1b2ef5 - astconv::ast_path_substs_for_ty::hecc70e907c9ec82brhv\n  15:     0x7fa59e1fdae8 - astconv::ast_path_to_ty::h91671619d7cd0b32k1v\n  16:     0x7fa59e1e9fa2 - astconv::finish_resolving_def_to_ty::hde6eb3c2566dd2a9XFw\n  17:     0x7fa59e1b58c5 - astconv::ast_ty_to_ty::hb9cc74773e37aba2rHw\n  18:     0x7fa59e1fa081 - astconv::convert_ty_with_lifetime_elision::h0f0ad7df906cca85xGv\n  19:     0x7fa59e202bba - astconv::ty_of_method_or_bare_fn::h6e52ea6931ff3e4cJZw\n  20:     0x7fa59e2254f9 - collect::type_scheme_of_item::h8f45bb014a0b1100Spz\n  21:     0x7fa59e21d744 - collect::convert_typed_item::h9b1d1867ccc71c5cGuz\n  22:     0x7fa59e2087b0 - collect::convert_item::hc32ae6512d69e4fa2sy\n  23:     0x7fa59e205337 - collect::collect_item_types::hc0eb478c58a079452Fx\n  24:     0x7fa59e24d82b - check_crate::h9d585667791002b9MrD\n  25:     0x7fa59fa548a9 - driver::phase_3_run_analysis_passes::_<closure>::closure.21889\n  26:     0x7fa59fa3a203 - middle::ty::context::_<impl>::create_and_enter::create_and_enter::h11311399452419292173\n  27:     0x7fa59fa351fe - driver::phase_3_run_analysis_passes::h9860921265290382560\n  28:     0x7fa59fa15c72 - driver::compile_input::h0fba4c102dd57a8f8ba\n  29:     0x7fa59fb6cabb - run_compiler::h9d54ca8784090b78sqc\n  30:     0x7fa59fb69b36 - sys_common::unwind::try::try_fn::try_fn::h11041572279465146525\n  31:     0x7fa59f57da98 - __rust_try\n  32:     0x7fa59f571aeb - sys_common::unwind::try::inner_try::h0c3b0e63f018cc29wds\n  33:     0x7fa59fb69e84 - boxed::_<impl>::call_box::call_box::h7023908653336004374\n  34:     0x7fa59f585153 - sys::thread::_<impl>::new::thread_start::h85eb4d682b5d5d4ffGw\n  35:     0x7fa599697609 - start_thread\n  36:     0x7fa59f20ca9c - __clone\n  37:                0x0 - <unknown>\n```\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/30535/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/30535/timeline", "performed_via_github_app": null, "state_reason": "completed"}