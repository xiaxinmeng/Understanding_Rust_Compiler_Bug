{"url": "https://api.github.com/repos/rust-lang/rust/issues/61129", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/61129/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/61129/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/61129/events", "html_url": "https://github.com/rust-lang/rust/issues/61129", "id": 448278895, "node_id": "MDU6SXNzdWU0NDgyNzg4OTU=", "number": 61129, "title": "Tracking issue for std::mem::take", "user": {"login": "jonhoo", "id": 176295, "node_id": "MDQ6VXNlcjE3NjI5NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/176295?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonhoo", "html_url": "https://github.com/jonhoo", "followers_url": "https://api.github.com/users/jonhoo/followers", "following_url": "https://api.github.com/users/jonhoo/following{/other_user}", "gists_url": "https://api.github.com/users/jonhoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonhoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonhoo/subscriptions", "organizations_url": "https://api.github.com/users/jonhoo/orgs", "repos_url": "https://api.github.com/users/jonhoo/repos", "events_url": "https://api.github.com/users/jonhoo/events{/privacy}", "received_events_url": "https://api.github.com/users/jonhoo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 246778137, "node_id": "MDU6TGFiZWwyNDY3NzgxMzc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/B-unstable", "name": "B-unstable", "color": "d304cb", "default": false, "description": "Implemented in the nightly compiler and unstable."}, {"id": 650846969, "node_id": "MDU6TGFiZWw2NTA4NDY5Njk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-tracking-issue", "name": "C-tracking-issue", "color": "f5f1fd", "default": false, "description": "Category: A tracking issue for an RFC or an unstable feature."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2019-05-24T17:32:27Z", "updated_at": "2019-10-18T22:27:45Z", "closed_at": "2019-10-18T22:27:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This tracks the stabilization of this function added by PR https://github.com/rust-lang/rust/pull/61130 in `std::mem`:\r\n\r\n```rust\r\npub fn take<T: Default>(dest: &mut T) -> T {\r\n    replace(dest, T::default())\r\n}\r\n```\r\n\r\nOriginal feature request:\r\n\r\n-----\r\n\r\nI decently often find myself in a position where I have a `HashMap`, `Vec`, or some other non-`Copy` type I want to \"take\" from its current location, but cannot because I only have `&mut self`. A particularly common place for this to happen is when finally returning `Async::Ready` from `Future::poll`. Usually in these cases, I end up writing:\r\n```rust\r\nreturn Async::Ready(std::mem::replace(self.result, Vec::new()));\r\n```\r\nThis works pretty well, since `Vec::new` does not allocate (as is the case for most collections).\r\n\r\nThis pattern is common enough that it'd be nice if there was a more standard way to do it. In particular, something like:\r\n```rust\r\nmod std::mem {\r\n    fn take<T: Default>(t: &mut T) -> T {\r\n        std::mem::replace(t, Default::default())\r\n    }\r\n}\r\n```\r\nA variant of this was suggested back in #33564, though that modified `Default` instead, which seems like overkill.\r\n\r\nIf this is something others agree would be useful, I'd be happy to submit a PR.\r\n\r\nEDIT: Changed name from `take` to `swap_default`.\r\nEDIT: Changed name back to `take`.", "closed_by": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/61129/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/61129/timeline", "performed_via_github_app": null, "state_reason": "completed"}