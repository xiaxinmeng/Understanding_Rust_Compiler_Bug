{"url": "https://api.github.com/repos/rust-lang/rust/issues/98406", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/98406/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/98406/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/98406/events", "html_url": "https://github.com/rust-lang/rust/issues/98406", "id": 1280865970, "node_id": "I_kwDOAAsO6M5MWHay", "number": 98406, "title": "Attribute #[used(linker)] not affected from external crate", "user": {"login": "chabapok", "id": 4709480, "node_id": "MDQ6VXNlcjQ3MDk0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/4709480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chabapok", "html_url": "https://github.com/chabapok", "followers_url": "https://api.github.com/users/chabapok/followers", "following_url": "https://api.github.com/users/chabapok/following{/other_user}", "gists_url": "https://api.github.com/users/chabapok/gists{/gist_id}", "starred_url": "https://api.github.com/users/chabapok/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chabapok/subscriptions", "organizations_url": "https://api.github.com/users/chabapok/orgs", "repos_url": "https://api.github.com/users/chabapok/repos", "events_url": "https://api.github.com/users/chabapok/events{/privacy}", "received_events_url": "https://api.github.com/users/chabapok/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2022-06-22T20:43:19Z", "updated_at": "2022-06-23T16:09:36Z", "closed_at": "2022-06-23T16:09:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "In current implementation #93798 of the `#[used(linker)]` work fine if the symbol placed in same module or in the child module. This has been discussed and fixed here:  #47384. But if the `#[used(linker)]` marks symbol from another crate, this won't work.\r\n\r\nI tried this code:\r\n\r\nmain.rs:\r\n```rust\r\n#![feature(used_with_arg)]\r\n\r\nextern \"C\" {\r\n    #[link_name = \"__start_my_cool_section\"]\r\n    static START: u32;\r\n    #[link_name = \"__stop_my_cool_section\"]\r\n    static STOP: u32;\r\n}\r\n\r\n#[used(linker)]\r\n#[link_section = \"my_cool_section\"]\r\npub static TEST: [u32; 0] = [];\r\n\r\nfn main() {\r\n    bar::bar(); // <--- try to comment this\r\n\r\n    let a = unsafe{ &START as *const _ as usize};\r\n    let b = unsafe{ &STOP as *const _ as usize};\r\n    println!(\"{a} {b} b-a={}\", b-a);\r\n}\r\n```\r\nCargo.toml of the main crate:\r\n```toml\r\n[package]\r\nname = \"foo\"\r\nversion = \"0.1.0\"\r\nedition = \"2021\"\r\n\r\n[dependencies]\r\nbar = { path = \"bar\" }\r\n```\r\n\r\nlib.rs of the `bar` crate:\r\n```\r\n#![feature(used_with_arg)]\r\n\r\n#[used(linker)]\r\n#[link_section = \"my_cool_section\"]\r\npub static TEST: [u32; 10] = [42; 10];\r\n\r\npub fn bar(){\r\n    println!(\"-- bar --\");\r\n}\r\n```\r\n\r\nSo, as well as #47384 we may view contents of `my_cool_section` section:\r\n```\r\n$ objdump -s -j\"my_cool_section\" ./foo\r\n\r\n./foo:     file format elf64-x86-64\r\n\r\nContents of section my_cool_section:\r\n 41128 2a000000 2a000000 2a000000 2a000000  *...*...*...*...\r\n 41138 2a000000 2a000000 2a000000 2a000000  *...*...*...*...\r\n 41148 2a000000 2a000000                    *...*...      ```\r\n```\r\n\r\nComment out `bar::bar()` line of the `main.rs` and recompile. Then  `bar::TEST` no longer exist in the output and no `my_cool_section` section in the compiled `foo`:\r\n\r\n```\r\n$ objdump -s -j\"my_cool_section\" ./foo\r\n\r\n./foo:     file format elf64-x86-64\r\n\r\nobjdump: section 'my_cool_section' mentioned in a -j option, but not found in any input file\r\n```\r\n\r\nIf you do not use `START`/`STOP` variables (but call `bar::bar()`) of the example, then there is no `my_cool_section` section either. Probably I understand that this is not correct too.\r\n\r\nAs far as I understand, if this is not fixed, then some crates (linkme, inventory...) will not work correctly in some cases.\r\n\r\n### Meta\r\n\r\n```\r\n$ rustc +nightly --version --verbose\r\nrustc 1.63.0-nightly (dc80ca78b 2022-06-21)\r\nbinary: rustc\r\ncommit-hash: dc80ca78b6ec2b6bba02560470347433bcd0bb3c\r\ncommit-date: 2022-06-21\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.63.0-nightly\r\nLLVM version: 14.0.5\r\n```\r\n", "closed_by": {"login": "chabapok", "id": 4709480, "node_id": "MDQ6VXNlcjQ3MDk0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/4709480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chabapok", "html_url": "https://github.com/chabapok", "followers_url": "https://api.github.com/users/chabapok/followers", "following_url": "https://api.github.com/users/chabapok/following{/other_user}", "gists_url": "https://api.github.com/users/chabapok/gists{/gist_id}", "starred_url": "https://api.github.com/users/chabapok/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chabapok/subscriptions", "organizations_url": "https://api.github.com/users/chabapok/orgs", "repos_url": "https://api.github.com/users/chabapok/repos", "events_url": "https://api.github.com/users/chabapok/events{/privacy}", "received_events_url": "https://api.github.com/users/chabapok/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/98406/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/98406/timeline", "performed_via_github_app": null, "state_reason": "completed"}