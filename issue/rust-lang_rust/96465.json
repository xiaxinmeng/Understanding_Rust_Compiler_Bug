{"url": "https://api.github.com/repos/rust-lang/rust/issues/96465", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/96465/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/96465/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/96465/events", "html_url": "https://github.com/rust-lang/rust/issues/96465", "id": 1216718559, "node_id": "I_kwDOAAsO6M5Ihabf", "number": 96465, "title": "GAT combined with HRTB doesn't work and has confusing diagnostics", "user": {"login": "udoprog", "id": 111092, "node_id": "MDQ6VXNlcjExMTA5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/111092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/udoprog", "html_url": "https://github.com/udoprog", "followers_url": "https://api.github.com/users/udoprog/followers", "following_url": "https://api.github.com/users/udoprog/following{/other_user}", "gists_url": "https://api.github.com/users/udoprog/gists{/gist_id}", "starred_url": "https://api.github.com/users/udoprog/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/udoprog/subscriptions", "organizations_url": "https://api.github.com/users/udoprog/orgs", "repos_url": "https://api.github.com/users/udoprog/repos", "events_url": "https://api.github.com/users/udoprog/events{/privacy}", "received_events_url": "https://api.github.com/users/udoprog/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}, {"id": 149689562, "node_id": "MDU6TGFiZWwxNDk2ODk1NjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-associated-items", "name": "A-associated-items", "color": "f7e101", "default": false, "description": "Area: Associated items such as associated types and consts."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1485960423, "node_id": "MDU6TGFiZWwxNDg1OTYwNDIz", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-generic_associated_types", "name": "F-generic_associated_types", "color": "f9c0cc", "default": false, "description": "`#![feature(generic_associated_types)]` a.k.a. GATs"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2022-04-27T03:06:44Z", "updated_at": "2022-05-12T00:50:42Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I tried this code:\r\n\r\n```rust\r\n#![feature(generic_associated_types)]\r\n\r\nuse std::marker;\r\n\r\ntrait Trait {\r\n    type Gat<'this>\r\n    where\r\n        Self: 'this;\r\n\r\n    fn function<F>(self, _: F)\r\n    where\r\n        F: FnOnce(Self::Gat<'_>);\r\n}\r\n\r\nstruct Struct<T>(marker::PhantomData<T>);\r\n\r\nimpl<T> Trait for Struct<T> {\r\n    type Gat<'this> = &'this mut T where Self: 'this;\r\n\r\n    fn function<F>(self, _: F)\r\n    where\r\n        F: FnOnce(Self::Gat<'_>),\r\n    {\r\n    }\r\n}\r\n```\r\n\r\n[Playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021&gist=9253295e89a1d8acba4ed1840ddde70b)\r\n\r\nI expected to see this happen: Since the GAT has the `Self: 'this` bound I'd expect `T` as being part of `Struct<T>` which is `Self` to outlive `'this` and compile.\r\n\r\nInstead, this happens and we get a (confusing) lifetime error which proposes to add a bound for a type `'a` which isn't specified in the code:\r\n\r\n```text\r\nerror[[E0311]](https://doc.rust-lang.org/nightly/error-index.html#E0311): the parameter type `T` may not live long enough\r\n  [--> src/lib.rs:20:8\r\n](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=fbd726c1f1bd90e514358a91016581ec#)   |\r\n17 | impl<T> Trait for Struct<T> {\r\n   |      - help: consider adding an explicit lifetime bound...: `T: 'a`\r\n...\r\n20 |     fn function<F>(self, _: F)\r\n   |        ^^^^^^^^ ...so that the type `Struct<T>` will meet its required lifetime bounds\r\n```\r\n\r\nI'm assuming this is a name for the HRTB `'_` but I'm not sure. However, this bound should not be necessary since `T` is part of the impl associated with `Struct<T>`. This HRTB working w/o complaints making me unsure what `'a` is referring to:\r\n\r\n```rust\r\nuse std::marker;\r\n\r\nstruct Struct<T>(marker::PhantomData<T>);\r\n\r\nimpl<T> Struct<T> {\r\n    fn function<F>(self, _: F) where F: FnOnce(&T) {}\r\n}\r\n```\r\n\r\n#### Related issues\r\n\r\nAt first seemed to be related to #95331 but I was unable to reproduce without GATs. I.e. this compiles:\r\n\r\n```rust\r\ntrait FooBad: for<'a> TheItem<'a>  {\r\n    fn items<F>(walker: F) where F: FnOnce(<Self as TheItem<'_>>::Item);\r\n}\r\n\r\ntrait TheItem<'a> {\r\n    type Item;\r\n}\r\n```\r\n\r\n[Playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=01c01049a4f0f3763354db2211834c82)\r\n\r\n### Meta\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.62.0-nightly (de1026a67 2022-04-23)\r\nbinary: rustc\r\ncommit-hash: de1026a67b0a3f5d6b61a1f77093af97d4799376\r\ncommit-date: 2022-04-23\r\nhost: x86_64-pc-windows-msvc\r\nrelease: 1.62.0-nightly\r\nLLVM version: 14.0.1\r\n```\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/96465/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/96465/timeline", "performed_via_github_app": null, "state_reason": null}