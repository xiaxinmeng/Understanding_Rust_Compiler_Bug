{"url": "https://api.github.com/repos/rust-lang/rust/issues/96497", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/96497/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/96497/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/96497/events", "html_url": "https://github.com/rust-lang/rust/issues/96497", "id": 1218069568, "node_id": "I_kwDOAAsO6M5ImkRA", "number": 96497, "title": "Unobservable vec, and arrays writes always always emit for size >= 3", "user": {"login": "Phosra", "id": 90156453, "node_id": "MDQ6VXNlcjkwMTU2NDUz", "avatar_url": "https://avatars.githubusercontent.com/u/90156453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Phosra", "html_url": "https://github.com/Phosra", "followers_url": "https://api.github.com/users/Phosra/followers", "following_url": "https://api.github.com/users/Phosra/following{/other_user}", "gists_url": "https://api.github.com/users/Phosra/gists{/gist_id}", "starred_url": "https://api.github.com/users/Phosra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Phosra/subscriptions", "organizations_url": "https://api.github.com/users/Phosra/orgs", "repos_url": "https://api.github.com/users/Phosra/repos", "events_url": "https://api.github.com/users/Phosra/events{/privacy}", "received_events_url": "https://api.github.com/users/Phosra/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 234956, "node_id": "MDU6TGFiZWwyMzQ5NTY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-codegen", "name": "A-codegen", "color": "f7e101", "default": false, "description": "Area: Code generation"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2022-04-28T01:39:53Z", "updated_at": "2023-04-05T17:34:50Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "While revealing that dead `Vec<_>` writes always emit, to someone else, I decided to look into this for arrays.\r\n\r\nIt seems that, for any `[T; N]`, such that T is not a ZST or enum with a single possible value, and 3 <= N, then array writes are always emit. This applies to allowing emitting redundant memcpys, memclrs, memfills, and all related operations.\r\n\r\nhttps://rust.godbolt.org/z/7vrT5xnxq\r\n\r\nAs for `Vec<T>`, as long as T isn't as described above, then unobservable writes and operations are usually emit.\r\nhttps://rust.godbolt.org/z/jhM75Mj5E", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/96497/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/96497/timeline", "performed_via_github_app": null, "state_reason": null}