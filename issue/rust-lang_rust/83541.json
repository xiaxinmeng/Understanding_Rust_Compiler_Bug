{"url": "https://api.github.com/repos/rust-lang/rust/issues/83541", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/83541/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/83541/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/83541/events", "html_url": "https://github.com/rust-lang/rust/issues/83541", "id": 842374438, "node_id": "MDU6SXNzdWU4NDIzNzQ0Mzg=", "number": 83541, "title": "illegal hardware instruction when using ffi+luajit on beta and nightly >=2021-03-11", "user": {"login": "khvzak", "id": 285173, "node_id": "MDQ6VXNlcjI4NTE3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/285173?v=4", "gravatar_id": "", "url": "https://api.github.com/users/khvzak", "html_url": "https://github.com/khvzak", "followers_url": "https://api.github.com/users/khvzak/followers", "following_url": "https://api.github.com/users/khvzak/following{/other_user}", "gists_url": "https://api.github.com/users/khvzak/gists{/gist_id}", "starred_url": "https://api.github.com/users/khvzak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/khvzak/subscriptions", "organizations_url": "https://api.github.com/users/khvzak/orgs", "repos_url": "https://api.github.com/users/khvzak/repos", "events_url": "https://api.github.com/users/khvzak/events{/privacy}", "received_events_url": "https://api.github.com/users/khvzak/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 45472092, "node_id": "MDU6TGFiZWw0NTQ3MjA5Mg==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-ffi", "name": "A-ffi", "color": "f7e101", "default": false, "description": "Area: Foreign Function Interface (FFI)"}, {"id": 262252628, "node_id": "MDU6TGFiZWwyNjIyNTI2Mjg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-beta", "name": "regression-from-stable-to-beta", "color": "e4008a", "default": false, "description": "Performance or correctness regression from stable to beta."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2021-03-27T00:34:14Z", "updated_at": "2023-01-06T11:59:23Z", "closed_at": "2021-04-30T17:08:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a regression report! \ud83d\udc1b A regression is something that changed between versions of Rust but was not supposed to.\r\n\r\nPlease provide a short summary of the regression, along with any information you feel is relevant to replicate it.\r\n-->\r\n\r\nHello, I'm [`mlua`](https://crates.io/crates/mlua) maintainer and found a regression when running tests for the library on the latest beta and nightly.\r\nI narrowed it down to a minimal example:\r\n\r\n### Code\r\n\r\nmain.rs\r\n```rust\r\nmod ffi {\r\n    use std::os::raw::{c_int, c_void};\r\n\r\n    type LuaCFn = unsafe extern \"C\" fn(L: *mut c_void) -> c_int;\r\n\r\n    extern \"C\" {\r\n        pub fn luaL_newstate() -> *mut c_void;\r\n        pub fn lua_pcall(L: *mut c_void, nargs: c_int, nresults: c_int, errfunc: c_int) -> c_int;\r\n        pub fn lua_gettable(L: *mut c_void, idx: c_int);\r\n        pub fn lua_pushcclosure(L: *mut c_void, f: LuaCFn, n: c_int);\r\n        pub fn lua_pushnil(L: *mut c_void);\r\n    }\r\n\r\n    // #[inline(always)]\r\n    pub unsafe fn lua_gettable2(state: *mut c_void, idx: c_int) {\r\n        lua_gettable(state, idx);\r\n    }\r\n}\r\n\r\npub unsafe fn test_me() {\r\n    let state = ffi::luaL_newstate();\r\n    assert!(!state.is_null());\r\n\r\n    unsafe extern \"C\" fn run_me(state: *mut std::os::raw::c_void) -> std::os::raw::c_int {\r\n        ffi::lua_pushnil(state);\r\n        ffi::lua_pushnil(state);\r\n        ffi::lua_gettable2(state, -2); // Changing this to `ffi::lua_gettable` solves the problem\r\n        1\r\n    }\r\n\r\n    ffi::lua_pushcclosure(state, run_me, 0);\r\n    assert!(ffi::lua_pcall(state, 0, -1, 0) != 0);\r\n}\r\n\r\nfn main() {\r\n    unsafe { test_me() }\r\n}\r\n```\r\n\r\nCargo.toml\r\n```toml\r\n[package]\r\nname = \"luajit_test\"\r\nversion = \"0.1.0\"\r\nedition = \"2018\"\r\nbuild = \"build.rs\"\r\n\r\n[build-dependencies]\r\nluajit-src = \"*\"\r\n```\r\n\r\nbuild.rs\r\n```rust\r\nfn main() {\r\n    let artifacts = luajit_src::Build::new().build();\r\n    artifacts.print_cargo_metadata();\r\n    println!(\"cargo:rerun-if-changed=build.rs\");\r\n}\r\n```\r\nRepo: https://github.com/khvzak/luajit_bug\r\n\r\nIt works on stable rust, but fails on beta and nightly with `illegal hardware instruction` on macos 10.15 and linux (at least).\r\n\r\nIt works  if uncomment `#[inline(always)]` OR replace `ffi::lua_gettable2` call with `ffi::lua_gettable`.\r\nReproducible only using LuaJIT, but not on Lua 5.1.\r\n\r\n### Version it worked on\r\n\r\n<!--\r\nProvide the most recent version this worked on, for example:\r\n\r\nIt most recently worked on: Rust 1.47\r\n-->\r\n\r\nIt most recently worked on:  nightly-2021-03-10. Does not work on **nightly-2021-03-11**.\r\n\r\n### Version with regression\r\n\r\n<!--\r\nProvide the version you are using that has the regression.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.52.0-nightly (f98721f88 2021-03-10)\r\nbinary: rustc\r\ncommit-hash: f98721f886ab52d32d622ad0a46216ad03f3e525\r\ncommit-date: 2021-03-10\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.52.0-nightly\r\nLLVM version: 12.0.0\r\n```\r\n\r\n", "closed_by": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/83541/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/83541/timeline", "performed_via_github_app": null, "state_reason": "completed"}