{"url": "https://api.github.com/repos/rust-lang/rust/issues/72046", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/72046/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/72046/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/72046/events", "html_url": "https://github.com/rust-lang/rust/issues/72046", "id": 615172230, "node_id": "MDU6SXNzdWU2MTUxNzIyMzA=", "number": 72046, "title": "Potential for data race with VecDeque::as_mut_slices on separate threads", "user": {"login": "FSMaxB", "id": 4294942, "node_id": "MDQ6VXNlcjQyOTQ5NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/4294942?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FSMaxB", "html_url": "https://github.com/FSMaxB", "followers_url": "https://api.github.com/users/FSMaxB/followers", "following_url": "https://api.github.com/users/FSMaxB/following{/other_user}", "gists_url": "https://api.github.com/users/FSMaxB/gists{/gist_id}", "starred_url": "https://api.github.com/users/FSMaxB/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FSMaxB/subscriptions", "organizations_url": "https://api.github.com/users/FSMaxB/orgs", "repos_url": "https://api.github.com/users/FSMaxB/repos", "events_url": "https://api.github.com/users/FSMaxB/events{/privacy}", "received_events_url": "https://api.github.com/users/FSMaxB/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-09T13:02:56Z", "updated_at": "2020-05-09T13:18:57Z", "closed_at": "2020-05-09T13:17:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "According to my understanding `VedDeque::as_mut_slices` is potentially problematic because it allows creating multiple mutable slices into the same contiguous memory region.\r\n\r\nConsider the following scenario: The `VecDeque` ist almost at capacity, meaning the first and the last element of one and the other mutable slice are within a few bytes from each other, meaning they are potentially in the same cache line.\r\n\r\nWhen we now access these mutable slices from separate threads, this could lead to data races if my understanding is correct.\r\n\r\nI haven't found a way in the standard library to actually send one of these slices to a different thread since `std::thread::spawn` requires the slice to be `'static`, but it is entirely conceivable that you could combine some seemingly safe abstractions to allow sending one of the mutable slices to a different thread (I've tried doing this with `futures::StreamExt::buffer_unordered` but didn't succeed in demonstrating a data race in practice).\r\n\r\nAttempted exploit: https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=5e1153bbdaab14f79133e4f3ccf309ba\r\n\r\nWhat is your opinion on this matter. Is `as_mut_slices` a safe abstraction?", "closed_by": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/72046/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/72046/timeline", "performed_via_github_app": null, "state_reason": "completed"}