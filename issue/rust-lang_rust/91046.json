{"url": "https://api.github.com/repos/rust-lang/rust/issues/91046", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/91046/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/91046/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/91046/events", "html_url": "https://github.com/rust-lang/rust/issues/91046", "id": 1058775468, "node_id": "I_kwDOAAsO6M4_G6Gs", "number": 91046, "title": "Code works in Edition 2021 but not 2018 even though it should", "user": {"login": "kangalio", "id": 21220820, "node_id": "MDQ6VXNlcjIxMjIwODIw", "avatar_url": "https://avatars.githubusercontent.com/u/21220820?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kangalio", "html_url": "https://github.com/kangalio", "followers_url": "https://api.github.com/users/kangalio/followers", "following_url": "https://api.github.com/users/kangalio/following{/other_user}", "gists_url": "https://api.github.com/users/kangalio/gists{/gist_id}", "starred_url": "https://api.github.com/users/kangalio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kangalio/subscriptions", "organizations_url": "https://api.github.com/users/kangalio/orgs", "repos_url": "https://api.github.com/users/kangalio/repos", "events_url": "https://api.github.com/users/kangalio/events{/privacy}", "received_events_url": "https://api.github.com/users/kangalio/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 122406831, "node_id": "MDU6TGFiZWwxMjI0MDY4MzE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-closures", "name": "A-closures", "color": "f7e101", "default": false, "description": "Area: closures (`|args| { .. }`)"}, {"id": 171502053, "node_id": "MDU6TGFiZWwxNzE1MDIwNTM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-borrow-checker", "name": "A-borrow-checker", "color": "f7e101", "default": false, "description": "Area: The borrow checker"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 2947369052, "node_id": "MDU6TGFiZWwyOTQ3MzY5MDUy", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-edition-2021", "name": "A-edition-2021", "color": "f7e101", "default": false, "description": "Area: The 2021 edition"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2021-11-19T17:49:53Z", "updated_at": "2021-11-21T22:12:19Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI tried this code:\r\n\r\n```rust\r\nuse std::collections::HashMap;\r\nuse std::hash::Hash;\r\n\r\npub fn get<'a, K: Eq + Hash, V, const N: usize>(\r\n    map: &'a mut HashMap<K, V>,\r\n    mut_index: &K,\r\n    ref_indices: [&K; N],\r\n) -> Option<(&'a mut V, [Option<&'a V>; N])> {\r\n    if ref_indices.contains(&&mut_index) {\r\n        panic!(\"Attempted to obtain a mutable and immutable reference to same item\");\r\n    }\r\n\r\n    let mut_item = map.get_mut(mut_index)? as *mut V;\r\n    let ref_items = ref_indices.map(|i| map.get(i));\r\n    // SAFETY:\r\n    // - aliasing: we got passed a unique reference to the map and made sure none of our immutable references point to mut_item\r\n    // - lifetime: the reference has lifetime 'a which matches the HashMap it points into\r\n    let mut_item = unsafe { &mut *mut_item as &'a mut V };\r\n\r\n    Some((mut_item, ref_items))\r\n}\r\n```\r\n\r\nI expected to see this happen: the code should compile on 2018 and not just 2021, because as far as I can tell, there are no 2021 features that should affect the `ref_indices.map(|i| map.get(i))` call\r\n\r\nInstead, this happened: compiling that code in 2018 edition yields this error:\r\n\r\n```rust\r\nerror[E0373]: closure may outlive the current function, but it borrows `map`, which is owned by the current function\r\n  --> src/main.rs:15:37\r\n   |\r\n15 |     let ref_items = ref_indices.map(|i| map.get(i));\r\n   |                                     ^^^ --- `map` is borrowed here\r\n   |                                     |\r\n   |                                     may outlive borrowed value `map`\r\n   |\r\nnote: closure is returned here\r\n  --> src/main.rs:21:5\r\n   |\r\n21 |     Some((mut_item, ref_items))\r\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nhelp: to force the closure to take ownership of `map` (and any other referenced variables), use the `move` keyword\r\n   |\r\n15 |     let ref_items = ref_indices.map(move |i| map.get(i));\r\n   |                                     ++++\r\n```\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.56.1 (59eed8a2a 2021-11-01)\r\nbinary: rustc\r\ncommit-hash: 59eed8a2aac0230a8b53e89d4e99d55912ba6b35\r\ncommit-date: 2021-11-01\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.56.1\r\nLLVM version: 13.0.0\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/91046/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/91046/timeline", "performed_via_github_app": null, "state_reason": null}