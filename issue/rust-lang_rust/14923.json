{"url": "https://api.github.com/repos/rust-lang/rust/issues/14923", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/14923/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/14923/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/14923/events", "html_url": "https://github.com/rust-lang/rust/issues/14923", "id": 35761586, "node_id": "MDU6SXNzdWUzNTc2MTU4Ng==", "number": 14923, "title": "ld cannot find symbol fail_", "user": {"login": "metalogical", "id": 1977419, "node_id": "MDQ6VXNlcjE5Nzc0MTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1977419?v=4", "gravatar_id": "", "url": "https://api.github.com/users/metalogical", "html_url": "https://github.com/metalogical", "followers_url": "https://api.github.com/users/metalogical/followers", "following_url": "https://api.github.com/users/metalogical/following{/other_user}", "gists_url": "https://api.github.com/users/metalogical/gists{/gist_id}", "starred_url": "https://api.github.com/users/metalogical/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/metalogical/subscriptions", "organizations_url": "https://api.github.com/users/metalogical/orgs", "repos_url": "https://api.github.com/users/metalogical/repos", "events_url": "https://api.github.com/users/metalogical/events{/privacy}", "received_events_url": "https://api.github.com/users/metalogical/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-06-16T00:19:30Z", "updated_at": "2014-06-16T01:02:08Z", "closed_at": "2014-06-16T00:54:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using `no_std` and `crate_type=\"lib\"` crate attributes, and with librlibc and libcore, I compile a piece of rust code to a i386-intel-linux obj file. I use nasm to generate another obj file containing the entry point, and then attempt to link the two with ld, which gives the error:\n\n```\nmain.rs:(.text.rust_entry+0x8e): undefined reference to `failure::fail_::h1fd7c77a1b5a0bfcfWv::v0.11.0.pre'\n```\n\nI have the `begin_unwind` lang item defined, so I'm not sure where this symbol is supposed to come from. Trying to define the `fail_` lang item doesn't sit well with rustc, so I'm hypothesizing this is a bug (I'm hoping it isn't, as I'd really like to move on with this issue).\n\nI've put a nice example of this failure in a repo: [https://github.com/namanbharadwaj/rust-link-fail](https://github.com/namanbharadwaj/rust-link-fail)\n\nThis happens with array bounds checking also.\n", "closed_by": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/14923/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/14923/timeline", "performed_via_github_app": null, "state_reason": "completed"}