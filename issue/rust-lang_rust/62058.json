{"url": "https://api.github.com/repos/rust-lang/rust/issues/62058", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/62058/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/62058/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/62058/events", "html_url": "https://github.com/rust-lang/rust/issues/62058", "id": 459495077, "node_id": "MDU6SXNzdWU0NTk0OTUwNzc=", "number": 62058, "title": "Const generics expressions don't unify in type parameters", "user": {"login": "vadixidav", "id": 12789579, "node_id": "MDQ6VXNlcjEyNzg5NTc5", "avatar_url": "https://avatars.githubusercontent.com/u/12789579?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vadixidav", "html_url": "https://github.com/vadixidav", "followers_url": "https://api.github.com/users/vadixidav/followers", "following_url": "https://api.github.com/users/vadixidav/following{/other_user}", "gists_url": "https://api.github.com/users/vadixidav/gists{/gist_id}", "starred_url": "https://api.github.com/users/vadixidav/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vadixidav/subscriptions", "organizations_url": "https://api.github.com/users/vadixidav/orgs", "repos_url": "https://api.github.com/users/vadixidav/repos", "events_url": "https://api.github.com/users/vadixidav/events{/privacy}", "received_events_url": "https://api.github.com/users/vadixidav/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}, {"id": 1282665911, "node_id": "MDU6TGFiZWwxMjgyNjY1OTEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-generics", "name": "A-const-generics", "color": "f7e101", "default": false, "description": "Area: const generics (parameters and arguments)"}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}, {"id": 1486687397, "node_id": "MDU6TGFiZWwxNDg2Njg3Mzk3", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-const_generics", "name": "F-const_generics", "color": "f9c0cc", "default": false, "description": "`#![feature(const_generics)]`"}, {"id": 2345125724, "node_id": "MDU6TGFiZWwyMzQ1MTI1NzI0", "url": "https://api.github.com/repos/rust-lang/rust/labels/const-generics-bad-diagnostics", "name": "const-generics-bad-diagnostics", "color": "3f5dca", "default": false, "description": "An error is correctly emitted, but is confusing, for `min_const_generics`."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-06-22T17:33:11Z", "updated_at": "2020-10-01T22:11:11Z", "closed_at": "2020-10-01T22:07:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I know this has probably already been mentioned on the const generics tracking issue, but I wanted to make an issue specifically for this.\r\n\r\nExample (working around some other bugs in const generics):\r\n\r\n```rust\r\n#![feature(const_generics)]\r\n\r\npub struct ConstBytes<const N: usize>([u8; N]);\r\n\r\n/// A constant sized array of bits. `N` defines the number of bits in the array.\r\npub struct BitArray<const N: usize>(ConstBytes<{(N + 7) / 8}>);\r\n\r\nimpl<const N: usize> BitArray<{N}> {\r\n    fn new(bytes: ConstBytes<{(N + 7) / 8}>) -> Self {\r\n        Self(bytes)\r\n    }\r\n}\r\n```\r\n\r\nOutput:\r\n\r\n```rust\r\nerror[E0308]: mismatched types\r\n  --> src\\lib.rs:10:14\r\n   |\r\n10 |         Self(bytes)\r\n   |              ^^^^^ expected `{(N + 7) / 8}`, found `{(N + 7) / 8}`\r\n   |\r\n   = note: expected type `ConstBytes<>`\r\n              found type `ConstBytes<>`\r\n```\r\n\r\nI would expect it to be able to unify the const expression `(N + 7) / 8` with itself. Technically, we can probably unify lots of things that are equal in value (N == M) if they are resolved at compile time, but if the expressions are exactly the same (same order and everything) I feel like it should be possible to do a simple equals comparison between the two expressions at compile time.\r\n\r\nRather than waiting for the more advanced \"unify anything that resolves to the same value,\" perhaps we can just unify the exact same const expression without any canonicalization or anything just so I can do something basic like this. This would be useful for me to provide some initial abstraction over bit arrays despite some shortcomings from not being able to create the underlying storage internally.\r\n\r\nDoes this seem simple enough to support? Should there be an RFC for this basic kind of unification (unification of the exact same expression)? If so, I can make the RFC. I think this is a subset of the behavior we will eventually support, so it should be fine.", "closed_by": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/62058/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/62058/timeline", "performed_via_github_app": null, "state_reason": "completed"}