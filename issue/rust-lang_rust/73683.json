{"url": "https://api.github.com/repos/rust-lang/rust/issues/73683", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/73683/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/73683/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/73683/events", "html_url": "https://github.com/rust-lang/rust/issues/73683", "id": 644399283, "node_id": "MDU6SXNzdWU2NDQzOTkyODM=", "number": 73683, "title": "ICE: const_generics: unexpected const parent in type_of_def_id()", "user": {"login": "Boscop", "id": 535593, "node_id": "MDQ6VXNlcjUzNTU5Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/535593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Boscop", "html_url": "https://github.com/Boscop", "followers_url": "https://api.github.com/users/Boscop/followers", "following_url": "https://api.github.com/users/Boscop/following{/other_user}", "gists_url": "https://api.github.com/users/Boscop/gists{/gist_id}", "starred_url": "https://api.github.com/users/Boscop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Boscop/subscriptions", "organizations_url": "https://api.github.com/users/Boscop/orgs", "repos_url": "https://api.github.com/users/Boscop/repos", "events_url": "https://api.github.com/users/Boscop/events{/privacy}", "received_events_url": "https://api.github.com/users/Boscop/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1282665911, "node_id": "MDU6TGFiZWwxMjgyNjY1OTEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-generics", "name": "A-const-generics", "color": "f7e101", "default": false, "description": "Area: const generics (parameters and arguments)"}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}, {"id": 1486687397, "node_id": "MDU6TGFiZWwxNDg2Njg3Mzk3", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-const_generics", "name": "F-const_generics", "color": "f9c0cc", "default": false, "description": "`#![feature(const_generics)]`"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-06-24T07:50:18Z", "updated_at": "2020-07-31T22:13:03Z", "closed_at": "2020-07-31T22:13:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Code\r\n\r\n```Rust\r\n#[ext(pub, name = CollectArr)] // https://crates.io/crates/extend\r\nimpl<T: Iterator> T {\r\n\tfn collect_arr<const N: usize>(self) -> [T::Item; N]\r\n\twhere\r\n\t\t[T::Item; N]: Array<Item = T::Item>,\r\n\t\tArrayVec<[T::Item; N]>: Debug,\r\n\t{\r\n\t\tself.collect::<ArrayVec<[T::Item; N]>>().into_inner().expect(\"collect_arr\")\r\n\t}\r\n}\r\n\r\npub struct ChannelUsage(pub u16);\r\n\r\nimpl ChannelUsage {\r\n\tfn to_arr(&self) -> [bool; 16] {\r\n\t\t// self.iter().collect_arr() // works\r\n\t\t// self.iter().collect_arr::<16>() // error: cannot infer type for type `{integer}`\r\n\t\tself.iter().collect_arr::<16usize>() // ICE\r\n\t}\r\n}\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.46.0-nightly (ff5b446d2 2020-06-23)\r\nbinary: rustc\r\ncommit-hash: ff5b446d2fdbd898bc97a751f2f72858de185cf1\r\ncommit-date: 2020-06-23\r\nhost: x86_64-pc-windows-msvc\r\nrelease: 1.46.0-nightly\r\nLLVM version: 10.0\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nerror: proj\\src\\lib.rs:1: unexpected const parent in type_of_def_id(): Expr(Expr { hir_id: HirId { owner: DefId(0:27 ~ vmidi[fa26]::chan_usage[0]::{{impl}}[1]::to_arr[0]), local_id: 10 }, kind: MethodCall(PathSegment { ident: collect_arr#0, hir_id: Some(HirId { owner: DefId(0:27 ~ vmidi[fa26]::chan_usage[0]::{{impl}}[1]::to_arr[0]), local_id: 5 }), res: Some(Err), args: Some(GenericArgs { args: [Const(ConstArg { value: AnonConst { hir_id: HirId { owner: DefId(0:27 ~ vmidi[fa26]::chan_usage[0]::{{impl}}[1]::to_arr[0]), local_id: 3 }, body: BodyId { hir_id: HirId { owner: DefId(0:27 ~ vmidi[fa26]::chan_usage[0]::{{impl}}[1]::to_arr[0]), local_id: 4 } } }, span: proj\\src\\chan_usage.rs:146:29: 146:36 (#0) })], bindings: [], parenthesized: false }), infer_args: false }, proj\\src\\chan_usage.rs:146:15: 146:26 (#0), [Expr { hir_id: HirId { owner: DefId(0:27 ~ vmidi[fa26]::chan_usage[0]::{{impl}}[1]::to_arr[0]), local_id: 9 }, kind: MethodCall(PathSegment { ident: iter#0, hir_id: Some(HirId { owner: DefId(0:27 ~ vmidi[fa26]::chan_usage[0]::{{impl}}[1]::to_arr[0]), local_id: 6 }), res: Some(Err), args: None, infer_args: true }, proj\\src\\chan_usage.rs:146:8: 146:12 (#0), [Expr { hir_id: HirId { owner: DefId(0:27 ~ vmidi[fa26]::chan_usage[0]::{{impl}}[1]::to_arr[0]), local_id: 8 }, kind: Path(Resolved(None, Path { span: proj\\src\\chan_usage.rs:146:3: 146:7 (#0), res: Local(HirId { owner: DefId(0:27 ~ vmidi[fa26]::chan_usage[0]::{{impl}}[1]::to_arr[0]), local_id: 1 }), segments: [PathSegment { ident: self#0, hir_id: Some(HirId { owner: DefId(0:27 ~ vmidi[fa26]::chan_usage[0]::{{impl}}[1]::to_arr[0]), local_id: 7 }), res: Some(Local(HirId { owner: DefId(0:27 ~ vmidi[fa26]::chan_usage[0]::{{impl}}[1]::to_arr[0]), local_id: 1 })), args: None, infer_args: true }] })), attrs: ThinVec(None), span: proj\\src\\chan_usage.rs:146:3: 146:7 (#0) }], proj\\src\\chan_usage.rs:146:8: 146:14 (#0)), attrs: ThinVec(None), span: proj\\src\\chan_usage.rs:146:3: 146:14 (#0) }], proj\\src\\chan_usage.rs:146:15: 146:39 (#0)), attrs: ThinVec(None), span: proj\\src\\chan_usage.rs:146:3: 146:39 (#0) })\r\nnote: proj\\src\\lib.rs:1: delayed at /rustc/ff5b446d2fdbd898bc97a751f2f72858de185cf1\\src\\librustc_session\\session.rs:436:27\r\nerror: proj\\src\\chan_usage.rs:146: Const::from_anon_const: couldn't lit_to_const\r\nnote: proj\\src\\chan_usage.rs:146: delayed at /rustc/ff5b446d2fdbd898bc97a751f2f72858de185cf1\\src\\librustc_session\\session.rs:436:27\r\nerror: proj\\src\\lib.rs:1: TyKind::Error constructed but no error reported\r\nnote: proj\\src\\lib.rs:1: delayed at /rustc/ff5b446d2fdbd898bc97a751f2f72858de185cf1\\src\\librustc_session\\session.rs:436:27\r\nerror: proj\\src\\lib.rs:1: ty::ConstKind::Error constructed but no error reported.\r\nnote: proj\\src\\lib.rs:1: delayed at /rustc/ff5b446d2fdbd898bc97a751f2f72858de185cf1\\src\\librustc_session\\session.rs:436:27\r\nerror: proj\\src\\chan_usage.rs:146: `ErrorReported` without an error\r\nnote: proj\\src\\chan_usage.rs:146: delayed at /rustc/ff5b446d2fdbd898bc97a751f2f72858de185cf1\\src\\librustc_session\\session.rs:436:27\r\nerror: proj\\src\\chan_usage.rs:145: cat_expr Errd\r\nnote: proj\\src\\chan_usage.rs:145: delayed at /rustc/ff5b446d2fdbd898bc97a751f2f72858de185cf1\\src\\librustc_session\\session.rs:436:27\r\nerror: proj\\src\\chan_usage.rs:146: cat_expr Errd\r\nnote: proj\\src\\chan_usage.rs:146: delayed at /rustc/ff5b446d2fdbd898bc97a751f2f72858de185cf1\\src\\librustc_session\\session.rs:436:27\r\nerror: proj\\src\\chan_usage.rs:145: PromoteTemps: MIR had errors\r\nnote: proj\\src\\chan_usage.rs:145: delayed at /rustc/ff5b446d2fdbd898bc97a751f2f72858de185cf1\\src\\librustc_session\\session.rs:436:27\r\nerror: proj\\src\\chan_usage.rs:145: broken MIR in DefId(0:27 ~ vmidi[fa26]::chan_usage[0]::{{impl}}[1]::to_arr[0]) (\"return type\"): bad type [type error]\r\nnote: proj\\src\\chan_usage.rs:145: delayed at src\\librustc_mir\\borrow_check\\type_check\\mod.rs:258:27\r\nerror: proj\\src\\chan_usage.rs:145: broken MIR in DefId(0:27 ~ vmidi[fa26]::chan_usage[0]::{{impl}}[1]::to_arr[0]) (LocalDecl { mutability: Mut, local_info: None, internal: false, is_block_tail: None, ty: [type error], user_ty: None, source_info: SourceInfo { span: proj\\src\\chan_usage.rs:145:2: 148:3 (#0), scope: scope[0] } }): bad type [type error]\r\nnote: proj\\src\\chan_usage.rs:145: delayed at src\\librustc_mir\\borrow_check\\type_check\\mod.rs:258:27\r\nerror: proj\\src\\chan_usage.rs:146: mir_const_qualif: MIR had errors\r\nnote: proj\\src\\chan_usage.rs:146: delayed at /rustc/ff5b446d2fdbd898bc97a751f2f72858de185cf1\\src\\librustc_session\\session.rs:436:27\r\nerror: proj\\src\\chan_usage.rs:146: PromoteTemps: MIR had errors\r\nnote: proj\\src\\chan_usage.rs:146: delayed at /rustc/ff5b446d2fdbd898bc97a751f2f72858de185cf1\\src\\librustc_session\\session.rs:436:27\r\nerror: proj\\src\\chan_usage.rs:146: broken MIR in DefId(0:29 ~ vmidi[fa26]::chan_usage[0]::{{impl}}[1]::to_arr[0]::{{constant}}[1]) (\"return type\"): bad type [type error]\r\nnote: proj\\src\\chan_usage.rs:146: delayed at src\\librustc_mir\\borrow_check\\type_check\\mod.rs:258:27\r\nerror: proj\\src\\chan_usage.rs:146: broken MIR in DefId(0:29 ~ vmidi[fa26]::chan_usage[0]::{{impl}}[1]::to_arr[0]::{{constant}}[1]) (LocalDecl { mutability: Mut, local_info: None, internal: false, is_block_tail: None, ty: [type error], user_ty: None, source_info: SourceInfo { span: proj\\src\\chan_usage.rs:146:29: 146:36 (#0), scope: scope[0] } }): bad type [type error]\r\nnote: proj\\src\\chan_usage.rs:146: delayed at src\\librustc_mir\\borrow_check\\type_check\\mod.rs:258:27\r\nthread 'rustc' panicked at 'no errors encountered even though `delay_span_bug` issued', src\\librustc_errors\\lib.rs:367:17\r\nstack backtrace:\r\n   0: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt\r\n   1: core::fmt::write\r\n   2: <std::io::IoSliceMut as core::fmt::Debug>::fmt\r\n   3: std::panicking::take_hook\r\n   4: std::panicking::take_hook\r\n   5: rustc_driver::report_ice\r\n   6: std::panicking::rust_panic_with_hook\r\n   7: <rustc_errors::styled_buffer::StyledBuffer as core::fmt::Debug>::fmt\r\n   8: <rustc_errors::HandlerInner as core::ops::drop::Drop>::drop\r\n   9: <rustc_ast::ast::Item<rustc_ast::ast::ForeignItemKind> as rustc_ast::attr::HasAttrs>::attrs\r\n  10: <rustc_ast::ast::Item<rustc_ast::ast::ForeignItemKind> as rustc_ast::attr::HasAttrs>::attrs\r\n  11: <rustc_ast_passes::node_count::NodeCounter as rustc_ast::visit::Visitor>::visit_ident\r\n  12: <rustc_metadata::foreign_modules::Collector as rustc_hir::itemlikevisit::ItemLikeVisitor>::visit_impl_item\r\n  13: <rustc_driver::DEFAULT_HOOK as core::ops::deref::Deref>::deref\r\n  14: <rustc_span::symbol::SymbolStr as core::fmt::Display>::fmt\r\n  15: <i16 as petgraph::matrix_graph::Zero>::zero\r\n  16: std::sys::windows::thread::Thread::new\r\n  17: BaseThreadInitThunk\r\n  18: RtlUserThreadStart\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.46.0-nightly (ff5b446d2 2020-06-23) running on x86_64-pc-windows-msvc\r\n\r\nnote: compiler flags: -C opt-level=3 -C panic=abort -C embed-bitcode=no -C debuginfo=2 -C debug-assertions=on -C incremental --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\nend of query stack\r\n```\r\n", "closed_by": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/73683/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/73683/timeline", "performed_via_github_app": null, "state_reason": "completed"}