{"url": "https://api.github.com/repos/rust-lang/rust/issues/43326", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/43326/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/43326/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/43326/events", "html_url": "https://github.com/rust-lang/rust/issues/43326", "id": 243907763, "node_id": "MDU6SXNzdWUyNDM5MDc3NjM=", "number": 43326, "title": "Exact same bound check happens twice in loops when processing slices known to be of the same size", "user": {"login": "Paul-Andre", "id": 5252774, "node_id": "MDQ6VXNlcjUyNTI3NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5252774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Paul-Andre", "html_url": "https://github.com/Paul-Andre", "followers_url": "https://api.github.com/users/Paul-Andre/followers", "following_url": "https://api.github.com/users/Paul-Andre/following{/other_user}", "gists_url": "https://api.github.com/users/Paul-Andre/gists{/gist_id}", "starred_url": "https://api.github.com/users/Paul-Andre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Paul-Andre/subscriptions", "organizations_url": "https://api.github.com/users/Paul-Andre/orgs", "repos_url": "https://api.github.com/users/Paul-Andre/repos", "events_url": "https://api.github.com/users/Paul-Andre/events{/privacy}", "received_events_url": "https://api.github.com/users/Paul-Andre/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-07-19T02:49:13Z", "updated_at": "2022-02-02T21:07:58Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "When compiling in release mode, it is possible to move most bound checks out of a loop when processing slices of the same size by asserting beforehand that they really are of the same size. A simple example of that would be:\r\n\r\n```rust\r\nfn process_slices(x: &[u32], y: &[u32], z: &mut [u32]) {\r\n    assert!(x.len() == y.len() && x.len() == z.len());\r\n    for i in 0..x.len() {\r\n        z[i] = x[i] + y[i];\r\n    }\r\n}\r\n```\r\n\r\nUnfortunately there's a bound check that remains and is obviously redundant since exactly the same registers are compared at the top and at the bottom of the loop. The snippet of assembly for the inside loop of the above function looks like this:\r\n\r\n```assembly\r\n.LBB3_4:\r\n\tcmpq\t%rax, %rsi\r\n\tjae\t.LBB3_8\r\n\tmovl\t(%rdx,%rsi,4), %ecx\r\n\taddl\t(%rdi,%rsi,4), %ecx\r\n\tmovl\t%ecx, (%r8,%rsi,4)\r\n\tincq\t%rsi\r\n\tcmpq\t%rax, %rsi\r\n\tjb\t.LBB3_4\r\n```\r\nThe LBB3_4 label isn't used anywhere else. It seems that it would make sense to move it two lines down since if we have %rsi < %rax then surely we cannot have %rsi >= %rax right afterwards.\r\n\r\nThe same also happens for more complicated loops.\r\n\r\n[Here's a Rust Playground link for the example.](https://play.rust-lang.org/?gist=7efa9123866972f1c4195bc5973c8080&version=stable&mode=release)\r\n\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/43326/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/43326/timeline", "performed_via_github_app": null, "state_reason": null}