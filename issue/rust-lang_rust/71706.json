{"url": "https://api.github.com/repos/rust-lang/rust/issues/71706", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/71706/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/71706/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/71706/events", "html_url": "https://github.com/rust-lang/rust/issues/71706", "id": 609860664, "node_id": "MDU6SXNzdWU2MDk4NjA2NjQ=", "number": 71706, "title": "Backtrace rendering inconsistent between `std::backtrace` and panics", "user": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 36953, "node_id": "MDU6TGFiZWwzNjk1Mw==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-runtime", "name": "A-runtime", "color": "f7e101", "default": false, "description": "Area: std's runtime and \"pre-main\" init for handling backtraces, unwinds, stack overflows"}, {"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-04-30T11:40:56Z", "updated_at": "2020-11-11T06:50:07Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "I tried this code on nightly:\r\n```rust\r\n#![feature(backtrace)]\r\n\r\nfn main() {\r\n    let backtrace = std::backtrace::Backtrace::capture();\r\n    eprintln!(\"{}\", backtrace);\r\n\r\n    panic!();\r\n}\r\n```\r\nThis prints:\r\n```\r\n   0: playground::main\r\n             at src/main.rs:4\r\n   1: std::rt::lang_start::{{closure}}\r\n             at /rustc/fa51f810e5b9254904b92660e7280b7d6a46f112/src/libstd/rt.rs:67\r\n   2: std::rt::lang_start_internal::{{closure}}\r\n             at src/libstd/rt.rs:52\r\n      std::panicking::try::do_call\r\n             at src/libstd/panicking.rs:297\r\n      std::panicking::try\r\n             at src/libstd/panicking.rs:274\r\n      std::panic::catch_unwind\r\n             at src/libstd/panic.rs:394\r\n      std::rt::lang_start_internal\r\n             at src/libstd/rt.rs:51\r\n   3: std::rt::lang_start\r\n             at /rustc/fa51f810e5b9254904b92660e7280b7d6a46f112/src/libstd/rt.rs:67\r\n   4: main\r\n   5: __libc_start_main\r\n   6: _start\r\n\r\nthread 'main' panicked at 'explicit panic', src/main.rs:7:5\r\nstack backtrace:\r\n   0: backtrace::backtrace::libunwind::trace\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/libunwind.rs:86\r\n   1: backtrace::backtrace::trace_unsynchronized\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/mod.rs:66\r\n   2: std::sys_common::backtrace::_print_fmt\r\n             at src/libstd/sys_common/backtrace.rs:78\r\n   3: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt\r\n             at src/libstd/sys_common/backtrace.rs:59\r\n   4: core::fmt::write\r\n             at src/libcore/fmt/mod.rs:1069\r\n   5: std::io::Write::write_fmt\r\n             at src/libstd/io/mod.rs:1532\r\n   6: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:62\r\n   7: std::sys_common::backtrace::print\r\n             at src/libstd/sys_common/backtrace.rs:49\r\n   8: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/panicking.rs:198\r\n   9: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:218\r\n  10: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:477\r\n  11: std::panicking::begin_panic\r\n             at /rustc/fa51f810e5b9254904b92660e7280b7d6a46f112/src/libstd/panicking.rs:404\r\n  12: playground::main\r\n             at src/main.rs:7\r\n  13: std::rt::lang_start::{{closure}}\r\n             at /rustc/fa51f810e5b9254904b92660e7280b7d6a46f112/src/libstd/rt.rs:67\r\n  14: std::rt::lang_start_internal::{{closure}}\r\n             at src/libstd/rt.rs:52\r\n  15: std::panicking::try::do_call\r\n             at src/libstd/panicking.rs:297\r\n  16: std::panicking::try\r\n             at src/libstd/panicking.rs:274\r\n  17: std::panic::catch_unwind\r\n             at src/libstd/panic.rs:394\r\n  18: std::rt::lang_start_internal\r\n             at src/libstd/rt.rs:51\r\n  19: std::rt::lang_start\r\n             at /rustc/fa51f810e5b9254904b92660e7280b7d6a46f112/src/libstd/rt.rs:67\r\n  20: main\r\n  21: __libc_start_main\r\n  22: _start\r\n```\r\nAs you can see, the first backtrace omits the frame number for some functions, probably because these all share a single frame after inlining. The panic backtrace for some reason lacks this information.\r\n\r\nLooks like we have two separate pieces of backtrace-printing code in libstd, and they behave differently?", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/71706/reactions", "total_count": 2, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 1}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/71706/timeline", "performed_via_github_app": null, "state_reason": null}