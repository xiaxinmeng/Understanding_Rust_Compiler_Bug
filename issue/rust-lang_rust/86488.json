{"url": "https://api.github.com/repos/rust-lang/rust/issues/86488", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/86488/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/86488/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/86488/events", "html_url": "https://github.com/rust-lang/rust/issues/86488", "id": 925606551, "node_id": "MDU6SXNzdWU5MjU2MDY1NTE=", "number": 86488, "title": "E0277 incorrect suggested `where` bound when type is impl Trait argument", "user": {"login": "delan", "id": 465303, "node_id": "MDQ6VXNlcjQ2NTMwMw==", "avatar_url": "https://avatars.githubusercontent.com/u/465303?v=4", "gravatar_id": "", "url": "https://api.github.com/users/delan", "html_url": "https://github.com/delan", "followers_url": "https://api.github.com/users/delan/followers", "following_url": "https://api.github.com/users/delan/following{/other_user}", "gists_url": "https://api.github.com/users/delan/gists{/gist_id}", "starred_url": "https://api.github.com/users/delan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/delan/subscriptions", "organizations_url": "https://api.github.com/users/delan/orgs", "repos_url": "https://api.github.com/users/delan/repos", "events_url": "https://api.github.com/users/delan/events{/privacy}", "received_events_url": "https://api.github.com/users/delan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-06-20T14:03:20Z", "updated_at": "2021-06-20T14:03:20Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Given the following code ([playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=070452b562389660d6d098e9ed265a7f)):\r\n\r\n```rust\r\ntrait Foo: Copy {\r\n    type Result;\r\n    fn foo(self) -> Self::Result;\r\n}\r\n\r\nfn bar(foo: impl Foo) {\r\n    let _: () = foo.into();\r\n    let _: () = foo.foo().into();\r\n}\r\n```\r\n\r\nThe current output is:\r\n\r\n```\r\nerror[E0277]: the trait bound `(): From<impl Foo>` is not satisfied\r\n --> src/lib.rs:7:21\r\n  |\r\n7 |     let _: () = foo.into();\r\n  |                     ^^^^ the trait `From<impl Foo>` is not implemented for `()`\r\n  |\r\n  = note: required because of the requirements on the impl of `Into<()>` for `impl Foo`\r\nhelp: consider introducing a `where` bound, but there might be an alternative better way to express this requirement\r\n  |\r\n6 | fn bar(foo: impl Foo) where (): From<impl Foo> {\r\n  |                       ^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nerror[E0277]: the trait bound `(): From<<impl Foo as Foo>::Result>` is not satisfied\r\n --> src/lib.rs:8:27\r\n  |\r\n8 |     let _: () = foo.foo().into();\r\n  |                           ^^^^ the trait `From<<impl Foo as Foo>::Result>` is not implemented for `()`\r\n  |\r\n  = note: required because of the requirements on the impl of `Into<()>` for `<impl Foo as Foo>::Result`\r\nhelp: consider introducing a `where` bound, but there might be an alternative better way to express this requirement\r\n  |\r\n6 | fn bar(foo: impl Foo) where (): From<<impl Foo as Foo>::Result> {\r\n  |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nerror: aborting due to 2 previous errors\r\n\r\nFor more information about this error, try `rustc --explain E0277`.\r\nerror: could not compile `playground`\r\n```\r\n\r\nFollowing either of those suggestions yields code that doesn\u2019t compile, because impl Trait isn\u2019t allowed in that position. Even if it becomes allowed someday, I feel like they would still be incorrect, since each impl Trait need not refer to the same type?\r\n\r\nIdeally the output should look like:\r\n\r\n```\r\n[...]\r\nhelp: consider introducing a `where` bound, but there might be an alternative better way to express this requirement\r\n  |\r\n6 | fn bar<F: Foo>(foo: F) where (): From<F> + From<<F as Foo>::Result> {\r\n  |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n```\r\n\r\nExamples are on stable (1.53.0), but this also affects 1.54.0-nightly (44456677b 2021-06-12).", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/86488/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/86488/timeline", "performed_via_github_app": null, "state_reason": null}