{"url": "https://api.github.com/repos/rust-lang/rust/issues/94187", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/94187/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/94187/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/94187/events", "html_url": "https://github.com/rust-lang/rust/issues/94187", "id": 1145043319, "node_id": "I_kwDOAAsO6M5EP_l3", "number": 94187, "title": "`type_name` depends on `-Zverbose` flag", "user": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 36996, "node_id": "MDU6TGFiZWwzNjk5Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-easy", "name": "E-easy", "color": "02e10c", "default": false, "description": "Call for participation: Experience needed to fix: Easy / not much (good first issue)"}, {"id": 268744493, "node_id": "MDU6TGFiZWwyNjg3NDQ0OTM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-fn", "name": "A-const-fn", "color": "f7e101", "default": false, "description": "Area: const fn foo(..) {..}. Pure functions which can be applied at compile time."}, {"id": 419557634, "node_id": "MDU6TGFiZWw0MTk1NTc2MzQ=", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-medium", "name": "E-medium", "color": "02e10c", "default": false, "description": "Call for participation: Experience needed to fix: Medium / intermediate"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1282665911, "node_id": "MDU6TGFiZWwxMjgyNjY1OTEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-generics", "name": "A-const-generics", "color": "f7e101", "default": false, "description": "Area: const generics (parameters and arguments)"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2022-02-20T14:58:38Z", "updated_at": "2022-10-31T06:28:28Z", "closed_at": "2022-10-31T06:28:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```rust\r\n#![feature(adt_const_params)]\r\n#![feature(const_type_name)]\r\n#![allow(incomplete_features)]\r\n\r\npub trait True {}\r\n\r\npub struct Equal<const A: &'static str, const B: &'static str>;\r\n\r\nimpl<const A: &'static str> True for Equal<{A}, {A}> {}\r\n\r\npub fn assert<T: True>(_: T) {}\r\n\r\nfn main() {\r\n    assert(Equal::<{std::any::type_name::<[u32; 0]>()}, \"[u32; 0]\">);\r\n}\r\n```\r\n\r\n```console\r\n$ rustc t.rs\r\n$ rustc t.rs -Zverbose\r\nerror[E0277]: the trait bound `Equal<Const(Value(Slice { data: Allocation { bytes: [91, 117, 51, 50, 59, 32, 67, 111, 110, 115, 116, 32, 123, 32, 116, 121, 58, 32, 117, 115, 105, 122, 101, 44, 32, 118, 97, 108, 58, 32, 86, 97, 108, 117, 101, 40, 83, 99, 97, 108, 97, 114, 40, 48, 120, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 41, 41, 32, 125, 93], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [18446744073709551615, 3], len: Size { raw: 66 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 66 }): &ReStatic str), Const(Value(Slice { data: Allocation { bytes: [91, 117, 51, 50, 59, 32, 48, 93], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [255], len: Size { raw: 8 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 8 }): &ReStatic str)>: True` is not satisfied\r\n  --> t.rs:14:12\r\n   |\r\n14 |     assert(Equal::<{std::any::type_name::<[u32; 0]>()}, \"[u32; 0]\">);\r\n   |     ------ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `True` is not implemented for `Equal<Const(Value(Slice { data: Allocation { bytes: [91, 117, 51, 50, 59, 32, 67, 111, 110, 115, 116, 32, 123, 32, 116, 121, 58, 32, 117, 115, 105, 122, 101, 44, 32, 118, 97, 108, 58, 32, 86, 97, 108, 117, 101, 40, 83, 99, 97, 108, 97, 114, 40, 48, 120, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 41, 41, 32, 125, 93], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [18446744073709551615, 3], len: Size { raw: 66 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 66 }): &ReStatic str), Const(Value(Slice { data: Allocation { bytes: [91, 117, 51, 50, 59, 32, 48, 93], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [255], len: Size { raw: 8 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 8 }): &ReStatic str)>`\r\n   |     |\r\n   |     required by a bound introduced by this call\r\n   |\r\n   = help: the following implementations were found:\r\n             <Equal<Const(Param(A/#0): &ReStatic str), Const(Param(A/#0): &ReStatic str)> as True>\r\nnote: required by a bound in `assert`\r\n  --> t.rs:11:18\r\n   |\r\n11 | pub fn assert<T: True>(_: T) {}\r\n   |                  ^^^^ required by this bound in `assert`\r\n\r\nerror: aborting due to previous error\r\n```\r\n\r\ncc #63084", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/94187/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/94187/timeline", "performed_via_github_app": null, "state_reason": "completed"}