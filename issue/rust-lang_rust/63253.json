{"url": "https://api.github.com/repos/rust-lang/rust/issues/63253", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/63253/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/63253/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/63253/events", "html_url": "https://github.com/rust-lang/rust/issues/63253", "id": 476538274, "node_id": "MDU6SXNzdWU0NzY1MzgyNzQ=", "number": 63253, "title": "The type-checker assumes that Trait<'a>::AssociatedType may be outlived by 'a, even with \"where AssociatedType: 'a\"", "user": {"login": "hiddenhare", "id": 43314166, "node_id": "MDQ6VXNlcjQzMzE0MTY2", "avatar_url": "https://avatars.githubusercontent.com/u/43314166?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hiddenhare", "html_url": "https://github.com/hiddenhare", "followers_url": "https://api.github.com/users/hiddenhare/followers", "following_url": "https://api.github.com/users/hiddenhare/following{/other_user}", "gists_url": "https://api.github.com/users/hiddenhare/gists{/gist_id}", "starred_url": "https://api.github.com/users/hiddenhare/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hiddenhare/subscriptions", "organizations_url": "https://api.github.com/users/hiddenhare/orgs", "repos_url": "https://api.github.com/users/hiddenhare/repos", "events_url": "https://api.github.com/users/hiddenhare/events{/privacy}", "received_events_url": "https://api.github.com/users/hiddenhare/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}, {"id": 149689562, "node_id": "MDU6TGFiZWwxNDk2ODk1NjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-associated-items", "name": "A-associated-items", "color": "f7e101", "default": false, "description": "Area: Associated items such as associated types and consts."}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-04T10:30:39Z", "updated_at": "2021-12-13T18:58:03Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "    trait Trait<'a> {\r\n        type Ty;\r\n        fn method(ty_ref: &'a Self::Ty) where Self::Ty: 'a { }\r\n    }\r\n    \r\n    fn caller<'a, T: Trait<'a>>(arg: &'a T::Ty) where T::Ty: 'a {\r\n        T::method(arg)\r\n    }\r\n\r\nCompilation fails on the playground (for stable 1.36.0 and nightly 1.38.0) with this error:\r\n\r\n    Compiling playground v0.0.1 (/playground)\r\n    error[E0309]: the associated type `<T as Trait<'_>>::Ty` may not live long enough\r\n     --> src/lib.rs:7:9\r\n      |\r\n    7 |         T::method(arg)\r\n      |         ^^^^^^^^^\r\n      |\r\n      = help: consider adding an explicit lifetime bound `<T as Trait<'_>>::Ty: 'a`...\r\n    note: ...so that the type `<T as Trait<'_>>::Ty` will meet its required lifetime bounds\r\n     --> src/lib.rs:7:9\r\n      |\r\n    7 |         T::method(arg)\r\n      |         ^^^^^^^^^\r\n    \r\n    error: aborting due to previous error\r\n\r\nCompilation succeeds if I make any of the following changes:\r\n\r\n- Add a lifetime constraint to `Ty` at its definition site, `type Ty: 'a;`\r\n\r\n- Move the lifetime parameter from the trait to the method, `fn method<'a>(...)`\r\n\r\nCompilation fails with the same error message if I change `method` into a free function:\r\n\r\n    trait Trait<'a> {\r\n        type Ty;\r\n    }\r\n    \r\n    fn method<'a, T: Trait<'a>>(_arg: &'a T::Ty) where T::Ty: 'a { }\r\n    \r\n    fn caller<'a, T: Trait<'a>>(arg: &'a T::Ty) where T::Ty: 'a {\r\n        method::<T>(arg)\r\n    }\r\n\r\nEven if this is intended behaviour, the error message could be improved.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/63253/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/63253/timeline", "performed_via_github_app": null, "state_reason": null}