{"url": "https://api.github.com/repos/rust-lang/rust/issues/58419", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/58419/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/58419/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/58419/events", "html_url": "https://github.com/rust-lang/rust/issues/58419", "id": 409719105, "node_id": "MDU6SXNzdWU0MDk3MTkxMDU=", "number": 58419, "title": "Getter functions and indexing don't seem to follow the same lifetime rules", "user": {"login": "ejpbruel2", "id": 31659183, "node_id": "MDQ6VXNlcjMxNjU5MTgz", "avatar_url": "https://avatars.githubusercontent.com/u/31659183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ejpbruel2", "html_url": "https://github.com/ejpbruel2", "followers_url": "https://api.github.com/users/ejpbruel2/followers", "following_url": "https://api.github.com/users/ejpbruel2/following{/other_user}", "gists_url": "https://api.github.com/users/ejpbruel2/gists{/gist_id}", "starred_url": "https://api.github.com/users/ejpbruel2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ejpbruel2/subscriptions", "organizations_url": "https://api.github.com/users/ejpbruel2/orgs", "repos_url": "https://api.github.com/users/ejpbruel2/repos", "events_url": "https://api.github.com/users/ejpbruel2/events{/privacy}", "received_events_url": "https://api.github.com/users/ejpbruel2/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 60344715, "node_id": "MDU6TGFiZWw2MDM0NDcxNQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-medium", "name": "P-medium", "color": "eb6420", "default": false, "description": "Medium priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 604489711, "node_id": "MDU6TGFiZWw2MDQ0ODk3MTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-NLL", "name": "A-NLL", "color": "f7e101", "default": false, "description": "Area: Non Lexical Lifetimes (NLL)"}, {"id": 867465703, "node_id": "MDU6TGFiZWw4Njc0NjU3MDM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/NLL-complete", "name": "NLL-complete", "color": "f799ea", "default": false, "description": "Working towards the \"valid code works\" goal"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-02-13T09:57:53Z", "updated_at": "2023-02-17T03:52:25Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "This is my first issue for the Rust project. Apologies up front if it is somehow unclear. I'd be happy to provide any additional information you need.\r\n\r\nDESCRIPTION\r\n\r\nThe issue I'm running into is this. Consider the following code:\r\n`collection.get_mut(collection.get(0).unwrap().index).unwrap().index = 1;`\r\n\r\nThe inner call to `get` causes an immutable borrow on `collection`. We then obtain a index from the return value, and use that for the outer call to `get_mut`. This causes a mutable borrow on `collection`.\r\n\r\nThe above code compiles just fine. My assumption is that because `index` implements `Copy`, NLL allow the immutable borrow on `collection` to be dropped as soon as we have a copy of `index`, so we can borrow it mutably again after that.\r\n\r\nSo far, so good. However, now consider the following code:\r\n`collection[collection[0].index].index = 1`;\r\n\r\nEXPECTED BEHAVIOR\r\n\r\nThis should be equivalent to the earlier code. In fact, I've implemented the `Index` trait to forward to `get(index).unwrap()`.\r\n\r\nACTUAL BEHAVIOR\r\n\r\nThis time, however, the compiler complains:\r\n`error[E0502]: cannot borrow `collection` as immutable because it is also borrowed as mutable`\r\n\r\n\r\nFor more context, here is a playground link that illustrates the problem:\r\nhttps://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=21d19fde2c8c58d4859bfdefa3b7720a", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/58419/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/58419/timeline", "performed_via_github_app": null, "state_reason": null}