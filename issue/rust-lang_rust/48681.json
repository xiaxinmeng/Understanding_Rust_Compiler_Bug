{"url": "https://api.github.com/repos/rust-lang/rust/issues/48681", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/48681/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/48681/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/48681/events", "html_url": "https://github.com/rust-lang/rust/issues/48681", "id": 301881165, "node_id": "MDU6SXNzdWUzMDE4ODExNjU=", "number": 48681, "title": "Command.spawn posix_spawn support for NetBSD / DragonFlyBSD.", "user": {"login": "bdrewery", "id": 33693, "node_id": "MDQ6VXNlcjMzNjkz", "avatar_url": "https://avatars.githubusercontent.com/u/33693?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bdrewery", "html_url": "https://github.com/bdrewery", "followers_url": "https://api.github.com/users/bdrewery/followers", "following_url": "https://api.github.com/users/bdrewery/following{/other_user}", "gists_url": "https://api.github.com/users/bdrewery/gists{/gist_id}", "starred_url": "https://api.github.com/users/bdrewery/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bdrewery/subscriptions", "organizations_url": "https://api.github.com/users/bdrewery/orgs", "repos_url": "https://api.github.com/users/bdrewery/repos", "events_url": "https://api.github.com/users/bdrewery/events{/privacy}", "received_events_url": "https://api.github.com/users/bdrewery/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 36953, "node_id": "MDU6TGFiZWwzNjk1Mw==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-runtime", "name": "A-runtime", "color": "f7e101", "default": false, "description": "Area: std's runtime and \"pre-main\" init for handling backtraces, unwinds, stack overflows"}, {"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 311417590, "node_id": "MDU6TGFiZWwzMTE0MTc1OTA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-netbsd", "name": "O-netbsd", "color": "6e6ec0", "default": false, "description": "Operating system: NetBSD"}, {"id": 854301764, "node_id": "MDU6TGFiZWw4NTQzMDE3NjQ=", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-dragonfly", "name": "O-dragonfly", "color": "6e6ec0", "default": false, "description": "Operating system: DragonFly BSD"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-02T19:38:09Z", "updated_at": "2018-03-02T21:54:16Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Issue #48624 is adding support for the more efficient `posix_spawn` in some cases of `Command.spawn`. The `posix_spawn` of NetBSD and DragonFlyBSD supports returning _ENOENT_ directly so these platforms can grow support for it. They just need the libc bindings (like in https://github.com/rust-lang/libc/commit/92d50c9c79e7038db097344d8f00e774277ee519) and then an update to libstd's Command target list as done in #48624.\r\n\r\nOpenBSD does not support this though as their implementation uses `fork` rather than `vfork` and lacks a communication back to the parent about the `exec` failure.\r\n\r\nThis test .c file was used to check for the needed support:\r\n\r\n```\r\n#include <assert.h>\r\n#include <stdlib.h>\r\n#include <errno.h>\r\n#include <spawn.h>\r\n\r\nextern char **environ;\r\n\r\nint\r\nmain(void)\r\n{\r\n    pid_t pid;\r\n    char *pargv[] = {\"/nonexistent\", NULL};\r\n    int status = posix_spawn(&pid, \"/nonexistent\", NULL, NULL, pargv, environ);\r\n    assert(status == ENOENT);\r\n    return 0;\r\n}\r\n```\r\n\r\nA failing assert means the platform cannot grow `posix_spawn` support.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/48681/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/48681/timeline", "performed_via_github_app": null, "state_reason": null}