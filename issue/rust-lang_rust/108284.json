{"url": "https://api.github.com/repos/rust-lang/rust/issues/108284", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/108284/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/108284/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/108284/events", "html_url": "https://github.com/rust-lang/rust/issues/108284", "id": 1592391510, "node_id": "I_kwDOAAsO6M5e6fdW", "number": 108284, "title": "missing fields in a struct pattern for a tuple variant syntax produces a flawed error", "user": {"login": "oftheforest", "id": 120892488, "node_id": "U_kgDOBzSsSA", "avatar_url": "https://avatars.githubusercontent.com/u/120892488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oftheforest", "html_url": "https://github.com/oftheforest", "followers_url": "https://api.github.com/users/oftheforest/followers", "following_url": "https://api.github.com/users/oftheforest/following{/other_user}", "gists_url": "https://api.github.com/users/oftheforest/gists{/gist_id}", "starred_url": "https://api.github.com/users/oftheforest/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oftheforest/subscriptions", "organizations_url": "https://api.github.com/users/oftheforest/orgs", "repos_url": "https://api.github.com/users/oftheforest/repos", "events_url": "https://api.github.com/users/oftheforest/events{/privacy}", "received_events_url": "https://api.github.com/users/oftheforest/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2023-02-20T20:11:16Z", "updated_at": "2023-04-09T23:12:36Z", "closed_at": "2023-04-09T23:12:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Suppose you have an enum with a tuple variant, and you try to match it with a struct pattern using field indices instead of names, but you forget some of the fields. Besides the missing fields, this is valid, but the error just tells you to switch to tuple variant syntax. ([playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021&gist=f90f7db153c0eb3a1782cb48eea13d95))\r\n\r\n```rust\r\npub enum Foo {\r\n    Bar(i32, i32),\r\n}\r\n\r\nimpl Foo {\r\n    pub fn qux(&self) {\r\n        match self {\r\n            Foo::Bar { 0: _ } => unimplemented!(),\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n```\r\nerror[E0769]: tuple variant `Foo::Bar` written as struct variant\r\n --> src/lib.rs:8:13\r\n  |\r\n8 |             Foo::Bar { 0: _ } => unimplemented!(),\r\n  |             ^^^^^^^^^^^^^^^^^\r\n  |\r\nhelp: use the tuple variant pattern syntax instead\r\n  |\r\n8 |             Foo::Bar(_, _) => unimplemented!(),\r\n  |                     ~~~~~~\r\n```\r\n\r\nThe error message you would have gotten if you had used tuple variant syntax is nicer ([playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021&gist=3494702af2690ec342fe6b790565a6eb)):\r\n\r\n```rust\r\npub enum Foo {\r\n    Bar(i32, i32),\r\n}\r\n\r\nimpl Foo {\r\n    pub fn qux(&self) {\r\n        match self {\r\n            Foo::Bar(_) => unimplemented!(),\r\n            //      ^^^ changed\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n```\r\nerror[E0023]: this pattern has 1 field, but the corresponding tuple variant has 2 fields\r\n --> src/lib.rs:8:22\r\n  |\r\n2 |     Bar(i32, i32),\r\n  |         ---  --- tuple variant has 2 fields\r\n...\r\n8 |             Foo::Bar(_) => unimplemented!(),\r\n  |                      ^ expected 2 fields, found 1\r\n  |\r\nhelp: use `_` to explicitly ignore each field\r\n  |\r\n8 |             Foo::Bar(_, _) => unimplemented!(),\r\n  |                       +++\r\nhelp: use `..` to ignore all fields\r\n  |\r\n8 |             Foo::Bar(..) => unimplemented!(),\r\n  |                      ~~\r\n```\r\n\r\nIt might be nice to change the first error to be more like the second. Something like:\r\n\r\n```\r\nerror[E0023]: this pattern has 1 field, but the corresponding tuple variant has 2 fields\r\n --> src/lib.rs:8:22\r\n  |\r\n2 |     Bar(i32, i32),\r\n  |         ---  --- tuple variant has 2 fields\r\n...\r\n8 |             Foo::Bar { 0: _ } => unimplemented!(),\r\n  |                        ^^^^ expected 2 fields, found 1\r\n  |\r\nhelp: use `_` to explicitly ignore each field\r\n  |\r\n8 |             Foo::Bar { 0: _, 1: _ } => unimplemented!(),\r\n  |                            ++++++\r\nhelp: use `..` to ignore all fields\r\n  |\r\n8 |             Foo::Bar { .. } => unimplemented!(),\r\n  |                        ~~\r\n```\r\n\r\nOn the other hand, we might not want to do this: it risks being confusing to beginners, and unless you're writing a macro, you probably shouldn't use struct variant syntax to match a tuple variant.\r\n\r\nWe _could_ add yet another note explaining that:\r\n\r\n```\r\nnote: since `Foo::Bar` is a tuple variant, using the tuple variant pattern syntax would be more idiomatic\r\n  |\r\n8 |             Foo::Bar(_, _) => unimplemented!(),\r\n  |                     ~~~~~~\r\n```\r\n\r\nbut that might be too much.\r\n\r\nTested in today's playground (1.69.0-nightly 2023-02-17 7aa413d59206fd511137728df3d9e0fd377429bd).\r\n\r\nSomewhat related to/may interact with #79652.", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/108284/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/108284/timeline", "performed_via_github_app": null, "state_reason": "completed"}