{"url": "https://api.github.com/repos/rust-lang/rust/issues/24558", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/24558/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/24558/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/24558/events", "html_url": "https://github.com/rust-lang/rust/issues/24558", "id": 69324146, "node_id": "MDU6SXNzdWU2OTMyNDE0Ng==", "number": 24558, "title": "docs for Traits get duplicated because of different types", "user": {"login": "mdinger", "id": 4156987, "node_id": "MDQ6VXNlcjQxNTY5ODc=", "avatar_url": "https://avatars.githubusercontent.com/u/4156987?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mdinger", "html_url": "https://github.com/mdinger", "followers_url": "https://api.github.com/users/mdinger/followers", "following_url": "https://api.github.com/users/mdinger/following{/other_user}", "gists_url": "https://api.github.com/users/mdinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/mdinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mdinger/subscriptions", "organizations_url": "https://api.github.com/users/mdinger/orgs", "repos_url": "https://api.github.com/users/mdinger/repos", "events_url": "https://api.github.com/users/mdinger/events{/privacy}", "received_events_url": "https://api.github.com/users/mdinger/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 203738, "node_id": "MDU6TGFiZWwyMDM3Mzg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-rustdoc", "name": "T-rustdoc", "color": "bfd4f2", "default": false, "description": "Relevant to the rustdoc team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-04-18T16:26:29Z", "updated_at": "2022-01-18T21:36:12Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "[f32](http://doc.rust-lang.org/nightly/std/primitive.f32.html#) for example essentially supports traits like `Add` which have multiple copies which aren't duplicates but seem repetitive because they are essentially very similar:\n#### Currently:\n\n``` rust\nimpl Add<f32> for f32\n    type Output = f32\n\n    fn add(self, other: f32) -> f32\n\nimpl<'a> Add<f32> for &'a f32\n    type Output = f32::Output\n\n    fn add(self, other: f32) -> f32::Output\n\nimpl<'a> Add<&'a f32> for f32\n    type Output = f32::Output\n\n    fn add(self, other: &'a f32) -> f32::Output\n\nimpl<'a, 'b> Add<&'a f32> for &'b f32\n    type Output = f32::Output\n\n    fn add(self, other: &'a f32) -> f32::Output\n```\n\nIt would be very nice if these could be combined so the repetition is less drastic. I've only come up with 2 options so far but maybe there are more.\n#### Option A:\n\nThis is tricky to improve because all are different. One course would be to collapse all but the last by default which would make it look like the following block. This would also aid https://github.com/rust-lang/rust/issues/21660 . This makes all the types clear but only shows one method because all the methods will be the same.\n\n``` rust\n+impl Add<f32> for f32\n+impl<'a> Add<f32> for &'a f32\n+impl<'a> Add<&'a f32> for f32\n-impl<'a, 'b> Add<&'a f32> for &'b f32\n    type Output = f32::Output\n\n    fn add(self, other: &'a f32) -> f32::Output\n```\n#### Option B:\n\nUse some type of shorthand to include all options (like globbing). This should expand to specifics if desired I suppose.\n\n``` rust\nimpl<.*> Add<.* f32> for .* f32\n    type Output = f32.*\n\n    fn add(self, other: .* f32) -> f32::Output\n```\n\n---\n\nOption A looks the most practical. I'm trying to think of a better way to include only one but still allow the specifics to be examined but haven't come up with any better ideas.\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/24558/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/24558/timeline", "performed_via_github_app": null, "state_reason": null}