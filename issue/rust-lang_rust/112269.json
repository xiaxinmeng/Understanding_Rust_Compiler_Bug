{"url": "https://api.github.com/repos/rust-lang/rust/issues/112269", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/112269/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/112269/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/112269/events", "html_url": "https://github.com/rust-lang/rust/issues/112269", "id": 1740311963, "node_id": "I_kwDOAAsO6M5nuw2b", "number": 112269, "title": "very weird warning when using same varname for const and let binding", "user": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2023-06-04T11:12:27Z", "updated_at": "2023-06-05T04:23:19Z", "closed_at": "2023-06-05T04:23:19Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "### Code\r\n\r\n```Rust\r\n\r\npub fn main() {\r\n    const y: i32 = 4;\r\n    let y: i32 = 3;\r\n}\r\n```\r\n\r\nThis will cause rustc to interpret the `y` as a `if let ` binding for some reason which seems quite surprising.\r\n```\r\nerror[E0005]: refutable pattern in local binding\r\n --> src/main.rs:3:9\r\n  |\r\n3 |     let y: i32 = 3;\r\n  |         ^ patterns `i32::MIN..=3_i32` and `5_i32..=i32::MAX` not covered\r\n  |\r\n  = note: `let` bindings require an \"irrefutable pattern\", like a `struct` or an `enum` with only one variant\r\n  = note: for more information, visit https://doc.rust-lang.org/book/ch18-02-refutability.html\r\n  = note: the matched value is of type `i32`\r\nhelp: you might want to use `if let` to ignore the variants that aren't matched\r\n  |\r\n3 |     if let y: i32 = 3 { todo!() };\r\n  |     ++                +++++++++++\r\n\r\nFor more information about this error, try `rustc --explain E0005`.\r\n```\r\n\r\nWhen I replace `let` by `static`, I get a warning that seems to be much closer to reality:\r\n\r\n```rust\r\npub fn main() {\r\n    const y: i32 = 4;\r\n    static y: i32 = 3;\r\n}\r\n\r\n```\r\n\r\n````\r\nerror[E0428]: the name `y` is defined multiple times\r\n --> src/main.rs:3:5\r\n  |\r\n2 |     const y: i32 = 4;\r\n  |     ----------------- previous definition of the value `y` here\r\n3 |     static y: i32 = 3;\r\n  |     ^^^^^^^^^^^^^^^^^^ `y` redefined here\r\n  |\r\n  = note: `y` must be defined only once in the value namespace of this block\r\n\r\nFor more information about this error, try `rustc --explain E0428`.\r\nerror: could not compile `playground` (bin \"playground\") due to previous error\r\n````\r\n\r\nIMO it would make sense to issue such warning for the first case as well, instead of the if-let/range diagnostic.\r\n```\r\n\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/112269/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/112269/timeline", "performed_via_github_app": null, "state_reason": "completed"}