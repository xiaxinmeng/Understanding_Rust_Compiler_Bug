{"url": "https://api.github.com/repos/rust-lang/rust/issues/93622", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/93622/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/93622/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/93622/events", "html_url": "https://github.com/rust-lang/rust/issues/93622", "id": 1123104249, "node_id": "I_kwDOAAsO6M5C8TX5", "number": 93622, "title": "ICE when passing unsized trait object closure to function ", "user": {"login": "xldenis", "id": 451373, "node_id": "MDQ6VXNlcjQ1MTM3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/451373?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xldenis", "html_url": "https://github.com/xldenis", "followers_url": "https://api.github.com/users/xldenis/followers", "following_url": "https://api.github.com/users/xldenis/following{/other_user}", "gists_url": "https://api.github.com/users/xldenis/gists{/gist_id}", "starred_url": "https://api.github.com/users/xldenis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xldenis/subscriptions", "organizations_url": "https://api.github.com/users/xldenis/orgs", "repos_url": "https://api.github.com/users/xldenis/repos", "events_url": "https://api.github.com/users/xldenis/events{/privacy}", "received_events_url": "https://api.github.com/users/xldenis/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2022-02-03T13:44:28Z", "updated_at": "2023-05-10T15:28:29Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Playing around with `unsized_fn_params`, @jhjourdan and I encountered an ICE caused by `move` closures. Removing the marked `move` allows the code to compile successfully. \r\n\r\n[Playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=3c18d831e2b7798bbedb4ab383057c25)\r\n### Code\r\n\r\n```Rust\r\n#![feature(unsized_fn_params)]\r\n\r\npub enum Tree {\r\n    Node(Box<Tree>, Box<Tree>),\r\n    Leaf,\r\n}\r\n\r\npub type Cont<'a> = dyn Fn(u64) -> u64 + 'a;\r\n\r\npub fn height_cps<'a>(x : &'a Tree, k : Cont<'a>) -> u64 {\r\n    match x {\r\n        Tree::Leaf => k(0),\r\n        Tree::Node(l, r) => {\r\n            //                                          v-- causes crash\r\n            height_cps(l, {let k : Box<Cont> = Box::new(move |lh| {\r\n                height_cps(r, {let k : Box<Cont> = Box::new(|lr| { k(1 + lh.max(lr)) }); *k})\r\n            }); *k})\r\n        }\r\n    }\r\n}\r\n\r\nfn main () {\r\n    height_cps(&Tree::Leaf, *(Box::new(|i| {i}) as Box<Cont>));\r\n}\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.60.0-nightly (ad46af247 2022-01-14)\r\nbinary: rustc\r\ncommit-hash: ad46af24713115e7b9b258346e66b9b2d14eacfc\r\ncommit-date: 2022-01-14\r\nhost: aarch64-apple-darwin\r\nrelease: 1.60.0-nightly\r\nLLVM version: 13.0.0\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nerror: internal compiler error: /rustc/ad46af24713115e7b9b258346e66b9b2d14eacfc/compiler/rustc_const_eval/src/interpret/eval_context.rs:689:18: size_and_align_of::<[closure@cps.rs:14:57: 16:14]> not supported\r\n  --> cps.rs:11:11\r\n   |\r\n11 |     match x {\r\n   |           ^\r\n\r\nthread 'rustc' panicked at 'Box<dyn Any>', /rustc/ad46af24713115e7b9b258346e66b9b2d14eacfc/compiler/rustc_errors/src/lib.rs:1115:9\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrac\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nstack backtrace:\r\n   0: std::panicking::begin_panic::<rustc_errors::ExplicitBug>\r\n   1: std::panic::panic_any::<rustc_errors::ExplicitBug>\r\n   2: <rustc_errors::HandlerInner>::span_bug::<rustc_span::span_encoding::Span>\r\n   3: <rustc_errors::Handler>::span_bug::<rustc_span::span_encoding::Span>\r\n   4: rustc_middle::ty::context::tls::with_opt::<rustc_middle::util::bug::opt_span_bug_fmt<rustc_span::span_encoding::Span>::{closure#0}, ()>\r\n   5: rustc_middle::util::bug::opt_span_bug_fmt::<rustc_span::span_encoding::Span>\r\n   6: rustc_middle::util::bug::span_bug_fmt::<rustc_span::span_encoding::Span>\r\n   7: <rustc_const_eval::interpret::eval_context::InterpCx<rustc_mir_transform::const_prop::ConstPropMachine>>::size_and_align_of\r\n   8: <rustc_const_eval::interpret::eval_context::InterpCx<rustc_mir_transform::const_prop::ConstPropMachine>>::force_allocation_maybe_sized\r\n   9: <rustc_const_eval::interpret::eval_context::InterpCx<rustc_mir_transform::const_prop::ConstPropMachine>>::place_field\r\n  10: <rustc_const_eval::interpret::eval_context::InterpCx<rustc_mir_transform::const_prop::ConstPropMachine>>::eval_place\r\n  11: <rustc_const_eval::interpret::eval_context::InterpCx<rustc_mir_transform::const_prop::ConstPropMachine>>::eval_rvalue_into_place\r\n  12: <rustc_mir_transform::const_prop::ConstPropagator as rustc_middle::mir::visit::MutVisitor>::visit_statement\r\n  13: <rustc_mir_transform::const_prop::ConstPropagator as rustc_middle::mir::visit::MutVisitor>::visit_body\r\n  14: <rustc_mir_transform::const_prop::ConstProp as rustc_middle::mir::MirPass>::run_pass\r\n  15: rustc_mir_transform::pass_manager::run_passes\r\n  16: rustc_mir_transform::optimized_mir\r\n  17: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::DefaultCache<rustc_span::def_id::DefId, &rustc_middle::mir::Body>>\r\n  18: rustc_query_system::query::plumbing::get_query::<rustc_query_impl::queries::optimized_mir, rustc_query_impl::plumbing::QueryCtxt>\r\n  19: <rustc_middle::ty::context::TyCtxt>::instance_mir\r\n  20: rustc_monomorphize::collector::collect_neighbours\r\n  21: rustc_monomorphize::collector::collect_items_rec\r\n  22: rustc_monomorphize::collector::collect_items_rec\r\n  23: <rustc_session::session::Session>::time::<(), rustc_monomorphize::collector::collect_crate_mono_items::{closure#1}>\r\n  24: rustc_monomorphize::collector::collect_crate_mono_items\r\n  25: rustc_monomorphize::partitioning::collect_and_partition_mono_items\r\n  26: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::DefaultCache<(), (&std::collections::hash::set::HashSet<rustc_span::def_id::DefId, core::hash::BuildHasherDefault<rustc_hash::FxHasher>>, &[rustc_middle::mir::mono::CodegenUnit])>>\r\n  27: rustc_query_system::query::plumbing::get_query::<rustc_query_impl::queries::collect_and_partition_mono_items, rustc_query_impl::plumbing::QueryCtxt>\r\n  28: rustc_codegen_ssa::base::codegen_crate::<rustc_codegen_llvm::LlvmCodegenBackend>\r\n  29: <rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::CodegenBackend>::codegen_crate\r\n  30: <rustc_session::session::Session>::time::<alloc::boxed::Box<dyn core::any::Any>, rustc_interface::passes::start_codegen::{closure#0}>\r\n  31: <rustc_interface::queries::Queries>::ongoing_codegen\r\n  32: <rustc_interface::interface::Compiler>::enter::<rustc_driver::run_compiler::{closure#1}::{closure#2}, core::result::Result<core::option::Option<rustc_interface::queries::Linker>, rustc_errors::ErrorReported>>\r\n  33: rustc_span::with_source_map::<core::result::Result<(), rustc_errors::ErrorReported>, rustc_interface::interface::create_compiler_and_run<core::result::Result<(), rustc_errors::ErrorReported>, rustc_driver::run_compiler::{closure#1}>::{closure#1}>\r\n  34: rustc_interface::interface::create_compiler_and_run::<core::result::Result<(), rustc_errors::ErrorReported>, rustc_driver::run_compiler::{closure#1}>\r\n  35: <scoped_tls::ScopedKey<rustc_span::SessionGlobals>>::set::<rustc_interface::util::setup_callbacks_and_run_in_thread_pool_with_globals<rustc_interface::interface::run_compiler<core::result::Result<(), rustc_errors::ErrorReported>, rustc_driver::run_compiler::{closure#1}>::{closure#0}, core::result::Result<(), rustc_errors::ErrorReported>>::{closure#0}::{closure#0}, core::result::Result<(), rustc_errors::ErrorReported>>\r\n\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/93622/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/93622/timeline", "performed_via_github_app": null, "state_reason": null}