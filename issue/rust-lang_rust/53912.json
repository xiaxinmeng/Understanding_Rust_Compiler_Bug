{"url": "https://api.github.com/repos/rust-lang/rust/issues/53912", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/53912/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/53912/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/53912/events", "html_url": "https://github.com/rust-lang/rust/issues/53912", "id": 356332412, "node_id": "MDU6SXNzdWUzNTYzMzI0MTI=", "number": 53912, "title": "[LLVM] Segfault / \"llvm::thinLTOInternalizeModule ... Assertion `GS != DefinedGlobals.end()' failed\".", "user": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 100522, "node_id": "MDU6TGFiZWwxMDA1MjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-crash", "name": "I-crash", "color": "e10c02", "default": false, "description": "Issue: The compiler crashes (SIGSEGV, SIGABRT, etc). Use I-ICE instead when the compiler panics."}, {"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-09-03T01:34:35Z", "updated_at": "2019-05-29T01:53:03Z", "closed_at": "2019-05-29T01:53:03Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "This example (reduced from `rustc_codegen_llvm`) either crashes LLVM or makes it emit an assertion:\r\n```rust\r\nfn dummy() {}\r\n\r\nmod llvm {\r\n    pub(crate) struct Foo;\r\n}\r\nmod foo {\r\n    pub(crate) struct Foo<T>(T);\r\n    impl Foo<::llvm::Foo> {\r\n        pub(crate) fn foo() {\r\n            for _ in 0..0 {\r\n                for _ in &[::dummy()] {\r\n                    ::dummy();\r\n                    ::dummy();\r\n                    ::dummy();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    pub(crate) fn foo() {\r\n        Foo::foo();\r\n        Foo::foo();\r\n    }\r\n}\r\npub fn foo() {\r\n    foo::foo();\r\n}\r\n```\r\n\r\nI suspect the `for` loops aren't needed, but the control-flow there affects the bug in finicky ways.\r\n\r\nThe `llvm` name of the module appears to be important and tied to the fact that we end up emitting `llvm::` in a symbol name (because of the `impl`), which gets mangled as `llvm..` (note the two dots).\r\nAmong other things, changing the `.` we use to mangle `:`, to `$` makes the bug go away.\r\n\r\nAssertion message (if LLVM assertions are enabled):\r\n```cxx\r\nrustc: /checkout/src/llvm/lib/Transforms/IPO/FunctionImport.cpp:961:\r\nauto llvm::thinLTOInternalizeModule(llvm::Module &, const llvm::GVSummaryMapTy &)::(anonymous class)::operator()(const llvm::GlobalValue &) const:\r\nAssertion `GS != DefinedGlobals.end()' failed.\r\n```\r\n\r\nStack backtrace for SIGSEGV (if LLVM assertions are disabled):\r\n```cxx\r\n#0  0x00007fffed5240d2 in std::_Function_handler<bool (llvm::GlobalValue const&), llvm::thinLTOInternalizeModule(llvm::Module&, llvm::DenseMap<unsigned long, llvm::GlobalValueSummary*, llvm::DenseMapInfo<unsigned long>, llvm::detail::DenseMapPair<unsigned long, llvm::GlobalValueSummary*> > const&)::$_2>::_M_invoke(std::_Any_data const&, llvm::GlobalValue const&) ()\r\n   from /home/eddy/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/codegen-backends/librustc_codegen_llvm-llvm.so\r\n#1  0x00007fffed5409be in llvm::InternalizePass::maybeInternalize(llvm::GlobalValue&, std::set<llvm::Comdat const*, std::less<llvm::Comdat const*>, std::allocator<llvm::Comdat const*> > const&) ()\r\n   from /home/eddy/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/codegen-backends/librustc_codegen_llvm-llvm.so\r\n#2  0x00007fffed540e26 in llvm::InternalizePass::internalizeModule(llvm::Module&, llvm::CallGraph*) ()\r\n   from /home/eddy/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/codegen-backends/librustc_codegen_llvm-llvm.so\r\n#3  0x00007fffed520079 in llvm::thinLTOInternalizeModule(llvm::Module&, llvm::DenseMap<unsigned long, llvm::GlobalValueSummary*, llvm::DenseMapInfo<unsigned long>, llvm::detail::DenseMapPair<unsigned long, llvm::GlobalValueSummary*> > const&) ()\r\n   from /home/eddy/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/codegen-backends/librustc_codegen_llvm-llvm.so\r\n#4  0x00007fffecda34f8 in LLVMRustPrepareThinLTOInternalize ()\r\n   from /home/eddy/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/codegen-backends/librustc_codegen_llvm-llvm.so\r\n#5  0x00007fffeccb1a2c in rustc_codegen_llvm::back::lto::LtoModuleCodegen::optimize ()\r\n   from /home/eddy/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/codegen-backends/librustc_codegen_llvm-llvm.so\r\n#6  0x00007fffecc5fbb2 in rustc_codegen_llvm::back::write::execute_work_item ()\r\n   from /home/eddy/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/codegen-backends/librustc_codegen_llvm-llvm.so\r\n```\r\n\r\ncc @sunfishcode @denismerigoux @alexcrichton @rkruppe", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/53912/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/53912/timeline", "performed_via_github_app": null, "state_reason": "completed"}