{"url": "https://api.github.com/repos/rust-lang/rust/issues/98896", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/98896/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/98896/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/98896/events", "html_url": "https://github.com/rust-lang/rust/issues/98896", "id": 1293317167, "node_id": "I_kwDOAAsO6M5NFnQv", "number": 98896, "title": "StorageDead is not dominated by StorageLive", "user": {"login": "vakaras", "id": 75347, "node_id": "MDQ6VXNlcjc1MzQ3", "avatar_url": "https://avatars.githubusercontent.com/u/75347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vakaras", "html_url": "https://github.com/vakaras", "followers_url": "https://api.github.com/users/vakaras/followers", "following_url": "https://api.github.com/users/vakaras/following{/other_user}", "gists_url": "https://api.github.com/users/vakaras/gists{/gist_id}", "starred_url": "https://api.github.com/users/vakaras/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vakaras/subscriptions", "organizations_url": "https://api.github.com/users/vakaras/orgs", "repos_url": "https://api.github.com/users/vakaras/repos", "events_url": "https://api.github.com/users/vakaras/events{/privacy}", "received_events_url": "https://api.github.com/users/vakaras/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 256133398, "node_id": "MDU6TGFiZWwyNTYxMzMzOTg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-mir", "name": "A-mir", "color": "f7e101", "default": false, "description": "Area: Mid-level IR (MIR) - https://blog.rust-lang.org/2016/04/19/MIR.html"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2022-07-04T15:31:29Z", "updated_at": "2022-08-25T04:26:19Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As far as I understand, a `StorageDead` has to be dominated by `StorageLive`. For this code (which is a simplified version of `#[derive(PartialEq, Eq)]` on `E`):\n\n```rust\nstruct E {\n    g: i32,\n    f: i32,\n}\n\nfn test(a: &E, b: &E) -> bool {\n    a.g == b.g && a.f == b.f\n}\n```\n\nThis does not seem to be the case. I get the following MIR (`mir_dump/test.test.-------.renumber.0.mir` produced with `rustc +nightly -Zdump-mir=all -Zdump-mir-dataflow=y -Zdump-mir-graphviz=y --crate-type lib test.rs`):\n\n```\n// MIR for `test` 0 renumber\n\nfn test(_1: &E, _2: &E) -> bool {\n    debug a => _1;                       // in scope 0 at test.rs:6:9: 6:10\n    debug b => _2;                       // in scope 0 at test.rs:6:16: 6:17\n    let mut _0: bool;                    // return place in scope 0 at test.rs:6:26: 6:30\n    let mut _3: bool;                    // in scope 0 at test.rs:7:5: 7:15\n    let mut _4: i32;                     // in scope 0 at test.rs:7:5: 7:8\n    let mut _5: i32;                     // in scope 0 at test.rs:7:12: 7:15\n    let mut _6: bool;                    // in scope 0 at test.rs:7:19: 7:29\n    let mut _7: i32;                     // in scope 0 at test.rs:7:19: 7:22\n    let mut _8: i32;                     // in scope 0 at test.rs:7:26: 7:29\n\n    bb0: {\n        StorageLive(_3);                 // scope 0 at test.rs:7:5: 7:15\n        StorageLive(_4);                 // scope 0 at test.rs:7:5: 7:8\n        _4 = ((*_1).0: i32);             // scope 0 at test.rs:7:5: 7:8\n        StorageLive(_5);                 // scope 0 at test.rs:7:12: 7:15\n        _5 = ((*_2).0: i32);             // scope 0 at test.rs:7:12: 7:15\n        _3 = Eq(move _4, move _5);       // scope 0 at test.rs:7:5: 7:15\n        StorageDead(_5);                 // scope 0 at test.rs:7:14: 7:15\n        StorageDead(_4);                 // scope 0 at test.rs:7:14: 7:15\n        switchInt(move _3) -> [false: bb1, otherwise: bb2]; // scope 0 at test.rs:7:5: 7:29\n    }\n\n    bb1: {\n        _0 = const false;                // scope 0 at test.rs:7:5: 7:29\n        goto -> bb3;                     // scope 0 at test.rs:7:5: 7:29\n    }\n\n    bb2: {\n        StorageLive(_6);                 // scope 0 at test.rs:7:19: 7:29\n        StorageLive(_7);                 // scope 0 at test.rs:7:19: 7:22\n        _7 = ((*_1).1: i32);             // scope 0 at test.rs:7:19: 7:22\n        StorageLive(_8);                 // scope 0 at test.rs:7:26: 7:29\n        _8 = ((*_2).1: i32);             // scope 0 at test.rs:7:26: 7:29\n        _6 = Eq(move _7, move _8);       // scope 0 at test.rs:7:19: 7:29\n        StorageDead(_8);                 // scope 0 at test.rs:7:28: 7:29\n        StorageDead(_7);                 // scope 0 at test.rs:7:28: 7:29\n        _0 = move _6;                    // scope 0 at test.rs:7:5: 7:29\n        goto -> bb3;                     // scope 0 at test.rs:7:5: 7:29\n    }\n\n    bb3: {\n        StorageDead(_6);                 // scope 0 at test.rs:7:28: 7:29\n        StorageDead(_3);                 // scope 0 at test.rs:7:28: 7:29\n        return;                          // scope 0 at test.rs:8:2: 8:2\n    }\n}\n```\n\nThe execution path `bb0 \u2192 bb1 \u2192 bb3` executes `StorageDead(_6);` without executing `StorageLive(_6);`, which, as far as I understand, is a bug.\n\n### Meta\n\n`rustc --version --verbose`:\n```\nrustc +nightly --version --verbose\nrustc 1.64.0-nightly (495b21669 2022-07-03)\nbinary: rustc\ncommit-hash: 495b216696ccbc27c73d6bdc486bf4621d610f4b\ncommit-date: 2022-07-03\nhost: x86_64-unknown-linux-gnu\nrelease: 1.64.0-nightly\nLLVM version: 14.0.6\n```\n\n### Related issues\n\n#68622\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":null}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/98896/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/98896/timeline", "performed_via_github_app": null, "state_reason": null}