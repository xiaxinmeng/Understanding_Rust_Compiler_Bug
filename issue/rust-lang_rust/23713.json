{"url": "https://api.github.com/repos/rust-lang/rust/issues/23713", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/23713/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/23713/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/23713/events", "html_url": "https://github.com/rust-lang/rust/issues/23713", "id": 64364053, "node_id": "MDU6SXNzdWU2NDM2NDA1Mw==", "number": 23713, "title": "Make Option.unwrap documentation more precise", "user": {"login": "jviereck", "id": 191719, "node_id": "MDQ6VXNlcjE5MTcxOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/191719?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jviereck", "html_url": "https://github.com/jviereck", "followers_url": "https://api.github.com/users/jviereck/followers", "following_url": "https://api.github.com/users/jviereck/following{/other_user}", "gists_url": "https://api.github.com/users/jviereck/gists{/gist_id}", "starred_url": "https://api.github.com/users/jviereck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jviereck/subscriptions", "organizations_url": "https://api.github.com/users/jviereck/orgs", "repos_url": "https://api.github.com/users/jviereck/repos", "events_url": "https://api.github.com/users/jviereck/events{/privacy}", "received_events_url": "https://api.github.com/users/jviereck/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2015-03-25T20:20:36Z", "updated_at": "2015-03-28T01:53:39Z", "closed_at": "2015-03-28T01:53:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Reading the current documentation about `Option<T>.unwrap()` at\n\n  http://doc.rust-lang.org/std/option/enum.Option.html#method.unwrap\n\nit is not clear to me what the effect of `unwrap()` is. I was supposing calling this function returns the value stored in the Option type and replaces it by an `None` value. However, this seems not to be the case as the second assertion in the following example program passes fine:\n\n``` rust\nfn main() {\n    let \n    let x = Some(\"air\");\n    assert_eq!(x.unwrap(), \"air\");\n    assert_eq!(x.is_some(), true);\n}\n```\n\n(You can run the program online at http://goo.gl/F9OnFk).\n\nIn addition, the current documentation says:\n\n> Returns the inner T of a Some(T).\n\nDoes this means the value contained in the `Some(T)` is moved out or cloned or is a borrow taken? Also, `T` is a type and I don't think that the function really returns a type, but a value of type `T`. Therefore, should the quoted sentence maybe reworded towards something along the lines of:\n\n> Returns the value of type T as it is contained in the Some(T).\n\nPlease let me know what you think about these points. I am more than happy to provide a PR to improve the documentation, but I don't know all the answers to the questions I have raised above and I am also not sure if my claims are correct :/\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/23713/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/23713/timeline", "performed_via_github_app": null, "state_reason": "completed"}