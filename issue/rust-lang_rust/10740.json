{"url": "https://api.github.com/repos/rust-lang/rust/issues/10740", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/10740/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/10740/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/10740/events", "html_url": "https://github.com/rust-lang/rust/issues/10740", "id": 23528133, "node_id": "MDU6SXNzdWUyMzUyODEzMw==", "number": 10740, "title": "Optimize the size of a statically linked binary and library", "user": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37547, "node_id": "MDU6TGFiZWwzNzU0Nw==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-linkage", "name": "A-linkage", "color": "f7e101", "default": false, "description": "Area: linking into static, shared libraries and binaries"}, {"id": 234876, "node_id": "MDU6TGFiZWwyMzQ4NzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-hard", "name": "E-hard", "color": "02e10c", "default": false, "description": "Call for participation: Experience needed to fix: Hard / a lot"}, {"id": 234956, "node_id": "MDU6TGFiZWwyMzQ5NTY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-codegen", "name": "A-codegen", "color": "f7e101", "default": false, "description": "Area: Code generation"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2013-11-30T23:02:40Z", "updated_at": "2014-01-03T07:31:32Z", "closed_at": "2013-12-10T02:16:32Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Once #10528 lands, we'll be able to create static libraries and static binaries. While being very useful, we're creating massive binaries. There are a few opportunities for improvement that I can see here:\n- [ ] Static executables and static libraries contain the metadata sections of their dependent libraries. These are certainly not needed, and these sections should be removed (or possibly this is a good argument for putting the metadata in a separate file?). This would in theory be solved with `objcopy -R`, but `objcopy` doesn't exist by default on OSX, and the objcopy I found ended up producing a corrupted executable that didn't run.\n- [ ] We don't necessarily want to pull in _all_ of libstd. There are likely vast portions of libstd which are not used in a crate which can all get removed. This involves eliminating unused functions and data which is not used. C/C++ solve this with `-ffunction-sections` and `-fdata-sections` which places each function and static global in its own section. The linker is then passed `--gc-sections` and magically removes everything that's unused.\n\nBoth of these optimizations are a little dubious, and this is why I chose the default output of libraries to be dynamic libraries for the compiler. These optimizations can benefit the size of an executable, but I've seen the compilation of `fn main() {}` increase by 5-10x when implementing these optimizations (even in the common no-opt compile case).\n\nAdditionally, these optimizations are going to be difficult to implement across platforms. Most of what I've described is linux-specific. There is a `-dead_strip` option on the OSX linker, but that's the only relevant size optimization flag I can find. I have not checked to see what the mingw linker provides in terms of size optimizations.\n## Empirical data\n\nAll of the data here is collected from a 32-bit ubuntu VM, but I imagine the numbers are very similar on other platforms. The program in question is simply `fn main() {}`.\n- Statically linked executable - 6.9MB\n- Removing metadata - 2.7MB\n- `-ffunction-sections` + `--gc-sections` - 1.6MB\n- `-ffunction-sections` + `--gc-sections` + `#[no_uv]` - 730K\n\nNote that `--gc-sections` always removes the metadata. I'm unsure of whether `--gc-sections` corrupts our exception-handling sections.\n\nFrom this, the \"most optimized normal case\" that I can get to is 1.6MB, which is still very large. As a comparison, the \"hello world\" go executable is 400K. A no_uv 730K executable is pretty reasonable, so it could just be that having M:N/uv means that you're pulling in larger portions of libstd. I believe that this size of 1.6MB means that further investigation is warranted to figure out where all this size is coming from.\n\nNominating for discussion. I don't think that this should block 1.0, but this is certainly a concern that we should prioritize.\n", "closed_by": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/10740/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/10740/timeline", "performed_via_github_app": null, "state_reason": "completed"}