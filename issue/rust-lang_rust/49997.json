{"url": "https://api.github.com/repos/rust-lang/rust/issues/49997", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/49997/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/49997/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/49997/events", "html_url": "https://github.com/rust-lang/rust/issues/49997", "id": 314651110, "node_id": "MDU6SXNzdWUzMTQ2NTExMTA=", "number": 49997, "title": "PF Sandbox doesnt compile on the latest nightly [linux only]", "user": {"login": "rukai", "id": 5120858, "node_id": "MDQ6VXNlcjUxMjA4NTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5120858?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rukai", "html_url": "https://github.com/rukai", "followers_url": "https://api.github.com/users/rukai/followers", "following_url": "https://api.github.com/users/rukai/following{/other_user}", "gists_url": "https://api.github.com/users/rukai/gists{/gist_id}", "starred_url": "https://api.github.com/users/rukai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rukai/subscriptions", "organizations_url": "https://api.github.com/users/rukai/orgs", "repos_url": "https://api.github.com/users/rukai/repos", "events_url": "https://api.github.com/users/rukai/events{/privacy}", "received_events_url": "https://api.github.com/users/rukai/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 147085028, "node_id": "MDU6TGFiZWwxNDcwODUwMjg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-nightly", "name": "regression-from-stable-to-nightly", "color": "e4008a", "default": false, "description": "Performance or correctness regression from stable to nightly."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-04-16T13:28:33Z", "updated_at": "2018-04-18T12:21:33Z", "closed_at": "2018-04-18T12:21:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "My crate PF Sandbox no longer compiles on linux on the latest nightly: https://github.com/rukai/PF_Sandbox\r\nIt was known working on linux at the last commit 26 days ago.\r\nI have tested it on windows and it compiles fine.\r\n\r\nI did have to update to the latest version of syn 0.13.1 and proc_macro2 0.3.6\r\nAs the old version of proc_macro2 seemed to no longer work, and gave me compile errors on the latest nightly.\r\nAfter fixing that I got these errors which dont seem relevent to that.\r\n\r\nI have both NLL and incremental compilation enabled so I tried with both disabled and it gives the same error.\r\nI can try to create a smaller repro later but I dont have time at the moment.\r\n```\r\nerror[E0277]: `std::sync::mpsc::Sender<(u64, i16, i16)>` cannot be shared between threads safely\r\n   --> pf_sandbox/src/vulkan/mod.rs:182:25\r\n    |\r\n182 |         let draw_text = DrawText::new(device.clone(), queue.clone(), swapchain.clone(), &images);\r\n    |                         ^^^^^^^^^^^^^ `std::sync::mpsc::Sender<(u64, i16, i16)>` cannot be shared between threads safely\r\n    |\r\n    = help: within `winit::Window`, the trait `std::marker::Sync` is not implemented for `std::sync::mpsc::Sender<(u64, i16, i16)>`\r\n    = note: required because it appears within the type `winit::os::unix::x11::Window`\r\n    = note: required because it appears within the type `winit::platform::platform::Window`\r\n    = note: required because it appears within the type `winit::Window`\r\n    = note: required by `vulkano_text::DrawText::new`\r\n\r\nerror[E0277]: `std::sync::mpsc::Sender<(u64, i16, i16)>` cannot be shared between threads safely\r\n   --> pf_sandbox/src/vulkan/mod.rs:271:13\r\n    |\r\n271 | /             Arc::new(\r\n272 | |                 Framebuffer::start(render_pass.clone())\r\n273 | |                 .add(multisampled_image.clone()).unwrap()\r\n274 | |                 .add(image.clone()).unwrap()\r\n...   |\r\n277 | |                 .build().unwrap()\r\n278 | |             ) as Arc<FramebufferAbstract + Send + Sync>\r\n    | |_____________^ `std::sync::mpsc::Sender<(u64, i16, i16)>` cannot be shared between threads safely\r\n    |\r\n    = help: within `vulkano::swapchain::Surface<winit::Window>`, the trait `std::marker::Sync` is not implemented for `std::sync::mpsc::Sender<(u64, i16, i16)>`\r\n    = note: required because it appears within the type `winit::os::unix::x11::Window`\r\n    = note: required because it appears within the type `winit::platform::platform::Window`\r\n    = note: required because it appears within the type `winit::Window`\r\n    = note: required because it appears within the type `vulkano::swapchain::Surface<winit::Window>`\r\n    = note: required because of the requirements on the impl of `std::marker::Send` for `std::sync::Arc<vulkano::swapchain::Surface<winit::Window>>`\r\n    = note: required because it appears within the type `vulkano::swapchain::Swapchain<winit::Window>`\r\n    = note: required because of the requirements on the impl of `std::marker::Send` for `std::sync::Arc<vulkano::swapchain::Swapchain<winit::Window>>`\r\n    = note: required because it appears within the type `vulkano::image::SwapchainImage<winit::Window>`\r\n    = note: required because of the requirements on the impl of `std::marker::Sync` for `std::sync::Arc<vulkano::image::SwapchainImage<winit::Window>>`\r\n    = note: required because it appears within the type `(((), std::sync::Arc<vulkano::image::AttachmentImage>), std::sync::Arc<vulkano::image::SwapchainImage<winit::Window>>)`\r\n    = note: required because it appears within the type `((((), std::sync::Arc<vulkano::image::AttachmentImage>), std::sync::Arc<vulkano::image::SwapchainImage<winit::Window>>), std::sync::Arc<vulkano::image::AttachmentImage>)`\r\n    = note: required because it appears within the type `(((((), std::sync::Arc<vulkano::image::AttachmentImage>), std::sync::Arc<vulkano::image::SwapchainImage<winit::Window>>), std::sync::Arc<vulkano::image::AttachmentImage>), std::sync::Arc<vulkano::image::AttachmentImage>)`\r\n    = note: required because it appears within the type `vulkano::framebuffer::Framebuffer<std::sync::Arc<vulkano::framebuffer::RenderPassAbstract + std::marker::Sync + std::marker::Send>, (((((), std::sync::Arc<vulkano::image::AttachmentImage>), std::sync::Arc<vulkano::image::SwapchainImage<winit::Window>>), std::sync::Arc<vulkano::image::AttachmentImage>), std::sync::Arc<vulkano::image::AttachmentImage>)>`\r\n    = note: required for the cast to the object type `vulkano::framebuffer::FramebufferAbstract + std::marker::Sync + std::marker::Send`\r\n\r\nerror[E0277]: `std::sync::mpsc::Sender<(u64, i16, i16)>` cannot be shared between threads safely\r\n   --> pf_sandbox/src/vulkan/mod.rs:431:34\r\n    |\r\n431 |                 self.draw_text = DrawText::new(self.device.clone(), self.queue.clone(), self.swapchain.clone(), &new_images);\r\n    |                                  ^^^^^^^^^^^^^ `std::sync::mpsc::Sender<(u64, i16, i16)>` cannot be shared between threads safely\r\n    |\r\n    = help: within `winit::Window`, the trait `std::marker::Sync` is not implemented for `std::sync::mpsc::Sender<(u64, i16, i16)>`\r\n    = note: required because it appears within the type `winit::os::unix::x11::Window`\r\n    = note: required because it appears within the type `winit::platform::platform::Window`\r\n    = note: required because it appears within the type `winit::Window`\r\n    = note: required by `vulkano_text::DrawText::new`\r\n\r\nerror: aborting due to 3 previous errors\r\n\r\nFor more information about this error, try `rustc --explain E0277`.\r\nerror: Could not compile `pf_sandbox`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n```", "closed_by": {"login": "rukai", "id": 5120858, "node_id": "MDQ6VXNlcjUxMjA4NTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5120858?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rukai", "html_url": "https://github.com/rukai", "followers_url": "https://api.github.com/users/rukai/followers", "following_url": "https://api.github.com/users/rukai/following{/other_user}", "gists_url": "https://api.github.com/users/rukai/gists{/gist_id}", "starred_url": "https://api.github.com/users/rukai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rukai/subscriptions", "organizations_url": "https://api.github.com/users/rukai/orgs", "repos_url": "https://api.github.com/users/rukai/repos", "events_url": "https://api.github.com/users/rukai/events{/privacy}", "received_events_url": "https://api.github.com/users/rukai/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/49997/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/49997/timeline", "performed_via_github_app": null, "state_reason": "completed"}