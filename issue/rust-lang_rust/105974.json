{"url": "https://api.github.com/repos/rust-lang/rust/issues/105974", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/105974/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/105974/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/105974/events", "html_url": "https://github.com/rust-lang/rust/issues/105974", "id": 1505243480, "node_id": "I_kwDOAAsO6M5ZuDFY", "number": 105974, "title": "ICE: `Unexpected types for BinOp: i32 Add f32'` during const eval, simd / platform intrinsics", "user": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 631737389, "node_id": "MDU6TGFiZWw2MzE3MzczODk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-simd", "name": "A-simd", "color": "f7e101", "default": false, "description": "Area: SIMD (Single Instruction Multiple Data)"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 900795185, "node_id": "MDU6TGFiZWw5MDA3OTUxODU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-eval", "name": "A-const-eval", "color": "f7e101", "default": false, "description": "Area: constant evaluation (mir interpretation)"}, {"id": 1244499056, "node_id": "MDU6TGFiZWwxMjQ0NDk5MDU2", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-miri", "name": "A-miri", "color": "f7e101", "default": false, "description": "Area: The miri tool"}, {"id": 1353616418, "node_id": "MDU6TGFiZWwxMzUzNjE2NDE4", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-intrinsics", "name": "A-intrinsics", "color": "f7e101", "default": false, "description": "Area: intrinsics"}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}, {"id": 5223550385, "node_id": "LA_kwDOAAsO6M8AAAABN1kNsQ", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-target-feature", "name": "A-target-feature", "color": "f7e101", "default": false, "description": "Area: Enabling/disabling target features like AVX, Neon, etc."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-12-20T20:44:56Z", "updated_at": "2023-04-26T10:02:56Z", "closed_at": "2023-04-26T10:00:42Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\nreduced from `src/test/ui/simd/intrinsic/generic-reduction.rs`\r\n```Rust\r\n#![feature(repr_simd, platform_intrinsics)]\r\n#![allow(non_camel_case_types)]\r\n\r\n#[repr(simd)]\r\n#[derive(Copy, Clone)]\r\npub struct f32x4(pub f32, pub f32, pub f32, pub f32);\r\n\r\n#[repr(simd)]\r\n#[derive(Copy, Clone)]\r\npub struct u32x4(pub u32, pub u32, pub u32, pub u32);\r\n\r\n\r\nextern \"platform-intrinsic\" {\r\n    fn simd_reduce_add_ordered<T, U>(x: T, y: U) -> U;\r\n}\r\n\r\nfn main() {\r\n    let z = f32x4(0.0, 0.0, 0.0, 0.0);\r\n\r\n    unsafe {\r\n        simd_reduce_add_ordered(z, 0);\r\n    }\r\n}\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.68.0-nightly (65bd2a6a7 2022-12-20)\r\nbinary: rustc\r\ncommit-hash: 65bd2a6a73d6a74fb1266a1d96b23de8810a5fb2\r\ncommit-date: 2022-12-20\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.68.0-nightly\r\nLLVM version: 15.0.6\r\n```\r\n\r\nWith a normal `cargo build` this will error: `\r\n````\r\nerror[E0511]: invalid monomorphization of `simd_reduce_add_ordered` intrinsic: expected return type `f32` (element of input `f32x4`), found `i32`\r\n  --> src/main.rs:21:9\r\n   |\r\n21 |         simd_reduce_add_ordered(z, 0);\r\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n````\r\n\r\nbut under miri `cargo miri run` this will cause a similar const_eval panic but no build error\r\n\r\n\r\n\r\n\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nPreparing a sysroot for Miri (target: x86_64-unknown-linux-gnu)... done\r\nWARNING: Ignoring `RUSTC_WRAPPER` environment variable, Miri does not support wrapping.\r\n    Finished dev [unoptimized + debuginfo] target(s) in 0.01s\r\n     Running `/home/matthias/.rustup/toolchains/master/bin/cargo-miri runner target/miri/x86_64-unknown-linux-gnu/debug/l`\r\nthread 'rustc' panicked at 'Unexpected types for BinOp: i32 Add f32', /rustc/65bd2a6a73d6a74fb1266a1d96b23de8810a5fb2/compiler/rustc_const_eval/src/interpret/operator.rs:356:17\r\nstack backtrace:\r\n   0:     0x7fd72f565a7a - std::backtrace_rs::backtrace::libunwind::trace::h675f1ceb153ea7ae\r\n                               at /rustc/65bd2a6a73d6a74fb1266a1d96b23de8810a5fb2/library/std/src/../../backtrace/src/backtrace/libunwind.rs:93:5\r\n   1:     0x7fd72f565a7a - std::backtrace_rs::backtrace::trace_unsynchronized::hb49ecb27b3f21616\r\n                               at /rustc/65bd2a6a73d6a74fb1266a1d96b23de8810a5fb2/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\r\n   2:     0x7fd72f565a7a - std::sys_common::backtrace::_print_fmt::heed8017caffdd7be\r\n                               at /rustc/65bd2a6a73d6a74fb1266a1d96b23de8810a5fb2/library/std/src/sys_common/backtrace.rs:65:5\r\n   3:     0x7fd72f565a7a - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::h3894bf63bbd3123e\r\n                               at /rustc/65bd2a6a73d6a74fb1266a1d96b23de8810a5fb2/library/std/src/sys_common/backtrace.rs:44:22\r\n   4:     0x7fd72f5c87ae - core::fmt::write::he7f57c8e5422bc28\r\n                               at /rustc/65bd2a6a73d6a74fb1266a1d96b23de8810a5fb2/library/core/src/fmt/mod.rs:1208:17\r\n   5:     0x7fd72f555e45 - std::io::Write::write_fmt::h6ba59abf267eeb64\r\n                               at /rustc/65bd2a6a73d6a74fb1266a1d96b23de8810a5fb2/library/std/src/io/mod.rs:1682:15\r\n   6:     0x7fd72f565845 - std::sys_common::backtrace::_print::hce22f76c6561fbb7\r\n                               at /rustc/65bd2a6a73d6a74fb1266a1d96b23de8810a5fb2/library/std/src/sys_common/backtrace.rs:47:5\r\n   7:     0x7fd72f565845 - std::sys_common::backtrace::print::h643226e6044a7d8b\r\n                               at /rustc/65bd2a6a73d6a74fb1266a1d96b23de8810a5fb2/library/std/src/sys_common/backtrace.rs:34:9\r\n   8:     0x7fd72f56858f - std::panicking::default_hook::{{closure}}::h07ffa697a6219d7f\r\n                               at /rustc/65bd2a6a73d6a74fb1266a1d96b23de8810a5fb2/library/std/src/panicking.rs:267:22\r\n   9:     0x7fd72f5682cb - std::panicking::default_hook::hef8af9e242fe6c62\r\n                               at /rustc/65bd2a6a73d6a74fb1266a1d96b23de8810a5fb2/library/std/src/panicking.rs:286:9\r\n  10:     0x7fd732837ec1 - rustc_driver[d7be8f11e105c0f0]::DEFAULT_HOOK::{closure#0}::{closure#0}\r\n  11:     0x7fd72f568dcd - <alloc::boxed::Box<F,A> as core::ops::function::Fn<Args>>::call::h29fb01ab60f84c8e\r\n                               at /rustc/65bd2a6a73d6a74fb1266a1d96b23de8810a5fb2/library/alloc/src/boxed.rs:2032:9\r\n  12:     0x7fd72f568dcd - std::panicking::rust_panic_with_hook::he2ea406e87ab35d7\r\n                               at /rustc/65bd2a6a73d6a74fb1266a1d96b23de8810a5fb2/library/std/src/panicking.rs:692:13\r\n  13:     0x7fd72f568b49 - std::panicking::begin_panic_handler::{{closure}}::hde5a31e2eb3df269\r\n                               at /rustc/65bd2a6a73d6a74fb1266a1d96b23de8810a5fb2/library/std/src/panicking.rs:579:13\r\n  14:     0x7fd72f565f2c - std::sys_common::backtrace::__rust_end_short_backtrace::h985bac594543f953\r\n                               at /rustc/65bd2a6a73d6a74fb1266a1d96b23de8810a5fb2/library/std/src/sys_common/backtrace.rs:137:18\r\n  15:     0x7fd72f568852 - rust_begin_unwind\r\n                               at /rustc/65bd2a6a73d6a74fb1266a1d96b23de8810a5fb2/library/std/src/panicking.rs:575:5\r\n  16:     0x7fd72f5c5193 - core::panicking::panic_fmt::h5db2becac776eeb8\r\n                               at /rustc/65bd2a6a73d6a74fb1266a1d96b23de8810a5fb2/library/core/src/panicking.rs:64:14\r\n  17:     0x55723a1a92ed - <rustc_const_eval[b02055f297dad764]::interpret::eval_context::InterpCx<miri[847ce3eb8ca6ac8b]::machine::MiriMachine>>::overflowing_binary_op\r\n  18:     0x55723a1aa60a - <rustc_const_eval[b02055f297dad764]::interpret::eval_context::InterpCx<miri[847ce3eb8ca6ac8b]::machine::MiriMachine>>::binary_op\r\n  19:     0x55723a1dc9be - <rustc_const_eval[b02055f297dad764]::interpret::eval_context::InterpCx<miri[847ce3eb8ca6ac8b]::machine::MiriMachine> as miri[847ce3eb8ca6ac8b]::shims::intrinsics::simd::EvalContextExt>::emulate_simd_intrinsic\r\n  20:     0x55723a185929 - <rustc_const_eval[b02055f297dad764]::interpret::eval_context::InterpCx<miri[847ce3eb8ca6ac8b]::machine::MiriMachine>>::eval_fn_call\r\n  21:     0x55723a1bb088 - <rustc_const_eval[b02055f297dad764]::interpret::eval_context::InterpCx<miri[847ce3eb8ca6ac8b]::machine::MiriMachine> as miri[847ce3eb8ca6ac8b]::concurrency::thread::EvalContextExt>::run_threads\r\n  22:     0x55723a266e7d - miri[847ce3eb8ca6ac8b]::eval::eval_entry\r\n  23:     0x55723a0c20e4 - <rustc_interface[1151441b26fe27c4]::passes::QueryContext>::enter::<<miri[c97a8f71cae8150d]::MiriCompilerCalls as rustc_driver[d7be8f11e105c0f0]::Callbacks>::after_analysis::{closure#0}, ()>\r\n  24:     0x55723a0c7263 - <miri[c97a8f71cae8150d]::MiriCompilerCalls as rustc_driver[d7be8f11e105c0f0]::Callbacks>::after_analysis\r\n  25:     0x7fd731ae7981 - <rustc_interface[1151441b26fe27c4]::interface::Compiler>::enter::<rustc_driver[d7be8f11e105c0f0]::run_compiler::{closure#1}::{closure#2}, core[c1c11602ca27bace]::result::Result<core[c1c11602ca27bace]::option::Option<rustc_interface[1151441b26fe27c4]::queries::Linker>, rustc_errors[9d192be5a1a3a729]::ErrorGuaranteed>>\r\n  26:     0x7fd731ae2978 - rustc_span[dbf0d871ebdcd257]::with_source_map::<core[c1c11602ca27bace]::result::Result<(), rustc_errors[9d192be5a1a3a729]::ErrorGuaranteed>, rustc_interface[1151441b26fe27c4]::interface::run_compiler<core[c1c11602ca27bace]::result::Result<(), rustc_errors[9d192be5a1a3a729]::ErrorGuaranteed>, rustc_driver[d7be8f11e105c0f0]::run_compiler::{closure#1}>::{closure#0}::{closure#0}>\r\n  27:     0x7fd731ae2465 - <scoped_tls[2b67eac439d2d2c5]::ScopedKey<rustc_span[dbf0d871ebdcd257]::SessionGlobals>>::set::<rustc_interface[1151441b26fe27c4]::interface::run_compiler<core[c1c11602ca27bace]::result::Result<(), rustc_errors[9d192be5a1a3a729]::ErrorGuaranteed>, rustc_driver[d7be8f11e105c0f0]::run_compiler::{closure#1}>::{closure#0}, core[c1c11602ca27bace]::result::Result<(), rustc_errors[9d192be5a1a3a729]::ErrorGuaranteed>>\r\n  28:     0x7fd731ae1a52 - std[88850a980e0de7b4]::sys_common::backtrace::__rust_begin_short_backtrace::<rustc_interface[1151441b26fe27c4]::util::run_in_thread_pool_with_globals<rustc_interface[1151441b26fe27c4]::interface::run_compiler<core[c1c11602ca27bace]::result::Result<(), rustc_errors[9d192be5a1a3a729]::ErrorGuaranteed>, rustc_driver[d7be8f11e105c0f0]::run_compiler::{closure#1}>::{closure#0}, core[c1c11602ca27bace]::result::Result<(), rustc_errors[9d192be5a1a3a729]::ErrorGuaranteed>>::{closure#0}::{closure#0}, core[c1c11602ca27bace]::result::Result<(), rustc_errors[9d192be5a1a3a729]::ErrorGuaranteed>>\r\n  29:     0x7fd7320fa19a - <<std[88850a980e0de7b4]::thread::Builder>::spawn_unchecked_<rustc_interface[1151441b26fe27c4]::util::run_in_thread_pool_with_globals<rustc_interface[1151441b26fe27c4]::interface::run_compiler<core[c1c11602ca27bace]::result::Result<(), rustc_errors[9d192be5a1a3a729]::ErrorGuaranteed>, rustc_driver[d7be8f11e105c0f0]::run_compiler::{closure#1}>::{closure#0}, core[c1c11602ca27bace]::result::Result<(), rustc_errors[9d192be5a1a3a729]::ErrorGuaranteed>>::{closure#0}::{closure#0}, core[c1c11602ca27bace]::result::Result<(), rustc_errors[9d192be5a1a3a729]::ErrorGuaranteed>>::{closure#1} as core[c1c11602ca27bace]::ops::function::FnOnce<()>>::call_once::{shim:vtable#0}\r\n  30:     0x7fd72f572dc3 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::h52d93a0f91af410d\r\n                               at /rustc/65bd2a6a73d6a74fb1266a1d96b23de8810a5fb2/library/alloc/src/boxed.rs:2000:9\r\n  31:     0x7fd72f572dc3 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::h59c4f45bc7a03c07\r\n                               at /rustc/65bd2a6a73d6a74fb1266a1d96b23de8810a5fb2/library/alloc/src/boxed.rs:2000:9\r\n  32:     0x7fd72f572dc3 - std::sys::unix::thread::Thread::new::thread_start::h3b75c683c379ccb2\r\n                               at /rustc/65bd2a6a73d6a74fb1266a1d96b23de8810a5fb2/library/std/src/sys/unix/thread.rs:108:17\r\n  33:     0x7fd72f21d8fd - <unknown>\r\n  34:     0x7fd72f29fa60 - <unknown>\r\n  35:                0x0 - <unknown>\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.68.0-nightly (65bd2a6a7 2022-12-20) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: --crate-type bin -C embed-bitcode=no -C debuginfo=2 -C incremental=[REDACTED] -C target-cpu=native\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\nend of query stack\r\n\r\nMiri caused an ICE during evaluation. Here's the interpreter backtrace at the time of the panic:\r\nnote: the place in the program where the ICE was triggered\r\n  --> src/main.rs:21:9\r\n   |\r\n21 |         simd_reduce_add_ordered(z, 0);\r\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n   |\r\n   = note: inside `main` at src/main.rs:21:9: 21:38\r\n   = note: inside `<fn() as std::ops::FnOnce<()>>::call_once - shim(fn())` at /home/matthias/.rustup/toolchains/master/lib/rustlib/src/rust/library/core/src/ops/function.rs:507:5: 507:71\r\n   = note: inside `std::sys_common::backtrace::__rust_begin_short_backtrace::<fn(), ()>` at /home/matthias/.rustup/toolchains/master/lib/rustlib/src/rust/library/std/src/sys_common/backtrace.rs:121:18: 121:21\r\n   = note: inside closure at /home/matthias/.rustup/toolchains/master/lib/rustlib/src/rust/library/std/src/rt.rs:166:18: 166:82\r\n   = note: inside `std::ops::function::impls::<impl std::ops::FnOnce<()> for &dyn std::ops::Fn() -> i32 + std::marker::Sync + std::panic::RefUnwindSafe>::call_once` at /home/matthias/.rustup/toolchains/master/lib/rustlib/src/rust/library/core/src/ops/function.rs:606:13: 606:31\r\n   = note: inside `std::panicking::r#try::do_call::<&dyn std::ops::Fn() -> i32 + std::marker::Sync + std::panic::RefUnwindSafe, i32>` at /home/matthias/.rustup/toolchains/master/lib/rustlib/src/rust/library/std/src/panicking.rs:483:40: 483:43\r\n   = note: inside `std::panicking::r#try::<i32, &dyn std::ops::Fn() -> i32 + std::marker::Sync + std::panic::RefUnwindSafe>` at /home/matthias/.rustup/toolchains/master/lib/rustlib/src/rust/library/std/src/panicking.rs:447:19: 447:81\r\n   = note: inside `std::panic::catch_unwind::<&dyn std::ops::Fn() -> i32 + std::marker::Sync + std::panic::RefUnwindSafe, i32>` at /home/matthias/.rustup/toolchains/master/lib/rustlib/src/rust/library/std/src/panic.rs:137:14: 137:33\r\n   = note: inside closure at /home/matthias/.rustup/toolchains/master/lib/rustlib/src/rust/library/std/src/rt.rs:148:48: 148:73\r\n   = note: inside `std::panicking::r#try::do_call::<[closure@std::rt::lang_start_internal::{closure#2}], isize>` at /home/matthias/.rustup/toolchains/master/lib/rustlib/src/rust/library/std/src/panicking.rs:483:40: 483:43\r\n   = note: inside `std::panicking::r#try::<isize, [closure@std::rt::lang_start_internal::{closure#2}]>` at /home/matthias/.rustup/toolchains/master/lib/rustlib/src/rust/library/std/src/panicking.rs:447:19: 447:81\r\n   = note: inside `std::panic::catch_unwind::<[closure@std::rt::lang_start_internal::{closure#2}], isize>` at /home/matthias/.rustup/toolchains/master/lib/rustlib/src/rust/library/std/src/panic.rs:137:14: 137:33\r\n   = note: inside `std::rt::lang_start_internal` at /home/matthias/.rustup/toolchains/master/lib/rustlib/src/rust/library/std/src/rt.rs:148:20: 148:98\r\n   = note: inside `std::rt::lang_start::<()>` at /home/matthias/.rustup/toolchains/master/lib/rustlib/src/rust/library/std/src/rt.rs:165:17: 170:6\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/105974/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/105974/timeline", "performed_via_github_app": null, "state_reason": "completed"}