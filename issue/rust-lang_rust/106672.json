{"url": "https://api.github.com/repos/rust-lang/rust/issues/106672", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/106672/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/106672/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/106672/events", "html_url": "https://github.com/rust-lang/rust/issues/106672", "id": 1527051949, "node_id": "I_kwDOAAsO6M5bBPat", "number": 106672, "title": "Surprising type inference failure around \"as\"", "user": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 604454086, "node_id": "MDU6TGFiZWw2MDQ0NTQwODY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-inference", "name": "A-inference", "color": "f7e101", "default": false, "description": "Area: Type inference"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2023-01-10T09:29:36Z", "updated_at": "2023-05-25T09:07:20Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "The following code works fine:\r\n```rust\r\nfn test(x: usize) {\r\n    let v: [u32; 4] = [[0, 1, 2, 3], [4, 5, 6, 7]][x];\r\n}\r\n```\r\nHence I would expect that this also builds:\r\n```rust\r\nfn test(x: usize) {\r\n    let v = [[0, 1, 2, 3], [4, 5, 6, 7]][x] as [u32; 4];\r\n}\r\n```\r\nHowever, it does not:\r\n```\r\nerror[[E0605]](https://doc.rust-lang.org/stable/error-index.html#E0605): non-primitive cast: `[i32; 4]` as `[u32; 4]`\r\n --> src/lib.rs:2:13\r\n  |\r\n2 |     let v = [[0, 1, 2, 3], [4, 5, 6, 7]][x] as [u32; 4];\r\n  |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object\r\n\r\nFor more information about this error, try `rustc --explain E0605`.\r\nerror: could not compile `playground` due to previous error\r\n```\r\nLooks like it inferred the integers to be `i32`. Proper use of the type information provided by `as` should enable it to infer `u32` instead. This already happens successfully in simpler cases such as `[0, 1, 2, 3] as [u32; 4]`.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/106672/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/106672/timeline", "performed_via_github_app": null, "state_reason": null}