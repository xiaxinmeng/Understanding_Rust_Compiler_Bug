{"url": "https://api.github.com/repos/rust-lang/rust/issues/81031", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/81031/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/81031/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/81031/events", "html_url": "https://github.com/rust-lang/rust/issues/81031", "id": 786476233, "node_id": "MDU6SXNzdWU3ODY0NzYyMzM=", "number": 81031, "title": "Better listing of dependencies in 'cargo docs' sidebar output", "user": {"login": "dbr", "id": 509, "node_id": "MDQ6VXNlcjUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dbr", "html_url": "https://github.com/dbr", "followers_url": "https://api.github.com/users/dbr/followers", "following_url": "https://api.github.com/users/dbr/following{/other_user}", "gists_url": "https://api.github.com/users/dbr/gists{/gist_id}", "starred_url": "https://api.github.com/users/dbr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dbr/subscriptions", "organizations_url": "https://api.github.com/users/dbr/orgs", "repos_url": "https://api.github.com/users/dbr/repos", "events_url": "https://api.github.com/users/dbr/events{/privacy}", "received_events_url": "https://api.github.com/users/dbr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 203738, "node_id": "MDU6TGFiZWwyMDM3Mzg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-rustdoc", "name": "T-rustdoc", "color": "bfd4f2", "default": false, "description": "Relevant to the rustdoc team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2021-01-15T00:49:52Z", "updated_at": "2021-09-06T19:24:43Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Thanks for filing a \ud83d\ude4b feature request \ud83d\ude04! -->\r\n\r\n**Describe the problem you are trying to solve**\r\nIn short: in the generated HTML docs, the sidebar list of dependencies isn't very useful in any project with many (tens or hundreds) of dependencies.\r\n\r\nLonger:\r\n\r\nIn the `cargo docs` output for my application, there is a huge list of crates listed in the sidebar (around 200). Very few of these are interesting to me - a huge majority are indirect dependencies potentially 10+ levels deep, but they are presented in a flat listing.\r\n\r\nIt's good these are documented, but listing them in the sidebar so prominently doesn't seem helpful to me, as almost all of the time I either want to:\r\n\r\n1. look at the documentation for my application code\r\n2. look at one of my main direct dependencies (i.e one of the packages I list in `Cargo.toml`)\r\n\r\nWhen you first open the docs (e.g `cargo docs --open`) it lists all my apps modules and so on. This is good.\r\n\r\nHowever if I want to find the docs for, say, `serde_json`, I have to scroll down the very long list (I could ctrl+f search, but at that point I might as well use the doc's nice search feature)\r\n\r\nThen, once you have clicked on a dependency, it's hard to directly navigate back to my application's docs (have to find `myapp` in the sidebar, or, search)\r\n\r\n**Describe the solution you'd like**\r\nI think this has a two parts - I don't have strong opinions on the exact design etc, but the functionality I would find very useful are:\r\n\r\n1. Always having a \"single click\" link back to the \"main crate\" (the one `cargo docs` was run for) in some way\r\n\r\n    Say if I run `cargo docs --open` for `myapp`, I would expect that there would be a link at the top of the sidebar which links back to `./target/doc/myapp/index.html`.\r\n\r\n    Currently, I would expect clicking the Rust logo at the top would go back here, but it goes to the index of the currently-clicked package docs\r\n\r\n2. Prioritizing the packages in the sidebar somehow.\r\n\r\n    Some ideas for this might be:\r\n\r\n    * Display them in a hierarchy similar to `cargo tree`. Might not work too well in the narrow side bar\r\n    * Reorder them so the \"direct dependencies\" are listed first, followed by all the other dependencies (or a toggle to display \"all dependencies\" or \"only direct dependencies\")\r\n    * Display the top-level dependencies in the side bar, then display the \"dependencies of this package\" in a separate UI element somehow (e.g if I use `reqwest` then only display that in sidebar - then if I click on `reqwest`, then display the dependencies of that like `hyper` etc)\r\n    * A way to specify the \"interesting\" dependencies in `Cargo.toml` - ones which would appear more prominantly in the sidebar. Kind of like a \"favourites\"\r\n\r\n**Notes**\r\n<!-- Any additional context or information you feel may be relevant to the issue. -->\r\n\r\nThis idea only relates to the UI presentation of the sidebar, it wouldn't reduce the amount of documentation generated, and should be doable in a way which makes the big list of dependencies still available as it is surely valuable in some circumstances\r\n\r\nOf the existing options there is a few which sort of help with this problem, not don't do what I'm hoping for:\r\n\r\n`cargo doc --no-deps` is too drastic, completely removes the dependencies.\r\n\r\n`cargo doc --exclude` could kind of solve this (exclude everything except my top-level deps), but having the indirect dependencies available is still useful (particularly via search or links from return types etc etc), and this is very cumbersome to maintain\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"ThePuzzlemaker\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/81031/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/81031/timeline", "performed_via_github_app": null, "state_reason": null}