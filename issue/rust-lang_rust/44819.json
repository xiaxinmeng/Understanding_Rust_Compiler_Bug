{"url": "https://api.github.com/repos/rust-lang/rust/issues/44819", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/44819/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/44819/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/44819/events", "html_url": "https://github.com/rust-lang/rust/issues/44819", "id": 260128290, "node_id": "MDU6SXNzdWUyNjAxMjgyOTA=", "number": 44819, "title": "`std::io::Read::read_to_end` does not specialize for `&[u8]` or `Take<&'a [u8]>`", "user": {"login": "fulmicoton", "id": 1021506, "node_id": "MDQ6VXNlcjEwMjE1MDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1021506?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fulmicoton", "html_url": "https://github.com/fulmicoton", "followers_url": "https://api.github.com/users/fulmicoton/followers", "following_url": "https://api.github.com/users/fulmicoton/following{/other_user}", "gists_url": "https://api.github.com/users/fulmicoton/gists{/gist_id}", "starred_url": "https://api.github.com/users/fulmicoton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fulmicoton/subscriptions", "organizations_url": "https://api.github.com/users/fulmicoton/orgs", "repos_url": "https://api.github.com/users/fulmicoton/repos", "events_url": "https://api.github.com/users/fulmicoton/events{/privacy}", "received_events_url": "https://api.github.com/users/fulmicoton/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-09-25T00:37:38Z", "updated_at": "2017-09-26T21:32:10Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "`read_to_end` currently includes some logic to do exponentially large `.resize` / `.read`  operations.\r\n\r\nFor `&[u8]` or `Take<&'a [u8]>`, the problem is much simpler as we know the size that will be required :\r\n```rust \r\nv.extend_from_slice(&data);\r\nlet n = v.len();\r\ndata = &data[n..];\r\n```\r\n\r\nThe `manual` implementation is typically between 3 and 5 times faster on my computer.\r\n\r\nAssuming what seems a non-pathological case : no resize required, the `Vec` has a sufficient capacity to begin with, and running the following benchmark https://gist.github.com/fulmicoton/a1fb87c3f3578f118552917636c95933\r\nyields the following result :\r\n\r\n```\r\ntest tests::bench_read_manual ... bench:           9 ns/iter (+/- 1)\r\ntest tests::bench_read_std    ... bench:          35 ns/iter (+/- 6)\r\n```\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/44819/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/44819/timeline", "performed_via_github_app": null, "state_reason": null}