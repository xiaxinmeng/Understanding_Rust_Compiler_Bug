{"url": "https://api.github.com/repos/rust-lang/rust/issues/50230", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/50230/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/50230/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/50230/events", "html_url": "https://github.com/rust-lang/rust/issues/50230", "id": 317739740, "node_id": "MDU6SXNzdWUzMTc3Mzk3NDA=", "number": 50230, "title": "Document \"latent requirements\" of PartialOrd ", "user": {"login": "gnzlbg", "id": 904614, "node_id": "MDQ6VXNlcjkwNDYxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/904614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnzlbg", "html_url": "https://github.com/gnzlbg", "followers_url": "https://api.github.com/users/gnzlbg/followers", "following_url": "https://api.github.com/users/gnzlbg/following{/other_user}", "gists_url": "https://api.github.com/users/gnzlbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnzlbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnzlbg/subscriptions", "organizations_url": "https://api.github.com/users/gnzlbg/orgs", "repos_url": "https://api.github.com/users/gnzlbg/repos", "events_url": "https://api.github.com/users/gnzlbg/events{/privacy}", "received_events_url": "https://api.github.com/users/gnzlbg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 50, "created_at": "2018-04-25T18:18:10Z", "updated_at": "2021-06-21T04:03:53Z", "closed_at": "2021-06-21T04:03:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The `PartialOrd` docs do not document what is de facto required of trait implementors in order for data structures to work correctly. We should update them!\r\n\r\nPer @RalfJung's [comment below](https://github.com/rust-lang/rust/issues/50230#issuecomment-846104238):\r\n\r\n> FWIW our conclusion was that we basically already require `<` to be irreflexive, since that is the only way the following equivalences can be upheld:\r\n> * `x < y` iff `x.partial_cmp(y) == Some(Less)`\r\n> * `x == y` iff `x.partial_cmp(y) == Some(Equal)`\r\n> * `x > y` iff `x.partial_cmp(y) == Some(Greater)`\r\n>\r\n> The docs are not explicitly stating that these equivalences must hold, but it seems very much against the spirit of this trait to allow violations of these equivalences. The fact that `PartialOrd: PartialEq` is very useful here as it makes the 2nd axiom well-defined.\r\n\r\n\r\n<details>\r\n<summary>This post used to say something different. Here is the original post</summary>\r\n\r\nWhy doesn't `PartialOrd` require irreflexivity `!(a < a)` over `<` ? AFAICT `PartialOrd` does not actually express any kind of ordering relation for `<`. For: \r\n\r\n* a strict partial order on `<`: we need `PartialOrd` + `Irreflexivity`\r\n* non-strict partial order on `<=`: we need `PartialOrd` + `Eq` since `==` must be reflexive.\r\n* total order: we need`PartialOrd + Eq + Total`\r\n\r\nIs this an oversight? If not, we should document that `PartialOrd` requires:\r\n\r\n* irreflexivity: `!(a < a)`\r\n\r\nas well. That would make `PartialOrd`'s `<` denote a strict partial order on `<`. \r\n\r\nAFAICT this is actually what was intended, since all the discussions I can find online about `PartialOrd` talk about floats, and floats are strictly partially ordered under `<`, but not non-strictly partially ordered under `<=`, which would fit our current model that floats don't implement `Eq`.\r\n\r\n---\r\n\r\nAlso, the docs of `PartialOrd` do not say what `le` (`<=`) and `ge` (`>=`) actually mean. AFAICT they mean nothing for `PartialOrd` in isolation. From reading the source the default implementation is `a < b || a == b`, which would denote a non-strict total ordering over `<=` when `Eq` is implemented. But since `Eq` is not required for `PartialOrd`, I'd guess that those overriding these implementations are allowed to do something else as long as they don't implement `Eq`. It is unclear to me what that \"something else\" might mean, but the docs should probably say something about this.\r\n\r\n---\r\n\r\nAlso, I haven't been able to find any document explaining why things are the way they are, but the fact that `PartialOrd` requires `PartialEq` makes no sense to me, and it doesn't make much sense either that `PartialOrd` exposes `le` (`<=`) and `ge` (`>=`) methods, since as mentioned above, without `Eq`, `le` and `ge` do not express any meaningful ordering relation. It seems that these traits, like all other \"operators\" traits, mix operator overloading with mathematical semantics: in some cases they are used to express mathematical concepts, like a strict partial ordering relation under `<`, and in some other cases they are used \"to provide <= for floats\". If anybody has any links to any discussions / documentation about why things are the way they are I'd like to read them, and maybe we should add rationale sections to the docs.\r\n\r\n</details>", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/50230/reactions", "total_count": 3, "+1": 3, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/50230/timeline", "performed_via_github_app": null, "state_reason": "completed"}