{"url": "https://api.github.com/repos/rust-lang/rust/issues/94953", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/94953/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/94953/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/94953/events", "html_url": "https://github.com/rust-lang/rust/issues/94953", "id": 1169230541, "node_id": "I_kwDOAAsO6M5FsQrN", "number": 94953, "title": "ICE: all diagnostics with unstable expectations should have been converted, compiler/rustc_errors/src/lib.rs: Zunpretty=expanded", "user": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}, {"id": 3900765862, "node_id": "LA_kwDOAAsO6M7ogPam", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-lint_reasons", "name": "F-lint_reasons", "color": "f9c0cc", "default": false, "description": "`#![feature(lint_reasons)]`"}], "state": "closed", "locked": false, "assignee": {"login": "xFrednet", "id": 17087237, "node_id": "MDQ6VXNlcjE3MDg3MjM3", "avatar_url": "https://avatars.githubusercontent.com/u/17087237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xFrednet", "html_url": "https://github.com/xFrednet", "followers_url": "https://api.github.com/users/xFrednet/followers", "following_url": "https://api.github.com/users/xFrednet/following{/other_user}", "gists_url": "https://api.github.com/users/xFrednet/gists{/gist_id}", "starred_url": "https://api.github.com/users/xFrednet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xFrednet/subscriptions", "organizations_url": "https://api.github.com/users/xFrednet/orgs", "repos_url": "https://api.github.com/users/xFrednet/repos", "events_url": "https://api.github.com/users/xFrednet/events{/privacy}", "received_events_url": "https://api.github.com/users/xFrednet/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "xFrednet", "id": 17087237, "node_id": "MDQ6VXNlcjE3MDg3MjM3", "avatar_url": "https://avatars.githubusercontent.com/u/17087237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xFrednet", "html_url": "https://github.com/xFrednet", "followers_url": "https://api.github.com/users/xFrednet/followers", "following_url": "https://api.github.com/users/xFrednet/following{/other_user}", "gists_url": "https://api.github.com/users/xFrednet/gists{/gist_id}", "starred_url": "https://api.github.com/users/xFrednet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xFrednet/subscriptions", "organizations_url": "https://api.github.com/users/xFrednet/orgs", "repos_url": "https://api.github.com/users/xFrednet/repos", "events_url": "https://api.github.com/users/xFrednet/events{/privacy}", "received_events_url": "https://api.github.com/users/xFrednet/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2022-03-15T06:14:09Z", "updated_at": "2022-05-09T02:25:33Z", "closed_at": "2022-05-09T02:25:33Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "<!--\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\nhow to create smaller examples.\n\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\n\n-->\n\n### Code\ncode reduced from `./src/test/ui/lint/rfc-2383-lint-reason/catch_multiple_lint_triggers.rs`\n```Rust\n#![feature(lint_reasons)]\n#![warn(unused)]\n\n// This expect attribute should catch all lint triggers\n#[expect(while_true)]\nfn check_multiple_lints_3() {\n    // `while_true` is an early lint\n    while true {}\n}\n\nfn main() {\n    check_multiple_lints_3();\n}\n```\n\n\n### Meta\n<!--\nIf you're using the stable version of the compiler, you should also check if the\nbug also exists in the beta or nightly versions.\n-->\n\n`rustc --version --verbose`:\n```\nrustc 1.61.0-nightly (984204814 2022-03-15)\nbinary: rustc\ncommit-hash: 984204814e00f60c5e1ec99e2e184f326782a586\ncommit-date: 2022-03-15\nhost: x86_64-unknown-linux-gnu\nrelease: 1.61.0-nightly\nLLVM version: 14.0.0\n```\n\n### Error output\n`rustc ./src/test/ui/lint/rfc-2383-lint-reason/catch_multiple_lint_triggers.rs  -Zunpretty=expanded`\n```\n#![feature(prelude_import)]\n#![no_std]\n#![feature(lint_reasons)]\n#![warn(unused)]\n#[prelude_import]\nuse ::std::prelude::rust_2015::*;\n#[macro_use]\nextern crate std;\n\n// This expect attribute should catch all lint triggers\n#[expect(while_true)]\nfn check_multiple_lints_3() {\n    // `while_true` is an early lint\n    while true {}\n}\n\nfn main() { check_multiple_lints_3(); }\nthread 'rustc' panicked at 'all diagnostics with unstable expectations should have been converted', compiler/rustc_errors/src/lib.rs:526:9\n```\n\n<!--\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\n-->\n<details><summary><strong>Backtrace</strong></summary>\n<p>\n\n```\nthread 'rustc' panicked at 'all diagnostics with unstable expectations should have been converted', compiler/rustc_errors/src/lib.rs:526:9\nstack backtrace:\n   0:     0x7f286389d9bd - std::backtrace_rs::backtrace::libunwind::trace::h54886a1164a7b8fb\n                               at /rustc/984204814e00f60c5e1ec99e2e184f326782a586/library/std/src/../../backtrace/src/backtrace/libunwind.rs:93:5\n   1:     0x7f286389d9bd - std::backtrace_rs::backtrace::trace_unsynchronized::he854c2b32e77ff7e\n                               at /rustc/984204814e00f60c5e1ec99e2e184f326782a586/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n   2:     0x7f286389d9bd - std::sys_common::backtrace::_print_fmt::hd8bb5f879f142dc0\n                               at /rustc/984204814e00f60c5e1ec99e2e184f326782a586/library/std/src/sys_common/backtrace.rs:66:5\n   3:     0x7f286389d9bd - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hd3783bf6865fe700\n                               at /rustc/984204814e00f60c5e1ec99e2e184f326782a586/library/std/src/sys_common/backtrace.rs:45:22\n   4:     0x7f28638f749c - core::fmt::write::h0fa4e88310144d54\n                               at /rustc/984204814e00f60c5e1ec99e2e184f326782a586/library/core/src/fmt/mod.rs:1190:17\n   5:     0x7f286388ef41 - std::io::Write::write_fmt::h472eaf13ee1972d3\n                               at /rustc/984204814e00f60c5e1ec99e2e184f326782a586/library/std/src/io/mod.rs:1655:15\n   6:     0x7f28638a0a35 - std::sys_common::backtrace::_print::hc85703a6308b862d\n                               at /rustc/984204814e00f60c5e1ec99e2e184f326782a586/library/std/src/sys_common/backtrace.rs:48:5\n   7:     0x7f28638a0a35 - std::sys_common::backtrace::print::h6bcb363532ec1b51\n                               at /rustc/984204814e00f60c5e1ec99e2e184f326782a586/library/std/src/sys_common/backtrace.rs:35:9\n   8:     0x7f28638a0a35 - std::panicking::default_hook::{{closure}}::h891429645691f6ae\n                               at /rustc/984204814e00f60c5e1ec99e2e184f326782a586/library/std/src/panicking.rs:295:22\n   9:     0x7f28638a06e9 - std::panicking::default_hook::hd27e62e5b1c07288\n                               at /rustc/984204814e00f60c5e1ec99e2e184f326782a586/library/std/src/panicking.rs:314:9\n  10:     0x7f28640c9751 - rustc_driver[7399fb507d3e2f76]::DEFAULT_HOOK::{closure#0}::{closure#0}\n  11:     0x7f28638a1180 - std::panicking::rust_panic_with_hook::hd570d8c27288e13c\n                               at /rustc/984204814e00f60c5e1ec99e2e184f326782a586/library/std/src/panicking.rs:702:17\n  12:     0x7f28638a0f79 - std::panicking::begin_panic_handler::{{closure}}::h52fa45cffa332e47\n                               at /rustc/984204814e00f60c5e1ec99e2e184f326782a586/library/std/src/panicking.rs:586:13\n  13:     0x7f286389de74 - std::sys_common::backtrace::__rust_end_short_backtrace::h370700b7201336e9\n                               at /rustc/984204814e00f60c5e1ec99e2e184f326782a586/library/std/src/sys_common/backtrace.rs:138:18\n  14:     0x7f28638a0ce9 - rust_begin_unwind\n                               at /rustc/984204814e00f60c5e1ec99e2e184f326782a586/library/std/src/panicking.rs:584:5\n  15:     0x7f2863864c73 - core::panicking::panic_fmt::h09426d21deeed102\n                               at /rustc/984204814e00f60c5e1ec99e2e184f326782a586/library/core/src/panicking.rs:143:14\n  16:     0x7f28667f82e9 - <rustc_errors[2bc643ca97700ab3]::HandlerInner as core[77d6d5013934e084]::ops::drop::Drop>::drop\n  17:     0x7f2865f35f38 - core[77d6d5013934e084]::ptr::drop_in_place::<rustc_session[559b814172b908a0]::parse::ParseSess>\n  18:     0x7f2865f386ca - <alloc[9e28cf12ff38ca95]::rc::Rc<rustc_session[559b814172b908a0]::session::Session> as core[77d6d5013934e084]::ops::drop::Drop>::drop\n  19:     0x7f2865f2107d - core[77d6d5013934e084]::ptr::drop_in_place::<rustc_interface[3d8c97f4ae674e37]::interface::Compiler>\n  20:     0x7f2865f20644 - rustc_span[32181fe9296ff921]::with_source_map::<core[77d6d5013934e084]::result::Result<(), rustc_errors[2bc643ca97700ab3]::ErrorGuaranteed>, rustc_interface[3d8c97f4ae674e37]::interface::create_compiler_and_run<core[77d6d5013934e084]::result::Result<(), rustc_errors[2bc643ca97700ab3]::ErrorGuaranteed>, rustc_driver[7399fb507d3e2f76]::run_compiler::{closure#1}>::{closure#1}>\n  21:     0x7f2865f0e064 - rustc_interface[3d8c97f4ae674e37]::interface::create_compiler_and_run::<core[77d6d5013934e084]::result::Result<(), rustc_errors[2bc643ca97700ab3]::ErrorGuaranteed>, rustc_driver[7399fb507d3e2f76]::run_compiler::{closure#1}>\n  22:     0x7f2865f0c552 - <scoped_tls[dac9345909c415b5]::ScopedKey<rustc_span[32181fe9296ff921]::SessionGlobals>>::set::<rustc_interface[3d8c97f4ae674e37]::interface::run_compiler<core[77d6d5013934e084]::result::Result<(), rustc_errors[2bc643ca97700ab3]::ErrorGuaranteed>, rustc_driver[7399fb507d3e2f76]::run_compiler::{closure#1}>::{closure#0}, core[77d6d5013934e084]::result::Result<(), rustc_errors[2bc643ca97700ab3]::ErrorGuaranteed>>\n  23:     0x7f2865f092af - std[15c12ade071c6b1f]::sys_common::backtrace::__rust_begin_short_backtrace::<rustc_interface[3d8c97f4ae674e37]::util::run_in_thread_pool_with_globals<rustc_interface[3d8c97f4ae674e37]::interface::run_compiler<core[77d6d5013934e084]::result::Result<(), rustc_errors[2bc643ca97700ab3]::ErrorGuaranteed>, rustc_driver[7399fb507d3e2f76]::run_compiler::{closure#1}>::{closure#0}, core[77d6d5013934e084]::result::Result<(), rustc_errors[2bc643ca97700ab3]::ErrorGuaranteed>>::{closure#0}, core[77d6d5013934e084]::result::Result<(), rustc_errors[2bc643ca97700ab3]::ErrorGuaranteed>>\n  24:     0x7f2865f213f2 - <<std[15c12ade071c6b1f]::thread::Builder>::spawn_unchecked_<rustc_interface[3d8c97f4ae674e37]::util::run_in_thread_pool_with_globals<rustc_interface[3d8c97f4ae674e37]::interface::run_compiler<core[77d6d5013934e084]::result::Result<(), rustc_errors[2bc643ca97700ab3]::ErrorGuaranteed>, rustc_driver[7399fb507d3e2f76]::run_compiler::{closure#1}>::{closure#0}, core[77d6d5013934e084]::result::Result<(), rustc_errors[2bc643ca97700ab3]::ErrorGuaranteed>>::{closure#0}, core[77d6d5013934e084]::result::Result<(), rustc_errors[2bc643ca97700ab3]::ErrorGuaranteed>>::{closure#1} as core[77d6d5013934e084]::ops::function::FnOnce<()>>::call_once::{shim:vtable#0}\n  25:     0x7f28638ab313 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::hd82f330334252eb3\n                               at /rustc/984204814e00f60c5e1ec99e2e184f326782a586/library/alloc/src/boxed.rs:1853:9\n  26:     0x7f28638ab313 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::h338760e36879fa6b\n                               at /rustc/984204814e00f60c5e1ec99e2e184f326782a586/library/alloc/src/boxed.rs:1853:9\n  27:     0x7f28638ab313 - std::sys::unix::thread::Thread::new::thread_start::hd4c1bf1e9d99c60a\n                               at /rustc/984204814e00f60c5e1ec99e2e184f326782a586/library/std/src/sys/unix/thread.rs:108:17\n  28:     0x7f28636835c2 - start_thread\n  29:     0x7f2863708584 - __clone\n  30:                0x0 - <unknown>\n\nerror: internal compiler error: unexpected panic\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\n\nnote: rustc 1.61.0-nightly (984204814 2022-03-15) running on x86_64-unknown-linux-gnu\n\nnote: compiler flags: -Z unpretty=expanded\n\nquery stack during panic:\nend of query stack\n```\n\n</p>\n</details>\n\n\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"xFrednet\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/94953/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/94953/timeline", "performed_via_github_app": null, "state_reason": "completed"}