{"url": "https://api.github.com/repos/rust-lang/rust/issues/92577", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/92577/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/92577/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/92577/events", "html_url": "https://github.com/rust-lang/rust/issues/92577", "id": 1094140402, "node_id": "I_kwDOAAsO6M5BN0Hy", "number": 92577, "title": "Computing `<MyStruct as std::ptr::Pointee>::Metadata` fails when trailing field has a projection", "user": {"login": "Zalathar", "id": 20290842, "node_id": "MDQ6VXNlcjIwMjkwODQy", "avatar_url": "https://avatars.githubusercontent.com/u/20290842?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zalathar", "html_url": "https://github.com/Zalathar", "followers_url": "https://api.github.com/users/Zalathar/followers", "following_url": "https://api.github.com/users/Zalathar/following{/other_user}", "gists_url": "https://api.github.com/users/Zalathar/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zalathar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zalathar/subscriptions", "organizations_url": "https://api.github.com/users/Zalathar/orgs", "repos_url": "https://api.github.com/users/Zalathar/repos", "events_url": "https://api.github.com/users/Zalathar/events{/privacy}", "received_events_url": "https://api.github.com/users/Zalathar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}], "state": "closed", "locked": false, "assignee": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2022-01-05T09:18:35Z", "updated_at": "2022-01-10T15:03:37Z", "closed_at": "2022-01-10T15:03:37Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\nhttps://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=8e31db4a857f6bcdbf287b8d9745ca22\r\n\r\n```Rust\r\nuse std::collections::HashMap;\r\n\r\ntrait HasType {\r\n    type Type;\r\n}\r\n\r\nimpl HasType for () {\r\n    type Type = ();\r\n}\r\n\r\npub struct MyStruct {\r\n    _field: <() as HasType>::Type,\r\n}\r\n\r\npub fn do_insert(map: &mut HashMap<*const MyStruct, ()>, key: *const MyStruct) {\r\n    map.insert(key, ());\r\n}\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n(Build fails with an ICE on current stable/beta/nightly on the playground.)\r\n<!--\r\n`rustc --version --verbose`:\r\n```\r\n<meta>\r\n```\r\n-->\r\n\r\n### Error output\r\n\r\n```\r\n   Compiling playground v0.0.1 (/playground)\r\nthread 'rustc' panicked at 'called `Option::unwrap()` on a `None` value', compiler/rustc_monomorphize/src/collector.rs:894:93\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.57.0 (f1edd0429 2021-11-29) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C codegen-units=1 -C debuginfo=2 --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [collect_and_partition_mono_items] collect_and_partition_mono_items\r\n#1 [exported_symbols] exported_symbols\r\nend of query stack\r\nerror: could not compile `playground`\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\n   Compiling playground v0.0.1 (/playground)\r\nthread 'rustc' panicked at 'called `Option::unwrap()` on a `None` value', compiler/rustc_monomorphize/src/collector.rs:894:93\r\nstack backtrace:\r\n   0: rust_begin_unwind\r\n             at /rustc/f1edd0429582dd29cccacaf50fd134b05593bd9c/library/std/src/panicking.rs:517:5\r\n   1: core::panicking::panic_fmt\r\n             at /rustc/f1edd0429582dd29cccacaf50fd134b05593bd9c/library/core/src/panicking.rs:100:14\r\n   2: core::panicking::panic\r\n             at /rustc/f1edd0429582dd29cccacaf50fd134b05593bd9c/library/core/src/panicking.rs:50:5\r\n   3: <rustc_monomorphize::collector::MirNeighborCollector as rustc_middle::mir::visit::Visitor>::visit_terminator\r\n   4: rustc_monomorphize::collector::collect_neighbours\r\n   5: rustc_monomorphize::collector::collect_items_rec\r\n   6: rustc_monomorphize::collector::collect_items_rec\r\n   7: rustc_monomorphize::collector::collect_items_rec\r\n   8: rustc_monomorphize::collector::collect_items_rec\r\n   9: rustc_monomorphize::collector::collect_items_rec\r\n  10: rustc_session::utils::<impl rustc_session::session::Session>::time\r\n  11: rustc_monomorphize::collector::collect_crate_mono_items\r\n  12: rustc_monomorphize::partitioning::collect_and_partition_mono_items\r\n  13: rustc_query_system::query::plumbing::try_execute_query\r\n  14: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::collect_and_partition_mono_items\r\n  15: rustc_codegen_ssa::back::symbol_export::exported_symbols_provider_local\r\n  16: rustc_query_system::query::plumbing::try_execute_query\r\n  17: rustc_query_system::query::plumbing::get_query\r\n  18: rustc_metadata::rmeta::encoder::EncodeContext::encode_crate_root\r\n  19: rustc_metadata::rmeta::encoder::encode_metadata_impl\r\n  20: rustc_data_structures::sync::join\r\n  21: rustc_metadata::rmeta::encoder::encode_metadata\r\n  22: rustc_interface::queries::Queries::ongoing_codegen\r\n  23: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n  24: rustc_span::with_source_map\r\n  25: scoped_tls::ScopedKey<T>::set\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.57.0 (f1edd0429 2021-11-29) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C codegen-units=1 -C debuginfo=2 --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [collect_and_partition_mono_items] collect_and_partition_mono_items\r\n#1 [exported_symbols] exported_symbols\r\nend of query stack\r\nerror: could not compile `playground`\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/92577/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/92577/timeline", "performed_via_github_app": null, "state_reason": "completed"}