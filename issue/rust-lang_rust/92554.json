{"url": "https://api.github.com/repos/rust-lang/rust/issues/92554", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/92554/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/92554/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/92554/events", "html_url": "https://github.com/rust-lang/rust/issues/92554", "id": 1093429565, "node_id": "I_kwDOAAsO6M5BLGk9", "number": 92554, "title": "confusing dead code warning inside macro annotated function", "user": {"login": "dvdsk", "id": 11743287, "node_id": "MDQ6VXNlcjExNzQzMjg3", "avatar_url": "https://avatars.githubusercontent.com/u/11743287?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dvdsk", "html_url": "https://github.com/dvdsk", "followers_url": "https://api.github.com/users/dvdsk/followers", "following_url": "https://api.github.com/users/dvdsk/following{/other_user}", "gists_url": "https://api.github.com/users/dvdsk/gists{/gist_id}", "starred_url": "https://api.github.com/users/dvdsk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dvdsk/subscriptions", "organizations_url": "https://api.github.com/users/dvdsk/orgs", "repos_url": "https://api.github.com/users/dvdsk/repos", "events_url": "https://api.github.com/users/dvdsk/events{/privacy}", "received_events_url": "https://api.github.com/users/dvdsk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-01-04T14:49:08Z", "updated_at": "2022-01-04T14:49:08Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "If I instrument an _unused function_ using the _tokio-tracing_ library I get a dead code warning that seems impossible.\r\n\r\nThe `instrument` procedural macro rewrites the _unused function_. Somewhere this causes the dead code warning for the function to not be reported. However dead code warnings from the function body, caused by the function not being used, are reported. As you miss the dead code warning regarding the function body you could get really confused how the function body code can be dead. \r\n\r\nThe hiding of the dead code warning for the function is a known [issue](https://github.com/tokio-rs/tracing/issues/1366) of the tracing library. It has happens to another procedural macro:  [fn-error-context](https://github.com/andrewhickman/fn-error-context/issues/3) where it could be resolved.\r\n\r\nGiven the following [code](https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=9238421a4bfb74ad191bc552b0fdaff1):\r\n\r\n```rust\r\nuse tracing; // 0.1.29\r\n\r\nstruct Test;\r\nimpl Test {\r\n    #[tracing::instrument]\r\n    fn never_used(var: i32) {\r\n        const IS_USED: &str = \"I get a dead code warning\";\r\n\r\n        if IS_USED == \"\" {\r\n            println!(\"\");\r\n        }\r\n    }\r\n}\r\n\r\nfn main() {\r\n    let _test = Test;\r\n}\r\n```\r\n\r\nThe current output is:\r\n\r\n```\r\nwarning: constant is never used: `IS_USED`\r\n --> src/main.rs:7:9\r\n  |\r\n7 |         const IS_USED: &str = \"I get a dead code warning\";\r\n  |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  |\r\n  = note: `#[warn(dead_code)]` on by default\r\n\r\nwarning: `playground` (bin \"playground\") generated 1 warning\r\n    Finished dev [unoptimized + debuginfo] target(s) in 1.10s\r\n```\r\n_note how the unused code warning regarding the function argument is also hidden and only the dead code warning from the function body is emitted making this case extra confusing_\r\n\r\nIdeally the output should look like:\r\n\r\n```\r\nwarning: unused variable: `var`\r\n --> src/main.rs:5:19\r\n  |\r\n5 |     fn never_used(var: i32) {\r\n  |                   ^^^ help: if this is intentional, prefix it with an underscore: `_var`\r\n  |\r\n  = note: `#[warn(unused_variables)]` on by default\r\n\r\nwarning: associated function is never used: `never_used`\r\n --> src/main.rs:5:8\r\n  |\r\n5 |     fn never_used(var: i32) {\r\n  |        ^^^^^^^^^^\r\n  |\r\n  = note: `#[warn(dead_code)]` on by default\r\n\r\nwarning: constant is never used: `IS_USED`\r\n --> src/main.rs:6:9\r\n  |\r\n6 |         const IS_USED: &str = \"I get a dead code warning\";\r\n  |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n```\r\n\r\nIf `never_used()` is not a member of `Test` the code compiles without any warnings, which while sub optimal is less confusing (and maybe more desirable) then having the single unused code warning.\r\n\r\nA next step in investigating this could be writing a minimal macro that still causes this behavior. Unfortunately I do not have time for that right now.\r\n\r\nCompiler: `stable 1.57 ` but also confirmed to happen on `nightly`", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/92554/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/92554/timeline", "performed_via_github_app": null, "state_reason": null}