{"url": "https://api.github.com/repos/rust-lang/rust/issues/83528", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/83528/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/83528/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/83528/events", "html_url": "https://github.com/rust-lang/rust/issues/83528", "id": 842259319, "node_id": "MDU6SXNzdWU4NDIyNTkzMTk=", "number": 83528, "title": "Writing to `stdout` with `write()` changed behavior between version 1.47 and >= 1.48", "user": {"login": "sdragic", "id": 43753725, "node_id": "MDQ6VXNlcjQzNzUzNzI1", "avatar_url": "https://avatars.githubusercontent.com/u/43753725?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sdragic", "html_url": "https://github.com/sdragic", "followers_url": "https://api.github.com/users/sdragic/followers", "following_url": "https://api.github.com/users/sdragic/following{/other_user}", "gists_url": "https://api.github.com/users/sdragic/gists{/gist_id}", "starred_url": "https://api.github.com/users/sdragic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sdragic/subscriptions", "organizations_url": "https://api.github.com/users/sdragic/orgs", "repos_url": "https://api.github.com/users/sdragic/repos", "events_url": "https://api.github.com/users/sdragic/events{/privacy}", "received_events_url": "https://api.github.com/users/sdragic/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 60329014, "node_id": "MDU6TGFiZWw2MDMyOTAxNA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-low", "name": "P-low", "color": "eb6420", "default": false, "description": "Low priority"}, {"id": 2011781731, "node_id": "MDU6TGFiZWwyMDExNzgxNzMx", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs", "name": "T-libs", "color": "bfd4f2", "default": false, "description": "Relevant to the library team, which will review and decide on the PR/issue."}, {"id": 2238437210, "node_id": "MDU6TGFiZWwyMjM4NDM3MjEw", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-io", "name": "A-io", "color": "f7e101", "default": false, "description": "Area: std::io, std::fs, std::net and std::path"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2021-03-26T19:58:54Z", "updated_at": "2021-07-21T19:01:29Z", "closed_at": "2021-07-21T19:01:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm not sure this is worth reporting, but it has caused confusion at least once, so maybe it makes sense to be documented somewhere.\r\n\r\nWhen writing to `stdout` with `write()`, write will return smaller number bytes than direct `write()` call would do in some cases. Here is example code:\r\n```rust\r\nuse std::io::{self, Write};\r\n\r\nfn main() {\r\n    let mut a = ['a' as u8; 2048];\r\n    eprintln!(\"{}\", a.len());\r\n    eprintln!(\"{:?}\", io::stdout().write(&a));\r\n    a[50] = '\\n' as u8;\r\n    eprintln!(\"{:?}\", io::stdout().write(&a));\r\n}\r\n```\r\n\r\nRustc 1.47 gives expected result:\r\n```\r\n#./main > /dev/null\r\n2048\r\nOk(2048)\r\nOk(2048)\r\n```\r\n\r\nThis is also in accordance with similar programs written in C, Python and Rust using `libc::write()`.\r\n\r\nHowever rustc 1.48 and greater return this:\r\n```\r\n#./main > /dev/null\r\n2048\r\nOk(2048)\r\nOk(1075)\r\n```\r\n\r\nThis is technically not a bug, but IMHO it is unexpected behavior. Rust docs says this:\r\n\r\n> This function will attempt to write the entire contents of buf, but the entire write may not succeed, or the write may also generate an error. A call to write represents at most one attempt to write to any wrapped object.\r\n\r\nI'm aware \"wrapped object\" here is some internal `std` library structure, but most people would expect it should behave similarly to underlying system `write()`.\r\n\r\n`man 2 write` says:\r\n\r\n> The  number  of  bytes  written  may  be  less than count if, for example, there is insufficient space on the underlying physical medium, or the RLIMIT_FSIZE resource limit is encountered (see setr\u2010limit(2)), or the call was interrupted by a signal handler after having written less than count bytes.\r\n\r\nAs I understand this, returning less than count should be affected only by OS state and not by content of data (newline in this case).\r\n\r\nThis behavior seems to be introduced with PR #72808, and pending PR #78515 seems to revert behavior to expected.\r\n\r\nJust a disclaimer, I do not condone use of unchecked `write()`. Reason for reporting this is inconsistency between `io::stdout().write()` and similar approaches.\r\n", "closed_by": {"login": "joshtriplett", "id": 162737, "node_id": "MDQ6VXNlcjE2MjczNw==", "avatar_url": "https://avatars.githubusercontent.com/u/162737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joshtriplett", "html_url": "https://github.com/joshtriplett", "followers_url": "https://api.github.com/users/joshtriplett/followers", "following_url": "https://api.github.com/users/joshtriplett/following{/other_user}", "gists_url": "https://api.github.com/users/joshtriplett/gists{/gist_id}", "starred_url": "https://api.github.com/users/joshtriplett/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joshtriplett/subscriptions", "organizations_url": "https://api.github.com/users/joshtriplett/orgs", "repos_url": "https://api.github.com/users/joshtriplett/repos", "events_url": "https://api.github.com/users/joshtriplett/events{/privacy}", "received_events_url": "https://api.github.com/users/joshtriplett/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/83528/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/83528/timeline", "performed_via_github_app": null, "state_reason": "completed"}