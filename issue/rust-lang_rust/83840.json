{"url": "https://api.github.com/repos/rust-lang/rust/issues/83840", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/83840/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/83840/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/83840/events", "html_url": "https://github.com/rust-lang/rust/issues/83840", "id": 849813634, "node_id": "MDU6SXNzdWU4NDk4MTM2MzQ=", "number": 83840, "title": "error: internal compiler error: compiler/rustc_mir/src/transform/generator.rs:751:13: Broken MIR: generator contains type", "user": {"login": "rainliu", "id": 2069201, "node_id": "MDQ6VXNlcjIwNjkyMDE=", "avatar_url": "https://avatars.githubusercontent.com/u/2069201?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rainliu", "html_url": "https://github.com/rainliu", "followers_url": "https://api.github.com/users/rainliu/followers", "following_url": "https://api.github.com/users/rainliu/following{/other_user}", "gists_url": "https://api.github.com/users/rainliu/gists{/gist_id}", "starred_url": "https://api.github.com/users/rainliu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rainliu/subscriptions", "organizations_url": "https://api.github.com/users/rainliu/orgs", "repos_url": "https://api.github.com/users/rainliu/repos", "events_url": "https://api.github.com/users/rainliu/events{/privacy}", "received_events_url": "https://api.github.com/users/rainliu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-04-04T06:56:06Z", "updated_at": "2021-04-09T20:15:44Z", "closed_at": "2021-04-09T20:15:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\n```Rust\r\nhttps://github.com/webrtc-rs/ice/runs/2262774206?check_suite_focus=true\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nnote: rustc 1.53.0-nightly (0b417ab5c 2021-04-03) running on x86_64-unknown-linux-gnu\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nerror: internal compiler error: compiler/rustc_mir/src/transform/generator.rs:751:13: Broken MIR: generator contains type [closure@src/agent/agent_test.rs:1817:9: 1829:10] in MIR, but typeck only knows about for<'r, 's, 't0, 't1, 't2, 't3, 't4, 't5, 't6, 't7, 't8, 't9, 't10, 't11, 't12, 't13, 't14, 't15, 't16> {ResumeTy, std::time::Duration, [closure@src/agent/agent_test.rs:1817:9: 1829:10], &'s std::time::Duration, Option<std::time::Duration>, agent_config::AgentConfig, Option<agent_config::AgentConfig>, impl std::future::Future, (), std::sync::Arc<agent::Agent>, &'t0 [closure@src/agent/agent_test.rs:1817:9: 1829:10], &'t2 agent::Agent, impl std::future::Future, String, Box<(dyn FnMut(state::ConnectionState) + Send + Sync + 't4)>, tokio::sync::mpsc::Receiver<()>, impl std::future::Future, &'t6 str, impl std::future::Future, impl std::future::Future, impl std::future::Future, &'t10 std::sync::Arc<agent::Agent>, impl std::future::Future, &'t13 mut tokio::sync::mpsc::Receiver<()>, impl std::future::Future, &'t15 String, impl std::future::Future}\r\n    --> src/agent/agent_test.rs:1811:62\r\n     |\r\n1811 |   async fn test_agent_restart_both_side() -> Result<(), Error> {\r\n     |  ______________________________________________________________^\r\n1812 | |     let one_second = Duration::from_secs(1);\r\n1813 | |     //\"Restart Both Sides\"\r\n1814 | |\r\n...    |\r\n1887 | |     Ok(())\r\n1888 | | }\r\n     | |_^\r\n\r\nthread 'rustc' panicked at 'Box<Any>', /rustc/0b417ab5cdfdedffd74fb22cf22d27033c851304/library/std/src/panic.rs:59:5\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.53.0-nightly (0b417ab5c 2021-04-03) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -Z profile -Z panic_abort_tests -C embed-bitcode=no -C debuginfo=2 -C codegen-units=1 -C opt-level=0 -C link-dead-code -C overflow-checks=off -C panic=abort -C debug-assertions=off\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [optimized_mir] optimizing MIR for `agent::agent_test::test_agent_restart_both_side::{closure#0}`\r\n#1 [layout_raw] computing layout of `[static generator@src/agent/agent_test.rs:1811:62: 1888:2 for<'r, 's, 't0, 't1, 't2, 't3, 't4, 't5, 't6, 't7, 't8, 't9, 't10, 't11, 't12, 't13, 't14, 't15, 't16> {std::future::ResumeTy, std::time::Duration, [closure@src/agent/agent_test.rs:1817:9: 1829:10], &'s std::time::Duration, std::option::Option<std::time::Duration>, agent::agent_config::AgentConfig, std::option::Option<agent::agent_config::AgentConfig>, std::future::from_generator::GenFuture<[static generator@src/agent/agent_transport_test.rs:11:78: 45:2 for<'t17, 't18, 't19, 't20, 't21, 't22, 't23, 't24> {std::future::ResumeTy, std::option::Option<agent::agent_config::AgentConfig>, std::boxed::Box<(dyn std::ops::FnMut(state::ConnectionState) + std::marker::Send + std::marker::Sync + 't17)>, tokio::sync::mpsc::Receiver<()>, agent::agent_config::AgentConfig, std::future::from_generator::GenFuture<[static generator@src/agent/mod.rs:95:71: 279:6 for<'t25, 't26, 't27, 't28, 't29, 't30, 't31, 't32, 't33, 't34> {std::future::ResumeTy, agent::agent_config::AgentConfig, std::string::String, mdns::MulticastDnsMode, std::option::Option<std::sync::Arc<webrtc_mdns::conn::DNSConn>>, tokio::sync::mpsc::Sender<state::ConnectionState>, tokio::sync::mpsc::Receiver<state::ConnectionState>, tokio::sync::mpsc::Sender<std::option::Option<std::sync::Arc<(dyn candidate::Candidate + std::marker::Send + std::marker::Sync + 't25)>>>, tokio::sync::mpsc::Receiver<std::option::Option<std::sync::Arc<(dyn candidate::Candidate + std::marker::Send + std::marker::Sync + 't26)>>>, tokio::sync::mpsc::Sender<()>, tokio::sync::mpsc::Receiver<()>, tokio::sync::mpsc::Sender<bool>, tokio::sync::mpsc::Receiver<bool>, tokio::sync::broadcast::Sender<()>, agent::agent_internal::AgentInternal, std::vec::Vec<candidate::CandidateType>, &'t27 std::option::Option<std::sync::Arc<webrtc_mdns::conn::DNSConn>>, impl std::future::Future, (), &'t29 agent::agent_config::AgentConfig, &'t30 [candidate::CandidateType], &'t31 std::vec::Vec<candidate::CandidateType>, std::result::Result<std::option::Option<external_ip_mapper::ExternalIpMapper>, webrtc_util::Error>, webrtc_util::Error, std::option::Option<external_ip_mapper::ExternalIpMapper>, std::sync::Arc<webrtc_util::vnet::net::Net>, agent::Agent, std::sync::Arc<tokio::sync::Mutex<agent::agent_internal::AgentInternal>>, std::future::from_generator::GenFuture<[static generator@src/agent/mod.rs:306:7: 363:6 {}]>, &'t32 agent::Agent, impl std::future::Future, std::result::Result<(), webrtc_util::Error>, impl std::future::Future}]>, (), std::sync::Arc<agent::Agent>, &'t18 agent::Agent, impl std::future::Future, &'t20 std::sync::Arc<agent::Agent>, impl std::future::Future, std::sync::Arc<agent::agent_transport::AgentConn>, std::sync::Arc<agent::agent_transport::AgentConn>, &'t23 mut tokio::sync::mpsc::Receiver<()>, impl std::future::Future}]>, (), std::sync::Arc<agent::Agent>, &'t0 [closure@src/agent/agent_test.rs:1817:9: 1829:10], &'t2 agent::Agent, impl std::future::Future, std::string::String, std::boxed::Box<(dyn std::ops::FnMut(state::ConnectionState) + std::marker::Send + std::marker::Sync + 't4)>, tokio::sync::mpsc::Receiver<()>, impl std::future::Future, &'t6 str, impl std::future::Future, impl std::future::Future, impl std::future::Future, &'t10 std::sync::Arc<agent::Agent>, impl std::future::Future, &'t13 mut tokio::sync::mpsc::Receiver<()>, impl std::future::Future, &'t15 std::string::String, impl std::future::Future}]`\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\n<backtrace>\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/83840/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/83840/timeline", "performed_via_github_app": null, "state_reason": "completed"}