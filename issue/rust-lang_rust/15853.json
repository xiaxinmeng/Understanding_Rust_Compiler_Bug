{"url": "https://api.github.com/repos/rust-lang/rust/issues/15853", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/15853/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/15853/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/15853/events", "html_url": "https://github.com/rust-lang/rust/issues/15853", "id": 38285102, "node_id": "MDU6SXNzdWUzODI4NTEwMg==", "number": 15853, "title": "Provide method find_slice() for &[T]", "user": {"login": "nwin", "id": 949560, "node_id": "MDQ6VXNlcjk0OTU2MA==", "avatar_url": "https://avatars.githubusercontent.com/u/949560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nwin", "html_url": "https://github.com/nwin", "followers_url": "https://api.github.com/users/nwin/followers", "following_url": "https://api.github.com/users/nwin/following{/other_user}", "gists_url": "https://api.github.com/users/nwin/gists{/gist_id}", "starred_url": "https://api.github.com/users/nwin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nwin/subscriptions", "organizations_url": "https://api.github.com/users/nwin/orgs", "repos_url": "https://api.github.com/users/nwin/repos", "events_url": "https://api.github.com/users/nwin/events{/privacy}", "received_events_url": "https://api.github.com/users/nwin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-07-21T08:45:47Z", "updated_at": "2015-01-23T23:03:48Z", "closed_at": "2015-01-23T23:03:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "&str has find_str(). It would be handy to have such a method for slices as well. This is for example useful for work with non-utf8 based strings. \n\nA simple implementation for `std::slice::ImmutableEqVector` could be:\n\n```\n/// Returns the index of the first matching subslice\nfn find_slice<T: PartialEq>(&self, needle: &[T]) -> Option<uint> {\n    for i in range(0, this.len()) {\n        if this.slice_from(i).starts_with(needle) {\n            return Some(i)\n        }\n    }\n    None\n}\n```\n\nIf desired I could file a pull request.\n", "closed_by": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/15853/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/15853/timeline", "performed_via_github_app": null, "state_reason": "completed"}