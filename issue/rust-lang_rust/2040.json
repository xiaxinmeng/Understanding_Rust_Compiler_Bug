{"url": "https://api.github.com/repos/rust-lang/rust/issues/2040", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/2040/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/2040/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/2040/events", "html_url": "https://github.com/rust-lang/rust/issues/2040", "id": 3743315, "node_id": "MDU6SXNzdWUzNzQzMzE1", "number": 2040, "title": "avoid implicit copy in ptr::addr_of()", "user": {"login": "dram", "id": 517130, "node_id": "MDQ6VXNlcjUxNzEzMA==", "avatar_url": "https://avatars.githubusercontent.com/u/517130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dram", "html_url": "https://github.com/dram", "followers_url": "https://api.github.com/users/dram/followers", "following_url": "https://api.github.com/users/dram/following{/other_user}", "gists_url": "https://api.github.com/users/dram/gists{/gist_id}", "starred_url": "https://api.github.com/users/dram/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dram/subscriptions", "organizations_url": "https://api.github.com/users/dram/orgs", "repos_url": "https://api.github.com/users/dram/repos", "events_url": "https://api.github.com/users/dram/events{/privacy}", "received_events_url": "https://api.github.com/users/dram/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37234, "node_id": "MDU6TGFiZWwzNzIzNA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-cleanup", "name": "C-cleanup", "color": "f5f1fd", "default": false, "description": "Category: PRs that clean code up or issues documenting cleanup."}, {"id": 37544, "node_id": "MDU6TGFiZWwzNzU0NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-typesystem", "name": "A-typesystem", "color": "f7e101", "default": false, "description": "Area: The type system"}, {"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/rust-lang/rust/milestones/6", "html_url": "https://github.com/rust-lang/rust/milestone/6", "labels_url": "https://api.github.com/repos/rust-lang/rust/milestones/6/labels", "id": 80849, "node_id": "MDk6TWlsZXN0b25lODA4NDk=", "number": 6, "title": "0.3", "description": "", "creator": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 65, "state": "closed", "created_at": "2012-02-05T23:36:26Z", "updated_at": "2012-07-10T20:55:40Z", "due_on": "2012-05-26T07:00:00Z", "closed_at": "2012-07-10T20:55:40Z"}, "comments": 7, "created_at": "2012-03-21T10:30:40Z", "updated_at": "2014-06-16T21:56:38Z", "closed_at": "2012-03-23T15:08:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "I wonder if there is any use for `ptr::addr_of()` to return address of a temporary copied version of its argument, but it seems a bit annoying. E.g. for following code, different address will be printed.\n\n```\nfn main() {\n        let foo = 1;\n\n        log(error, addr_of(foo));\n        log(error, addr_of(foo));\n}\n```\n\nUse following version of `addr_of` instead, the address will be consistent.\n\n```\nfn addr_of<T>(&val: T) -> *T { ret ptr::addr_of(val); }\n```\n\nAnd a real world example:\n\n```\nfn get_elem(mixer: snd_mixer, name: str) -> snd_elem {\n    let sid = null();\n\n    asound::snd_mixer_selem_id_malloc(addr_of(sid));\n\n    asound::snd_mixer_selem_id_set_index(sid, 0);\n\n    as_c_str(name) {|buf|\n        asound::snd_mixer_selem_id_set_name(sid, buf);\n    }\n\n    ret asound::snd_mixer_find_selem(mixer, sid);\n}\n```\n\n`asound::snd_mixer_selem_id_malloc()` will allocate a buffer and assign the address to `sid`\u3002But as `sid` is implicit copied, `sid` remains `0` after this function call.\n\nCan `ptr::addr_of()` be defined as always pass by reference to avoid implicit copy?\n", "closed_by": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/2040/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/2040/timeline", "performed_via_github_app": null, "state_reason": "completed"}