{"url": "https://api.github.com/repos/rust-lang/rust/issues/110294", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/110294/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/110294/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/110294/events", "html_url": "https://github.com/rust-lang/rust/issues/110294", "id": 1667019394, "node_id": "I_kwDOAAsO6M5jXLKC", "number": 110294, "title": "LLVM name mangling workaround \\x01 seems broken", "user": {"login": "MauriceKayser", "id": 35454376, "node_id": "MDQ6VXNlcjM1NDU0Mzc2", "avatar_url": "https://avatars.githubusercontent.com/u/35454376?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MauriceKayser", "html_url": "https://github.com/MauriceKayser", "followers_url": "https://api.github.com/users/MauriceKayser/followers", "following_url": "https://api.github.com/users/MauriceKayser/following{/other_user}", "gists_url": "https://api.github.com/users/MauriceKayser/gists{/gist_id}", "starred_url": "https://api.github.com/users/MauriceKayser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MauriceKayser/subscriptions", "organizations_url": "https://api.github.com/users/MauriceKayser/orgs", "repos_url": "https://api.github.com/users/MauriceKayser/repos", "events_url": "https://api.github.com/users/MauriceKayser/events{/privacy}", "received_events_url": "https://api.github.com/users/MauriceKayser/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37547, "node_id": "MDU6TGFiZWwzNzU0Nw==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-linkage", "name": "A-linkage", "color": "f7e101", "default": false, "description": "Area: linking into static, shared libraries and binaries"}, {"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 123109, "node_id": "MDU6TGFiZWwxMjMxMDk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-windows", "name": "O-windows", "color": "6e6ec0", "default": false, "description": "Operating system: Windows"}, {"id": 60329014, "node_id": "MDU6TGFiZWw2MDMyOTAxNA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-low", "name": "P-low", "color": "eb6420", "default": false, "description": "Low priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 262252840, "node_id": "MDU6TGFiZWwyNjIyNTI4NDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-stable", "name": "regression-from-stable-to-stable", "color": "e4008a", "default": false, "description": "Performance or correctness regression from one stable version to another."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2023-04-13T19:33:24Z", "updated_at": "2023-04-19T09:28:56Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "I think https://github.com/rust-lang/rust/pull/96444 might have broken the [#[export_name = \"\\x01...\"]](https://github.com/rust-lang/rust/issues?q=%5Cx01+mangle) LLVM workaround for avoiding the \"@XYZ\" name mangling on x86. Compiling the following with `i686-pc-windows-msvc` results in `error LNK2001: unresolved external symbol _\u263atest1@0`:\r\n\r\n```rust\r\n#[export_name = \"\\x02test2\"]\r\nextern \"stdcall\" fn test2() {}\r\n\r\n#[export_name = \"\\x01test1\"]\r\nextern \"stdcall\" fn test1() {}\r\n```\r\nI stumbled upon this when trying to use the `\\x01` workaround to specify the `_aulldiv` symbol, which the MSVC linker expects to be named `__aulldiv` (instead of `__aulldiv@16`) in `#![no_std]` x86 Windows crates.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/110294/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/110294/timeline", "performed_via_github_app": null, "state_reason": null}