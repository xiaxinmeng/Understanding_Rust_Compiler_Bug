{"url": "https://api.github.com/repos/rust-lang/rust/issues/110511", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/110511/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/110511/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/110511/events", "html_url": "https://github.com/rust-lang/rust/issues/110511", "id": 1673965209, "node_id": "I_kwDOAAsO6M5jxq6Z", "number": 110511, "title": "\"cannot produce dylib for `rustc_driver v0.0.0 ...` as the target `riscv64gc-unknown-linux-musl` does not support these crate types\"", "user": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37547, "node_id": "MDU6TGFiZWwzNzU0Nw==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-linkage", "name": "A-linkage", "color": "f7e101", "default": false, "description": "Area: linking into static, shared libraries and binaries"}, {"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 325438536, "node_id": "MDU6TGFiZWwzMjU0Mzg1MzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-bootstrap", "name": "T-bootstrap", "color": "bfd4f2", "default": false, "description": "Relevant to the bootstrap subteam: Rust's build system (x.py and src/bootstrap)"}, {"id": 609101895, "node_id": "MDU6TGFiZWw2MDkxMDE4OTU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-cargo", "name": "T-cargo", "color": "bfd4f2", "default": false, "description": "Relevant to the cargo team, which will review and decide on the PR/issue."}, {"id": 630662867, "node_id": "MDU6TGFiZWw2MzA2NjI4Njc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-musl", "name": "O-musl", "color": "6e6ec0", "default": false, "description": "Target: The musl libc"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2023-04-18T23:44:00Z", "updated_at": "2023-04-19T01:46:13Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm cross-compiling Rust for `riscv64gc-unknown-linux-musl` with the following `config.toml`:\r\n\r\n```\r\nprofile = \"codegen\"\r\nchangelog-seen = 2\r\n\r\n[build]\r\ndocs = false\r\ncompiler-docs = false\r\nextended = true\r\n\r\n[target.riscv64gc-unknown-linux-musl]\r\nar = \"/home/scratch/riscv/bin/riscv64-unknown-linux-musl-ar\"\r\nlinker = \"/home/scratch/riscv/bin/riscv64-unknown-linux-musl-gcc\"\r\ncc = \"/home/scratch/riscv/bin/riscv64-unknown-linux-musl-gcc\"\r\ncxx = \"/home/scratch/riscv/bin/riscv64-unknown-linux-musl-g++\"\r\nmusl-root = \"/home/scratch/riscv/sysroot\"\r\n\r\n[llvm]\r\ndownload-ci-llvm = false\r\nlink-shared = false\r\n```\r\nExecuting:\r\n`RUSTFLAGS=\"-Clink-args=-lgcc\" ./x.py build --host riscv64gc-unknown-linux-musl --target riscv64gc-unknown-linux-musl  --verbose`\r\n\r\nthe output is:\r\n```\r\n[snip]\r\nBuilding compiler artifacts (stage1:x86_64-unknown-linux-gnu -> stage2:riscv64gc-unknown-linux-musl)\r\nrunning: cd \"/home/scratch/rust\" && AR_riscv64gc_unknown_linux_musl=\"/home/scratch/riscv/bin/riscv64-unknown-linux-musl-ar\" CARGO_INCREMENTAL=\"1\" CARGO_PROFILE_RELEASE_DEBUG=\"0\" CARGO_PROFILE_RELEASE_DEBUG_ASSERTIONS=\"false\" CARGO_PROFILE_RELEASE_OVERFLOW_CHECKS=\"false\" CARGO_TARGET_DIR=\"/home/scratch/rust/build/x86_64-unknown-linux-gnu/stage1-rustc\" CARGO_TARGET_RISCV64GC_UNKNOWN_LINUX_MUSL_LINKER=\"/home/scratch/riscv/bin/riscv64-unknown-linux-musl-gcc\" CC_riscv64gc_unknown_linux_musl=\"/home/scratch/riscv/bin/riscv64-unknown-linux-musl-gcc\" CFG_COMPILER_HOST_TRIPLE=\"riscv64gc-unknown-linux-musl\" CFG_DEFAULT_CODEGEN_BACKEND=\"llvm\" CFG_LIBDIR_RELATIVE=\"lib\" CFG_RELEASE=\"1.71.0-dev\" CFG_RELEASE_CHANNEL=\"dev\" CFG_VERSION=\"1.71.0-dev\" CFLAGS_riscv64gc_unknown_linux_musl=\"-ffunction-sections -fdata-sections -fPIC -march=rv64gc -mabi=lp64d -mcmodel=medany -static\" CXXFLAGS_riscv64gc_unknown_linux_musl=\"-ffunction-sections -fdata-sections -fPIC -march=rv64gc -mabi=lp64d -mcmodel=medany -static\" CXX_riscv64gc_unknown_linux_musl=\"/home/scratch/riscv/bin/riscv64-unknown-linux-musl-g++\" LIBC_CHECK_CFG=\"1\" LLVM_CONFIG=\"/home/scratch/rust/build/x86_64-unknown-linux-gnu/llvm/build/bin/llvm-config\" LLVM_NDEBUG=\"1\" LLVM_RUSTLLVM=\"1\" RANLIB_riscv64gc_unknown_linux_musl=\"/home/scratch/riscv/bin/riscv64-unknown-linux-musl-ar s\" REAL_LIBRARY_PATH_VAR=\"LD_LIBRARY_PATH\" RUSTBUILD_NATIVE_DIR=\"/home/scratch/rust/build/riscv64gc-unknown-linux-musl/native\" RUSTC=\"/home/scratch/rust/build/bootstrap/debug/rustc\" RUSTC_BACKTRACE_ON_ICE=\"1\" RUSTC_BOOTSTRAP=\"1\" RUSTC_BREAK_ON_ICE=\"1\" RUSTC_ERROR_METADATA_DST=\"/home/scratch/rust/build/tmp/extended-error-metadata\" RUSTC_FORCE_UNSTABLE=\"1\" RUSTC_INSTALL_BINDIR=\"bin\" RUSTC_LIBDIR=\"/home/scratch/rust/build/x86_64-unknown-linux-gnu/stage1/lib\" RUSTC_LINT_FLAGS=\"-Wrust_2018_idioms -Wunused_lifetimes -Wsemicolon_in_expressions_from_macros -Dwarnings\" RUSTC_REAL=\"/home/scratch/rust/build/x86_64-unknown-linux-gnu/stage1/bin/rustc\" RUSTC_SNAPSHOT=\"/home/scratch/rust/build/x86_64-unknown-linux-gnu/stage1/bin/rustc\" RUSTC_SNAPSHOT_LIBDIR=\"/home/scratch/rust/build/x86_64-unknown-linux-gnu/stage1/lib\" RUSTC_STAGE=\"1\" RUSTC_SYSROOT=\"/home/scratch/rust/build/x86_64-unknown-linux-gnu/stage1\" RUSTC_TLS_MODEL_INITIAL_EXEC=\"1\" RUSTC_VERBOSE=\"1\" RUSTDOC=\"/home/scratch/rust/build/bootstrap/debug/rustdoc\" RUSTDOCFLAGS=\"-Clink-args=-lgcc --cfg=windows_raw_dylib -Csymbol-mangling-version=v0 -Zunstable-options --check-cfg=values(bootstrap) --check-cfg=values(parallel_compiler) --check-cfg=values(no_btreemap_remove_entry) --check-cfg=values(crossbeam_loom) --check-cfg=values(span_locations) --check-cfg=values(rustix_use_libc) --check-cfg=values(emulate_second_only_system) --check-cfg=values(windows_raw_dylib) -Dwarnings -Wrustdoc::invalid_codeblock_attributes --crate-version 1.71.0-dev\" RUSTDOC_REAL=\"/path/to/nowhere/rustdoc/not/required\" RUSTFLAGS=\"-Clink-args=-lgcc --cfg=windows_raw_dylib -Csymbol-mangling-version=v0 -Zunstable-options --check-cfg=values(bootstrap) --check-cfg=values(parallel_compiler) --check-cfg=values(no_btreemap_remove_entry) --check-cfg=values(crossbeam_loom) --check-cfg=values(span_locations) --check-cfg=values(rustix_use_libc) --check-cfg=values(emulate_second_only_system) --check-cfg=values(windows_raw_dylib) -Zdual-proc-macros -Zmacro-backtrace -Clink-args=-Wl,-z,origin -Clink-args=-Wl,-rpath,$ORIGIN/../lib -Csplit-debuginfo=off -Zunstable-options -Wrustc::internal -Cprefer-dynamic -Cllvm-args=-import-instr-limit=10 -Clto=off\" RUST_TEST_THREADS=\"32\" WINAPI_NO_BUNDLED_LIBRARIES=\"1\" __CARGO_DEFAULT_LIB_METADATA=\"dev\" \"/home/scratch/rust/build/x86_64-unknown-linux-gnu/stage0/bin/cargo\" \"build\" \"--target\" \"riscv64gc-unknown-linux-musl\" \"--release\" \"-Zcheck-cfg=names,values,output,features\" \"-Zdual-proc-macros\" \"-Zbinary-dep-depinfo\" \"-j\" \"32\" \"-v\" \"--features\" \"llvm\" \"--manifest-path\" \"/home/scratch/rust/compiler/rustc/Cargo.toml\" \"--message-format\" \"json-render-diagnostics\"\r\nerror: cannot produce dylib for `rustc_driver v0.0.0 (/home/scratch/rust/compiler/rustc_driver)` as the target `riscv64gc-unknown-linux-musl` does not support these crate types\r\ncommand did not execute successfully: cd \"/home/scratch/rust\" && AR_riscv64gc_unknown_linux_musl=\"/home/scratch/riscv/bin/riscv64-unknown-linux-musl-ar\" CARGO_INCREMENTAL=\"1\" CARGO_PROFILE_RELEASE_DEBUG=\"0\" CARGO_PROFILE_RELEASE_DEBUG_ASSERTIONS=\"false\" CARGO_PROFILE_RELEASE_OVERFLOW_CHECKS=\"false\" CARGO_TARGET_DIR=\"/home/scratch/rust/build/x86_64-unknown-linux-gnu/stage1-rustc\" CARGO_TARGET_RISCV64GC_UNKNOWN_LINUX_MUSL_LINKER=\"/home/scratch/riscv/bin/riscv64-unknown-linux-musl-gcc\" CC_riscv64gc_unknown_linux_musl=\"/home/scratch/riscv/bin/riscv64-unknown-linux-musl-gcc\" CFG_COMPILER_HOST_TRIPLE=\"riscv64gc-unknown-linux-musl\" CFG_DEFAULT_CODEGEN_BACKEND=\"llvm\" CFG_LIBDIR_RELATIVE=\"lib\" CFG_RELEASE=\"1.71.0-dev\" CFG_RELEASE_CHANNEL=\"dev\" CFG_VERSION=\"1.71.0-dev\" CFLAGS_riscv64gc_unknown_linux_musl=\"-ffunction-sections -fdata-sections -fPIC -march=rv64gc -mabi=lp64d -mcmodel=medany -static\" CXXFLAGS_riscv64gc_unknown_linux_musl=\"-ffunction-sections -fdata-sections -fPIC -march=rv64gc -mabi=lp64d -mcmodel=medany -static\" CXX_riscv64gc_unknown_linux_musl=\"/home/scratch/riscv/bin/riscv64-unknown-linux-musl-g++\" LIBC_CHECK_CFG=\"1\" LLVM_CONFIG=\"/home/scratch/rust/build/x86_64-unknown-linux-gnu/llvm/build/bin/llvm-config\" LLVM_NDEBUG=\"1\" LLVM_RUSTLLVM=\"1\" RANLIB_riscv64gc_unknown_linux_musl=\"/home/scratch/riscv/bin/riscv64-unknown-linux-musl-ar s\" REAL_LIBRARY_PATH_VAR=\"LD_LIBRARY_PATH\" RUSTBUILD_NATIVE_DIR=\"/home/scratch/rust/build/riscv64gc-unknown-linux-musl/native\" RUSTC=\"/home/scratch/rust/build/bootstrap/debug/rustc\" RUSTC_BACKTRACE_ON_ICE=\"1\" RUSTC_BOOTSTRAP=\"1\" RUSTC_BREAK_ON_ICE=\"1\" RUSTC_ERROR_METADATA_DST=\"/home/scratch/rust/build/tmp/extended-error-metadata\" RUSTC_FORCE_UNSTABLE=\"1\" RUSTC_INSTALL_BINDIR=\"bin\" RUSTC_LIBDIR=\"/home/scratch/rust/build/x86_64-unknown-linux-gnu/stage1/lib\" RUSTC_LINT_FLAGS=\"-Wrust_2018_idioms -Wunused_lifetimes -Wsemicolon_in_expressions_from_macros -Dwarnings\" RUSTC_REAL=\"/home/scratch/rust/build/x86_64-unknown-linux-gnu/stage1/bin/rustc\" RUSTC_SNAPSHOT=\"/home/scratch/rust/build/x86_64-unknown-linux-gnu/stage1/bin/rustc\" RUSTC_SNAPSHOT_LIBDIR=\"/home/scratch/rust/build/x86_64-unknown-linux-gnu/stage1/lib\" RUSTC_STAGE=\"1\" RUSTC_SYSROOT=\"/home/scratch/rust/build/x86_64-unknown-linux-gnu/stage1\" RUSTC_TLS_MODEL_INITIAL_EXEC=\"1\" RUSTC_VERBOSE=\"1\" RUSTDOC=\"/home/scratch/rust/build/bootstrap/debug/rustdoc\" RUSTDOCFLAGS=\"-Clink-args=-lgcc --cfg=windows_raw_dylib -Csymbol-mangling-version=v0 -Zunstable-options --check-cfg=values(bootstrap) --check-cfg=values(parallel_compiler) --check-cfg=values(no_btreemap_remove_entry) --check-cfg=values(crossbeam_loom) --check-cfg=values(span_locations) --check-cfg=values(rustix_use_libc) --check-cfg=values(emulate_second_only_system) --check-cfg=values(windows_raw_dylib) -Dwarnings -Wrustdoc::invalid_codeblock_attributes --crate-version 1.71.0-dev\" RUSTDOC_REAL=\"/path/to/nowhere/rustdoc/not/required\" RUSTFLAGS=\"-Clink-args=-lgcc --cfg=windows_raw_dylib -Csymbol-mangling-version=v0 -Zunstable-options --check-cfg=values(bootstrap) --check-cfg=values(parallel_compiler) --check-cfg=values(no_btreemap_remove_entry) --check-cfg=values(crossbeam_loom) --check-cfg=values(span_locations) --check-cfg=values(rustix_use_libc) --check-cfg=values(emulate_second_only_system) --check-cfg=values(windows_raw_dylib) -Zdual-proc-macros -Zmacro-backtrace -Clink-args=-Wl,-z,origin -Clink-args=-Wl,-rpath,$ORIGIN/../lib -Csplit-debuginfo=off -Zunstable-options -Wrustc::internal -Cprefer-dynamic -Cllvm-args=-import-instr-limit=10 -Clto=off\" RUST_TEST_THREADS=\"32\" WINAPI_NO_BUNDLED_LIBRARIES=\"1\" __CARGO_DEFAULT_LIB_METADATA=\"dev\" \"/home/scratch/rust/build/x86_64-unknown-linux-gnu/stage0/bin/cargo\" \"build\" \"--target\" \"riscv64gc-unknown-linux-musl\" \"--release\" \"-Zcheck-cfg=names,values,output,features\" \"-Zdual-proc-macros\" \"-Zbinary-dep-depinfo\" \"-j\" \"32\" \"-v\" \"--features\" \"llvm\" \"--manifest-path\" \"/home/scratch/rust/compiler/rustc/Cargo.toml\" \"--message-format\" \"json-render-diagnostics\"\r\nexpected success, got: exit status: 101\r\nTraceback (most recent call last):\r\n  File \"/home/scratch/rust/./x.py\", line 29, in <module>\r\n    bootstrap.main()\r\n  File \"/home/scratch/rust/src/bootstrap/bootstrap.py\", line 951, in main\r\n    bootstrap(args)\r\n  File \"/home/scratch/rust/src/bootstrap/bootstrap.py\", line 926, in bootstrap\r\n    run(args, env=env, verbose=build.verbose, is_bootstrap=True)\r\n  File \"/home/scratch/rust/src/bootstrap/bootstrap.py\", line 167, in run\r\n    raise RuntimeError(err)\r\nRuntimeError: failed to run: /home/scratch/rust/build/bootstrap/debug/bootstrap build --host riscv64gc-unknown-linux-musl --target riscv64gc-unknown-linux-musl --verbose\r\n```\r\nIf I edit the `compiler/rustc_driver/Cargo.toml` file as suggested [here](https://users.rust-lang.org/t/how-to-build-a-statically-linked-rustc/83024), it works.\r\n\r\nI filed a separate bug, #110509, about the error message, but even aside from the diagnostics, this behavior seems wrong. My understanding of what the error means is \"we can't build the extended Rust tool set, because that requires a dynamically linked `rustc_driver` crate, which can't be built for a target with a statically linked C runtime\" (if my understanding is wrong, let me know.) That seems like a condition that should be detected at config time, not midway through the build. Moreover, if this really is an intrinsic limitation of compiling Rust for statically linked targets, it seems weird to me that the `compiler/rustc_driver/Cargo.toml` patch would fix it. On the other hand, if it's not an intrinsic limitation, then manually patching this file shouldn't be necessary and the preferred crate type for `rustc_driver` should be auto-detected based on the target and target options.\r\n\r\nHope this makes sense, but if further clarification is needed, let me know! ", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/110511/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/110511/timeline", "performed_via_github_app": null, "state_reason": null}