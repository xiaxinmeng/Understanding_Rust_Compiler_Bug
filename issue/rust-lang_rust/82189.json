{"url": "https://api.github.com/repos/rust-lang/rust/issues/82189", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/82189/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/82189/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/82189/events", "html_url": "https://github.com/rust-lang/rust/issues/82189", "id": 809518112, "node_id": "MDU6SXNzdWU4MDk1MTgxMTI=", "number": 82189, "title": "MIR should never emit references to `std::intrinsics::drop_in_place`", "user": {"login": "bstrie", "id": 865233, "node_id": "MDQ6VXNlcjg2NTIzMw==", "avatar_url": "https://avatars.githubusercontent.com/u/865233?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bstrie", "html_url": "https://github.com/bstrie", "followers_url": "https://api.github.com/users/bstrie/followers", "following_url": "https://api.github.com/users/bstrie/following{/other_user}", "gists_url": "https://api.github.com/users/bstrie/gists{/gist_id}", "starred_url": "https://api.github.com/users/bstrie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bstrie/subscriptions", "organizations_url": "https://api.github.com/users/bstrie/orgs", "repos_url": "https://api.github.com/users/bstrie/repos", "events_url": "https://api.github.com/users/bstrie/events{/privacy}", "received_events_url": "https://api.github.com/users/bstrie/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 256133398, "node_id": "MDU6TGFiZWwyNTYxMzMzOTg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-mir", "name": "A-mir", "color": "f7e101", "default": false, "description": "Area: Mid-level IR (MIR) - https://blog.rust-lang.org/2016/04/19/MIR.html"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2021-02-16T17:42:24Z", "updated_at": "2021-02-21T17:44:15Z", "closed_at": "2021-02-21T17:44:15Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When the `drop_in_place` feature was first stabilized, its lang item (and stable interface) was `intrinsics::drop_in_place`. Later in https://github.com/rust-lang/rust/commit/f2c7917402ebd858f5b517a3406bec8ef187bfb1 , `intrinsics::drop_in_place` was deprecated in favor of `ptr::drop_in_place`. However the deprecation never actually happened in practice, because `#[rustc_deprecated]` does nothing when applied to a re-export. This was remedied in https://github.com/rust-lang/rust/pull/82122 , which also discovered that somehow, somewhere, MIR is still emitting hardcoded references to `intrinsics::drop_in_place`, ignoring the fact that the lang item is `ptr::drop_in_place`.\r\n\r\nTest case:\r\n```rust\r\nfn main() {\r\n    unsafe { std::ptr::drop_in_place(&mut 1); }\r\n}\r\n```\r\nOutput when compiled with `rustc --emit=mir`:\r\n```\r\n// WARNING: This output format is intended for human consumers only\r\n// and is subject to change without notice. Knock yourself out.\r\nfn main() -> () {\r\n    let mut _0: ();                      // return place in scope 0 at dip.rs:1:11: 1:11\r\n    let _1: ();                          // in scope 0 at dip.rs:2:18: 2:49\r\n    let mut _2: *mut i32;                // in scope 0 at dip.rs:2:42: 2:48\r\n    let mut _3: &mut i32;                // in scope 0 at dip.rs:2:42: 2:48\r\n    let mut _4: i32;                     // in scope 0 at dip.rs:2:47: 2:48\r\n    scope 1 {\r\n    }\r\n\r\n    bb0: {\r\n        StorageLive(_1);                 // scope 1 at dip.rs:2:18: 2:49\r\n        StorageLive(_2);                 // scope 1 at dip.rs:2:42: 2:48\r\n        StorageLive(_3);                 // scope 1 at dip.rs:2:42: 2:48\r\n        StorageLive(_4);                 // scope 1 at dip.rs:2:47: 2:48\r\n        _4 = const 1_i32;                // scope 1 at dip.rs:2:47: 2:48\r\n        _3 = &mut _4;                    // scope 1 at dip.rs:2:42: 2:48\r\n        _2 = &raw mut (*_3);             // scope 1 at dip.rs:2:42: 2:48\r\n        _1 = drop_in_place::<i32>(move _2) -> bb1; // scope 1 at dip.rs:2:18: 2:49\r\n                                         // mir::Constant\r\n                                         // + span: dip.rs:2:18: 2:41\r\n                                         // + literal: Const { ty: unsafe fn(*mut i32) {std::intrinsics::drop_in_place::<i32>}, val: Value(Scalar(<ZST>)) }\r\n    }\r\n\r\n    bb1: {\r\n        StorageDead(_2);                 // scope 1 at dip.rs:2:48: 2:49\r\n        StorageDead(_4);                 // scope 1 at dip.rs:2:49: 2:50\r\n        StorageDead(_3);                 // scope 1 at dip.rs:2:49: 2:50\r\n        StorageDead(_1);                 // scope 1 at dip.rs:2:49: 2:50\r\n        _0 = const ();                   // scope 1 at dip.rs:2:9: 2:52\r\n        return;                          // scope 0 at dip.rs:3:2: 3:2\r\n    }\r\n}\r\n```\r\nNotice the line `// + literal: Const { ty: unsafe fn(*mut i32) {std::intrinsics::drop_in_place::<i32>}`. This should be referring to `ptr::drop_in_place` instead.", "closed_by": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/82189/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/82189/timeline", "performed_via_github_app": null, "state_reason": "completed"}