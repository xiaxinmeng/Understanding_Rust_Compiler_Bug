{"url": "https://api.github.com/repos/rust-lang/rust/issues/69994", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/69994/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/69994/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/69994/events", "html_url": "https://github.com/rust-lang/rust/issues/69994", "id": 581010830, "node_id": "MDU6SXNzdWU1ODEwMTA4MzA=", "number": 69994, "title": "fn item can't coerce to trait object when a trait bound has a lifetime parameter", "user": {"login": "Ralith", "id": 104558, "node_id": "MDQ6VXNlcjEwNDU1OA==", "avatar_url": "https://avatars.githubusercontent.com/u/104558?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ralith", "html_url": "https://github.com/Ralith", "followers_url": "https://api.github.com/users/Ralith/followers", "following_url": "https://api.github.com/users/Ralith/following{/other_user}", "gists_url": "https://api.github.com/users/Ralith/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ralith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ralith/subscriptions", "organizations_url": "https://api.github.com/users/Ralith/orgs", "repos_url": "https://api.github.com/users/Ralith/repos", "events_url": "https://api.github.com/users/Ralith/events{/privacy}", "received_events_url": "https://api.github.com/users/Ralith/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 800802916, "node_id": "MDU6TGFiZWw4MDA4MDI5MTY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-coercions", "name": "A-coercions", "color": "f7e101", "default": false, "description": "Area: implicit and explicit `expr as Type` coercions"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-14T03:23:25Z", "updated_at": "2020-03-14T13:07:59Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\n```rust\r\ntrait Trait<'a> {}\r\nimpl<'a, T> Trait<'a> for T {}\r\n\r\nfn func<'a, T: Trait<'a>>(x: &'a str) {}\r\nconst CONST: &dyn for<'a> Fn(&'a str) = &func::<i32>;\r\n```\r\n\r\nfails to typecheck with the errors:\r\n\r\n```\r\nerror[E0631]: type mismatch in function arguments\r\n --> src/lib.rs:5:41\r\n  |\r\n4 | fn func<'a, T: Trait<'a>>(x: &'a str) {}\r\n  | ------------------------------------- found signature of `fn(&str) -> _`\r\n5 | const CONST: &dyn for<'a> Fn(&'a str) = &func::<i32>;\r\n  |                                         ^^^^^^^^^^^^ expected signature of `for<'a> fn(&'a str) -> _`\r\n  |\r\n  = note: required for the cast to the object type `dyn for<'a> std::ops::Fn(&'a str)`\r\n\r\nerror[E0271]: type mismatch resolving `for<'a> <fn(&str) {func::<'_, i32>} as std::ops::FnOnce<(&'a str,)>>::Output == ()`\r\n --> src/lib.rs:5:41\r\n  |\r\n5 | const CONST: &dyn for<'a> Fn(&'a str) = &func::<i32>;\r\n  |                                         ^^^^^^^^^^^^ expected bound lifetime parameter 'a, found concrete lifetime\r\n  |\r\n  = note: required for the cast to the object type `dyn for<'a> std::ops::Fn(&'a str)`\r\n```\r\n\r\nIf `Trait` does not have a lifetime parameter, or if `func::<i32>` is replaced with `|x| func::<i32>(x)`, the example compiles successfully.\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.42.0 (b8cedc004 2020-03-09)\r\nbinary: rustc\r\ncommit-hash: b8cedc00407a4c56a3bda1ed605c6fc166655447\r\ncommit-date: 2020-03-09\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.42.0\r\nLLVM version: 9.0\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/69994/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/69994/timeline", "performed_via_github_app": null, "state_reason": null}