{"url": "https://api.github.com/repos/rust-lang/rust/issues/87824", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/87824/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/87824/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/87824/events", "html_url": "https://github.com/rust-lang/rust/issues/87824", "id": 962913454, "node_id": "MDU6SXNzdWU5NjI5MTM0NTQ=", "number": 87824, "title": "improper_ctypes diagnostic should advise to avoid improper C types because their ABI is unstable", "user": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 45472092, "node_id": "MDU6TGFiZWw0NTQ3MjA5Mg==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-ffi", "name": "A-ffi", "color": "f7e101", "default": false, "description": "Area: Foreign Function Interface (FFI)"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-08-06T17:17:17Z", "updated_at": "2021-08-06T23:51:43Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n\r\nIf you cannot produce a minimal reproduction case (something that would work in\r\nisolation), please provide the steps or even link to a repository that causes\r\nthe problematic output to occur.\r\n-->\r\n\r\nSpawned off of this [zulip thread](https://zulip-archive.rust-lang.org/131828tcompiler/23501slicesvectorsinexternC.html).\r\n\r\nGiven the following code: <!-- Please provide a link to play.rust-lang.org -->\r\n\r\n```rust\r\nextern {\r\n    fn __enzyme_autodiff(_: usize, a: &[f32], d_a: &mut [f32]);\r\n}\r\n```\r\n\r\nThe current output is:\r\n\r\n```\r\nwarning: `extern` block uses type `[f32]`, which is not FFI-safe\r\n --> src/lib.rs:2:39\r\n  |\r\n2 |     fn __enzyme_autodiff(_: usize, a: &[f32], d_a: &mut [f32]);\r\n  |                                       ^^^^^^ not FFI-safe\r\n  |\r\n  = note: `#[warn(improper_ctypes)]` on by default\r\n  = help: consider using a raw pointer instead\r\n  = note: slices have no C equivalent\r\n\r\nwarning: `extern` block uses type `[f32]`, which is not FFI-safe\r\n --> src/lib.rs:2:52\r\n  |\r\n2 |     fn __enzyme_autodiff(_: usize, a: &[f32], d_a: &mut [f32]);\r\n  |                                                    ^^^^^^^^^^ not FFI-safe\r\n  |\r\n  = help: consider using a raw pointer instead\r\n  = note: slices have no C equivalent\r\n\r\nwarning: 2 warnings emitted\r\n```\r\n\r\n<!-- The following is not always necessary. -->\r\nIdeally the output should look like:\r\n\r\n```\r\nwarning: `extern` block uses type `[f32]`, which is not FFI-safe\r\n --> src/lib.rs:2:39\r\n  |\r\n2 |     fn __enzyme_autodiff(_: usize, a: &[f32], d_a: &mut [f32]);\r\n  |                                       ^^^^^^ not FFI-safe\r\n  |\r\n  = note: `#[warn(improper_ctypes)]` on by default\r\n  = help: consider using a raw pointer instead\r\n  = note: slices have no C equivalent, and their ABI is unstable\r\n\r\nwarning: `extern` block uses type `[f32]`, which is not FFI-safe\r\n --> src/lib.rs:2:52\r\n  |\r\n2 |     fn __enzyme_autodiff(_: usize, a: &[f32], d_a: &mut [f32]);\r\n  |                                                    ^^^^^^^^^^ not FFI-safe\r\n  |\r\n  = help: consider using a raw pointer instead\r\n  = note: slices have no C equivalent, and their ABI is unstable\r\n\r\nwarning: 2 warnings emitted\r\n```\r\n\r\nWhy: Currently, people might reverse-engineer the current ABI, and use a Rust type in an `extern \"C\"` block despite the warning. Reminding the reader that the ABI is unstable will help discourage that practice.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/87824/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/87824/timeline", "performed_via_github_app": null, "state_reason": null}