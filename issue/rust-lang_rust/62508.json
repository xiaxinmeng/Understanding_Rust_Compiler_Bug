{"url": "https://api.github.com/repos/rust-lang/rust/issues/62508", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/62508/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/62508/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/62508/events", "html_url": "https://github.com/rust-lang/rust/issues/62508", "id": 465473192, "node_id": "MDU6SXNzdWU0NjU0NzMxOTI=", "number": 62508, "title": "Drop with guaranteed move elision", "user": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 43009118, "node_id": "MDU6TGFiZWw0MzAwOTExOA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-destructors", "name": "A-destructors", "color": "f7e101", "default": false, "description": "Area: destructors (Drop, ..)"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 256133398, "node_id": "MDU6TGFiZWwyNTYxMzMzOTg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-mir", "name": "A-mir", "color": "f7e101", "default": false, "description": "Area: Mid-level IR (MIR) - https://blog.rust-lang.org/2016/04/19/MIR.html"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-07-08T21:44:23Z", "updated_at": "2020-03-22T20:01:22Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Today, calling `drop(_1)` results in the following MIR:\r\n\r\n```rust\r\n_2 = move _1;\r\nstd::mem::drop::<T>(_2) -> [return .., unwind ..];\r\n```\r\n\r\nWe could instead inline this directly to a MIR drop, with no move. This makes it simpler to do some optimizations in MIR.\r\n\r\nThis issue specifically tracks having such a `drop` available in HIR lowering; whether or not to bless `std::mem::drop` with this guarantee is up for discussion.\r\n\r\ncc @cramertj @withoutboats ", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/62508/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/62508/timeline", "performed_via_github_app": null, "state_reason": null}