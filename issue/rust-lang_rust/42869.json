{"url": "https://api.github.com/repos/rust-lang/rust/issues/42869", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/42869/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/42869/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/42869/events", "html_url": "https://github.com/rust-lang/rust/issues/42869", "id": 238267909, "node_id": "MDU6SXNzdWUyMzgyNjc5MDk=", "number": 42869, "title": "std::fs::canonicalize returns UNC paths on Windows, and a lot of software doesn't support UNC paths", "user": {"login": "radix", "id": 227068, "node_id": "MDQ6VXNlcjIyNzA2OA==", "avatar_url": "https://avatars.githubusercontent.com/u/227068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/radix", "html_url": "https://github.com/radix", "followers_url": "https://api.github.com/users/radix/followers", "following_url": "https://api.github.com/users/radix/following{/other_user}", "gists_url": "https://api.github.com/users/radix/gists{/gist_id}", "starred_url": "https://api.github.com/users/radix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/radix/subscriptions", "organizations_url": "https://api.github.com/users/radix/orgs", "repos_url": "https://api.github.com/users/radix/repos", "events_url": "https://api.github.com/users/radix/events{/privacy}", "received_events_url": "https://api.github.com/users/radix/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 123109, "node_id": "MDU6TGFiZWwxMjMxMDk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-windows", "name": "O-windows", "color": "6e6ec0", "default": false, "description": "Operating system: Windows"}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 2238437210, "node_id": "MDU6TGFiZWwyMjM4NDM3MjEw", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-io", "name": "A-io", "color": "f7e101", "default": false, "description": "Area: std::io, std::fs, std::net and std::path"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 24, "created_at": "2017-06-23T22:29:25Z", "updated_at": "2023-03-19T09:48:28Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi, I hope this is the right forum/format to register this problem, let me know if it's not.\r\n\r\nToday I tried to use `std::fs::canonicalize` to make a path absolute so that I could execute it with `std::process::Command`. `canonicalize` returns so-called \"UNC paths\", which look like this: `\\\\?\\C:\\foo\\bar\\...` (sometimes the `?` can be a hostname).\r\n\r\nIt turns out you can't pass a UNC path as the current directory when starting a process (i.e., `Command::new(...).current_dir(unc_path)`). In fact, a lot of other apps will blow up if you pass them a UNC path: for example, Microsoft's own `cl.exe` compiler doesn't support it: https://github.com/alexcrichton/gcc-rs/issues/169\r\n\r\nIt feels to me that maybe returning UNC paths from canonicalize is the wrong choice, given that  they don't work in so many places. It'd probably be better to return a simple \"absolute path\", which begins with the drive letter, instead of returning a UNC path, and instead provide a separate function specifically for generating UNC paths for people who need them.\r\n\r\nMaybe if this is too much of an incompatible change, a new function for creating absolute paths should be added to std?  I'd bet, however, that making the change to `canonicalize` itself would suddenly make more software suddenly start working rather than suddenly break.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/42869/reactions", "total_count": 48, "+1": 47, "-1": 1, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/42869/timeline", "performed_via_github_app": null, "state_reason": null}