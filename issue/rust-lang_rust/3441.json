{"url": "https://api.github.com/repos/rust-lang/rust/issues/3441", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/3441/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/3441/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/3441/events", "html_url": "https://github.com/rust-lang/rust/issues/3441", "id": 6762725, "node_id": "MDU6SXNzdWU2NzYyNzI1", "number": 3441, "title": "document task scheduler", "user": {"login": "jesse99", "id": 425055, "node_id": "MDQ6VXNlcjQyNTA1NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/425055?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jesse99", "html_url": "https://github.com/jesse99", "followers_url": "https://api.github.com/users/jesse99/followers", "following_url": "https://api.github.com/users/jesse99/following{/other_user}", "gists_url": "https://api.github.com/users/jesse99/gists{/gist_id}", "starred_url": "https://api.github.com/users/jesse99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jesse99/subscriptions", "organizations_url": "https://api.github.com/users/jesse99/orgs", "repos_url": "https://api.github.com/users/jesse99/repos", "events_url": "https://api.github.com/users/jesse99/events{/privacy}", "received_events_url": "https://api.github.com/users/jesse99/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2012-09-10T14:12:01Z", "updated_at": "2013-08-07T22:46:49Z", "closed_at": "2013-08-07T22:46:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "task.rs is a bit overwhelming and very difficult to understand how to use correctly. I think it would be helpful to document a bit better the theory of operation, the default scheduling mode, and probably even some examples for common tasks (even if its just pointers to suitable unit tests).\n\nFor example just how are users supposed to deal with foreign code that blocks? In the simple case I guess SingleThreaded would do the trick. But what about more complex cases? What if I need to call a foreign blocking function, wait for it to respond, and then kick off a bunch of concurrent tasks? Is there a way to spawn that task with SingleThreaded without changing the scheduling of its child tasks?\n", "closed_by": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/3441/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/3441/timeline", "performed_via_github_app": null, "state_reason": "completed"}