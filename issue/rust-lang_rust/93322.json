{"url": "https://api.github.com/repos/rust-lang/rust/issues/93322", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/93322/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/93322/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/93322/events", "html_url": "https://github.com/rust-lang/rust/issues/93322", "id": 1114840729, "node_id": "I_kwDOAAsO6M5Ccx6Z", "number": 93322, "title": "Bad suggestions when trying to initialize an enum as a struct.", "user": {"login": "rukai", "id": 5120858, "node_id": "MDQ6VXNlcjUxMjA4NTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5120858?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rukai", "html_url": "https://github.com/rukai", "followers_url": "https://api.github.com/users/rukai/followers", "following_url": "https://api.github.com/users/rukai/following{/other_user}", "gists_url": "https://api.github.com/users/rukai/gists{/gist_id}", "starred_url": "https://api.github.com/users/rukai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rukai/subscriptions", "organizations_url": "https://api.github.com/users/rukai/orgs", "repos_url": "https://api.github.com/users/rukai/repos", "events_url": "https://api.github.com/users/rukai/events{/privacy}", "received_events_url": "https://api.github.com/users/rukai/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1596122130, "node_id": "MDU6TGFiZWwxNTk2MTIyMTMw", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-papercut", "name": "D-papercut", "color": "c9f7a3", "default": false, "description": "Diagnostic error that needs small tweaks"}, {"id": 1596299768, "node_id": "MDU6TGFiZWwxNTk2Mjk5NzY4", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-invalid-suggestion", "name": "D-invalid-suggestion", "color": "c9f7a3", "default": false, "description": "A structured suggestion resulting in incorrect code"}], "state": "open", "locked": false, "assignee": {"login": "danobi", "id": 824615, "node_id": "MDQ6VXNlcjgyNDYxNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/824615?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danobi", "html_url": "https://github.com/danobi", "followers_url": "https://api.github.com/users/danobi/followers", "following_url": "https://api.github.com/users/danobi/following{/other_user}", "gists_url": "https://api.github.com/users/danobi/gists{/gist_id}", "starred_url": "https://api.github.com/users/danobi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danobi/subscriptions", "organizations_url": "https://api.github.com/users/danobi/orgs", "repos_url": "https://api.github.com/users/danobi/repos", "events_url": "https://api.github.com/users/danobi/events{/privacy}", "received_events_url": "https://api.github.com/users/danobi/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "danobi", "id": 824615, "node_id": "MDQ6VXNlcjgyNDYxNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/824615?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danobi", "html_url": "https://github.com/danobi", "followers_url": "https://api.github.com/users/danobi/followers", "following_url": "https://api.github.com/users/danobi/following{/other_user}", "gists_url": "https://api.github.com/users/danobi/gists{/gist_id}", "starred_url": "https://api.github.com/users/danobi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danobi/subscriptions", "organizations_url": "https://api.github.com/users/danobi/orgs", "repos_url": "https://api.github.com/users/danobi/repos", "events_url": "https://api.github.com/users/danobi/events{/privacy}", "received_events_url": "https://api.github.com/users/danobi/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2022-01-26T10:07:32Z", "updated_at": "2022-07-17T02:40:25Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\nalong with any information you feel relevant to replicating the bug.\n\nIf you cannot produce a minimal reproduction case (something that would work in\nisolation), please provide the steps or even link to a repository that causes\nthe problematic output to occur.\n-->\n\nOccurs in nightly-2022-01-26\n\nGiven the following code: https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=2eec42713e64ef9243a12589aece967c\n\n```rust\npub type Foos = i32;\n\npub enum Foo {\n    A,\n    B,\n    C,\n}\n\nmod module0 {\n    pub struct Foo {\n        a: i32,\n    }\n}\nmod module1 {\n    pub struct Foo {}\n}\nmod module2 {\n    pub enum Foo {} // This one actually gets correctly filtered out\n}\n\nfn main() {\n    let foo = Foo { b: 0 };\n}\n\n```\n\nThe output is a mess of false suggestions, I managed to hit an error that looked very similar to this while refactoring:\n\n```\nerror[E0574]: expected struct, variant or union type, found enum `Foo`\n   --> src/main.rs:22:15\n    |\n 1  | pub type Foos = i32;\n    | -------------------- similarly named type alias `Foos` defined here\n ...\n 22 |     let foo = Foo { b: 0 };\n    |               ^^^\n    |\n help: a type alias with a similar name exists\n    |\n 22 |     let foo = Foos { b: 0 };\n    |               ~~~~\n help: consider importing one of these items instead\n    |\n 1  | use crate::module0::Foo;\n    |\n 1  | use crate::module1::Foo;\n```\n\n\nAt a minimum we should detect that these suggestions are invalid and not suggest them:\n```\nerror[E0574]: expected struct, variant or union type, found enum `Foo`\n   --> src/main.rs:22:15\n    |\n 22 |     let foo = Foo { b: 0 };\n    |               ^^^\n    |\n```\n\nHowever maybe we should instead suggest that the user try to properly use Foo as an enum?\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"danobi\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/93322/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/93322/timeline", "performed_via_github_app": null, "state_reason": null}