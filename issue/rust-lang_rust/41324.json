{"url": "https://api.github.com/repos/rust-lang/rust/issues/41324", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/41324/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/41324/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/41324/events", "html_url": "https://github.com/rust-lang/rust/issues/41324", "id": 221973085, "node_id": "MDU6SXNzdWUyMjE5NzMwODU=", "number": 41324, "title": "Add a warning for casts between slices with items of different size?", "user": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-04-15T21:13:42Z", "updated_at": "2017-06-20T22:50:21Z", "closed_at": "2017-06-20T22:50:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "If making a mistake similar to the one I made in https://github.com/rust-lang/rfcs/issues/1973, one might write code like:\r\n\r\n```rust\r\nuse std::os::raw::c_char;\r\n// foo: &[c_char]\r\nunsafe {\r\n    &*(foo as *const [c_char] as *const [char])\r\n}\r\n```\r\n\r\nThe `as` cast happily copies the length of the slice without considering what it means, and the newly-created slice refers to a chunk as memory four times bigger than the initial slice. This probably causes a buffer overflow when the new slice is used later.\r\n\r\nThe compiler could have caught this. I propose that `as` should warn (a hard error would be a breaking change) when casting from `*const [T]` to `*const [U]` (similarly `*mut`) if `size_of::<T>() != size_of::<U>` and suggest using `std::slice::from_raw_parts` (`from_raw_parts_mut`) with some length computation instead. (And maybe recommend an alignment assertion.)", "closed_by": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/41324/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/41324/timeline", "performed_via_github_app": null, "state_reason": "completed"}