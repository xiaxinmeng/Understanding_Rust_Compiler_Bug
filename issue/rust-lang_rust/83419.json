{"url": "https://api.github.com/repos/rust-lang/rust/issues/83419", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/83419/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/83419/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/83419/events", "html_url": "https://github.com/rust-lang/rust/issues/83419", "id": 839026123, "node_id": "MDU6SXNzdWU4MzkwMjYxMjM=", "number": 83419, "title": "if let scoping of lifetime creates compiler warning", "user": {"login": "xNxExOx", "id": 1893229, "node_id": "MDQ6VXNlcjE4OTMyMjk=", "avatar_url": "https://avatars.githubusercontent.com/u/1893229?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xNxExOx", "html_url": "https://github.com/xNxExOx", "followers_url": "https://api.github.com/users/xNxExOx/followers", "following_url": "https://api.github.com/users/xNxExOx/following{/other_user}", "gists_url": "https://api.github.com/users/xNxExOx/gists{/gist_id}", "starred_url": "https://api.github.com/users/xNxExOx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xNxExOx/subscriptions", "organizations_url": "https://api.github.com/users/xNxExOx/orgs", "repos_url": "https://api.github.com/users/xNxExOx/repos", "events_url": "https://api.github.com/users/xNxExOx/events{/privacy}", "received_events_url": "https://api.github.com/users/xNxExOx/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-03-23T18:57:27Z", "updated_at": "2021-03-23T18:57:27Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "```rust\r\n    use glium::Display;\r\n    let display = Display::new(builder, context, &event_loop).unwrap();\r\n    if let gl_window = display.gl_window() {\r\n        let window = gl_window.window();\r\n        platform.attach_window(&mut gui_display, window, HiDpiMode::Default);\r\n    }\r\n    return display;\r\n```\r\n\r\nThe current output is:\r\n\r\n```\r\nwarning: irrefutable `if let` pattern\r\n   --> imgui-example\\src\\main.rs:153:5\r\n    |\r\n153 | /     if let gl_window = display.gl_window() {\r\n154 | |         let window = gl_window.window();\r\n155 | |         platform.attach_window(&mut gui_display, window, HiDpiMode::Default);\r\n156 | |     }\r\n    | |_____^\r\n    |\r\n    = note: `#[warn(irrefutable_let_patterns)]` on by default\r\n    = note: this pattern will always match, so the `if let` is useless\r\n    = help: consider replacing the `if let` with a `let`\r\n```\r\n\r\nFollowing the suggestion breaks the code, because lifetime in `gl_window` could be used in `Drop` of `gl_window` while display is still being used.\r\n\r\nI am not even sure if this can be reasonably implemented, so it is more of an question/sugestion what you think about scoping with `if let` over manual call `Drop`, or wrapping with block like this:\r\n```rust\r\n    use glium::Display;\r\n    let display = Display::new(builder, context, &event_loop).unwrap();\r\n    {\r\n        let gl_window = display.gl_window();\r\n        let window = gl_window.window();\r\n        platform.attach_window(&mut gui_display, window, HiDpiMode::Default);\r\n    }\r\n    return display;\r\n```\r\nn my **opinion** `if let` scoping is the shortest, and best explains the scope, without looking like too artificial scope.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/83419/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/83419/timeline", "performed_via_github_app": null, "state_reason": null}