{"url": "https://api.github.com/repos/rust-lang/rust/issues/87877", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/87877/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/87877/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/87877/events", "html_url": "https://github.com/rust-lang/rust/issues/87877", "id": 963858821, "node_id": "MDU6SXNzdWU5NjM4NTg4MjE=", "number": 87877, "title": "Panic in `region_scope_tree`: `assertion failed: prev.is_none()`", "user": {"login": "danielhenrymantilla", "id": 9920355, "node_id": "MDQ6VXNlcjk5MjAzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/9920355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danielhenrymantilla", "html_url": "https://github.com/danielhenrymantilla", "followers_url": "https://api.github.com/users/danielhenrymantilla/followers", "following_url": "https://api.github.com/users/danielhenrymantilla/following{/other_user}", "gists_url": "https://api.github.com/users/danielhenrymantilla/gists{/gist_id}", "starred_url": "https://api.github.com/users/danielhenrymantilla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danielhenrymantilla/subscriptions", "organizations_url": "https://api.github.com/users/danielhenrymantilla/orgs", "repos_url": "https://api.github.com/users/danielhenrymantilla/repos", "events_url": "https://api.github.com/users/danielhenrymantilla/events{/privacy}", "received_events_url": "https://api.github.com/users/danielhenrymantilla/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 132910982, "node_id": "MDU6TGFiZWwxMzI5MTA5ODI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-macros", "name": "A-macros", "color": "f7e101", "default": false, "description": "Area: All kinds of macros (custom derive, macro_rules!, proc macros, ..)"}, {"id": 147085028, "node_id": "MDU6TGFiZWwxNDcwODUwMjg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-nightly", "name": "regression-from-stable-to-nightly", "color": "e4008a", "default": false, "description": "Performance or correctness regression from stable to nightly."}, {"id": 203429200, "node_id": "MDU6TGFiZWwyMDM0MjkyMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-high", "name": "P-high", "color": "eb6420", "default": false, "description": "High priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2021-08-09T10:33:03Z", "updated_at": "2021-08-16T18:17:46Z", "closed_at": "2021-08-13T16:57:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\nContext: \"regression\" caught by future-proofing CI from https://github.com/danielhenrymantilla/stackbox.rs/runs/3278204045?check_suite_focus=true\r\n\r\nAfter working on reducing the code, I've identified the root cause of the ICE.\r\n\r\n### Code\r\n\r\n```Rust\r\nmacro_rules! two_items {() => (\r\n    extern {}\r\n    extern {}\r\n)}\r\n\r\nmacro_rules! single_item_funneler {( $item:item ) => ( $item )}\r\n\r\nfn inside_some_function() {\r\n    single_item_funneler! { two_items! {} }\r\n}\r\n```\r\n\r\n  - For context: this patterns stem from \"old\" Rust code wanting to support proc-macros emitting item definitions in \"statement\" position for `<1.45.0` Rust: the trick is to use the `single_item_funneler` to wrap an item-defs-emitting proc-macro call inside a function so that Rust doesn't interpret it as a statement, refusing the then-unstable stmt-emitting proc-macro call ([minimal example](https://docs.rs/mini_paste/0.1.11/src/mini_paste/lib.rs.html#27-38)).\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nnote: rustc 1.56.0-nightly (ad981d58e 2021-08-08) running on x86_64-apple-darwin\r\n```\r\n\r\n  - Bonus: the ICE seems to have been introduced in between today's (\ud83d\udc46) and yesterday's nightly.\r\n\r\n### Error output\r\n\r\n```\r\nthread 'rustc' panicked at 'assertion failed: prev.is_none()', compiler/rustc_middle/src/middle/region.rs:334:13\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nstack backtrace:\r\n   0: _rust_begin_unwind\r\n   1: core::panicking::panic_fmt\r\n   2: core::panicking::panic\r\n   3: rustc_middle::middle::region::ScopeTree::record_scope_parent\r\n   4: <rustc_passes::region::RegionResolutionVisitor as rustc_hir::intravisit::Visitor>::visit_stmt\r\n   5: <rustc_passes::region::RegionResolutionVisitor as rustc_hir::intravisit::Visitor>::visit_block\r\n   6: rustc_passes::region::resolve_expr\r\n   7: <rustc_passes::region::RegionResolutionVisitor as rustc_hir::intravisit::Visitor>::visit_body\r\n   8: rustc_passes::region::region_scope_tree\r\n   9: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  10: rustc_data_structures::stack::ensure_sufficient_stack\r\n  11: rustc_query_system::query::plumbing::force_query_with_job\r\n  12: rustc_query_system::query::plumbing::get_query_impl\r\n  13: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::region_scope_tree\r\n  14: rustc_typeck::check::regionck::RegionCtxt::new\r\n  15: rustc_typeck::check::regionck::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::regionck_item\r\n  16: rustc_infer::infer::InferCtxtBuilder::enter\r\n  17: rustc_typeck::check::wfcheck::check_item_well_formed\r\n  18: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  19: rustc_data_structures::stack::ensure_sufficient_stack\r\n  20: rustc_query_system::query::plumbing::force_query_with_job\r\n  21: rustc_query_system::query::plumbing::get_query_impl\r\n  22: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::check_item_well_formed\r\n  23: <rustc_typeck::check::wfcheck::CheckTypeWellFormedVisitor as rustc_hir::intravisit::Visitor>::visit_item\r\n  24: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once\r\n  25: rustc_data_structures::sync::par_for_each_in\r\n  26: rustc_session::session::Session::track_errors\r\n  27: rustc_typeck::check_crate\r\n  28: rustc_interface::passes::analysis\r\n  29: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  30: rustc_data_structures::stack::ensure_sufficient_stack\r\n  31: rustc_query_system::query::plumbing::force_query_with_job\r\n  32: rustc_query_system::query::plumbing::get_query_impl\r\n  33: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::analysis\r\n  34: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n  35: rustc_span::with_source_map\r\n  36: rustc_interface::interface::create_compiler_and_run\r\n  37: scoped_tls::ScopedKey<T>::set\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.56.0-nightly (ad981d58e 2021-08-08) running on x86_64-apple-darwin\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C split-debuginfo=unpacked -C debuginfo=2 -C incremental --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [region_scope_tree] computing drop scopes for `main`\r\n#1 [check_item_well_formed] checking that `main` is well-formed\r\n#2 [analysis] running analysis passes on this crate\r\nend of query stack\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\ncc @Aaron1011 I suspect this is up your alley \ud83d\ude09 ", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/87877/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/87877/timeline", "performed_via_github_app": null, "state_reason": "completed"}