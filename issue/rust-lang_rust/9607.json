{"url": "https://api.github.com/repos/rust-lang/rust/issues/9607", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/9607/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/9607/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/9607/events", "html_url": "https://github.com/rust-lang/rust/issues/9607", "id": 20231871, "node_id": "MDU6SXNzdWUyMDIzMTg3MQ==", "number": 9607, "title": "Better error message for transitive req of #[deriving].  (Also, how to use deriving here?)", "user": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 2079070889, "node_id": "MDU6TGFiZWwyMDc5MDcwODg5", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-proc-macros", "name": "A-proc-macros", "color": "f7e101", "default": false, "description": "Area: Procedural macros"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 19, "created_at": "2013-09-29T16:38:06Z", "updated_at": "2022-04-27T19:19:25Z", "closed_at": "2022-04-27T08:22:09Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Updated test ([play](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=ada1cfc41339578841d4cddd076b7052)):\r\n\r\n```rust\r\nuse std::marker::PhantomData;\r\n\r\nstruct Foo<T> {\r\n  marker: PhantomData<T>\r\n}\r\n\r\ntrait Bar {}\r\n\r\nimpl<T: Bar> Clone for Foo<T> {\r\n    fn clone(&self) -> Foo<T> { Foo {marker: PhantomData} }\r\n}\r\n\r\n#[derive(Clone)]\r\nstruct Baz<T> {\r\n    x: Foo<T>\r\n}\r\n\r\nfn main() {}\r\n```\r\n\r\n(I'll try to update the above as necessary.)\r\n\r\nThe error message is pretty good now, actually; the only thing I'd want beyond this is for the diagnostic to point out that `Baz` is trying to automatically derive `Clone` (which is why it is missing the necessary `T: Bar` bound), and that a manual implementation with that bound would work.\r\n\r\nOriginal bug report follows.\r\n\r\n----\r\n\r\n``` rust\r\nuse std::hashmap::HashSet;\r\n\r\n#[deriving(Clone)]\r\nstruct FollowSet<T> {\r\n  right: HashSet<T>,\r\n  can_end: bool,\r\n}\r\n```\r\n\r\nError message from rustc:\r\n\r\n```\r\n% rustc --lib /tmp/f.rs\r\n/tmp/f.rs:3:11: 3:16 error: failed to find an implementation of trait std::to_bytes::IterBytes for T\r\n/tmp/f.rs:3 #[deriving(Clone)]\r\n                       ^~~~~\r\n```\r\n\r\nI saw the above, and said \"why does it matter about whether I implement `IterBytes` when I want to implement `Clone` here.  (Then I read source code for `hashmap.rs` and saw that we actually build up the new table from scratch, rather than copying the existing underlying representation directly; so that explains why one needs it.)\r\n\r\nAnyway, it would be good if the error message actually pointed us at the use of `HashSet<T>` in the definition of `struct FollowSet` above.\r\n\r\n---\r\n\r\nOh, also: Is there actually a way for one to use deriving here for this?  As far as I can tell, I'm going to be forced to manually implement `Clone`.  (Its not hard to do, just a little surprising.)\r\n\r\n---\r\n\r\n(not a true dupe of #7621 since that discussing errors when deriving Clone and constituents do not implement Clone.  Here, we determine that the constituent _does_ implement Clone, if some it implements some other trait as well.  But its possible that a solution for one would also resolve the other.)\r\n", "closed_by": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/9607/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/9607/timeline", "performed_via_github_app": null, "state_reason": "completed"}