{"url": "https://api.github.com/repos/rust-lang/rust/issues/68048", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/68048/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/68048/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/68048/events", "html_url": "https://github.com/rust-lang/rust/issues/68048", "id": 547340685, "node_id": "MDU6SXNzdWU1NDczNDA2ODU=", "number": 68048, "title": "Consider deferring parse error on sensibly placed unsafe keyword", "user": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 27424086, "node_id": "MDU6TGFiZWwyNzQyNDA4Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-parser", "name": "A-parser", "color": "f7e101", "default": false, "description": "Area: The parsing of Rust source code to an AST."}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-09T09:03:06Z", "updated_at": "2020-09-10T21:25:53Z", "closed_at": "2020-09-10T21:25:53Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "In DSLs based on an attribute proc macro, it comes up that we want to require a syntactic safety claim on some item which would not normally allow an `unsafe` keyword in Rust syntax.\r\n\r\n```rust\r\n#[my_macro]\r\nunsafe mod m {\r\n    ...\r\n}\r\n\r\n#[my_macro]\r\nunsafe extern \"C\" {\r\n    ...\r\n}\r\n```\r\n\r\nCurrently these fail early with a parse error; you can reproduce by replacing `my_macro` with `cfg(any())`.\r\n\r\nI would like to suggest allowing these to parse and deferring the error until after macro expansion, giving attribute macros a chance to strip `unsafe` from a mod or foreign mod and assign their own semantics for what it means. If `unsafe` remains on a mod or foreign mod after macro expansion we can keep that an error; I am not proposing attaching any new semantics to that.\r\n\r\nWe already do similar deferral of errors on \"sensibly placed\" keywords such as `async` on a trait method or `pub` inside an enum or on an impl:\r\n\r\n```rust\r\n#[cfg(any())]\r\ntrait Trait {\r\n    async fn f();\r\n}\r\n\r\n#[cfg(any())]\r\nenum E {\r\n    pub X,\r\n}\r\n\r\n#[cfg(any())]\r\npub impl T {}\r\n```\r\n\r\nMentioning @Centril who requested an issue to discuss this further.", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/68048/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/68048/timeline", "performed_via_github_app": null, "state_reason": "completed"}