{"url": "https://api.github.com/repos/rust-lang/rust/issues/105718", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/105718/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/105718/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/105718/events", "html_url": "https://github.com/rust-lang/rust/issues/105718", "id": 1497436859, "node_id": "I_kwDOAAsO6M5ZQRK7", "number": 105718, "title": "Type inference does not work properly when `if let` are nested", "user": {"login": "kyoheiu", "id": 61998590, "node_id": "MDQ6VXNlcjYxOTk4NTkw", "avatar_url": "https://avatars.githubusercontent.com/u/61998590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kyoheiu", "html_url": "https://github.com/kyoheiu", "followers_url": "https://api.github.com/users/kyoheiu/followers", "following_url": "https://api.github.com/users/kyoheiu/following{/other_user}", "gists_url": "https://api.github.com/users/kyoheiu/gists{/gist_id}", "starred_url": "https://api.github.com/users/kyoheiu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kyoheiu/subscriptions", "organizations_url": "https://api.github.com/users/kyoheiu/orgs", "repos_url": "https://api.github.com/users/kyoheiu/repos", "events_url": "https://api.github.com/users/kyoheiu/events{/privacy}", "received_events_url": "https://api.github.com/users/kyoheiu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-12-14T21:35:52Z", "updated_at": "2023-01-04T00:37:58Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n\r\nIf you cannot produce a minimal reproduction case (something that would work in\r\nisolation), please provide the steps or even link to a repository that causes\r\nthe problematic output to occur.\r\n-->\r\n\r\nGiven the following code: <!-- Please provide a link to play.rust-lang.org -->\r\n\r\nhttps://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=b0862a23f73c8693280c892ffaf1014b\r\n\r\nThe current output is:\r\n\r\n```\r\nCompiling playground v0.0.1 (/playground)\r\nerror[[E0282]](https://doc.rust-lang.org/stable/error-index.html#E0282): type annotations needed\r\n  --> src/main.rs:22:38\r\n   |\r\n22 |             let command: Vec<&str> = h.command.split_ascii_whitespace().collect();\r\n   |                                      ^^^^^^^^^ cannot infer type\r\n\r\nerror[[E0609]](https://doc.rust-lang.org/stable/error-index.html#E0609): no field `command` on type `&_`\r\n  --> src/main.rs:22:40\r\n   |\r\n22 |             let command: Vec<&str> = h.command.split_ascii_whitespace().collect();\r\n   |                                        ^^^^^^^\r\n\r\nSome errors have detailed explanations: E0282, E0609.\r\nFor more information about an error, try `rustc --explain E0282`.\r\nerror: could not compile `playground` due to 2 previous errors\r\n```\r\n\r\nWhen I change the line 20 like this:\r\n```\r\n    if let Ok(i) = input.parse::<usize>() {\r\n```\r\n\r\nThe type inference error disappears and the code compiles.\r\nThe problem seems to be in `parse()`, where the first `if let` does not give the proper type for `i`: the `h` on lines 21-22 are irrelevant to this problem.\r\nSo it would be better to make the error output to say to add a type annotation for `parse()`.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/105718/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/105718/timeline", "performed_via_github_app": null, "state_reason": null}