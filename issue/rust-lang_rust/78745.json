{"url": "https://api.github.com/repos/rust-lang/rust/issues/78745", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/78745/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/78745/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/78745/events", "html_url": "https://github.com/rust-lang/rust/issues/78745", "id": 736304064, "node_id": "MDU6SXNzdWU3MzYzMDQwNjQ=", "number": 78745, "title": "Inefficient bit mask codegen in combination with comparison operators.", "user": {"login": "shampoofactory", "id": 56542103, "node_id": "MDQ6VXNlcjU2NTQyMTAz", "avatar_url": "https://avatars.githubusercontent.com/u/56542103?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shampoofactory", "html_url": "https://github.com/shampoofactory", "followers_url": "https://api.github.com/users/shampoofactory/followers", "following_url": "https://api.github.com/users/shampoofactory/following{/other_user}", "gists_url": "https://api.github.com/users/shampoofactory/gists{/gist_id}", "starred_url": "https://api.github.com/users/shampoofactory/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shampoofactory/subscriptions", "organizations_url": "https://api.github.com/users/shampoofactory/orgs", "repos_url": "https://api.github.com/users/shampoofactory/repos", "events_url": "https://api.github.com/users/shampoofactory/events{/privacy}", "received_events_url": "https://api.github.com/users/shampoofactory/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-11-04T17:41:01Z", "updated_at": "2021-10-05T02:25:54Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi. All four test cases should compile to what is essentially a no operation. However the compiler does not omit the unnecessary case_1 and case_2 bit mask operations as it does with case_3 and case_4.\r\n\r\nhttps://play.rust-lang.org/?version=stable&mode=release&edition=2018&gist=5bc8761dc8bebe2fbf7797f47c4a2a26\r\n\r\n```rust\r\n// Inefficiently compiled.\r\npub fn case_1(mut u: u32) -> u32 {\r\n    if u <= 0x3F {\r\n        // At this point u is 0..=0x3F and the mask operation does nothing\r\n        u &= 0x7F; // also 0xFF, 0x01FF, ..., 0x7FFF_FFFF.\r\n    }\r\n    u\r\n}\r\n\r\n// Inefficiently compiled.\r\npub fn case_2(mut u: u32) -> u32 {\r\n    if u <= 0x3E {\r\n        // At this point u is 0..=0x3E and the mask operation does nothing\r\n        u &= 0x3F; // also 0x7F, 0xFF, ..., 0x7FFF_FFFF.\r\n    }\r\n    u\r\n}\r\n\r\n\r\n// Ok\r\npub fn case_3(mut u: u32) -> u32 {\r\n    if u <= 0x3F {\r\n        // At this point u is 0..=0x3F and the mask operation does nothing\r\n        u &= 0x3F;\r\n    }\r\n    u\r\n}\r\n\r\n// Ok\r\npub fn case_4(mut u: u32) -> u32 {\r\n    if u <= 0x3F {\r\n        // At this point u is 0..=0x3F and the mask operation does nothing\r\n        u &= 0xFFFF_FFFF;\r\n    }\r\n    u\r\n}\r\n```\r\n\r\nGenerated assembly:\r\n\r\n```assembly\r\nplayground::case_1:\r\n\tmovl\t%edi, %eax\r\n\tandl\t$127, %eax\r\n\tcmpl\t$64, %edi\r\n\tcmovael\t%edi, %eax\r\n\tretq\r\n\r\nplayground::case_2:\r\n\tmovl\t%edi, %eax\r\n\tandl\t$63, %eax\r\n\tcmpl\t$63, %edi\r\n\tcmovael\t%edi, %eax\r\n\tretq\r\n\r\nplayground::case_3:\r\n\tmovl\t%edi, %eax\r\n\tretq\r\n\r\nplayground::case_4:\r\n\tmovl\t%edi, %eax\r\n\tretq\r\n\r\n```\r\n\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/78745/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/78745/timeline", "performed_via_github_app": null, "state_reason": null}