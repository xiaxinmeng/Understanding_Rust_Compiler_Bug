{"url": "https://api.github.com/repos/rust-lang/rust/issues/52068", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/52068/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/52068/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/52068/events", "html_url": "https://github.com/rust-lang/rust/issues/52068", "id": 338415886, "node_id": "MDU6SXNzdWUzMzg0MTU4ODY=", "number": 52068, "title": "ICE when using constraint on Generic Associated Type", "user": {"login": "Nashenas88", "id": 1673130, "node_id": "MDQ6VXNlcjE2NzMxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1673130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nashenas88", "html_url": "https://github.com/Nashenas88", "followers_url": "https://api.github.com/users/Nashenas88/followers", "following_url": "https://api.github.com/users/Nashenas88/following{/other_user}", "gists_url": "https://api.github.com/users/Nashenas88/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nashenas88/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nashenas88/subscriptions", "organizations_url": "https://api.github.com/users/Nashenas88/orgs", "repos_url": "https://api.github.com/users/Nashenas88/repos", "events_url": "https://api.github.com/users/Nashenas88/events{/privacy}", "received_events_url": "https://api.github.com/users/Nashenas88/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 1485960423, "node_id": "MDU6TGFiZWwxNDg1OTYwNDIz", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-generic_associated_types", "name": "F-generic_associated_types", "color": "f9c0cc", "default": false, "description": "`#![feature(generic_associated_types)]` a.k.a. GATs"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-05T03:29:00Z", "updated_at": "2019-08-05T22:52:22Z", "closed_at": "2018-07-05T13:47:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "[The following code](http://play.rust-lang.org/?gist=53733774d700a92268ab18b380c01f7c&version=nightly&mode=debug&edition=2015)\r\n```\r\n#![feature(generic_associated_types)]\r\n\r\ntrait Fut {\r\n    fn do_the_thing() -> usize;\r\n}\r\n\r\ntrait WantsToReturnFuture<F> where F: Fut {\r\n    fn returns_future() -> F;\r\n}\r\n\r\ntrait HasAssociatedTypes {\r\n    type Generic<F: Fut>: WantsToReturnFuture<F>;\r\n\r\n    fn get_generic() -> Self::Generic;\r\n}\r\n\r\nfn main() {\r\n    println!(\"Hello, world!\");\r\n}\r\n```\r\n\r\ncauses this ICE:\r\n\r\n```\r\n$ RUST_BACKTRACE=1 cargo check\r\n    Checking bug_case v0.1.0 (file:///Users/pfaria/bug_case)\r\nerror: internal compiler error: librustc/ty/subst.rs:479: Type parameter `F/#1` (F/1) out of range when substituting (root type=Some(F)) substs=[Self]\r\n\r\nthread 'main' panicked at 'Box<Any>', librustc_errors/lib.rs:499:9\r\nstack backtrace:\r\n   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace\r\n   1: std::sys_common::backtrace::print\r\n   2: std::panicking::default_hook::{{closure}}\r\n   3: std::panicking::default_hook\r\n   4: rustc::util::common::panic_hook\r\n   5: std::panicking::rust_panic_with_hook\r\n   6: std::panicking::begin_panic\r\n   7: rustc_errors::Handler::span_bug\r\n   8: rustc::session::opt_span_bug_fmt::{{closure}}\r\n   9: rustc::ty::context::tls::with_opt::{{closure}}\r\n  10: rustc::ty::context::tls::with_context_opt\r\n  11: rustc::ty::context::tls::with_opt\r\n  12: rustc::session::opt_span_bug_fmt\r\n  13: rustc::session::span_bug_fmt\r\n  14: <rustc::ty::subst::SubstFolder<'a, 'gcx, 'tcx> as rustc::ty::fold::TypeFolder<'gcx, 'tcx>>::fold_ty\r\n  15: rustc::ty::fold::TypeFoldable::fold_with\r\n  16: rustc::ty::Predicate::subst_supertrait\r\n  17: <core::iter::Map<I, F> as core::iter::iterator::Iterator>::try_fold\r\n  18: rustc::traits::object_safety::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::predicates_reference_self\r\n  19: rustc::traits::object_safety::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::object_safety_violations_for_trait\r\n  20: <core::iter::FlatMap<I, U, F> as core::iter::iterator::Iterator>::next\r\n  21: <alloc::vec::Vec<T> as alloc::vec::SpecExtend<T, I>>::from_iter\r\n  22: rustc::traits::object_safety::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::object_safety_violations\r\n  23: rustc::traits::object_safety::is_object_safe_provider\r\n  24: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors<'tcx> for rustc::ty::query::queries::is_object_safe<'tcx>>::compute\r\n  25: rustc::ty::context::tls::with_context\r\n  26: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  27: rustc::ty::context::tls::with_related_context\r\n  28: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::force_query_with_job\r\n  29: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::get_query\r\n  30: rustc::traits::select::SelectionContext::assemble_candidates\r\n  31: rustc::traits::select::SelectionContext::candidate_from_obligation_no_cache\r\n  32: rustc::ty::context::tls::with_context\r\n  33: rustc::dep_graph::graph::DepGraph::with_anon_task\r\n  34: rustc::traits::select::SelectionContext::candidate_from_obligation\r\n  35: rustc::traits::select::SelectionContext::select\r\n  36: rustc::infer::InferCtxt::commit_if_ok\r\n  37: rustc::traits::project::opt_normalize_projection_type\r\n  38: rustc::traits::project::normalize_projection_type\r\n  39: <rustc::traits::project::AssociatedTypeNormalizer<'a, 'b, 'gcx, 'tcx> as rustc::ty::fold::TypeFolder<'gcx, 'tcx>>::fold_ty\r\n  40: rustc::ty::fold::TypeFoldable::fold_with\r\n  41: rustc::ty::fold::TypeFoldable::fold_with\r\n  42: rustc::ty::fold::TypeFoldable::fold_with\r\n  43: rustc::traits::project::normalize\r\n  44: rustc::traits::fully_normalize\r\n  45: rustc::ty::context::tls::with_context::{{closure}}\r\n  46: rustc::ty::context::tls::with_related_context\r\n  47: rustc::ty::context::GlobalCtxt::enter_local\r\n  48: rustc::traits::normalize_param_env_or_error\r\n  49: rustc::ty::param_env\r\n  50: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors<'tcx> for rustc::ty::query::queries::param_env<'tcx>>::compute\r\n  51: rustc::ty::context::tls::with_context\r\n  52: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  53: rustc::ty::context::tls::with_related_context\r\n  54: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::force_query_with_job\r\n  55: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::get_query\r\n  56: rustc_typeck::check::wfcheck::for_id\r\n  57: rustc_typeck::check::wfcheck::check_item_well_formed\r\n  58: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors<'tcx> for rustc::ty::query::queries::check_item_well_formed<'tcx>>::compute\r\n  59: rustc::ty::context::tls::with_context\r\n  60: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  61: rustc::ty::context::tls::with_related_context\r\n  62: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::force_query_with_job\r\n  63: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::get_query\r\n  64: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::ensure_query\r\n  65: rustc::hir::Crate::visit_all_item_likes\r\n  66: rustc::session::Session::track_errors\r\n  67: rustc::util::common::time\r\n  68: rustc_typeck::check_crate\r\n  69: rustc::ty::context::tls::enter_context\r\n  70: <std::thread::local::LocalKey<T>>::with\r\n  71: rustc::ty::context::TyCtxt::create_and_enter\r\n  72: rustc_driver::driver::compile_input\r\n  73: rustc_driver::run_compiler_with_pool\r\n  74: <scoped_tls::ScopedKey<T>>::set\r\n  75: syntax::with_globals\r\n  76: <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once\r\n  77: __rust_maybe_catch_panic\r\n  78: rustc_driver::run\r\n  79: rustc_driver::main\r\n  80: std::rt::lang_start::{{closure}}\r\n  81: std::panicking::try::do_call\r\n  82: __rust_maybe_catch_panic\r\n  83: std::rt::lang_start_internal\r\n  84: main\r\nquery stack during panic:\r\n#0 [is_object_safe] determine object safety of trait `HasAssociatedTypes`\r\n#1 [param_env] processing `HasAssociatedTypes`\r\n#2 [check_item_well_formed] processing `HasAssociatedTypes`\r\nend of query stack\r\nerror: aborting due to previous error\r\n\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.28.0-nightly (e3bf634e0 2018-06-28) running on x86_64-apple-darwin\r\n\r\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nerror: Could not compile `bug_case`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n\r\nVersion info:\r\n```\r\n$ rustc --version --verbose\r\nrustc 1.28.0-nightly (e3bf634e0 2018-06-28)\r\nbinary: rustc\r\ncommit-hash: e3bf634e060bc2f8665878288bcea02008ca346e\r\ncommit-date: 2018-06-28\r\nhost: x86_64-apple-darwin\r\nrelease: 1.28.0-nightly\r\nLLVM version: 6.0\r\n```\r\n\r\nAs a workaround I can instead implement this as:\r\n```\r\ntrait Fut {\r\n    fn do_the_thing() -> usize;\r\n}\r\n\r\ntrait WantsToReturnFuture<F> where F: Fut {\r\n    fn returns_future() -> F;\r\n}\r\n\r\ntrait HasAssociatedTypes<F: Fut> {\r\n    type Generic: WantsToReturnFuture<F>;\r\n\r\n    fn get_generic() -> Self::Generic;\r\n}\r\n\r\nfn main() {\r\n    println!(\"Hello, world!\");\r\n}\r\n```\r\n\r\nwith the downside being I need to require users of the trait to work with `PhantomData` \ud83d\ude26 .", "closed_by": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/52068/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/52068/timeline", "performed_via_github_app": null, "state_reason": "completed"}