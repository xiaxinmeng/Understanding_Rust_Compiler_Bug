{"url": "https://api.github.com/repos/rust-lang/rust/issues/100266", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/100266/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/100266/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/100266/events", "html_url": "https://github.com/rust-lang/rust/issues/100266", "id": 1331530781, "node_id": "I_kwDOAAsO6M5PXYwd", "number": 100266, "title": "Generic trait with constraint on `Any` does not compile anymore", "user": {"login": "CLOVIS-AI", "id": 25709889, "node_id": "MDQ6VXNlcjI1NzA5ODg5", "avatar_url": "https://avatars.githubusercontent.com/u/25709889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CLOVIS-AI", "html_url": "https://github.com/CLOVIS-AI", "followers_url": "https://api.github.com/users/CLOVIS-AI/followers", "following_url": "https://api.github.com/users/CLOVIS-AI/following{/other_user}", "gists_url": "https://api.github.com/users/CLOVIS-AI/gists{/gist_id}", "starred_url": "https://api.github.com/users/CLOVIS-AI/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CLOVIS-AI/subscriptions", "organizations_url": "https://api.github.com/users/CLOVIS-AI/orgs", "repos_url": "https://api.github.com/users/CLOVIS-AI/repos", "events_url": "https://api.github.com/users/CLOVIS-AI/events{/privacy}", "received_events_url": "https://api.github.com/users/CLOVIS-AI/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2022-08-08T08:39:15Z", "updated_at": "2022-09-15T11:05:05Z", "closed_at": "2022-09-15T11:04:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a regression report! \ud83d\udc1b A regression is something that changed between versions of Rust but was not supposed to.\r\n\r\nPlease provide a short summary of the regression, along with any information you feel is relevant to replicate it.\r\n-->\r\n\r\n### Code\r\n\r\nI tried this code:\r\n\r\n```rust\r\nuse std::any::Any;\r\n\r\n// Generic trait used to store multiple different kinds of objects dynamically\r\ntrait Foo<T> : Any {\r\n    fn as_any(&self) -> &dyn Any;\r\n}\r\n\r\n// Example (empty) implementation of the Foo trait\r\n// The error is not related to this structure, it is only needed to have a meaningful example in the main function\r\n#[derive(Copy, Clone, Debug)]\r\nstruct FooImpl;\r\n\r\nimpl Foo<usize> for FooImpl {\r\n    fn as_any(&self) -> &dyn Any {\r\n        self\r\n    }\r\n}\r\n\r\n// Finds all instances of type F in the array of Foo trait objects\r\nfn find<T, F : Foo<T> + Clone>(vec: &Vec<Box<dyn Foo<T>>>) -> Vec<F> {\r\n    vec.iter()\r\n        .filter_map(|foo| foo.as_ref().as_any().downcast_ref::<F>())\r\n        .cloned()\r\n        .collect()\r\n}\r\n\r\nfn main() {\r\n    let mut vec: Vec<Box<dyn Foo<usize>>> = Default::default();\r\n    vec.push(Box::new(FooImpl));\r\n\r\n    // \"find all instances of FooImpl in vec\"\r\n    let result = find::<usize, FooImpl>(&vec);\r\n    println!(\"Results: {:?}\", result);\r\n}\r\n\r\n```\r\n\r\nI expected to see this happen: code compiles\r\n\r\nInstead, this happened: code doesn't compile (see error below)\r\n\r\n### Version it worked on\r\n\r\n<!--\r\nProvide the most recent version this worked on, for example:\r\n\r\nIt most recently worked on: Rust 1.47\r\n-->\r\n\r\nIt most recently worked on toolchain `1.60-x86_64-unknown-linux-gnu`\r\n\r\n`rustup run 1.60-x86_64-unknown-linux-gnu rustc --version --verbose`:\r\n```\r\nrustc 1.60.0 (7737e0b5c 2022-04-04)\r\nbinary: rustc\r\ncommit-hash: 7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c\r\ncommit-date: 2022-04-04\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.60.0\r\nLLVM version: 14.0.0\r\n```\r\n\r\n### Version with regression\r\n\r\n<!--\r\nProvide the version you are using that has the regression.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.62.1 (e092d0b6b 2022-07-16)\r\nbinary: rustc\r\ncommit-hash: e092d0b6b43f2de967af0887873151bb1c0b18d3\r\ncommit-date: 2022-07-16\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.62.1\r\nLLVM version: 14.0.5\r\n```\r\n\r\n<!--\r\nDid the compiler crash? If so, please provide a backtrace.\r\n-->\r\n\r\n### Backtrace\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary>Compilation error on stable</summary>\r\n<p>\r\n\r\n```\r\n$ cargo build                                     \r\n   Compiling test-annotation v0.1.0 ([REDACTED]/test-annotation)\r\nerror[E0310]: the parameter type `T` may not live long enough\r\n  --> src/main.rs:18:40\r\n   |\r\n18 |         .filter_map(|foo| foo.as_ref().as_any().downcast_ref::<F>())\r\n   |                                        ^^^^^^ ...so that the type `dyn Foo<T>` will meet its required lifetime bounds...\r\n   |\r\nnote: ...that is required by this bound\r\n  --> src/main.rs:3:16\r\n   |\r\n3  | trait Foo<T> : Any {\r\n   |                ^^^\r\nhelp: consider adding an explicit lifetime bound...\r\n   |\r\n16 | fn find<T: 'static, F : Foo<T> + Clone>(vec: &Vec<Box<dyn Foo<T>>>) -> Vec<F> {\r\n   |          +++++++++\r\n\r\nFor more information about this error, try `rustc --explain E0310`.\r\nerror: could not compile `test-annotation` due to previous error\r\n\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n<!--\r\nIf you know when this regression occurred, please add a line like below, replacing `{channel}` with one of stable, beta, or nightly.\r\n\r\n@rustbot modify labels: +regression-from-stable-to-stable -regression-untriaged\r\n-->\r\n", "closed_by": {"login": "apiraino", "id": 6098822, "node_id": "MDQ6VXNlcjYwOTg4MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6098822?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apiraino", "html_url": "https://github.com/apiraino", "followers_url": "https://api.github.com/users/apiraino/followers", "following_url": "https://api.github.com/users/apiraino/following{/other_user}", "gists_url": "https://api.github.com/users/apiraino/gists{/gist_id}", "starred_url": "https://api.github.com/users/apiraino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apiraino/subscriptions", "organizations_url": "https://api.github.com/users/apiraino/orgs", "repos_url": "https://api.github.com/users/apiraino/repos", "events_url": "https://api.github.com/users/apiraino/events{/privacy}", "received_events_url": "https://api.github.com/users/apiraino/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/100266/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/100266/timeline", "performed_via_github_app": null, "state_reason": "not_planned"}