{"url": "https://api.github.com/repos/rust-lang/rust/issues/43889", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/43889/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/43889/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/43889/events", "html_url": "https://github.com/rust-lang/rust/issues/43889", "id": 250416628, "node_id": "MDU6SXNzdWUyNTA0MTY2Mjg=", "number": 43889, "title": "Unhelpful error message when missing `Send` from `impl Trait`", "user": {"login": "Eroc33", "id": 599099, "node_id": "MDQ6VXNlcjU5OTA5OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/599099?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Eroc33", "html_url": "https://github.com/Eroc33", "followers_url": "https://api.github.com/users/Eroc33/followers", "following_url": "https://api.github.com/users/Eroc33/following{/other_user}", "gists_url": "https://api.github.com/users/Eroc33/gists{/gist_id}", "starred_url": "https://api.github.com/users/Eroc33/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Eroc33/subscriptions", "organizations_url": "https://api.github.com/users/Eroc33/orgs", "repos_url": "https://api.github.com/users/Eroc33/repos", "events_url": "https://api.github.com/users/Eroc33/events{/privacy}", "received_events_url": "https://api.github.com/users/Eroc33/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-08-15T19:43:10Z", "updated_at": "2023-05-11T08:21:05Z", "closed_at": "2023-05-11T07:55:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "This code:\r\n```rust\r\n#![feature(conservative_impl_trait)]\r\nextern crate futures;\r\nuse futures::{Future,future};\r\nuse futures::sync::oneshot;\r\n\r\nfn get() -> impl Future<Item=(),Error=()>\r\n{\r\n    future::lazy(move ||{\r\n        unsafe{\r\n            let (tx,rx) = oneshot::channel();\r\n            tx.send(());\r\n            rx.map_err(move |_| ())\r\n        }\r\n    })\r\n}\r\n\r\n\r\nfn main() {\r\n    let http_fut: Box<Future<Item=(),Error=()> + Send> = get().boxed();\r\n}\r\n```\r\n\r\nGives a rather confusing (and incorrect?) error message:\r\n```\r\nerror[E0284]: type annotations required: cannot resolve `the closure `get::{{closure}}::{{closure}}` implements the trait `FnOnce``\r\n  --> src/main.rs:19:64\r\n   |\r\n19 |     let http_fut: Box<Future<Item=(),Error=()> + Send> = get().boxed();\r\n   |                                                                ^^^^^\r\n   |\r\n   = note: required because of the requirements on the impl of `futures::Future` for `futures::MapErr<futures::Receiver<()>, [closure@src/main.rs:12:24: 12:35]>`\r\n   = note: required because of the requirements on the impl of `futures::IntoFuture` for `futures::MapErr<futures::Receiver<()>, [closure@src/main.rs:12:24: 12:35]>`\r\n   = note: required because it appears within the type `futures::Lazy<[closure@src/main.rs:8:18: 14:6], futures::MapErr<futures::Receiver<()>, [closure@src/main.rs:12:24: 12:35]>>`\r\n   = note: required because it appears within the type `impl futures::Future`\r\n```\r\nBecause it's missing `+Send` on line 6.\r\n\r\nIt would be useful to  have a less confusing error message, such as \"return type of get() is not Send\", or even just \"type does not implement Send\".\r\n\r\n## Meta\r\n\r\nrustc 1.21.0-nightly (df511d554 2017-08-14)\r\nbinary: rustc\r\ncommit-hash: df511d5548ebb7f971abcd3a5283cb1d37b64596\r\ncommit-date: 2017-08-14\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.21.0-nightly\r\nLLVM version: 4.0", "closed_by": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/43889/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/43889/timeline", "performed_via_github_app": null, "state_reason": "completed"}