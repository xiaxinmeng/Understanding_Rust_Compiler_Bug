{"url": "https://api.github.com/repos/rust-lang/rust/issues/54768", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/54768/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/54768/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/54768/events", "html_url": "https://github.com/rust-lang/rust/issues/54768", "id": 366093033, "node_id": "MDU6SXNzdWUzNjYwOTMwMzM=", "number": 54768, "title": "`Sync` should imply `RefUnwindSafe` - lots of missing impls", "user": {"login": "Diggsey", "id": 451321, "node_id": "MDQ6VXNlcjQ1MTMyMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/451321?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Diggsey", "html_url": "https://github.com/Diggsey", "followers_url": "https://api.github.com/users/Diggsey/followers", "following_url": "https://api.github.com/users/Diggsey/following{/other_user}", "gists_url": "https://api.github.com/users/Diggsey/gists{/gist_id}", "starred_url": "https://api.github.com/users/Diggsey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Diggsey/subscriptions", "organizations_url": "https://api.github.com/users/Diggsey/orgs", "repos_url": "https://api.github.com/users/Diggsey/repos", "events_url": "https://api.github.com/users/Diggsey/events{/privacy}", "received_events_url": "https://api.github.com/users/Diggsey/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 20, "created_at": "2018-10-02T21:47:06Z", "updated_at": "2020-02-29T16:54:24Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`Sync` is a strictly stronger requirement on a type than `RefUnwindSafe`, because any type which can be accessed concurrently by multiple threads, can also be accessed after one of those threads panics.\r\n\r\nHowever, if you compare the list of implementations for `Sync`:\r\nhttps://doc.rust-lang.org/std/marker/trait.Sync.html#implementors\r\n\r\nAnd those for `RefUnwindSafe`:\r\nhttps://doc.rust-lang.org/std/panic/trait.RefUnwindSafe.html#implementors\r\n\r\nThere are clearly a lot missing.\r\n\r\nHere's my best guess at some missing implementations:\r\n\r\n```rust\r\nimpl RefUnwindSafe for Waker {}\r\nimpl RefUnwindSafe for std::sync::Once {}\r\nimpl RefUnwindSafe for std::sync::Condvar {}\r\nimpl<'a, T: ?Sized + Sync> RefUnwindSafe for MutexGuard<'a, T> {}\r\nimpl<'a, T: ?Sized + Sync> RefUnwindSafe for RwLockReadGuard<'a, T> {}\r\nimpl<'a, T: ?Sized + Sync> RefUnwindSafe for RwLockWriteGuard<'a, T> {}\r\nimpl<T> RefUnwindSafe for JoinHandle<T> {}\r\n```\r\n\r\nIt's likely I've missed some where `Sync` is automatically implemented because of an explicit `Sync` implementation on a private type which has impacted automatic trait implementation. (Condvar was one of these)", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/54768/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/54768/timeline", "performed_via_github_app": null, "state_reason": null}