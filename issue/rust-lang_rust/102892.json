{"url": "https://api.github.com/repos/rust-lang/rust/issues/102892", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/102892/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/102892/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/102892/events", "html_url": "https://github.com/rust-lang/rust/issues/102892", "id": 1403508242, "node_id": "I_kwDOAAsO6M5Tp9YS", "number": 102892, "title": "vicious \"add `&`\" then \"remove `&`\" cycle of suggestions", "user": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": {"login": "SparrowLii", "id": 68270294, "node_id": "MDQ6VXNlcjY4MjcwMjk0", "avatar_url": "https://avatars.githubusercontent.com/u/68270294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SparrowLii", "html_url": "https://github.com/SparrowLii", "followers_url": "https://api.github.com/users/SparrowLii/followers", "following_url": "https://api.github.com/users/SparrowLii/following{/other_user}", "gists_url": "https://api.github.com/users/SparrowLii/gists{/gist_id}", "starred_url": "https://api.github.com/users/SparrowLii/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SparrowLii/subscriptions", "organizations_url": "https://api.github.com/users/SparrowLii/orgs", "repos_url": "https://api.github.com/users/SparrowLii/repos", "events_url": "https://api.github.com/users/SparrowLii/events{/privacy}", "received_events_url": "https://api.github.com/users/SparrowLii/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "SparrowLii", "id": 68270294, "node_id": "MDQ6VXNlcjY4MjcwMjk0", "avatar_url": "https://avatars.githubusercontent.com/u/68270294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SparrowLii", "html_url": "https://github.com/SparrowLii", "followers_url": "https://api.github.com/users/SparrowLii/followers", "following_url": "https://api.github.com/users/SparrowLii/following{/other_user}", "gists_url": "https://api.github.com/users/SparrowLii/gists{/gist_id}", "starred_url": "https://api.github.com/users/SparrowLii/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SparrowLii/subscriptions", "organizations_url": "https://api.github.com/users/SparrowLii/orgs", "repos_url": "https://api.github.com/users/SparrowLii/repos", "events_url": "https://api.github.com/users/SparrowLii/events{/privacy}", "received_events_url": "https://api.github.com/users/SparrowLii/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-10-10T17:34:53Z", "updated_at": "2022-10-26T11:29:12Z", "closed_at": "2022-10-26T11:29:12Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Given the following code ([playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021&gist=27603cb69f02a777439de35be1c29ce0)): \n\n```rust\n#![allow(dead_code, unused_variables)]\n\nuse std::sync::Arc;\n\n#[derive(Debug)]\nstruct A;\n#[derive(Debug)]\nstruct B;\n\nfn process_without_annot(arc: &Arc<(A, B)>) {\n    let (a, b) = **arc; // suggests putting `&**arc` here; with that, fixed!\n}\n\nfn process_with_annot(arc: &Arc<(A, B)>) {\n    let (a, b): (A, B) = **arc; // suggests putting `&**arc` here too\n}\n```\n\nThe current output is:\n\n```\nerror[[E0507]](https://doc.rust-lang.org/nightly/error-index.html#E0507): cannot move out of an `Arc`\n  --> src/lib.rs:11:18\n   |\n11 |     let (a, b) = **arc; // suggests putting `&**arc` here; with that, fixed!\n   |          -  -    ^^^^^ help: consider borrowing here: `&**arc`\n   |          |  |\n   |          |  ...and here\n   |          data moved here\n   |\n   = note: move occurs because these variables have types that don't implement the `Copy` trait\n\nerror[[E0507]](https://doc.rust-lang.org/nightly/error-index.html#E0507): cannot move out of an `Arc`\n  --> src/lib.rs:15:26\n   |\n15 |     let (a, b): (A, B) = **arc; // suggests putting `&**arc` here too\n   |          -  -            ^^^^^ help: consider borrowing here: `&**arc`\n   |          |  |\n   |          |  ...and here\n   |          data moved here\n   |\n   = note: move occurs because these variables have types that don't implement the `Copy` trait\n```\n\nTo be clear, both of the above are *fine* suggestions.\n\nHere's the problem:\n\nWhen you make the suggested change on the second version (the one with the type annotation in the interior of the code):\n\n```rust\nfn process_with_annot_partially_fixed(arc: &Arc<(A, B)>) {\n    let (a, b): (A, B) = &**arc; // ... but suggests *removing* the `&` here!\n    //          ~~~~~~\n    // Shouldn't it suggest the alternative (correct) fix of changing the \n    // type annotation?\n}\n```\n\nThe current output is:\n\n```\nerror[[E0308]](https://doc.rust-lang.org/nightly/error-index.html#E0308): mismatched types\n  --> src/lib.rs:19:26\n   |\n19 |     let (a, b): (A, B) = &**arc; // ... but suggests *removing* the `&` here!\n   |                 ------   ^^^^^^ expected tuple, found `&(A, B)`\n   |                 |\n   |                 expected due to this\n   |\n   = note:  expected tuple `(A, B)`\n           found reference `&(A, B)`\nhelp: consider removing the borrow\n   |\n19 -     let (a, b): (A, B) = &**arc; // ... but suggests *removing* the `&` here!\n19 +     let (a, b): (A, B) = **arc; // ... but suggests *removing* the `&` here!\n   |\n```\n\nIdeally the output should look like:\n\n```\nhelp: consider removing the borrow\n   |\n19 -     let (a, b): (A, B) = &**arc; // ... but suggests *removing* the `&` here!\n19 +     let (a, b): (A, B) = **arc; // ... but suggests *removing* the `&` here!\n   |\nhelp: alternatively, consider changing the type annotation:\n   |\n19 -     let (a, b): (A, B) = **arc; // ... but suggests *removing* the `&` here!\n19 +     let (a, b): &(A, B) = **arc; // ... but suggests *removing* the `&` here!\n   |\n\n```\n\n(Really, for types where the right-hand side won't be able to be moved into the left-hand side, it would be better to not suggest adding the `&` at all. But my immediate goal is to at least include the alternative suggestion.)\n\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"SparrowLii\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/102892/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/102892/timeline", "performed_via_github_app": null, "state_reason": "completed"}