{"url": "https://api.github.com/repos/rust-lang/rust/issues/52714", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/52714/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/52714/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/52714/events", "html_url": "https://github.com/rust-lang/rust/issues/52714", "id": 344565825, "node_id": "MDU6SXNzdWUzNDQ1NjU4MjU=", "number": 52714, "title": "Allow attr batching like #[attr1, attr2, attr3] and #[cfg_attr(cond, attr1, attr2, attr3)]", "user": {"login": "Boscop", "id": 535593, "node_id": "MDQ6VXNlcjUzNTU5Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/535593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Boscop", "html_url": "https://github.com/Boscop", "followers_url": "https://api.github.com/users/Boscop/followers", "following_url": "https://api.github.com/users/Boscop/following{/other_user}", "gists_url": "https://api.github.com/users/Boscop/gists{/gist_id}", "starred_url": "https://api.github.com/users/Boscop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Boscop/subscriptions", "organizations_url": "https://api.github.com/users/Boscop/orgs", "repos_url": "https://api.github.com/users/Boscop/repos", "events_url": "https://api.github.com/users/Boscop/events{/privacy}", "received_events_url": "https://api.github.com/users/Boscop/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234948, "node_id": "MDU6TGFiZWwyMzQ5NDg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-attributes", "name": "A-attributes", "color": "f7e101", "default": false, "description": "Area: #[attributes(..)]"}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-07-25T18:55:52Z", "updated_at": "2019-01-27T19:43:12Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "It would be useful / convenient if the compiler would allow batching attrs like `#[attr1, attr2, attr3]` and especially with `cfg_attr` like `#[cfg_attr(cond, attr1, attr2, attr3)]`, it would really reduce the verbosity of using `cfg_attr` (and normal attrs, too).\r\n\r\nE.g. it would allow writing:\r\n```rust\r\n#[cfg_attr(feature = \"default\", derive(Identifiable, AsChangeset))]\r\n#[cfg_attr(feature = \"default\", table_name = \"mytable\")]\r\n```\r\nAs one line:\r\n```rust\r\n#[cfg_attr(feature = \"default\", derive(Identifiable, AsChangeset), table_name = \"mytable\")]\r\n```\r\n\r\nAlso, I often use the [getset crate](https://github.com/Hoverbear/getset) and it currently requires writing: \r\n```rust\r\n#[get = \"pub\"] \r\n#[set] \r\n#[get_mut] \r\nfield: Ty;\r\n```\r\nwhen I need these accessors for a field. With batching it would be shorter:\r\n```rust\r\n#[get = \"pub\", set, get_mut]\r\nfield: Ty;\r\n```\r\n\r\nAnd a lot of similar use cases would be less verbose with attr batching, too :)\r\n\r\n---\r\n\r\nBtw, currently `#[cfg_attr(cond, attr1, attr2)]` is not a parse error if the `cond` is false, but currently it probably should be (?)\r\n\r\nCompare:\r\nhttps://play.rust-lang.org/?gist=2de03f428468bafaab00376a75e66119&version=stable&mode=debug&edition=2015\r\nand:\r\nhttps://play.rust-lang.org/?gist=0bba1cc58221c6dadc3b48c61c9ce6b6&version=stable&mode=debug&edition=2015", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/52714/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/52714/timeline", "performed_via_github_app": null, "state_reason": null}