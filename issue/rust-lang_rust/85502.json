{"url": "https://api.github.com/repos/rust-lang/rust/issues/85502", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/85502/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/85502/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/85502/events", "html_url": "https://github.com/rust-lang/rust/issues/85502", "id": 896468752, "node_id": "MDU6SXNzdWU4OTY0Njg3NTI=", "number": 85502, "title": "ICE: unstable fingerprints for native_libraries", "user": {"login": "kostko", "id": 543739, "node_id": "MDQ6VXNlcjU0MzczOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/543739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kostko", "html_url": "https://github.com/kostko", "followers_url": "https://api.github.com/users/kostko/followers", "following_url": "https://api.github.com/users/kostko/following{/other_user}", "gists_url": "https://api.github.com/users/kostko/gists{/gist_id}", "starred_url": "https://api.github.com/users/kostko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kostko/subscriptions", "organizations_url": "https://api.github.com/users/kostko/orgs", "repos_url": "https://api.github.com/users/kostko/repos", "events_url": "https://api.github.com/users/kostko/events{/privacy}", "received_events_url": "https://api.github.com/users/kostko/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 307747675, "node_id": "MDU6TGFiZWwzMDc3NDc2NzU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-incr-comp", "name": "A-incr-comp", "color": "f7e101", "default": false, "description": "Area: Incremental compilation"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2021-05-20T08:21:07Z", "updated_at": "2021-06-02T21:33:47Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "### Code\r\n\r\nCompiling [`oasis-core`](https://github.com/oasisprotocol/oasis-core) with nightly 2021-05-06 and incremental compilation enabled. Seems to happen during compilation of `grpcio v0.8.2`.\r\n\r\n### Meta\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.54.0-nightly (676ee1472 2021-05-06)\r\nbinary: rustc\r\ncommit-hash: 676ee14729462585b969bbc52f32c307403f4126\r\ncommit-date: 2021-05-06\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.54.0-nightly\r\nLLVM version: 12.0.0\r\n```\r\n\r\n### Error output\r\n\r\n```\r\n   Compiling oasis-core-runtime v0.3.0-alpha (/workdir/runtime)\r\n   Compiling oasis-core-keymanager-api-common v0.3.0-alpha (/workdir/keymanager-api-common)\r\n   Compiling grpcio v0.8.2\r\n   Compiling oasis-core-client v0.3.0-alpha (/workdir/client)\r\n   Compiling oasis-core-keymanager-client v0.3.0-alpha (/workdir/keymanager-client)\r\nthread 'rustc' panicked at 'assertion failed: `(left == right)`\r\n  left: `Some(Fingerprint(3744085167471343643, 10066438777687008338))`,\r\n right: `Some(Fingerprint(10047237832729537343, 9265653581121216388))`: found unstable fingerprints for native_libraries(grpcio_sys[1373]): [NativeLib { kind: Static { bundle: None, whole_archive: None }, name: Some(\"absl_civil_time\"), cfg: None, foreign_module: None, wasm_import_module: None, verbatim: None }, NativeLib { kind: Static { bundle: None, whole_archive: None }, name: Some(\"absl_throw_delegate\"), cfg: None, foreign_module: None, wasm_import_module: None, verbatim: None }, NativeLib { kind: Static { bundle: None, whole_archive: None }, name: Some(\"absl_city\"), cfg: None, foreign_module: None, wasm_import_module: None, verbatim: None }, NativeLib { kind: Static { bundle: None, whole_archive: None }, name: Some(\"absl_time\"), cfg: None, foreign_module: None, wasm_import_module: None, verbatim: None }, NativeLib { kind: Static { bundle: None, whole_archive: None }, name: Some(\"absl_raw_hash_set\"), cfg: None, foreign_module: None, wasm_import_module: None, verbatim: None }, NativeLib { kind: Static { bundle: None, whole_archive: None }, name: Some(\"absl_bad_variant_access\"), cfg: None, foreign_module: None, wasm_import_module: None, verbatim: None }, NativeLib { kind: Static { bundle: None, whole_archive: None }, name: Some(\"upb\"), cfg: None, foreign_module: None, wasm_import_module: None, verbatim: None }, NativeLib { kind: Static { bundle: None, whole_archive: None }, name: Some(\"re2\"), cfg: None, foreign_module: None, wasm_import_module: None, verbatim: None }, NativeLib { kind: Static { bundle: None, whole_archive: None }, name: Some(\"absl_str_format_internal\"), cfg: None, foreign_module: None, wasm_import_module: None, verbatim: None }, NativeLib { kind: Static { bundle: None, whole_archive: None }, name: Some(\"absl_hashtablez_sampler\"), cfg: None, foreign_module: None, wasm_import_module: None, verbatim: None }, NativeLib { kind: Static { bundle: None, whole_archive: None }, name: Some(\"absl_log_severity\"), cfg: None, foreign_module: None, wasm_import_module: None, verbatim: None }, NativeLib { kind: Static { bundle: None, whole_archive: None }, name: Some(\"absl_hash\"), cfg: None, foreign_module: None, wasm_import_module: None, verbatim: None }, NativeLib { kind: Static { bundle: None, whole_archive: None }, name: Some(\"absl_graphcycles_internal\"), cfg: None, foreign_module: None, wasm_import_module: None, verbatim: None }, NativeLib { kind: Static { bundle: None, whole_archive: None }, name: Some(\"absl_synchronization\"), cfg: None, foreign_module: None, wasm_import_module: None, verbatim: None }, NativeLib { kind: Static { bundle: None, whole_archive: None }, name: Some(\"absl_bad_optional_access\"), cfg: None, foreign_module: None, wasm_import_module: None, verbatim: None }, NativeLib { kind: Static { bundle: None, whole_archive: None }, name: Some(\"address_sorting\"), cfg: None, foreign_module: None, wasm_import_module: None, verbatim: None }, NativeLib { kind: Static { bundle: None, whole_archive: None }, name: Some(\"absl_int128\"), cfg: None, foreign_module: None, wasm_import_module: None, verbatim: None }, NativeLib { kind: Static { bundle: None, whole_archive: None }, name: Some(\"z\"), cfg: None, foreign_module: None, wasm_import_module: None, verbatim: None }, NativeLib { kind: Static { bundle: None, whole_archive: None }, name: Some(\"absl_strings\"), cfg: None, foreign_module: None, wasm_import_module: None, verbatim: None }, NativeLib { kind: Static { bundle: None, whole_archive: None }, name: Some(\"absl_statusor\"), cfg: None, foreign_module: None, wasm_import_module: None, verbatim: None }, NativeLib { kind: Static { bundle: None, whole_archive: None }, name: Some(\"absl_symbolize\"), cfg: None, foreign_module: None, wasm_import_module: None, verbatim: None }, NativeLib { kind: Static { bundle: None, whole_archive: None }, name: Some(\"gpr\"), cfg: None, foreign_module: None, wasm_import_module: None, verbatim: None }, NativeLib { kind: Static { bundle: None, whole_archive: None }, name: Some(\"absl_stacktrace\"), cfg: None, foreign_module: None, wasm_import_module: None, verbatim: None }, NativeLib { kind: Static { bundle: None, whole_archive: None }, name: Some(\"absl_debugging_internal\"), cfg: None, foreign_module: None, wasm_import_module: None, verbatim: None }, NativeLib { kind: Static { bundle: None, whole_archive: None }, name: Some(\"grpc\"), cfg: None, foreign_module: None, wasm_import_module: None, verbatim: None }, NativeLib { kind: Static { bundle: None, whole_archive: None }, name: Some(\"absl_exponential_biased\"), cfg: None, foreign_module: None, wasm_import_module: None, verbatim: None }, NativeLib { kind: Static { bundle: None, whole_archive: None }, name: Some(\"absl_raw_logging_internal\"), cfg: None, foreign_module: None, wasm_import_module: None, verbatim: None }, NativeLib { kind: Static { bundle: None, whole_archive: None }, name: Some(\"absl_status\"), cfg: None, foreign_module: None, wasm_import_module: None, verbatim: None }, NativeLib { kind: Static { bundle: None, whole_archive: None }, name: Some(\"cares\"), cfg: None, foreign_module: None, wasm_import_module: None, verbatim: None }, NativeLib { kind: Static { bundle: None, whole_archive: None }, name: Some(\"absl_demangle_internal\"), cfg: None, foreign_module: None, wasm_import_module: None, verbatim: None }, NativeLib { kind: Static { bundle: None, whole_archive: None }, name: Some(\"absl_base\"), cfg: None, foreign_module: None, wasm_import_module: None, verbatim: None }, NativeLib { kind: Static { bundle: None, whole_archive: None }, name: Some(\"absl_malloc_internal\"), cfg: None, foreign_module: None, wasm_import_module: None, verbatim: None }, NativeLib { kind: Static { bundle: None, whole_archive: None }, name: Some(\"absl_time_zone\"), cfg: None, foreign_module: None, wasm_import_module: None, verbatim: None }, NativeLib { kind: Static { bundle: None, whole_archive: None }, name: Some(\"absl_cord\"), cfg: None, foreign_module: None, wasm_import_module: None, verbatim: None }, NativeLib { kind: Static { bundle: None, whole_archive: None }, name: Some(\"absl_strings_internal\"), cfg: None, foreign_module: None, wasm_import_module: None, verbatim: None }, NativeLib { kind: Static { bundle: None, whole_archive: None }, name: Some(\"absl_spinlock_wait\"), cfg: None, foreign_module: None, wasm_import_module: None, verbatim: None }, NativeLib { kind: Static { bundle: None, whole_archive: None }, name: Some(\"ssl\"), cfg: None, foreign_module: None, wasm_import_module: None, verbatim: None }, NativeLib { kind: Static { bundle: None, whole_archive: None }, name: Some(\"crypto\"), cfg: None, foreign_module: None, wasm_import_module: None, verbatim: None }, NativeLib { kind: Static { bundle: None, whole_archive: None }, name: Some(\"grpc_wrap\"), cfg: None, foreign_module: None, wasm_import_module: None, verbatim: None }, NativeLib { kind: Unspecified, name: Some(\"stdc++\"), cfg: None, foreign_module: None, wasm_import_module: None, verbatim: None }]', /rustc/676ee14729462585b969bbc52f32c307403f4126/compiler/rustc_query_system/src/query/plumbing.rs:585:5\r\nstack backtrace:\r\n   <snip>\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n \r\nerror: internal compiler error: unexpected panic\r\n \r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n \r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n \r\nnote: rustc 1.54.0-nightly (676ee1472 2021-05-06) running on x86_64-unknown-linux-gnu\r\n \r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental -C target-feature=+aes,+ssse3 --crate-type lib\r\n \r\nnote: some of the compiler flags provided by cargo are hidden\r\n \r\nquery stack during panic:\r\n#0 [native_libraries] looking up the native libraries of a linked crate\r\nend of query stack\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\n   0: rust_begin_unwind\r\n             at /rustc/676ee14729462585b969bbc52f32c307403f4126/library/std/src/panicking.rs:493:5\r\n   1: core::panicking::panic_fmt\r\n             at /rustc/676ee14729462585b969bbc52f32c307403f4126/library/core/src/panicking.rs:92:14\r\n   2: core::panicking::assert_failed_inner\r\n   3: core::panicking::assert_failed\r\n   4: rustc_query_system::query::plumbing::incremental_verify_ich\r\n   5: rustc_query_system::query::plumbing::load_from_disk_and_cache_in_memory\r\n   6: rustc_query_system::query::plumbing::get_query_impl\r\n   7: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::native_libraries\r\n   8: rustc_codegen_ssa::base::<impl rustc_codegen_ssa::CrateInfo>::new\r\n   9: rustc_codegen_ssa::back::write::start_async_codegen\r\n  10: rustc_codegen_ssa::base::codegen_crate\r\n  11: <rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::CodegenBackend>::codegen_crate\r\n  12: rustc_interface::passes::QueryContext::enter\r\n  13: rustc_interface::queries::Queries::ongoing_codegen\r\n  14: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n  15: rustc_span::with_source_map\r\n  16: rustc_interface::interface::create_compiler_and_run\r\n  17: scoped_tls::ScopedKey<T>::set\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/85502/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/85502/timeline", "performed_via_github_app": null, "state_reason": null}