{"url": "https://api.github.com/repos/rust-lang/rust/issues/111365", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/111365/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/111365/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/111365/events", "html_url": "https://github.com/rust-lang/rust/issues/111365", "id": 1700750825, "node_id": "I_kwDOAAsO6M5lX2Xp", "number": 111365, "title": "Diagnostics: Nested higher-ranked lifetimes are incorrectly printed", "user": {"login": "fmease", "id": 14913065, "node_id": "MDQ6VXNlcjE0OTEzMDY1", "avatar_url": "https://avatars.githubusercontent.com/u/14913065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmease", "html_url": "https://github.com/fmease", "followers_url": "https://api.github.com/users/fmease/followers", "following_url": "https://api.github.com/users/fmease/following{/other_user}", "gists_url": "https://api.github.com/users/fmease/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmease/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmease/subscriptions", "organizations_url": "https://api.github.com/users/fmease/orgs", "repos_url": "https://api.github.com/users/fmease/repos", "events_url": "https://api.github.com/users/fmease/events{/privacy}", "received_events_url": "https://api.github.com/users/fmease/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1624891239, "node_id": "MDU6TGFiZWwxNjI0ODkxMjM5", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-incorrect", "name": "D-incorrect", "color": "c9f7a3", "default": false, "description": "A diagnostic that is giving misleading or incorrect information"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2023-05-08T18:52:26Z", "updated_at": "2023-06-10T13:30:19Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "For\r\n\r\n```rs\r\ntype One = fn(HelperOne);\r\ntype HelperOne = for<'a> fn(&'a (), &'a ());\r\n\r\ntype Two = for<'o> fn(HelperTwo<'o>);\r\ntype HelperTwo<'x> = for<'a> fn(&'a (), &'x ());\r\n\r\nfn accept(x: One) -> Two { x }\r\n```\r\n\r\nthe output is\r\n\r\n```\r\nerror[E0308]: mismatched types\r\n --> src/lib.rs:7:28\r\n  |\r\n7 | fn accept(x: One) -> Two { x }\r\n  |                      ---   ^ one type is more general than the other\r\n  |                      |\r\n  |                      expected `for<'o> fn(for<'a> fn(&'a (), &'o ()))` because of return type\r\n  |\r\n  = note: expected fn pointer `for<'o> fn(for<'o, 'a> fn(&'a (), &'o ()))`\r\n             found fn pointer `fn(for<'a> fn(&'a (), &'a ()))`\r\n```\r\n\r\nHere the type `for<'o> fn(for<'o, 'a> fn(&'a (), &'o ()))` shown after \u201c*expected fn pointer*\u201d contains\r\n`for<'o, 'a>` which doesn't make sense. The binder contains the lifetime bound in the outer binder.\r\nThe inner binder should just be `for<'a>` just like in the type shown in the label.\r\nNote that this doesn't happen when `-Zverbose` is passed [^1].\r\n\r\nFurther, if we change the definition of `Two` to be `type Two = for<'a> fn(HelperTwo<'a>); ` (`'o` => `'a`),\r\nthen the pretty-printer does not try to avoid **shadowing** through **renaming** of one of the lifetimes or\r\nthrough other means. Output:\r\n\r\n```\r\nerror[E0308]: mismatched types\r\n --> src/lib.rs:7:28\r\n  |\r\n7 | fn accept(x: One) -> Two { x }\r\n  |                      ---   ^ one type is more general than the other\r\n  |                      |\r\n  |                      expected `for<'a> fn(for<'a> fn(&'a (), &'a ()))` because of return type\r\n  |\r\n  = note: expected fn pointer `for<'a> fn(for<'a, 'a> fn(&'a (), &'a ()))`\r\n             found fn pointer `fn(for<'a> fn(&'a (), &'a ()))`\r\n```\r\n\r\nIdeally it should look something like\r\n\r\n```diff\r\n  error[E0308]: mismatched types\r\n   --> src/lib.rs:7:28\r\n    |\r\n  7 | fn accept(x: One) -> Two { x }\r\n    |                      ---   ^ one type is more general than the other\r\n    |                      |\r\n-   |                      expected `for<'a> fn(for<'a> fn(&'a (), &'a ()))` because of return type\r\n+   |                      expected `for<'r> fn(for<'a> fn(&'a (), &'r ()))` because of return type\r\n    |\r\n-   = note: expected fn pointer `for<'a> fn(for<'a, 'a> fn(&'a (), &'a ()))`\r\n+   = note: expected fn pointer `for<'r> fn(for<'a> fn(&'a (), &'r ()))`\r\n               found fn pointer `fn(for<'a> fn(&'a (), &'a ()))`\r\n\r\n```\r\n\r\n[Here is a playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021&gist=1b9d721bd39c8594d211b4e38fc160c6) for a smaller reproducer of the last issue. In this case, the compiler could either\r\nperform renaming or it could omit the inner binder entirely since the lifetime it binds is not referenced\r\nin the inner type.\r\n\r\nI've looked through all relevant <kbd>A-diagnostics</kbd> <kbd>A-lifetimes</kbd> issues and through some others and couldn't find anything that matches 100% what I was looking for (out of those maybe kinda #29061, #56423, #73457, #92281 but not really).\r\n\r\n@rustbot label T-compiler A-diagnostics A-lifetimes D-incorrect\r\n\r\n[^1]: It's `for<Region(BrNamed(DefId(0:7 ~ repro[8603]::Two::'o), 'o))> fn(for<Region(BrNamed(DefId(0:10 ~ repro[8603]::HelperTwo::'a), 'a))> fn(..., ...))`.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/111365/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/111365/timeline", "performed_via_github_app": null, "state_reason": null}