{"url": "https://api.github.com/repos/rust-lang/rust/issues/46968", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/46968/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/46968/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/46968/events", "html_url": "https://github.com/rust-lang/rust/issues/46968", "id": 284308490, "node_id": "MDU6SXNzdWUyODQzMDg0OTA=", "number": 46968, "title": "link_section is not applied to global constants", "user": {"login": "mjbshaw", "id": 1204698, "node_id": "MDQ6VXNlcjEyMDQ2OTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1204698?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mjbshaw", "html_url": "https://github.com/mjbshaw", "followers_url": "https://api.github.com/users/mjbshaw/followers", "following_url": "https://api.github.com/users/mjbshaw/following{/other_user}", "gists_url": "https://api.github.com/users/mjbshaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/mjbshaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mjbshaw/subscriptions", "organizations_url": "https://api.github.com/users/mjbshaw/orgs", "repos_url": "https://api.github.com/users/mjbshaw/repos", "events_url": "https://api.github.com/users/mjbshaw/events{/privacy}", "received_events_url": "https://api.github.com/users/mjbshaw/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235137, "node_id": "MDU6TGFiZWwyMzUxMzc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lint", "name": "A-lint", "color": "f7e101", "default": false, "description": "Area: Lints (warnings about flaws in source code) such as unused_mut."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-12-23T14:14:05Z", "updated_at": "2018-04-10T15:14:15Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The `link_section` attribute doesn't get applied to global `const` values.\r\n\r\nConsider the following program (which uses `static` instead of `const`, and correctly applies the `link_section` to `HELLO`):\r\n```\r\n#[link_section = \".data,__yes_this_is_a_custom_link_section\"]\r\nstatic HELLO: [u8; 6] = *b\"hello\\0\";\r\n\r\nextern {\r\n  fn puts(_str: *const u8) -> i32;\r\n}\r\n\r\nfn main() {\r\n  unsafe { puts(&HELLO as *const u8) };\r\n}\r\n```\r\n\r\nAs can be seen in the LLVM IR ([Playground link](https://play.rust-lang.org/?gist=0398978e1c26ae2a4fb09c949a710773&version=nightly)), `HELLO` is correctly given the custom section assignment:\r\n```\r\n@_ZN10playground5HELLO17h62136d8dd807037cE = internal constant [6 x i8] c\"hello\\00\", section \".data,__yes_this_is_a_custom_link_section\", align 1\r\n\r\n; playground::main\r\n; Function Attrs: nounwind uwtable\r\ndefine internal void @_ZN10playground4main17h4b9f3b1aa6035d1eE() unnamed_addr #0 {\r\nstart:\r\n  %0 = tail call i32 @puts(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @_ZN10playground5HELLO17h62136d8dd807037cE, i64 0, i64 0))\r\n  ret void\r\n}\r\n```\r\n\r\nBut if we change `HELLO` to be a `const` instead of `static`:\r\n```\r\n#[link_section = \".data,__yes_this_is_a_custom_link_section\"]\r\nconst HELLO: [u8; 6] = *b\"hello\\0\";\r\n\r\nextern {\r\n  fn puts(_str: *const u8) -> i32;\r\n}\r\n\r\nfn main() {\r\n  unsafe { puts(&HELLO as *const u8) };\r\n}\r\n```\r\n\r\nThen the string no longer has the custom section applied ([Playground link](https://play.rust-lang.org/?gist=b6988e9d8aca98318b898d7f134a00af&version=nightly)):\r\n```\r\n@byte_str.0 = private unnamed_addr constant [6 x i8] c\"hello\\00\", align 8\r\n\r\n; playground::main\r\n; Function Attrs: nounwind uwtable\r\ndefine internal void @_ZN10playground4main17h4b9f3b1aa6035d1eE() unnamed_addr #0 {\r\nstart:\r\n  %0 = tail call i32 @puts(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @byte_str.0, i64 0, i64 0))\r\n  ret void\r\n}\r\n```\r\n\r\nI think that Rust should propagate the link section to all instances of the string. That is, `@byte_str.0` (and any other duplicate instances of the `const`) should be defined as `@byte_str.0 = private unnamed_addr constant [6 x i8] c\"hello\\00\", section \".data,__yes_this_is_a_custom_link_section\", align 8`.\r\n\r\n----\r\n\r\nMeta info: I've tested this in both 1.22.1 and 1.24.0-nightly (2017-12-22 5165ee9e209e0e70d89946ccbb7e90b9c0c3a7ac). Both produce the same results.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/46968/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/46968/timeline", "performed_via_github_app": null, "state_reason": null}