{"url": "https://api.github.com/repos/rust-lang/rust/issues/68542", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/68542/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/68542/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/68542/events", "html_url": "https://github.com/rust-lang/rust/issues/68542", "id": 555120768, "node_id": "MDU6SXNzdWU1NTUxMjA3Njg=", "number": 68542, "title": "Closure in array length ICE's", "user": {"login": "DutchGhost", "id": 25501014, "node_id": "MDQ6VXNlcjI1NTAxMDE0", "avatar_url": "https://avatars.githubusercontent.com/u/25501014?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DutchGhost", "html_url": "https://github.com/DutchGhost", "followers_url": "https://api.github.com/users/DutchGhost/followers", "following_url": "https://api.github.com/users/DutchGhost/following{/other_user}", "gists_url": "https://api.github.com/users/DutchGhost/gists{/gist_id}", "starred_url": "https://api.github.com/users/DutchGhost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DutchGhost/subscriptions", "organizations_url": "https://api.github.com/users/DutchGhost/orgs", "repos_url": "https://api.github.com/users/DutchGhost/repos", "events_url": "https://api.github.com/users/DutchGhost/events{/privacy}", "received_events_url": "https://api.github.com/users/DutchGhost/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 262252840, "node_id": "MDU6TGFiZWwyNjIyNTI4NDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-stable", "name": "regression-from-stable-to-stable", "color": "e4008a", "default": false, "description": "Performance or correctness regression from one stable version to another."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-01-25T18:43:03Z", "updated_at": "2020-01-29T12:04:34Z", "closed_at": "2020-01-28T05:31:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The following ICE's in beta and nightly:\r\n\r\n```Rust\r\nstruct Bug {\r\n    a: [(); (|| { 0 })()]\r\n}\r\n```\r\n\r\n<details>\r\n<summary>Backtrace:</summary>\r\n\r\n```\r\n\r\nCompiling playground v0.0.1 (/playground)\r\nerror[E0015]: calls in constants are limited to constant functions, tuple structs and tuple variants\r\n --> src/lib.rs:2:13\r\n  |\r\n2 |     a: [(); (|| { 0 })()]\r\n  |             ^^^^^^^^^^^^\r\n\r\nerror: internal compiler error: src/librustc_typeck/collect.rs:1969: to get the signature of a closure, use `closure_sig()` not `fn_sig()`\r\n\r\nthread 'rustc' panicked at 'Box<Any>', src/librustc_errors/lib.rs:882:9\r\nstack backtrace:\r\n   0: backtrace::backtrace::libunwind::trace\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.40/src/backtrace/libunwind.rs:88\r\n   1: backtrace::backtrace::trace_unsynchronized\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.40/src/backtrace/mod.rs:66\r\n   2: std::sys_common::backtrace::_print_fmt\r\n             at src/libstd/sys_common/backtrace.rs:77\r\n   3: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt\r\n             at src/libstd/sys_common/backtrace.rs:59\r\n   4: core::fmt::write\r\n             at src/libcore/fmt/mod.rs:1052\r\n   5: std::io::Write::write_fmt\r\n             at src/libstd/io/mod.rs:1426\r\n   6: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:62\r\n   7: std::sys_common::backtrace::print\r\n             at src/libstd/sys_common/backtrace.rs:49\r\n   8: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/panicking.rs:204\r\n   9: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:224\r\n  10: rustc_driver::report_ice\r\n  11: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:476\r\n  12: std::panicking::begin_panic\r\n  13: rustc_errors::HandlerInner::bug\r\n  14: rustc_errors::Handler::bug\r\n  15: rustc::util::bug::opt_span_bug_fmt::{{closure}}\r\n  16: rustc::ty::context::tls::with_opt::{{closure}}\r\n  17: rustc::ty::context::tls::with_opt\r\n  18: rustc::util::bug::opt_span_bug_fmt\r\n  19: rustc::util::bug::bug_fmt\r\n  20: rustc_typeck::collect::fn_sig\r\n  21: rustc::ty::query::__query_compute::fn_sig\r\n  22: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  23: rustc_mir::const_eval::fn_queries::provide::is_const_fn_raw\r\n  24: rustc::ty::query::__query_compute::is_const_fn_raw\r\n  25: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  26: <rustc_mir::const_eval::machine::CompileTimeInterpreter as rustc_mir::interpret::machine::Machine>::find_mir_or_eval_fn\r\n  27: rustc_mir::interpret::terminator::<impl rustc_mir::interpret::eval_context::InterpCx<M>>::eval_fn_call\r\n  28: rustc_mir::interpret::step::<impl rustc_mir::interpret::eval_context::InterpCx<M>>::step\r\n  29: rustc_mir::const_eval::eval_queries::const_eval_raw_provider\r\n  30: rustc::ty::query::__query_compute::const_eval_raw\r\n  31: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  32: rustc_mir::const_eval::eval_queries::const_eval_validated_provider\r\n  33: rustc::ty::query::__query_compute::const_eval_validated\r\n  34: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  35: rustc_mir::const_eval::eval_queries::const_eval_validated_provider\r\n  36: rustc::ty::query::__query_compute::const_eval_validated\r\n  37: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::const_eval_validated>::compute\r\n  38: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  39: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  40: rustc::mir::interpret::queries::<impl rustc::ty::context::TyCtxt>::const_eval_instance\r\n  41: rustc::mir::interpret::queries::<impl rustc::ty::context::TyCtxt>::const_eval_resolve\r\n  42: <rustc::traits::project::AssocTypeNormalizer as rustc::ty::fold::TypeFolder>::fold_const\r\n  43: rustc::ty::structural_impls::<impl rustc::ty::fold::TypeFoldable for &rustc::ty::TyS>::super_fold_with\r\n  44: <rustc::traits::project::AssocTypeNormalizer as rustc::ty::fold::TypeFolder>::fold_ty\r\n  45: rustc::traits::project::normalize\r\n  46: rustc_typeck::check::FnCtxt::normalize_associated_types_in\r\n  47: <core::iter::adapters::Map<I,F> as core::iter::traits::iterator::Iterator>::fold\r\n  48: rustc::ty::context::GlobalCtxt::enter_local\r\n  49: rustc_typeck::check::wfcheck::check_item_well_formed\r\n  50: rustc::ty::query::__query_compute::check_item_well_formed\r\n  51: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::check_item_well_formed>::compute\r\n  52: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  53: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  54: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::ensure_query\r\n  55: __rust_maybe_catch_panic\r\n             at src/libpanic_unwind/lib.rs:86\r\n  56: <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once\r\n  57: __rust_maybe_catch_panic\r\n             at src/libpanic_unwind/lib.rs:86\r\n  58: rustc_hir::hir::Crate::par_visit_all_item_likes\r\n  59: rustc_typeck::check_crate\r\n  60: rustc_interface::passes::analysis\r\n  61: rustc::ty::query::__query_compute::analysis\r\n  62: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  63: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  64: rustc::ty::context::tls::enter_global\r\n  65: rustc_interface::interface::run_compiler_in_existing_thread_pool\r\n  66: scoped_tls::ScopedKey<T>::set\r\n  67: syntax::with_globals\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.42.0-nightly (c2d141df5 2020-01-24) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C opt-level=3 -C codegen-units=1 --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [fn_sig] processing `Bug::a::{{constant}}#0::{{closure}}#0`\r\n#1 [is_const_fn_raw] checking if item is const fn: `Bug::a::{{constant}}#0::{{closure}}#0`\r\n#2 [const_eval_raw] const-evaluating `Bug::a::{{constant}}#0`\r\n#3 [const_eval_validated] const-evaluating + checking `Bug::a::{{constant}}#0`\r\n#4 [const_eval_validated] const-evaluating + checking `Bug::a::{{constant}}#0`\r\n#5 [check_item_well_formed] processing `Bug`\r\n#6 [analysis] running analysis passes on this crate\r\nend of query stack\r\nerror: aborting due to 2 previous errors\r\n\r\nFor more information about this error, try `rustc --explain E0015`.\r\nerror: could not compile `playground`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n</details>", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/68542/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/68542/timeline", "performed_via_github_app": null, "state_reason": "completed"}