{"url": "https://api.github.com/repos/rust-lang/rust/issues/72426", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/72426/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/72426/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/72426/events", "html_url": "https://github.com/rust-lang/rust/issues/72426", "id": 622557800, "node_id": "MDU6SXNzdWU2MjI1NTc4MDA=", "number": 72426, "title": "Compiler Error: 'rustc' panicked at 'Box<Any>' (w/ async closures)", "user": {"login": "gcoakes", "id": 2153080, "node_id": "MDQ6VXNlcjIxNTMwODA=", "avatar_url": "https://avatars.githubusercontent.com/u/2153080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gcoakes", "html_url": "https://github.com/gcoakes", "followers_url": "https://api.github.com/users/gcoakes/followers", "following_url": "https://api.github.com/users/gcoakes/following{/other_user}", "gists_url": "https://api.github.com/users/gcoakes/gists{/gist_id}", "starred_url": "https://api.github.com/users/gcoakes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gcoakes/subscriptions", "organizations_url": "https://api.github.com/users/gcoakes/orgs", "repos_url": "https://api.github.com/users/gcoakes/repos", "events_url": "https://api.github.com/users/gcoakes/events{/privacy}", "received_events_url": "https://api.github.com/users/gcoakes/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 122406831, "node_id": "MDU6TGFiZWwxMjI0MDY4MzE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-closures", "name": "A-closures", "color": "f7e101", "default": false, "description": "Area: closures (`|args| { .. }`)"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1049510487, "node_id": "MDU6TGFiZWwxMDQ5NTEwNDg3", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-async-await", "name": "A-async-await", "color": "f7e101", "default": false, "description": "Area: Async & Await"}, {"id": 1359848690, "node_id": "MDU6TGFiZWwxMzU5ODQ4Njkw", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-mcve", "name": "E-needs-mcve", "color": "02e10c", "default": false, "description": "Call for participation: This issue needs a Minimal Complete and Verifiable Example"}, {"id": 1472524280, "node_id": "MDU6TGFiZWwxNDcyNTI0Mjgw", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-async_closures", "name": "F-async_closures", "color": "f9c0cc", "default": false, "description": "`#![feature(async_closures)]`"}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-21T14:55:11Z", "updated_at": "2020-05-26T01:43:39Z", "closed_at": "2020-05-26T01:43:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\nI'm trying to write an implementation of `async_std::stream::Stream` which takes an async closure and calls/awaits upon it continually. Everything appears to type check, but fails during compilation. It's probably worth metioning that implementing the same code with an async fn instead of an async closure fails type check.\r\n\r\nI'm fairly certain my reasoning about pinning and the like is incorrect in this code, but I would expect it to output a type error instead of a panic during compilation.\r\n\r\n### Code\r\n\r\n```Rust\r\n#![feature(async_closure)]\r\n\r\nuse std::{\r\n    pin::Pin,\r\n    task::{Context, Poll},\r\n    future::Future,\r\n};\r\n\r\nuse async_std::prelude::*;\r\n\r\n#[async_std::main]\r\nasync fn main() -> Result<(), Box<dyn std::error::Error>> {\r\n    let s = from_afn(async || Some(\"foo\".to_string()));\r\n    // let s = from_afn(foo);\r\n    while let Some(x) = s.next().await {\r\n        println!(\"{:?}\", x);\r\n    }\r\n    Ok(())\r\n}\r\n\r\nasync fn foo() -> String {\r\n    \"foo\".to_string()\r\n}\r\n\r\nfn from_afn<F, Fut, Item>(f: F) -> FromAFn<F, Fut>\r\nwhere\r\n    F: FnMut() -> Fut,\r\n    Fut: Future<Output = Item> + Unpin,\r\n{\r\n    FromAFn::new(f)\r\n}\r\n\r\nstruct FromAFn<F, Fut> {\r\n    f: F,\r\n    fut: Pin<Box<Fut>>,\r\n}\r\n\r\nimpl<F, Fut, Item> FromAFn<F, Fut>\r\nwhere\r\n    F: FnMut() -> Fut,\r\n    Fut: Future<Output = Item> + Unpin,\r\n{\r\n    fn new(f: F) -> Self {\r\n        Self {f, fut: Box::pin((f)())}\r\n    }\r\n}\r\n\r\nimpl<F, Fut, Item> Stream for FromAFn<F, Fut>\r\nwhere\r\n    F: FnMut() -> Fut,\r\n    Fut: Future<Output = Item> + Unpin,\r\n{\r\n    type Item = Item;\r\n\r\n    fn poll_next(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Option<Self::Item>> {\r\n        match self.fut.as_mut().poll(cx) {\r\n            Poll::Ready(v) => {\r\n                self.fut = Box::pin((self.f)());\r\n                Poll::Ready(Some(v))\r\n            },\r\n            Poll::Pending => Poll::Pending,\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.45.0-nightly (0aa6751c1 2020-05-20)\r\nbinary: rustc\r\ncommit-hash: 0aa6751c19d3ba80df5b0b02c00bf44e13c97e80\r\ncommit-date: 2020-05-20\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.45.0-nightly\r\nLLVM version: 9.0\r\n```\r\n\r\n### Error output\r\n\r\n```\r\n   Compiling statusbar v0.1.0 (/home/gcoakes/src/statusbar)\r\nerror: internal compiler error: src/librustc_middle/ich/impls_ty.rs:170: ty::TyKind::hash_stable() - can't hash a TyVid _#30t.\r\n\r\nthread 'rustc' panicked at 'Box<Any>', src/librustc_errors/lib.rs:907:9\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.45.0-nightly (0aa6751c1 2020-05-20) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nerror: aborting due to previous error\r\n\r\nerror: could not compile `statusbar`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\n   Compiling statusbar v0.1.0 (/home/gcoakes/src/statusbar)\r\nerror: internal compiler error: src/librustc_middle/ich/impls_ty.rs:170: ty::TyKind::hash_stable() - can't hash a TyVid _#30t.\r\n\r\nthread 'rustc' panicked at 'Box<Any>', src/librustc_errors/lib.rs:907:9\r\nstack backtrace:\r\n   0: backtrace::backtrace::libunwind::trace\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/libunwind.rs:86\r\n   1: backtrace::backtrace::trace_unsynchronized\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/mod.rs:66\r\n   2: std::sys_common::backtrace::_print_fmt\r\n             at src/libstd/sys_common/backtrace.rs:78\r\n   3: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt\r\n             at src/libstd/sys_common/backtrace.rs:59\r\n   4: core::fmt::write\r\n             at src/libcore/fmt/mod.rs:1069\r\n   5: std::io::Write::write_fmt\r\n             at src/libstd/io/mod.rs:1537\r\n   6: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:62\r\n   7: std::sys_common::backtrace::print\r\n             at src/libstd/sys_common/backtrace.rs:49\r\n   8: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/panicking.rs:198\r\n   9: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:218\r\n  10: rustc_driver::report_ice\r\n  11: <alloc::boxed::Box<F> as core::ops::function::Fn<A>>::call\r\n             at /rustc/0aa6751c19d3ba80df5b0b02c00bf44e13c97e80/src/liballoc/boxed.rs:1071\r\n  12: proc_macro::bridge::client::<impl proc_macro::bridge::Bridge>::enter::{{closure}}::{{closure}}\r\n             at /rustc/0aa6751c19d3ba80df5b0b02c00bf44e13c97e80/src/libproc_macro/bridge/client.rs:318\r\n  13: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:490\r\n  14: std::panicking::begin_panic\r\n  15: rustc_errors::HandlerInner::bug\r\n  16: rustc_errors::Handler::bug\r\n  17: rustc_middle::util::bug::opt_span_bug_fmt::{{closure}}\r\n  18: rustc_middle::ty::context::tls::with_opt::{{closure}}\r\n  19: rustc_middle::ty::context::tls::with_opt\r\n  20: rustc_middle::util::bug::opt_span_bug_fmt\r\n  21: rustc_middle::util::bug::bug_fmt\r\n  22: rustc_middle::ich::impls_ty::<impl rustc_data_structures::stable_hasher::HashStable<rustc_middle::ich::hcx::StableHashingContext> for rustc_middle::ty::sty::TyVid>::hash_stable\r\n  23: rustc_middle::ty::sty::_DERIVE_rustc_data_structures_stable_hasher_HashStable_rustc_middle_ich_StableHashingContext_ctx_FOR_InferTy::<impl rustc_data_structures::stable_hasher::HashStable<rustc_middle::ich::hcx::StableHashingContext> for rustc_middle::ty::sty::InferTy>::hash_stable\r\n  24: rustc_middle::ty::sty::_DERIVE_rustc_data_structures_stable_hasher_HashStable_rustc_middle_ich_StableHashingContext_ctx_FOR_TyKind::<impl rustc_data_structures::stable_hasher::HashStable<rustc_middle::ich::hcx::StableHashingContext> for rustc_middle::ty::sty::TyKind>::hash_stable\r\n  25: rustc_middle::ich::impls_ty::<impl rustc_data_structures::stable_hasher::HashStable<rustc_middle::ich::hcx::StableHashingContext> for &rustc_middle::ty::list::List<T>>::hash_stable\r\n  26: rustc_middle::ty::sty::_DERIVE_rustc_data_structures_stable_hasher_HashStable_rustc_middle_ich_StableHashingContext_ctx_FOR_TyKind::<impl rustc_data_structures::stable_hasher::HashStable<rustc_middle::ich::hcx::StableHashingContext> for rustc_middle::ty::sty::TyKind>::hash_stable\r\n  27: rustc_middle::ich::impls_ty::<impl rustc_data_structures::stable_hasher::HashStable<rustc_middle::ich::hcx::StableHashingContext> for &rustc_middle::ty::list::List<T>>::hash_stable\r\n  28: rustc_middle::ty::sty::_DERIVE_rustc_data_structures_stable_hasher_HashStable_rustc_middle_ich_StableHashingContext_ctx_FOR_TyKind::<impl rustc_data_structures::stable_hasher::HashStable<rustc_middle::ich::hcx::StableHashingContext> for rustc_middle::ty::sty::TyKind>::hash_stable\r\n  29: <T as rustc_query_system::dep_graph::dep_node::DepNodeParams<Ctxt>>::to_fingerprint\r\n  30: rustc_query_system::query::plumbing::get_query_impl\r\n  31: <rustc_infer::infer::InferCtxt as rustc_trait_selection::traits::error_reporting::suggestions::InferCtxtExt>::suggest_await_before_try\r\n  32: <rustc_infer::infer::InferCtxt as rustc_trait_selection::traits::error_reporting::InferCtxtExt>::report_selection_error\r\n  33: <rustc_infer::infer::InferCtxt as rustc_trait_selection::traits::error_reporting::InferCtxtExt>::report_fulfillment_errors\r\n  34: rustc_typeck::check::FnCtxt::resolve_vars_with_obligations\r\n  35: rustc_typeck::check::demand::<impl rustc_typeck::check::FnCtxt>::demand_coerce_diag\r\n  36: rustc_typeck::check::FnCtxt::check_argument_types\r\n  37: rustc_typeck::check::callee::<impl rustc_typeck::check::FnCtxt>::confirm_builtin_call\r\n  38: rustc_typeck::check::callee::<impl rustc_typeck::check::FnCtxt>::check_call\r\n  39: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_expr_kind\r\n  40: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_expr_with_expectation_and_needs\r\n  41: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_expr_coercable_to_type\r\n  42: rustc_typeck::check::FnCtxt::check_decl_local\r\n  43: rustc_typeck::check::FnCtxt::check_stmt\r\n  44: rustc_typeck::check::FnCtxt::check_block_with_expected\r\n  45: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_expr_kind\r\n  46: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_expr_with_expectation_and_needs\r\n  47: rustc_typeck::check::FnCtxt::check_block_with_expected\r\n  48: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_expr_kind\r\n  49: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_expr_with_expectation_and_needs\r\n  50: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_expr_kind\r\n  51: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_expr_with_expectation_and_needs\r\n  52: rustc_typeck::check::FnCtxt::check_block_with_expected\r\n  53: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_expr_kind\r\n  54: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_expr_with_expectation_and_needs\r\n  55: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_return_expr\r\n  56: rustc_typeck::check::check_fn\r\n  57: rustc_typeck::check::closure::<impl rustc_typeck::check::FnCtxt>::check_expr_closure\r\n  58: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_expr_kind\r\n  59: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_expr_with_expectation_and_needs\r\n  60: rustc_typeck::check::FnCtxt::check_argument_types\r\n  61: rustc_typeck::check::callee::<impl rustc_typeck::check::FnCtxt>::confirm_builtin_call\r\n  62: rustc_typeck::check::callee::<impl rustc_typeck::check::FnCtxt>::check_call\r\n  63: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_expr_kind\r\n  64: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_expr_with_expectation_and_needs\r\n  65: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_return_expr\r\n  66: rustc_typeck::check::check_fn\r\n  67: rustc_middle::ty::context::GlobalCtxt::enter_local\r\n  68: rustc_typeck::check::typeck_tables_of\r\n  69: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::typeck_tables_of>::compute\r\n  70: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  71: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  72: rustc_data_structures::stack::ensure_sufficient_stack\r\n  73: rustc_query_system::query::plumbing::get_query_impl\r\n  74: rustc_mir_build::hair::cx::Cx::new\r\n  75: rustc_middle::ty::context::GlobalCtxt::enter_local\r\n  76: rustc_mir_build::build::mir_built\r\n  77: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::mir_built>::compute\r\n  78: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  79: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  80: rustc_query_system::query::plumbing::get_query_impl::{{closure}}\r\n  81: rustc_query_system::query::plumbing::get_query_impl\r\n  82: rustc_mir::transform::check_unsafety::unsafety_check_result\r\n  83: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::unsafety_check_result>::compute\r\n  84: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  85: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  86: rustc_query_system::query::plumbing::get_query_impl::{{closure}}\r\n  87: rustc_query_system::query::plumbing::get_query_impl\r\n  88: rustc_mir::transform::mir_const\r\n  89: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::mir_const>::compute\r\n  90: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  91: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  92: rustc_query_system::query::plumbing::get_query_impl::{{closure}}\r\n  93: rustc_query_system::query::plumbing::get_query_impl\r\n  94: rustc_mir::transform::mir_validated\r\n  95: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::mir_validated>::compute\r\n  96: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  97: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  98: rustc_query_system::query::plumbing::get_query_impl::{{closure}}\r\n  99: rustc_query_system::query::plumbing::get_query_impl\r\n 100: rustc_mir::borrow_check::mir_borrowck\r\n 101: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::mir_borrowck>::compute\r\n 102: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n 103: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n 104: rustc_query_system::query::plumbing::get_query_impl\r\n 105: rustc_typeck::collect::type_of::type_of\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.45.0-nightly (0aa6751c1 2020-05-20) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [typeck_tables_of] type-checking `main::main`\r\n#1 [mir_built] building MIR for\r\n#2 [unsafety_check_result] unsafety-checking `main::main`\r\n#3 [mir_const] processing `main::main`\r\n#4 [mir_validated] processing `main::main`\r\n#5 [mir_borrowck] borrow-checking `main::main`\r\n#6 [type_of] processing `main::main::{{opaque}}#0`\r\n#7 [check_mod_item_types] checking item types in top-level module\r\n#8 [analysis] running analysis passes on this crate\r\nend of query stack\r\nerror: aborting due to previous error\r\n\r\nerror: could not compile `statusbar`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/72426/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/72426/timeline", "performed_via_github_app": null, "state_reason": "completed"}