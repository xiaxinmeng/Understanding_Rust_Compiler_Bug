{"url": "https://api.github.com/repos/rust-lang/rust/issues/86299", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/86299/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/86299/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/86299/events", "html_url": "https://github.com/rust-lang/rust/issues/86299", "id": 920591141, "node_id": "MDU6SXNzdWU5MjA1OTExNDE=", "number": 86299, "title": "Better documentation of our MIR dialects", "user": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 256133398, "node_id": "MDU6TGFiZWwyNTYxMzMzOTg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-mir", "name": "A-mir", "color": "f7e101", "default": false, "description": "Area: Mid-level IR (MIR) - https://blog.rust-lang.org/2016/04/19/MIR.html"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2021-06-14T16:43:33Z", "updated_at": "2022-09-02T10:00:10Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "We like to pretend that MIR is a single language, but that is not actually true. There are at least two different languages represented by MIR; I will call them MIR \"dialects\" in the following:\r\n* Pre-drop-elaboration MIR: this dialect *implicitly* keeps a drop flag for each local variable. `Move` operands and calling `Drop` sets that flag. The `Drop` and `DropAndReplace` terminators honor that flag and do not call `drop_in_place` when the drop flag indicates this variable has already been moved/dropped.\r\n* Post-drop-elaboration MIR: this dialect has no implicit drop flags, and each `Drop` terminator indicates an unconditional call to `drop_in_place`. (`DropAndReplace` terminators AFAIK cannot exist any more in this dialect.)\r\n\r\nThe problem with multiple dialects is that they can have different rules for interpreters, code generators, and optimizations, so we need to be careful not to use the wrong optimization with the wrong dialect.\r\n\r\nMiri can only interpret the latter dialect. All our optimizations run post-drop-elaboration, so I assume they are all correct only for that second dialect (though some might also be correct for the first one).\r\n\r\nI'd like to propose that we treat these dialects more explicitly: a `mir::Body` should indicate which dialect it is written in, such that optimizations, codegen, and Miri can ensure they are working with MIR of the right dialect. This becomes more pressing since https://github.com/rust-lang/rust/pull/86155 is suggesting to add yet another dialect.\r\n\r\nCc @oli-obk -- there is some overlap here with the \"phase\" in the MIR validator, but I don't think this is entirely the same concept. Different dialects correspond to different phases, but we might have phases within a dialect where certain instructions are being lowered without changing the operational semantics of the language.\r\n\r\nCc @bjorn3 @rust-lang/wg-mir-opt ", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/86299/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/86299/timeline", "performed_via_github_app": null, "state_reason": null}