{"url": "https://api.github.com/repos/rust-lang/rust/issues/13926", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/13926/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/13926/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/13926/events", "html_url": "https://github.com/rust-lang/rust/issues/13926", "id": 32759066, "node_id": "MDU6SXNzdWUzMjc1OTA2Ng==", "number": 13926, "title": "Passing enum by-value loses range metadata", "user": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 60329014, "node_id": "MDU6TGFiZWw2MDMyOTAxNA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-low", "name": "P-low", "color": "eb6420", "default": false, "description": "Low priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1049491442, "node_id": "MDU6TGFiZWwxMDQ5NDkxNDQy", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-heavy", "name": "I-heavy", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to binary size of generated code."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2014-05-04T01:27:38Z", "updated_at": "2022-08-02T20:07:32Z", "closed_at": "2022-08-02T20:07:32Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Test case update for Rust 1.0:\r\n```rust\r\npub enum Foo {\r\n    A, B, C, D\r\n}\r\n\r\nstatic X: [isize; 4] = [10, 1, 4, 3];\r\n\r\npub fn foo(y: Foo) -> isize {\r\n    X[y as usize]\r\n}\r\n```\r\n\r\nOriginal report below:\r\n\r\n---\r\n\r\n``` rust\r\npub enum Foo {\r\n    A, B, C, D\r\n}\r\n\r\nstatic X: [int, .. 4] = [10, 1, 4, 3];\r\npub fn foo(y: Foo) -> int {\r\n    X[y as uint]\r\n}\r\n```\r\n\r\nbecomes\r\n\r\n``` llvm\r\n; Function Attrs: uwtable\r\ndefine i64 @_ZN3foo20h19859df9e3d3b0bcsaa4v0.0E(i8) unnamed_addr #0 {\r\nentry-block:\r\n  %1 = zext i8 %0 to i64\r\n  %2 = icmp ugt i8 %0, 3\r\n  br i1 %2, label %cond, label %next, !prof !0\r\n\r\nnext:                                             ; preds = %entry-block\r\n  %3 = getelementptr inbounds [4 x i64]* @_ZN1X20h61a81bb0de98e867iaa4v0.0E, i64 0, i64 %1\r\n  %4 = load i64* %3, align 8\r\n  ret i64 %4\r\n\r\ncond:                                             ; preds = %entry-block\r\n  tail call void @_ZN2rt6unwind17fail_bounds_check20h0f41a1608cc59c5e1199v0.11.preE(i8* getelementptr inbounds ([14 x i8]* @str879, i64 0, i64 0), i64 7, i64 %1, i64 4)\r\n  unreachable\r\n}\r\n```\r\n\r\neven though it's impossible for a `Foo` to be larger than 3, so the bounds checking can never fail. (Doing a similar thing with e.g. `[int, .. 256]` and a value of type `u8` _does_ eliminate the bounds checks.)\r\n\r\n(I guess this is an LLVM bug, but filing it here just in case we're emiting range info incorrectly, or some-such.)\r\n", "closed_by": {"login": "workingjubilee", "id": 46493976, "node_id": "MDQ6VXNlcjQ2NDkzOTc2", "avatar_url": "https://avatars.githubusercontent.com/u/46493976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/workingjubilee", "html_url": "https://github.com/workingjubilee", "followers_url": "https://api.github.com/users/workingjubilee/followers", "following_url": "https://api.github.com/users/workingjubilee/following{/other_user}", "gists_url": "https://api.github.com/users/workingjubilee/gists{/gist_id}", "starred_url": "https://api.github.com/users/workingjubilee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/workingjubilee/subscriptions", "organizations_url": "https://api.github.com/users/workingjubilee/orgs", "repos_url": "https://api.github.com/users/workingjubilee/repos", "events_url": "https://api.github.com/users/workingjubilee/events{/privacy}", "received_events_url": "https://api.github.com/users/workingjubilee/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/13926/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/13926/timeline", "performed_via_github_app": null, "state_reason": "completed"}