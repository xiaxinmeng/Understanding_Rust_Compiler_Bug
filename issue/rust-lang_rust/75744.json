{"url": "https://api.github.com/repos/rust-lang/rust/issues/75744", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/75744/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/75744/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/75744/events", "html_url": "https://github.com/rust-lang/rust/issues/75744", "id": 682773330, "node_id": "MDU6SXNzdWU2ODI3NzMzMzA=", "number": 75744, "title": "Tracking issue for `ControlFlow` enum, for use with `try_fold` and in `Try`", "user": {"login": "NoraCodes", "id": 3290365, "node_id": "MDQ6VXNlcjMyOTAzNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/3290365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NoraCodes", "html_url": "https://github.com/NoraCodes", "followers_url": "https://api.github.com/users/NoraCodes/followers", "following_url": "https://api.github.com/users/NoraCodes/following{/other_user}", "gists_url": "https://api.github.com/users/NoraCodes/gists{/gist_id}", "starred_url": "https://api.github.com/users/NoraCodes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NoraCodes/subscriptions", "organizations_url": "https://api.github.com/users/NoraCodes/orgs", "repos_url": "https://api.github.com/users/NoraCodes/repos", "events_url": "https://api.github.com/users/NoraCodes/events{/privacy}", "received_events_url": "https://api.github.com/users/NoraCodes/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 650846969, "node_id": "MDU6TGFiZWw2NTA4NDY5Njk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-tracking-issue", "name": "C-tracking-issue", "color": "f5f1fd", "default": false, "description": "Category: A tracking issue for an RFC or an unstable feature."}, {"id": 889209675, "node_id": "MDU6TGFiZWw4ODkyMDk2NzU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-iterators", "name": "A-iterators", "color": "f7e101", "default": false, "description": "Area: Iterators"}, {"id": 2240305001, "node_id": "MDU6TGFiZWwyMjQwMzA1MDAx", "url": "https://api.github.com/repos/rust-lang/rust/labels/Libs-Tracked", "name": "Libs-Tracked", "color": "d4c5f9", "default": false, "description": "Libs issues that are tracked on the team's project board."}, {"id": 2366929133, "node_id": "MDU6TGFiZWwyMzY2OTI5MTMz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-control-flow", "name": "A-control-flow", "color": "f7e101", "default": false, "description": "Area: Relating to control flow"}], "state": "open", "locked": false, "assignee": {"login": "NoraCodes", "id": 3290365, "node_id": "MDQ6VXNlcjMyOTAzNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/3290365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NoraCodes", "html_url": "https://github.com/NoraCodes", "followers_url": "https://api.github.com/users/NoraCodes/followers", "following_url": "https://api.github.com/users/NoraCodes/following{/other_user}", "gists_url": "https://api.github.com/users/NoraCodes/gists{/gist_id}", "starred_url": "https://api.github.com/users/NoraCodes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NoraCodes/subscriptions", "organizations_url": "https://api.github.com/users/NoraCodes/orgs", "repos_url": "https://api.github.com/users/NoraCodes/repos", "events_url": "https://api.github.com/users/NoraCodes/events{/privacy}", "received_events_url": "https://api.github.com/users/NoraCodes/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "NoraCodes", "id": 3290365, "node_id": "MDQ6VXNlcjMyOTAzNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/3290365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NoraCodes", "html_url": "https://github.com/NoraCodes", "followers_url": "https://api.github.com/users/NoraCodes/followers", "following_url": "https://api.github.com/users/NoraCodes/following{/other_user}", "gists_url": "https://api.github.com/users/NoraCodes/gists{/gist_id}", "starred_url": "https://api.github.com/users/NoraCodes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NoraCodes/subscriptions", "organizations_url": "https://api.github.com/users/NoraCodes/orgs", "repos_url": "https://api.github.com/users/NoraCodes/repos", "events_url": "https://api.github.com/users/NoraCodes/events{/privacy}", "received_events_url": "https://api.github.com/users/NoraCodes/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 30, "created_at": "2020-08-20T14:42:20Z", "updated_at": "2023-04-12T22:29:06Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "(edited to turn this into a tracking issue, as it's referenced by the `unstable` attributes)\r\n\r\n<!--\r\nThank you for creating a tracking issue! \ud83d\udcdc Tracking issues are for tracking a\r\nfeature from implementation to stabilisation. Make sure to include the relevant\r\nRFC for the feature if it has one. Otherwise provide a short summary of the\r\nfeature and link any relevant PRs or issues, and remove any sections that are\r\nnot relevant to the feature.\r\n\r\nRemember to add team labels to the tracking issue.\r\nFor a language team feature, this would e.g., be `T-lang`.\r\nSuch a feature should also be labeled with e.g., `F-my_feature`.\r\nThis label is used to associate issues (e.g., bugs and design questions) to the feature.\r\n-->\r\n\r\nThis is a tracking issue for the `std::ops::ControlFlow` type.\r\nThe feature gate for the issue is `#![feature(control_flow_enum)]`.\r\n\r\n### About tracking issues\r\n\r\nTracking issues are used to record the overall progress of implementation.\r\nThey are also uses as hubs connecting to other relevant issues, e.g., bugs or open design questions.\r\nA tracking issue is however *not* meant for large scale discussion, questions, or bug reports about a feature.\r\nInstead, open a dedicated issue for the specific matter and add the relevant feature gate label.\r\n\r\n### Steps\r\n<!--\r\nInclude each step required to complete the feature. Typically this is a PR\r\nimplementing a feature, followed by a PR that stabilises the feature. However\r\nfor larger features an implementation could be broken up into multiple PRs.\r\n-->\r\n\r\n- [x] Implement\r\n- [x] Block interconversion with `Result`s\r\n   - Done with https://github.com/rust-lang/rust/pull/84767\r\n- [ ] Adjust documentation ([see instructions on rustc-dev-guide][doc-guide])\r\n- [ ] Stabilization PR ([see instructions on rustc-dev-guide][stabilization-guide])\r\n   - As part of stabilizing, mention in the docs for `Iterator::try_fold` and `Iterator::try_for_each`\r\n\r\n[stabilization-guide]: https://rustc-dev-guide.rust-lang.org/stabilization_guide.html#stabilization-pr\r\n[doc-guide]: https://rustc-dev-guide.rust-lang.org/stabilization_guide.html#documentation-prs\r\n\r\n### Unresolved Questions\r\n<!--\r\nInclude any open questions that need to be answered before the feature can be\r\nstabilised.\r\n-->\r\n\r\n- [x] ~~Should we change the generic parameter order? https://github.com/rust-lang/rust/pull/76204/files#r481357223~~ done in https://github.com/rust-lang/rust/pull/76614\r\n- [ ] What methods make sense\r\n  - [x] ~~(probably not the `into_try` ones, https://github.com/rust-lang/rust/pull/76204/files#r481515347)~~ Removed those ones in #85645\r\n- [ ] Are the `CONTINUE`/`BREAK` constants valuable? See #102697 \r\n- [ ] Should it have `B = ()` too?  (Might be nice for `try_for_each` uses.)\r\n\r\n### Implementation history\r\n\r\n<!--\r\nInclude a list of all the PRs that were involved in implementing the feature.\r\n-->\r\n\r\nInitial PR that added `LoopState` as an implementation detail: https://github.com/rust-lang/rust/pull/45595\r\nPR that exposed as unstable and renamed to `ControlFlow`: https://github.com/rust-lang/rust/pull/76204\r\nAdded `BREAK`/`CONTINUE` associated constants: https://github.com/rust-lang/rust/pull/76318\r\nChanged type parameter order and defaulted `C = ()`: https://github.com/rust-lang/rust/pull/76614\r\nAdd `is_break` and `is_continue` methods: #78200\r\n\r\n---\r\n\r\nI work with an organization that has a large amount of Rust graph traversal code as part of its core business. We used to use `itertools`'s `fold_while` for short-circuiting functional-style loops over slices of our graphs, which is now deprecated in favor of `try_fold`.\r\n\r\n`try_fold` is great, but the lack of a standard library provided `Try` implementation that makes the loop semantics clear is confusing. We created our own, which is fine, but I think it would make a lot of sense to expose [`LoopState`](https://github.com/rust-lang/rust/blob/515c9fa505e18a65d7f61bc3e9eb833b79a68618/library/core/src/iter/mod.rs#L373) and provide an example in the docs.\r\n\r\nOriginally related to: rust-itertools/itertools#469\r\n\r\n<!-- TRIAGEBOT_START -->\r\n\r\n<!-- TRIAGEBOT_ASSIGN_START -->\r\n\r\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"NoraCodes\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\r\n\r\n<!-- TRIAGEBOT_ASSIGN_END -->\r\n<!-- TRIAGEBOT_END -->", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/75744/reactions", "total_count": 15, "+1": 15, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/75744/timeline", "performed_via_github_app": null, "state_reason": null}