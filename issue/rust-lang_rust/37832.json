{"url": "https://api.github.com/repos/rust-lang/rust/issues/37832", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/37832/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/37832/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/37832/events", "html_url": "https://github.com/rust-lang/rust/issues/37832", "id": 190107382, "node_id": "MDU6SXNzdWUxOTAxMDczODI=", "number": 37832, "title": "Using associated types on concrete types as parameters for trait impls causes incorrect type resolution", "user": {"login": "dylanede", "id": 10339269, "node_id": "MDQ6VXNlcjEwMzM5MjY5", "avatar_url": "https://avatars.githubusercontent.com/u/10339269?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dylanede", "html_url": "https://github.com/dylanede", "followers_url": "https://api.github.com/users/dylanede/followers", "following_url": "https://api.github.com/users/dylanede/following{/other_user}", "gists_url": "https://api.github.com/users/dylanede/gists{/gist_id}", "starred_url": "https://api.github.com/users/dylanede/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dylanede/subscriptions", "organizations_url": "https://api.github.com/users/dylanede/orgs", "repos_url": "https://api.github.com/users/dylanede/repos", "events_url": "https://api.github.com/users/dylanede/events{/privacy}", "received_events_url": "https://api.github.com/users/dylanede/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37544, "node_id": "MDU6TGFiZWwzNzU0NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-typesystem", "name": "A-typesystem", "color": "f7e101", "default": false, "description": "Area: The type system"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-11-17T17:12:04Z", "updated_at": "2023-04-05T17:35:07Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This small example:\r\n\r\n```rust\r\nuse ::std::borrow::ToOwned;\r\n\r\nstruct Foo;\r\n\r\nimpl From<<bool as ToOwned>::Owned> for Foo {\r\n    fn from(v: <bool as ToOwned>::Owned) -> Foo {\r\n        unimplemented!()\r\n    }\r\n}\r\n```\r\n\r\ncauses the error E0119: \"conflicting implementations of trait `std::convert::From<Foo>` for type `Foo`\", though I have not written an implementation of `From<Foo>` anywhere. `<bool as ToOwned>::Owned` should be synonymous with `bool`, but in this case it doesn't appear to be, as replacing the first use of the associated type with `bool` stops the error.\r\n\r\nI have observed this on stable, beta, and the latest nightly.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/37832/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/37832/timeline", "performed_via_github_app": null, "state_reason": null}