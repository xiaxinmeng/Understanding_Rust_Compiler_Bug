{"url": "https://api.github.com/repos/rust-lang/rust/issues/77448", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/77448/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/77448/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/77448/events", "html_url": "https://github.com/rust-lang/rust/issues/77448", "id": 713556534, "node_id": "MDU6SXNzdWU3MTM1NTY1MzQ=", "number": 77448, "title": "Warn when awaiting with other futures in scope", "user": {"login": "bugaevc", "id": 10091584, "node_id": "MDQ6VXNlcjEwMDkxNTg0", "avatar_url": "https://avatars.githubusercontent.com/u/10091584?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bugaevc", "html_url": "https://github.com/bugaevc", "followers_url": "https://api.github.com/users/bugaevc/followers", "following_url": "https://api.github.com/users/bugaevc/following{/other_user}", "gists_url": "https://api.github.com/users/bugaevc/gists{/gist_id}", "starred_url": "https://api.github.com/users/bugaevc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bugaevc/subscriptions", "organizations_url": "https://api.github.com/users/bugaevc/orgs", "repos_url": "https://api.github.com/users/bugaevc/repos", "events_url": "https://api.github.com/users/bugaevc/events{/privacy}", "received_events_url": "https://api.github.com/users/bugaevc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-10-02T11:38:44Z", "updated_at": "2020-10-02T14:36:57Z", "closed_at": "2020-10-02T14:36:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "In programming languages where futures are callback-based and can make progress by themselves without anyone actively awaiting them, the following pattern is common for starting several actions concurrently, and waiting then for them all to complete:\r\n\r\n```python\r\nfuture1 = do_something_async1()\r\nfuture2 = do_something_async2()\r\n\r\nres1 = await future1\r\nres2 = await future2\r\n```\r\n\r\nHowever if you write code like that in Rust, the actions will be executed sequentially, since Rust futures require you to actively poll them to drive them to completion, and you won't be polling `future2` while you're `.await`ing `future1`.\r\n\r\nCurrently, the compiler does not warn on the following code:\r\n\r\n```rust\r\nlet future1 = async { };\r\nlet future2 = async { };\r\n\r\nfuture1.await;\r\nfuture2.await;\r\n```\r\n([playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=19f4d9c7d18e477e325dff12df52b344))\r\n\r\nIt would be nice if the compiler could catch situations like these and suggest to use `futures::join()` instead.\r\n\r\nAs a first approximation, the heuristic could be: warn if `.await` is used when a variable whose type is a `Future` is in scope (and is not the value being awaited) \u2014 meaning that other future won't make progress while we're awaiting this one. So in the example above, `future1.await` is performed while `future2` is in scope.\r\n\r\nThis heuristic would not catch (false negative) the following pattern:\r\n\r\n```rust\r\nlet futures: Vec<SomeFuture> = iter.map(make_future).collect();\r\nfor future in futures {\r\n    future.await;\r\n}\r\n```\r\n\r\nwhich, in other languages, is also a common pattern to preform and await a dynamic number of actions concurrently. In Rust, you have to use something like `futures::join_all()` or `FuturesUnordered`.\r\n\r\nFalse positives (where you don't actually have to poll your future for it to make progress):\r\n* Join handles of spawned tasks\r\n* Channel receivers\r\n* Timers\r\n\r\nPerhaps there could be an attribute to mark these types.\r\n\r\nRelated: https://github.com/rust-lang/wg-async-foundations/pull/16; but that RFC is about specially marking some types that should not be held across `.await`, whereas this issue is about applying that to (almost) all futures.", "closed_by": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/77448/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/77448/timeline", "performed_via_github_app": null, "state_reason": "completed"}