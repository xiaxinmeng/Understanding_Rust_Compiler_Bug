{"url": "https://api.github.com/repos/rust-lang/rust/issues/7081", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/7081/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/7081/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/7081/events", "html_url": "https://github.com/rust-lang/rust/issues/7081", "id": 15446823, "node_id": "MDU6SXNzdWUxNTQ0NjgyMw==", "number": 7081, "title": "Refactor visit.rs with a `Visitor` trait", "user": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 18, "created_at": "2013-06-12T11:52:38Z", "updated_at": "2014-06-16T21:56:31Z", "closed_at": "2013-09-25T16:21:39Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Currently `libsyntax/visit.rs` provides a record that holds a collection of `@fn`'s, using a mix of lambda-lifting and an explicit virtual method table to define traversals over the AST.\n\n``` rust\npub struct Visitor<E> {\n    visit_mod: @fn(&_mod, span, node_id, E, vt<E>),\n    visit_view_item: @fn(@view_item, E, vt<E>),\n    ...\n}\n```\n\nwhere\n\n``` rust\npub enum vt<E> { mk_vt(visitor<E>), }\n```\n\nSo then a use of the visitor looks like this (taken from `freevars.rs`):\n\n``` rust\n    let v = visit::mk_vt(@visit::Visitor {visit_item: ignore_item,\n                                          visit_expr: walk_expr,\n                                          .. *visit::default_visitor()});\n    (v.visit_block)(blk, 1, v);\n```\n\nwhere `ignore_item` and `walk_expr` are defined accordingly.\n\nThe above is awkward.  A more natural way to encode this would be via a `Visitor` trait that defined the visit methods; then instances of the trait would correspond to the accumulated state denoted above by `E` in the struct definition and `1` in the freevars example.\n\n(I originally had written a `@Visitor` object, but there is no need to commit to using objects in the Visitor interface.)\n", "closed_by": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/7081/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/7081/timeline", "performed_via_github_app": null, "state_reason": "completed"}