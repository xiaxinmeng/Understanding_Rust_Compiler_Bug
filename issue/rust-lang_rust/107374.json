{"url": "https://api.github.com/repos/rust-lang/rust/issues/107374", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/107374/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/107374/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/107374/events", "html_url": "https://github.com/rust-lang/rust/issues/107374", "id": 1560026811, "node_id": "I_kwDOAAsO6M5c_B67", "number": 107374, "title": "Tracking Issue for `-Ztrait-solver=next`", "user": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 650846969, "node_id": "MDU6TGFiZWw2NTA4NDY5Njk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-tracking-issue", "name": "C-tracking-issue", "color": "f5f1fd", "default": false, "description": "Category: A tracking issue for an RFC or an unstable feature."}, {"id": 4172483496, "node_id": "LA_kwDOAAsO6M74swuo", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-types", "name": "T-types", "color": "bfd4f2", "default": false, "description": "Relevant to the types team, which will review and decide on the PR/issue."}, {"id": 4806740265, "node_id": "LA_kwDOAAsO6M8AAAABHoEJKQ", "url": "https://api.github.com/repos/rust-lang/rust/labels/WG-trait-system-refactor", "name": "WG-trait-system-refactor", "color": "c2e0c6", "default": false, "description": "The Rustc Trait System Refactor Initiative"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2023-01-27T16:14:28Z", "updated_at": "2023-05-31T15:18:00Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This is a tracking issue for the next generation trait solver in rustc. It can be enabled on nightly by using the `-Ztrait-solver=next` flag. This work is lead by the @rust-lang/initiative-trait-system-refactor.\r\n\r\n### About tracking issues\r\n\r\nTracking issues are used to record the overall progress of implementation. They are also used as hubs connecting to other relevant issues, e.g., bugs or open design questions. A tracking issue is however *not* meant for large scale discussion, questions, or bug reports about a feature. Instead, open a dedicated issue for the specific matter and add the relevant feature gate label.\r\n\r\n### Links\r\n\r\nOriginal Types Team MCP: https://github.com/rust-lang/types-team/issues/58\r\nTypes Team Tracking Issue: https://github.com/rust-lang/types-team/issues/76\r\nTypes Team announcement and Roadmap: https://blog.rust-lang.org/2023/01/20/types-announcement.html\r\n\r\n### Roadmap\r\n\r\n```mermaid\r\ngraph TB\r\n    A[\"finished outline/skeleton \u2705\"]\r\n    X[\"fully document design + requirements \ud83d\udee0\ufe0f\"]\r\n    B[\"solver ready for testing with Rust programs\ud83d\udee0\ufe0f\"]\r\n    C[\"all candidates and predicates implemented \ud83d\udee0\ufe0f\"]\r\n    U[\"initial implementation finished \ud83d\udee0\ufe0f\"]\r\n    D[initial crater run]\r\n    E[complete triage of issues]\r\n    F[all critical issues resolved]  \r\n    G[sufficiently optimized solver]\r\n    H[solver partially used as default]\r\n    K[\"research how solver is used \u2705\"]\r\n    I[\"no reliance on internal solver state \ud83d\udee0\ufe0f\"]\r\n    J[fully replace old solver]\r\n    \r\n    A --> B\r\n    B --> C\r\n    C --> U\r\n    U --> D\r\n    U --> E\r\n    U --> G\r\n    D --> F\r\n    E --> F\r\n    F --> H\r\n    G --> H\r\n    H --> J\r\n    I --> J\r\n    K --> I\r\n```\r\n\r\n### Work Items\r\n\r\nThis list does not include all items already finished at the time of opening this issue. Feel free to checkout [the list of already merged PRs](https://github.com/rust-lang/rust/pulls?q=is%3Apr+is%3Aclosed+label%3AWG-trait-system-refactor+-label%3Arollup+) though.\r\n\r\nWe also track any decisions we've made - and decisions we still have to make - in https://github.com/rust-lang/trait-system-refactor-initiative/issues.\r\n\r\n#### solver ready for testing with Rust programs\r\n\r\n- [x] add unstable compiler flag to enable new trait solver\r\n  - [x] replace fulfill (#106385)\r\n  - [x] `infcx.evaluate_obligation` query (#107103)\r\n  - [x] to replace `evaluate` in old selection code (#107279)\r\n    - [x] deal with coherence in new solver (#109447 #109705)\r\n  - [ ] use new solver for normalization\r\n\r\n#### all candidates and predicates implemented\r\n\r\n- [x] implement all trait and project candidates\r\n- [x] add shallow normalization for opaque types (#111473)\r\n- [ ] implement all predicates\r\n  - [x] `compute_trait_goal` \r\n  - [x] `compute_projection_goal`\r\n  - [x] `compute_type_outlives_goal` (#107981)\r\n  - [x] `compute_region_outlives_goal` (#107981)\r\n  - [x] `compute_coerce_goal` (#107102)\r\n  - [x] `compute_subtype_goal` (#107102)\r\n  - [x] `compute_closure_kind_goal` (#107102)\r\n  - [x] `compute_object_safe_goal` (#107272)\r\n  - [x] `compute_well_formed_goal` (#107272)\r\n  - [ ] `compute_const_evaluatable_goal`\r\n  - [ ] `compute_const_equate_goal` (responsibility of @rust-lang/project-const-generics)\r\n\r\n#### initial implementation finished\r\n\r\n- [x] deferred projection equality (#107507)\r\n- [x] implement new canonicalization routine, deal with region constraints (#107981)\r\n  - [x] add the leak check to the new solver (#111881)\r\n  - [ ] #109764\r\n- [x] check for overflow in `evaluate_canonical_goal` in coinduction fixpoint loop (#107739)\r\n- [x] implement opaque types in the new solver (#111473)\r\n\r\n#### initial crater run\r\n\r\n- [ ] run crater once the solver is ready\r\n\r\n#### complete triage of issues\r\n\r\n- [ ] categorize all remaining failing tests with the new solver\r\n\r\n#### all critical issues resolved\r\n\r\n- [ ] all remaining breakage is considered acceptable\r\n\r\n#### sufficiently optimized solver\r\n\r\n- [x] implement global cache (#108071)\r\n- [ ] run perf\r\n- [ ] optimize the solver :)\r\n\r\n#### solver partially used as default\r\n\r\n- [ ] partially use the new solver in favor of the old one, e.g. in mir typeck\r\n\r\n#### no reliance on internal solver state\r\n\r\n- [ ] #104819 (needs design work, will get easier once the solver is working for large programs)\r\n- [ ] [`obligations_for_self_ty`](https://github.com/rust-lang/rust/blob/6874f4e3fc2a16be7c78e702d068bbc1daa90e16/compiler/rustc_hir_typeck/src/fn_ctxt/_impl.rs#L583) looks at nested obligations\r\n  - [ ] #104490 (needs design work, still unclear how to best handle this\r\n  - [ ] `create_coercion_graph` may rely on nested `Subtype` obligations\r\n  - [ ] `deduce_closure_signature` relies on nested obligations (in progress, [zulip](https://rust-lang.zulipchat.com/#narrow/stream/364551-t-types.2Ftrait-system-refactor/topic/.60deduce_closure_signature.60))\r\n  - [ ] `deduce_future_output_from_obligations` can rely on nested obligations (solution should be similar to the issues above)\r\n\r\n#### fully replace old solver\r\n\r\n- [ ] DONE :tada: ", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/107374/reactions", "total_count": 14, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 12, "rocket": 0, "eyes": 2}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/107374/timeline", "performed_via_github_app": null, "state_reason": null}