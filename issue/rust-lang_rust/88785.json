{"url": "https://api.github.com/repos/rust-lang/rust/issues/88785", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/88785/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/88785/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/88785/events", "html_url": "https://github.com/rust-lang/rust/issues/88785", "id": 992414804, "node_id": "MDU6SXNzdWU5OTI0MTQ4MDQ=", "number": 88785, "title": "Port non_fmt_panic help and suggestions to the format error diagnostic", "user": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2021-09-09T16:29:50Z", "updated_at": "2021-09-09T16:29:54Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "The `non_fmt_panic` *lint* looks at the type of argument to suggest something that will most likely work:\r\n\r\nRemoving a redundant `format!()`:\r\n```\r\nwarning: panic message is not a string literal\r\n --> src/main.rs:2:20\r\n  |\r\n2 |     assert!(false, format!(\"{} {}\", 1, 2));\r\n  |                    ^^^^^^^^^^^^^^^^^^^^^^\r\n  |\r\n  = note: the assert!() macro supports formatting, so there's no need for the format!() macro here\r\nhelp: remove the `format!(..)` macro call\r\n  |\r\n2 -     assert!(false, format!(\"{} {}\", 1, 2));\r\n2 +     assert!(false, \"{} {}\", 1, 2);\r\n  | \r\n```\r\nSuggest `\"{}\"` only if the thing implements `Display`:\r\n```\r\nwarning: panic message is not a string literal\r\n --> src/main.rs:4:12\r\n  |\r\n4 |     panic!(123);\r\n  |            ^^^\r\n  |\r\nhelp: add a \"{}\" format string to Display the message\r\n  |\r\n4 |     panic!(\"{}\", 123);\r\n  |            +++++\r\n```\r\nSuggest `\"{:?}\"` if the thing impements Debug:\r\n```\r\nwarning: panic message is not a string literal\r\n --> src/main.rs:3:12\r\n  |\r\n3 |     panic!(Some((1, 2)));\r\n  |            ^^^^^^^^^^^^\r\n  |\r\nhelp: add a \"{:?}\" format string to use the Debug implementation of `Option<(i32, i32)>`\r\n  |\r\n3 |     panic!(\"{:?}\", Some((1, 2)));\r\n  |            +++++++\r\n```\r\n\r\n---\r\n\r\nHowever, the this-is-not-a-format-string-literal *error* doesn't do that at all:\r\n\r\n```\r\nerror: format argument must be a string literal\r\n --> src/main.rs:2:14\r\n  |\r\n2 |     println!(format!(\"{} {}\", 1, 2));\r\n  |              ^^^^^^^^^^^^^^^^^^^^^^\r\n  |\r\nhelp: you might be missing a string literal to format with\r\n  |\r\n2 |     println!(\"{}\", format!(\"{} {}\", 1, 2));\r\n  |              +++++\r\n```\r\n```\r\nerror: format argument must be a string literal\r\n --> src/main.rs:4:14\r\n  |\r\n4 |     println!(123);\r\n  |              ^^^\r\n  |\r\nhelp: you might be missing a string literal to format with\r\n  |\r\n4 |     println!(\"{}\", 123);\r\n  |              +++++\r\n```\r\n```\r\nerror: format argument must be a string literal\r\n --> src/main.rs:3:14\r\n  |\r\n3 |     println!(Some((1, 2)));\r\n  |              ^^^^^^^^^^^^\r\n  |\r\nhelp: you might be missing a string literal to format with\r\n  |\r\n3 |     println!(\"{}\", Some((1, 2)));\r\n  |              +++++\r\n```\r\n---\r\nThis is especially relevant for Rust 2021, where `panic!(123)` will no longer trigger the lint, and instead triggers the error.\r\n\r\nWe should make sure the error gives the same suggestions.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/88785/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/88785/timeline", "performed_via_github_app": null, "state_reason": null}