{"url": "https://api.github.com/repos/rust-lang/rust/issues/59761", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/59761/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/59761/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/59761/events", "html_url": "https://github.com/rust-lang/rust/issues/59761", "id": 430078997, "node_id": "MDU6SXNzdWU0MzAwNzg5OTc=", "number": 59761, "title": "Decouple nightly RLS from Clippy", "user": {"login": "Xanewok", "id": 3093213, "node_id": "MDQ6VXNlcjMwOTMyMTM=", "avatar_url": "https://avatars.githubusercontent.com/u/3093213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Xanewok", "html_url": "https://github.com/Xanewok", "followers_url": "https://api.github.com/users/Xanewok/followers", "following_url": "https://api.github.com/users/Xanewok/following{/other_user}", "gists_url": "https://api.github.com/users/Xanewok/gists{/gist_id}", "starred_url": "https://api.github.com/users/Xanewok/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Xanewok/subscriptions", "organizations_url": "https://api.github.com/users/Xanewok/orgs", "repos_url": "https://api.github.com/users/Xanewok/repos", "events_url": "https://api.github.com/users/Xanewok/events{/privacy}", "received_events_url": "https://api.github.com/users/Xanewok/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 60344715, "node_id": "MDU6TGFiZWw2MDM0NDcxNQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-medium", "name": "P-medium", "color": "eb6420", "default": false, "description": "Medium priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 602425123, "node_id": "MDU6TGFiZWw2MDI0MjUxMjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-dev-tools", "name": "T-dev-tools", "color": "bfd4f2", "default": false, "description": "Relevant to the dev-tools subteam, which will review and decide on the PR/issue."}, {"id": 632925329, "node_id": "MDU6TGFiZWw2MzI5MjUzMjk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-rls", "name": "A-rls", "color": "f7e101", "default": false, "description": "Area: Rust Language Server (RLS)"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2019-04-06T21:31:26Z", "updated_at": "2019-06-11T06:59:08Z", "closed_at": "2019-06-11T06:59:08Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Context\r\n------\r\nAs you must've [noticed](https://rust-lang.github.io/rustup-components-history/) the RLS and Clippy are not shipped with nightly builds for quite a few releases now. This happens when a change lands to the Rust compiler and a tool cannot be built or its test fail when using the currently built compiler. Currently, the RLS explicitly depends (in Cargo sense) on Clippy, which means that whenever Clippy cannot build, the RLS also fails the build and is thus not included in the nightlies.\r\n\r\nIn practice, there's a lot more breakage involved for the Clippy since it uses rustc internals quite heavily (e.g. directly inspects AST/HIR structures), while the problem is sidestepped by the RLS by relying on the internal Rust [`librustc_save_analysis`](https://github.com/rust-lang/rust/tree/master/src/librustc_save_analysis) library doing all the heavy lifting and outputting relevant information to JSON.\r\n\r\nWhile specifically the current breakage requires more work/coordination (caused by moving libtest out of tree, please help with https://github.com/rust-lang/rust/pull/59440 if you know how!) and has caused more fallout than typical breakages, and regardless of the fact that we don't guarantee component availability for the nightly channel, I'd like us to try our best and **ship RLS if possible, even without Clippy support**.\r\n\r\nImplementation\r\n------\r\nImplementation-wise I believe this can be done by running Clippy tool test first and if it's detected as failed by rustbuild, then it will try to build RLS in the `--no-default-features` mode (Clippy support is gated by the only default `clippy` feature). When RLS is built without Clippy support, we can warn the user on start up that that version has no Clippy support enabled because it's not available in that build.\r\n\r\nAlternatives\r\n-----\r\n#### Create a separate [`rustup-complete`](https://internals.rust-lang.org/t/tools-team-tell-us-your-sorrows/9657/12) channel that's only released with all the tools\r\nWhile this may be a somewhat viable or desired idea:\r\n- IIRC the current breakage lasts for 1-2 weeks now which is the 1/3 of a version release cycle (...which makes it more of a `fortnightly` release)\r\n- requires more infrastructure/implementation effort in the rustup/rustbuild\r\n- doesn't solve the case for the regular `nightly` release, which is often the case for people actively working on the compiler or related tooling (hurts contributability)\r\n\r\n#### Do nothing\r\nWe just :man_shrugging: and tell people to move off nightly or pin to a specific nightly release.\r\n\r\nThat's not great because there's still a fair chunk of the ecosystem that's bound to nightly features. If we make them pin to a specific release, then there's UX/discoverability issue.\r\n\r\nRight now, when the user either tries to update the preexisting toolchain or install a fresh one with RLS, they fail with an uninformative \"`rls` component is unavailable\" message. Then, they need to either learn about or navigate to https://rust-lang.github.io/rustup-components-history/ to learn which was the most recent toolchain with RLS shipped (even then, right now it's impossible since the history shows \"missing\" for the last 8 ones) or find and use a script that parses the recent nightly build manifests and finds the most recent one. And that's for every tool breakage, which can happen quite often.\r\n\r\nThoughts?\r\n\r\ncc @nrc @oli-obk @rust-lang/infra @rust-lang/dev-tools ", "closed_by": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/59761/reactions", "total_count": 3, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 3, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/59761/timeline", "performed_via_github_app": null, "state_reason": "completed"}