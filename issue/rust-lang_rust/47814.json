{"url": "https://api.github.com/repos/rust-lang/rust/issues/47814", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/47814/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/47814/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/47814/events", "html_url": "https://github.com/rust-lang/rust/issues/47814", "id": 292157127, "node_id": "MDU6SXNzdWUyOTIxNTcxMjc=", "number": 47814, "title": "Rust compiler panics when trying to reference impl-ed constants with Self", "user": {"login": "rlupton20", "id": 13752145, "node_id": "MDQ6VXNlcjEzNzUyMTQ1", "avatar_url": "https://avatars.githubusercontent.com/u/13752145?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rlupton20", "html_url": "https://github.com/rlupton20", "followers_url": "https://api.github.com/users/rlupton20/followers", "following_url": "https://api.github.com/users/rlupton20/following{/other_user}", "gists_url": "https://api.github.com/users/rlupton20/gists{/gist_id}", "starred_url": "https://api.github.com/users/rlupton20/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rlupton20/subscriptions", "organizations_url": "https://api.github.com/users/rlupton20/orgs", "repos_url": "https://api.github.com/users/rlupton20/repos", "events_url": "https://api.github.com/users/rlupton20/events{/privacy}", "received_events_url": "https://api.github.com/users/rlupton20/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 46741598, "node_id": "MDU6TGFiZWw0Njc0MTU5OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-test", "name": "E-needs-test", "color": "02e10c", "default": false, "description": "Call for participation: writing correctness tests"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1405345617, "node_id": "MDU6TGFiZWwxNDA1MzQ1NjE3", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lazy-normalization", "name": "A-lazy-normalization", "color": "f7e101", "default": false, "description": "Area: lazy normalization (tracking issue: #60471)"}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-01-27T22:13:41Z", "updated_at": "2022-12-04T19:48:23Z", "closed_at": "2022-12-04T19:48:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "**EDITED**: MCVE is here: https://github.com/rust-lang/rust/issues/47814#issuecomment-361035984\r\n\r\nI tried to compile the following, which caused the rust compiler to panic. \r\n\r\n```\r\n...\r\n\u0016impl<'a> ArpIPv4<'a> {\r\n    const LENGTH: usize = 20;\r\n...\r\n    pub fn to_buffer(&self) -> [u8; Self::LENGTH] {\r\n        [0; ArpIPv4::LENGTH]\r\n    }\r\n}\r\n```\r\n\r\nThe following compiles just fine:\r\n\r\n```\r\n...\r\n\u0016impl<'a> ArpIPv4<'a> {\r\n    const LENGTH: usize = 20;\r\n...\r\n    pub fn to_buffer(&self) -> [u8; ArpIPv4::LENGTH] {\r\n        [0; ArpIPv4::LENGTH]\r\n    }\r\n}\r\n```\r\n\r\nThe error message:\r\n```\r\n[nix-shell:~/Code/nerd-stack]$ cargo run\r\n   Compiling nerd-stack v0.1.0 (file:///home/richard/Code/nerd-stack)\r\nwarning: unused imports: `ipv4_to_string`, `mac_to_string`\r\n --> src/protocols/arp.rs:1:26\r\n  |\r\n1 | use address::{MAC, IPv4, mac_to_string, ipv4_to_string};\r\n  |                          ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^\r\n  |\r\n  = note: #[warn(unused_imports)] on by default\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.24.0-nightly (9389e23a8 2017-12-31) running on x86_64-unknown-linux-gnu\r\n\r\nthread 'rustc' panicked at 'assertion failed: `(left == right)`\r\n  left: `Some(NodeId(820))`,\r\n right: `None`: free_scope: DefId(0/0:83 ~ nerd_stack[3074]::protocols[0]::arp[0]::{{impl}}[2]) not recognized by the region scope tree for None / Some(DefId(0/0:86 ~ nerd_stack[3074]::protocols[0]::arp[0]::{{impl}}[2]::to_buffer[0]))', /checkout/src/librustc/middle/region.rs:729:13\r\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\r\n\r\nerror: Could not compile `nerd-stack`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n\r\nAnd running again with verbosity and backtrace:\r\n\r\n```\r\n[nix-shell:~/Code/nerd-stack]$ RUST_BACKTRACE=1 cargo run --verbose                                                                \r\n       Fresh libc v0.2.36                                                                                                    \r\n   Compiling nerd-stack v0.1.0 (file:///home/richard/Code/nerd-stack)                                                           \r\n     Running `rustc --crate-name nerd_stack src/lib.rs --crate-type lib --emit=dep-info,link -C debuginfo=2 -C metadata=320d9acf78f2e38b -C extra-filename=-320d9acf78f2e38b --out-dir /home/richard/Code/nerd-stack\r\n/target/debug/deps -C incremental=/home/richard/Code/nerd-stack/target/debug/incremental -L dependency=/home/richard/Code/nerd-stack/target/debug/deps --extern libc=/home/richard/Code/nerd-stack/target/debug/deps\r\n/liblibc-1d53503271082800.rlib`        \r\nwarning: unused imports: `ipv4_to_string`, `mac_to_string`      \r\n --> src/protocols/arp.rs:1:26               \r\n  |                                        \r\n1 | use address::{MAC, IPv4, mac_to_string, ipv4_to_string};                         \r\n  |                          ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^\r\n  |                                        \r\n  = note: #[warn(unused_imports)] on by default\r\n                                             \r\nerror: internal compiler error: unexpected panic\r\n                                                  \r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n                                \r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n                                      \r\nnote: rustc 1.24.0-nightly (9389e23a8 2017-12-31) running on x86_64-unknown-linux-gnu\r\n          \r\nnote: run with `RUST_BACKTRACE=1` for a backtrace                                                                                                                                                                                                                                                                                                                                                                                       thread 'rustc' panicked at 'assertion failed: `(left == right)`        \r\n  left: `Some(NodeId(820))`,\r\n right: `None`: free_scope: DefId(0/0:83 ~ nerd_stack[3074]::protocols[0]::arp[0]::{{impl}}[2]) not recognized by the region scope tree for None / Some(DefId(0/0:86 ~ nerd_stack[3074]::protocols[0]::arp[0]::{{imp\r\nl}}[2]::to_buffer[0]))', /checkout/src/librustc/middle/region.rs:729:13\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\nstack backtrace:\r\n   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace\r\n   1: std::sys_common::backtrace::print\r\n   2: std::panicking::default_hook::{{closure}}\r\n   3: std::panicking::default_hook\r\n   4: std::panicking::rust_panic_with_hook\r\n   5: std::panicking::begin_panic\r\n   6: std::panicking::begin_panic_fmt\r\n   7: rustc::middle::region::ScopeTree::early_free_scope\r\n   8: rustc::middle::free_region::RegionRelations::is_subregion_of\r\n   9: rustc::infer::lexical_region_resolve::resolve\r\n  10: rustc::infer::InferCtxt::resolve_regions_and_report_errors_inner\r\n  11: rustc_typeck::check::regionck::<impl rustc_typeck::check::FnCtxt<'a, 'gcx, 'tcx>>::regionck_expr\r\n  12: <std::thread::local::LocalKey<T>>::with\r\n  13: rustc::infer::InferCtxtBuilder::enter\r\n  14: rustc_typeck::check::typeck_tables_of\r\n  15: rustc::ty::maps::<impl rustc::ty::maps::queries::typeck_tables_of<'tcx>>::compute_result\r\n  16: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  17: rustc_errors::Handler::track_diagnostics\r\n  18: rustc::ty::maps::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::cycle_check\r\n  19: rustc::ty::maps::<impl rustc::ty::maps::queries::typeck_tables_of<'tcx>>::force\r\n  20: rustc::ty::maps::plumbing::force_from_dep_node\r\n  21: rustc::dep_graph::graph::DepGraph::try_mark_green\r\n  22: rustc::ty::maps::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::try_mark_green_and_read\r\n  23: rustc::ty::maps::<impl rustc::ty::maps::queries::const_eval<'tcx>>::try_get\r\n  24: rustc::ty::maps::TyCtxtAt::const_eval\r\n  25: <rustc::traits::project::AssociatedTypeNormalizer<'a, 'b, 'gcx, 'tcx> as rustc::ty::fold::TypeFolder<'gcx, 'tcx>>::fold_const\r\n  26: rustc::ty::structural_impls::<impl rustc::ty::fold::TypeFoldable<'tcx> for &'tcx rustc::ty::TyS<'tcx>>::super_fold_with\r\n  27: <rustc::traits::project::AssociatedTypeNormalizer<'a, 'b, 'gcx, 'tcx> as rustc::ty::fold::TypeFolder<'gcx, 'tcx>>::fold_ty\r\n  28: <rustc_data_structures::accumulate_vec::AccumulateVec<A> as core::iter::traits::FromIterator<<A as rustc_data_structures::array_vec::Array>::Element>>::from_iter\r\n  29: rustc::ty::fold::TypeFoldable::fold_with\r\n  30: rustc::traits::project::normalize\r\n  31: rustc_typeck::check::FnCtxt::normalize_associated_types_in\r\n  32: <std::thread::local::LocalKey<T>>::with\r\n  33: rustc::infer::InferCtxtBuilder::enter\r\n  34: rustc_typeck::check::wfcheck::CheckTypeWellFormedVisitor::check_associated_item\r\n  35: rustc::hir::Crate::visit_all_item_likes\r\n  36: rustc::session::Session::track_errors\r\n  37: rustc_typeck::check_crate\r\n  38: <std::thread::local::LocalKey<T>>::with\r\n  39: <std::thread::local::LocalKey<T>>::with\r\n  40: rustc::ty::context::TyCtxt::create_and_enter\r\n  41: rustc_driver::driver::compile_input\r\n  42: rustc_driver::run_compiler\r\n\r\nerror: Could not compile `nerd-stack`.\r\n\r\nCaused by:\r\n  process didn't exit successfully: `rustc --crate-name nerd_stack src/lib.rs --crate-type lib --emit=dep-info,link -C debuginfo=2 -C metadata=320d9acf78f2e38b -C extra-filename=-320d9acf78f2e38b --out-dir /home/richard/Code/nerd-stack/target/debug/deps -C incremental=/home/richard/Code/nerd-stack/target/debug/incremental -L dependency=/home/richard/Code/nerd-stack/target/debug/deps --extern libc=/home/richard/Code/nerd-stack/target/debug/deps/liblibc-1d53503271082800.rlib` (exit code: 101)\r\n```\r\n\r\nRunning nixos 17.09 using rust nightly installed using the mozilla nixpkgs overlay. It's about a month out of date, so I'll check the updates.", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/47814/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/47814/timeline", "performed_via_github_app": null, "state_reason": "completed"}