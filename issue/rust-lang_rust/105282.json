{"url": "https://api.github.com/repos/rust-lang/rust/issues/105282", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/105282/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/105282/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/105282/events", "html_url": "https://github.com/rust-lang/rust/issues/105282", "id": 1475397370, "node_id": "I_kwDOAAsO6M5X8Mb6", "number": 105282, "title": "Codegen backends should validate their assumed encodings of e.g. rustc layouts.", "user": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 234956, "node_id": "MDU6TGFiZWwyMzQ5NTY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-codegen", "name": "A-codegen", "color": "f7e101", "default": false, "description": "Area: Code generation"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2022-12-05T01:49:35Z", "updated_at": "2023-04-05T17:32:44Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Specifically the thing that came to mind is that `rustc_codegen_llvm` could assert `LLVMSizeOf` matches the `rustc` `Layout` every time it builds a LLVM type from a layout.\r\n<sub>(and this should hopefully be cheap enough that we could always have it enabled)\r\n<sup>(I generally dislike debug asserts as they can't be relied upon to enforce soundness...)</sup></sub>\r\n\r\nThe motivating example is a discussion around a `#[repr(simd)] struct i32x3([i32; 3]);` type having size 12:\r\n* https://github.com/rust-lang/portable-simd/issues/319#issuecomment-1336482215\r\n* but as I note in the comment linked above, LLVM's `<3 x i32>` is 16 bytes, so that would be illegal\r\n  * (16 bytes at least in \"stride\", which LLVM doesn't seem to name as such - it doesn't read/write 16 bytes on load/store, so it definitely seems to have more than once concept of \"size\" even for primitives)\r\n  * (and no, `#[repr(packed)]` doesn't seem to do anything today, in combination with `#[repr(simd)]`, so you couldn't get the 12-byte layout without changing e.g. the `vector_align` algorithm in the compiler)\r\n\r\nI'm unsure about the GCC backend but presumably it should also be able to do this? (cc @antoyo)\r\n\r\ncc @rust-lang/wg-llvm @bjorn3 ", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/105282/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/105282/timeline", "performed_via_github_app": null, "state_reason": null}