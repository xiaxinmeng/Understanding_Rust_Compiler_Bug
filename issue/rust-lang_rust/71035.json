{"url": "https://api.github.com/repos/rust-lang/rust/issues/71035", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/71035/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/71035/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/71035/events", "html_url": "https://github.com/rust-lang/rust/issues/71035", "id": 598322314, "node_id": "MDU6SXNzdWU1OTgzMjIzMTQ=", "number": 71035, "title": "Improve compiler error on associated types", "user": {"login": "manuels", "id": 31315, "node_id": "MDQ6VXNlcjMxMzE1", "avatar_url": "https://avatars.githubusercontent.com/u/31315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/manuels", "html_url": "https://github.com/manuels", "followers_url": "https://api.github.com/users/manuels/followers", "following_url": "https://api.github.com/users/manuels/following{/other_user}", "gists_url": "https://api.github.com/users/manuels/gists{/gist_id}", "starred_url": "https://api.github.com/users/manuels/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/manuels/subscriptions", "organizations_url": "https://api.github.com/users/manuels/orgs", "repos_url": "https://api.github.com/users/manuels/repos", "events_url": "https://api.github.com/users/manuels/events{/privacy}", "received_events_url": "https://api.github.com/users/manuels/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37544, "node_id": "MDU6TGFiZWwzNzU0NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-typesystem", "name": "A-typesystem", "color": "f7e101", "default": false, "description": "Area: The type system"}, {"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 149689562, "node_id": "MDU6TGFiZWwxNDk2ODk1NjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-associated-items", "name": "A-associated-items", "color": "f7e101", "default": false, "description": "Area: Associated items such as associated types and consts."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-11T18:16:06Z", "updated_at": "2020-05-04T09:39:51Z", "closed_at": "2020-05-04T09:39:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "If you have a variable with type `impl TryStream<Ok=T, Error=E>` and want to use it as a `impl Stream<Item=Result<T,E>>`, the compiler complains.\r\nThe  compiler does not take you by the hand and helps you with helpful hints.\r\n\r\nI tried (roughly) this code: (EDIT: find a self-contained example [here](https://github.com/rust-lang/rust/issues/71035#issuecomment-612627037))\r\n\r\n```rust\r\nuse bytes;\r\nuse std::io;\r\nuse futures::channel::mpsc;\r\nuse async_std::task;\r\n\r\n//pub fn my_rx(sock: std::sync::Arc<UdpSocket>) -> impl futures::Stream<Item=Result<(bytes::Bytes, std::net::SocketAddr), std::io::Error>> { // WORKS\r\npub fn my_rx(sock: std::sync::Arc<UdpSocket>) -> impl futures::TryStream<Ok=(bytes::Bytes, std::net::SocketAddr), Error=std::io::Error> { // ERROR\r\n    ...\r\n}\r\n\r\nfn main() {\r\n    let inet_rx = my_rx();\r\n    let (tx1, inet_rx1) = mpsc::unbounded();\r\n    let (tx2, inet_rx2) = mpsc::unbounded();\r\n    let mut tx = tx1.fanout(tx2).sink_map_err(|_| io::Error::new(io::ErrorKind::Other, \"Send Error\"));\r\n    let foo = inet_rx.forward(tx);\r\n    let _ = task::spawn(foo);\r\n}\r\n```\r\n\r\nI expected to see this happen:\r\nI would like the compiler to tell me that that that while there exists an implementation of `TryStream<Ok=T, Error=E>` as `Stream<Result<T,E>>`, there might exist other implementations and therefore this code is not accepted. Using `Stream<Result<T,E>>` instead of `TryStream<Ok=T, Error=E>` would solve the error.\r\n\r\nInstead, this happened:\r\nThere are no hints by the compiler.\r\n\r\n### Meta\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.41.0-nightly (6d77e45f0 2019-12-04)\r\nbinary: rustc\r\ncommit-hash: 6d77e45f01079fe3d40180b3e256e414ab379f63\r\ncommit-date: 2019-12-04\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.41.0-nightly\r\nLLVM version: 9.0\r\n```", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/71035/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/71035/timeline", "performed_via_github_app": null, "state_reason": "completed"}