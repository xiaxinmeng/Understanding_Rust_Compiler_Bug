{"url": "https://api.github.com/repos/rust-lang/rust/issues/89054", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/89054/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/89054/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/89054/events", "html_url": "https://github.com/rust-lang/rust/issues/89054", "id": 999678225, "node_id": "I_kwDOAAsO6M47leER", "number": 89054, "title": "Better diagnostics for out-of-scope traits", "user": {"login": "tarcieri", "id": 797, "node_id": "MDQ6VXNlcjc5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/797?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tarcieri", "html_url": "https://github.com/tarcieri", "followers_url": "https://api.github.com/users/tarcieri/followers", "following_url": "https://api.github.com/users/tarcieri/following{/other_user}", "gists_url": "https://api.github.com/users/tarcieri/gists{/gist_id}", "starred_url": "https://api.github.com/users/tarcieri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tarcieri/subscriptions", "organizations_url": "https://api.github.com/users/tarcieri/orgs", "repos_url": "https://api.github.com/users/tarcieri/repos", "events_url": "https://api.github.com/users/tarcieri/events{/privacy}", "received_events_url": "https://api.github.com/users/tarcieri/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-09-17T19:59:21Z", "updated_at": "2021-09-17T20:01:04Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "[See this Twitter thread with @ekuber for context](https://twitter.com/bascule/status/1438888671923654666)\r\n\r\nThe current diagnostics are able to give this helpful suggestion when a trait is not in scope:\r\n\r\n```\r\n    = help: items from traits can only be used if the trait is in scope\r\n    = note: the following trait is implemented but not in scope; perhaps add a `use` for it:\r\n            `use aes_gcm::NewAead;`\r\n```\r\n\r\nThat's great, however [that helpful suggestion is often buried at the bottom of the error message under a large cascade of obligations which distract from the problem being an out-of-scope trait](https://gist.github.com/oberien/ef76672e210bd219c28f17fab04bc372).\r\n\r\nAs a suggestion, I think it would be helpful if the diagnostics could detect cases where importing the trait is probably the most likely resolution to the error, and in such cases make the suggestion at the top of the error message, rather than at the very bottom.\r\n\r\nIf the diagonstics could determine that importing the trait is the unambiguous solution to the problem and elide the rest of the error message in that case, that'd be gravy.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/89054/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/89054/timeline", "performed_via_github_app": null, "state_reason": null}