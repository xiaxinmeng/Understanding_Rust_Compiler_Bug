{"url": "https://api.github.com/repos/rust-lang/rust/issues/59888", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/59888/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/59888/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/59888/events", "html_url": "https://github.com/rust-lang/rust/issues/59888", "id": 432193692, "node_id": "MDU6SXNzdWU0MzIxOTM2OTI=", "number": 59888, "title": "type annotations required in a guard when evaluating to the same thing", "user": {"login": "rbtcollins", "id": 499678, "node_id": "MDQ6VXNlcjQ5OTY3OA==", "avatar_url": "https://avatars.githubusercontent.com/u/499678?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rbtcollins", "html_url": "https://github.com/rbtcollins", "followers_url": "https://api.github.com/users/rbtcollins/followers", "following_url": "https://api.github.com/users/rbtcollins/following{/other_user}", "gists_url": "https://api.github.com/users/rbtcollins/gists{/gist_id}", "starred_url": "https://api.github.com/users/rbtcollins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rbtcollins/subscriptions", "organizations_url": "https://api.github.com/users/rbtcollins/orgs", "repos_url": "https://api.github.com/users/rbtcollins/repos", "events_url": "https://api.github.com/users/rbtcollins/events{/privacy}", "received_events_url": "https://api.github.com/users/rbtcollins/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-04-11T19:01:56Z", "updated_at": "2019-04-30T07:19:53Z", "closed_at": "2019-04-11T21:12:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I couldn't see an obvious duplicate, sorry if I missed one.\r\n\r\nI get this error with git 3750348daff89741e3153e0e120aa70a45ff5b68\r\n```\r\nC:\\Users\\robertc\\Documents\\src\\rust>py x.py build --stage 1 src/libtest\r\nUpdating only changed submodules\r\nSubmodules updated in 0.93 seconds\r\n    Finished dev [unoptimized] target(s) in 1.16s\r\nBuilding stage0 std artifacts (x86_64-pc-windows-msvc -> x86_64-pc-windows-msvc)\r\n   Compiling std v0.0.0 (C:\\Users\\robertc\\Documents\\src\\rust\\src\\libstd)\r\nerror[E0284]: type annotations required: cannot resolve `<_ as core::str::FromStr>::Err == _`\r\n  --> src\\libstd\\io\\util.rs:48:28\r\n   |\r\n48 |             Ok(val) if val.parse().is_ok() => val.parse().unwrap(),\r\n   |                            ^^^^^\r\n\r\nerror: aborting due to previous error\r\n```\r\n\r\nFrom this code:\r\n<details>\r\n<summary>io::copy variant</summary>\r\n<p>\r\n```\r\n#[stable(feature = \"rust1\", since = \"1.0.0\")]\r\npub fn copy<R: ?Sized, W: ?Sized>(reader: &mut R, writer: &mut W) -> io::Result<u64>\r\n    where R: Read, W: Write\r\n{\r\n    let mut buf = unsafe {\r\n        let mut buf_size: usize = match env::var(\"RUST_COPY_BUF_SIZE\") {\r\n            Ok(val) if val.parse::().is_ok() => val.parse().unwrap(),\r\n            _ => 0\r\n        };\r\n        if buf_size == 0 {\r\n            buf_size = super::DEFAULT_BUF_SIZE\r\n        }\r\n\r\n        let mut buf = Vec::with_capacity(buf_size);\r\n        buf.set_len(buf_size);\r\n        reader.initializer().initialize(&mut buf);\r\n        buf\r\n    };\r\n\r\n    let mut written = 0;\r\n    loop {\r\n        let len = match reader.read(&mut buf) {\r\n            Ok(0) => return Ok(written),\r\n            Ok(len) => len,\r\n            Err(ref e) if e.kind() == ErrorKind::Interrupted => continue,\r\n            Err(e) => return Err(e),\r\n        };\r\n        writer.write_all(&buf[..len])?;\r\n        written += len as u64;\r\n    }\r\n}```\r\n\r\n</p>\r\n</details>\r\n\r\n\r\nChanging the match clause to:\r\n```\r\n            Ok(val) if val.parse::<usize>().is_ok() => val.parse().unwrap(),\r\n```\r\npermitted it to compile - it can clearly infer the type of the resulting expression; but the use of the leadin of the same expression (`val.parse()`) in the guard isn't - anyhow, it would be delightful if I didn't need to hint to the guard that it should match the same type that the resulting expression will be using for the parse call.", "closed_by": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/59888/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/59888/timeline", "performed_via_github_app": null, "state_reason": "completed"}