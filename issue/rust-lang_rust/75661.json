{"url": "https://api.github.com/repos/rust-lang/rust/issues/75661", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/75661/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/75661/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/75661/events", "html_url": "https://github.com/rust-lang/rust/issues/75661", "id": 680906526, "node_id": "MDU6SXNzdWU2ODA5MDY1MjY=", "number": 75661, "title": "Clarify use cases for Option is_some and is_none", "user": {"login": "Lonami", "id": 6297805, "node_id": "MDQ6VXNlcjYyOTc4MDU=", "avatar_url": "https://avatars.githubusercontent.com/u/6297805?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lonami", "html_url": "https://github.com/Lonami", "followers_url": "https://api.github.com/users/Lonami/followers", "following_url": "https://api.github.com/users/Lonami/following{/other_user}", "gists_url": "https://api.github.com/users/Lonami/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lonami/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lonami/subscriptions", "organizations_url": "https://api.github.com/users/Lonami/orgs", "repos_url": "https://api.github.com/users/Lonami/repos", "events_url": "https://api.github.com/users/Lonami/events{/privacy}", "received_events_url": "https://api.github.com/users/Lonami/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 431251592, "node_id": "MDU6TGFiZWw0MzEyNTE1OTI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-docs", "name": "A-docs", "color": "f7e101", "default": false, "description": "Area: documentation for any part of the project, including the compiler, standard library, and tools"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-18T10:33:08Z", "updated_at": "2020-08-18T10:36:12Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Bringing this from a [Reddit comment on Beginner's critiques of Rust](https://www.reddit.com/r/rust/comments/hzx1ak/beginners_critiques_of_rust/fzn8exa):\r\n\r\n> `is_some()` and `is_none()` are more of an end goal. You use it when you want to know whether or not an `Option` has a value but don't actually need to use the value. You should be pattern matching or using something like `.map()` or `.unwrap_or()` if you need to use the value.\r\n\r\nMaybe the documentation could include something along the lines of showing the moral equivalent:\r\n\r\n> This method is the moral equivalent of pattern-matching on the `Option` and turning into a `bool` without caring about the value:\r\n> \r\n> ```rust\r\n> let has_item = if let Some(_value) = option { true } else { false };\r\n> // becomes\r\n> let has_item = option.is_some();\r\n> ```\r\n> \r\n> If you don't care about whether it has a value but rather about the value itself if any, consider pattern-matching instead.\r\n\r\nPersonally I think this is a bit long-winded, but it might help people coming to the language with a different mindset. Definitely needs better wording than what I put here.\r\n\r\nIn the thread there are more examples of good and bad that might be worth borrowing, or perhaps the documentation could link t the book with more examples if this becomes too much of a guide?\r\n\r\nThe same reasoning applies to `Result`'s `is_ok` and `is_err`.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/75661/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/75661/timeline", "performed_via_github_app": null, "state_reason": null}