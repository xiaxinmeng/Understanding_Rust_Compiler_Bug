{"url": "https://api.github.com/repos/rust-lang/rust/issues/51371", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/51371/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/51371/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/51371/events", "html_url": "https://github.com/rust-lang/rust/issues/51371", "id": 329535705, "node_id": "MDU6SXNzdWUzMjk1MzU3MDU=", "number": 51371, "title": "Impl enum variants", "user": {"login": "ghost", "id": 10137, "node_id": "MDQ6VXNlcjEwMTM3", "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghost", "html_url": "https://github.com/ghost", "followers_url": "https://api.github.com/users/ghost/followers", "following_url": "https://api.github.com/users/ghost/following{/other_user}", "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghost/subscriptions", "organizations_url": "https://api.github.com/users/ghost/orgs", "repos_url": "https://api.github.com/users/ghost/repos", "events_url": "https://api.github.com/users/ghost/events{/privacy}", "received_events_url": "https://api.github.com/users/ghost/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-06-05T16:35:05Z", "updated_at": "2018-06-08T17:01:02Z", "closed_at": "2018-06-08T16:07:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nTo use generics in collections, I have to wrap objects inside `Box`. Later to get back the concrete types, I can use `Any::downcast_ref()`. However that function can't be used with `match`.\r\n\r\nSo currently I'm using this way:\r\n\r\n```rust\r\nenum Component {\r\n    Button(Button),\r\n    Label(Label),\r\n}\r\n\r\nstruct Button;\r\nstruct Label;\r\n```\r\n\r\n`Component` can be easily put in a collection. And it's more convenient when using with `match`. However as you can see, it doubles the names.\r\n\r\nMay I ask if you could consider adding `impl` for enum variants? So above code can be refactored like this:\r\n\r\n```rust\r\n// I added some more fields for the next match example\r\nenum Component {\r\n    Button { width: u32, height: u32, },\r\n    Label { visible: bool, },\r\n}\r\n\r\nimpl Component::Button {\r\n    fn desc(&self) -> String {\r\n        format!(\"Button size: {}x{}\", self.width, self.height)\r\n    }\r\n}\r\nimpl Component::Label {\r\n    fn other_desc(&self) -> String {\r\n        format!(\"Label is visible: {}\", self.visible)\r\n    }\r\n}\r\n\r\nmatch component {\r\n    Component::Button as b => ...,\r\n    Component::Label as l => ...,\r\n}\r\n```\r\n\r\nCurrently I can't think of how docs work. I'm not sure if docs can apply to `impl` block.\r\n\r\nI really think this is a great feature...\r\n\r\nThank you,\r\n\r\n---\r\n\r\n**Edited**\r\n\r\nUpdated examples.\r\n", "closed_by": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/51371/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/51371/timeline", "performed_via_github_app": null, "state_reason": "completed"}