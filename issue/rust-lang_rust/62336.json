{"url": "https://api.github.com/repos/rust-lang/rust/issues/62336", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/62336/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/62336/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/62336/events", "html_url": "https://github.com/rust-lang/rust/issues/62336", "id": 463781183, "node_id": "MDU6SXNzdWU0NjM3ODExODM=", "number": 62336, "title": "wart: non-Eq [T; 0] can be matched as if T were `#[structural_match]`", "user": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 1976249039, "node_id": "MDU6TGFiZWwxOTc2MjQ5MDM5", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-patterns", "name": "A-patterns", "color": "f7e101", "default": false, "description": "Relating to patterns and pattern matching"}, {"id": 2408329107, "node_id": "MDU6TGFiZWwyNDA4MzI5MTA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-zst", "name": "A-zst", "color": "f7e101", "default": false, "description": "Area: Zero-sized types"}, {"id": 3425147156, "node_id": "LA_kwDOAAsO6M7MJ5kU", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-array", "name": "A-array", "color": "f7e101", "default": false, "description": "Area: [T; N]"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-07-03T14:19:47Z", "updated_at": "2021-10-06T19:41:53Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Spawned off of investigation of issue #62307 and PR #55837\r\n\r\nWe currently allow constants that are empty arrays of any type to be used as patterns in `match`. We allow this regardless of whether they are an array of an ADT that does not derive `PartialEq`/`Eq`\r\n\r\nThis may be a feature or a bug depending on one's perspective.\r\n\r\nHere is an example of the behavior in question ([play](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=f4e56f82334be23ad582190c29c03e0c)): \r\n\r\n```rust\r\nstruct B(i32);\r\n\r\nconst B0: [B; 0] = [];\r\n\r\n//#[derive(PartialEq, Eq)] // can't uncomment b/c B doesn't impl PartialEq+Eq.\r\nstruct UhOh([B; 0]);\r\n\r\nconst _UH_OH: UhOh = UhOh(B0);\r\n\r\nfn main() {\r\n    match [] {\r\n        B0 => { println!(\"B0 matched []\"); }\r\n    }\r\n\r\n    match UhOh([]) {\r\n        UhOh(B0) => { println!(\"UhOh(B0) matched UhOh([])\"); }\r\n    }\r\n\r\n    #[cfg(this_wont_compile_without_derive_of_partial_eq_and_eq)]\r\n    match UhOh([]) {\r\n        _UH_OH => { println!(\"_UH_OH matched UhOh([]])\"); }\r\n    }\r\n}\r\n```\r\n\r\nTo be clear: This behavior might be fine.\r\n\r\nIt is just a little weird, because on other uses of consts in patterns, we *do* tend to require that their types derive `PartialEq` and `Eq` \r\n  * the use of the derive is asserted by the presence of `#[structural_match]`; see rust-lang/rfcs#1445).\r\n  * Update: there are other exceptions where `PartialEq` is not required for a const in a pattern, namely for `for <'a> fn(&'a T)`; see https://github.com/rust-lang/rust/issues/46989#issuecomment-353805481 )\r\n\r\nBut we can treat an empty array as an exceptional case here, if that's what people want.\r\n\r\n * If this is the behavior that we do want, then lets make sure we have a test encoding it.\r\n * It this is not the behavior that we want, then we can fix it (presumably in a similar manner to how I am going about fixing issue #62307).", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/62336/reactions", "total_count": 2, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 2, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/62336/timeline", "performed_via_github_app": null, "state_reason": null}