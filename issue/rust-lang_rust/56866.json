{"url": "https://api.github.com/repos/rust-lang/rust/issues/56866", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/56866/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/56866/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/56866/events", "html_url": "https://github.com/rust-lang/rust/issues/56866", "id": 391424765, "node_id": "MDU6SXNzdWUzOTE0MjQ3NjU=", "number": 56866, "title": "unconditional_recursion lint false positive with specialization", "user": {"login": "comex", "id": 47517, "node_id": "MDQ6VXNlcjQ3NTE3", "avatar_url": "https://avatars.githubusercontent.com/u/47517?v=4", "gravatar_id": "", "url": "https://api.github.com/users/comex", "html_url": "https://github.com/comex", "followers_url": "https://api.github.com/users/comex/followers", "following_url": "https://api.github.com/users/comex/following{/other_user}", "gists_url": "https://api.github.com/users/comex/gists{/gist_id}", "starred_url": "https://api.github.com/users/comex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/comex/subscriptions", "organizations_url": "https://api.github.com/users/comex/orgs", "repos_url": "https://api.github.com/users/comex/repos", "events_url": "https://api.github.com/users/comex/events{/privacy}", "received_events_url": "https://api.github.com/users/comex/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235137, "node_id": "MDU6TGFiZWwyMzUxMzc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lint", "name": "A-lint", "color": "f7e101", "default": false, "description": "Area: Lints (warnings about flaws in source code) such as unused_mut."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-16T00:52:47Z", "updated_at": "2019-01-28T00:56:00Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In this example, a `default fn` in a trait impl unconditionally calls the same fn on a different type.  That type is covered by the same impl containing the `default fn`, but it's also covered by a specialized impl that overrides that fn, hence there is not actually infinite recursion.\r\n\r\n[Playground link](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=69a389b0d71c9dee3fa55398c481f93)\r\n\r\n```rust\r\n#![feature(specialization)]\r\n\r\ntrait Foo {\r\n    fn foo();\r\n}\r\n\r\nimpl<T> Foo for T {\r\n    default fn foo() {\r\n        <Box<T> as Foo>::foo();\r\n    }\r\n}\r\n\r\nimpl Foo for Box<i32> {\r\n    fn foo() {}\r\n}\r\n\r\nfn main() {\r\n    i32::foo();\r\n}\r\n```\r\nOutput:\r\n```\r\nwarning: function cannot return without recursing\r\n --> src/main.rs:8:5\r\n  |\r\n8 |     default fn foo() {\r\n  |     ^^^^^^^^^^^^^^^^ cannot return without recursing\r\n9 |         <Box<T> as Foo>::foo();\r\n  |         ---------------------- recursive call site\r\n  |\r\n  = note: #[warn(unconditional_recursion)] on by default\r\n  = help: a `loop` may express intention better if this is on purpose\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/56866/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/56866/timeline", "performed_via_github_app": null, "state_reason": null}