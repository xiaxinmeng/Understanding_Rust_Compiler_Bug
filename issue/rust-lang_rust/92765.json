{"url": "https://api.github.com/repos/rust-lang/rust/issues/92765", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/92765/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/92765/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/92765/events", "html_url": "https://github.com/rust-lang/rust/issues/92765", "id": 1099146732, "node_id": "I_kwDOAAsO6M5Bg6Xs", "number": 92765, "title": "drain() doc of vector (and others) is still unclear", "user": {"login": "ssomers", "id": 10174877, "node_id": "MDQ6VXNlcjEwMTc0ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/10174877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ssomers", "html_url": "https://github.com/ssomers", "followers_url": "https://api.github.com/users/ssomers/followers", "following_url": "https://api.github.com/users/ssomers/following{/other_user}", "gists_url": "https://api.github.com/users/ssomers/gists{/gist_id}", "starred_url": "https://api.github.com/users/ssomers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ssomers/subscriptions", "organizations_url": "https://api.github.com/users/ssomers/orgs", "repos_url": "https://api.github.com/users/ssomers/repos", "events_url": "https://api.github.com/users/ssomers/events{/privacy}", "received_events_url": "https://api.github.com/users/ssomers/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 166999014, "node_id": "MDU6TGFiZWwxNjY5OTkwMTQ=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-collections", "name": "A-collections", "color": "f7e101", "default": false, "description": "Area: std::collections."}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 431251592, "node_id": "MDU6TGFiZWw0MzEyNTE1OTI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-docs", "name": "A-docs", "color": "f7e101", "default": false, "description": "Area: documentation for any part of the project, including the compiler, standard library, and tools"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2022-01-11T13:23:20Z", "updated_at": "2022-02-19T14:55:50Z", "closed_at": "2022-02-19T14:55:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The description of [Vec::drain](https://doc.rust-lang.org/std/vec/struct.Vec.html#method.drain):\r\n- states that it \"creates a _draining_ iterator\", leading to expectations that each iteration drains one element, that stopping the iteration should drain fewer elements because iterators are lazy (witnessed in #43244). The rest of the description counters that expectation, but by saying \"**when** the iterator is dropped\", there's again the suggestion that removal happens at that late stage. While conceptually it's simpler to state that the removal happens unconditionally and immediately, which corresponds to the verb \"drain\", like [BinaryHeap::drain](https://doc.rust-lang.org/std/collections/struct.BinaryHeap.html#method.drain) and [HashMap::drain](https://doc.rust-lang.org/std/collections/hash_map/struct.HashMap.html#method.drain) do.\r\n- says \"unspecified how many elements are removed\" if you circumvent dropping, which suggests it's only removing elements _in_ the range like the rest of the text, but in reality the whole vector is slaughtered (#74652 clarified one aspect of this case but slightly muddled this one).\r\n- lists the possibility to use `mem::forget` as if that is just one of the ways to use the iterator, which makes the description harder to understand if you're not advanced in Rust.\r\n- does not say what happens to the elements removed but not yielded if the iterator is dropped before it is fully consumed. It makes most sense that they get dropped rather than leaked, but given what leeway `Vec::drain` grants itself elsewhere, it might be helpful to clarify. None of the other `drain` methods say this either (#93769). `Vec::into_iter` also doesn't but I believe the fact that the signature says it consumes the container implies it.\r\n\r\n[VecDeque::drain](https://doc.rust-lang.org/std/collections/struct.VecDeque.html#method.drain) has the same issue (and got missed by #74652). [String::drain](https://doc.rust-lang.org/std/string/struct.String.html#method.drain) probably too, it doesn't mention what may happen if you mem::forget the iterator.\r\n\r\n@rustbot label  A-collections A-docs C-enhancement T-libs-api", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/92765/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/92765/timeline", "performed_via_github_app": null, "state_reason": "completed"}