{"url": "https://api.github.com/repos/rust-lang/rust/issues/72337", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/72337/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/72337/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/72337/events", "html_url": "https://github.com/rust-lang/rust/issues/72337", "id": 620503440, "node_id": "MDU6SXNzdWU2MjA1MDM0NDA=", "number": 72337, "title": "Incorrect lifetime used for mutable references to trait objects (correct one is used for non-mut references)", "user": {"login": "VFLashM", "id": 3723853, "node_id": "MDQ6VXNlcjM3MjM4NTM=", "avatar_url": "https://avatars.githubusercontent.com/u/3723853?v=4", "gravatar_id": "", "url": "https://api.github.com/users/VFLashM", "html_url": "https://github.com/VFLashM", "followers_url": "https://api.github.com/users/VFLashM/followers", "following_url": "https://api.github.com/users/VFLashM/following{/other_user}", "gists_url": "https://api.github.com/users/VFLashM/gists{/gist_id}", "starred_url": "https://api.github.com/users/VFLashM/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/VFLashM/subscriptions", "organizations_url": "https://api.github.com/users/VFLashM/orgs", "repos_url": "https://api.github.com/users/VFLashM/repos", "events_url": "https://api.github.com/users/VFLashM/events{/privacy}", "received_events_url": "https://api.github.com/users/VFLashM/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-18T21:01:09Z", "updated_at": "2020-05-18T21:11:32Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Instead of explicitly defined lifetime, rust uses anonymous lifetime of surrounding block.\r\nFor some reason problem only happens for mut references, non-mut references work just fine.\r\n\r\nI tried this code:\r\n\r\n```rust\r\n// trait allowing to get reference to stored i32\r\ntrait T {\r\n    fn get(&self) -> &i32;\r\n    fn get_mut(&mut self) -> &mut i32;\r\n}\r\n\r\n// iterator helper\r\nstruct IterT<'a>(&'a dyn T);\r\n\r\n// mut iterator helper\r\nstruct IterMutT<'a>(&'a mut dyn T);\r\n\r\n// iterator implementation\r\nimpl<'a> Iterator for IterT<'a> {\r\n    type Item = &'a i32;\r\n    fn next(&mut self) -> Option<Self::Item> {\r\n        // lifetime is inferred just fine\r\n        // self.0 has lifetime 'a\r\n        Some(self.0.get())\r\n    }\r\n}\r\n\r\n// mut iterator implementation\r\nimpl<'a> Iterator for IterMutT<'a> {\r\n    type Item = &'a mut i32;\r\n    fn next(&mut self) -> Option<Self::Item> {\r\n        // error here: cannot infer an appropriate lifetime\r\n        // self.0 has lifetime of surrounding block, even\r\n        // though it should be 'a as explicitly defined\r\n        Some(self.0.get_mut())\r\n    }\r\n}\r\n```\r\n\r\nI expected to see this happen: no error\r\n\r\nInstead, this happened: compilation error\r\n\r\n```\r\nerror[E0495]: cannot infer an appropriate lifetime for autoref due to conflicting requirements\r\n  --> src/lib.rs:30:21\r\n   |\r\n30 |         Some(self.0.get_mut())\r\n   |                     ^^^^^^^\r\n   |\r\nnote: first, the lifetime cannot outlive the anonymous lifetime #1 defined on the method body at 26:5...\r\n  --> src/lib.rs:26:5\r\n   |\r\n26 | /     fn next(&mut self) -> Option<Self::Item> {\r\n27 | |         // error here: cannot infer an appropriate lifetime\r\n28 | |         // self.0 has lifetime of surrounding block, even\r\n29 | |         // though it should be 'a as explicitly defined\r\n30 | |         Some(self.0.get_mut())\r\n31 | |     }\r\n   | |_____^\r\nnote: ...so that reference does not outlive borrowed content\r\n  --> src/lib.rs:30:14\r\n   |\r\n30 |         Some(self.0.get_mut())\r\n   |              ^^^^^^\r\nnote: but, the lifetime must be valid for the lifetime `'a` as defined on the impl at 24:6...\r\n  --> src/lib.rs:24:6\r\n   |\r\n24 | impl<'a> Iterator for IterMutT<'a> {\r\n   |      ^^\r\nnote: ...so that the types are compatible\r\n  --> src/lib.rs:26:46\r\n   |\r\n26 |       fn next(&mut self) -> Option<Self::Item> {\r\n   |  ______________________________________________^\r\n27 | |         // error here: cannot infer an appropriate lifetime\r\n28 | |         // self.0 has lifetime of surrounding block, even\r\n29 | |         // though it should be 'a as explicitly defined\r\n30 | |         Some(self.0.get_mut())\r\n31 | |     }\r\n   | |_____^\r\n   = note: expected  `std::iter::Iterator`\r\n              found  `std::iter::Iterator`\r\n```\r\n\r\n### Meta\r\n\r\nI tried it both on stable and nightly rust:\r\n\r\n```\r\n$ rustc --version --verbose\r\nrustc 1.45.0-nightly (7ebd87a7a 2020-05-08)\r\nbinary: rustc\r\ncommit-hash: 7ebd87a7a1e0e21767422e115c9455ef6e6d4bee\r\ncommit-date: 2020-05-08\r\nhost: x86_64-pc-windows-msvc\r\nrelease: 1.45.0-nightly\r\nLLVM version: 9.0\r\n```\r\n\r\n```\r\n$ rustc --version --verbose\r\nrustc 1.43.0 (4fb7144ed 2020-04-20)\r\nbinary: rustc\r\ncommit-hash: 4fb7144ed159f94491249e86d5bbd033b5d60550\r\ncommit-date: 2020-04-20\r\nhost: x86_64-pc-windows-msvc\r\nrelease: 1.43.0\r\nLLVM version: 9.0\r\n```\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/72337/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/72337/timeline", "performed_via_github_app": null, "state_reason": null}