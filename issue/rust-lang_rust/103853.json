{"url": "https://api.github.com/repos/rust-lang/rust/issues/103853", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/103853/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/103853/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/103853/events", "html_url": "https://github.com/rust-lang/rust/issues/103853", "id": 1432211202, "node_id": "I_kwDOAAsO6M5VXc8C", "number": 103853, "title": "Elide duplicate path information when types are reused in a compiler error", "user": {"login": "alice-i-cecile", "id": 3579909, "node_id": "MDQ6VXNlcjM1Nzk5MDk=", "avatar_url": "https://avatars.githubusercontent.com/u/3579909?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alice-i-cecile", "html_url": "https://github.com/alice-i-cecile", "followers_url": "https://api.github.com/users/alice-i-cecile/followers", "following_url": "https://api.github.com/users/alice-i-cecile/following{/other_user}", "gists_url": "https://api.github.com/users/alice-i-cecile/gists{/gist_id}", "starred_url": "https://api.github.com/users/alice-i-cecile/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alice-i-cecile/subscriptions", "organizations_url": "https://api.github.com/users/alice-i-cecile/orgs", "repos_url": "https://api.github.com/users/alice-i-cecile/repos", "events_url": "https://api.github.com/users/alice-i-cecile/events{/privacy}", "received_events_url": "https://api.github.com/users/alice-i-cecile/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-11-01T22:57:50Z", "updated_at": "2022-11-06T01:04:33Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "Suppose we have a very complex error message, with nested types / traits.\r\n\r\nFor example, I encountered\r\n\r\n```\r\nthe trait bound `ChainSystem<FunctionSystem<(), Result<C, NoWheelSelection>, (bevy::prelude::Query<'_, '_, &leafwing_input_manager::action_state::ActionState<PlayerAction>, bevy::prelude::With<PlayerCharacter>>, bevy::prelude::Query<'_, '_, (&WheelMenuCenter<C>, &geometry::coordinates::WindowPos, &bevy::prelude::Children)>, bevy::prelude::Query<'_, '_, &geometry::coordinates::WindowPos, bevy::prelude::With<ui::cursor::Cursor>>, bevy::prelude::Query<'_, '_, &mut WheelMenuWedge<C>>), (), for<'a, 'b, 'c, 'd, 'e, 'f, 'g, 'h, 'i, 'j, 'k, 'l, 'm, 'n> fn(bevy::prelude::Query<'a, 'b, &'c leafwing_input_manager::action_state::ActionState<PlayerAction>, bevy::prelude::With<PlayerCharacter>>, bevy::prelude::Query<'d, 'e, (&'f WheelMenuCenter<C>, &'g geometry::coordinates::WindowPos, &'h bevy::prelude::Children)>, bevy::prelude::Query<'i, 'j, &'k geometry::coordinates::WindowPos, bevy::prelude::With<ui::cursor::Cursor>>, bevy::prelude::Query<'l, 'm, &'n mut WheelMenuWedge<C>>) -> Result<C, NoWheelSelection> {select_from_wheel_menu::<C>}>, <H as bevy::prelude::IntoSystem<Result<C, NoWheelSelection>, Out, Params>>::System>: bevy::prelude::IntoSystem<(), (), _>` is not satisfied\r\nthe following other types implement trait `IntoSystemDescriptor<Params>`:\r\n  ConditionalSystemDescriptor\r\n  ExclusiveSystemCoerced\r\n  ExclusiveSystemDescriptor\r\n  ExclusiveSystemFn<F>\r\n  ParallelSystemDescriptor\r\n  SystemDescriptor\r\n  std::boxed::Box<(dyn bevy::prelude::System<Out = (), In = ()> + 'static)>\r\nrequired for `ChainSystem<FunctionSystem<(), Result<C, NoWheelSelection>, (bevy::prelude::Query<'_, '_, &leafwing_input_manager::action_state::ActionState<PlayerAction>, bevy::prelude::With<PlayerCharacter>>, bevy::prelude::Query<'_, '_, (&WheelMenuCenter<C>, &geometry::coordinates::WindowPos, &bevy::prelude::Children)>, bevy::prelude::Query<'_, '_, &geometry::coordinates::WindowPos, bevy::prelude::With<ui::cursor::Cursor>>, bevy::prelude::Query<'_, '_, &mut WheelMenuWedge<C>>), (), for<'a, 'b, 'c, 'd, 'e, 'f, 'g, 'h, 'i, 'j, 'k, 'l, 'm, 'n> fn(bevy::prelude::Query<'a, 'b, &'c leafwing_input_manager::action_state::ActionState<PlayerAction>, bevy::prelude::With<PlayerCharacter>>, bevy::prelude::Query<'d, 'e, (&'f WheelMenuCenter<C>, &'g geometry::coordinates::WindowPos, &'h bevy::prelude::Children)>, bevy::prelude::Query<'i, 'j, &'k geometry::coordinates::WindowPos, bevy::prelude::With<ui::cursor::Cursor>>, bevy::prelude::Query<'l, 'm, &'n mut WheelMenuWedge<C>>) -> Result<C, NoWheelSelection> {select_from_wheel_menu::<C>}>, <H as bevy::prelude::IntoSystem<Result<C, NoWheelSelection>, Out, Params>>::System>` to implement `IntoSystemDescriptor<_>`\r\n```\r\ntoday.\r\n\r\nRather than repeating the path (and lifetimes?) for each copy of the type, we could use the shortname in the body of the error message, and then expand the full type below.\r\n\r\nThis would make it significantly easier to read / parse challenging error messages, as the noise would be moved out of the error message body (without losing the full information needed in case the exact path is relevant).", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/103853/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/103853/timeline", "performed_via_github_app": null, "state_reason": null}