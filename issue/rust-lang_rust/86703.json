{"url": "https://api.github.com/repos/rust-lang/rust/issues/86703", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/86703/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/86703/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/86703/events", "html_url": "https://github.com/rust-lang/rust/issues/86703", "id": 932047249, "node_id": "MDU6SXNzdWU5MzIwNDcyNDk=", "number": 86703, "title": "ICE: OutputTypeParameterMismatch error under -Clink-dead-code", "user": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 26, "created_at": "2021-06-28T22:35:33Z", "updated_at": "2021-08-26T05:38:39Z", "closed_at": "2021-08-26T05:38:39Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\n-->\r\n\r\n### Code\r\n\r\n\r\nMust be compiled with `-C link-dead-code`\r\n\r\n<details><summary>Minimized test</summary>\r\n\r\n```rust\r\nuse std::rc::Rc;\r\nuse std::borrow::{Cow, ToOwned};\r\nuse std::{mem, ptr};\r\n\r\n\r\npub unsafe trait Yokeable<'a>: 'static {\r\n    type Output: 'a;\r\n}\r\n\r\npub struct Yoke<Y: for<'a> Yokeable<'a>, C> {\r\n    // must be the first field for drop order\r\n    // this will have a 'static lifetime parameter, that parameter is a lie\r\n    yokeable: Y,\r\n    cart: C,\r\n}\r\n\r\n\r\nimpl<Y: for<'a> Yokeable<'a>> Yoke<Y, Rc<[u8]>> {\r\n    pub fn project<'this, P>(\r\n        &'this self,\r\n        f: for<'a> fn(&'this <Y as Yokeable<'a>>::Output, &'a ()) -> <P as Yokeable<'a>>::Output,\r\n    ) -> Yoke<P, Rc<[u8]>>\r\n    where\r\n        P: for<'a> Yokeable<'a>,\r\n    {\r\n        unimplemented!()\r\n    }\r\n}\r\n\r\npub fn slice(y: Yoke<&'static str, Rc<[u8]>>) -> Yoke<&'static [u8], Rc<[u8]>> {\r\n    y.project(move |yk, _| yk.as_bytes())\r\n}\r\n\r\n\r\nunsafe impl<'a, T: 'static + ToOwned + ?Sized> Yokeable<'a> for Cow<'static, T>\r\nwhere\r\n    <T as ToOwned>::Owned: Sized,\r\n{\r\n    type Output = Cow<'a, T>;\r\n\r\n}\r\n\r\nunsafe impl<'a, T: 'static + ?Sized> Yokeable<'a> for &'static T {\r\n    type Output = &'a T;\r\n}\r\n```\r\n\r\n</details>\r\n\r\n<details><summary>Nonminimized original failure</summary>\r\n\r\nFor the nonminimized example, the tests under https://github.com/Manishearth/icu4x/blob/yoke-ice/utils/yoke/src/yoke.rs#L474-L551 fail when run under `-Clink-dead-code`\r\n\r\nSteps:\r\n - check out the `yoke-ice` branch of https://github.com/Manishearth/icu4x\r\n - `cd utils/yoke`\r\n - `RUSTDOCFLAGS=\"-Clink-dead-code\" cargo +nightly test`\r\n\r\nAdding code that makes use of the functions defined in these tests does not change anything, e.g. the function in the first test is not being called, but if you add code that calls it like below, the ICE still happens. I'm not sure as to what role `-Clink-dead-code` has here.\r\n\r\n```rust\r\nlet rc: Rc<[u8]> = Rc::from(\"hello\".as_bytes());\r\nlet yoke: Yoke<&'static str, Rc<[u8]>> = Yoke::attach_to_cart_badly(rc, |rc| std::str::from_utf8(&rc).unwrap());\r\n```\r\n\r\n</details>\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.55.0-nightly (e8cb1a4a5 2021-06-27)\r\nbinary: rustc\r\ncommit-hash: e8cb1a4a567ce88e459ffd431207eff2e0f0ffa5\r\ncommit-date: 2021-06-27\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.55.0-nightly\r\nLLVM version: 12.0.1\r\n\r\n```\r\n\r\n### Error output\r\n\r\n```\r\n---- src/yoke.rs - yoke::Yoke<Y, C>::project (line 500) stdout ----\r\nerror: internal compiler error: compiler/rustc_trait_selection/src/traits/codegen.rs:78:17: Encountered error `OutputTypeParameterMismatch(Binder(<[closure@src/yoke.rs:16:17: 16:38] as std::ops::FnMut<(&<main::_doctest_main_src_yoke_rs_500_0::Bar as yoke::Yokeable<'_>>::Output, &())>>, [Region(BrAnon(0))]), Binder(<[closure@src/yoke.rs:16:17: 16:38] as std::ops::FnMut<(&main::_doctest_main_src_yoke_rs_500_0::Bar, &())>>, []), Sorts(ExpectedFound { expected: main::_doctest_main_src_yoke_rs_500_0::Bar, found: <main::_doctest_main_src_yoke_rs_500_0::Bar as yoke::Yokeable<'_>>::Output }))` selecting `Binder(<[closure@src/yoke.rs:16:17: 16:38] as std::ops::FnMut<(&main::_doctest_main_src_yoke_rs_500_0::Bar, &())>>, [])` during codegen\r\n\r\nthread 'rustc' panicked at 'Box<dyn Any>', compiler/rustc_errors/src/lib.rs:1007:9\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.55.0-nightly (e8cb1a4a5 2021-06-27) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C codegen-units=1 -C embed-bitcode=no -C link-dead-code --crate-type bin\r\n\r\nquery stack during panic:\r\n#0 [codegen_fulfill_obligation] checking if `std::ops::FnMut` fulfills its obligations\r\n#1 [resolve_instance] resolving instance `<[closure@src/yoke.rs:16:17: 16:38] as std::ops::FnMut<(&main::_doctest_main_src_yoke_rs_500_0::Bar, &())>>::call_mut`\r\nend of query stack\r\nerror: aborting due to previous error\r\n\r\n\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nstack backtrace:\r\n   0: std::panicking::begin_panic\r\n   1: std::panic::panic_any\r\n   2: rustc_errors::HandlerInner::bug\r\n   3: rustc_errors::Handler::bug\r\n   4: rustc_middle::ty::context::tls::with_opt\r\n   5: rustc_middle::util::bug::opt_span_bug_fmt\r\n   6: rustc_middle::util::bug::bug_fmt\r\n   7: rustc_infer::infer::InferCtxtBuilder::enter\r\n   8: rustc_trait_selection::traits::codegen::codegen_fulfill_obligation\r\n   9: rustc_query_system::query::plumbing::get_query_impl\r\n  10: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::codegen_fulfill_obligation\r\n  11: rustc_ty_utils::instance::inner_resolve_instance\r\n  12: rustc_ty_utils::instance::resolve_instance\r\n  13: rustc_query_system::query::plumbing::get_query_impl\r\n  14: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::resolve_instance\r\n  15: rustc_middle::ty::instance::Instance::resolve_opt_const_arg\r\n  16: rustc_middle::ty::instance::Instance::resolve\r\n  17: <rustc_mir::monomorphize::collector::MirNeighborCollector as rustc_middle::mir::visit::Visitor>::visit_terminator\r\n  18: rustc_mir::monomorphize::collector::collect_neighbours\r\n  19: rustc_mir::monomorphize::collector::collect_items_rec\r\n  20: rustc_mir::monomorphize::collector::collect_items_rec\r\n  21: rustc_session::utils::<impl rustc_session::session::Session>::time\r\n  22: rustc_mir::monomorphize::collector::collect_crate_mono_items\r\n  23: rustc_mir::monomorphize::partitioning::collect_and_partition_mono_items\r\n  24: rustc_query_system::query::plumbing::get_query_impl\r\n  25: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::collect_and_partition_mono_items\r\n  26: <rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::CodegenBackend>::codegen_crate\r\n  27: rustc_interface::passes::QueryContext::enter\r\n  28: rustc_interface::queries::Queries::ongoing_codegen\r\n  29: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n  30: rustc_span::with_source_map\r\n  31: rustc_interface::interface::create_compiler_and_run\r\n  32: scoped_tls::ScopedKey<T>::set\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "jackh726", "id": 31162821, "node_id": "MDQ6VXNlcjMxMTYyODIx", "avatar_url": "https://avatars.githubusercontent.com/u/31162821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackh726", "html_url": "https://github.com/jackh726", "followers_url": "https://api.github.com/users/jackh726/followers", "following_url": "https://api.github.com/users/jackh726/following{/other_user}", "gists_url": "https://api.github.com/users/jackh726/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackh726/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackh726/subscriptions", "organizations_url": "https://api.github.com/users/jackh726/orgs", "repos_url": "https://api.github.com/users/jackh726/repos", "events_url": "https://api.github.com/users/jackh726/events{/privacy}", "received_events_url": "https://api.github.com/users/jackh726/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/86703/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/86703/timeline", "performed_via_github_app": null, "state_reason": "completed"}