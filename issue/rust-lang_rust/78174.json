{"url": "https://api.github.com/repos/rust-lang/rust/issues/78174", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/78174/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/78174/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/78174/events", "html_url": "https://github.com/rust-lang/rust/issues/78174", "id": 726069245, "node_id": "MDU6SXNzdWU3MjYwNjkyNDU=", "number": 78174, "title": "ICE: \"cannot convert `ReErased` to a region vid\" for `let const { \"foo\" } = \"foo\"`", "user": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}, {"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 171502053, "node_id": "MDU6TGFiZWwxNzE1MDIwNTM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-borrow-checker", "name": "A-borrow-checker", "color": "f7e101", "default": false, "description": "Area: The borrow checker"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}, {"id": 2306075829, "node_id": "MDU6TGFiZWwyMzA2MDc1ODI5", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-inline_const", "name": "F-inline_const", "color": "f9c0cc", "default": false, "description": "Inline constants (aka: const blocks, const expressions, anonymous constants)"}], "state": "closed", "locked": false, "assignee": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 13, "created_at": "2020-10-21T02:06:02Z", "updated_at": "2021-11-09T23:15:55Z", "closed_at": "2021-11-09T23:15:55Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\nAbout as minimal of an example as it gets :)\r\n\r\n```rust\r\n#![allow(incomplete_features)]\r\n#![feature(inline_const)]\r\nfn main() {\r\n    let const { \"foo\" } = \"foo\";\r\n}\r\n```\r\n\r\n[playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=aad978f0eba5b537939f73acca35ecf4)\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n### Version\r\n\r\nOn the playground, so I don't think I can access the rest, but:\r\n\r\n`rustc 1.49.0-nightly (b1496c6e6 2020-10-18) running on x86_64-unknown-linux-gnu`\r\n\r\nThis is a nightly-only feature, so I can't test on stable or beta :)\r\n\r\n### Error output\r\n\r\n```\r\nerror: internal compiler error: compiler/rustc_mir/src/borrow_check/universal_regions.rs:768:36: cannot convert `ReErased` to a region vid\r\n\r\nthread 'rustc' panicked at 'Box<Any>', compiler/rustc_errors/src/lib.rs:945:9\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nstack backtrace:\r\n   0: std::panicking::begin_panic\r\n   1: rustc_errors::HandlerInner::bug\r\n   2: rustc_errors::Handler::bug\r\n   3: rustc_middle::util::bug::opt_span_bug_fmt::{{closure}}\r\n   4: rustc_middle::ty::context::tls::with_opt::{{closure}}\r\n   5: rustc_middle::ty::context::tls::with_opt\r\n   6: rustc_middle::util::bug::opt_span_bug_fmt\r\n   7: rustc_middle::util::bug::bug_fmt\r\n   8: rustc_mir::borrow_check::universal_regions::UniversalRegionIndices::to_region_vid::{{closure}}\r\n   9: rustc_mir::borrow_check::universal_regions::UniversalRegionIndices::to_region_vid\r\n  10: rustc_mir::borrow_check::universal_regions::UniversalRegionIndices::fold_to_region_vids::{{closure}}\r\n  11: rustc_middle::ty::structural_impls::<impl rustc_middle::ty::fold::TypeFoldable for &rustc_middle::ty::TyS>::super_fold_with\r\n  12: rustc_mir::borrow_check::universal_regions::UniversalRegions::new\r\n  13: rustc_mir::borrow_check::nll::replace_regions_in_mir\r\n  14: rustc_mir::borrow_check::do_mir_borrowck\r\n  15: rustc_infer::infer::InferCtxtBuilder::enter\r\n  16: rustc_mir::borrow_check::mir_borrowck\r\n  17: core::ops::function::FnOnce::call_once\r\n  18: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::mir_borrowck>::compute\r\n  19: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  20: rustc_data_structures::stack::ensure_sufficient_stack\r\n  21: rustc_query_system::query::plumbing::get_query_impl\r\n  22: rustc_query_system::query::plumbing::ensure_query_impl\r\n  23: rustc_mir::transform::mir_drops_elaborated_and_const_checked\r\n  24: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::mir_drops_elaborated_and_const_checked>::compute\r\n  25: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  26: rustc_middle::ty::query::plumbing::<impl rustc_query_system::query::QueryContext for rustc_middle::ty::context::TyCtxt>::start_query::{{closure}}::{{closure}}::{{closure}}\r\n  27: rustc_query_system::query::plumbing::get_query_impl\r\n  28: rustc_mir::transform::optimized_mir\r\n  29: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::optimized_mir>::compute\r\n  30: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  31: rustc_data_structures::stack::ensure_sufficient_stack\r\n  32: rustc_query_system::query::plumbing::get_query_impl\r\n  33: rustc_mir::interpret::eval_context::InterpCx<M>::load_mir\r\n  34: rustc_mir::const_eval::eval_queries::eval_to_allocation_raw_provider\r\n  35: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::eval_to_allocation_raw>::compute\r\n  36: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  37: rustc_data_structures::stack::ensure_sufficient_stack\r\n  38: rustc_query_system::query::plumbing::get_query_impl\r\n  39: rustc_mir::const_eval::eval_queries::eval_to_const_value_raw_provider\r\n  40: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::eval_to_const_value_raw>::compute\r\n  41: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  42: rustc_data_structures::stack::ensure_sufficient_stack\r\n  43: rustc_query_system::query::plumbing::get_query_impl\r\n  44: rustc_middle::mir::interpret::queries::<impl rustc_middle::ty::context::TyCtxt>::const_eval_global_id\r\n  45: rustc_middle::mir::interpret::queries::<impl rustc_middle::ty::context::TyCtxt>::const_eval_resolve\r\n  46: rustc_infer::infer::InferCtxt::const_eval_resolve\r\n  47: rustc_trait_selection::traits::const_evaluatable::is_const_evaluatable\r\n  48: rustc_trait_selection::traits::fulfill::FulfillProcessor::progress_changed_obligations\r\n  49: rustc_data_structures::obligation_forest::ObligationForest<O>::process_obligations\r\n  50: <rustc_trait_selection::traits::fulfill::FulfillmentContext as rustc_infer::traits::engine::TraitEngine>::select_where_possible\r\n  51: rustc_typeck::check::fn_ctxt::_impl::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::select_obligations_where_possible\r\n  52: rustc_infer::infer::InferCtxtBuilder::enter\r\n  53: rustc_typeck::check::typeck\r\n  54: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::typeck>::compute\r\n  55: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  56: rustc_data_structures::stack::ensure_sufficient_stack\r\n  57: rustc_query_system::query::plumbing::get_query_impl\r\n  58: rustc_query_system::query::plumbing::ensure_query_impl\r\n  59: rustc_typeck::check::typeck_item_bodies\r\n  60: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::typeck_item_bodies>::compute\r\n  61: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  62: rustc_data_structures::stack::ensure_sufficient_stack\r\n  63: rustc_query_system::query::plumbing::get_query_impl\r\n  64: rustc_typeck::check_crate\r\n  65: rustc_interface::passes::analysis\r\n  66: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::analysis>::compute\r\n  67: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  68: rustc_data_structures::stack::ensure_sufficient_stack\r\n  69: rustc_query_system::query::plumbing::get_query_impl\r\n  70: rustc_interface::passes::QueryContext::enter\r\n  71: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n  72: rustc_span::with_source_map\r\n  73: scoped_tls::ScopedKey<T>::set\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.49.0-nightly (b1496c6e6 2020-10-18) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C codegen-units=1 -C debuginfo=2 --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [mir_borrowck] borrow-checking `main::{constant#0}`\r\n#1 [mir_drops_elaborated_and_const_checked] elaborating drops for `main::{constant#0}`\r\n#2 [optimized_mir] optimizing MIR for `main::{constant#0}`\r\n#3 [eval_to_allocation_raw] const-evaluating + checking `main::{constant#0}`\r\n#4 [eval_to_const_value_raw] simplifying constant for the type system `main::{constant#0}`\r\n#5 [typeck] type-checking `main`\r\n#6 [typeck_item_bodies] type-checking all item bodies\r\n#7 [analysis] running analysis passes on this crate\r\nend of query stack\r\nerror: aborting due to previous error\r\n\r\nerror: could not compile `playground`\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"nbdd0121\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/78174/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/78174/timeline", "performed_via_github_app": null, "state_reason": "completed"}