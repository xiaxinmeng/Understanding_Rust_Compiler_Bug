{"url": "https://api.github.com/repos/rust-lang/rust/issues/64506", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/64506/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/64506/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/64506/events", "html_url": "https://github.com/rust-lang/rust/issues/64506", "id": 494020395, "node_id": "MDU6SXNzdWU0OTQwMjAzOTU=", "number": 64506, "title": "ICE when const evaluating UB", "user": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 900795185, "node_id": "MDU6TGFiZWw5MDA3OTUxODU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-eval", "name": "A-const-eval", "color": "f7e101", "default": false, "description": "Area: constant evaluation (mir interpretation)"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2019-09-16T12:32:04Z", "updated_at": "2019-10-14T19:45:46Z", "closed_at": "2019-10-14T19:45:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This ICEs on stable, probably since March 2018, but it requires the user to do UB in constants, so...\r\n\r\nI think a possible fix would be to enable validation in const eval (cc @RalfJung \t), though we should benchmark the perf considerations around that first. Alternatively we can just not ICE here and instead emit an error.\r\n\r\n```rust\r\n#[derive(Copy, Clone)]\r\npub struct ChildStdin {\r\n    inner: AnonPipe,\r\n}\r\n\r\n#[derive(Copy, Clone)]\r\nenum AnonPipe {}\r\n\r\nconst FOO: () = {\r\n    union Foo {\r\n        a: ChildStdin,\r\n        b: (),\r\n    }\r\n    let x = unsafe { Foo { b: () }.a };\r\n    let x = &x.inner;\r\n};\r\n\r\nfn main() {}\r\n\r\n```\r\n\r\n([Playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=61deca72fdd9f46ae61a1e5cfdcee9a9))\r\n\r\nErrors:\r\n\r\n```\r\n   Compiling playground v0.0.1 (/playground)\r\nwarning: field is never used: `inner`\r\n --> src/main.rs:3:5\r\n  |\r\n3 |     inner: AnonPipe,\r\n  |     ^^^^^^^^^^^^^^^\r\n  |\r\n  = note: #[warn(dead_code)] on by default\r\n\r\nwarning: constant item is never used: `FOO`\r\n  --> src/main.rs:9:1\r\n   |\r\n9  | / const FOO: () = {\r\n10 | |     union Foo {\r\n11 | |         a: ChildStdin,\r\n12 | |         b: (),\r\n...  |\r\n15 | |     let x = &x.inner;\r\n16 | | };\r\n   | |__^\r\n\r\nthread 'rustc' panicked at 'Tried to access field 0 of union with 0 fields', src/librustc_mir/interpret/place.rs:360:17\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.37.0 (eae3437df 2019-08-13) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C codegen-units=1 -C debuginfo=2 --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nerror: Could not compile `playground`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n\r\n```", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/64506/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/64506/timeline", "performed_via_github_app": null, "state_reason": "completed"}