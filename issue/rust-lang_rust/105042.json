{"url": "https://api.github.com/repos/rust-lang/rust/issues/105042", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/105042/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/105042/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/105042/events", "html_url": "https://github.com/rust-lang/rust/issues/105042", "id": 1467434838, "node_id": "I_kwDOAAsO6M5Xd0dW", "number": 105042, "title": "The same code, one errors the other passes fine <Rocket>", "user": {"login": "hannydevelop", "id": 62933980, "node_id": "MDQ6VXNlcjYyOTMzOTgw", "avatar_url": "https://avatars.githubusercontent.com/u/62933980?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hannydevelop", "html_url": "https://github.com/hannydevelop", "followers_url": "https://api.github.com/users/hannydevelop/followers", "following_url": "https://api.github.com/users/hannydevelop/following{/other_user}", "gists_url": "https://api.github.com/users/hannydevelop/gists{/gist_id}", "starred_url": "https://api.github.com/users/hannydevelop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hannydevelop/subscriptions", "organizations_url": "https://api.github.com/users/hannydevelop/orgs", "repos_url": "https://api.github.com/users/hannydevelop/repos", "events_url": "https://api.github.com/users/hannydevelop/events{/privacy}", "received_events_url": "https://api.github.com/users/hannydevelop/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1359848690, "node_id": "MDU6TGFiZWwxMzU5ODQ4Njkw", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-mcve", "name": "E-needs-mcve", "color": "02e10c", "default": false, "description": "Call for participation: This issue needs a Minimal Complete and Verifiable Example"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-11-29T04:30:10Z", "updated_at": "2023-01-08T22:47:28Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\nI have the same code, one runs the other returns an error. Here's the code that returns an error below:\r\n\r\n```Rust\r\n// Post request to create an invoice.\r\n#[post(\"/\", format = \"json\", data = \"<invoice>\")]\r\nasync fn invoice(invoice: Json<Invoice>) {\r\n    // let content = invoice.into_inner();\r\n    let hub = Sheets::new(\r\n        hyper::Client::builder().build(hyper_rustls::HttpsConnectorBuilder::new().with_native_roots().https_or_http().enable_http1().enable_http2().build()), \r\n        authenticate().await);\r\n\r\n    let invoice = invoice.into_inner();\r\n\r\n    let req = ValueRange {\r\n        major_dimension: None,\r\n        range: None,\r\n        values: Some(vec![vec![invoice.invoice_number, invoice.date, invoice.description, invoice.due_date, invoice.recurring, invoice.unit_cost, invoice.qty, invoice.amount, invoice.receiver_address, invoice.paid]]),\r\n    };\r\n\r\n    let result = hub.spreadsheets().values_append(req, \"1AziHoTYgpvsDLsdZ_28UjgypYWLWKCFfcLPUzLEXcaY\", \"A:Z\")\r\n             .value_input_option(\"USER_ENTERED\")\r\n             .doit().await;\r\n\r\n    match result {\r\n        Err(e) => match e {\r\n            // The Error enum provides details about what exactly happened.\r\n            // You can also just use its `Debug`, `Display` or `Error` traits\r\n            sError::HttpError(_)\r\n            | sError::Io(_)\r\n            | sError::MissingAPIKey\r\n            | sError::MissingToken(_)\r\n            | sError::Cancelled\r\n            | sError::UploadSizeLimitExceeded(_, _)\r\n            | sError::Failure(_)\r\n            | sError::BadRequest(_)\r\n            | sError::FieldClash(_)\r\n            | sError::JsonDecodeError(_, _) => println!(\"{}\", e),\r\n        },\r\n        Ok(res) => println!(\"file:{:?} was copied successfully\", res),\r\n    }\r\n}\r\n```\r\n\r\nHere's the one that passes:\r\n\r\n```rust\r\n// Post request to create an invoice.\r\n#[post(\"/\", format = \"json\", data = \"<invoice>\")]\r\n async fn invoice(invoice: Json<Invoice>) {\r\n     // let content = invoice.into_inner();\r\n     let hub = Sheets::new(\r\n         hyper::Client::builder().build(hyper_rustls::HttpsConnectorBuilder::new().with_native_roots().https_or_http().enable_http1().enable_http2().build()), \r\n         authenticate().await);\r\n\r\n         let invoice = invoice.into_inner();\r\n\r\n         let req = ValueRange {\r\n             major_dimension: None,\r\n             range: None,\r\n             values: Some(vec![vec![invoice.invoice_number, invoice.date, invoice.description, invoice.due_date, invoice.recurring, invoice.unit_cost, invoice.qty, invoice.amount, invoice.receiver_address, invoice.paid]]),\r\n         };\r\n\r\n     // write into spreadsheet\r\n     let result = hub.spreadsheets().values_append(req, \"1AziHoTYgpvsDLsdZ_28UjgypYWLWKCFfcLPUzLEXcaY\", \"A:Z\")\r\n     .value_input_option(\"USER_ENTERED\")\r\n     .doit().await;\r\n\r\n     match result {\r\n         Err(e) => match e {\r\n             // The Error enum provides details about what exactly happened.\r\n             // You can also just use its `Debug`, `Display` or `Error` traits\r\n             sError::HttpError(_)\r\n             | sError::Io(_)\r\n             | sError::MissingAPIKey\r\n             | sError::MissingToken(_)\r\n             | sError::Cancelled\r\n             | sError::UploadSizeLimitExceeded(_, _)\r\n             | sError::Failure(_)\r\n             | sError::BadRequest(_)\r\n             | sError::FieldClash(_)\r\n             | sError::JsonDecodeError(_, _) => println!(\"{}\", e),\r\n         },\r\n         Ok(res) => println!(\"file:{:?} was copied successfully\", res),\r\n     }\r\n }\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.67.0-nightly (42325c525 2022-11-11) running on aarch64-apple-darwin\r\n```\r\n\r\n### Error output\r\n\r\n```\r\n{ var: 422, kind: BrAnon(422, None) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 421, kind: BrAnon(421, None) })), []), BoringNoLocation), (Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 440, kind: BrAnon(440, None) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 439, kind: BrAnon(439, None) })), []), BoringNoLocation), (Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 438, kind: BrAnon(438, None) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 437, kind: BrAnon(437, None) })), []), BoringNoLocation), (Binder(OutlivesPredicate(impl std::future::Future<Output = rocket::outcome::Outcome<rocket::Response<'_>, rocket::http::Status, rocket::Data<'_>>>, ReLateBound(DebruijnIndex(1), BoundRegion { var: 5, kind: BrAnon(5, None) })), []), BoringNoLocation), (Binder(OutlivesPredicate(bytes::bytes::Vtable, ReLateBound(DebruijnIndex(1), BoundRegion { var: 12, kind: BrAnon(12, None) })), []), BoringNoLocation)], member_constraints: [] }, certainty: Proven, opaque_types: [], value: () } })', compiler/rustc_query_system/src/query/plumbing.rs:664:9\r\nstack backtrace:\r\n   0: _rust_begin_unwind\r\n   1: core::panicking::panic_fmt\r\n   2: rustc_query_system::query::plumbing::incremental_verify_ich_failed\r\n   3: rustc_query_system::query::plumbing::incremental_verify_ich::<rustc_query_impl::plumbing::QueryCtxt, rustc_middle::infer::canonical::Canonical<rustc_middle::ty::ParamEnvAnd<rustc_middle::traits::query::type_op::ProvePredicate>>, core::result::Result<&rustc_middle::infer::canonical::Canonical<rustc_middle::infer::canonical::QueryResponse<()>>, rustc_middle::traits::query::NoSolution>>\r\n   4: rustc_query_system::query::plumbing::try_load_from_disk_and_cache_in_memory::<rustc_query_impl::plumbing::QueryCtxt, rustc_middle::infer::canonical::Canonical<rustc_middle::ty::ParamEnvAnd<rustc_middle::traits::query::type_op::ProvePredicate>>, core::result::Result<&rustc_middle::infer::canonical::Canonical<rustc_middle::infer::canonical::QueryResponse<()>>, rustc_middle::traits::query::NoSolution>>\r\n   5: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::DefaultCache<rustc_middle::infer::canonical::Canonical<rustc_middle::ty::ParamEnvAnd<rustc_middle::traits::query::type_op::ProvePredicate>>, core::result::Result<&rustc_middle::infer::canonical::Canonical<rustc_middle::infer::canonical::QueryResponse<()>>, rustc_middle::traits::query::NoSolution>>>\r\n   6: rustc_query_system::query::plumbing::get_query::<rustc_query_impl::queries::type_op_prove_predicate, rustc_query_impl::plumbing::QueryCtxt>\r\n   7: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::type_op_prove_predicate\r\n   8: <rustc_middle::traits::query::type_op::ProvePredicate as rustc_trait_selection::traits::query::type_op::QueryTypeOp>::perform_query\r\n   9: <rustc_middle::traits::query::type_op::ProvePredicate as rustc_trait_selection::traits::query::type_op::QueryTypeOp>::fully_perform_into\r\n  10: <rustc_middle::ty::ParamEnvAnd<rustc_middle::traits::query::type_op::ProvePredicate> as rustc_trait_selection::traits::query::type_op::TypeOp>::fully_perform\r\n  11: <rustc_borrowck::type_check::TypeChecker>::prove_predicate\r\n  12: <rustc_borrowck::type_check::TypeChecker>::prove_trait_ref\r\n  13: <rustc_borrowck::type_check::TypeChecker>::check_rvalue\r\n  14: <rustc_borrowck::type_check::TypeChecker>::typeck_mir\r\n  15: rustc_borrowck::type_check::type_check\r\n  16: rustc_borrowck::nll::compute_regions\r\n  17: rustc_borrowck::do_mir_borrowck\r\n  18: rustc_borrowck::mir_borrowck\r\n  19: <rustc_borrowck::provide::{closure#0} as core::ops::function::FnOnce<(rustc_middle::ty::context::TyCtxt, rustc_span::def_id::LocalDefId)>>::call_once\r\n  20: rustc_query_system::query::plumbing::try_load_from_disk_and_cache_in_memory::<rustc_query_impl::plumbing::QueryCtxt, rustc_span::def_id::LocalDefId, &rustc_middle::mir::query::BorrowCheckResult>\r\n  21: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::DefaultCache<rustc_span::def_id::LocalDefId, &rustc_middle::mir::query::BorrowCheckResult>>\r\n  22: rustc_query_system::query::plumbing::get_query::<rustc_query_impl::queries::mir_borrowck, rustc_query_impl::plumbing::QueryCtxt>\r\n  23: <rustc_middle::ty::context::TyCtxt>::mir_borrowck_opt_const_arg\r\n  24: rustc_mir_transform::mir_drops_elaborated_and_const_checked\r\n  25: <rustc_middle::dep_graph::dep_node::DepKind as rustc_query_system::dep_graph::DepKind>::with_deps::<<rustc_query_system::dep_graph::graph::DepGraph<rustc_middle::dep_graph::dep_node::DepKind>>::with_task_impl<rustc_middle::ty::context::TyCtxt, rustc_middle::ty::WithOptConstParam<rustc_span::def_id::LocalDefId>, &rustc_data_structures::steal::Steal<rustc_middle::mir::Body>>::{closure#0}, &rustc_data_structures::steal::Steal<rustc_middle::mir::Body>>\r\n  26: <rustc_query_system::dep_graph::graph::DepGraph<rustc_middle::dep_graph::dep_node::DepKind>>::with_task::<rustc_middle::ty::context::TyCtxt, rustc_middle::ty::WithOptConstParam<rustc_span::def_id::LocalDefId>, &rustc_data_structures::steal::Steal<rustc_middle::mir::Body>>\r\n  27: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::DefaultCache<rustc_middle::ty::WithOptConstParam<rustc_span::def_id::LocalDefId>, &rustc_data_structures::steal::Steal<rustc_middle::mir::Body>>>\r\n  28: rustc_query_system::query::plumbing::get_query::<rustc_query_impl::queries::mir_drops_elaborated_and_const_checked, rustc_query_impl::plumbing::QueryCtxt>\r\n  29: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::mir_drops_elaborated_and_const_checked\r\n  30: rustc_mir_transform::optimized_mir\r\n  31: <rustc_query_system::dep_graph::graph::DepGraph<rustc_middle::dep_graph::dep_node::DepKind>>::with_task::<rustc_middle::ty::context::TyCtxt, rustc_span::def_id::DefId, &rustc_middle::mir::Body>\r\n  32: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::DefaultCache<rustc_span::def_id::DefId, &rustc_middle::mir::Body>>\r\n  33: rustc_query_system::query::plumbing::get_query::<rustc_query_impl::queries::optimized_mir, rustc_query_impl::plumbing::QueryCtxt>\r\n  34: <rustc_middle::ty::context::TyCtxt>::instance_mir\r\n  35: rustc_monomorphize::collector::collect_neighbours\r\n  36: rustc_monomorphize::collector::collect_items_rec\r\n  37: rustc_monomorphize::collector::collect_items_rec\r\n  38: rustc_monomorphize::collector::collect_items_rec\r\n  39: rustc_monomorphize::collector::collect_items_rec\r\n  40: rustc_monomorphize::collector::collect_items_rec\r\n  41: rustc_monomorphize::collector::collect_items_rec\r\n  42: rustc_monomorphize::collector::collect_items_rec\r\n  43: rustc_monomorphize::collector::collect_items_rec\r\n  44: rustc_monomorphize::collector::collect_items_rec\r\n  45: rustc_monomorphize::collector::collect_items_rec\r\n  46: rustc_monomorphize::collector::collect_items_rec\r\n  47: rustc_monomorphize::collector::collect_items_rec\r\n  48: rustc_monomorphize::collector::collect_items_rec\r\n  49: rustc_monomorphize::collector::collect_items_rec\r\n  50: rustc_monomorphize::collector::collect_items_rec\r\n  51: <core::panic::unwind_safe::AssertUnwindSafe<rustc_data_structures::sync::par_for_each_in<alloc::vec::Vec<rustc_middle::mir::mono::MonoItem>, rustc_monomorphize::collector::collect_crate_mono_items::{closure#1}::{closure#0}>::{closure#0}::{closure#0}> as core::ops::function::FnOnce<()>>::call_once\r\n  52: std::panicking::try::<(), core::panic::unwind_safe::AssertUnwindSafe<rustc_data_structures::sync::par_for_each_in<alloc::vec::Vec<rustc_middle::mir::mono::MonoItem>, rustc_monomorphize::collector::collect_crate_mono_items::{closure#1}::{closure#0}>::{closure#0}::{closure#0}>>\r\n  53: <rustc_session::session::Session>::time::<(), rustc_monomorphize::collector::collect_crate_mono_items::{closure#1}>\r\n  54: rustc_monomorphize::collector::collect_crate_mono_items\r\n  55: rustc_monomorphize::partitioning::collect_and_partition_mono_items\r\n  56: <rustc_query_system::dep_graph::graph::DepGraph<rustc_middle::dep_graph::dep_node::DepKind>>::with_task::<rustc_middle::ty::context::TyCtxt, (), (&std::collections::hash::set::HashSet<rustc_span::def_id::DefId, core::hash::BuildHasherDefault<rustc_hash::FxHasher>>, &[rustc_middle::mir::mono::CodegenUnit])>\r\n  57: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::DefaultCache<(), (&std::collections::hash::set::HashSet<rustc_span::def_id::DefId, core::hash::BuildHasherDefault<rustc_hash::FxHasher>>, &[rustc_middle::mir::mono::CodegenUnit])>>\r\n  58: rustc_query_system::query::plumbing::get_query::<rustc_query_impl::queries::collect_and_partition_mono_items, rustc_query_impl::plumbing::QueryCtxt>\r\n  59: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::collect_and_partition_mono_items\r\n  60: rustc_codegen_ssa::base::codegen_crate::<rustc_codegen_llvm::LlvmCodegenBackend>\r\n  61: <rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::CodegenBackend>::codegen_crate\r\n  62: <rustc_session::session::Session>::time::<alloc::boxed::Box<dyn core::any::Any>, rustc_interface::passes::start_codegen::{closure#0}>\r\n  63: rustc_interface::passes::start_codegen\r\n  64: <rustc_interface::passes::QueryContext>::enter::<<rustc_interface::queries::Queries>::ongoing_codegen::{closure#0}::{closure#0}, core::result::Result<alloc::boxed::Box<dyn core::any::Any>, rustc_errors::ErrorGuaranteed>>\r\n  65: <rustc_interface::queries::Queries>::ongoing_codegen\r\n  66: rustc_span::with_source_map::<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_interface::interface::run_compiler<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver::run_compiler::{closure#1}>::{closure#0}::{closure#1}>\r\n  67: <scoped_tls::ScopedKey<rustc_span::SessionGlobals>>::set::<rustc_interface::interface::run_compiler<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver::run_compiler::{closure#1}>::{closure#0}, core::result::Result<(), rustc_errors::ErrorGuaranteed>>\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.67.0-nightly (42325c525 2022-11-11) running on aarch64-apple-darwin\r\n\r\nnote: compiler flags: --crate-type bin -C embed-bitcode=no -C split-debuginfo=unpacked -C debuginfo=2 -C incremental=[REDACTED]\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [type_op_prove_predicate] evaluating `type_op_prove_predicate` `ProvePredicate { predicate: Binder(TraitPredicate(<core::pin::Pin<alloc::boxed::Box<impl core::future::future::Future<Output = rocket::outcome::Outcome<rocket::response::response::Response<'_>, rocket_http::status::Status, rocket::data::data::Data<'_>>>>> as core::ops::unsize::CoerceUnsized<core::pin::Pin<alloc::boxed::Box<dyn core::future::future::Future<Output = rocket::outcome::Outcome<rocket::response::response::Response<'a>, rocket_http::status::Status, rocket::data::data::Data<'b>>> + core::marker::Send>>>>, polarity:Positive), []) }`\r\n#1 [mir_borrowck] borrow-checking `<impl at src/main.rs:75:1: 75:50>::into_info::monomorphized_function`\r\n#2 [mir_drops_elaborated_and_const_checked] elaborating drops for `<impl at src/main.rs:75:1: 75:50>::into_info::monomorphized_function`\r\n#3 [optimized_mir] optimizing MIR for `<impl at src/main.rs:75:1: 75:50>::into_info::monomorphized_function`\r\n#4 [collect_and_partition_mono_items] collect_and_partition_mono_items\r\nend of query stack\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nstack backtrace:\r\n   0: _rust_begin_unwind\r\n   1: core::panicking::panic_fmt\r\n   2: rustc_query_system::query::plumbing::incremental_verify_ich_failed\r\n   3: rustc_query_system::query::plumbing::incremental_verify_ich::<rustc_query_impl::plumbing::QueryCtxt, rustc_middle::infer::canonical::Canonical<rustc_middle::ty::ParamEnvAnd<rustc_middle::traits::query::type_op::ProvePredicate>>, core::result::Result<&rustc_middle::infer::canonical::Canonical<rustc_middle::infer::canonical::QueryResponse<()>>, rustc_middle::traits::query::NoSolution>>\r\n   4: rustc_query_system::query::plumbing::try_load_from_disk_and_cache_in_memory::<rustc_query_impl::plumbing::QueryCtxt, rustc_middle::infer::canonical::Canonical<rustc_middle::ty::ParamEnvAnd<rustc_middle::traits::query::type_op::ProvePredicate>>, core::result::Result<&rustc_middle::infer::canonical::Canonical<rustc_middle::infer::canonical::QueryResponse<()>>, rustc_middle::traits::query::NoSolution>>\r\n   5: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::DefaultCache<rustc_middle::infer::canonical::Canonical<rustc_middle::ty::ParamEnvAnd<rustc_middle::traits::query::type_op::ProvePredicate>>, core::result::Result<&rustc_middle::infer::canonical::Canonical<rustc_middle::infer::canonical::QueryResponse<()>>, rustc_middle::traits::query::NoSolution>>>\r\n   6: rustc_query_system::query::plumbing::get_query::<rustc_query_impl::queries::type_op_prove_predicate, rustc_query_impl::plumbing::QueryCtxt>\r\n   7: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::type_op_prove_predicate\r\n   8: <rustc_middle::traits::query::type_op::ProvePredicate as rustc_trait_selection::traits::query::type_op::QueryTypeOp>::perform_query\r\n   9: <rustc_middle::traits::query::type_op::ProvePredicate as rustc_trait_selection::traits::query::type_op::QueryTypeOp>::fully_perform_into\r\n  10: <rustc_middle::ty::ParamEnvAnd<rustc_middle::traits::query::type_op::ProvePredicate> as rustc_trait_selection::traits::query::type_op::TypeOp>::fully_perform\r\n  11: <rustc_borrowck::type_check::TypeChecker>::prove_predicate\r\n  12: <rustc_borrowck::type_check::TypeChecker>::prove_trait_ref\r\n  13: <rustc_borrowck::type_check::TypeChecker>::check_rvalue\r\n  14: <rustc_borrowck::type_check::TypeChecker>::typeck_mir\r\n  15: rustc_borrowck::type_check::type_check\r\n  16: rustc_borrowck::nll::compute_regions\r\n  17: rustc_borrowck::do_mir_borrowck\r\n  18: rustc_borrowck::mir_borrowck\r\n  19: <rustc_borrowck::provide::{closure#0} as core::ops::function::FnOnce<(rustc_middle::ty::context::TyCtxt, rustc_span::def_id::LocalDefId)>>::call_once\r\n  20: <rustc_query_system::dep_graph::graph::DepGraph<rustc_middle::dep_graph::dep_node::DepKind>>::with_task::<rustc_middle::ty::context::TyCtxt, rustc_span::def_id::LocalDefId, &rustc_middle::mir::query::BorrowCheckResult>\r\n  21: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::DefaultCache<rustc_span::def_id::LocalDefId, &rustc_middle::mir::query::BorrowCheckResult>>\r\n  22: rustc_query_system::query::plumbing::get_query::<rustc_query_impl::queries::mir_borrowck, rustc_query_impl::plumbing::QueryCtxt>\r\n  23: <rustc_session::session::Session>::time::<(), rustc_interface::passes::analysis::{closure#2}>\r\n  24: rustc_interface::passes::analysis\r\n  25: <rustc_query_system::dep_graph::graph::DepGraph<rustc_middle::dep_graph::dep_node::DepKind>>::with_task::<rustc_middle::ty::context::TyCtxt, (), core::result::Result<(), rustc_errors::ErrorGuaranteed>>\r\n  26: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::DefaultCache<(), core::result::Result<(), rustc_errors::ErrorGuaranteed>>>\r\n  27: rustc_query_system::query::plumbing::get_query::<rustc_query_impl::queries::analysis, rustc_query_impl::plumbing::QueryCtxt>\r\n  28: <rustc_interface::passes::QueryContext>::enter::<rustc_driver::run_compiler::{closure#1}::{closure#2}::{closure#3}, core::result::Result<(), rustc_errors::ErrorGuaranteed>>\r\n  29: rustc_span::with_source_map::<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_interface::interface::run_compiler<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver::run_compiler::{closure#1}>::{closure#0}::{closure#1}>\r\n  30: <scoped_tls::ScopedKey<rustc_span::SessionGlobals>>::set::<rustc_interface::interface::run_compiler<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver::run_compiler::{closure#1}>::{closure#0}, core::result::Result<(), rustc_errors::ErrorGuaranteed>>\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.67.0-nightly (42325c525 2022-11-11) running on aarch64-apple-darwin\r\n\r\nnote: compiler flags: --crate-type bin -C embed-bitcode=no -C split-debuginfo=unpacked -C debuginfo=2 -C incremental=[REDACTED]\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [type_op_prove_predicate] evaluating `type_op_prove_predicate` `ProvePredicate { predicate: Binder(TraitPredicate(<core::pin::Pin<alloc::boxed::Box<impl core::future::future::Future<Output = rocket::outcome::Outcome<rocket::response::response::Response<'_>, rocket_http::status::Status, rocket::data::data::Data<'_>>>>> as core::ops::unsize::CoerceUnsized<core::pin::Pin<alloc::boxed::Box<dyn core::future::future::Future<Output = rocket::outcome::Outcome<rocket::response::response::Response<'a>, rocket_http::status::Status, rocket::data::data::Data<'b>>> + core::marker::Send>>>>, polarity:Positive), []) }`\r\n#1 [mir_borrowck] borrow-checking `<impl at src/main.rs:66:1: 66:50>::into_info::monomorphized_function`\r\n#2 [analysis] running analysis passes on this crate\r\nend of query stack\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/105042/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/105042/timeline", "performed_via_github_app": null, "state_reason": null}