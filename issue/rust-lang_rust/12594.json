{"url": "https://api.github.com/repos/rust-lang/rust/issues/12594", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/12594/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/12594/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/12594/events", "html_url": "https://github.com/rust-lang/rust/issues/12594", "id": 28398472, "node_id": "MDU6SXNzdWUyODM5ODQ3Mg==", "number": 12594, "title": "Better error message for matching against not-imported enum variant ", "user": {"login": "edwardw", "id": 454049, "node_id": "MDQ6VXNlcjQ1NDA0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/454049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwardw", "html_url": "https://github.com/edwardw", "followers_url": "https://api.github.com/users/edwardw/followers", "following_url": "https://api.github.com/users/edwardw/following{/other_user}", "gists_url": "https://api.github.com/users/edwardw/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwardw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwardw/subscriptions", "organizations_url": "https://api.github.com/users/edwardw/orgs", "repos_url": "https://api.github.com/users/edwardw/repos", "events_url": "https://api.github.com/users/edwardw/events{/privacy}", "received_events_url": "https://api.github.com/users/edwardw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-02-27T07:06:18Z", "updated_at": "2014-02-27T09:21:40Z", "closed_at": "2014-02-27T09:21:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "If only the enumeration type itself is imported but not its variants, a match expression reports unreachable pattern instead of unrecognised type:\n\n``` rust\npub mod inner {\n  pub enum E {\n    E1,\n    E2\n  }\n}\n\npub mod foo {\n  use inner::E; // change this to use inner::{E, E1, E2} then all will be fine\n\n  pub fn bar(e: E) -> int {\n    match e {\n      E1 => 0,\n      E2 => 1    // error: unreachable pattern\n    }\n  }\n}\n\npub fn main() {}\n```\n\nIs this something intentional? Or should we give it a more sensible error message? \n", "closed_by": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/12594/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/12594/timeline", "performed_via_github_app": null, "state_reason": "completed"}