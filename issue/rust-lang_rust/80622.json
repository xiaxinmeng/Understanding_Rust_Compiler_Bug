{"url": "https://api.github.com/repos/rust-lang/rust/issues/80622", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/80622/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/80622/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/80622/events", "html_url": "https://github.com/rust-lang/rust/issues/80622", "id": 777480741, "node_id": "MDU6SXNzdWU3Nzc0ODA3NDE=", "number": 80622, "title": "Multi dimensional array of Option<Structs> cause expontial increase in release compile times, up to a limit", "user": {"login": "NoSuchThingAsRandom", "id": 25939371, "node_id": "MDQ6VXNlcjI1OTM5Mzcx", "avatar_url": "https://avatars.githubusercontent.com/u/25939371?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NoSuchThingAsRandom", "html_url": "https://github.com/NoSuchThingAsRandom", "followers_url": "https://api.github.com/users/NoSuchThingAsRandom/followers", "following_url": "https://api.github.com/users/NoSuchThingAsRandom/following{/other_user}", "gists_url": "https://api.github.com/users/NoSuchThingAsRandom/gists{/gist_id}", "starred_url": "https://api.github.com/users/NoSuchThingAsRandom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NoSuchThingAsRandom/subscriptions", "organizations_url": "https://api.github.com/users/NoSuchThingAsRandom/orgs", "repos_url": "https://api.github.com/users/NoSuchThingAsRandom/repos", "events_url": "https://api.github.com/users/NoSuchThingAsRandom/events{/privacy}", "received_events_url": "https://api.github.com/users/NoSuchThingAsRandom/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 64037154, "node_id": "MDU6TGFiZWw2NDAzNzE1NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-compiletime", "name": "I-compiletime", "color": "e11d21", "default": false, "description": "Problems and improvements with respect to compile times."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-01-02T15:50:37Z", "updated_at": "2023-04-05T17:36:22Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->Using cargo build --release with a 3 dimensional array, causes exponential build times, up to a limit. \r\n\r\nThis occurs both on stable and nightly, and only gets worse with larger structs.\r\nHowever this does not occur on unoptimized builds.\r\n\r\nSome example release compile times:\r\n**Stable:**\r\n24 - ~1.95 secs\r\n32 - ~4.73 secs\r\n40 - ~10.86 secs\r\n50 - ~24.38 secs\r\n74 - ~1m 56 secs\r\n75 - ~0.33 secs\r\n\r\n**Nightly**:\r\n    50 - ~26.75 secs\r\n    75 - ~0.55 secs\r\nI tried this code:\r\n\r\n```rust\r\n// Changing this value, adjusts the compile time significantly\r\nconst ARRAY_SIZE: u16 = 32;\r\n\r\n#[derive(Copy, Clone)]\r\nstruct SomeStruct {\r\n    some_data: u16,\r\n}\r\n\r\npub fn main() {\r\n    let data: [[[Option<SomeStruct>; 3]; ARRAY_SIZE as usize]; ARRAY_SIZE as usize] = [[[None; 3]; ARRAY_SIZE as usize]; ARRAY_SIZE as usize];\r\n    // To make sure the array is actually built\r\n    let mut count = 0;\r\n    for _ in 0..10 {\r\n        let pos = (rand::random::<f64>() * (ARRAY_SIZE as f64)) as usize;\r\n        if data[pos][pos][0].is_some() {\r\n            count += 1;\r\n        }\r\n    }\r\n    println!(\"{}\", count);\r\n}\r\n```\r\n\r\nWhy does this occur, and is there a way of turning off the \"optimisation\" in release mode, as I have a larger project, and this causes a much bigger impact.\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.49.0 (e1884a8e3 2020-12-29)\r\nbinary: rustc\r\ncommit-hash: e1884a8e3c3e813aada8254edfa120e85bf5ffca\r\ncommit-date: 2020-12-29\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.49.0\r\n```\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/80622/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/80622/timeline", "performed_via_github_app": null, "state_reason": null}