{"url": "https://api.github.com/repos/rust-lang/rust/issues/82268", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/82268/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/82268/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/82268/events", "html_url": "https://github.com/rust-lang/rust/issues/82268", "id": 811338789, "node_id": "MDU6SXNzdWU4MTEzMzg3ODk=", "number": 82268, "title": "linker error with `feature(generic_const_exprs)`", "user": {"login": "e2-71828", "id": 26780705, "node_id": "MDQ6VXNlcjI2NzgwNzA1", "avatar_url": "https://avatars.githubusercontent.com/u/26780705?v=4", "gravatar_id": "", "url": "https://api.github.com/users/e2-71828", "html_url": "https://github.com/e2-71828", "followers_url": "https://api.github.com/users/e2-71828/followers", "following_url": "https://api.github.com/users/e2-71828/following{/other_user}", "gists_url": "https://api.github.com/users/e2-71828/gists{/gist_id}", "starred_url": "https://api.github.com/users/e2-71828/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/e2-71828/subscriptions", "organizations_url": "https://api.github.com/users/e2-71828/orgs", "repos_url": "https://api.github.com/users/e2-71828/repos", "events_url": "https://api.github.com/users/e2-71828/events{/privacy}", "received_events_url": "https://api.github.com/users/e2-71828/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1359848690, "node_id": "MDU6TGFiZWwxMzU5ODQ4Njkw", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-mcve", "name": "E-needs-mcve", "color": "02e10c", "default": false, "description": "Call for participation: This issue needs a Minimal Complete and Verifiable Example"}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}, {"id": 2341291797, "node_id": "MDU6TGFiZWwyMzQxMjkxNzk3", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-generic_const_exprs", "name": "F-generic_const_exprs", "color": "f9c0cc", "default": false, "description": "`#![feature(generic_const_exprs)]`"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2021-02-18T18:07:45Z", "updated_at": "2022-08-11T13:29:22Z", "closed_at": "2022-08-11T13:29:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "*edit: current minimal repro https://github.com/rust-lang/rust/issues/82268#issuecomment-1165530277*\r\n\r\n## Error Message\r\n\r\n```\r\n   Compiling playground v0.0.1 (/playground)\r\nwarning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\r\n --> src/main.rs:1:12\r\n  |\r\n1 | #![feature(const_generics, const_evaluatable_checked)]\r\n  |            ^^^^^^^^^^^^^^\r\n  |\r\n  = note: `#[warn(incomplete_features)]` on by default\r\n  = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\r\n\r\nwarning: the feature `const_evaluatable_checked` is incomplete and may not be safe to use and/or cause compiler crashes\r\n --> src/main.rs:1:28\r\n  |\r\n1 | #![feature(const_generics, const_evaluatable_checked)]\r\n  |                            ^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  |\r\n  = note: see issue #76560 <https://github.com/rust-lang/rust/issues/76560> for more information\r\n\r\nerror: internal compiler error: compiler/rustc_middle/src/ty/subst.rs:568:17: const parameter `MASK/#2` (Const { ty: u32, val: Param(MASK/#2) }/2) out of range when substituting substs=[]\r\n\r\nthread 'rustc' panicked at 'Box<Any>', /rustc/5fa22fe6f821ac3801d05f624b123dda25fde32c/library/std/src/panic.rs:59:5\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.52.0-nightly (5fa22fe6f 2021-02-14) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C codegen-units=1 -C debuginfo=2 --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [check_item_well_formed] checking that `<(H, T) as Collate<MASK>>` is well-formed\r\n#1 [analysis] running analysis passes on this crate\r\nend of query stack\r\nthread 'rustc' panicked at 'Box<Any>', /rustc/5fa22fe6f821ac3801d05f624b123dda25fde32c/library/std/src/panic.rs:59:5\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.52.0-nightly (5fa22fe6f 2021-02-14) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C codegen-units=1 -C debuginfo=2 --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [eval_to_allocation_raw] const-evaluating + checking `<(H, T) as Collate<MASK>>::{constant#0}`\r\n#1 [eval_to_const_value_raw] simplifying constant for the type system `<(H, T) as Collate<MASK>>::{constant#0}`\r\nend of query stack\r\nerror: aborting due to previous error; 2 warnings emitted\r\n\r\nerror: could not compile `playground`\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n\r\n## Code\r\n\r\n```\r\n#![feature(const_generics, const_evaluatable_checked)]\r\n\r\nstruct True;\r\nstruct False;\r\n\r\ntrait ConstBool {\r\n    type Val;\r\n}\r\nstruct TypeBool<const X: bool>;\r\n\r\nimpl ConstBool for TypeBool<true> {\r\n    type Val = True;\r\n}\r\n\r\nimpl ConstBool for TypeBool<false> {\r\n    type Val = False;\r\n}\r\n\r\ntrait Collate<const MASK: u32> {\r\n    type Pass;\r\n    type Fail;\r\n\r\n    fn collate(self) -> (Self::Pass, Self::Fail);\r\n}\r\n\r\nimpl<const MASK: u32> Collate<MASK> for () {\r\n    type Pass = ();\r\n    type Fail = ();\r\n\r\n    fn collate(self) -> ((), ()) {\r\n        ((), ())\r\n    }\r\n}\r\n\r\ntrait CollateStep<X, Prev> {\r\n    type Pass;\r\n    type Fail;\r\n    fn collate_step(x: X, prev: Prev) -> (Self::Pass, Self::Fail);\r\n}\r\n\r\nimpl<X, P, F> CollateStep<X, (P, F)> for TypeBool<true> {\r\n    type Pass = (X, P);\r\n    type Fail = F;\r\n\r\n    fn collate_step(x: X, (p, f): (P, F)) -> ((X, P), F) {\r\n        ((x, p), f)\r\n    }\r\n}\r\n\r\nimpl<X, P, F> CollateStep<X, (P, F)> for TypeBool<false> {\r\n    type Pass = P;\r\n    type Fail = (X, F);\r\n\r\n    fn collate_step(x: X, (p, f): (P, F)) -> (P, (X, F)) {\r\n        (p, (x, f))\r\n    }\r\n}\r\n\r\nimpl<H, T: Collate<{ MASK >> 1 }>, const MASK: u32> Collate<MASK> for (H, T)\r\nwhere\r\n    TypeBool<{ 1 == MASK & 1 }>: CollateStep<H, (T::Pass, T::Fail)>,\r\n{\r\n    type Pass =\r\n        <TypeBool<{ 1 == MASK & 1 }> as CollateStep<H, (T::Pass, T::Fail)>>::Pass;\r\n    type Fail =\r\n        <TypeBool<{ 1 == MASK & 1 }> as CollateStep<H, (T::Pass, T::Fail)>>::Fail;\r\n\r\n    fn collate(self) -> (Self::Pass, Self::Fail) {\r\n        <TypeBool<{ 1 == MASK & 1 }>\r\n         as CollateStep<H, (T::Pass, T::Fail)>>\r\n         ::collate_step(self.0, self.1.collate())\r\n    }\r\n}\r\n\r\nfn collate<X,const MASK:u32>(x:X)->(X::Pass, X::Fail)\r\nwhere X:Collate<MASK> {\r\n    x.collate()\r\n}\r\n\r\nfn main() {\r\n    dbg!(collate::<_,3>((4, ('!',()))));\r\n}\r\n```\r\n([Playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=405c97e46c71c0ab9749ef23bbdb04cb))", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/82268/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/82268/timeline", "performed_via_github_app": null, "state_reason": "completed"}