{"url": "https://api.github.com/repos/rust-lang/rust/issues/73419", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/73419/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/73419/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/73419/events", "html_url": "https://github.com/rust-lang/rust/issues/73419", "id": 639866982, "node_id": "MDU6SXNzdWU2Mzk4NjY5ODI=", "number": 73419, "title": "Using include! with filename ending in '>' causes failed assertion in libspan", "user": {"login": "LunarLambda", "id": 38919842, "node_id": "MDQ6VXNlcjM4OTE5ODQy", "avatar_url": "https://avatars.githubusercontent.com/u/38919842?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LunarLambda", "html_url": "https://github.com/LunarLambda", "followers_url": "https://api.github.com/users/LunarLambda/followers", "following_url": "https://api.github.com/users/LunarLambda/following{/other_user}", "gists_url": "https://api.github.com/users/LunarLambda/gists{/gist_id}", "starred_url": "https://api.github.com/users/LunarLambda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LunarLambda/subscriptions", "organizations_url": "https://api.github.com/users/LunarLambda/orgs", "repos_url": "https://api.github.com/users/LunarLambda/repos", "events_url": "https://api.github.com/users/LunarLambda/events{/privacy}", "received_events_url": "https://api.github.com/users/LunarLambda/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 60344715, "node_id": "MDU6TGFiZWw2MDM0NDcxNQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-medium", "name": "P-medium", "color": "eb6420", "default": false, "description": "Medium priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-16T18:00:50Z", "updated_at": "2020-06-16T23:15:00Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\nRequirement:\r\nCreate an empty file called '>', i.e. using `touch '>'`\r\n\r\n```Rust\r\ninclude!(\">\");\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.43.1 (8d69840ab 2020-05-04)\r\nbinary: rustc\r\ncommit-hash: 8d69840ab92ea7f4d323420088dd8c9775f180cd\r\ncommit-date: 2020-05-04\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.43.1\r\nLLVM version: 9.0\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nthread 'rustc' panicked at 'assertion failed: !p.to_string_lossy().ends_with('>')', src/librustc_span/lib.rs:125:9\r\n\r\nerror: internal compiler error: unexpected panic\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nstack backtrace:\r\n   0: backtrace::backtrace::libunwind::trace\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.44/src/backtrace/libunwind.rs:86\r\n   1: backtrace::backtrace::trace_unsynchronized\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.44/src/backtrace/mod.rs:66\r\n   2: std::sys_common::backtrace::_print_fmt\r\n             at src/libstd/sys_common/backtrace.rs:78\r\n   3: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt\r\n             at src/libstd/sys_common/backtrace.rs:59\r\n   4: core::fmt::write\r\n             at src/libcore/fmt/mod.rs:1063\r\n   5: std::io::Write::write_fmt\r\n             at src/libstd/io/mod.rs:1426\r\n   6: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:62\r\n   7: std::sys_common::backtrace::print\r\n             at src/libstd/sys_common/backtrace.rs:49\r\n   8: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/panicking.rs:204\r\n   9: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:224\r\n  10: rustc_driver::report_ice\r\n  11: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:474\r\n  12: std::panicking::begin_panic\r\n  13: <rustc_span::FileName as core::convert::From<std::path::PathBuf>>::from\r\n  14: rustc_span::source_map::SourceMap::load_file\r\n  15: rustc_parse::try_file_to_source_file\r\n  16: rustc_parse::new_sub_parser_from_file\r\n  17: rustc_builtin_macros::source_util::expand_include\r\n  18: <F as rustc_expand::base::TTMacroExpander>::expand\r\n  19: rustc_expand::expand::MacroExpander::fully_expand_fragment\r\n  20: rustc_expand::expand::MacroExpander::expand_crate\r\n  21: rustc_session::utils::<impl rustc_session::session::Session>::time\r\n  22: rustc_interface::passes::configure_and_expand_inner\r\n  23: rustc_interface::passes::configure_and_expand::{{closure}}\r\n  24: rustc_data_structures::box_region::PinnedGenerator<I,A,R>::new\r\n  25: rustc_interface::passes::configure_and_expand\r\n  26: rustc_interface::queries::Queries::expansion\r\n  27: rustc_interface::interface::run_compiler_in_existing_thread_pool\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/73419/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/73419/timeline", "performed_via_github_app": null, "state_reason": null}