{"url": "https://api.github.com/repos/rust-lang/rust/issues/75959", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/75959/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/75959/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/75959/events", "html_url": "https://github.com/rust-lang/rust/issues/75959", "id": 686639232, "node_id": "MDU6SXNzdWU2ODY2MzkyMzI=", "number": 75959, "title": "Transmute from one function pointer to another produces \"can't transmute zero-sized type\"", "user": {"login": "belkadan", "id": 742857, "node_id": "MDQ6VXNlcjc0Mjg1Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/742857?v=4", "gravatar_id": "", "url": "https://api.github.com/users/belkadan", "html_url": "https://github.com/belkadan", "followers_url": "https://api.github.com/users/belkadan/followers", "following_url": "https://api.github.com/users/belkadan/following{/other_user}", "gists_url": "https://api.github.com/users/belkadan/gists{/gist_id}", "starred_url": "https://api.github.com/users/belkadan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/belkadan/subscriptions", "organizations_url": "https://api.github.com/users/belkadan/orgs", "repos_url": "https://api.github.com/users/belkadan/repos", "events_url": "https://api.github.com/users/belkadan/events{/privacy}", "received_events_url": "https://api.github.com/users/belkadan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 2242906716, "node_id": "MDU6TGFiZWwyMjQyOTA2NzE2", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-raw-pointers", "name": "A-raw-pointers", "color": "f7e101", "default": false, "description": "Area: raw pointers, MaybeUninit, NonNull"}, {"id": 2408329107, "node_id": "MDU6TGFiZWwyNDA4MzI5MTA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-zst", "name": "A-zst", "color": "f7e101", "default": false, "description": "Area: Zero-sized types"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-08-26T21:30:16Z", "updated_at": "2023-04-05T17:31:42Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nCompiling the following cursed code:\r\n\r\n```rust\r\nuse std::ffi::CStr;\r\n\r\n#[repr(C)]\r\nstruct ObjCObject {\r\n  isa: isize\r\n}\r\n\r\n#[repr(transparent)]\r\n#[derive(Clone,Copy)]\r\nstruct Selector(*const u8);\r\n\r\n#[link(name = \"objc\")]\r\nextern \"C\" {\r\n  fn sel_registerName(name: *const u8) -> Selector;\r\n  fn objc_getClass(name: *const u8) -> Option<&'static ObjCObject>;\r\n  fn objc_msgSend(); // see below\r\n}\r\n\r\nfn main() {\r\n  #[link(name = \"Foundation\", kind = \"framework\")]\r\n  extern {}\r\n\r\n  unsafe {\r\n    let url_class = objc_getClass(\"NSURL\\0\".as_ptr()).unwrap();\r\n    let description_sel = sel_registerName(\"description\\0\".as_ptr());\r\n    let description_method = std::mem::transmute::<_, unsafe extern \"C\" fn(_, _) -> _>(objc_msgSend);\r\n    let description_obj: *const ObjCObject = description_method(url_class, description_sel);\r\n\r\n    let utf8_sel = sel_registerName(\"UTF8String\\0\".as_ptr());\r\n    let utf8_method = std::mem::transmute::<_, unsafe extern \"C\" fn(_, _) -> _>(objc_msgSend);\r\n    let utf8_ptr = utf8_method(description_obj, utf8_sel);\r\n    println!(\"{}\", CStr::from_ptr(utf8_ptr).to_string_lossy());\r\n  }\r\n}\r\n```\r\n\r\nProduces the following opaque error:\r\n\r\n```\r\nerror[E0591]: can't transmute zero-sized type\r\n  --> <anon>:26:30\r\n   |\r\n26 | ...hod = std::mem::transmute::<_, unsafe extern \"C\" fn(_, _) -> _>(objc_...\r\n   |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n   |\r\n   = note: source type: unsafe extern \"C\" fn() {objc_msgSend}\r\n   = note: target type: unsafe extern \"C\" fn(&ObjCObject, Selector) -> *const ObjCObject\r\n   = help: cast with `as` to a pointer instead\r\n```\r\n\r\nI'm not exactly sure why `transmute` won't let me go from one function pointer type to another, but even if that restriction remains, the error message could be more helpful. (My workaround was to use `as isize` before invoking `transmute`.)\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.47.0-nightly (5180f3da5 2020-08-23)\r\nbinary: rustc\r\ncommit-hash: 5180f3da5fd72627a8d38558ad1297df38793acd\r\ncommit-date: 2020-08-23\r\nhost: x86_64-apple-darwin\r\nrelease: 1.47.0-nightly\r\nLLVM version: 11.0\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/75959/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/75959/timeline", "performed_via_github_app": null, "state_reason": null}