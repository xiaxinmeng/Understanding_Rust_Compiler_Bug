{"url": "https://api.github.com/repos/rust-lang/rust/issues/21347", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/21347/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/21347/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/21347/events", "html_url": "https://github.com/rust-lang/rust/issues/21347", "id": 54686492, "node_id": "MDU6SXNzdWU1NDY4NjQ5Mg==", "number": 21347, "title": "mutably captured default int emits type inference error in closure", "user": {"login": "blaenk", "id": 84680, "node_id": "MDQ6VXNlcjg0Njgw", "avatar_url": "https://avatars.githubusercontent.com/u/84680?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blaenk", "html_url": "https://github.com/blaenk", "followers_url": "https://api.github.com/users/blaenk/followers", "following_url": "https://api.github.com/users/blaenk/following{/other_user}", "gists_url": "https://api.github.com/users/blaenk/gists{/gist_id}", "starred_url": "https://api.github.com/users/blaenk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blaenk/subscriptions", "organizations_url": "https://api.github.com/users/blaenk/orgs", "repos_url": "https://api.github.com/users/blaenk/repos", "events_url": "https://api.github.com/users/blaenk/events{/privacy}", "received_events_url": "https://api.github.com/users/blaenk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-01-18T05:08:51Z", "updated_at": "2015-01-18T05:11:47Z", "closed_at": "2015-01-18T05:11:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Really had no idea what to call this, feel free to change. As soon as I annotate the type of `i` when I create it or when I add to it, it works. I of course intended to annotate the type, but I did notice this and figured I'd post it in case it's not intentional.\n\n``` rust\nextern crate libc;\n\nfn main() {\n    fn f<F>(f: F) where F: FnMut(&str) {\n      let down = &f as *const _ as *mut libc::c_void;\n      let up = down as *mut F;\n      let s = \"lol what\";\n      unsafe { (*up)(s); }\n    }\n\n    let mut i = 3;\n\n    f(|&mut: data: &str| {\n        println!(\"data is: {}\", data);\n        i += 3;\n    });\n\n    println!(\"i is now: {}\", i);\n}\n```\n\nError:\n\n```\n<anon>:13:5: 13:6 error: unable to infer enough type information about `closure[<anon>:13:7: 16:6]`; type annotations required\n<anon>:13     f(|&mut: data: &str| {\n              ^\nerror: aborting due to previous error\nplaypen: application terminated with error code 101\n```\n\n[playpen](http://is.gd/mi7QaJ)\n", "closed_by": {"login": "Aatch", "id": 342416, "node_id": "MDQ6VXNlcjM0MjQxNg==", "avatar_url": "https://avatars.githubusercontent.com/u/342416?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aatch", "html_url": "https://github.com/Aatch", "followers_url": "https://api.github.com/users/Aatch/followers", "following_url": "https://api.github.com/users/Aatch/following{/other_user}", "gists_url": "https://api.github.com/users/Aatch/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aatch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aatch/subscriptions", "organizations_url": "https://api.github.com/users/Aatch/orgs", "repos_url": "https://api.github.com/users/Aatch/repos", "events_url": "https://api.github.com/users/Aatch/events{/privacy}", "received_events_url": "https://api.github.com/users/Aatch/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/21347/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/21347/timeline", "performed_via_github_app": null, "state_reason": "completed"}