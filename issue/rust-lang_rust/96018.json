{"url": "https://api.github.com/repos/rust-lang/rust/issues/96018", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/96018/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/96018/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/96018/events", "html_url": "https://github.com/rust-lang/rust/issues/96018", "id": 1203645505, "node_id": "I_kwDOAAsO6M5HvixB", "number": 96018, "title": "Regression w.r.t. lazy evaluation of cfg predicates", "user": {"login": "danielhenrymantilla", "id": 9920355, "node_id": "MDQ6VXNlcjk5MjAzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/9920355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danielhenrymantilla", "html_url": "https://github.com/danielhenrymantilla", "followers_url": "https://api.github.com/users/danielhenrymantilla/followers", "following_url": "https://api.github.com/users/danielhenrymantilla/following{/other_user}", "gists_url": "https://api.github.com/users/danielhenrymantilla/gists{/gist_id}", "starred_url": "https://api.github.com/users/danielhenrymantilla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danielhenrymantilla/subscriptions", "organizations_url": "https://api.github.com/users/danielhenrymantilla/orgs", "repos_url": "https://api.github.com/users/danielhenrymantilla/repos", "events_url": "https://api.github.com/users/danielhenrymantilla/events{/privacy}", "received_events_url": "https://api.github.com/users/danielhenrymantilla/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 262252628, "node_id": "MDU6TGFiZWwyNjIyNTI2Mjg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-beta", "name": "regression-from-stable-to-beta", "color": "e4008a", "default": false, "description": "Performance or correctness regression from stable to beta."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/rust-lang/rust/milestones/92", "html_url": "https://github.com/rust-lang/rust/milestone/92", "labels_url": "https://api.github.com/repos/rust-lang/rust/milestones/92/labels", "id": 7695317, "node_id": "MI_kwDOAAsO6M4AdWvV", "number": 92, "title": "1.61.0", "description": "", "creator": {"login": "rustbot", "id": 47979223, "node_id": "MDQ6VXNlcjQ3OTc5MjIz", "avatar_url": "https://avatars.githubusercontent.com/u/47979223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rustbot", "html_url": "https://github.com/rustbot", "followers_url": "https://api.github.com/users/rustbot/followers", "following_url": "https://api.github.com/users/rustbot/following{/other_user}", "gists_url": "https://api.github.com/users/rustbot/gists{/gist_id}", "starred_url": "https://api.github.com/users/rustbot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rustbot/subscriptions", "organizations_url": "https://api.github.com/users/rustbot/orgs", "repos_url": "https://api.github.com/users/rustbot/repos", "events_url": "https://api.github.com/users/rustbot/events{/privacy}", "received_events_url": "https://api.github.com/users/rustbot/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 754, "state": "closed", "created_at": "2022-02-19T22:39:16Z", "updated_at": "2022-06-17T15:38:36Z", "due_on": null, "closed_at": "2022-06-17T15:38:36Z"}, "comments": 5, "created_at": "2022-04-13T18:30:21Z", "updated_at": "2022-04-20T11:40:43Z", "closed_at": "2022-04-20T11:40:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a regression report! \ud83d\udc1b A regression is something that changed between versions of Rust but was not supposed to.\r\n\r\nPlease provide a short summary of the regression, along with any information you feel is relevant to replicate it.\r\n-->\r\n\r\n### Code\r\n\r\nI tried this code:\r\n\r\n```rust\r\n#[cfg(any(all(), __super_useful_macro_rules_hack = 42))]\r\nfn main ()\r\n{}\r\n```\r\n\r\nI expected to see this happen: code compiles fine, since the previous cfg resolves to `true`, short-circuiting the `any` until it reaches `__super_useful_macro_rules_hack = 42`\r\n\r\nInstead, this happened: on a non-stable Rust compiler, these last attributes are nonetheless evaluated, and the compiler triggers an error for code that otherwise compiles fine.\r\n\r\n### Version it worked on\r\n\r\n<!--\r\nProvide the most recent version this worked on, for example:\r\n\r\nIt most recently worked on: Rust 1.47\r\n-->\r\n\r\nIt most recently worked on: Rust `1.60.0`\r\n\r\n### Version with regression\r\n\r\n<!--\r\nProvide the version you are using that has the regression.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\n1.61.0-beta.2\r\n2022-04-09 7c13df853721b60a03e7\r\n```\r\n\r\n<!--\r\nDid the compiler crash? If so, please provide a backtrace.\r\n-->\r\n\r\n### Backtrace\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary>Backtrace</summary>\r\n<p>\r\n\r\n```\r\n<backtrace>\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n<!--\r\nIf you know when this regression occurred, please add a line like below, replacing `{channel}` with one of stable, beta, or nightly.\r\n\r\n@rustbot modify labels: +regression-from-stable-to-{channel} -regression-untriaged\r\n-->\r\n\r\n@rustbot modify labels: +regression-from-stable-to-beta -regression-untriaged\r\n\r\n___\r\n\r\nI suspect this has to do with https://github.com/rust-lang/rust/pull/94175#issuecomment-1048735002 (cc @Urgau)\r\n\r\n### Why that code\r\n\r\nThis pattern is an incredibly useful trick for `macro_rules!` authors, at least until we get something like empty captures or other operators.\r\n\r\nWhen using `$( \u2026 )*` and `$( \u2026 )?` Kleene operators, the metavar guiding that repetition count needs to be inside those parenthesis. But sometimes we have no use for the metavariable.\r\n\r\nWhen the metavariable is of kind `:literal`, lazily unchecked `cfg`s are an incredibly convenient place to smuggle those:\r\n\r\nhttps://github.com/getditto/safer_ffi/blob/277f3e7b9c382532a7b2bb5499d296a8d78b6d8e/src/ffi_export.rs#L137-L138", "closed_by": {"login": "danielhenrymantilla", "id": 9920355, "node_id": "MDQ6VXNlcjk5MjAzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/9920355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danielhenrymantilla", "html_url": "https://github.com/danielhenrymantilla", "followers_url": "https://api.github.com/users/danielhenrymantilla/followers", "following_url": "https://api.github.com/users/danielhenrymantilla/following{/other_user}", "gists_url": "https://api.github.com/users/danielhenrymantilla/gists{/gist_id}", "starred_url": "https://api.github.com/users/danielhenrymantilla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danielhenrymantilla/subscriptions", "organizations_url": "https://api.github.com/users/danielhenrymantilla/orgs", "repos_url": "https://api.github.com/users/danielhenrymantilla/repos", "events_url": "https://api.github.com/users/danielhenrymantilla/events{/privacy}", "received_events_url": "https://api.github.com/users/danielhenrymantilla/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/96018/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/96018/timeline", "performed_via_github_app": null, "state_reason": "completed"}