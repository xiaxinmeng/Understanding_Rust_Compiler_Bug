{"url": "https://api.github.com/repos/rust-lang/rust/issues/66851", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/66851/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/66851/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/66851/events", "html_url": "https://github.com/rust-lang/rust/issues/66851", "id": 530078801, "node_id": "MDU6SXNzdWU1MzAwNzg4MDE=", "number": 66851, "title": "Miscompilation with recent Nightlies", "user": {"login": "leonardo-m", "id": 22328461, "node_id": "MDQ6VXNlcjIyMzI4NDYx", "avatar_url": "https://avatars.githubusercontent.com/u/22328461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leonardo-m", "html_url": "https://github.com/leonardo-m", "followers_url": "https://api.github.com/users/leonardo-m/followers", "following_url": "https://api.github.com/users/leonardo-m/following{/other_user}", "gists_url": "https://api.github.com/users/leonardo-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/leonardo-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leonardo-m/subscriptions", "organizations_url": "https://api.github.com/users/leonardo-m/orgs", "repos_url": "https://api.github.com/users/leonardo-m/repos", "events_url": "https://api.github.com/users/leonardo-m/events{/privacy}", "received_events_url": "https://api.github.com/users/leonardo-m/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 267612997, "node_id": "MDU6TGFiZWwyNjc2MTI5OTc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-unsound", "name": "I-unsound", "color": "e11d21", "default": false, "description": "Issue: A soundness hole (worst kind of bug), see: https://en.wikipedia.org/wiki/Soundness"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1050784470, "node_id": "MDU6TGFiZWwxMDUwNzg0NDcw", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-bisection", "name": "E-needs-bisection", "color": "02e10c", "default": false, "description": "Call for participation: This issue needs bisection: https://github.com/rust-lang/cargo-bisect-rustc"}, {"id": 1359848690, "node_id": "MDU6TGFiZWwxMzU5ODQ4Njkw", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-mcve", "name": "E-needs-mcve", "color": "02e10c", "default": false, "description": "Call for participation: This issue needs a Minimal Complete and Verifiable Example"}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}], "state": "closed", "locked": false, "assignee": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2019-11-28T21:22:46Z", "updated_at": "2019-12-01T03:37:53Z", "closed_at": "2019-12-01T03:37:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Since few Rustc nightly versions I see a miscompilation problem with the code below.\r\nI am using:\r\n\r\n```\r\nrustc 1.41.0-nightly (e87a205c2 2019-11-27)\r\nbinary: rustc\r\ncommit-hash: e87a205c2e117d9fb57f6cdeac0a7f6e95c88316\r\ncommit-date: 2019-11-27\r\nhost: x86_64-pc-windows-gnu\r\nrelease: 1.41.0-nightly\r\nLLVM version: 9.0\r\n```\r\n\r\nIf I compile with:\r\n\r\n```\r\n-C opt-level=1 -Z mir-opt-level=1   ==> OK\r\n-C opt-level=0 -Z mir-opt-level=2   ==> OK\r\n-C opt-level=1 -Z mir-opt-level=2   ==> Runtime error\r\n```\r\n\r\nThe code:\r\n\r\n```\r\n#[cfg(debug_assertions)]\r\nuse std::convert::TryFrom;\r\n\r\n#[cfg(not(debug_assertions))]\r\nmacro_rules! to { ($e:expr, $t:ident) => (($e) as $t) }\r\n\r\n#[cfg(debug_assertions)]\r\nmacro_rules! to { ($e:expr, $t:ident) => ($t::try_from($e).unwrap()) }\r\n\r\nfn e103() -> Option<u64> {\r\n    const TARGET: i32 = 7;\r\n    const MAX_COST: i32 = 1 << 12;\r\n    const MAX_COST_U: usize = MAX_COST as _;\r\n\r\n    type TSubsets = [i32; 1 << TARGET];\r\n    type TOccupancy = [bool; MAX_COST_U];\r\n    type TMaxMin = [[i32; 2]; 16];\r\n\r\n    enum SpecialsRes { Res(u64), Val(i32), Err }\r\n\r\n    fn specials(len: i32,\r\n                max_min: &mut TMaxMin,\r\n                mut cost_ceiling: i32,\r\n                vmax: i32,\r\n                ix: i32,\r\n                occupancy: &mut TOccupancy,\r\n                subsets: &mut TSubsets) -> SpecialsRes {\r\n        if ix == len || ix < 0 {\r\n            let mut result = String::new();\r\n            for i in (0 .. ix).rev() {\r\n                result += &subsets[1 << i].to_string();\r\n            }\r\n            return if let Ok(r) = result.parse() {\r\n                SpecialsRes::Res(r)\r\n            } else {\r\n                SpecialsRes::Err\r\n            };\r\n        }\r\n\r\n        let mut lo_val: i32 = 0;\r\n        let mut hi_val = vmax;\r\n\r\n        for i in 0 .. ix {\r\n            lo_val = lo_val.max(max_min[to!{i, usize} + 1][1] -\r\n                                max_min[to!{i, usize} + 1][0]);\r\n            hi_val = hi_val.min(max_min[to!{i, usize} + 2][0] -\r\n                                max_min[to!{i, usize}][1]);\r\n        }\r\n\r\n        let r = len - ix;\r\n        hi_val = hi_val.min(cost_ceiling - lo_val * r - r * (r + 1) / 2);\r\n\r\n        let mut v = lo_val + (len - ix);\r\n        while v < hi_val {\r\n            let mut res = true;\r\n            let pl = 1 << ix;\r\n            let mut marked: i32 = 0;\r\n\r\n            for i in 0 .. pl {\r\n                let s = subsets[i] + v;\r\n                if occupancy[to!{s, usize}] {\r\n                    res = false;\r\n                    break;\r\n                }\r\n                subsets[pl + i] = s;\r\n                occupancy[to!{s, usize}] = true;\r\n                marked += 1;\r\n            }\r\n\r\n            if res {\r\n                let mut new_max_min: TMaxMin = Default::default();\r\n                new_max_min[to!{ix, usize} + 2][0] = std::i32::MAX;\r\n\r\n                for i in 1 .. ix + 2 {\r\n                    new_max_min[to!{i, usize}][0] = max_min[to!{i, usize}][0]\r\n                                                    .min(v + max_min[to!{i, usize} - 1][0]);\r\n                    new_max_min[to!{i, usize}][1] = max_min[to!{i, usize}][1]\r\n                                                    .max(v + max_min[to!{i, usize} - 1][1]);\r\n                }\r\n\r\n                let res = specials(len,\r\n                                   &mut new_max_min,\r\n                                   cost_ceiling - v,\r\n                                   v,\r\n                                   ix + 1,\r\n                                   occupancy,\r\n                                   subsets);\r\n                match res {\r\n                    SpecialsRes::Res(_) | SpecialsRes::Err => return res,\r\n\r\n                    SpecialsRes::Val(val) => {\r\n                        let new_cost_ceiling = v + val;\r\n                        if new_cost_ceiling < cost_ceiling {\r\n                            cost_ceiling = new_cost_ceiling;\r\n                            hi_val = hi_val.min(cost_ceiling - lo_val * r - r * (r + 1) / 2);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            for i in 0 .. marked {\r\n                occupancy[to!{subsets[pl + to!{i, usize}], usize}] = false;\r\n            }\r\n\r\n            v += 1;\r\n        }\r\n\r\n        SpecialsRes::Val(cost_ceiling)\r\n    }\r\n\r\n    let mut occupancy: TOccupancy = [false; MAX_COST_U];\r\n    occupancy[0] = true;\r\n\r\n    let mut subsets: TSubsets = [0i32; 1 << TARGET as usize];\r\n\r\n    let mut max_min: TMaxMin = Default::default();\r\n    max_min[1][0] = std::i32::MAX;\r\n\r\n    match specials(TARGET, &mut max_min, MAX_COST,\r\n                   MAX_COST, 0, &mut occupancy, &mut subsets) {\r\n        SpecialsRes::Res(s) => Some(s),\r\n        SpecialsRes::Val(_) | SpecialsRes::Err => None,\r\n    }\r\n}\r\n\r\nfn main() {\r\n    assert_eq!(e103(), Some(20_313_839_404_245));\r\n}\r\n```", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/66851/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/66851/timeline", "performed_via_github_app": null, "state_reason": "completed"}