{"url": "https://api.github.com/repos/rust-lang/rust/issues/75957", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/75957/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/75957/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/75957/events", "html_url": "https://github.com/rust-lang/rust/issues/75957", "id": 686612110, "node_id": "MDU6SXNzdWU2ODY2MTIxMTA=", "number": 75957, "title": "Slow compilation caused by check_trait_item", "user": {"login": "brunowonka", "id": 8331817, "node_id": "MDQ6VXNlcjgzMzE4MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/8331817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brunowonka", "html_url": "https://github.com/brunowonka", "followers_url": "https://api.github.com/users/brunowonka/followers", "following_url": "https://api.github.com/users/brunowonka/following{/other_user}", "gists_url": "https://api.github.com/users/brunowonka/gists{/gist_id}", "starred_url": "https://api.github.com/users/brunowonka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brunowonka/subscriptions", "organizations_url": "https://api.github.com/users/brunowonka/orgs", "repos_url": "https://api.github.com/users/brunowonka/repos", "events_url": "https://api.github.com/users/brunowonka/events{/privacy}", "received_events_url": "https://api.github.com/users/brunowonka/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 64037154, "node_id": "MDU6TGFiZWw2NDAzNzE1NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-compiletime", "name": "I-compiletime", "color": "e11d21", "default": false, "description": "Problems and improvements with respect to compile times."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-08-26T20:58:53Z", "updated_at": "2020-11-05T23:29:08Z", "closed_at": "2020-11-05T23:29:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm seeing weirdly high compilation times with specifically tailored traits.\r\n\r\nIf I define a trait like so ([full-gist](https://gist.github.com/brunowonka/9ef512fe6e58df086ce72aff8040a6f1#file-main-rs)):\r\n\r\n```rust\r\nmacro_rules! assoc {\r\n    ($e : ident, $f :ident) => {\r\n        type $e: Send + Sync + std::fmt::Debug + std::fmt::Display;\r\n        fn $f ();\r\n    }\r\n}\r\n\r\n\r\ntrait FooTrait {\r\n    assoc!(A, get_a);\r\n    assoc!(B, get_b);\r\n    assoc!(C, get_c);\r\n    // ... \r\n    assoc!(Z, get_z);\r\n}\r\n```\r\n\r\nI get very high compilation times that are seemingly very sensitive to the number of bounds on the associated types and the number of pairs of `fn`+`type`.\r\n\r\nAt ~50 `fn+type` pairs and 4 type bounds it takes just over 1min to build with `rustc 1.47.0-nightly (e5e33ebd2 2020-08-11)`.\r\n\r\nSummarize output ([full-gist](https://gist.github.com/brunowonka/9ef512fe6e58df086ce72aff8040a6f1#file-summarize-result)) shows that most of the time spent is in `check_trait_item_well_formed`.\r\n```\r\n+--------------------------------------------------+-----------+-----------------+----------+------------+\r\n| Item                                             | Self time | % of total time | Time     | Item count |\r\n+--------------------------------------------------+-----------+-----------------+----------+------------+\r\n| check_trait_item_well_formed                     | 63.07s    | 97.565          | 63.10s   | 104        |\r\n+--------------------------------------------------+-----------+-----------------+----------+------------+\r\n| check_item_well_formed                           | 1.25s     | 1.938           | 1.26s    | 4          |\r\n+--------------------------------------------------+-----------+-----------------+----------+------------+\r\n| run_linker                                       | 194.61ms  | 0.301           | 194.61ms | 1          |\r\n```\r\n\r\nWeirdly enough, if we modify the macro to just generate the associated types or just generate the methods, we don't get the high compilation times.\r\n\r\nOriginally found this with a pattern where each `fn` returns one of the associated types: `fn get_a() -> Self::A`, which is how I stumbled upon the problem. Though it doesn't seem like the `fn`s need to reference the associated types to trigger it.\r\n\r\n", "closed_by": {"login": "brunowonka", "id": 8331817, "node_id": "MDQ6VXNlcjgzMzE4MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/8331817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brunowonka", "html_url": "https://github.com/brunowonka", "followers_url": "https://api.github.com/users/brunowonka/followers", "following_url": "https://api.github.com/users/brunowonka/following{/other_user}", "gists_url": "https://api.github.com/users/brunowonka/gists{/gist_id}", "starred_url": "https://api.github.com/users/brunowonka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brunowonka/subscriptions", "organizations_url": "https://api.github.com/users/brunowonka/orgs", "repos_url": "https://api.github.com/users/brunowonka/repos", "events_url": "https://api.github.com/users/brunowonka/events{/privacy}", "received_events_url": "https://api.github.com/users/brunowonka/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/75957/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/75957/timeline", "performed_via_github_app": null, "state_reason": "completed"}