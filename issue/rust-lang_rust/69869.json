{"url": "https://api.github.com/repos/rust-lang/rust/issues/69869", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/69869/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/69869/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/69869/events", "html_url": "https://github.com/rust-lang/rust/issues/69869", "id": 578207346, "node_id": "MDU6SXNzdWU1NzgyMDczNDY=", "number": 69869, "title": "Compiler selects invalid `--lldb-python` path", "user": {"login": "Dante-Broggi", "id": 34220985, "node_id": "MDQ6VXNlcjM0MjIwOTg1", "avatar_url": "https://avatars.githubusercontent.com/u/34220985?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dante-Broggi", "html_url": "https://github.com/Dante-Broggi", "followers_url": "https://api.github.com/users/Dante-Broggi/followers", "following_url": "https://api.github.com/users/Dante-Broggi/following{/other_user}", "gists_url": "https://api.github.com/users/Dante-Broggi/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dante-Broggi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dante-Broggi/subscriptions", "organizations_url": "https://api.github.com/users/Dante-Broggi/orgs", "repos_url": "https://api.github.com/users/Dante-Broggi/repos", "events_url": "https://api.github.com/users/Dante-Broggi/events{/privacy}", "received_events_url": "https://api.github.com/users/Dante-Broggi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-03-09T21:40:44Z", "updated_at": "2020-05-25T03:54:43Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\nFor my mac (macOS Mojave), the `--lldb-python` path is being set to `/usr/bin/python3`, which doesn't exist.\r\nFurthermore, `/usr/bin` is immutable, so I cannot simply symlink to `/usr/local/bin/python3`, the result of `which python3`.\r\n\r\nThis is causing the `debuginfo` test suite to fail.\r\n\r\n### Code\r\n\r\n```\r\n./x.py -i test src/test/debuginfo\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\nrust version:\r\nTop of `master`, specifically:\r\nhttps://github.com/rust-lang/rust/commit/3dbade652ed8ebac70f903e01f51cd92c4e4302c\r\n\r\n### Error output\r\n\r\n```\r\nrunning 115 tests\r\niFFFFFFFiFFFFFiFFFFFFFFFFFiFFFFiFFiiFFiFFiFFiiFiFFFFFFFFFFFFFiFiFiiFFFFFFFFiFFFFFiFiiFFFF.iFFFFiFFiF 100/115\r\nFFFFiiFiFFFFFFF\r\nfailures:\r\n\r\n---- [debuginfo-lldb] debuginfo/basic-types-globals-metadata.rs stdout ----\r\nNOTE: compiletest thinks it is using LLDB version 1100\r\nNOTE: compiletest thinks it is using LLDB without native rust support\r\n\r\nerror: Failed to setup Python process for LLDB script: No such file or directory (os error 2)\r\n[ERROR compiletest::runtest] fatal error, panic: \"Failed to setup Python process for LLDB script: No such file or directory (os error 2)\"\r\nthread 'main' panicked at 'fatal error', src/tools/compiletest/src/runtest.rs:2133:9\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n// \u2026\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nrunning 115 tests\r\niFFFFFFFiFFFFFiFFFFFFFFFFFiFFFFiFFiiFFiFFiFFiiFiFFFFFFFFFFFFFiFiFiiFFFFFFFFiFFFFFiFiiFFFF.iFFFFiFFiF 100/115\r\nFFFFiiFiFFFFFFF\r\nfailures:\r\n\r\n---- [debuginfo-lldb] debuginfo/basic-types-globals-metadata.rs stdout ----\r\nNOTE: compiletest thinks it is using LLDB version 1100\r\nNOTE: compiletest thinks it is using LLDB without native rust support\r\n\r\nerror: Failed to setup Python process for LLDB script: No such file or directory (os error 2)\r\n[ERROR compiletest::runtest] fatal error, panic: \"Failed to setup Python process for LLDB script: No such file or directory (os error 2)\"\r\nthread 'main' panicked at 'fatal error', src/tools/compiletest/src/runtest.rs:2133:9\r\nstack backtrace:\r\n   0: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt\r\n   1: core::fmt::write\r\n   2: std::io::Write::write_fmt\r\n   3: std::io::impls::<impl std::io::Write for alloc::boxed::Box<W>>::write_fmt\r\n   4: std::sys_common::backtrace::print\r\n   5: std::panicking::default_hook::{{closure}}\r\n   6: std::panicking::default_hook\r\n   7: std::panicking::rust_panic_with_hook\r\n   8: std::panicking::begin_panic\r\n   9: compiletest::runtest::TestCx::fatal\r\n  10: compiletest::runtest::TestCx::cmd2procres\r\n  11: compiletest::runtest::TestCx::run_revision\r\n  12: compiletest::runtest::run\r\n  13: core::ops::function::FnOnce::call_once{{vtable.shim}}\r\n  14: <alloc::boxed::Box<F> as core::ops::function::FnOnce<A>>::call_once\r\n  15: <alloc::boxed::Box<F> as core::ops::function::FnOnce<A>>::call_once\r\n  16: __rust_maybe_catch_panic\r\n  17: std::panicking::try\r\n  18: test::run_test_in_process\r\n  19: test::run_test::run_test_inner\r\n  20: test::run_test\r\n  21: test::run_tests\r\n  22: test::console::run_tests_console\r\n  23: compiletest::main\r\n  24: std::rt::lang_start::{{closure}}\r\n  25: std::panicking::try::do_call\r\n  26: __rust_maybe_catch_panic\r\n  27: std::panicking::try\r\n  28: std::rt::lang_start_internal\r\n  29: main\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/69869/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/69869/timeline", "performed_via_github_app": null, "state_reason": null}