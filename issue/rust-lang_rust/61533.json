{"url": "https://api.github.com/repos/rust-lang/rust/issues/61533", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/61533/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/61533/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/61533/events", "html_url": "https://github.com/rust-lang/rust/issues/61533", "id": 452286371, "node_id": "MDU6SXNzdWU0NTIyODYzNzE=", "number": 61533, "title": "Intrinsic for `type_name_of_id` to power a better `impl Debug for TypeId`?", "user": {"login": "anp", "id": 6812281, "node_id": "MDQ6VXNlcjY4MTIyODE=", "avatar_url": "https://avatars.githubusercontent.com/u/6812281?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anp", "html_url": "https://github.com/anp", "followers_url": "https://api.github.com/users/anp/followers", "following_url": "https://api.github.com/users/anp/following{/other_user}", "gists_url": "https://api.github.com/users/anp/gists{/gist_id}", "starred_url": "https://api.github.com/users/anp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anp/subscriptions", "organizations_url": "https://api.github.com/users/anp/orgs", "repos_url": "https://api.github.com/users/anp/repos", "events_url": "https://api.github.com/users/anp/events{/privacy}", "received_events_url": "https://api.github.com/users/anp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 1206122880, "node_id": "MDU6TGFiZWwxMjA2MTIyODgw", "url": "https://api.github.com/repos/rust-lang/rust/labels/needs-fcp", "name": "needs-fcp", "color": "fceb9f", "default": false, "description": "This change is insta-stable, so needs a completed FCP to proceed."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2019-06-05T02:23:18Z", "updated_at": "2022-04-09T15:55:42Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Currently `TypeId`s have uninformative derived `Debug` impls:\r\n\r\n```rust\r\nfn main() {\r\n    println!(\"{:?}\", std::any::TypeId::of::<usize>());\r\n}\r\n```\r\n\r\n```\r\n   Compiling playground v0.0.1 (/playground)\r\n    Finished dev [unoptimized + debuginfo] target(s) in 0.91s\r\n     Running `target/debug/playground`\r\nTypeId { t: 8766594652559642870 }\r\n```\r\n\r\nThis results in fairly poor Debug output for dynamic types like `anymap`.\r\n\r\nI think it could be quite nice for debugging/logging/etc to allow printing the type name from a `TypeId` in the Debug impl. It would provide an out of the box improvement to debugging existing dynamic typing tools, and IIUC the contents of Debug impls in the standard library are not considered stable so there's neither a breaking change here nor a de facto stabilization of the type_name representation.\r\n\r\nI assume this would need to rely on some unstable intrinsic being exposed to get the type_name of an ID at run time, but I'm not really aware what would be needed.\r\n\r\nThoughts? cc @oli-obk as we had discussed this a bit on IRC.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/61533/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/61533/timeline", "performed_via_github_app": null, "state_reason": null}