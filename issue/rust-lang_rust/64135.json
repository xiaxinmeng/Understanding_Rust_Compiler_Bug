{"url": "https://api.github.com/repos/rust-lang/rust/issues/64135", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/64135/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/64135/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/64135/events", "html_url": "https://github.com/rust-lang/rust/issues/64135", "id": 488854787, "node_id": "MDU6SXNzdWU0ODg4NTQ3ODc=", "number": 64135, "title": "E0507 E0009 should be mutually exclusive", "user": {"login": "Wolvereness", "id": 983111, "node_id": "MDQ6VXNlcjk4MzExMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/983111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Wolvereness", "html_url": "https://github.com/Wolvereness", "followers_url": "https://api.github.com/users/Wolvereness/followers", "following_url": "https://api.github.com/users/Wolvereness/following{/other_user}", "gists_url": "https://api.github.com/users/Wolvereness/gists{/gist_id}", "starred_url": "https://api.github.com/users/Wolvereness/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Wolvereness/subscriptions", "organizations_url": "https://api.github.com/users/Wolvereness/orgs", "repos_url": "https://api.github.com/users/Wolvereness/repos", "events_url": "https://api.github.com/users/Wolvereness/events{/privacy}", "received_events_url": "https://api.github.com/users/Wolvereness/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-03T22:33:02Z", "updated_at": "2020-02-17T13:51:10Z", "closed_at": "2020-02-17T13:51:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "E0507 E0009 should be mutually exclusive\r\n\r\n### E0009\r\n\r\n    cannot bind by-move and by-ref in the same pattern\r\n\r\n### E0507\r\n\r\n    cannot move out of borrowed content\r\n\r\n# Example\r\n\r\n[Playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=9f2f8562e3e24ff49c943fd86cc0ea5d)\r\n\r\n```rust\r\nfn main() {\r\n    Holder {\r\n        copy_type: 0,\r\n        almost_copy: AlmostCopy(42),\r\n        never_copy: \"Hello world\".to_string(),\r\n    }.func()\r\n}\r\n\r\n#[derive(Debug)]\r\nstruct AlmostCopy(usize);\r\n\r\n#[derive(Debug)]\r\nstruct Holder {\r\n    copy_type: usize,\r\n    almost_copy: AlmostCopy,\r\n    never_copy: String,\r\n}\r\n\r\nimpl Holder {\r\n    fn func(&self) {\r\n        let &Holder {\r\n            copy_type,\r\n            almost_copy,\r\n            ref never_copy,\r\n        } = self;\r\n        println!(\r\n            \"{}: {:?} -- {:?}\", \r\n            copy_type, \r\n            almost_copy, \r\n            never_copy,\r\n        );\r\n    }\r\n}\r\n```\r\n\r\n## Output\r\n\r\n```\r\n   Compiling playground v0.0.1 (/playground)\r\nerror[E0009]: cannot bind by-move and by-ref in the same pattern\r\n  --> src/main.rs:24:13\r\n   |\r\n24 |             almost_copy,\r\n   |             ^^^^^^^^^^^ by-move pattern here\r\n25 |             ref never_copy,\r\n   |             -------------- both by-ref and by-move used\r\n\r\nerror[E0507]: cannot move out of `self.almost_copy` which is behind a shared reference\r\n  --> src/main.rs:26:13\r\n   |\r\n24 |             almost_copy,\r\n   |             -----------\r\n   |             |\r\n   |             data moved here\r\n   |             move occurs because `almost_copy` has type `AlmostCopy`, which does not implement the `Copy` trait\r\n25 |             ref never_copy,\r\n26 |         } = self;\r\n   |             ^^^^\r\nhelp: consider removing the `&`\r\n   |\r\n22 |         let Holder {\r\n23 |             copy_type,\r\n24 |             almost_copy,\r\n25 |             ref never_copy,\r\n26 |         } = self;\r\n   |\r\n\r\nerror: aborting due to 2 previous errors\r\n\r\nSome errors have detailed explanations: E0009, E0507.\r\nFor more information about an error, try `rustc --explain E0009`.\r\nerror: Could not compile `playground`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n\r\n# Reasoning\r\n\r\nA situation where both trigger, `E0507` is a much more clear indication of something wrong in the code. In this example, the *intention* is that `AlmostCopy` implements `Copy`, and will subsequently trigger neither error. The presence of `E0009` is **misleading** when it doesn't include any mention of `Copy` without the click-through.", "closed_by": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/64135/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/64135/timeline", "performed_via_github_app": null, "state_reason": "completed"}