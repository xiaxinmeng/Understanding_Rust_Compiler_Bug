{"url": "https://api.github.com/repos/rust-lang/rust/issues/95080", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/95080/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/95080/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/95080/events", "html_url": "https://github.com/rust-lang/rust/issues/95080", "id": 1173768736, "node_id": "I_kwDOAAsO6M5F9kog", "number": 95080, "title": "Watch out for modules privacy when proposing traits to associate with an item", "user": {"login": "catenacyber", "id": 35799796, "node_id": "MDQ6VXNlcjM1Nzk5Nzk2", "avatar_url": "https://avatars.githubusercontent.com/u/35799796?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catenacyber", "html_url": "https://github.com/catenacyber", "followers_url": "https://api.github.com/users/catenacyber/followers", "following_url": "https://api.github.com/users/catenacyber/following{/other_user}", "gists_url": "https://api.github.com/users/catenacyber/gists{/gist_id}", "starred_url": "https://api.github.com/users/catenacyber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catenacyber/subscriptions", "organizations_url": "https://api.github.com/users/catenacyber/orgs", "repos_url": "https://api.github.com/users/catenacyber/repos", "events_url": "https://api.github.com/users/catenacyber/events{/privacy}", "received_events_url": "https://api.github.com/users/catenacyber/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 239393, "node_id": "MDU6TGFiZWwyMzkzOTM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-resolve", "name": "A-resolve", "color": "f7e101", "default": false, "description": "Area: Path resolution"}, {"id": 66893153, "node_id": "MDU6TGFiZWw2Njg5MzE1Mw==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-visibility", "name": "A-visibility", "color": "f7e101", "default": false, "description": "Area: visibility/privacy modifiers such as `pub`"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1183099971, "node_id": "MDU6TGFiZWwxMTgzMDk5OTcx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-suggestion-diagnostics", "name": "A-suggestion-diagnostics", "color": "f7e101", "default": false, "description": "Area: suggestions generated by the compiler applied by cargo fix"}, {"id": 1596299768, "node_id": "MDU6TGFiZWwxNTk2Mjk5NzY4", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-invalid-suggestion", "name": "D-invalid-suggestion", "color": "c9f7a3", "default": false, "description": "A structured suggestion resulting in incorrect code"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-03-18T16:14:26Z", "updated_at": "2022-06-02T12:29:01Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "Working on suricata https://github.com/OISF/suricata/pull/7150\r\n\r\nThe current output is:\r\n\r\n```\r\nerror[E0599]: no associated item named `MAX` found for type parameter `T` in the current scope\r\n   --> src/detect.rs:109:18\r\n    |\r\n109 |         x < <T>::MAX\r\n    |                  ^^^ associated item not found in `T`\r\n    |\r\n    = help: items from traits can only be used if the type parameter is bounded by the trait\r\nhelp: the following traits define an item `MAX`, perhaps you need to restrict type parameter `T` with one of them:\r\n    |\r\n104 | fn detect_parse_uint_start_greater<T: lexical_core::util::num::Float + std::str::FromStr>(i: &str) -> IResult<&str, DetectUintData<T>> {\r\n    |                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n104 | fn detect_parse_uint_start_greater<T: lexical_core::util::num::Integer + std::str::FromStr>(i: &str) -> IResult<&str, DetectUintData<T>> {\r\n```\r\n\r\nThis proposal looks interesting but when It tried it, I was disappointed :\r\n\r\n ```error[E0603]: module `util` is private\r\n   --> src/detect.rs:41:51\r\n    |\r\n41  | fn detect_parse_uint_start_equal<T: lexical_core::util::num::Integer>(i: &str) -> IResult<&str, DetectUintData<T>> {\r\n    |                                                   ^^^^ private module\r\n    |\r\nnote: the module `util` is defined here\r\n   --> /Users/catena/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs:189:1```\r\n\r\n```\r\n\r\n<!-- The following is not always necessary. -->\r\nIdeally the output should look like:\r\n\r\n```\r\n\"the following traits define an item `MAX`, you could restrict the type parameter,  but it is private so you can't\"?\r\n```\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/95080/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/95080/timeline", "performed_via_github_app": null, "state_reason": null}