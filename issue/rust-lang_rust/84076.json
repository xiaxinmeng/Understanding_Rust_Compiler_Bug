{"url": "https://api.github.com/repos/rust-lang/rust/issues/84076", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/84076/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/84076/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/84076/events", "html_url": "https://github.com/rust-lang/rust/issues/84076", "id": 855177223, "node_id": "MDU6SXNzdWU4NTUxNzcyMjM=", "number": 84076, "title": "bootstrap: in-tree rustfmt fails to compile in extended tools build", "user": {"login": "aswild", "id": 11742669, "node_id": "MDQ6VXNlcjExNzQyNjY5", "avatar_url": "https://avatars.githubusercontent.com/u/11742669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aswild", "html_url": "https://github.com/aswild", "followers_url": "https://api.github.com/users/aswild/followers", "following_url": "https://api.github.com/users/aswild/following{/other_user}", "gists_url": "https://api.github.com/users/aswild/gists{/gist_id}", "starred_url": "https://api.github.com/users/aswild/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aswild/subscriptions", "organizations_url": "https://api.github.com/users/aswild/orgs", "repos_url": "https://api.github.com/users/aswild/repos", "events_url": "https://api.github.com/users/aswild/events{/privacy}", "received_events_url": "https://api.github.com/users/aswild/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-04-10T23:30:19Z", "updated_at": "2021-04-10T23:52:04Z", "closed_at": "2021-04-10T23:52:04Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "rustc-ap-rustc_span fails as part of the rustfmt build when `extended = true` in config.toml. It looks like rustc-ap-rustc_span version 705.0.0 uses the unstable Option::expect_none method, but it gets compiled with the stage0 compiler that doesn't support it.\r\n\r\nSeen with today's rust master branch (rev a836d9b6413d9d593be6c09463ff8c4c70e56599), which includes rustfmt rev 7de6968ee22696b7feb6b477a05656de89275291 via git submodule. Reproduced on both Arch Linux (where I have rustup installed for my user), and in a clean debian:buster Docker container that has no existing Rust installation.\r\n\r\n```diff\r\ndiff -u config.toml.example config.toml\r\n--- config.toml.example\r\n+++ config.toml\r\n@@ -262,13 +262,14 @@\r\n # which are used to install Rust and Cargo together. This is disabled by\r\n # default. The `tools` option (immediately below) specifies which tools should\r\n # be built if `extended = true`.\r\n-#extended = false\r\n+extended = true\r\n \r\n # Installs chosen set of extended tools if `extended = true`. By default builds\r\n # all extended tools except `rust-demangler`, unless the target is also being\r\n # built with `profiler = true`. If chosen tool failed to build the installation\r\n # fails. If `extended = false`, this option is ignored.\r\n #tools = [\"cargo\", \"rls\", \"clippy\", \"rustfmt\", \"analysis\", \"src\"] # + \"rust-demangler\" if `profiler`\r\n+tools = [\"cargo\", \"clippy\", \"rustfmt\"]\r\n \r\n # Verbosity level: 0 == not verbose, 1 == verbose, 2 == very verbose\r\n #verbose = 0\r\n```\r\n\r\n```\r\n$ python3 x.py build --stage 2\r\n--snip--\r\nBuilding stage2 tool rustfmt (x86_64-unknown-linux-gnu)\r\n   Compiling rustc-ap-rustc_span v705.0.0\r\nerror[E0599]: no method named `expect_none` found for enum `Option<Fingerprint>` in the current scope\r\n    --> /root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-ap-rustc_span-705.0.0/src/lib.rs:2003:48\r\n     |\r\n2003 |                 cache[index].replace(sub_hash).expect_none(\"Cache slot was filled\");\r\n     |                                                ^^^^^^^^^^^ method not found in `Option<Fingerprint>`\r\n\r\nerror[E0599]: no method named `expect_none` found for enum `Option<u32>` in the current scope\r\n   --> /root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-ap-rustc_span-705.0.0/src/hygiene.rs:121:54\r\n    |\r\n121 |             expn_data.orig_id.replace(self.as_u32()).expect_none(\"orig_id should be None\");\r\n    |                                                      ^^^^^^^^^^^ method not found in `Option<u32>`\r\n\r\nerror[E0599]: no method named `expect_none` found for enum `Option<u32>` in the current scope\r\n   --> /root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-ap-rustc_span-705.0.0/src/hygiene.rs:205:42\r\n    |\r\n205 |             data.orig_id.replace(raw_id).expect_none(\"orig_id should be None\");\r\n    |                                          ^^^^^^^^^^^ method not found in `Option<u32>`\r\n\r\nerror: aborting due to 3 previous errors\r\n\r\nFor more information about this error, try `rustc --explain E0599`.\r\nerror: could not compile `rustc-ap-rustc_span`\r\n\r\nTo learn more, run the command again with --verbose.\r\ncommand did not execute successfully: \"/root/rust/build/x86_64-unknown-linux-gnu/stage0/bin/cargo\" \"build\" \"--target\" \"x86_64-unknown-linux-gnu\" \"-Zbinary-dep-depinfo\" \"-j\" \"12\" \"--release\" \"--manifest-path\" \"/root/rust/src/tools/rustfmt/Cargo.toml\" \"--message-format\" \"json-render-diagnostics\"\r\n```\r\n\r\nIt looks like `rustfmt` is being compiled using the stage0 compiler, instead of stage1 or stage2 that have already been built.\r\n\r\nIs this expected? Is bootstrap using the wrong toolchain for this part of the build?", "closed_by": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/84076/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/84076/timeline", "performed_via_github_app": null, "state_reason": "completed"}