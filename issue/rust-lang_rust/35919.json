{"url": "https://api.github.com/repos/rust-lang/rust/issues/35919", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/35919/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/35919/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/35919/events", "html_url": "https://github.com/rust-lang/rust/issues/35919", "id": 172644151, "node_id": "MDU6SXNzdWUxNzI2NDQxNTE=", "number": 35919, "title": "Adding type annotation equivalent to existing type changes code semantics", "user": {"login": "F001", "id": 3314340, "node_id": "MDQ6VXNlcjMzMTQzNDA=", "avatar_url": "https://avatars.githubusercontent.com/u/3314340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/F001", "html_url": "https://github.com/F001", "followers_url": "https://api.github.com/users/F001/followers", "following_url": "https://api.github.com/users/F001/following{/other_user}", "gists_url": "https://api.github.com/users/F001/gists{/gist_id}", "starred_url": "https://api.github.com/users/F001/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/F001/subscriptions", "organizations_url": "https://api.github.com/users/F001/orgs", "repos_url": "https://api.github.com/users/F001/repos", "events_url": "https://api.github.com/users/F001/events{/privacy}", "received_events_url": "https://api.github.com/users/F001/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37544, "node_id": "MDU6TGFiZWwzNzU0NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-typesystem", "name": "A-typesystem", "color": "f7e101", "default": false, "description": "Area: The type system"}, {"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 67766349, "node_id": "MDU6TGFiZWw2Nzc2NjM0OQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-mentor", "name": "E-mentor", "color": "02E10C", "default": false, "description": "Call for participation: This issue has a mentor. Use RustcContributor::new on Zulip for discussion."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-08-23T08:48:55Z", "updated_at": "2019-10-14T12:34:44Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This piece of code can't compile:\n\n```\nfn main()\n{\n    let y = &mut 2i32;\n    {\n        let x = y;\n        *x = 3;\n    }\n    println!(\"{}\", y);\n}\n```\n\nBut, if we add the type annotation, it compiles:\n\n```\nfn main()\n{\n    let y = &mut 2i32;\n    {\n        let x: &mut i32 = y;\n        *x = 3;\n    }\n    println!(\"{}\", y);\n}\n```\n\nI guess the later form triggers \"auto-deref\" mechanism, which equals to:\n\n```\nlet x = &mut *y;\n```\n\nBut this behaviour is still very confusing. Type annotation or not doesn't change the type of `x` at all. Type of  `x` is always `&mut i32`. But they lead to  different compile result. I have no idea whether should we fix it.\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/35919/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/35919/timeline", "performed_via_github_app": null, "state_reason": null}