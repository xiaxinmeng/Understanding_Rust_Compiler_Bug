{"url": "https://api.github.com/repos/rust-lang/rust/issues/57299", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/57299/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/57299/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/57299/events", "html_url": "https://github.com/rust-lang/rust/issues/57299", "id": 395493005, "node_id": "MDU6SXNzdWUzOTU0OTMwMDU=", "number": 57299, "title": "Rust stable, fatal runtime error: stack overflow, PartialEq", "user": {"login": "denisandroid", "id": 13841983, "node_id": "MDQ6VXNlcjEzODQxOTgz", "avatar_url": "https://avatars.githubusercontent.com/u/13841983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/denisandroid", "html_url": "https://github.com/denisandroid", "followers_url": "https://api.github.com/users/denisandroid/followers", "following_url": "https://api.github.com/users/denisandroid/following{/other_user}", "gists_url": "https://api.github.com/users/denisandroid/gists{/gist_id}", "starred_url": "https://api.github.com/users/denisandroid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/denisandroid/subscriptions", "organizations_url": "https://api.github.com/users/denisandroid/orgs", "repos_url": "https://api.github.com/users/denisandroid/repos", "events_url": "https://api.github.com/users/denisandroid/events{/privacy}", "received_events_url": "https://api.github.com/users/denisandroid/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235137, "node_id": "MDU6TGFiZWwyMzUxMzc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lint", "name": "A-lint", "color": "f7e101", "default": false, "description": "Area: Lints (warnings about flaws in source code) such as unused_mut."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-01-03T08:40:33Z", "updated_at": "2019-01-29T01:21:33Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "# Error\r\n```\r\ncargo run\r\n   Compiling stack_overflow v0.1.0 (/d/stack_overflow)                                                                        \r\n    Finished dev [unoptimized + debuginfo] target(s) in 7.08s                                                                 \r\n     Running `target/debug/stack_overflow`\r\n\r\nthread 'main' has overflowed its stack\r\nfatal runtime error: stack overflow\r\n\u0410\u0432\u0430\u0440\u0438\u0439\u043d\u044b\u0439 \u043e\u0441\u0442\u0430\u043d\u043e\u0432 (\u0441\u0442\u0435\u043a \u043f\u0430\u043c\u044f\u0442\u0438 \u0441\u0431\u0440\u043e\u0448\u0435\u043d \u043d\u0430 \u0434\u0438\u0441\u043a)\r\n```\r\n\r\n# Rust Version\r\n```\r\nRUST STABLE:\r\nrustc 1.31.1 (b6c32da9b 2018-12-18)\r\n\r\nRUST NIGHTLY:\r\nrustc 1.33.0-nightly (9eac38634 2018-12-31)\r\n```\r\n\r\n# Code\r\n\r\n```\r\nuse std::fmt::Write;\r\nuse std::ops::Deref;\r\nuse std::fmt;\r\n\r\n//////The structure stores in itself the changeable reference and has to clean data in \"drop\" of structure.\r\n#[derive(Debug)]\r\npub struct DebugSliceMutString<'a>(&'a mut String);\r\n\r\n\r\n\r\n//Stack overflow <----\r\n//assert_eq!(&null.my_debug(&mut string).unwrap(), \"=\");\r\nimpl<'a> PartialEq<str> for DebugSliceMutString<'a> {   \r\n     fn eq(&self, other: &str) -> bool {\r\n          self == other\r\n     }\r\n}\r\n\r\n\r\n\r\n//Stack overflow <----\r\n//assert_eq!(null.my_debug(&mut string).unwrap(), \"=\");\r\nimpl<'a> PartialEq<&str> for DebugSliceMutString<'a> {\r\n     fn eq(&self, other: &&str) -> bool {\r\n          self == other\r\n     }\r\n}\r\n\r\n//If to take 'deref' that there is no overflow of a stack!!\r\n//assert_eq!(*null.my_debug(&mut string).unwrap(), \"=\");\r\nimpl<'a> Deref for DebugSliceMutString<'a> {\r\n     type Target = String;\r\n     \r\n     fn deref(&self) -> &String {\r\n          self.0\r\n     }\r\n}\r\n\r\nimpl<'a> Drop for DebugSliceMutString<'a> {\r\n     fn drop(&mut self) {\r\n          self.0.clear()\r\n     }\r\n}\r\n\r\n\r\n\r\n//MyTrait\r\npub trait MyDebug {\r\n     fn my_debug<'a>(&self, w: &'a mut String) -> Result<DebugSliceMutString<'a>, fmt::Error>;\r\n}\r\n\r\nimpl MyDebug for (usize, usize) {\r\n     fn my_debug<'a>(&self, w: &'a mut String) -> Result<DebugSliceMutString<'a>, fmt::Error> {\r\n          write!(w, \"{}={}\", self.0, self.1)?;\r\n\r\n          Ok( DebugSliceMutString(w) )\r\n     }\r\n}\r\n\r\n//\r\n\r\n\r\nfn main() {\r\n\t//The buffer for an exception of frequent reallocations of memory\r\n\tlet mut string = String::with_capacity(9);\r\n\r\n\t//Any other type, in this case (usize, usize) is more convenient\r\n\tlet null =\t(10, 20);\r\n\t\r\n\r\n\t// !!!!!!!\r\n\t//thread 'main' has overflowed its stack\r\n\t//fatal runtime error: stack overflow\r\n\t//\u0410\u0432\u0430\u0440\u0438\u0439\u043d\u044b\u0439 \u043e\u0441\u0442\u0430\u043d\u043e\u0432 (\u0441\u0442\u0435\u043a \u043f\u0430\u043c\u044f\u0442\u0438 \u0441\u0431\u0440\u043e\u0448\u0435\u043d \u043d\u0430 \u0434\u0438\u0441\u043a)\r\n\tassert_eq!(\tnull.my_debug(&mut string).unwrap(), \"=\");\r\n\r\n\r\n\t// !!!!!!!\r\n\t//If to use Deref that there is no overflow of a stack!!\r\n\t//assert_eq!(\t*null.my_debug(&mut string).unwrap(), \"=\");\r\n\r\n\r\n\t// !!!!!!!OR\r\n\t//thread 'main' has overflowed its stack\r\n\t//fatal runtime error: stack overflow\r\n\t//\u0410\u0432\u0430\u0440\u0438\u0439\u043d\u044b\u0439 \u043e\u0441\u0442\u0430\u043d\u043e\u0432 (\u0441\u0442\u0435\u043a \u043f\u0430\u043c\u044f\u0442\u0438 \u0441\u0431\u0440\u043e\u0448\u0435\u043d \u043d\u0430 \u0434\u0438\u0441\u043a)\r\n\t//\r\n\t//let a = null.my_debug(&mut string).unwrap()\r\n\t//\t.eq(&\"=\");\r\n\t//\r\n\r\n\t//\r\n\tprintln!(\"string, {}, capacity: {}\", string, string.capacity());\r\n}\r\n```\r\n\r\n\r\n# Run\r\nhttps://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=5bacc9a73f0ae7a38100da9d196b08d0\r\n\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/57299/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/57299/timeline", "performed_via_github_app": null, "state_reason": null}