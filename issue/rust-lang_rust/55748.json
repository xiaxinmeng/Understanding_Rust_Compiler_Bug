{"url": "https://api.github.com/repos/rust-lang/rust/issues/55748", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/55748/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/55748/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/55748/events", "html_url": "https://github.com/rust-lang/rust/issues/55748", "id": 378235653, "node_id": "MDU6SXNzdWUzNzgyMzU2NTM=", "number": 55748, "title": "NLL: investigate ascription when a `_` wildcard tyvar is repeated", "user": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 203429200, "node_id": "MDU6TGFiZWwyMDM0MjkyMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-high", "name": "P-high", "color": "eb6420", "default": false, "description": "High priority"}, {"id": 604489711, "node_id": "MDU6TGFiZWw2MDQ0ODk3MTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-NLL", "name": "A-NLL", "color": "f7e101", "default": false, "description": "Area: Non Lexical Lifetimes (NLL)"}, {"id": 867466592, "node_id": "MDU6TGFiZWw4Njc0NjY1OTI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/NLL-sound", "name": "NLL-sound", "color": "f799ea", "default": false, "description": "Working towards the \"invalid code does not compile\" goal"}], "state": "closed", "locked": false, "assignee": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 16, "created_at": "2018-11-07T10:48:43Z", "updated_at": "2019-01-18T11:40:11Z", "closed_at": "2019-01-18T11:40:10Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Spawned off of https://github.com/rust-lang/rust/pull/55637#issuecomment-436277516\r\n\r\nUpdate: I had updated this description with a demo. But reading over it now, I don't know why I thought the \"demo\" had anything to do with this bug *as described*. That is, I believe demo is showing *a bug*, but not necessarily *this bug*...\r\n\r\nNonetheless, I'm not going to spawn off yet another bug quite yet. Instead, I am just going to mark the demo as wrong-headed and try to spend some time exploring `_` itself later.\r\n\r\n## Potentially wrong-headed demo \r\n\r\nHere's a demo of the problem ([play](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=8064e65c543b93eafa729822518cce17)):\r\n\r\n\r\n```rust\r\n#![allow(dead_code, unused_mut)]\r\ntype Pair<T> = (T, T);\r\n\r\nfn static_to_a_to_static_through_tyvar<'a>(x: &'a u32, s: &'static u32) -> &'static u32 {\r\n    let (mut y, mut _z): Pair<&u32> = (s, x);\r\n\r\n    // I should be able to add the call to `swap` below at whim based\r\n    // on the above type annotation, which should coerce both `s` and\r\n    // `x` to `&'1 u32` (and then `'1` should be inferred to be `'a`).\r\n\r\n    // ::std::mem::swap(&mut y, &mut _z);\r\n\r\n    // Likewise, the same rules that caused `y` and `_z` to have the\r\n    // same `&'1 u32` type should likewise cause a borrow-check error\r\n    // at this attempt to return a `&'static u32`.\r\n    y\r\n}\r\n\r\nfn main() {\r\n    static_to_a_to_static_through_tyvar(&3, &4);\r\n}\r\n```\r\n\r\nUnder AST-borrowck, it errors.\r\n\r\n~~Under NLL migration mode, it errors.~~\r\n * Update: no, it was accepted there (just like NLL below).\r\n\r\nUnder `#![feature(nll)]`, is is accepted ([play](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=4a06e1ef2cb7ba53c9b5f643f5ddbb2a)), and should not be.\r\n\r\nMore details below:\r\n----\r\n\r\nPR #55637 fixes #55552 by ignoring occurrences of `_` that it finds as it descends through the type.\r\n\r\nA potential problem is that type variables can be repeated, e.g. in a `type Foo<T> = (T, T)` and an annotation like `Foo<_>`\r\n\r\nThe problem then becomes: Is there some way that could lead to a scenario where one of the occurrences of the type variables gets unified with something that has a lifetime constraint like `'a`, and the other occurrence of the type variable is unchecked (due to #55637) but ends up *missing* a case where it should have imposed that constraint on an expression whose type has a different incompatible lifetime...", "closed_by": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/55748/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/55748/timeline", "performed_via_github_app": null, "state_reason": "completed"}