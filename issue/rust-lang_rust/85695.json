{"url": "https://api.github.com/repos/rust-lang/rust/issues/85695", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/85695/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/85695/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/85695/events", "html_url": "https://github.com/rust-lang/rust/issues/85695", "id": 901318448, "node_id": "MDU6SXNzdWU5MDEzMTg0NDg=", "number": 85695, "title": "Using ? behind collect without turbofish gives confusing error message, not hinting at wrong type. ", "user": {"login": "hwalinga", "id": 13176356, "node_id": "MDQ6VXNlcjEzMTc2MzU2", "avatar_url": "https://avatars.githubusercontent.com/u/13176356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hwalinga", "html_url": "https://github.com/hwalinga", "followers_url": "https://api.github.com/users/hwalinga/followers", "following_url": "https://api.github.com/users/hwalinga/following{/other_user}", "gists_url": "https://api.github.com/users/hwalinga/gists{/gist_id}", "starred_url": "https://api.github.com/users/hwalinga/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hwalinga/subscriptions", "organizations_url": "https://api.github.com/users/hwalinga/orgs", "repos_url": "https://api.github.com/users/hwalinga/repos", "events_url": "https://api.github.com/users/hwalinga/events{/privacy}", "received_events_url": "https://api.github.com/users/hwalinga/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 604454086, "node_id": "MDU6TGFiZWw2MDQ0NTQwODY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-inference", "name": "A-inference", "color": "f7e101", "default": false, "description": "Area: Type inference"}, {"id": 1596122811, "node_id": "MDU6TGFiZWwxNTk2MTIyODEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-newcomer-roadblock", "name": "D-newcomer-roadblock", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error hard to understand for new users"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-05-25T20:18:09Z", "updated_at": "2021-06-15T23:10:13Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "Following up from #49391 @estebank \r\n\r\nNot sure if the compiler can be clever about this. \r\n\r\nGiven the following code: https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=e30b2fc110718876664dd046492b4dc5\r\n\r\n```rust\r\nuse std::fs::File;\r\nuse std::io::{self, prelude::*, BufReader};\r\n\r\nfn char_count(text: &str, pattern: &str) -> usize {\r\n    text.len() + pattern.len()\r\n\r\n}\r\n\r\nfn main() -> io::Result<()> {\r\n    let rdr = BufReader::new(File::open(\"file\")?);\r\n\r\n    // Compiler says: \"doesn't have a size known at compile-time\"\r\n    // Change to \"collect::<Result<_, _>>()?\" for fix.\r\n    let lines: Vec<_> = rdr.lines().collect()?; \r\n\r\n    let text = &lines[0];\r\n    let pattern = &lines[0];\r\n    \r\n    // Removing below line, correctly triggers \"cannot infer type\"\r\n    let _x = char_count(text, pattern);\r\n    Ok(())\r\n}\r\n```\r\n\r\nThe current output is:\r\n\r\n```\r\n   Compiling playground v0.0.1 (/playground)\r\nerror[E0277]: the size for values of type `str` cannot be known at compilation time\r\n  --> src/main.rs:17:20\r\n   |\r\n17 |     let pattern = &lines[0];\r\n   |                    ^^^^^^^^ doesn't have a size known at compile-time\r\n   |\r\n   = help: the trait `Sized` is not implemented for `str`\r\n   = note: required because of the requirements on the impl of `Index<usize>` for `Vec<str>`\r\n\r\nerror[E0277]: the size for values of type `str` cannot be known at compilation time\r\n   --> src/main.rs:14:16\r\n    |\r\n14  |     let lines: Vec<_> = rdr.lines().collect()?; \r\n    |                ^^^^^^ doesn't have a size known at compile-time\r\n    |\r\n    = help: the trait `Sized` is not implemented for `str`\r\n\r\nerror[E0277]: the size for values of type `str` cannot be known at compilation time\r\n   --> src/main.rs:14:25\r\n    |\r\n14  |     let lines: Vec<_> = rdr.lines().collect()?; \r\n    |                         ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time\r\n    |\r\n    = help: the trait `Sized` is not implemented for `str`\r\n\r\nerror[E0277]: the size for values of type `str` cannot be known at compilation time\r\n  --> src/main.rs:16:17\r\n   |\r\n16 |     let text = &lines[0];\r\n   |                 ^^^^^^^^ doesn't have a size known at compile-time\r\n   |\r\n   = help: the trait `Sized` is not implemented for `str`\r\n   = note: required because of the requirements on the impl of `Index<usize>` for `Vec<str>`\r\n\r\nerror: aborting due to 4 previous errors\r\n\r\nFor more information about this error, try `rustc --explain E0277`.\r\nerror: could not compile `playground`\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n\r\nIdeally the output be:\r\n\r\n```\r\n   Compiling playground v0.0.1 (/playground)\r\nerror[E0282]: type annotations needed for `Vec<_>`\r\n  --> src/main.rs:14:16\r\n   |\r\n14 |     let lines: Vec<_> = rdr.lines().collect()?; \r\n   |         -----  ^^^^^^ cannot infer type\r\n   |         |\r\n   |         consider giving `lines` the explicit type `Vec<_>`, with the type parameters specified\r\n\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0282`.\r\nerror: could not compile `playground`\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n\r\nThis also will happen correctly when the function call taking the strings is not used. Apparently that function call put the compiler to the wrong direction what should be the correct fix to the code. \r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/85695/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/85695/timeline", "performed_via_github_app": null, "state_reason": null}