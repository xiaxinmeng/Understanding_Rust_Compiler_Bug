{"url": "https://api.github.com/repos/rust-lang/rust/issues/52389", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/52389/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/52389/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/52389/events", "html_url": "https://github.com/rust-lang/rust/issues/52389", "id": 341274846, "node_id": "MDU6SXNzdWUzNDEyNzQ4NDY=", "number": 52389, "title": "Macros 2.0: macro defined and used in same function-like scope can't resolve its own items", "user": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 239393, "node_id": "MDU6TGFiZWwyMzkzOTM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-resolve", "name": "A-resolve", "color": "f7e101", "default": false, "description": "Area: Path resolution"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 632573348, "node_id": "MDU6TGFiZWw2MzI1NzMzNDg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-macros-2.0", "name": "A-macros-2.0", "color": "f7e101", "default": false, "description": "Area: declarative macros 2.0, https://github.com/rust-lang/rust/issues/39412"}, {"id": 1578491841, "node_id": "MDU6TGFiZWwxNTc4NDkxODQx", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-decl_macro", "name": "F-decl_macro", "color": "f9c0cc", "default": false, "description": "`#![feature(decl_macro)]`"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-14T22:20:09Z", "updated_at": "2022-08-09T12:53:51Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Maybe this is just a misunderstanding of hygiene, but if a macro 2.0 is defined and used in the same function-like scope (function/const) then it can't resolve its own items:\r\n\r\n```Rust\r\n#![feature(decl_macro)]\r\n\r\ntrait Tr { fn foo(self); }\r\n\r\nconst C: () = {\r\n    macro implit {\r\n        () => {\r\n            fn doit() { println!(\"Hi\"); }\r\n            impl ::Tr for () {\r\n                fn foo(self) {\r\n                    doit();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n    \r\n    #[cfg(works)]\r\n    const T: () = { implit!(); () }; // this works with no error\r\n    \r\n    #[cfg(not(works))]\r\n    implit!(); //~ ERROR cannot find function `doit` in this scope\r\n};\r\n\r\nfn main() {\r\n    ().foo();\r\n}\r\n```\r\n\r\n## Expected Result\r\n\r\n`doit()` should resolve to the `fn doit` in the scope of the macro, printing `Hi!`\r\n\r\n## Actual Result\r\n\r\nResolution error.\r\n\r\nNote that\r\n1. Having the macro defined *and used* in a module (i.e., if `const C: ()` was a `mod _xyz`) does work.\r\n2. Having the macro defined in 1 function-like scope, and used in a child scope of it (see `cfg(works)`) also works. This error only occurs if the macro is defined and used in the *same* scope.\r\n\r\ncc @petrochenkov @nrc ", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/52389/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/52389/timeline", "performed_via_github_app": null, "state_reason": null}