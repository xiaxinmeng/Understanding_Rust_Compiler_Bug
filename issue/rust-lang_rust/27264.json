{"url": "https://api.github.com/repos/rust-lang/rust/issues/27264", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/27264/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/27264/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/27264/events", "html_url": "https://github.com/rust-lang/rust/issues/27264", "id": 97111044, "node_id": "MDU6SXNzdWU5NzExMTA0NA==", "number": 27264, "title": "Add a method to get the in6_addr from an Ipv6Addr?", "user": {"login": "dimbleby", "id": 875184, "node_id": "MDQ6VXNlcjg3NTE4NA==", "avatar_url": "https://avatars.githubusercontent.com/u/875184?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dimbleby", "html_url": "https://github.com/dimbleby", "followers_url": "https://api.github.com/users/dimbleby/followers", "following_url": "https://api.github.com/users/dimbleby/following{/other_user}", "gists_url": "https://api.github.com/users/dimbleby/gists{/gist_id}", "starred_url": "https://api.github.com/users/dimbleby/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dimbleby/subscriptions", "organizations_url": "https://api.github.com/users/dimbleby/orgs", "repos_url": "https://api.github.com/users/dimbleby/repos", "events_url": "https://api.github.com/users/dimbleby/events{/privacy}", "received_events_url": "https://api.github.com/users/dimbleby/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2015-07-24T18:33:12Z", "updated_at": "2016-11-30T20:26:39Z", "closed_at": "2016-11-30T19:05:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "How would you feel about adding a method to `std::net::Ipv6Addr` that returned either an `in6_addr` or (equivalently) a `[u16; 8]` in which the `u16`s are in network order?\n\nMy motivation is that I am writing a binding to a C library which naturally wants an `in6_addr`; on the Rust side I naturally have an `Ipv6Addr`.  At the moment I think that I have to go `addr.segments()` and then manually convert each segment into network order via `to_be()`.\n\nOf course I can do this - but the implementation of an `Ipv6Addr` already contains an `in6_addr` so the upshot is that `segments()` converted the segments to host order and now I have to convert them back again!  \n\nWouldn't it be nice to skip this double-conversion?\n", "closed_by": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/27264/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/27264/timeline", "performed_via_github_app": null, "state_reason": "completed"}