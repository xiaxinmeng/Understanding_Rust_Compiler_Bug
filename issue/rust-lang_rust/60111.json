{"url": "https://api.github.com/repos/rust-lang/rust/issues/60111", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/60111/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/60111/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/60111/events", "html_url": "https://github.com/rust-lang/rust/issues/60111", "id": 435119293, "node_id": "MDU6SXNzdWU0MzUxMTkyOTM=", "number": 60111, "title": "Introducing a redundant variable makes the \"cannot borrow as mutable more than once at a time\" go away", "user": {"login": "nikita-volkov", "id": 1560937, "node_id": "MDQ6VXNlcjE1NjA5Mzc=", "avatar_url": "https://avatars.githubusercontent.com/u/1560937?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikita-volkov", "html_url": "https://github.com/nikita-volkov", "followers_url": "https://api.github.com/users/nikita-volkov/followers", "following_url": "https://api.github.com/users/nikita-volkov/following{/other_user}", "gists_url": "https://api.github.com/users/nikita-volkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikita-volkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikita-volkov/subscriptions", "organizations_url": "https://api.github.com/users/nikita-volkov/orgs", "repos_url": "https://api.github.com/users/nikita-volkov/repos", "events_url": "https://api.github.com/users/nikita-volkov/events{/privacy}", "received_events_url": "https://api.github.com/users/nikita-volkov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-19T09:47:24Z", "updated_at": "2019-04-19T13:37:48Z", "closed_at": "2019-04-19T12:14:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Compiling this code:\r\n\r\n```rust\r\nuse std::collections::*;\r\n\r\npub struct BTreeMultimap<key, value> {\r\n  map: BTreeMap<key, Vec<value>>,\r\n}\r\n\r\nimpl<key: Ord, value> BTreeMultimap<key, value> {\r\n  pub fn remove_equal_or_greater(&mut self, key: &key) -> Option<value>\r\n    where key: Clone\r\n  {\r\n    match self.map.range_mut(key..).next() {\r\n      Some((key, vec)) => {\r\n        match vec.pop() {\r\n          Some(value) => {\r\n            if vec.is_empty() {\r\n              self.map.remove(&key.clone());\r\n            }\r\n            Some(value)\r\n          }\r\n          None => panic!(\"Vector is never expected to be empty\")\r\n        }\r\n      }\r\n      None => None\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nresults in the following error:\r\n\r\n```\r\nerror[E0499]: cannot borrow `self.map` as mutable more than once at a time\r\n  --> src/logic/states/b_tree_multimap.rs:16:15\r\n   |\r\n11 |     match self.map.range_mut(key..).next() {\r\n   |           -------- first mutable borrow occurs here\r\n...\r\n16 |               self.map.remove(&key.clone());\r\n   |               ^^^^^^^^         --- first borrow later used here\r\n   |               |\r\n   |               second mutable borrow occurs here\r\n```\r\n\r\nHowever it compiles fine if I introduce an intermediate variable like this:\r\n\r\n```diff\r\n-              self.map.remove(&key.clone());\r\n+              let cloned_key = key.clone();\r\n+              self.map.remove(&cloned_key);\r\n```\r\n\r\n<details><summary>Complete working code</summary>\r\n<div>\r\n\r\n```rust\r\nuse std::collections::*;\r\n\r\npub struct BTreeMultimap<key, value> {\r\n  map: BTreeMap<key, Vec<value>>,\r\n}\r\n\r\nimpl<key: Ord, value> BTreeMultimap<key, value> {\r\n  pub fn remove_equal_or_greater(&mut self, key: &key) -> Option<value>\r\n    where key: Clone\r\n  {\r\n    match self.map.range_mut(key..).next() {\r\n      Some((key, vec)) => {\r\n        match vec.pop() {\r\n          Some(value) => {\r\n            if vec.is_empty() {\r\n              let cloned_key = key.clone();\r\n              self.map.remove(&cloned_key);\r\n            }\r\n            Some(value)\r\n          }\r\n          None => panic!(\"Vector is never expected to be empty\")\r\n        }\r\n      }\r\n      None => None\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n</div>\r\n</details>\r\n\r\n## Meta\r\n\r\n`rustc --version --verbose`:\r\n\r\n```\r\nrustc 1.33.0 (2aa4c46cf 2019-02-28)\r\nbinary: rustc\r\ncommit-hash: 2aa4c46cfdd726e97360c2734835aa3515e8c858\r\ncommit-date: 2019-02-28\r\nhost: x86_64-apple-darwin\r\nrelease: 1.33.0\r\nLLVM version: 8.0\r\n```\r\n", "closed_by": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/60111/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/60111/timeline", "performed_via_github_app": null, "state_reason": "completed"}