{"url": "https://api.github.com/repos/rust-lang/rust/issues/17164", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/17164/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/17164/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/17164/events", "html_url": "https://github.com/rust-lang/rust/issues/17164", "id": 42491853, "node_id": "MDU6SXNzdWU0MjQ5MTg1Mw==", "number": 17164, "title": "Improve error messages involving type aliases", "user": {"login": "nodakai", "id": 90726, "node_id": "MDQ6VXNlcjkwNzI2", "avatar_url": "https://avatars.githubusercontent.com/u/90726?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nodakai", "html_url": "https://github.com/nodakai", "followers_url": "https://api.github.com/users/nodakai/followers", "following_url": "https://api.github.com/users/nodakai/following{/other_user}", "gists_url": "https://api.github.com/users/nodakai/gists{/gist_id}", "starred_url": "https://api.github.com/users/nodakai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nodakai/subscriptions", "organizations_url": "https://api.github.com/users/nodakai/orgs", "repos_url": "https://api.github.com/users/nodakai/repos", "events_url": "https://api.github.com/users/nodakai/events{/privacy}", "received_events_url": "https://api.github.com/users/nodakai/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2014-09-11T06:01:07Z", "updated_at": "2022-08-11T14:50:33Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "``` rs\nextern crate libc;\nfn main() {\n    let a: libc::ssize_t = 0;\n    let () = a;\n}\n```\n\n```\n$ rustc show-typedef.rs\nshow-typedef.rs:4:17: 4:19 error: mismatched types: expected `i64`, found `()` (expected i64, found ())\nshow-typedef.rs:4             let () = a;\n                                  ^~\nerror: aborting due to previous error\n```\n\nIt would be great if `rustc` could show `libc::ssize_t` as well as `i64` in the error message.  Compare it with GCC 4.9\n\n```\n$ g++49 show-typedef.cpp\nshow-typedef.cpp: In function 'int main()':\nshow-typedef.cpp:3:28: error: invalid operands of types 'void' and 'const size_type {aka const long unsigned int}' to binary 'operator+'\n     (void)0 + std::string::npos;\n                            ^\n```\n\n``` cpp\n#include <string>\nint main() {\n    (void)0 + std::string::npos;\n}\n```\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/17164/reactions", "total_count": 5, "+1": 5, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/17164/timeline", "performed_via_github_app": null, "state_reason": null}