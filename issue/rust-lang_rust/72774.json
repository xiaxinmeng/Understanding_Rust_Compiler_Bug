{"url": "https://api.github.com/repos/rust-lang/rust/issues/72774", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/72774/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/72774/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/72774/events", "html_url": "https://github.com/rust-lang/rust/issues/72774", "id": 627687078, "node_id": "MDU6SXNzdWU2Mjc2ODcwNzg=", "number": 72774, "title": "Refactor improper_ctypes to separate \"UCG questions\" from linting decisions", "user": {"login": "hanna-kruppe", "id": 2311707, "node_id": "MDQ6VXNlcjIzMTE3MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/2311707?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hanna-kruppe", "html_url": "https://github.com/hanna-kruppe", "followers_url": "https://api.github.com/users/hanna-kruppe/followers", "following_url": "https://api.github.com/users/hanna-kruppe/following{/other_user}", "gists_url": "https://api.github.com/users/hanna-kruppe/gists{/gist_id}", "starred_url": "https://api.github.com/users/hanna-kruppe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hanna-kruppe/subscriptions", "organizations_url": "https://api.github.com/users/hanna-kruppe/orgs", "repos_url": "https://api.github.com/users/hanna-kruppe/repos", "events_url": "https://api.github.com/users/hanna-kruppe/events{/privacy}", "received_events_url": "https://api.github.com/users/hanna-kruppe/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235137, "node_id": "MDU6TGFiZWwyMzUxMzc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lint", "name": "A-lint", "color": "f7e101", "default": false, "description": "Area: Lints (warnings about flaws in source code) such as unused_mut."}, {"id": 45472092, "node_id": "MDU6TGFiZWw0NTQ3MjA5Mg==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-ffi", "name": "A-ffi", "color": "f7e101", "default": false, "description": "Area: Foreign Function Interface (FFI)"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-30T09:18:41Z", "updated_at": "2020-05-30T14:00:20Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "(Elaborating on https://github.com/rust-lang/rust/issues/66220#issuecomment-557537105)\r\n\r\nI think that the current state of `improper_ctypes` is difficult to maintain and extend -- especially once we add [more lints that are similar but distinct](https://github.com/rust-lang/rust/pull/72700) -- because it's a big pile of mud that interleaving several different concerns: UCG-ish questions about ABI and layout guarantees, plus value judgements about how these interact with \"proper\" FFI, plus diagnostics code and suggestions. I imagine (but have not worked out the details) that we could improve this by separating this code into two \"layers\":\r\n\r\n- A module (some queries?) answering clean-cut spec questions such as: does this type have a defined memory layout? Defined ABI? If not, why not? etc.\r\n- Several lints that use the facts from that module as basis for emitting warnings, depending on what the lint is targeted at.\r\n\r\nI think such an organization would make it clearer what are the language-level guarantees are (including making it easier to audit and evolve) vs what's just a choice or limitation of some lint. More importantly, it would also enable us to implement (without lots of duplication and without making the visitor even more of a big ball of mud) a broader variety of lints that need similar information. For example:\r\n\r\n- linting transmutes of types with unspecified layout (#51294)\r\n- separate lints for \"ABI is FFI-safe\" vs \"C code could actually work with this type\" independent of `extern` *imports* vs *definitions*\r\n- lints for type punning via unions (the `const` alternative to `transmute`)\r\n- a more opinionated version of `improper_ctypes` that e.g. prohibits references (due to their aliasing implications which are rarely appropriate in FFI)", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/72774/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/72774/timeline", "performed_via_github_app": null, "state_reason": null}