{"url": "https://api.github.com/repos/rust-lang/rust/issues/23610", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/23610/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/23610/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/23610/events", "html_url": "https://github.com/rust-lang/rust/issues/23610", "id": 63548933, "node_id": "MDU6SXNzdWU2MzU0ODkzMw==", "number": 23610, "title": "Variables bound with different modes in patterns", "user": {"login": "Stebalien", "id": 310393, "node_id": "MDQ6VXNlcjMxMDM5Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/310393?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stebalien", "html_url": "https://github.com/Stebalien", "followers_url": "https://api.github.com/users/Stebalien/followers", "following_url": "https://api.github.com/users/Stebalien/following{/other_user}", "gists_url": "https://api.github.com/users/Stebalien/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stebalien/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stebalien/subscriptions", "organizations_url": "https://api.github.com/users/Stebalien/orgs", "repos_url": "https://api.github.com/users/Stebalien/repos", "events_url": "https://api.github.com/users/Stebalien/events{/privacy}", "received_events_url": "https://api.github.com/users/Stebalien/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 171502053, "node_id": "MDU6TGFiZWwxNzE1MDIwNTM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-borrow-checker", "name": "A-borrow-checker", "color": "f7e101", "default": false, "description": "Area: The borrow checker"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2015-03-22T16:21:58Z", "updated_at": "2020-06-11T18:05:22Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The following doesn't compile:\n\n``` rust\nenum Test<'a> {\n    A(&'a u64),\n    B(u64),\n}\nfn foo(test: Test) {\n    match test {\n        Test::A(r) | Test::B(ref r) => println!(\"{}\", r)\n    }\n}\nfn main() {\n    foo(Test::A(&0));\n    foo(Test::B(1));\n}\n```\n\nfailing with the following error:\n\n``` text\ntest.rs:7:30: 7:35 error: variable `r` is bound with different mode in pattern #2 than in pattern #1\ntest.rs:7         Test::A(r) | Test::B(ref r) => println!(\"{}\", r)\n                                       ^~~~~\nerror: aborting due to previous error\n```\n\nHowever, the following does work:\n\n``` rust\nenum Test<'a> {\n    A(&'a u64),\n    B(u64),\n}\nfn foo(test: Test) {\n    match test {\n        Test::A(&ref r) | Test::B(ref r) => println!(\"{}\", r)\n    }\n}\nfn main() {\n    foo(Test::A(&0));\n    foo(Test::B(1));\n}\n```\n\nIs there any reason rust can't just perform this reborrow automatically? `&ref` is a _very_ cryptic pattern.\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/23610/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/23610/timeline", "performed_via_github_app": null, "state_reason": null}