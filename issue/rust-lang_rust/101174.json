{"url": "https://api.github.com/repos/rust-lang/rust/issues/101174", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/101174/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/101174/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/101174/events", "html_url": "https://github.com/rust-lang/rust/issues/101174", "id": 1354985034, "node_id": "I_kwDOAAsO6M5Qw25K", "number": 101174, "title": "rustc suggests invalid suggestion when attempting to implement invalid transitive trait impl ", "user": {"login": "edward-shen", "id": 6173958, "node_id": "MDQ6VXNlcjYxNzM5NTg=", "avatar_url": "https://avatars.githubusercontent.com/u/6173958?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edward-shen", "html_url": "https://github.com/edward-shen", "followers_url": "https://api.github.com/users/edward-shen/followers", "following_url": "https://api.github.com/users/edward-shen/following{/other_user}", "gists_url": "https://api.github.com/users/edward-shen/gists{/gist_id}", "starred_url": "https://api.github.com/users/edward-shen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edward-shen/subscriptions", "organizations_url": "https://api.github.com/users/edward-shen/orgs", "repos_url": "https://api.github.com/users/edward-shen/repos", "events_url": "https://api.github.com/users/edward-shen/events{/privacy}", "received_events_url": "https://api.github.com/users/edward-shen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-08-29T23:41:46Z", "updated_at": "2022-09-05T12:02:25Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Someone asked a question to me whether or not if there was a way to implement a blanket implementation for \"transitive\" traits, such that if `T => U`, and `U => V`, then `T => V`. I attempted the following (incorrect) implementation:\r\n\r\nGiven the following code: [(playground)](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021&gist=fb389382dd933b87f0e037f21f5af513)\r\n\r\n```rust\r\ntrait MyBorrow<Other> {}\r\n\r\nimpl<U, V> MyBorrow<V> for MyBorrow<U>\r\nwhere\r\n    U: MyBorrow<V>,\r\n{\r\n}\r\n```\r\n\r\nThe current output is:\r\n\r\n```\r\nerror[[E0782]](https://doc.rust-lang.org/nightly/error-index.html#E0782): trait objects must include the `dyn` keyword\r\n --> src/lib.rs:3:28\r\n  |\r\n3 | impl<U, V> MyBorrow<V> for MyBorrow<U>\r\n  |                            ^^^^^^^^^^^\r\n  |\r\nhelp: add `dyn` keyword before this trait\r\n  |\r\n3 - impl<U, V> MyBorrow<V> for MyBorrow<U>\r\n3 + impl<U, V> MyBorrow<V> for dyn MyBorrow<U>\r\n  |\r\nhelp: alternatively use a blanket implementation to implement `MyBorrow<V>` for all types that also implement `MyBorrow<U>`\r\n  |\r\n3 | impl<U, V, T: MyBorrow<U>> MyBorrow<V> for T\r\n  |          ++++++++++++++++                  ~\r\n\r\nFor more information about this error, try `rustc --explain E0782`.\r\nerror: could not compile `playground` due to previous error\r\n```\r\n\r\nThe `dyn` suggestion correctly leads to a different message that suggest the true issue, but the suggestion to use a blanket implementation is problematic. Implementing the following: [(playground)](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021&gist=1ff34961e352007557acf20e0205ab8a)\r\n```rust\r\ntrait MyBorrow<Other> {}\r\n\r\nimpl<T, U, V> MyBorrow<V> for T\r\nwhere\r\n    T: MyBorrow<U>,\r\n    U: MyBorrow<V>,\r\n{\r\n}\r\n```\r\n\r\nLeads to a different error message:\r\n```\r\nerror[[E0207]](https://doc.rust-lang.org/nightly/error-index.html#E0207): the type parameter `U` is not constrained by the impl trait, self type, or predicates\r\n --> src/lib.rs:3:9\r\n  |\r\n3 | impl<T, U, V> MyBorrow<V> for T\r\n  |         ^ unconstrained type parameter\r\n\r\nFor more information about this error, try `rustc --explain E0207`.\r\nerror: could not compile `playground` due to previous error\r\n```\r\n\r\nI'm not sure if it's possible, but the fix here would be to not provide the help if the additional type parameter would be unbounded.\r\n\r\nThis repros on 1.65.0-nightly (2022-08-28 ce36e88256f09078519f).", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/101174/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/101174/timeline", "performed_via_github_app": null, "state_reason": null}