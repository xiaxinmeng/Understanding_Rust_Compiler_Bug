{"url": "https://api.github.com/repos/rust-lang/rust/issues/112726", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/112726/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/112726/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/112726/events", "html_url": "https://github.com/rust-lang/rust/issues/112726", "id": 1761590394, "node_id": "I_kwDOAAsO6M5o_7x6", "number": 112726, "title": "Compiler crash with reference mismatch in 1.68 only", "user": {"login": "AlaskanEmily", "id": 31194934, "node_id": "MDQ6VXNlcjMxMTk0OTM0", "avatar_url": "https://avatars.githubusercontent.com/u/31194934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlaskanEmily", "html_url": "https://github.com/AlaskanEmily", "followers_url": "https://api.github.com/users/AlaskanEmily/followers", "following_url": "https://api.github.com/users/AlaskanEmily/following{/other_user}", "gists_url": "https://api.github.com/users/AlaskanEmily/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlaskanEmily/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlaskanEmily/subscriptions", "organizations_url": "https://api.github.com/users/AlaskanEmily/orgs", "repos_url": "https://api.github.com/users/AlaskanEmily/repos", "events_url": "https://api.github.com/users/AlaskanEmily/events{/privacy}", "received_events_url": "https://api.github.com/users/AlaskanEmily/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2023-06-17T02:21:46Z", "updated_at": "2023-06-19T11:29:52Z", "closed_at": "2023-06-19T11:29:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n-->\r\n\r\n### Code\r\n\r\n```Rust\r\n// Any copyright is dedicated to the Public Domain.\r\n// https://creativecommons.org/publicdomain/zero/1.0/\r\nuse std::rc::Rc;\r\nextern crate core;\r\nuse core::slice::Iter;\r\nuse core::ops::{Deref, Range};\r\n\r\npub struct RCSlice<T>{\r\n    slice: Rc<[T]>,\r\n    range: Range<u16>,\r\n}\r\n\r\nimpl<T> RCSlice<T>{\r\n    #[inline]\r\n    pub fn new<U: Into<Rc<[T]>>>(that: U, range: Range<usize>) -> RCSlice<T>{   \r\n        let range = (range.start as u16)..(range.end as u16);\r\n        let slice = that.into();\r\n        RCSlice{\r\n            slice,\r\n            range,\r\n        }\r\n    }    \r\n    #[inline]\r\n    pub fn as_slice(&self) -> &[T]{                                             \r\n        let range = (self.range.start as usize)..(self.range.end as usize);     \r\n        &(*self.slice)[range]\r\n    }\r\n    pub fn iter(&self) -> Iter<'_, T>{                                     \r\n        self.as_slice().iter()                                                  \r\n    } \r\n}\r\n\r\nimpl<T> Deref for RCSlice<T>{\r\n    type Target = [T];\r\n    #[inline]\r\n    fn deref(&self) -> &[T]{\r\n        self.as_slice()\r\n    }\r\n}\r\n\r\n#[inline]\r\nconst fn lex_break(b: &u8) -> bool{\r\n    *b == b' ' || *b == b'\\t'\r\n}\r\n\r\n#[inline]\r\nfn not_empty(that: (usize, &[u8])) -> bool{\r\n    !that.1.is_empty()\r\n}\r\n\r\nfn parse<I>(\r\n    iter: &mut I,\r\n) -> Result<(), ()>\r\nwhere\r\n    I: Iterator<Item = RCSlice<u8>>\r\n{\r\n    for i in iter{\r\n        let mut chunks = i.split(lex_break).enumerate().filter(not_empty);\r\n        let mut i = 0;\r\n        for (i, b) in chunks{\r\n\r\n        }\r\n    }\r\n    Ok(())\r\n}\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.68.0 (2c8cc3432 2023-03-06) (built from a source tarball)\r\nbinary: rustc\r\ncommit-hash: 2c8cc343237b8f7d5a3c3703e3a87f2eb2c54a74\r\ncommit-date: 2023-03-06\r\nhost: x86_64-unknown-openbsd\r\nrelease: 1.68.0\r\nLLVM version: 15.0.6\r\n```\r\n\r\nAlso tested with:\r\n```\r\nrustc 1.68.0 (2c8cc3432 2023-03-06)\r\nbinary: rustc\r\ncommit-hash: 2c8cc343237b8f7d5a3c3703e3a87f2eb2c54a74\r\ncommit-date: 2023-03-06\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.68.0\r\nLLVM version: 15.0.6\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nerror: internal compiler error: compiler/rustc_infer/src/infer/region_constraints/mod.rs:568:17: cannot relate bound region: ReLateBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrNamed(DefId(0:31 ~ crash_1_68[721b]::not_empty::'_), '_) }) <= '_#23r\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\n   0: std::panicking::begin_panic::<rustc_errors::ExplicitBug>\r\n   1: std::panic::panic_any::<rustc_errors::ExplicitBug>\r\n   2: <rustc_errors::HandlerInner>::span_bug::<rustc_span::span_encoding::Span, &alloc::string::String>\r\n   3: <rustc_errors::Handler>::span_bug::<rustc_span::span_encoding::Span, &alloc::string::String>\r\n   4: rustc_middle::util::bug::opt_span_bug_fmt::<rustc_span::span_encoding::Span>::{closure#0}\r\n   5: rustc_middle::ty::context::tls::with_opt::<rustc_middle::util::bug::opt_span_bug_fmt<rustc_span::span_encoding::Span>::{closure#0}, !>::{closure#0}\r\n   6: rustc_middle::ty::context::tls::with_context_opt::<rustc_middle::ty::context::tls::with_opt<rustc_middle::util::bug::opt_span_bug_fmt<rustc_span::span_encoding::Span>::{closure#0}, !>::{closure#0}, !>\r\n   7: rustc_middle::util::bug::opt_span_bug_fmt::<rustc_span::span_encoding::Span>\r\n   8: rustc_middle::util::bug::span_bug_fmt::<rustc_span::span_encoding::Span>\r\n   9: <rustc_infer::infer::region_constraints::RegionConstraintCollector>::make_subregion\r\n  10: <rustc_infer::infer::region_constraints::RegionConstraintCollector>::make_eqregion\r\n  11: <rustc_infer::infer::equate::Equate as rustc_middle::ty::relate::TypeRelation>::regions\r\n  12: rustc_middle::ty::relate::super_relate_tys::<rustc_infer::infer::equate::Equate>\r\n  13: <rustc_infer::infer::InferCtxt>::super_combine_tys::<rustc_infer::infer::equate::Equate>\r\n  14: <rustc_infer::infer::equate::Equate as rustc_middle::ty::relate::TypeRelation>::tys\r\n  15: <core::result::Result<rustc_middle::ty::Ty, rustc_middle::ty::error::TypeError> as rustc_type_ir::InternIteratorElement<rustc_middle::ty::Ty, rustc_middle::ty::Ty>>::intern_with::<core::iter::adapters::map::Map<core::iter::adapters::zip::Zip<core::iter::adapters::copied::Copied<core::slice::iter::Iter<rustc_middle::ty::Ty>>, core::iter::adapters::copied::Copied<core::slice::iter::Iter<rustc_middle::ty::Ty>>>, rustc_middle::ty::relate::super_relate_tys<rustc_infer::infer::equate::Equate>::{closure#2}>, <rustc_middle::ty::context::TyCtxt>::mk_tup<core::iter::adapters::map::Map<core::iter::adapters::zip::Zip<core::iter::adapters::copied::Copied<core::slice::iter::Iter<rustc_middle::ty::Ty>>, core::iter::adapters::copied::Copied<core::slice::iter::Iter<rustc_middle::ty::Ty>>>, rustc_middle::ty::relate::super_relate_tys<rustc_infer::infer::equate::Equate>::{closure#2}>>::{closure#0}>\r\n  16: rustc_middle::ty::relate::super_relate_tys::<rustc_infer::infer::equate::Equate>\r\n  17: <rustc_infer::infer::InferCtxt>::super_combine_tys::<rustc_infer::infer::equate::Equate>\r\n  18: <rustc_infer::infer::equate::Equate as rustc_middle::ty::relate::TypeRelation>::tys\r\n  19: <rustc_infer::infer::InferCtxt>::commit_if_ok::<rustc_infer::infer::InferOk<()>, rustc_middle::ty::error::TypeError, <rustc_infer::infer::at::Trace>::eq<rustc_middle::ty::Ty>::{closure#0}>\r\n  20: <rustc_infer::infer::InferCtxt>::can_eq::<rustc_middle::ty::Ty>\r\n  21: rustc_trait_selection::traits::error_reporting::suggestions::hint_missing_borrow\r\n  22: <rustc_infer::infer::error_reporting::TypeErrCtxt as rustc_trait_selection::traits::error_reporting::suggestions::TypeErrCtxtExt>::report_closure_arg_mismatch\r\n  23: <rustc_infer::infer::error_reporting::TypeErrCtxt as rustc_trait_selection::traits::error_reporting::TypeErrCtxtExt>::report_selection_error\r\n  24: <rustc_infer::infer::error_reporting::TypeErrCtxt as rustc_trait_selection::traits::error_reporting::InferCtxtPrivExt>::report_fulfillment_error\r\n  25: <rustc_infer::infer::error_reporting::TypeErrCtxt as rustc_trait_selection::traits::error_reporting::TypeErrCtxtExt>::report_fulfillment_errors\r\n  26: <rustc_hir_typeck::fn_ctxt::FnCtxt>::check_argument_types\r\n  27: <rustc_hir_typeck::fn_ctxt::FnCtxt>::check_method_argument_types\r\n  28: <rustc_hir_typeck::fn_ctxt::FnCtxt>::check_expr_kind\r\n  29: <rustc_hir_typeck::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n  30: <rustc_hir_typeck::fn_ctxt::FnCtxt>::check_decl\r\n  31: <rustc_hir_typeck::fn_ctxt::FnCtxt>::check_stmt\r\n  32: <rustc_hir_typeck::fn_ctxt::FnCtxt>::check_block_with_expected\r\n  33: <rustc_hir_typeck::fn_ctxt::FnCtxt>::check_expr_kind\r\n  34: <rustc_hir_typeck::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n  35: <rustc_hir_typeck::fn_ctxt::FnCtxt>::check_match::{closure#0}\r\n  36: <rustc_hir_typeck::fn_ctxt::FnCtxt>::check_expr_kind\r\n  37: <rustc_hir_typeck::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n  38: <rustc_hir_typeck::fn_ctxt::FnCtxt>::check_stmt\r\n  39: <rustc_hir_typeck::fn_ctxt::FnCtxt>::check_block_with_expected\r\n  40: <rustc_hir_typeck::fn_ctxt::FnCtxt>::check_expr_kind\r\n  41: <rustc_hir_typeck::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n  42: <rustc_hir_typeck::fn_ctxt::FnCtxt>::check_match::{closure#0}\r\n  43: <rustc_hir_typeck::fn_ctxt::FnCtxt>::check_expr_kind\r\n  44: <rustc_hir_typeck::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n  45: <rustc_hir_typeck::fn_ctxt::FnCtxt>::check_expr_kind\r\n  46: <rustc_hir_typeck::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n  47: <rustc_hir_typeck::fn_ctxt::FnCtxt>::check_stmt\r\n  48: <rustc_hir_typeck::fn_ctxt::FnCtxt>::check_block_with_expected\r\n  49: <rustc_hir_typeck::fn_ctxt::FnCtxt>::check_expr_kind\r\n  50: <rustc_hir_typeck::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n  51: <rustc_hir_typeck::fn_ctxt::FnCtxt>::check_return_expr\r\n  52: rustc_hir_typeck::check::check_fn\r\n  53: rustc_hir_typeck::typeck\r\n  54: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::queries::typeck, rustc_query_impl::plumbing::QueryCtxt>\r\n  55: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::typeck\r\n  56: rustc_data_structures::sync::par_for_each_in::<&[rustc_span::def_id::LocalDefId], <rustc_middle::hir::map::Map>::par_body_owners<rustc_hir_typeck::typeck_item_bodies::{closure#0}>::{closure#0}>\r\n  57: rustc_hir_typeck::typeck_item_bodies\r\n  58: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::queries::typeck_item_bodies, rustc_query_impl::plumbing::QueryCtxt>\r\n  59: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::typeck_item_bodies\r\n  60: <rustc_session::session::Session>::time::<(), rustc_hir_analysis::check_crate::{closure#7}>\r\n  61: rustc_hir_analysis::check_crate\r\n  62: rustc_interface::passes::analysis\r\n  63: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::queries::analysis, rustc_query_impl::plumbing::QueryCtxt>\r\n  64: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::analysis\r\n  65: <rustc_interface::passes::QueryContext>::enter::<rustc_driver::run_compiler::{closure#1}::{closure#2}::{closure#2}, core::result::Result<(), rustc_errors::ErrorGuaranteed>>\r\n  66: <rustc_interface::queries::QueryResult<rustc_interface::passes::QueryContext>>::enter::<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver::run_compiler::{closure#1}::{closure#2}::{closure#2}>\r\n  67: rustc_span::with_source_map::<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_interface::interface::run_compiler<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver::run_compiler::{closure#1}>::{closure#0}::{closure#0}>\r\n  68: <scoped_tls::ScopedKey<rustc_span::SessionGlobals>>::set::<rustc_interface::interface::run_compiler<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver::run_compiler::{closure#1}>::{closure#0}, core::result::Result<(), rustc_errors::ErrorGuaranteed>>\r\n```\r\n\r\n</p>\r\n</details>\r\n", "closed_by": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/112726/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/112726/timeline", "performed_via_github_app": null, "state_reason": "not_planned"}