{"url": "https://api.github.com/repos/rust-lang/rust/issues/11681", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/11681/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/11681/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/11681/events", "html_url": "https://github.com/rust-lang/rust/issues/11681", "id": 25902653, "node_id": "MDU6SXNzdWUyNTkwMjY1Mw==", "number": 11681, "title": "Empty struct lifetime bug", "user": {"login": "angdev", "id": 1954350, "node_id": "MDQ6VXNlcjE5NTQzNTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1954350?v=4", "gravatar_id": "", "url": "https://api.github.com/users/angdev", "html_url": "https://github.com/angdev", "followers_url": "https://api.github.com/users/angdev/followers", "following_url": "https://api.github.com/users/angdev/following{/other_user}", "gists_url": "https://api.github.com/users/angdev/gists{/gist_id}", "starred_url": "https://api.github.com/users/angdev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/angdev/subscriptions", "organizations_url": "https://api.github.com/users/angdev/orgs", "repos_url": "https://api.github.com/users/angdev/repos", "events_url": "https://api.github.com/users/angdev/events{/privacy}", "received_events_url": "https://api.github.com/users/angdev/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}, {"id": 43009118, "node_id": "MDU6TGFiZWw0MzAwOTExOA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-destructors", "name": "A-destructors", "color": "f7e101", "default": false, "description": "Area: destructors (Drop, ..)"}, {"id": 46741598, "node_id": "MDU6TGFiZWw0Njc0MTU5OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-test", "name": "E-needs-test", "color": "02e10c", "default": false, "description": "Call for participation: writing correctness tests"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/rust-lang/rust/milestones/20", "html_url": "https://github.com/rust-lang/rust/milestone/20", "labels_url": "https://api.github.com/repos/rust-lang/rust/milestones/20/labels", "id": 452034, "node_id": "MDk6TWlsZXN0b25lNDUyMDM0", "number": 20, "title": "1.0", "description": "This will be the first major release of Rust, where we offer some guaranteed level of support and backwards compatibility.\r\n\r\nThe significant criteria for this release are:\r\n\r\n* Language backwards compatibility - All major features are in, and in their final form. Generally, the only new language features added after this milestone must be backwards compatible, or to fix soundness holes, though we do expect to have some leeway to make small incompatible fixes that have low impact on existing code bases.\r\n\r\n* Library stability - We have a system of measuring and ensuring the stability of API's, and a significant portion of the standard library is declared stable. Stable API's will not change. Large portions of the standard library need to be stable for 1.0, including primitive types, vectors, strings, option, numerics, collections, some I/O and concurrency.\r\n\r\n* User experience - The system is polished and the presentation is complete and professional. New users have a clear path to using and learning the system. This encompasses the web site, documentation, installation, and tooling.\r\n", "creator": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 376, "state": "closed", "created_at": "2013-10-10T18:48:33Z", "updated_at": "2016-08-28T23:13:24Z", "due_on": "2015-05-15T07:00:00Z", "closed_at": "2015-05-21T20:59:13Z"}, "comments": 11, "created_at": "2014-01-20T07:27:44Z", "updated_at": "2014-03-12T15:23:56Z", "closed_at": "2014-01-31T14:46:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I asked stackoverflow about lifetime of variable. Original link is this : http://stackoverflow.com/questions/21226942/rust-lifetime-and-calling-member-function\n\n*\\* Question from link **\n\nI have a question about lifetime of varable in Rust programming language.\n\n`createTest` function creates and returns r-value reference. and when it returns a reference, `testValue` is destroyed. But test.print() doesn't lead to crash. Why?\n\n(Is Test::print function called as static function?)\n\n**Code**\n\n``` rust\nstruct Test;                                                         \nimpl Drop for Test {                                                       \n  fn drop (&mut self) {                                                    \n    println(\"Dropped.\");                                                   \n  }                                                                        \n}                                                                          \n\nimpl Test {                                                                \n  fn print(&self) { println!(\"Print!\"); }                                  \n}                                                                          \n\nfn createTest() -> &Test {                                                 \n  let testValue = &Test;                                                   \n  return testValue;                                                        \n}                                                                          \n\nfn main() {                                                                \n  let test = createTest();                                             \n  test.print();                                                            \n  println(\"Test\");                                                         \n}\n```\n\n**Result**\n\n```\nDropped.\nPrint!\nTest\n```\n\nIt happened with empty struct only. Is it a really bug?\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/11681/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/11681/timeline", "performed_via_github_app": null, "state_reason": "completed"}