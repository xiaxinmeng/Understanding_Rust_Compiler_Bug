{"url": "https://api.github.com/repos/rust-lang/rust/issues/7275", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/7275/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/7275/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/7275/events", "html_url": "https://github.com/rust-lang/rust/issues/7275", "id": 15849477, "node_id": "MDU6SXNzdWUxNTg0OTQ3Nw==", "number": 7275, "title": "Consider renaming `str`, `int`, etc. to `Str`, `Int`, Etc.", "user": {"login": "bstrie", "id": 865233, "node_id": "MDQ6VXNlcjg2NTIzMw==", "avatar_url": "https://avatars.githubusercontent.com/u/865233?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bstrie", "html_url": "https://github.com/bstrie", "followers_url": "https://api.github.com/users/bstrie/followers", "following_url": "https://api.github.com/users/bstrie/following{/other_user}", "gists_url": "https://api.github.com/users/bstrie/gists{/gist_id}", "starred_url": "https://api.github.com/users/bstrie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bstrie/subscriptions", "organizations_url": "https://api.github.com/users/bstrie/orgs", "repos_url": "https://api.github.com/users/bstrie/repos", "events_url": "https://api.github.com/users/bstrie/events{/privacy}", "received_events_url": "https://api.github.com/users/bstrie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2013-06-21T12:46:47Z", "updated_at": "2013-09-05T17:41:13Z", "closed_at": "2013-09-05T17:41:08Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\n< bstrie> I'm starting to think that maybe it *would* be better if str\n          and int etc. were Str and Int for the sake of consistency...\n          was there a good reason that's not the case, other than legacy\n          reasons?\n< bstrie> because I'm reading tjc's slides and it does stick out that\n          those types are lowercase unlike all other types\n<@brson> bstrie: it stuck out to me too. that was one of the noob q's i\n         asked him during his rehearsal\n< aatch> I'd prefer keeping all the primitive types as lower-case though\n<@brson> Java and C# are precedents\n< aatch> I'm not too bothered about str though\n< strcat> what makes them a primitive type though?\n< dbaupp> strcat: hard-coded into the compiler & corresponding to machine\n          operations?\n< aatch> Does the CPU itself have some notion of it? For most types, no,\n         but it does understand about integers and floats.\n< Eridius> bstrie: I haven't read any backscroll, but I rather like the\n           idea that intrinsic types are lowercased\n< Eridius> (not traits though)\n< strcat> aatch: LLVM represents signed/unsigned integers as the same type\n<@brson> we could turn str and vec into lang items\n< steven_is_false> Java has the boxing reason for why int, and such are\n                   lower case. There is no such reason for Rust.\n< strcat> aatch: uint vs int is a distinction made by rust\n<@brson> if str and vec were lang items they wouldn't have to have so\n         many awkward traits to hold their impls\n<@brson> since they would be user-defined types\n< strcat> brson: why not make everything a lang item then? ;p\n< aatch> strcat, so? LLVM does make a distinction between signed and\n         unsigned versions of operations.\n< strcat> aatch: not the integer ops\n< dbaupp> brson: that would presumably require DST? (it sounds nice\n          though! move more things to libraries.)\n```\n\nLet's try not to get too bikesheddy here.\n\nArguments in favor of changing to uppercase:\n- Every other type in the language is uppercased, so we get consistency.\n- Will head off questions from new users.\n- We really have no coherent concept of \"primitive types\", so a distinction doesn't make sense.\n\nArguments in favor of leaving them lowercase:\n- Slightly easier to type.\n", "closed_by": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/7275/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/7275/timeline", "performed_via_github_app": null, "state_reason": "completed"}