{"url": "https://api.github.com/repos/rust-lang/rust/issues/58487", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/58487/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/58487/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/58487/events", "html_url": "https://github.com/rust-lang/rust/issues/58487", "id": 410761314, "node_id": "MDU6SXNzdWU0MTA3NjEzMTQ=", "number": 58487, "title": "aarch64 ABI: revisit which ZST fields should be filtered from repr(C)", "user": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 45472092, "node_id": "MDU6TGFiZWw0NTQ3MjA5Mg==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-ffi", "name": "A-ffi", "color": "f7e101", "default": false, "description": "Area: Foreign Function Interface (FFI)"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 4288196623, "node_id": "LA_kwDOAAsO6M7_mLAP", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-abi", "name": "A-abi", "color": "f7e101", "default": false, "description": "Area: Concerning the \"application binary interface\" between functions."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-02-15T13:06:17Z", "updated_at": "2022-07-01T20:27:35Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Spawned off of https://github.com/rust-lang/rust/issues/56877#issuecomment-457490611 and https://github.com/rust-lang/rust/pull/57645#issuecomment-456962622\r\n\r\nThe issues raised by #56877 were partially addressed by PR #57645 but there may be some followup work to do here.\r\n\r\nBased on my current understanding, PR #57645 ended up settling on filtering out *all* ZST's when determining if a type is an instance of a so-called \"homogeneous aggregate\", and the remaining question is whether we have to deal with architecture/target dependencies when resolving the semantic question of whether the Rust type `[T; 0]` should map to the C type`T[0]` or to `T[]`. \r\n\r\nNamely, it sounds like AArch64 may require us to restrict the filtering we do (for determining whether a type is a homogenous aggregate) to just the Rust ZST's like `PhantomData`.\r\n\r\nAnyway, this issue is to tracking that leftover work to resolve that question.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/58487/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/58487/timeline", "performed_via_github_app": null, "state_reason": null}