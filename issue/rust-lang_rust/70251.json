{"url": "https://api.github.com/repos/rust-lang/rust/issues/70251", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/70251/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/70251/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/70251/events", "html_url": "https://github.com/rust-lang/rust/issues/70251", "id": 585599536, "node_id": "MDU6SXNzdWU1ODU1OTk1MzY=", "number": 70251, "title": "std::env::vars() panics on any non-utf8 env var, feels like a footgun", "user": {"login": "Arnavion", "id": 1096010, "node_id": "MDQ6VXNlcjEwOTYwMTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1096010?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Arnavion", "html_url": "https://github.com/Arnavion", "followers_url": "https://api.github.com/users/Arnavion/followers", "following_url": "https://api.github.com/users/Arnavion/following{/other_user}", "gists_url": "https://api.github.com/users/Arnavion/gists{/gist_id}", "starred_url": "https://api.github.com/users/Arnavion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Arnavion/subscriptions", "organizations_url": "https://api.github.com/users/Arnavion/orgs", "repos_url": "https://api.github.com/users/Arnavion/repos", "events_url": "https://api.github.com/users/Arnavion/events{/privacy}", "received_events_url": "https://api.github.com/users/Arnavion/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-21T22:42:02Z", "updated_at": "2023-03-24T01:02:08Z", "closed_at": "2023-03-24T01:02:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Consider some code that is looking for an env var that it knows should be valid UTF-8. It would be tempted to use `std::env::vars()` for this:\r\n\r\n```rust\r\nlet value =\r\n    std::env::vars()\r\n    .find_map(|(key, value)| if cond(key) { Some(value) } else { None })\r\n    .unwrap();\r\n```\r\n\r\n(It doesn't know the exact name of the env var, hence the need to enumerate every env var and test the key with `cond`, rather than just using `std::env::var()`.)\r\n\r\nBut this will panic if an unrelated env var that isn't convertible to `String` happens to be enumerated first, because `Vars` uses `.into_string().unwrap()` on both `OsString`s that it gets from `VarsOs`. This behavior is documented on `std::env::vars()`, so it's by design.\r\n\r\nSo, to be robust against this failure mode, the code has to use `std::env::vars_os()` and test for `String`-iness itself:\r\n\r\n```rust\r\nlet value =\r\n    std::env::vars_os()\r\n    .find_map(|(key, value)| {\r\n        let key = key.into_string().ok()?;\r\n        if cond(key) {\r\n            let value = value.into_string().ok()?;\r\n            Some(value)\r\n        }\r\n        else {\r\n            None\r\n        }\r\n    }).unwrap();\r\n```\r\n\r\nEnv vars are almost always out of the hands of one's code, and can come from any number of sources even the user running the program may not account for. So it seems to me that `std::env::vars()` as it's implemented today is a trivial way to crash unnecessarily and should never be used.\r\n\r\nIt would be nice if it skipped non-UTF-8 env vars instead. Or, if it's necessary to preserve compatibility with the current behavior (which it has had [since 1.0](https://github.com/rust-lang/rust/commit/a828e7948069f310dc5b33be8edb65e5e8e0cf9a)), there was a new function that did (`std::env::vars_utf8_only()` ?)", "closed_by": {"login": "Arnavion", "id": 1096010, "node_id": "MDQ6VXNlcjEwOTYwMTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1096010?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Arnavion", "html_url": "https://github.com/Arnavion", "followers_url": "https://api.github.com/users/Arnavion/followers", "following_url": "https://api.github.com/users/Arnavion/following{/other_user}", "gists_url": "https://api.github.com/users/Arnavion/gists{/gist_id}", "starred_url": "https://api.github.com/users/Arnavion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Arnavion/subscriptions", "organizations_url": "https://api.github.com/users/Arnavion/orgs", "repos_url": "https://api.github.com/users/Arnavion/repos", "events_url": "https://api.github.com/users/Arnavion/events{/privacy}", "received_events_url": "https://api.github.com/users/Arnavion/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/70251/reactions", "total_count": 5, "+1": 3, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 2}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/70251/timeline", "performed_via_github_app": null, "state_reason": "completed"}