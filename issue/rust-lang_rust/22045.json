{"url": "https://api.github.com/repos/rust-lang/rust/issues/22045", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/22045/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/22045/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/22045/events", "html_url": "https://github.com/rust-lang/rust/issues/22045", "id": 56907220, "node_id": "MDU6SXNzdWU1NjkwNzIyMA==", "number": 22045, "title": "convention issue: structs with all pub fields are a hazard and should be avoided in libstd", "user": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 14, "created_at": "2015-02-07T10:55:45Z", "updated_at": "2016-12-30T13:56:08Z", "closed_at": "2015-02-12T21:29:48Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Tuple structs are convenient at times, but they present issues for forward compatibility, ~~especially (but _not_ only)~~  when they carry all `pub` fields\n\nExample: `std::ptr::Unique` is currently defined as follows:\n\n``` rust\n#[unstable(feature = \"core\", reason = \"recently added to this module\")]\npub struct Unique<T: ?Sized>(pub *mut T);\n```\n\nThis is unfortunate, since assuming https://github.com/rust-lang/rfcs/pull/738 is accepted (namely the `PhantomData` part, which I need for https://github.com/rust-lang/rfcs/pull/769), we really should add `PhantomData<T>` as a member of `Unique<T>`.\n\nSo, why did we use tuple structs instead of a struct with private named fields?\n\nI suspect it was for the convenience of the person authoring the library when it was first made.  But these details end up leaking out to the users of these modules, and there does not seem to be much reason for it.  The main use of a tuple-struct in a case like this is for composability with pattern matching, but I do not think that use outweighs the cost of being stuck with an API that hinders future changes to the internals of the stdlib.\n\n---\n\nAnother related case where this comes up: we currently define `std::boxed::Box`  as a tuple struct.  Now, its only field is non-`pub`.  However, the use of a tuple struct here puts `Box` itself into the value namespace, and thus the name `Box` in the value namespace of the prelude is essentially unavailable for any useful purpose.  I think this is a bug in that API design; see my comment here: https://github.com/rust-lang/rfcs/pull/809#issuecomment-73359096\n\nUPDATE: I have been convinced that tuple structs with a non-pub field are not a real hazard (see reasoning in [my comment below](https://github.com/rust-lang/rust/issues/22045#issuecomment-73873350)).\n", "closed_by": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/22045/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/22045/timeline", "performed_via_github_app": null, "state_reason": "completed"}