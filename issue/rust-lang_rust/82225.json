{"url": "https://api.github.com/repos/rust-lang/rust/issues/82225", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/82225/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/82225/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/82225/events", "html_url": "https://github.com/rust-lang/rust/issues/82225", "id": 810379001, "node_id": "MDU6SXNzdWU4MTAzNzkwMDE=", "number": 82225, "title": "Overly verbose output on invalid for loop due to recovery", "user": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 27424086, "node_id": "MDU6TGFiZWwyNzQyNDA4Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-parser", "name": "A-parser", "color": "f7e101", "default": false, "description": "Area: The parsing of Rust source code to an AST."}, {"id": 60329014, "node_id": "MDU6TGFiZWw2MDMyOTAxNA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-low", "name": "P-low", "color": "eb6420", "default": false, "description": "Low priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1659943986, "node_id": "MDU6TGFiZWwxNjU5OTQzOTg2", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-verbose", "name": "D-verbose", "color": "c9f7a3", "default": false, "description": "Too much output caused by a single piece of incorrect code"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-02-17T17:17:48Z", "updated_at": "2023-05-30T16:16:31Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Given code like\n\n```rust\nfn main() {\n    for (int i; i<10; i++) {}\n}\n```\n\nthe current output is\n\n```\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n --> src/main.rs:2:14\n  |\n2 |     for (int i; i<10; i++) {}\n  |             -^ expected one of `)`, `,`, `@`, or `|`\n  |             |\n  |             help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `;`\n --> src/main.rs:2:15\n  |\n2 |     for (int i; i<10; i++) {}\n  |               ^\n  |               |\n  |               expected one of `)`, `,`, `@`, or `|`\n  |               help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `<`\n --> src/main.rs:2:18\n  |\n2 |     for (int i; i<10; i++) {}\n  |                  ^\n  |                  |\n  |                  expected one of `)`, `,`, `@`, or `|`\n  |                  help: missing `,`\n\nerror: expected one of `)`, `,`, `...`, `..=`, `..`, or `|`, found `;`\n --> src/main.rs:2:21\n  |\n2 |     for (int i; i<10; i++) {}\n  |                     ^\n  |                     |\n  |                     expected one of `)`, `,`, `...`, `..=`, `..`, or `|`\n  |                     help: missing `,`\n\nerror: expected one of `)`, `,`, `@`, or `|`, found `+`\n --> src/main.rs:2:24\n  |\n2 |     for (int i; i<10; i++) {}\n  |                        ^ expected one of `)`, `,`, `@`, or `|`\n\nerror: missing `in` in `for` loop\n --> src/main.rs:2:24\n  |\n2 |     for (int i; i<10; i++) {}\n  |                        ^ help: try adding `in` here\n\nerror: expected expression, found `+`\n --> src/main.rs:2:24\n  |\n2 |     for (int i; i<10; i++) {}\n  |                        ^ expected expression\n\nerror: aborting due to 7 previous errors\n```\n\nIdeally the output would be much less verbose. An option could be to track in `ParseSess` how many parse errors have occurred and only once recovery has been successful for a whole item allow further parse errors. For parse errors inside of any item we swallow every token until the closing `}`, but in this case multiple layers of recovery cause cascading parse errors.\n\nA potential output that should be attainable without overly complicating the parser could be:\n\n```\nerror: expected one of `)`, `,`, `@`, or `|`, found `i`\n --> src/main.rs:2:14\n  |\n2 |     for (int i; i<10; i++) {}\n  |             -^ expected one of `)`, `,`, `@`, or `|`\n  |             |\n  |             help: missing `,`\n\nerror: malformed `for` loop expression\n --> src/main.rs:2:15\n  |\n2 |     for (int i; i<10; i++) {}\n  |     ---       ^ expected one of `)`, `,`, `@`, or `|`\n  |     |         \n  |     parsing this `for` loop\n  |\nhelp: for loops are written as `for PATTERN in EXPRESSION { BODY }`\n```\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"obeis\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/82225/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/82225/timeline", "performed_via_github_app": null, "state_reason": null}