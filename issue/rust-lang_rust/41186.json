{"url": "https://api.github.com/repos/rust-lang/rust/issues/41186", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/41186/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/41186/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/41186/events", "html_url": "https://github.com/rust-lang/rust/issues/41186", "id": 220673493, "node_id": "MDU6SXNzdWUyMjA2NzM0OTM=", "number": 41186, "title": "use of possibly uninitialized variable", "user": {"login": "oddcoder", "id": 10424605, "node_id": "MDQ6VXNlcjEwNDI0NjA1", "avatar_url": "https://avatars.githubusercontent.com/u/10424605?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oddcoder", "html_url": "https://github.com/oddcoder", "followers_url": "https://api.github.com/users/oddcoder/followers", "following_url": "https://api.github.com/users/oddcoder/following{/other_user}", "gists_url": "https://api.github.com/users/oddcoder/gists{/gist_id}", "starred_url": "https://api.github.com/users/oddcoder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oddcoder/subscriptions", "organizations_url": "https://api.github.com/users/oddcoder/orgs", "repos_url": "https://api.github.com/users/oddcoder/repos", "events_url": "https://api.github.com/users/oddcoder/events{/privacy}", "received_events_url": "https://api.github.com/users/oddcoder/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-10T15:02:09Z", "updated_at": "2017-06-20T21:31:17Z", "closed_at": "2017-06-20T21:31:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nuse std::fs::*;\r\nuse std::io::*;\r\npub struct FileHandler {\r\n    path: String,\r\n    buf: BufReader<File>,\r\n}\r\nimpl FileHandler {\r\n    pub fn new(path: String) -> FileHandler {\r\n        let file = File::open(&path).unwrap();\r\n        let f = BufReader::new(file);\r\n        return FileHandler {\r\n            path: path,\r\n            buf: f,\r\n        };\r\n    }\r\n    fn scrap_comment (&mut self) -> Result<String> {\r\n        let mut line: String;\r\n        let mut done = false;\r\n        while !done {\r\n            let commented_line;\r\n            match (&mut self.buf).lines().nth(0).unwrap() {\r\n                Err(e) => return Err(e),\r\n                Ok(s) => commented_line = s,\r\n            }\r\n            line = commented_line.split(\".\").nth(0).unwrap().trim().to_string();\r\n            if !line.is_empty(){\r\n                done = true;\r\n            }\r\n        }\r\n        return Ok (line);\r\n    }\r\n}\r\n```\r\ngives error\r\n```\r\n|         return Ok (line);\r\n|                          ^^^^ use of possibly uninitialized `line`\r\n```\r\nhowever when switching to loop instead of while\r\n```\r\n    fn scrap_comment (&mut self) -> Result<String> {\r\n        let mut line: String;\r\n        loop {\r\n            let commented_line;\r\n            match (&mut self.buf).lines().nth(0).unwrap() {\r\n                Err(e) => return Err(e),\r\n                Ok(s) => commented_line = s,\r\n            }\r\n            line = commented_line.split(\".\").nth(0).unwrap().trim().to_string();\r\n            if !line.is_empty(){\r\n                break;\r\n            }\r\n        }\r\n        return Ok (line);\r\n    }\r\n```\r\nthe error disappears, given that both Functions do exactly the same logic and there is no path that would result in an uninitialized `line`", "closed_by": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/41186/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/41186/timeline", "performed_via_github_app": null, "state_reason": "completed"}