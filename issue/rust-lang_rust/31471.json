{"url": "https://api.github.com/repos/rust-lang/rust/issues/31471", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/31471/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/31471/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/31471/events", "html_url": "https://github.com/rust-lang/rust/issues/31471", "id": 132005297, "node_id": "MDU6SXNzdWUxMzIwMDUyOTc=", "number": 31471, "title": "Add rustc --emit=link-info for staticlib link-line output", "user": {"login": "rillian", "id": 225102, "node_id": "MDQ6VXNlcjIyNTEwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/225102?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rillian", "html_url": "https://github.com/rillian", "followers_url": "https://api.github.com/users/rillian/followers", "following_url": "https://api.github.com/users/rillian/following{/other_user}", "gists_url": "https://api.github.com/users/rillian/gists{/gist_id}", "starred_url": "https://api.github.com/users/rillian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rillian/subscriptions", "organizations_url": "https://api.github.com/users/rillian/orgs", "repos_url": "https://api.github.com/users/rillian/repos", "events_url": "https://api.github.com/users/rillian/events{/privacy}", "received_events_url": "https://api.github.com/users/rillian/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 36956, "node_id": "MDU6TGFiZWwzNjk1Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-frontend", "name": "A-frontend", "color": "f7e101", "default": false, "description": "Area: frontend (errors, parsing and HIR)"}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2016-02-07T20:09:06Z", "updated_at": "2017-07-24T21:41:06Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When linking rust into C++ projects, I use `rustc --crate-type=staticlib` to generate a static library which I can link into the overall project. Since there's no standard for transitive dependency declaration in the C ABI for static libraries, rustc prints out a list of libraries which need to be linked along with the staticlib. (https://github.com/rust-lang/rust/issues/25820#issuecomment-106480235)\n\nThis is very helpful in development, but not ideal for automation. I propose adding an `--emit=link-info` option (`--emit=libs`? `--emit=ldflags`?) to write the required link line out to a file for use later, similar to `--emit=dep-info` for makefile dependency generation.\n\nOrder of evaluation is a little trickier than with dep-info since it has to work the first time, but this should simplify funky stderr hacks like\n\n``` make\nlibfoo.a libfoo.a.out: foo/lib.rs\n    rustc -g --crate-type staticlib --crate-name foo \\\n      --emit dep-info,link=$@ $< \\\n      2> $@.out || cat $@.out >&2\n-include foo.d\n\nprog: RUST_LIBS = $(shell awk '/^note: library: / {print \"-l\"$$3}' libmp4parse.a.out)\nprog: prog.o libfoo.a\n    $(CXX) $(CXXFLAGS) -o $@ $^ $(RUST_LIBS)\n```\n\ninto\n\n``` make\nlibfoo.a libfoo.a.link: foo/lib.rs\n    rustc -g --crate-type staticlib --crate-name foo \\\n      --emit dep-info,link=$@,link-info=$@.link $<\n-include foo.d\n\nprog: prog.o libfoo.a\n    $(CXX) $(CXXFLAGS) -o $@ $^ $(shell cat libfoo.a.link)\n```\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/31471/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/31471/timeline", "performed_via_github_app": null, "state_reason": null}