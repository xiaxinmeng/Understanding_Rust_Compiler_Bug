{"url": "https://api.github.com/repos/rust-lang/rust/issues/72106", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/72106/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/72106/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/72106/events", "html_url": "https://github.com/rust-lang/rust/issues/72106", "id": 615776871, "node_id": "MDU6SXNzdWU2MTU3NzY4NzE=", "number": 72106, "title": "Unhelpful error messages for trait with unbound lifetime", "user": {"login": "willir", "id": 1318536, "node_id": "MDQ6VXNlcjEzMTg1MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1318536?v=4", "gravatar_id": "", "url": "https://api.github.com/users/willir", "html_url": "https://github.com/willir", "followers_url": "https://api.github.com/users/willir/followers", "following_url": "https://api.github.com/users/willir/following{/other_user}", "gists_url": "https://api.github.com/users/willir/gists{/gist_id}", "starred_url": "https://api.github.com/users/willir/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/willir/subscriptions", "organizations_url": "https://api.github.com/users/willir/orgs", "repos_url": "https://api.github.com/users/willir/repos", "events_url": "https://api.github.com/users/willir/events{/privacy}", "received_events_url": "https://api.github.com/users/willir/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1596121013, "node_id": "MDU6TGFiZWwxNTk2MTIxMDEz", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-confusing", "name": "D-confusing", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error that should be reworked"}, {"id": 1596122811, "node_id": "MDU6TGFiZWwxNTk2MTIyODEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-newcomer-roadblock", "name": "D-newcomer-roadblock", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error hard to understand for new users"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-11T10:31:53Z", "updated_at": "2020-05-30T03:24:51Z", "closed_at": "2020-05-30T03:24:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was trying to implement [FromSql](https://docs.rs/rusqlite/0.13.0/rusqlite/types/trait.FromSql.html) of `rusqlite` for my reference type (with lifetime). And I faced an unclear error message, later I was explained that the trait does not allow the return type to borrow from the value argument since it doesn't specify lifetime parameter explicitly.\r\n\r\nHowever, I thought that it worth filing a bug report about unhelpful error message anyway.\r\n\r\nHere is a simplified code:\r\n\r\n```rust\r\nuse std::error::Error;\r\nuse std::fmt;\r\n\r\n#[derive(Copy, Clone, Debug, PartialEq)]\r\npub enum ValueRef<'a> {\r\n    Null,\r\n    Integer(i64),\r\n    Real(f64),\r\n    Text(&'a [u8]),\r\n    Blob(&'a [u8]),\r\n}\r\n\r\nimpl<'a> ValueRef<'a> {\r\n    pub fn as_str(&self) -> FromSqlResult<&'a str> {\r\n        match *self {\r\n            ValueRef::Text(t) => {\r\n                std::str::from_utf8(t).map_err(|_| FromSqlError::InvalidType)\r\n            }\r\n            _ => Err(FromSqlError::InvalidType),\r\n        }\r\n    }\r\n}\r\n\r\n#[derive(Debug)]\r\n#[non_exhaustive]\r\npub enum FromSqlError {\r\n    InvalidType\r\n}\r\n\r\nimpl fmt::Display for FromSqlError {\r\n    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\r\n        write!(f, \"InvalidType\")\r\n    }\r\n}\r\n\r\nimpl Error for FromSqlError {}\r\n\r\npub type FromSqlResult<T> = Result<T, FromSqlError>;\r\n\r\npub trait FromSql: Sized {\r\n    fn column_result(value: ValueRef<'_>) -> FromSqlResult<Self>;\r\n}\r\n\r\nimpl FromSql for &str {\r\n    fn column_result(value: ValueRef<'_>) -> FromSqlResult<&str> {\r\n        value.as_str()\r\n    }\r\n}\r\n\r\npub fn main() {\r\n    println!(\"{}\", \"Hello World\");\r\n}\r\n```\r\n\r\nThe error message I'm getting is:\r\n\r\n```rust\r\nerror: `impl` item signature doesn't match `trait` item signature\r\n  --> src/main.rs:45:5\r\n   |\r\n41 |     fn column_result(value: ValueRef<'_>) -> FromSqlResult<Self>;\r\n   |     ------------------------------------------------------------- expected fn(ValueRef<'_>) -> std::result::Result<&str, FromSqlError>\r\n...\r\n45 |     fn column_result(value: ValueRef<'_>) -> FromSqlResult<&str> {\r\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ found fn(ValueRef<'_>) -> std::result::Result<&str, FromSqlError>\r\n   |\r\n   = note: expected `fn(ValueRef<'_>) -> std::result::Result<&str, FromSqlError>`\r\n              found `fn(ValueRef<'_>) -> std::result::Result<&str, FromSqlError>`\r\n\r\nerror: aborting due to previous error\r\n\r\nerror: could not compile `playground`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n\r\nSo basically it says that I have a wrong signature, even though the *expected* and *found* signatures are the same.\r\n\r\nI'm not sure what would be the right error message to raise here since I don't know lifetime rules quite well.\r\n\r\nHere is, just in case, a link to [playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=5a524f07d85f03edaec061f8610b2614)\r\n\r\nThe rust version I'm using is: `1.44.0-nightly`, but it also reproduces on `1.43.1`.", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/72106/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/72106/timeline", "performed_via_github_app": null, "state_reason": "completed"}