{"url": "https://api.github.com/repos/rust-lang/rust/issues/51402", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/51402/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/51402/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/51402/events", "html_url": "https://github.com/rust-lang/rust/issues/51402", "id": 330021724, "node_id": "MDU6SXNzdWUzMzAwMjE3MjQ=", "number": 51402, "title": "Method resolution for trait object types does not prefer inherent methods", "user": {"login": "withoutboats", "id": 9063376, "node_id": "MDQ6VXNlcjkwNjMzNzY=", "avatar_url": "https://avatars.githubusercontent.com/u/9063376?v=4", "gravatar_id": "", "url": "https://api.github.com/users/withoutboats", "html_url": "https://github.com/withoutboats", "followers_url": "https://api.github.com/users/withoutboats/followers", "following_url": "https://api.github.com/users/withoutboats/following{/other_user}", "gists_url": "https://api.github.com/users/withoutboats/gists{/gist_id}", "starred_url": "https://api.github.com/users/withoutboats/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/withoutboats/subscriptions", "organizations_url": "https://api.github.com/users/withoutboats/orgs", "repos_url": "https://api.github.com/users/withoutboats/repos", "events_url": "https://api.github.com/users/withoutboats/events{/privacy}", "received_events_url": "https://api.github.com/users/withoutboats/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-06-06T20:32:38Z", "updated_at": "2022-02-27T16:25:33Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Normally, inherent methods are given precedence over all trait methods, so that there is no ambiguity.\r\n\r\nHowever, this behavior does not appear to be implemented for trait object types:\r\n\r\n```rust\r\ntrait Foo {\r\n    fn f(&self) { }\r\n}\r\n\r\nimpl Foo {\r\n    fn f(&self) { }\r\n}\r\n\r\nimpl Foo for i32 { }\r\n\r\nstruct Bar;\r\n\r\nimpl Bar {\r\n    fn f(&self) { }\r\n}\r\n\r\nimpl Foo for Bar { }\r\n\r\nfn main() {\r\n    let x: &Foo = &42i32;\r\n    x.f();\r\n    let bar: &Bar = &Bar;\r\n    bar.f();\r\n}\r\n```\r\n\r\nhttps://play.rust-lang.org/?gist=7d4534a5d973249c66244b9affa03199&version=stable&mode=debug\r\n\r\nWhat's worse, UFCS does not allow for specifying that you want the inherent method, because `Foo::f(x)` in this code will remain ambiguous. In general, UFCS isn't designed to support disambiguating to inherent methods because inherent methods are supposed to always take precedence.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/51402/reactions", "total_count": 3, "+1": 3, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/51402/timeline", "performed_via_github_app": null, "state_reason": null}