{"url": "https://api.github.com/repos/rust-lang/rust/issues/61773", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/61773/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/61773/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/61773/events", "html_url": "https://github.com/rust-lang/rust/issues/61773", "id": 455270629, "node_id": "MDU6SXNzdWU0NTUyNzA2Mjk=", "number": 61773, "title": "`impl_trait_in_bindings` and pick-constraint region bounds", "user": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 631673608, "node_id": "MDU6TGFiZWw2MzE2NzM2MDg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-impl-trait", "name": "A-impl-trait", "color": "f7e101", "default": false, "description": "Area: impl Trait. Universally / existentially quantified anonymous types with static dispatch."}, {"id": 1472504103, "node_id": "MDU6TGFiZWwxNDcyNTA0MTAz", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-member_constraints", "name": "F-member_constraints", "color": "f9c0cc", "default": false, "description": "`#[feature(member_constraints)]`"}, {"id": 1472505091, "node_id": "MDU6TGFiZWwxNDcyNTA1MDkx", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-impl_trait_in_bindings", "name": "F-impl_trait_in_bindings", "color": "f9c0cc", "default": false, "description": "`#![feature(impl_trait_in_bindings)]`"}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-06-12T15:09:42Z", "updated_at": "2021-02-16T10:48:38Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm working on https://github.com/rust-lang/rust/issues/56238. In the process, I'm extending how `impl Trait` lifetime inference works -- in particular in scenarios involving multiple, unrelated lifetimes, such as `impl Trait<'a, 'b>`. The challenge here is that each region `'h` in the hidden type must be equal to `'a` or `'b`, but we can't readily express that relationship in terms of our usual \"outlives relationships\". The solver is thus extended with a \"pick constraint\", written `pick 'h from ['a, 'b]`, which expresses that `'h` must be equal to `'a` or `'b`. The current integration into the solver, however, requires that the regions involved are lifetime parameters. This is always true for `impl Trait` used at function boundaries, but it is not true for let bindings. \r\n\r\nThe challenge is that if you have a program like:\r\n\r\n```rust\r\ntrait Foo<'_> { }\r\nimpl Foo<'_> for &u32 { }\r\n\r\nfn bar() {\r\n  let x: impl Foo<'_> = &44; // let's call the region variable for `'_` `'1`\r\n}\r\n```\r\n\r\nthen we would wind up with `pick '0 from ['1, 'static]`, where `'0` is the region variable in the hidden type (`&'0 u32`) and `'1` is the region variable in the bounds `Foo<'1>`. This is tricky because both `'0` and `'1` are being inferred -- so making them equal may have other repercussions.\r\n\r\nFor the time being, I've chosen to include some assertions that this scenario never comes up. I'm tagging a FIXME in the code with this issue number. I was going to create some tests, but owing to the ICE https://github.com/rust-lang/rust/issues/60473 (not unrelated to this issue, actually), that proved difficult, so I'll just post comments in here instead.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/61773/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/61773/timeline", "performed_via_github_app": null, "state_reason": null}