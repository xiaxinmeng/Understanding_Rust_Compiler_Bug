{"url": "https://api.github.com/repos/rust-lang/rust/issues/16918", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/16918/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/16918/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/16918/events", "html_url": "https://github.com/rust-lang/rust/issues/16918", "id": 41608845, "node_id": "MDU6SXNzdWU0MTYwODg0NQ==", "number": 16918, "title": "DST-ification of libraries", "user": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 23, "created_at": "2014-09-01T05:55:52Z", "updated_at": "2015-01-20T06:09:55Z", "closed_at": "2015-01-20T06:09:55Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "We should change our impls to a DST style where appropriate. E.g., `impl Ord for str ...`. This requires changing a bunch of traits to have the `Sized?` bound.\n\nThis kind of works. The problem is that we currently do not unify `T` with unsized types (`[T]`, `str`, etc.) during subtyping/type inference and thus trait matching. This means that if do the DST-ification, we will fail to type check in places with references (e.g., `a == b` where `a` and `b` both have type `&str`). However, if we do unify, we will get coherance errors where impls are defined for, e.g., `&T` and `&str`. Thus we have a bit of a catch 22. We could cfg our way to victory, but there are literally hundreds of places that need DST-ification, so that will be extremely painful. I'm not sure if trait reform landing can help us here, or perhaps where clauses with `!=` constraints or something equally exotic. Perhaps we could hack coherance with this special case temporarily. Anyway, we need a plan!\n\ncc @nikomatsakis \n", "closed_by": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/16918/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/16918/timeline", "performed_via_github_app": null, "state_reason": "completed"}