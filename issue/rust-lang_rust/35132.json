{"url": "https://api.github.com/repos/rust-lang/rust/issues/35132", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/35132/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/35132/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/35132/events", "html_url": "https://github.com/rust-lang/rust/issues/35132", "id": 168484996, "node_id": "MDU6SXNzdWUxNjg0ODQ5OTY=", "number": 35132, "title": "Rust could release borrows in match against the matched object in some cases", "user": {"login": "toumorokoshi", "id": 391240, "node_id": "MDQ6VXNlcjM5MTI0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/391240?v=4", "gravatar_id": "", "url": "https://api.github.com/users/toumorokoshi", "html_url": "https://github.com/toumorokoshi", "followers_url": "https://api.github.com/users/toumorokoshi/followers", "following_url": "https://api.github.com/users/toumorokoshi/following{/other_user}", "gists_url": "https://api.github.com/users/toumorokoshi/gists{/gist_id}", "starred_url": "https://api.github.com/users/toumorokoshi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/toumorokoshi/subscriptions", "organizations_url": "https://api.github.com/users/toumorokoshi/orgs", "repos_url": "https://api.github.com/users/toumorokoshi/repos", "events_url": "https://api.github.com/users/toumorokoshi/events{/privacy}", "received_events_url": "https://api.github.com/users/toumorokoshi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-07-30T20:15:53Z", "updated_at": "2016-07-30T23:09:50Z", "closed_at": "2016-07-30T23:09:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems like Rust's borrow checker could be more lenient on match checks where the match is an enum with no references to the object being matched.\n\nI tried this code:\n\n```\nuse std::collections::HashMap;\n\nfn main() {\n    let mut my_map: HashMap<String, String> = HashMap::new();\n    lazy_get(&mut my_map, String::from(\"foo\"));\n}\n\n/*\n// what I want to do, but it leads to an error\nfn lazy_get(map: &mut HashMap<String, String>, key: String) -> String {\n    match map.get(&key) {\n        Some(v) => v.clone(),\n        None => {\n            let new_val = key.clone();\n            map.insert(new_val, new_val);\n            new_val\n        }\n    }\n} */\n\n// my workaround\nfn lazy_get(map: &mut HashMap<String, String>, key: String) -> String {\n    if let None = map.get(&key) {\n        let new_value = key.clone();\n        map.insert(key.clone(), new_value.clone());\n        return new_value;\n    }\n    match map.get(&key) {\n        Some(v) => v.clone(),\n        // this case will never happen, but I have to add it\n        // to satisfy all matches.\n        None => key.clone()\n    }\n}\n```\n\nI expected to see this happen: \n\nIn the commented example, I would expect that if the map is matched to None, it would release the borrow on the map, thereby allowing me to mutate it. For this particular case, it would make the code a bit cleaner, by omitting unused code that exists for the sake of the match completeness.\n\nInstead, this happened: borrow checker complains about an immutable borrow existing previously.\n\nTried this on the rust playground, against the nightly as well.\n", "closed_by": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/35132/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/35132/timeline", "performed_via_github_app": null, "state_reason": "completed"}