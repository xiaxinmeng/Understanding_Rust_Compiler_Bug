{"url": "https://api.github.com/repos/rust-lang/rust/issues/80137", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/80137/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/80137/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/80137/events", "html_url": "https://github.com/rust-lang/rust/issues/80137", "id": 770434530, "node_id": "MDU6SXNzdWU3NzA0MzQ1MzA=", "number": 80137, "title": "Compiler is not able to infer the type of a HashMap, when all types should be known", "user": {"login": "DzenanJupic", "id": 56133904, "node_id": "MDQ6VXNlcjU2MTMzOTA0", "avatar_url": "https://avatars.githubusercontent.com/u/56133904?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DzenanJupic", "html_url": "https://github.com/DzenanJupic", "followers_url": "https://api.github.com/users/DzenanJupic/followers", "following_url": "https://api.github.com/users/DzenanJupic/following{/other_user}", "gists_url": "https://api.github.com/users/DzenanJupic/gists{/gist_id}", "starred_url": "https://api.github.com/users/DzenanJupic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DzenanJupic/subscriptions", "organizations_url": "https://api.github.com/users/DzenanJupic/orgs", "repos_url": "https://api.github.com/users/DzenanJupic/repos", "events_url": "https://api.github.com/users/DzenanJupic/events{/privacy}", "received_events_url": "https://api.github.com/users/DzenanJupic/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-12-17T22:57:06Z", "updated_at": "2020-12-17T23:26:50Z", "closed_at": "2020-12-17T23:26:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm currently porting pytube to Rust and encountered a situation where the compiler requires me to specify the type of a `HashMap`s Value, even though all types are known.\r\n\r\n## I tried this code:\r\n[playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&code=use%20std%3A%3Acollections%3A%3AHashMap%3B%0A%0Apub(crate)%20fn%20parse_qs(qs%3A%20%26str)%20-%3E%20Result%3CHashMap%3CString%2C%20Vec%3CString%3E%3E%2C%20()%3E%20%7B%0A%20%20%20%20let%20mut%20parsed_results%20%3D%20HashMap%3A%3Anew()%3B%0A%20%20%20%20%2F%2Flet%20mut%20parsed_results%20%3D%20HashMap%3A%3A%3C_%2C%20Vec%3C_%3E%3E%3A%3Anew()%3B%0A%20%20%20%20let%20pairs%3A%20Vec%3C(String%2C%20String)%3E%20%3D%20parse_qsl(qs)%3F%3B%0A%20%20%20%20%0A%20%20%20%20for%20(name%2C%20value)%20in%20pairs%20%7B%0A%20%20%20%20%20%20%20%20match%20parsed_results.get_mut(name.as_str())%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20Some(result)%20%3D%3E%20result.push(value)%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20None%20%3D%3E%20%7B%20parsed_results.insert(name%2C%20vec!%5Bvalue%5D)%3B%20%7D%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%20%20%20%20%0A%20%20%20%20Ok(parsed_results)%0A%7D%0A%0Apub(crate)%20fn%20parse_qsl(qs%3A%20%26str)%20-%3E%20Result%3CVec%3C(String%2C%20String)%3E%2C%20()%3E%20%7B%0A%20%20%20%20unimplemented!()%3B%0A%7D)\r\n\r\n```rust\r\nuse std::collections::HashMap;\r\n\r\nfn parse_qs(qs: &str) -> Result<HashMap<String, Vec<String>>, ()> {\r\n    let mut parsed_results = HashMap::new();\r\n    let pairs: Vec<(String, String)> = parse_qsl(qs)?;\r\n    \r\n    for (name, value) in pairs {\r\n        match parsed_results.get_mut(name.as_str()) {\r\n            Some(result) => result.push(value),\r\n            None => { parsed_results.insert(name, vec![value]); }\r\n        }\r\n    }\r\n    \r\n    Ok(parsed_results)\r\n}\r\n\r\nfn parse_qsl(qs: &str) -> Result<Vec<(String, String)>, ()> {\r\n    unimplemented!();\r\n}\r\n```\r\n\r\n## I expected to see this happen:\r\nSince all types are known, and `parsed_result` is even being returned, I think it's safe to assume that the compiler can correctly infer the types. (My IDE can)\r\n\r\n## Instead, this happened: \r\nThe compiler requires me to use turbofish syntax:\r\n```rust\r\nlet mut parsed_results = HashMap::<_, Vec<_>>::new();\r\n```\r\notherwise it tells me:\r\n```\r\nerror[E0282]: type annotations needed for `HashMap<K, V>`\r\n --> src/lib.rs:9:30\r\n  |\r\n4 |     let mut parsed_results = HashMap::new();\r\n  |         ------------------ consider giving `parsed_results` the explicit type `HashMap<K, V>`, where the type parameter `V` is specified\r\n...\r\n9 |         match parsed_results.get_mut(name.as_str()) {\r\n  |                              ^^^^^^^ cannot infer type for type parameter `V`\r\n  |\r\n  = note: type must be known at this point\r\n```\r\n\r\n### Meta\r\n- stable 1.48.0\r\n- beta 1.49.0-beta.2\r\n- nightly 1.50.0-nightly", "closed_by": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/80137/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/80137/timeline", "performed_via_github_app": null, "state_reason": "completed"}