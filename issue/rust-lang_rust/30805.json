{"url": "https://api.github.com/repos/rust-lang/rust/issues/30805", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/30805/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/30805/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/30805/events", "html_url": "https://github.com/rust-lang/rust/issues/30805", "id": 125790596, "node_id": "MDU6SXNzdWUxMjU3OTA1OTY=", "number": 30805, "title": "VecDeque's iterator could be optimized", "user": {"login": "bluss", "id": 3209739, "node_id": "MDQ6VXNlcjMyMDk3Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/3209739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluss", "html_url": "https://github.com/bluss", "followers_url": "https://api.github.com/users/bluss/followers", "following_url": "https://api.github.com/users/bluss/following{/other_user}", "gists_url": "https://api.github.com/users/bluss/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluss/subscriptions", "organizations_url": "https://api.github.com/users/bluss/orgs", "repos_url": "https://api.github.com/users/bluss/repos", "events_url": "https://api.github.com/users/bluss/events{/privacy}", "received_events_url": "https://api.github.com/users/bluss/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 166999014, "node_id": "MDU6TGFiZWwxNjY5OTkwMTQ=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-collections", "name": "A-collections", "color": "f7e101", "default": false, "description": "Area: std::collections."}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-01-10T00:36:28Z", "updated_at": "2019-12-11T16:29:26Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "`VecDeque`'s iterator seems to never allow llvm to vectorize loops, this could be improved.\n\nEven an enum where it uses the slice iterator for its contiguous case, and a fallback iterator, would allow vectorization for the contiguous case.\n\nThe following simple benchmark shows the massive difference between the deque iterator and using its two slice parts. The results are the same whether the deque is discontinuous or not. The summation in `sum_deque_2` is an order of magnitude faster, because llvm can autovectorize it.\n\n``` rust\n\n/* Results\ntest sum_deque   ... bench:       1,301 ns/iter (+/- 111)\ntest sum_deque_2 ... bench:          71 ns/iter (+/- 2)\n*/\n\n#![feature(test)]\nextern crate test;\n\nuse test::Bencher;\nuse test::black_box;\n\nuse std::collections::VecDeque;\n\n\n#[bench]\nfn sum_deque(b: &mut Bencher) {\n    let mut dq: VecDeque<_> = (0..1024).collect();\n    /*\n    for _ in 0..128 {\n        let elt = dq.pop_back().unwrap();\n        dq.push_front(elt);\n    }\n    */\n    let dq = black_box(dq);\n\n    b.iter(|| {\n        let mut sum = 0;\n        for elt in &dq {\n            sum += *elt;\n        }\n        sum\n    })\n}\n\n\n#[bench]\nfn sum_deque_2(b: &mut Bencher) {\n    let mut dq: VecDeque<_> = (0..1024).collect();\n    /*\n    for _ in 0..128 {\n        let elt = dq.pop_back().unwrap();\n        dq.push_front(elt);\n    }\n    */\n    let dq = black_box(dq);\n\n    b.iter(|| {\n        let mut sum = 0;\n        let (a, b) = dq.as_slices();\n        for elt in a {\n            sum += *elt;\n        }\n        for elt in b {\n            sum += *elt;\n        }\n        sum\n    })\n}\n```\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/30805/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/30805/timeline", "performed_via_github_app": null, "state_reason": null}