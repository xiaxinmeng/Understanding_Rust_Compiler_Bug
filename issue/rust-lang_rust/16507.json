{"url": "https://api.github.com/repos/rust-lang/rust/issues/16507", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/16507/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/16507/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/16507/events", "html_url": "https://github.com/rust-lang/rust/issues/16507", "id": 40305151, "node_id": "MDU6SXNzdWU0MDMwNTE1MQ==", "number": 16507, "title": "Path::join should concat paths even if the second path is absolute", "user": {"login": "carllerche", "id": 6180, "node_id": "MDQ6VXNlcjYxODA=", "avatar_url": "https://avatars.githubusercontent.com/u/6180?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carllerche", "html_url": "https://github.com/carllerche", "followers_url": "https://api.github.com/users/carllerche/followers", "following_url": "https://api.github.com/users/carllerche/following{/other_user}", "gists_url": "https://api.github.com/users/carllerche/gists{/gist_id}", "starred_url": "https://api.github.com/users/carllerche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carllerche/subscriptions", "organizations_url": "https://api.github.com/users/carllerche/orgs", "repos_url": "https://api.github.com/users/carllerche/repos", "events_url": "https://api.github.com/users/carllerche/events{/privacy}", "received_events_url": "https://api.github.com/users/carllerche/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 24, "created_at": "2014-08-14T22:10:30Z", "updated_at": "2020-02-04T10:48:08Z", "closed_at": "2015-02-16T19:36:53Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Given:\n\n```\nlet a = Path::new(\"/foo\");\nlet b = Path::new(\"/bar\");\n```\n\nI would expect that `a.join(&b)` would return `/foo/bar`, however it returns `/bar`. Given my experience w/ path joining in Ruby and Go, I would expect that join concats two paths and does some normalization to remove double slashes, etc...\n\nThere is also a need for a fn that expands a path relative to a given location, which is what Path::join does today. In Ruby, it is named expand_path.\n", "closed_by": {"login": "aturon", "id": 709807, "node_id": "MDQ6VXNlcjcwOTgwNw==", "avatar_url": "https://avatars.githubusercontent.com/u/709807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aturon", "html_url": "https://github.com/aturon", "followers_url": "https://api.github.com/users/aturon/followers", "following_url": "https://api.github.com/users/aturon/following{/other_user}", "gists_url": "https://api.github.com/users/aturon/gists{/gist_id}", "starred_url": "https://api.github.com/users/aturon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aturon/subscriptions", "organizations_url": "https://api.github.com/users/aturon/orgs", "repos_url": "https://api.github.com/users/aturon/repos", "events_url": "https://api.github.com/users/aturon/events{/privacy}", "received_events_url": "https://api.github.com/users/aturon/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/16507/reactions", "total_count": 24, "+1": 19, "-1": 5, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/16507/timeline", "performed_via_github_app": null, "state_reason": "completed"}