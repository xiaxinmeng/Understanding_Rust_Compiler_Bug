{"url": "https://api.github.com/repos/rust-lang/rust/issues/91572", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/91572/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/91572/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/91572/events", "html_url": "https://github.com/rust-lang/rust/issues/91572", "id": 1071573427, "node_id": "I_kwDOAAsO6M4_3umz", "number": 91572, "title": "internal compiler error: encountered incremental compilation error with evaluate_obligation(1cec0724321627f4-89c75a6914c2ffb3)", "user": {"login": "martinrlilja", "id": 1858564, "node_id": "MDQ6VXNlcjE4NTg1NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1858564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martinrlilja", "html_url": "https://github.com/martinrlilja", "followers_url": "https://api.github.com/users/martinrlilja/followers", "following_url": "https://api.github.com/users/martinrlilja/following{/other_user}", "gists_url": "https://api.github.com/users/martinrlilja/gists{/gist_id}", "starred_url": "https://api.github.com/users/martinrlilja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martinrlilja/subscriptions", "organizations_url": "https://api.github.com/users/martinrlilja/orgs", "repos_url": "https://api.github.com/users/martinrlilja/repos", "events_url": "https://api.github.com/users/martinrlilja/events{/privacy}", "received_events_url": "https://api.github.com/users/martinrlilja/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2021-12-05T22:22:27Z", "updated_at": "2021-12-05T23:00:21Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\nNot sure it matters but I encountered this when I reordered the arguments of a `tracing::info!` call.\r\n\r\n```Rust\r\ntracing::info!(\r\n    remote_addr = %remote_addr,\r\n    method = %req.method(),\r\n    path = %req.uri(),\r\n    version = ?req.version(),\r\n);\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.56.1 (59eed8a2a 2021-11-01)\r\nbinary: rustc\r\ncommit-hash: 59eed8a2aac0230a8b53e89d4e99d55912ba6b35\r\ncommit-date: 2021-11-01\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.56.1\r\nLLVM version: 13.0.0\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nerror: internal compiler error: encountered incremental compilation error with evaluate_obligation(1cec0724321627f4-89c75a6914c2ffb3)\r\n  |\r\n  = help: This is a known issue with the compiler. Run `cargo clean -p prj` or `cargo clean` to allow your project to compile\r\n  = note: Please follow the instructions below to create a bug report with the provided information\r\n  = note: See <https://github.com/rust-lang/rust/issues/84970> for more information\r\n\r\nthread 'rustc' panicked at 'Found unstable fingerprints for evaluate_obligation(1cec0724321627f4-89c75a6914c2ffb3): Ok(EvaluatedToOk)', /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/compiler/rustc_query_system/src/query/plumbing.rs:644:13\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.56.1 (59eed8a2a 2021-11-01) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [evaluate_obligation] evaluating trait selection obligation `hyper::proto::h2::PipeToSendStream<server::EitherBody<http_body::combinators::UnsyncBoxBody<hyper::body::Bytes, tonic::Status>, hyper::Body>>: std::marker::Send`\r\n#1 [normalize_projection_ty] normalizing `Canonical { max_universe: U0, variables: [], value: ParamEnvAnd { param_env: ParamEnv { caller_bounds: [], reveal: All }, value: ProjectionTy { substs: [hyper::server::conn::spawn_all::NoopWatcher, hyper::server::conn::AddrStream, tower::util::ServiceFn<[closure@prj/src/server/mod.rs:64:17: 88:18]>, hyper::common::exec::Exec], item_def_id: DefId(155:5740 ~ hyper[2c4b]::server::conn::spawn_all::Watcher::Future) } } }`\r\nend of query stack\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nerror: internal compiler error: encountered incremental compilation error with evaluate_obligation(1cec0724321627f4-89c75a6914c2ffb3)\r\n  |\r\n  = help: This is a known issue with the compiler. Run `cargo clean -p prj` or `cargo clean` to allow your project to compile\r\n  = note: Please follow the instructions below to create a bug report with the provided information\r\n  = note: See <https://github.com/rust-lang/rust/issues/84970> for more information\r\n\r\nthread 'rustc' panicked at 'Found unstable fingerprints for evaluate_obligation(1cec0724321627f4-89c75a6914c2ffb3): Ok(EvaluatedToOk)', /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/compiler/rustc_query_system/src/query/plumbing.rs:644:13\r\nstack backtrace:\r\n   0: rust_begin_unwind\r\n             at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/panicking.rs:517:5\r\n   1: std::panicking::begin_panic_fmt\r\n             at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/panicking.rs:460:5\r\n   2: rustc_query_system::query::plumbing::incremental_verify_ich\r\n   3: rustc_query_system::query::plumbing::load_from_disk_and_cache_in_memory\r\n   4: rustc_data_structures::stack::ensure_sufficient_stack\r\n   5: rustc_query_system::query::plumbing::get_query_impl\r\n   6: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::evaluate_obligation\r\n   7: <rustc_infer::infer::InferCtxt as rustc_trait_selection::traits::query::evaluate_obligation::InferCtxtExt>::evaluate_obligation\r\n   8: <rustc_infer::infer::InferCtxt as rustc_trait_selection::traits::query::evaluate_obligation::InferCtxtExt>::evaluate_obligation_no_overflow\r\n   9: rustc_trait_selection::traits::fulfill::FulfillProcessor::process_trait_obligation\r\n  10: rustc_trait_selection::traits::fulfill::FulfillProcessor::progress_changed_obligations\r\n  11: rustc_data_structures::obligation_forest::ObligationForest<O>::process_obligations\r\n  12: rustc_trait_selection::traits::fulfill::FulfillmentContext::select\r\n  13: <rustc_trait_selection::traits::fulfill::FulfillmentContext as rustc_infer::traits::engine::TraitEngine>::select_where_possible\r\n  14: <rustc_infer::infer::InferCtxtBuilder as rustc_trait_selection::infer::InferCtxtBuilderExt>::enter_canonical_trait_query\r\n  15: rustc_traits::normalize_projection_ty::normalize_projection_ty\r\n  16: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  17: rustc_query_system::query::plumbing::load_from_disk_and_cache_in_memory\r\n  18: rustc_data_structures::stack::ensure_sufficient_stack\r\n  19: rustc_query_system::query::plumbing::get_query_impl\r\n  20: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::normalize_projection_ty\r\n  21: <rustc_trait_selection::traits::query::normalize::QueryNormalizer as rustc_middle::ty::fold::TypeFolder>::fold_ty\r\n  22: <rustc_infer::infer::at::At as rustc_trait_selection::traits::query::normalize::AtExt>::normalize\r\n  23: rustc_infer::infer::InferCtxtBuilder::enter\r\n  24: core::ops::function::FnOnce::call_once\r\n  25: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  26: rustc_query_system::query::plumbing::load_from_disk_and_cache_in_memory\r\n  27: rustc_data_structures::stack::ensure_sufficient_stack\r\n  28: rustc_query_system::query::plumbing::get_query_impl\r\n  29: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::normalize_generic_arg_after_erasing_regions\r\n  30: rustc_middle::ty::normalize_erasing_regions::NormalizeAfterErasingRegionsFolder::normalize_generic_arg_after_erasing_regions\r\n  31: <rustc_middle::ty::normalize_erasing_regions::NormalizeAfterErasingRegionsFolder as rustc_middle::ty::fold::TypeFolder>::fold_ty\r\n  32: rustc_ty_utils::needs_drop::needs_drop_raw\r\n  33: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  34: rustc_query_system::query::plumbing::load_from_disk_and_cache_in_memory\r\n  35: rustc_data_structures::stack::ensure_sufficient_stack\r\n  36: rustc_query_system::query::plumbing::get_query_impl\r\n  37: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::needs_drop_raw\r\n  38: rustc_ty_utils::instance::inner_resolve_instance\r\n  39: rustc_ty_utils::instance::resolve_instance\r\n  40: rustc_query_system::query::plumbing::load_from_disk_and_cache_in_memory\r\n  41: rustc_data_structures::stack::ensure_sufficient_stack\r\n  42: rustc_query_system::query::plumbing::get_query_impl\r\n  43: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::resolve_instance\r\n  44: rustc_middle::ty::instance::Instance::resolve_opt_const_arg\r\n  45: rustc_middle::ty::instance::Instance::resolve_drop_in_place\r\n  46: <rustc_mir::monomorphize::collector::MirNeighborCollector as rustc_middle::mir::visit::Visitor>::visit_terminator\r\n  47: rustc_mir::monomorphize::collector::collect_neighbours\r\n  48: rustc_mir::monomorphize::collector::collect_items_rec\r\n  49: rustc_mir::monomorphize::collector::collect_items_rec\r\n  50: rustc_mir::monomorphize::collector::collect_items_rec\r\n  51: rustc_mir::monomorphize::collector::collect_items_rec\r\n  52: rustc_mir::monomorphize::collector::collect_items_rec\r\n  53: rustc_mir::monomorphize::collector::collect_items_rec\r\n  54: rustc_mir::monomorphize::collector::collect_items_rec\r\n  55: rustc_mir::monomorphize::collector::collect_items_rec\r\n  56: rustc_mir::monomorphize::collector::collect_items_rec\r\n  57: rustc_mir::monomorphize::collector::collect_items_rec\r\n  58: rustc_mir::monomorphize::collector::collect_items_rec\r\n  59: rustc_mir::monomorphize::collector::collect_items_rec\r\n  60: rustc_mir::monomorphize::collector::collect_items_rec\r\n  61: rustc_mir::monomorphize::collector::collect_items_rec\r\n  62: rustc_mir::monomorphize::collector::collect_items_rec\r\n  63: rustc_mir::monomorphize::collector::collect_items_rec\r\n  64: rustc_mir::monomorphize::collector::collect_items_rec\r\n  65: rustc_session::utils::<impl rustc_session::session::Session>::time\r\n  66: rustc_mir::monomorphize::collector::collect_crate_mono_items\r\n  67: rustc_mir::monomorphize::partitioning::collect_and_partition_mono_items\r\n  68: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  69: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  70: rustc_data_structures::stack::ensure_sufficient_stack\r\n  71: rustc_query_system::query::plumbing::force_query_with_job\r\n  72: rustc_query_system::query::plumbing::get_query_impl\r\n  73: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::collect_and_partition_mono_items\r\n  74: rustc_codegen_ssa::base::codegen_crate\r\n  75: <rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::CodegenBackend>::codegen_crate\r\n  76: rustc_interface::queries::Queries::ongoing_codegen\r\n  77: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n  78: rustc_span::with_source_map\r\n  79: scoped_tls::ScopedKey<T>::set\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.56.1 (59eed8a2a 2021-11-01) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [evaluate_obligation] evaluating trait selection obligation `hyper::proto::h2::PipeToSendStream<server::EitherBody<http_body::combinators::UnsyncBoxBody<hyper::body::Bytes, tonic::Status>, hyper::Body>>: std::marker::Send`\r\n#1 [normalize_projection_ty] normalizing `Canonical { max_universe: U0, variables: [], value: ParamEnvAnd { param_env: ParamEnv { caller_bounds: [], reveal: All }, value: ProjectionTy { substs: [hyper::server::conn::spawn_all::NoopWatcher, hyper::server::conn::AddrStream, tower::util::ServiceFn<[closure@prj/src/server/mod.rs:64:17: 88:18]>, hyper::common::exec::Exec], item_def_id: DefId(155:5740 ~ hyper[2c4b]::server::conn::spawn_all::Watcher::Future) } } }`\r\n#2 [normalize_generic_arg_after_erasing_regions] normalizing `<hyper::server::conn::spawn_all::NoopWatcher as hyper::server::conn::spawn_all::Watcher<hyper::server::conn::AddrStream, tower::util::ServiceFn<[closure@prj/src/server/mod.rs:64:17: 88:18]>, hyper::common::exec::Exec>>::Future`\r\n#3 [needs_drop_raw] computing whether `hyper::server::conn::spawn_all::NewSvcTask<hyper::server::conn::AddrStream, tonic::codegen::Ready<std::result::Result<tower::util::ServiceFn<[closure@prj/src/server/mod.rs:64:17: 88:18]>, std::convert::Infallible>>, tower::util::ServiceFn<[closure@prj/src/server/mod.rs:64:17: 88:18]>, hyper::common::exec::Exec, hyper::server::conn::spawn_all::NoopWatcher>` needs drop\r\n#4 [resolve_instance] resolving instance `std::ptr::drop_in_place::<hyper::server::conn::spawn_all::NewSvcTask<hyper::server::conn::AddrStream, tonic::codegen::Ready<std::result::Result<tower::util::ServiceFn<[closure@prj/src/server/mod.rs:64:17: 88:18]>, std::convert::Infallible>>, tower::util::ServiceFn<[closure@prj/src/server/mod.rs:64:17: 88:18]>, hyper::common::exec::Exec, hyper::server::conn::spawn_all::NoopWatcher>>`\r\n#5 [collect_and_partition_mono_items] collect_and_partition_mono_items\r\nend of query stack\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/91572/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/91572/timeline", "performed_via_github_app": null, "state_reason": null}