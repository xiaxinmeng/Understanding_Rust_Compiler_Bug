{"url": "https://api.github.com/repos/rust-lang/rust/issues/14442", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/14442/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/14442/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/14442/events", "html_url": "https://github.com/rust-lang/rust/issues/14442", "id": 34299945, "node_id": "MDU6SXNzdWUzNDI5OTk0NQ==", "number": 14442, "title": "Support smaller failure in libcore", "user": {"login": "bharrisau", "id": 119958, "node_id": "MDQ6VXNlcjExOTk1OA==", "avatar_url": "https://avatars.githubusercontent.com/u/119958?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bharrisau", "html_url": "https://github.com/bharrisau", "followers_url": "https://api.github.com/users/bharrisau/followers", "following_url": "https://api.github.com/users/bharrisau/following{/other_user}", "gists_url": "https://api.github.com/users/bharrisau/gists{/gist_id}", "starred_url": "https://api.github.com/users/bharrisau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bharrisau/subscriptions", "organizations_url": "https://api.github.com/users/bharrisau/orgs", "repos_url": "https://api.github.com/users/bharrisau/repos", "events_url": "https://api.github.com/users/bharrisau/events{/privacy}", "received_events_url": "https://api.github.com/users/bharrisau/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-05-26T11:07:13Z", "updated_at": "2014-05-29T16:23:57Z", "closed_at": "2014-05-29T04:36:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "With the reshuffle of libcore (#13851) it is becoming easier to build an embedded project with Rust. I've implemented the new weak failure in Zinc.rs, but as a result the binaries are 5-6kB larger (hackndev/zinc#41).\n\nThe two sources of additional size are `c_str_to_static_slice` pulling in `is_utf8` in an assertion (could this be debug_assert?), and the `format_args!` macro. Trimming these gets the 5-6kB back (i.e. the empty application goes from 7576 bytes to 1888 bytes).\n\n@alexcrichton: I'm not sure the best solution. My limited knowledge of the system suggests having a `--cfg` flag to compile libcore with stringless failures (maybe `--cfg failure_tiny`). Just replacing the `c_str_to_static_slice` with a zero len `Slice {data: pointer, len: 0}` (we can get the info from the debugger) and passing a zero length string to `format_args!`.\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/14442/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/14442/timeline", "performed_via_github_app": null, "state_reason": "completed"}