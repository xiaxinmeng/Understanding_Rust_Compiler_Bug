{"url": "https://api.github.com/repos/rust-lang/rust/issues/10078", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/10078/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/10078/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/10078/events", "html_url": "https://github.com/rust-lang/rust/issues/10078", "id": 21625651, "node_id": "MDU6SXNzdWUyMTYyNTY1MQ==", "number": 10078, "title": "Rust allows unsafe stack references to be pushed into HashMap under some circumstances", "user": {"login": "pythonesque", "id": 923144, "node_id": "MDQ6VXNlcjkyMzE0NA==", "avatar_url": "https://avatars.githubusercontent.com/u/923144?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pythonesque", "html_url": "https://github.com/pythonesque", "followers_url": "https://api.github.com/users/pythonesque/followers", "following_url": "https://api.github.com/users/pythonesque/following{/other_user}", "gists_url": "https://api.github.com/users/pythonesque/gists{/gist_id}", "starred_url": "https://api.github.com/users/pythonesque/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pythonesque/subscriptions", "organizations_url": "https://api.github.com/users/pythonesque/orgs", "repos_url": "https://api.github.com/users/pythonesque/repos", "events_url": "https://api.github.com/users/pythonesque/events{/privacy}", "received_events_url": "https://api.github.com/users/pythonesque/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37544, "node_id": "MDU6TGFiZWwzNzU0NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-typesystem", "name": "A-typesystem", "color": "f7e101", "default": false, "description": "Area: The type system"}, {"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2013-10-26T02:02:20Z", "updated_at": "2014-07-24T09:59:06Z", "closed_at": "2014-07-24T09:59:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Not sure of the precise underlying bug, but a testcase is this:\n\n``` rust\nuse std::hashmap::{HashMap};\n\nenum Entry<'self,T> {\n    Ref(&'self Entry<'self,T>),\n    Val(T)\n}\n\npub struct Table<'self> {\n    priv inner: HashMap<&'self str, &'self Entry<'self, int>>\n}\n\npub trait ReferenceMap<K,V> {\n    fn add<'a>(&mut self, K, V) -> bool;\n}\nimpl<'self, K, V, T : MutableMap<K,&'self Entry<'self,V>>> ReferenceMap<K,V> for T {\n    fn add<'a>(&mut self, key : K, value : V) -> bool {\n        // the use of &Val(value) *should* be disallowed.\n        !self.contains_key(&key) && self.insert(key, &Val(value)) // ****\n    }\n}\n\nimpl<'self> Table<'self> {\n    pub fn new() -> Table<'self> {\n        Table { inner: HashMap::new() }\n    }\n}\n\nimpl<'self> Table<'self> {\n    pub fn add<'a>(&mut self, key : &'self str, value : int) -> bool {\n        self.inner.add(key, value)\n    }\n\n    pub fn lookup(&'self self, key : &'self str) -> Option<&'self int> {\n        match self.deref(key) {\n            Some(&Val(ref val)) => Some(val),\n            _ => None\n        }\n    }\n    fn deref(&'self self, key : &'self str) -> Option<&'self Entry<'self, int>> {\n        match self.inner.find(&key) {\n            Some(entry) => {\n                let mut ptr = *entry;\n\n                loop {\n                    match *ptr {\n                        Ref(next) => ptr = next,\n                        _ => return Some(ptr),\n                    }\n                }\n            },\n            None => None\n        }\n    }\n}\n\n\nfn main() {\n    let mut t = Table::new();\n\n    t.add(\"foo\", 2);\n\n    // *incorrectly* prints None\n    println!(\"{:?}\", t.lookup(\"foo\"));\n\n    // crashes with 'enum value matched no variant'\n    // println!(\"{:?}\", t);\n}\n```\n\nSpecifically, the line marked `****` is where we see the problem manifest itself.\n", "closed_by": {"login": "pythonesque", "id": 923144, "node_id": "MDQ6VXNlcjkyMzE0NA==", "avatar_url": "https://avatars.githubusercontent.com/u/923144?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pythonesque", "html_url": "https://github.com/pythonesque", "followers_url": "https://api.github.com/users/pythonesque/followers", "following_url": "https://api.github.com/users/pythonesque/following{/other_user}", "gists_url": "https://api.github.com/users/pythonesque/gists{/gist_id}", "starred_url": "https://api.github.com/users/pythonesque/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pythonesque/subscriptions", "organizations_url": "https://api.github.com/users/pythonesque/orgs", "repos_url": "https://api.github.com/users/pythonesque/repos", "events_url": "https://api.github.com/users/pythonesque/events{/privacy}", "received_events_url": "https://api.github.com/users/pythonesque/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/10078/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/10078/timeline", "performed_via_github_app": null, "state_reason": "completed"}