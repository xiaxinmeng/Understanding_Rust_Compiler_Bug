{"url": "https://api.github.com/repos/rust-lang/rust/issues/90445", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/90445/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/90445/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/90445/events", "html_url": "https://github.com/rust-lang/rust/issues/90445", "id": 1040534602, "node_id": "I_kwDOAAsO6M4-BUxK", "number": 90445, "title": "Literally initializing `[&str; N]` (using proc macro) doesn't scale, `rustc` consumes huge amounts of time and RAM (stable and nightly)", "user": {"login": "twelho", "id": 38858901, "node_id": "MDQ6VXNlcjM4ODU4OTAx", "avatar_url": "https://avatars.githubusercontent.com/u/38858901?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twelho", "html_url": "https://github.com/twelho", "followers_url": "https://api.github.com/users/twelho/followers", "following_url": "https://api.github.com/users/twelho/following{/other_user}", "gists_url": "https://api.github.com/users/twelho/gists{/gist_id}", "starred_url": "https://api.github.com/users/twelho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twelho/subscriptions", "organizations_url": "https://api.github.com/users/twelho/orgs", "repos_url": "https://api.github.com/users/twelho/repos", "events_url": "https://api.github.com/users/twelho/events{/privacy}", "received_events_url": "https://api.github.com/users/twelho/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2021-10-31T17:28:06Z", "updated_at": "2021-12-31T22:57:49Z", "closed_at": "2021-12-31T22:57:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nHi Rust folks,\r\n\r\nI'm using a procedural macro to read and preprocess some strings to be stored in an application without hitting the disk at any intermediate point. The macro outputs a `TokenStream` for a literal fixed-size array of string slices. When scaling up the amount of strings to a moderately high count (100k), I noticed something strange: compiling the application suddenly takes orders of magnitude more time and makes the compiler consumes almost 40 GiB of RAM in the process. Here's a MWE, for both the proc macro `lib` and the consumer binary `bin`:\r\n\r\n`lib/Cargo.toml`:\r\n```toml\r\n[package]\r\nname = \"lib\"\r\nversion = \"0.1.0\"\r\nedition = \"2021\"\r\n\r\n# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html\r\n\r\n[lib]\r\nproc-macro = true\r\n\r\n[dependencies]\r\n```\r\n\r\n`lib/src/lib.rs`:\r\n```rust\r\nuse proc_macro::TokenStream;\r\n\r\nfn parse_count(stream: TokenStream) -> u32 {\r\n    stream.to_string().parse().unwrap()\r\n}\r\n\r\n#[proc_macro]\r\npub fn generate_data(input: TokenStream) -> TokenStream {\r\n    let mut s = String::from(\"[\");\r\n    for i in 0..parse_count(input) {\r\n        if i > 0 {\r\n            s.push_str(\", \");\r\n        }\r\n        s.push_str(&format!(\"\\\"{}\\\"\", i));\r\n    }\r\n    s.push_str(\"]\");\r\n    s.parse().unwrap()\r\n}\r\n```\r\n\r\n`bin/Cargo.toml`:\r\n```toml\r\n[package]\r\nname = \"bin\"\r\nversion = \"0.1.0\"\r\nedition = \"2021\"\r\n\r\n# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html\r\n\r\n[dependencies]\r\nlib = {path = \"../lib\"}\r\n```\r\n\r\n`bin/src/main.rs`:\r\n```rust\r\nuse lib::generate_data;\r\n\r\nfn main() {\r\n    let data = generate_data!(100000);\r\n    println!(\"{}\", data.len());\r\n}\r\n```\r\n\r\nCompiling the above takes many minutes, compared to just some seconds when the issue does not occur (see cases below). The memory consumption also peaks very high (truncated from the start, there's a slow increase over many minutes):\r\n\r\n![image](https://user-images.githubusercontent.com/38858901/139585270-aba408a6-d4a1-4d2a-9b60-172b9966109b.png)\r\n\r\nThis issue is present on both **latest stable** and **nightly** (see versions used below), using both debug and release builds. In my project I have `lto = true` and `opt-level = \"z\"` as well, but neither helps. Running `RUSTFLAGS=\"-Z time-passes\" cargo build` on nightly reveals that most of the time is spent on some borrow checking routine:\r\n```\r\n...\r\ntime: 110.766; rss:  161MB ->  623MB ( +462MB)  MIR_borrow_checking\r\n...\r\n```\r\n\r\nI have also verified that it is not the macro that causes the hang by using [proc-macro-error](https://crates.io/crates/proc-macro-error) to emit a warning just as the macro is about to return the final `TokenStream`. The warning is emitted right away, before memory hogging begins.\r\n\r\n### From my testing, with the same element count, the issue does *not* occur, when:\r\n- The array is defined using a reference, i.e. the proc macro returns a reference to an array (`&[...]`).\r\n- The stored type in the array is something other than `&str`, compilation happens in seconds with e.g. `u32`. \r\n\r\nThis leads me to believe that the references of the `&str` types are at fault, but I don't have enough experience in `rustc` internals to say anything more than that something doesn't scale (quadratic time?).\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc +stable --version --verbose`:\r\n```\r\nrustc 1.56.0 (09c42c458 2021-10-18)\r\nbinary: rustc\r\ncommit-hash: 09c42c45858d5f3aedfa670698275303a3d19afa\r\ncommit-date: 2021-10-18\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.56.0\r\nLLVM version: 13.0.0\r\n```\r\n\r\n`rustc +nightly --version --verbose`:\r\n```\r\nrustc 1.58.0-nightly (e249ce6b2 2021-10-30)\r\nbinary: rustc\r\ncommit-hash: e249ce6b2345587d6e11052779c86adbad626dff\r\ncommit-date: 2021-10-30\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.58.0-nightly\r\nLLVM version: 13.0.0\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary>Backtrace</summary>\r\n<p>\r\n\r\nNo backtrace, compilation does eventually succeed given enough time and memory.\r\n\r\n</p>\r\n</details>", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/90445/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/90445/timeline", "performed_via_github_app": null, "state_reason": "completed"}