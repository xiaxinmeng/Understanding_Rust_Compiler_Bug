{"url": "https://api.github.com/repos/rust-lang/rust/issues/60617", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/60617/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/60617/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/60617/events", "html_url": "https://github.com/rust-lang/rust/issues/60617", "id": 441475211, "node_id": "MDU6SXNzdWU0NDE0NzUyMTE=", "number": 60617, "title": "powerpc64: allow querying ELF ABI version", "user": {"login": "q66", "id": 222373, "node_id": "MDQ6VXNlcjIyMjM3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/222373?v=4", "gravatar_id": "", "url": "https://api.github.com/users/q66", "html_url": "https://github.com/q66", "followers_url": "https://api.github.com/users/q66/followers", "following_url": "https://api.github.com/users/q66/following{/other_user}", "gists_url": "https://api.github.com/users/q66/gists{/gist_id}", "starred_url": "https://api.github.com/users/q66/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/q66/subscriptions", "organizations_url": "https://api.github.com/users/q66/orgs", "repos_url": "https://api.github.com/users/q66/repos", "events_url": "https://api.github.com/users/q66/events{/privacy}", "received_events_url": "https://api.github.com/users/q66/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 515028847, "node_id": "MDU6TGFiZWw1MTUwMjg4NDc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-PowerPC", "name": "O-PowerPC", "color": "6e6ec0", "default": false, "description": "Target: PowerPC processors"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2019-05-07T22:38:25Z", "updated_at": "2020-10-03T00:19:35Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "There are two ABIs on ppc64, ELFv1 (legacy) and ELFv2 (introduced a couple years back, used by default for little endian). Rust currently has logic in it that for the `musl` libc, ELFv2 is used on big endian and ELFv1 is used otherwise. This is inadequate, as you can use ELFv2 as well with `glibc`. In my distribution, both little and big endian systems are supported, with `glibc` and `musl`, and they are all set up for ELFv2.\r\n\r\nIn order to achieve that, Rust in the distribution is patched so that it will always properly use ELFv2 ABI. However, this is a potential problem for some crates that for example need to deal with assembly code; they have no way to query the ABI version. For endianness, they can do like `#[cfg(target_endian = \"big\")]`. For ABI, there is no equivalent (in C, you can do `#if _CALL_ELF == 2`).\r\n\r\nI can look into implementing this, but I need to know what would be the best syntax and way to implement this. As I see it, it would need a new field in the target options, but this would of course be specific to ppc64, and ABI on ppc64 in e.g. gcc is treated more like a list than a string (you can also have `-mabi=altivec`, `-mabi=ibmlongdouble` and so on, in addition to `-mabi=elfv2`), so I was wondering if something more generic/extensible would be better.\r\n\r\nOf course, eventually it'd be best to also allow setting it when compiling, and make it properly pass everything down to llvm, but that's less of a concern, for now I just need crates to be able to read it.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/60617/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/60617/timeline", "performed_via_github_app": null, "state_reason": null}