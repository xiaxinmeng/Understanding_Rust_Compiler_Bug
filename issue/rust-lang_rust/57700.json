{"url": "https://api.github.com/repos/rust-lang/rust/issues/57700", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/57700/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/57700/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/57700/events", "html_url": "https://github.com/rust-lang/rust/issues/57700", "id": 400338237, "node_id": "MDU6SXNzdWU0MDAzMzgyMzc=", "number": 57700, "title": "ICE when returning generic abitrary self type in defining function for existential associated type", "user": {"login": "matprec", "id": 20750283, "node_id": "MDQ6VXNlcjIwNzUwMjgz", "avatar_url": "https://avatars.githubusercontent.com/u/20750283?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matprec", "html_url": "https://github.com/matprec", "followers_url": "https://api.github.com/users/matprec/followers", "following_url": "https://api.github.com/users/matprec/following{/other_user}", "gists_url": "https://api.github.com/users/matprec/gists{/gist_id}", "starred_url": "https://api.github.com/users/matprec/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matprec/subscriptions", "organizations_url": "https://api.github.com/users/matprec/orgs", "repos_url": "https://api.github.com/users/matprec/repos", "events_url": "https://api.github.com/users/matprec/events{/privacy}", "received_events_url": "https://api.github.com/users/matprec/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 36996, "node_id": "MDU6TGFiZWwzNjk5Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-easy", "name": "E-easy", "color": "02e10c", "default": false, "description": "Call for participation: Experience needed to fix: Easy / not much (good first issue)"}, {"id": 37544, "node_id": "MDU6TGFiZWwzNzU0NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-typesystem", "name": "A-typesystem", "color": "f7e101", "default": false, "description": "Area: The type system"}, {"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 46741598, "node_id": "MDU6TGFiZWw0Njc0MTU5OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-test", "name": "E-needs-test", "color": "02e10c", "default": false, "description": "Call for participation: writing correctness tests"}, {"id": 60344715, "node_id": "MDU6TGFiZWw2MDM0NDcxNQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-medium", "name": "P-medium", "color": "eb6420", "default": false, "description": "Medium priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 604489711, "node_id": "MDU6TGFiZWw2MDQ0ODk3MTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-NLL", "name": "A-NLL", "color": "f7e101", "default": false, "description": "Area: Non Lexical Lifetimes (NLL)"}, {"id": 631673608, "node_id": "MDU6TGFiZWw2MzE2NzM2MDg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-impl-trait", "name": "A-impl-trait", "color": "f7e101", "default": false, "description": "Area: impl Trait. Universally / existentially quantified anonymous types with static dispatch."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 867465703, "node_id": "MDU6TGFiZWw4Njc0NjU3MDM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/NLL-complete", "name": "NLL-complete", "color": "f799ea", "default": false, "description": "Working towards the \"valid code works\" goal"}, {"id": 1472502130, "node_id": "MDU6TGFiZWwxNDcyNTAyMTMw", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-type_alias_impl_trait", "name": "F-type_alias_impl_trait", "color": "f9c0cc", "default": false, "description": "`#[feature(type_alias_impl_trait)]`"}, {"id": 1472515079, "node_id": "MDU6TGFiZWwxNDcyNTE1MDc5", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-arbitrary_self_types", "name": "F-arbitrary_self_types", "color": "f9c0cc", "default": false, "description": "`#![feature(arbitrary_self_types)]`"}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}], "state": "closed", "locked": false, "assignee": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 11, "created_at": "2019-01-17T15:46:55Z", "updated_at": "2019-08-12T13:48:16Z", "closed_at": "2019-08-12T13:48:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```rust\r\n#![feature(arbitrary_self_types)]\r\n#![feature(existential_type)]\r\n\r\nuse std::ops::Deref;\r\n\r\ntrait Route {\r\n    type Extension: Route;\r\n\r\n    fn extend(self: impl Deref<Target = Self>) -> Self::Extension;\r\n}\r\n\r\nimpl<C> Route for C {\r\n    existential type Extension: Route;\r\n\r\n    fn extend(self: impl Deref<Target = Self>) -> Self::Extension {\r\n        self\r\n    }\r\n}\r\n```\r\n[Playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=19613126a1f4e39a9206613b317ffeb0)\r\n```\r\n   Compiling playground v0.0.1 (/playground)\r\nerror: internal compiler error: src/librustc/ty/subst.rs:480: Type parameter `impl Deref<Target = Self>/#1` (impl Deref<Target = Self>/1) out of range when substituting (root type=Some(impl Deref<Target = Self>)) substs=[C]\r\n\r\nthread 'rustc' panicked at 'Box<Any>', src/librustc_errors/lib.rs:526:9\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\nstack backtrace:\r\n   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace\r\n             at src/libstd/sys/unix/backtrace/tracing/gcc_s.rs:39\r\n   1: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:70\r\n   2: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/sys_common/backtrace.rs:58\r\n             at src/libstd/panicking.rs:200\r\n   3: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:215\r\n   4: rustc::util::common::panic_hook\r\n   5: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:482\r\n   6: std::panicking::begin_panic\r\n   7: rustc_errors::Handler::span_bug\r\n   8: rustc::util::bug::opt_span_bug_fmt::{{closure}}\r\n   9: rustc::ty::context::tls::with_opt::{{closure}}\r\n  10: rustc::ty::context::tls::with_context_opt\r\n  11: rustc::ty::context::tls::with_opt\r\n  12: rustc::util::bug::opt_span_bug_fmt\r\n  13: rustc::util::bug::span_bug_fmt\r\n  14: <rustc::ty::subst::SubstFolder<'a, 'gcx, 'tcx> as rustc::ty::fold::TypeFolder<'gcx, 'tcx>>::fold_ty\r\n  15: rustc::infer::InferCtxt::commit_if_ok\r\n  16: <rustc::traits::query::type_op::custom::CustomTypeOp<F, G> as rustc::traits::query::type_op::TypeOp<'gcx, 'tcx>>::fully_perform\r\n  17: rustc_mir::borrow_check::nll::type_check::TypeChecker::eq_opaque_type_and_type\r\n  18: rustc_mir::borrow_check::nll::type_check::type_check\r\n  19: rustc_mir::borrow_check::nll::compute_regions\r\n  20: rustc_mir::borrow_check::do_mir_borrowck\r\n  21: rustc::ty::context::GlobalCtxt::enter_local\r\n  22: rustc_mir::borrow_check::mir_borrowck\r\n  23: rustc::ty::query::__query_compute::mir_borrowck\r\n  24: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors<'tcx> for rustc::ty::query::queries::mir_borrowck<'tcx>>::compute\r\n  25: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  26: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::try_get_with\r\n  27: rustc::ty::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::par_body_owners\r\n  28: rustc::util::common::time\r\n  29: <std::thread::local::LocalKey<T>>::with\r\n  30: rustc::ty::context::TyCtxt::create_and_enter\r\n  31: rustc_driver::driver::compile_input\r\n  32: rustc_driver::run_compiler_with_pool\r\n  33: <scoped_tls::ScopedKey<T>>::set\r\n  34: rustc_driver::run_compiler\r\n  35: <scoped_tls::ScopedKey<T>>::set\r\nquery stack during panic:\r\n#0 [mir_borrowck] processing `<C as Route>::extend`\r\nend of query stack\r\nerror: aborting due to previous error\r\n\r\n```", "closed_by": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/57700/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/57700/timeline", "performed_via_github_app": null, "state_reason": "completed"}