{"url": "https://api.github.com/repos/rust-lang/rust/issues/51386", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/51386/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/51386/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/51386/events", "html_url": "https://github.com/rust-lang/rust/issues/51386", "id": 329691027, "node_id": "MDU6SXNzdWUzMjk2OTEwMjc=", "number": 51386, "title": "Can't implement Drop on a type with a higher ranked lifetime as a trait bound.", "user": {"login": "pythonesque", "id": 923144, "node_id": "MDQ6VXNlcjkyMzE0NA==", "avatar_url": "https://avatars.githubusercontent.com/u/923144?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pythonesque", "html_url": "https://github.com/pythonesque", "followers_url": "https://api.github.com/users/pythonesque/followers", "following_url": "https://api.github.com/users/pythonesque/following{/other_user}", "gists_url": "https://api.github.com/users/pythonesque/gists{/gist_id}", "starred_url": "https://api.github.com/users/pythonesque/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pythonesque/subscriptions", "organizations_url": "https://api.github.com/users/pythonesque/orgs", "repos_url": "https://api.github.com/users/pythonesque/repos", "events_url": "https://api.github.com/users/pythonesque/events{/privacy}", "received_events_url": "https://api.github.com/users/pythonesque/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 4172483496, "node_id": "LA_kwDOAAsO6M74swuo", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-types", "name": "T-types", "color": "bfd4f2", "default": false, "description": "Relevant to the types team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-06T02:46:13Z", "updated_at": "2023-04-05T17:39:40Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Example:\r\n\r\n```rust\r\ntrait Foo<'id> {}\r\n\r\nstruct Bar<T>(T) where T: for<'id> Foo<'id>;\r\n\r\nimpl<T> Drop for Bar<T> where T: for<'id> Foo<'id> {\r\n    fn drop(&mut self) {\r\n    }\r\n}\r\n\r\nfn main() {\r\n    \r\n}\r\n```\r\nWe get the following error:\r\n\r\n```backtrace\r\nerror[E0367]: The requirement `for<'id> T: Foo<'id>` is added only by the Drop impl.\r\n --> src/main.rs:5:1\r\n  |\r\n5 | / impl<T> Drop for Bar<T> where T: for<'id> Foo<'id> {\r\n6 | |     fn drop(&mut self) {\r\n7 | |     }\r\n8 | | }\r\n  | |_^\r\n  |\r\nnote: The same requirement must be part of the struct/enum definition\r\n --> src/main.rs:3:1\r\n  |\r\n3 | struct Bar<T>(T) where T: for<'id> Foo<'id>;\r\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n```\r\n\r\n\r\nIf you take the bound away from the `Drop` implementation, you still get an error saying the bound is missing.  I don't *think* this should be unsound (you would always have to specialize on some particular lifetime to use any of the associated types, and in the use case I have in mind there's another equality constraint around that would prevent the lifetime from being used in the destructor) so I assume it's a bug, but I wasn't able to find any reported issue about this.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/51386/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/51386/timeline", "performed_via_github_app": null, "state_reason": null}