{"url": "https://api.github.com/repos/rust-lang/rust/issues/57893", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/57893/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/57893/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/57893/events", "html_url": "https://github.com/rust-lang/rust/issues/57893", "id": 403147696, "node_id": "MDU6SXNzdWU0MDMxNDc2OTY=", "number": 57893, "title": "Coherence can be bypassed by an indirect impl for a trait object", "user": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 125141240, "node_id": "MDU6TGFiZWwxMjUxNDEyNDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-dst", "name": "A-dst", "color": "f7e101", "default": false, "description": "Area: Dynamically Sized Types"}, {"id": 203429200, "node_id": "MDU6TGFiZWwyMDM0MjkyMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-high", "name": "P-high", "color": "eb6420", "default": false, "description": "High priority"}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 267612997, "node_id": "MDU6TGFiZWwyNjc2MTI5OTc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-unsound", "name": "I-unsound", "color": "e11d21", "default": false, "description": "Issue: A soundness hole (worst kind of bug), see: https://en.wikipedia.org/wiki/Soundness"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 3921861239, "node_id": "LA_kwDOAAsO6M7pwtp3", "url": "https://api.github.com/repos/rust-lang/rust/labels/S-bug-has-test", "name": "S-bug-has-test", "color": "862eff", "default": false, "description": "A `known-bug` test has been added for this bug."}, {"id": 4172483496, "node_id": "LA_kwDOAAsO6M74swuo", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-types", "name": "T-types", "color": "bfd4f2", "default": false, "description": "Relevant to the types team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 50, "created_at": "2019-01-25T12:59:05Z", "updated_at": "2023-04-25T00:51:40Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Comments\r\n\r\nThe check for manual `impl Object for Object` only makes sure there is no *direct* `impl Object for dyn Object` - it does not consider such indirect impls. Therefore, you can write a blanket `impl<T: ?Sized> Object for T` that conflicts with the builtin `impl Object for dyn Object`.\r\n\r\n## Reproducer\r\n\r\n*edit: minimal reproducer from https://github.com/rust-lang/rust/issues/57893#issuecomment-500250283*\r\n```rust\r\ntrait Object<U> {\r\n    type Output;\r\n}\r\n\r\nimpl<T: ?Sized, U> Object<U> for T {\r\n    type Output = U;\r\n}\r\n\r\nfn foo<T: ?Sized, U>(x: <T as Object<U>>::Output) -> U {\r\n    x\r\n}\r\n\r\nfn transmute<T, U>(x: T) -> U {\r\n    foo::<dyn Object<U, Output = T>, U>(x)\r\n}\r\n```\r\n---\r\n\r\n\r\n\r\nI had some difficulties with getting the standard \"incoherence ICE\" reproducer, because the object candidate supersedes the impl candidate in selection. So here's a \"transmute_lifetime\" reproducer.\r\n\r\n```Rust\r\ntrait Object {\r\n    type Output;\r\n}\r\n\r\ntrait Marker<'b> {}\r\nimpl<'b> Marker<'b> for dyn Object<Output=&'b u64> {}\r\n\r\nimpl<'b, T: ?Sized + Marker<'b>> Object for T {\r\n    type Output = &'static u64;\r\n}\r\n\r\nfn foo<'a, 'b, T: Marker<'b> + ?Sized>(x: <T as Object>::Output) -> &'a u64 {\r\n    x\r\n}\r\n\r\nfn transmute_lifetime<'a, 'b>(x: &'a u64) -> &'b u64 {\r\n    foo::<dyn Object<Output=&'a u64>>(x)\r\n}\r\n\r\n// And yes this is a genuine `transmute_lifetime`!\r\nfn get_dangling<'a>() -> &'a u64 {\r\n    let x = 0;\r\n    transmute_lifetime(&x)\r\n}\r\n\r\nfn main() {\r\n    let r = get_dangling();\r\n    println!(\"{}\", r);\r\n}\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/57893/reactions", "total_count": 9, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 9}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/57893/timeline", "performed_via_github_app": null, "state_reason": null}