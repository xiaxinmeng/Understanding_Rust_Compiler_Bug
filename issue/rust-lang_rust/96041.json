{"url": "https://api.github.com/repos/rust-lang/rust/issues/96041", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/96041/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/96041/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/96041/events", "html_url": "https://github.com/rust-lang/rust/issues/96041", "id": 1204195904, "node_id": "I_kwDOAAsO6M5HxpJA", "number": 96041, "title": "Compiler doesn't catch invalid mutable variable of `let mut var = &self.var` when it is `&self` instead of `&mut self` in method parameter", "user": {"login": "kw7oe", "id": 12683067, "node_id": "MDQ6VXNlcjEyNjgzMDY3", "avatar_url": "https://avatars.githubusercontent.com/u/12683067?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kw7oe", "html_url": "https://github.com/kw7oe", "followers_url": "https://api.github.com/users/kw7oe/followers", "following_url": "https://api.github.com/users/kw7oe/following{/other_user}", "gists_url": "https://api.github.com/users/kw7oe/gists{/gist_id}", "starred_url": "https://api.github.com/users/kw7oe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kw7oe/subscriptions", "organizations_url": "https://api.github.com/users/kw7oe/orgs", "repos_url": "https://api.github.com/users/kw7oe/repos", "events_url": "https://api.github.com/users/kw7oe/events{/privacy}", "received_events_url": "https://api.github.com/users/kw7oe/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2022-04-14T08:15:49Z", "updated_at": "2022-04-14T13:48:58Z", "closed_at": "2022-04-14T11:14:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI tried this code:\r\n\r\n```rust\r\npub struct DiskManager {\r\n    file: File,\r\n}\r\n\r\nimpl DiskManager {\r\n    pub fn read(&self, offset: usize) -> Result<[u8; 4], std::io::Error> {\r\n        // Take a reference to self.file, and declaring file as mutable.\r\n        let mut file = &self.file;\r\n        \r\n        // Both file.seek and file.read_exact expect a &mut self.\r\n        // But file is a `let mut file: &File`. \r\n        // \r\n        // So it's this actually an acceptable behaviour or a bug in the compiler?\r\n        file.seek(SeekFrom::Start(offset as u64))?;\r\n        let mut buffer = [0; 4];\r\n        file.read_exact(&mut buffer)?;\r\n        Ok(buffer)\r\n    }\r\n    \r\n    // Shouldn't it be something like this?\r\n    pub fn read(&mut self, offset: usize) -> Result<[u8; 4], std::io::Error> {\r\n        self.file.seek(SeekFrom::Start(offset as u64))?;\r\n        let mut buffer = [0; 4];\r\n        self.file.read_exact(&mut buffer)?;\r\n        Ok(buffer)\r\n    }\r\n}\r\n\r\n```\r\n\r\nI expected that the rust compiler will complain about `let mut file = &self.file` is not a mutable references. It should show something like:\r\n\r\n```\r\n cannot borrow `self.file` as mutable, as it is behind a `&` reference\r\n```\r\n\r\nInstead, this code actually compiled successfully.\r\n\r\n### Meta\r\n\r\nHere's a link to Rust Playground for the demo code: https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=b3c0a34ff2b77bb22ca4fd1ca7ce89db\r\n\r\n#### A bit more context\r\n\r\nI was trying to implement concurrent access to read file. To have it thread safe, this means that my `read` function shouldn't take `mut self`. Hence, the correct way to do this would be through interior mutability. \r\n\r\nBut when I was trying out the approach above to remove the need of `mut self`, it compiled. However, if this impl is being accessed concurrently, it will have undefined behaviour.\r\n\r\nI'm fairly new to Rust, it might be not a bug but my lack of understanding about Rust.\r\n", "closed_by": {"login": "kw7oe", "id": 12683067, "node_id": "MDQ6VXNlcjEyNjgzMDY3", "avatar_url": "https://avatars.githubusercontent.com/u/12683067?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kw7oe", "html_url": "https://github.com/kw7oe", "followers_url": "https://api.github.com/users/kw7oe/followers", "following_url": "https://api.github.com/users/kw7oe/following{/other_user}", "gists_url": "https://api.github.com/users/kw7oe/gists{/gist_id}", "starred_url": "https://api.github.com/users/kw7oe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kw7oe/subscriptions", "organizations_url": "https://api.github.com/users/kw7oe/orgs", "repos_url": "https://api.github.com/users/kw7oe/repos", "events_url": "https://api.github.com/users/kw7oe/events{/privacy}", "received_events_url": "https://api.github.com/users/kw7oe/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/96041/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/96041/timeline", "performed_via_github_app": null, "state_reason": "completed"}