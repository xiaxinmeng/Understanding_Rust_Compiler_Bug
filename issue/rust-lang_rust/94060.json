{"url": "https://api.github.com/repos/rust-lang/rust/issues/94060", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/94060/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/94060/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/94060/events", "html_url": "https://github.com/rust-lang/rust/issues/94060", "id": 1140355248, "node_id": "I_kwDOAAsO6M5D-HCw", "number": 94060, "title": "Bad suggestion when implicit loop `.iter()` should be made mutable", "user": {"login": "edmorley", "id": 501702, "node_id": "MDQ6VXNlcjUwMTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/501702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edmorley", "html_url": "https://github.com/edmorley", "followers_url": "https://api.github.com/users/edmorley/followers", "following_url": "https://api.github.com/users/edmorley/following{/other_user}", "gists_url": "https://api.github.com/users/edmorley/gists{/gist_id}", "starred_url": "https://api.github.com/users/edmorley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edmorley/subscriptions", "organizations_url": "https://api.github.com/users/edmorley/orgs", "repos_url": "https://api.github.com/users/edmorley/repos", "events_url": "https://api.github.com/users/edmorley/events{/privacy}", "received_events_url": "https://api.github.com/users/edmorley/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2022-02-16T17:38:57Z", "updated_at": "2022-03-01T18:37:29Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Given the following code:\r\nhttps://play.rust-lang.org/?version=nightly&mode=debug&edition=2021&gist=b3ca40d8d38fae14b7bab120a85b2b8a\r\n(From AoC, in case it wasn't obvious \ud83d\ude06)\r\n\r\n```rust\r\nfn winning_losing_game_scores(bingo_game: BingoGame) -> (Option<u64>, Option<u64>) {\r\n    let mut scores = Vec::new();\r\n\r\n    for number in bingo_game.numbers_to_be_drawn {\r\n        for card in bingo_game.cards {\r\n            if card.still_playing && card.mark_number(number) {\r\n                // (removed)\r\n            }\r\n        }\r\n    }\r\n\r\n    let winning_score = scores.first();\r\n    let losing_score = scores.last();\r\n    (winning_score.copied(), losing_score.copied())\r\n}\r\n\r\nstruct BingoGame {\r\n    numbers_to_be_drawn: Vec<u64>,\r\n    cards: Vec<BingoCard>,\r\n}\r\n\r\nstruct BingoCard {\r\n    still_playing: bool,\r\n    // (removed)\r\n}\r\n\r\nimpl BingoCard {\r\n    fn mark_number(&mut self, _number: u64) -> bool {\r\n        // (removed)\r\n        false\r\n    }\r\n}\r\n```\r\n\r\nThe current output is:\r\n\r\n```\r\nerror[[E0382]](https://doc.rust-lang.org/nightly/error-index.html#E0382): use of moved value: `bingo_game.cards`\r\n   [--> src/lib.rs:5:21\r\n](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021&gist=eda0bc06b2047145bfbda74c962a5e91#)    |\r\n5   |         for card in bingo_game.cards {\r\n    |                     ^^^^^^^^^^^^^^^^\r\n    |                     |\r\n    |                     `bingo_game.cards` moved due to this implicit call to `.into_iter()`, in previous iteration of loop\r\n    |                     help: consider borrowing to avoid moving into the for loop: `&bingo_game.cards`\r\n    |\r\nnote: this function takes ownership of the receiver `self`, which moves `bingo_game.cards`\r\n    = note: move occurs because `bingo_game.cards` has type `Vec<BingoCard>`, which does not implement the `Copy` trait\r\n\r\nerror[[E0596]](https://doc.rust-lang.org/nightly/error-index.html#E0596): cannot borrow `card` as mutable, as it is not declared as mutable\r\n [--> src/lib.rs:6:38\r\n](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021&gist=eda0bc06b2047145bfbda74c962a5e91#)  |\r\n5 |         for card in bingo_game.cards {\r\n  |             ---- help: consider changing this to be mutable: `mut card`\r\n6 |             if card.still_playing && card.mark_number(number) {\r\n  |                                      ^^^^^^^^^^^^^^^^^^^^^^^^ cannot borrow as mutable\r\n```\r\n\r\nIdeally the output should look like:\r\n\r\n```\r\nerror[[E0596]](https://doc.rust-lang.org/nightly/error-index.html#E0596): cannot borrow `card` as mutable, as it is not declared as mutable\r\n [--> src/lib.rs:6:38\r\n](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021&gist=eda0bc06b2047145bfbda74c962a5e91#)  |\r\n5 |         for card in bingo_game.cards {\r\n  |                     ---------------- help: help: consider changing this to: `&mut bingo_game.cards`\r\n6 |             if card.still_playing && card.mark_number(number) {\r\n  |                                      ^^^^^^^^^^^^^^^^^^^^^^^^ cannot borrow as mutable\r\n```\r\n\r\nie: To suggest changing the implicit loop iteration `for card in bingo_game.cards` to either `for card in &mut bingo_game.cards` or else `for card in bingo_game.cards.iter_mut()`.\r\n\r\nCC #62387, #82081. (I've filed a new issue since the #62387 uses closures, and #82081 is about E0594 not E0596)", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/94060/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/94060/timeline", "performed_via_github_app": null, "state_reason": null}