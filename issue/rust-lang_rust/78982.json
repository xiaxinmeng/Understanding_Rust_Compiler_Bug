{"url": "https://api.github.com/repos/rust-lang/rust/issues/78982", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/78982/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/78982/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/78982/events", "html_url": "https://github.com/rust-lang/rust/issues/78982", "id": 741596231, "node_id": "MDU6SXNzdWU3NDE1OTYyMzE=", "number": 78982, "title": "Rustc failed to compile code due to overflowing trait bound", "user": {"login": "weiznich", "id": 1674512, "node_id": "MDQ6VXNlcjE2NzQ1MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1674512?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weiznich", "html_url": "https://github.com/weiznich", "followers_url": "https://api.github.com/users/weiznich/followers", "following_url": "https://api.github.com/users/weiznich/following{/other_user}", "gists_url": "https://api.github.com/users/weiznich/gists{/gist_id}", "starred_url": "https://api.github.com/users/weiznich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weiznich/subscriptions", "organizations_url": "https://api.github.com/users/weiznich/orgs", "repos_url": "https://api.github.com/users/weiznich/repos", "events_url": "https://api.github.com/users/weiznich/events{/privacy}", "received_events_url": "https://api.github.com/users/weiznich/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-11-12T13:22:02Z", "updated_at": "2020-11-12T14:19:20Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The following code triggers a endless type recursion in rustc while the underlying trait bounds on calling `assert_sql_conversion` are trivially satisfied. \r\n\r\n```rust\r\nuse std::marker::PhantomData;\r\n\r\nstruct ValuesClause<T, Tab> {\r\n    _marker: PhantomData<(T, Tab)>,\r\n}\r\n\r\nstruct Eq<T, U>(PhantomData<(T, U)>);\r\n\r\ntrait Insertable<T> {\r\n    type Values;\r\n}\r\n\r\nimpl<T, U> Insertable<T> for Eq<T, U> {\r\n    type Values = ValuesClause<U, T>;\r\n}\r\n\r\nimpl<'a, T, U> Insertable<T> for &'a Eq<T, U>\r\nwhere\r\n    Eq<T, &'a U>: Insertable<T>,\r\n{\r\n    type Values = <Eq<T, &'a U> as Insertable<T>>::Values;\r\n}\r\n\r\nimpl<A, SA, Tab> Insertable<Tab> for (A,)\r\nwhere\r\n    A: Insertable<Tab, Values = ValuesClause<(SA,), Tab>>,\r\n{\r\n    type Values = ValuesClause<SA, Tab>;\r\n}\r\n\r\nimpl<'a, A, Tab> Insertable<Tab> for &'a (A,)\r\nwhere\r\n    (&'a A,): Insertable<Tab>,\r\n{\r\n    type Values = <(&'a A,) as Insertable<Tab>>::Values;\r\n}\r\n\r\nstruct Table;\r\n\r\nstruct Foo {\r\n    a: i32,\r\n    b: String,\r\n}\r\n\r\nimpl<'a> Insertable<Table> for &'a Foo {\r\n    type Values = (Eq<Table, &'a i32>, Eq<Table, &'a String>);\r\n}\r\n\r\nfn assert_sql_conversion<'a, T, R>(_r: &'a R)\r\nwhere\r\n    &'a R: Insertable<T>,\r\n{\r\n    todo!()\r\n}\r\n\r\nfn main() {\r\n    assert_sql_conversion(&Foo {\r\n        a: 42,\r\n        b: String::from(\"foo\"),\r\n    });\r\n}\r\n```\r\n\r\n\r\n([Playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=0e96e9944fa14ec7bdde0c953577f4fb), Note that this is a minimized example starting from the original diesel code, therefore some things there are just simplified to reproduce the issue)\r\n\r\nError message:\r\n```\r\nerror[E0275]: overflow evaluating the requirement `&Eq<_, _>: Insertable<_>`\r\n  --> src/main.rs:57:5\r\n   |\r\n49 | fn assert_sql_conversion<'a, T, R>(_r: &'a R)\r\n   |    --------------------- required by a bound in this\r\n50 | where\r\n51 |     &'a R: Insertable<T>,\r\n   |            ------------- required by this bound in `assert_sql_conversion`\r\n...\r\n57 |     assert_sql_conversion(&Foo {\r\n   |     ^^^^^^^^^^^^^^^^^^^^^\r\n   |\r\n   = help: consider adding a `#![recursion_limit=\"256\"]` attribute to your crate (`playground`)\r\n   = note: required because of the requirements on the impl of `Insertable<_>` for `(&Eq<_, _>,)`\r\n   = note: required because of the requirements on the impl of `Insertable<_>` for `&(Eq<_, _>,)`\r\n   = note: required because of the requirements on the impl of `Insertable<_>` for `(&(Eq<_, _>,),)`\r\n   = note: required because of the requirements on the impl of `Insertable<_>` for `&((Eq<_, _>,),)`\r\n   = note: required because of the requirements on the impl of `Insertable<_>` for `(&((Eq<_, _>,),),)`\r\n   = note: required because of the requirements on the impl of `Insertable<_>` for `&(((Eq<_, _>,),),)`\r\n   = note: required because of the requirements on the impl of `Insertable<_>` for `(&(((Eq<_, _>,),),),)`\r\n   = note: required because of the requirements on the impl of `Insertable<_>` for `&((((Eq<_, _>,),),),)`\r\n   = note: required because of the requirements on the impl of `Insertable<_>` for `(&((((Eq<_, _>,),),),),)`\r\n   = note: required because of the requirements on the impl of `Insertable<_>` for `&(((((Eq<_, _>,),),),),)`\r\n   = note: required because of the requirements on the impl of `Insertable<_>` for `(&(((((Eq<_, _>,),),),),),)`\r\n   = note: required because of the requirements on the impl of `Insertable<_>` for `&((((((Eq<_, _>,),),),),),)`\r\n   = note: required because of the requirements on the impl of `Insertable<_>` for `(&((((((Eq<_, _>,),),),),),),)`\r\n   = note: required because of the requirements on the impl of `Insertable<_>` for `&(((((((Eq<_, _>,),),),),),),)`\r\n   = note: required because of the requirements on the impl of `Insertable<_>` for `(&(((((((Eq<_, _>,),),),),),),),)`\r\n   = note: required because of the requirements on the impl of `Insertable<_>` for `&((((((((Eq<_, _>,),),),),),),),)`\r\n   = note: required because of the requirements on the impl of `Insertable<_>` for `(&((((((((Eq<_, _>,),),),),),),),),)`\r\n   = note: required because of the requirements on the impl of `Insertable<_>` for `&(((((((((Eq<_, _>,),),),),),),),),)`\r\n   = note: required because of the requirements on the impl of `Insertable<_>` for `(&(((((((((Eq<_, _>,),),),),),),),),),)`\r\n   = note: required because of the requirements on the impl of `Insertable<_>` for `&((((((((((Eq<_, _>,),),),),),),),),),)`\r\n   = note: required because of the requirements on the impl of `Insertable<_>` for `(&((((((((((Eq<_, _>,),),),),),),),),),),)`\r\n   = note: required because of the requirements on the impl of `Insertable<_>` for `&(((((((((((Eq<_, _>,),),),),),),),),),),)`\r\n   = note: required because of the requirements on the impl of `Insertable<_>` for `(&(((((((((((Eq<_, _>,),),),),),),),),),),),)`\r\n   = note: required because of the requirements on the impl of `Insertable<_>` for `&((((((((((((Eq<_, _>,),),),),),),),),),),),)`\r\n   = note: required because of the requirements on the impl of `Insertable<_>` for `(&((((((((((((Eq<_, _>,),),),),),),),),),),),),)`\r\n   = note: required because of the requirements on the impl of `Insertable<_>` for `&(((((((((((((Eq<_, _>,),),),),),),),),),),),),)`\r\n   = note: required because of the requirements on the impl of `Insertable<_>` for `(&(((((((((((((Eq<_, _>,),),),),),),),),),),),),),)`\r\n   = note: required because of the requirements on the impl of `Insertable<_>` for `&((((((((((((((Eq<_, _>,),),),),),),),),),),),),),)`\r\n   = note: required because of the requirements on the impl of `Insertable<_>` for `(&((((((((((((((Eq<_, _>,),),),),),),),),),),),),),),)`\r\n   = note: required because of the requirements on the impl of `Insertable<_>` for `&(((((((((((((((Eq<_, _>,),),),),),),),),),),),),),),)`\r\n   = note: required because of the requirements on the impl of `Insertable<_>` for `(&(((((((((((((((Eq<_, _>,),),),),),),),),),),),),),),),)`\r\n   = note: required because of the requirements on the impl of `Insertable<_>` for `&((((((((((((((((Eq<_, _>,),),),),),),),),),),),),),),),)`\r\n   = note: required because of the requirements on the impl of `Insertable<_>` for `(&((((((((((((((((Eq<_, _>,),),),),),),),),),),),),),),),),)`\r\n   = note: required because of the requirements on the impl of `Insertable<_>` for `&(((((((((((((((((Eq<_, _>,),),),),),),),),),),),),),),),),)`\r\n   = note: required because of the requirements on the impl of `Insertable<_>` for `(&(((((((((((((((((Eq<_, _>,),),),),),),),),),),),),),),),),),)`\r\n   = note: required because of the requirements on the impl of `Insertable<_>` for `&((((((((((((((((((Eq<_, _>,),),),),),),),),),),),),),),),),),)`\r\n   = note: required because of the requirements on the impl of `Insertable<_>` for `(&((((((((((((((((((Eq<_, _>,),),),),),),),),),),),),),),),),),),)`\r\n   = note: required because of the requirements on the impl of `Insertable<_>` for `&(((((((((((((((((((Eq<_, _>,),),),),),),),),),),),),),),),),),),)`\r\n   = note: required because of the requirements on the impl of `Insertable<_>` for `(&(((((((((((((((((((Eq<_, _>,),),),),),),),),),),),),),),),),),),),)`\r\n   = note: required because of the requirements on the impl of `Insertable<_>` for `&((((((((((((((((((((Eq<_, _>,),),),),),),),),),),),),),),),),),),),)`\r\n   = note: required because of the requirements on the impl of `Insertable<_>` for `(&((((((((((((((((((((Eq<_, _>,),),),),),),),),),),),),),),),),),),),),)`\r\n   = note: required because of the requirements on the impl of `Insertable<_>` for `&(((((((((((((((((((((Eq<_, _>,),),),),),),),),),),),),),),),),),),),),)`\r\n   = note: required because of the requirements on the impl of `Insertable<_>` for `(&(((((((((((((((((((((Eq<_, _>,),),),),),),),),),),),),),),),),),),),),),)`\r\n   = note: required because of the requirements on the impl of `Insertable<_>` for `&((((((((((((((((((((((Eq<_, _>,),),),),),),),),),),),),),),),),),),),),),)`\r\n   = note: required because of the requirements on the impl of `Insertable<_>` for `(&((((((((((((((((((((((Eq<_, _>,),),),),),),),),),),),),),),),),),),),),),),)`\r\n   = note: required because of the requirements on the impl of `Insertable<_>` for `&(((((((((((((((((((((((Eq<_, _>,),),),),),),),),),),),),),),),),),),),),),),)`\r\n   = note: required because of the requirements on the impl of `Insertable<_>` for `(&(((((((((((((((((((((((Eq<_, _>,),),),),),),),),),),),),),),),),),),),),),),),)`\r\n   = note: required because of the requirements on the impl of `Insertable<_>` for `&((((((((((((((((((((((((Eq<_, _>,),),),),),),),),),),),),),),),),),),),),),),),)`\r\n   = note: required because of the requirements on the impl of `Insertable<_>` for `(&((((((((((((((((((((((((Eq<_, _>,),),),),),),),),),),),),),),),),),),),),),),),),)`\r\n   = note: required because of the requirements on the impl of `Insertable<_>` for `&(((((((((((((((((((((((((Eq<_, _>,),),),),),),),),),),),),),),),),),),),),),),),),)`\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/78982/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/78982/timeline", "performed_via_github_app": null, "state_reason": null}