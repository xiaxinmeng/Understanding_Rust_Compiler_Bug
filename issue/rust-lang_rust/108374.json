{"url": "https://api.github.com/repos/rust-lang/rust/issues/108374", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/108374/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/108374/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/108374/events", "html_url": "https://github.com/rust-lang/rust/issues/108374", "id": 1596018042, "node_id": "I_kwDOAAsO6M5fIU16", "number": 108374, "title": "Busy-loop Evaluating Bound on GAT Argument", "user": {"login": "Lunderberg", "id": 3888575, "node_id": "MDQ6VXNlcjM4ODg1NzU=", "avatar_url": "https://avatars.githubusercontent.com/u/3888575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lunderberg", "html_url": "https://github.com/Lunderberg", "followers_url": "https://api.github.com/users/Lunderberg/followers", "following_url": "https://api.github.com/users/Lunderberg/following{/other_user}", "gists_url": "https://api.github.com/users/Lunderberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lunderberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lunderberg/subscriptions", "organizations_url": "https://api.github.com/users/Lunderberg/orgs", "repos_url": "https://api.github.com/users/Lunderberg/repos", "events_url": "https://api.github.com/users/Lunderberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Lunderberg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 630799571, "node_id": "MDU6TGFiZWw2MzA3OTk1NzE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-compilemem", "name": "I-compilemem", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to memory usage during compilation."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1168029555, "node_id": "MDU6TGFiZWwxMTY4MDI5NTU1", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-hang", "name": "I-hang", "color": "e10c02", "default": false, "description": "Issue: The compiler never terminates, due to infinite loops, deadlock, livelock, etc."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2023-02-23T00:04:34Z", "updated_at": "2023-03-11T03:21:16Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "Using GATs, I found a busy-loop that can occur in `rustc` when using a pair of not-quite-self-referencial traits.  When compiling the minimal example below, I've let it run for ~10 minutes, during which `rustc` was at high CPU usage, and had a steadily increasing memory footprint at about 1 MB/sec.\r\n\r\n\r\n### Code\r\n\r\nThe reduced example below can reproduce the issue locally, and [on compiler explorer](https://godbolt.org/z/aa31vEPPE).\r\n\r\n```Rust\r\npub trait DummyTrait<'a, R> {}\r\nimpl<'a, T, R> DummyTrait<'a, R> for &'a T {}\r\n\r\npub trait FamilyPosition {\r\n    type Ref<Family: SelectableType<FamilyPosition = FamilyPositionImpl>>;\r\n}\r\n\r\npub struct FamilyPositionImpl;\r\nimpl FamilyPosition for FamilyPositionImpl {\r\n    type Ref<Family> = Family;\r\n}\r\n\r\npub trait SelectableType {\r\n    type FamilyPosition;\r\n}\r\n\r\npub struct TypeFamilyImpl<'a, R: FamilyPosition> (\r\n    R::Ref<TypeFamilyImpl<'a, FamilyPositionImpl>>\r\n);\r\n\r\nimpl<'a, R: FamilyPosition> SelectableType for TypeFamilyImpl<'a, R>\r\nwhere\r\n    &'a Self: DummyTrait<'a, R>,\r\n{\r\n    type FamilyPosition = R;\r\n}\r\n```\r\n\r\nWhile reducing it to the minimal example, the following elements were necessary to trigger the busy loop.\r\n\r\n* Use of the `R::Ref<TypeFamilyImpl<'a, FamilyPositionImpl>>` inside `struct FamilyPositionImpl` requires the compiler to check whether the required bounds for `R::Ref` are satisfied, so `TypeFamilyImpl<'a, FamilyPositionImpl>` must implement `SelectableType`.\r\n\r\n* In order for `TypeFamilyImpl<'a, R>` to implement `SelectableType`, the condition `&'a Self: DummyTrait<'a, R>` must be met.  (This dummy trait is part of a trait to express that any lifetime `'a` which outlives `Self` must also outlive `R`.  This relies on the trait implementation being on `&'a Self`, where the compiler may assume that `&'a Self` is well-formed.)\r\n  \r\n* The implementation of `DummyTrait` is only made for `&'a T` and not `T`.  If the implementation is made for all `T where T: 'a`, instead of `&'a T`, then the compiler can give an error message instead.\r\n  \r\n\r\nNormally, I would expect the compiler to raise an error, stating that there is a circular dependency.  If I replace `type Ref<Family: SelectableType<FamilyPosition=FamilyPositionImpl>` with `type Ref<Family: SelectableType>`, this is the error that I get.  However, the additional bound on the associated type of the argument to `Ref` somehow prevents this error from being displayed.\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\nVersion info (current stable version):\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.67.1 (d5a82bbd2 2023-02-07)\r\nbinary: rustc\r\ncommit-hash: d5a82bbd26e1ad8b7401f6a718a9c57c96905483\r\ncommit-date: 2023-02-07\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.67.1\r\nLLVM version: 15.0.6\r\n```\r\n\r\nAlso occurs on nightly:\r\n```\r\nrustc 1.69.0-nightly (246eae2fa 2023-02-21)\r\nbinary: rustc\r\ncommit-hash: 246eae2fab54a5139365c4e1a08c5724fb385fbf\r\ncommit-date: 2023-02-21\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.69.0-nightly\r\nLLVM version: 15.0.7\r\n```\r\n\r\n### Error output\r\n\r\nWhile `rustc` was busy-looping, no error messages or diagnostics were printed.\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\nNo backtrace appears when using `RUST_BACKTRACE=1`, as `rustc` didn't actually crash during the busy-loop.  If I manually send `SIGSEGV` to the `rustc` process, I can get a stack trace to print out.  Other than the instruction pointer in the third line, which may be `(+0x14a79c3)` instead of `(+0x14a79ba)`, this manually-triggered backtrace has been consistent across multiple runs.\r\n\r\n```\r\n/home/username/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/librustc_driver-710574fabae712f8.so(+0x325f1a3)[0x7f9702ce71a3]\r\n/lib/x86_64-linux-gnu/libpthread.so.0(+0x14420)[0x7f96ff8ae420]\r\n/home/username/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/librustc_driver-710574fabae712f8.so(+0x14a79ba)[0x7f9700f2f9ba]\r\n/home/username/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/librustc_driver-710574fabae712f8.so(_RNvMs_NtNtCscJHvE3sHdxM_21rustc_trait_selection6traits6engineNtB4_14ObligationCtxt19select_all_or_error+0xfb)[0x7f97017cfafb]\r\n/home/username/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/librustc_driver-710574fabae712f8.so(+0x22a6ffe)[0x7f9701d2effe]\r\n/home/username/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/librustc_driver-710574fabae712f8.so(+0x2282402)[0x7f9701d0a402]\r\n/home/username/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/librustc_driver-710574fabae712f8.so(+0x146028c)[0x7f9700ee828c]\r\n/home/username/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/librustc_driver-710574fabae712f8.so(+0x145ece0)[0x7f9700ee6ce0]\r\n/home/username/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/librustc_driver-710574fabae712f8.so(+0x2632608)[0x7f97020ba608]\r\n/home/username/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/librustc_driver-710574fabae712f8.so(+0x2632417)[0x7f97020ba417]\r\n/home/username/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/librustc_driver-710574fabae712f8.so(+0x1e0877c)[0x7f970189077c]\r\n/home/username/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/librustc_driver-710574fabae712f8.so(+0x1e0668e)[0x7f970188e68e]\r\n/home/username/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/librustc_driver-710574fabae712f8.so(+0x2602ce3)[0x7f970208ace3]\r\n/home/username/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/librustc_driver-710574fabae712f8.so(+0x175b5e8)[0x7f97011e35e8]\r\n/home/username/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/librustc_driver-710574fabae712f8.so(+0x175b3d3)[0x7f97011e33d3]\r\n/home/username/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/librustc_driver-710574fabae712f8.so(_RNvCs5R0DPq11Fmr_18rustc_hir_analysis11check_crate+0xcd)[0x7f97011e2ced]\r\n/home/username/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/librustc_driver-710574fabae712f8.so(_RNvNtCs8Kd5Bl841Dc_15rustc_interface6passes8analysis+0x6b)[0x7f97011e298b]\r\n/home/username/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/librustc_driver-710574fabae712f8.so(+0x2a1291f)[0x7f970249a91f]\r\n/home/username/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/librustc_driver-710574fabae712f8.so(+0x2a11a17)[0x7f9702499a17]\r\n/home/username/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/librustc_driver-710574fabae712f8.so(+0x2a11470)[0x7f9702499470]\r\n/home/username/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/librustc_driver-710574fabae712f8.so(+0x24241b3)[0x7f9701eac1b3]\r\n/home/username/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/librustc_driver-710574fabae712f8.so(+0x2420733)[0x7f9701ea8733]\r\n/home/username/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/librustc_driver-710574fabae712f8.so(+0x241b788)[0x7f9701ea3788]\r\n/home/username/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/librustc_driver-710574fabae712f8.so(+0x241b275)[0x7f9701ea3275]\r\n/home/username/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/librustc_driver-710574fabae712f8.so(+0x241a862)[0x7f9701ea2862]\r\n/home/username/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/librustc_driver-710574fabae712f8.so(+0x2b13b7a)[0x7f970259bb7a]\r\n/home/username/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/libstd-c6192dd4c4d410ac.so(rust_metadata_std_359ab902947f5f0b+0x10c803)[0x7f96ff9fa803]\r\n/lib/x86_64-linux-gnu/libpthread.so.0(+0x8609)[0x7f96ff8a2609]\r\n/lib/x86_64-linux-gnu/libc.so.6(clone+0x43)[0x7f96ff7c7133]\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/108374/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/108374/timeline", "performed_via_github_app": null, "state_reason": null}