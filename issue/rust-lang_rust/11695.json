{"url": "https://api.github.com/repos/rust-lang/rust/issues/11695", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/11695/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/11695/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/11695/events", "html_url": "https://github.com/rust-lang/rust/issues/11695", "id": 25959665, "node_id": "MDU6SXNzdWUyNTk1OTY2NQ==", "number": 11695, "title": "Equivalent to Python atexit functionality", "user": {"login": "bmurphy1976", "id": 270488, "node_id": "MDQ6VXNlcjI3MDQ4OA==", "avatar_url": "https://avatars.githubusercontent.com/u/270488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bmurphy1976", "html_url": "https://github.com/bmurphy1976", "followers_url": "https://api.github.com/users/bmurphy1976/followers", "following_url": "https://api.github.com/users/bmurphy1976/following{/other_user}", "gists_url": "https://api.github.com/users/bmurphy1976/gists{/gist_id}", "starred_url": "https://api.github.com/users/bmurphy1976/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bmurphy1976/subscriptions", "organizations_url": "https://api.github.com/users/bmurphy1976/orgs", "repos_url": "https://api.github.com/users/bmurphy1976/repos", "events_url": "https://api.github.com/users/bmurphy1976/events{/privacy}", "received_events_url": "https://api.github.com/users/bmurphy1976/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2014-01-21T01:54:30Z", "updated_at": "2015-01-23T02:27:30Z", "closed_at": "2015-01-23T02:27:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "I can't always guarantee that users are going to properly use a library (calling init methods, cleanup methods, etc.).\n\nOccasionally things die horribly and you want to provide stronger guarantees about when things fail.  \n\nIs there a way to hook up to an exit signal of sorts to execute code when a program exits regardless of the exit mechanism?  Something like Python atexit?\n", "closed_by": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/11695/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/11695/timeline", "performed_via_github_app": null, "state_reason": "completed"}