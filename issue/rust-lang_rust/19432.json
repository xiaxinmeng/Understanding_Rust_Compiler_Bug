{"url": "https://api.github.com/repos/rust-lang/rust/issues/19432", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/19432/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/19432/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/19432/events", "html_url": "https://github.com/rust-lang/rust/issues/19432", "id": 50479819, "node_id": "MDU6SXNzdWU1MDQ3OTgxOQ==", "number": 19432, "title": "Avoid using simple constants like 0 or 1 all over the place in unit tests", "user": {"login": "nodakai", "id": 90726, "node_id": "MDQ6VXNlcjkwNzI2", "avatar_url": "https://avatars.githubusercontent.com/u/90726?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nodakai", "html_url": "https://github.com/nodakai", "followers_url": "https://api.github.com/users/nodakai/followers", "following_url": "https://api.github.com/users/nodakai/following{/other_user}", "gists_url": "https://api.github.com/users/nodakai/gists{/gist_id}", "starred_url": "https://api.github.com/users/nodakai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nodakai/subscriptions", "organizations_url": "https://api.github.com/users/nodakai/orgs", "repos_url": "https://api.github.com/users/nodakai/repos", "events_url": "https://api.github.com/users/nodakai/events{/privacy}", "received_events_url": "https://api.github.com/users/nodakai/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 36996, "node_id": "MDU6TGFiZWwzNjk5Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-easy", "name": "E-easy", "color": "02e10c", "default": false, "description": "Call for participation: Experience needed to fix: Easy / not much (good first issue)"}, {"id": 120005, "node_id": "MDU6TGFiZWwxMjAwMDU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-testsuite", "name": "A-testsuite", "color": "f7e101", "default": false, "description": "Area: The testsuite used to check the correctness of rustc"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-12-01T01:40:09Z", "updated_at": "2016-06-27T23:28:35Z", "closed_at": "2016-06-27T23:28:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "We should replace simple constants given to system/library calls with something more distinguishable for the ease of debugging with system/library call tracer such as `strace`.\n\nLet me emphasize that replacing them doesn't have to be perfect from the beginning.  Perfectionism will not help anyone.\n\nExample: a constant `0` here\n\n``` rust\nassert_eq!(a.send_to(&[0], addr1), Ok(()));\n```\n\neventually appears in the `strace` output log as\n\n```\n10793 sendto(12, \"\\0\", 1, 0, {sa_family=AF_INET, sin_port=htons(9641), sin_addr=inet_addr(\"127.0.0.1\")}, 16 <unfinished ...>\n```\n\nbut the problem is, there are other unit tests which does `send_to(2)` of `\"\\0\"`.  It's troublesome to find the source code line corresponding to the above log.  If the original Rust code was written as\n\n``` rust\nassert_eq!(a.send_to(b\"x\", addr1), Ok(()));\n```\n\nand the other `send_to(2)` calls used `\"y\"`, `\"z\"` etc, we can easily find the above location from the output line which would look like\n\n```\n10793 sendto(12, \"x\", 1, 0, {sa_family=AF_INET, sin_port=htons(9641), sin_addr=inet_addr(\"127.0.0.1\")}, 16 <unfinished ...>\n```\n\nMy motivation is: I'm investigating why the unit test driver of `libstd` sometimes get stuck like this:\n\n```\n25174 pts/20   Ss     0:06  \\_ /bin/zsh\n 9886 pts/20   S+     0:00  |   \\_ strace -f -o /tmp/test-03-13-14.log ./x86_64-unknown-linux-gnu/stage2/test/stdtest-x86_64-unknown-linux-gnu\n 9891 pts/20   Sl+    0:02  |       \\_ ./x86_64-unknown-linux-gnu/stage2/test/stdtest-x86_64-unknown-linux-gnu\n10895 pts/20   Z+     0:00  |           \\_ [sleep] <defunct>\n10921 pts/20   Z+     0:00  |           \\_ [stdtest-x86_64-] <defunct>\n10971 pts/20   Z+     0:00  |           \\_ [stdtest-x86_64-] <defunct>\n11001 pts/20   Z+     0:00  |           \\_ [stdtest-x86_64-] <defunct>\n```\n\nI can probably post a (partial) fix of [`#[test] fn recv_from_timeout()` in `libstd/io/net/udp.rs`](https://github.com/rust-lang/rust/blob/master/src/libstd/io/net/udp.rs#L551) later.\n\n```\n$ ag '1079[23]|10800' test-03-13-14.log\n28336:9891  <... clone resumed> child_stack=0x7f71ebdfdfb0, flags=CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tidptr=0x7f71ebdfe9d0, tls=0x7f71ebdfe700, child_tidptr=0x7f71ebdfe9d0) = 10792\n28350:10792 set_robust_list(0x7f71ebdfe9e0, 24 <unfinished ...>\n28358:10792 <... set_robust_list resumed> )   = 0\n28359:10792 mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f722c6cc000\n28360:10792 sigaltstack({ss_sp=0x7f722c6cc000, ss_flags=0, ss_size=8192}, NULL) = 0\n28361:10792 sched_getaffinity(10792, 32, {ff, 0, 0, 0}) = 32\n28362:10792 clone(child_stack=0x7f71eafeafb0, flags=CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tidptr=0x7f71eafeb9d0, tls=0x7f71eafeb700, child_tidptr=0x7f71eafeb9d0) = 10793\n28363:10792 futex(0x7f722ac2da8c, FUTEX_WAIT_PRIVATE, 1, NULL <unfinished ...>\n28366:10793 set_robust_list(0x7f71eafeb9e0, 24 <unfinished ...>\n28538:10793 <... set_robust_list resumed> )   = 0\n28543:10793 mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0 <unfinished ...>\n28676:10793 <... mmap resumed> )              = 0x7f722c6be000\n28679:10793 sigaltstack({ss_sp=0x7f722c6be000, ss_flags=0, ss_size=8192} <unfinished ...>\n28683:10793 <... sigaltstack resumed> , NULL) = 0\n28686:10793 sched_getaffinity(10793, 32,  <unfinished ...>\n28690:10793 <... sched_getaffinity resumed> {ff, 0, 0, 0}) = 32\n28696:10793 getcwd( <unfinished ...>\n28699:10793 <... getcwd resumed> \"/home/nodakai/src/rust-HEAD\", 2048) = 28\n28703:10793 getcwd( <unfinished ...>\n28706:10793 <... getcwd resumed> \"/home/nodakai/src/rust-HEAD\", 2048) = 28\n28710:10793 socket(PF_INET, SOCK_DGRAM, IPPROTO_IP <unfinished ...>\n28714:10793 <... socket resumed> )            = 12\n28717:10793 bind(12, {sa_family=AF_INET, sin_port=htons(9640), sin_addr=inet_addr(\"127.0.0.1\")}, 16 <unfinished ...>\n28720:10793 <... bind resumed> )              = 0\n28724:10793 clone( <unfinished ...>\n28729:10793 <... clone resumed> child_stack=0x7f71ebbfcfb0, flags=CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tidptr=0x7f71ebbfd9d0, tls=0x7f71ebbfd700, child_tidptr=0x7f71ebbfd9d0) = 10800\n28731:10793 select(13, [12], NULL, NULL, {0, 20000} <unfinished ...>\n29248:10800 set_robust_list(0x7f71ebbfd9e0, 24 <unfinished ...>\n29463:10800 <... set_robust_list resumed> )   = 0\n30101:10800 mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0 <unfinished ...>\n30744:10800 <... mmap resumed> )              = 0x7f722c6d2000\n31039:10793 <... select resumed> )            = 0 (Timeout)\n31041:10793 select(13, [12], NULL, NULL, {0, 0} <unfinished ...>\n31043:10793 <... select resumed> )            = 0 (Timeout)\n31045:10793 sendto(12, \"\\0\", 1, 0, {sa_family=AF_INET, sin_port=htons(9641), sin_addr=inet_addr(\"127.0.0.1\")}, 16 <unfinished ...>\n31047:10793 <... sendto resumed> )            = 1\n31049:10793 recvfrom(12,  <unfinished ...>\n31291:10800 sigaltstack({ss_sp=0x7f722c6d2000, ss_flags=0, ss_size=8192} <unfinished ...>\n31747:10800 <... sigaltstack resumed> , NULL) = 0\n32023:10800 sched_getaffinity(10800, 32,  <unfinished ...>\n32039:10800 <... sched_getaffinity resumed> {ff, 0, 0, 0}) = 32\n32056:10800 socket(PF_INET, SOCK_DGRAM, IPPROTO_IP <unfinished ...>\n32062:10800 <... socket resumed> )            = 8\n32072:10800 bind(8, {sa_family=AF_INET, sin_port=htons(9641), sin_addr=inet_addr(\"127.0.0.1\")}, 16 <unfinished ...>\n32078:10800 <... bind resumed> )              = 0\n32082:10800 recvfrom(8,  <unfinished ...>\n52140:10792 <... futex resumed> )             = ? ERESTARTSYS (To be restarted if SA_RESTART is set)\n52143:10792 futex(0x7f722ac2da8c, FUTEX_WAIT_PRIVATE, 1, NULL <unfinished ...>\n63288:10792 <... futex resumed> )             = ? ERESTARTSYS (To be restarted if SA_RESTART is set)\n63290:10792 futex(0x7f722ac2da8c, FUTEX_WAIT_PRIVATE, 1, NULL <unfinished ...>\n75761:10792 <... futex resumed> )             = ? ERESTARTSYS (To be restarted if SA_RESTART is set)\n75765:10792 futex(0x7f722ac2da8c, FUTEX_WAIT_PRIVATE, 1, NULL <unfinished ...>\n75802:10792 <... futex resumed> )             = ? ERESTARTSYS (To be restarted if SA_RESTART is set)\n75804:10792 futex(0x7f722ac2da8c, FUTEX_WAIT_PRIVATE, 1, NULL <unfinished ...>\n88756:10793 <... recvfrom resumed> 0x7f71eafea27f, 1, 0, 0x7f71eafea0b8, 0x7f71eafea0ac) = ? ERESTARTSYS (To be restarted if SA_RESTART is set)\n88758:10792 <... futex resumed> )             = ? ERESTARTSYS (To be restarted if SA_RESTART is set)\n88761:10792 futex(0x7f722ac2da8c, FUTEX_WAIT_PRIVATE, 1, NULL <unfinished ...>\n89145:10793 recvfrom(12,  <unfinished ...>\n172341:10800 +++ killed by SIGINT +++\n172342:10793 +++ killed by SIGINT +++\n172343:10792 +++ killed by SIGINT +++\n```\n", "closed_by": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/19432/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/19432/timeline", "performed_via_github_app": null, "state_reason": "completed"}