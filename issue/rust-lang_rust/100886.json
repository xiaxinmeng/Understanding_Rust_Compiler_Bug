{"url": "https://api.github.com/repos/rust-lang/rust/issues/100886", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/100886/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/100886/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/100886/events", "html_url": "https://github.com/rust-lang/rust/issues/100886", "id": 1346816395, "node_id": "I_kwDOAAsO6M5QRsmL", "number": 100886, "title": "exponential build times when returning `impl T`", "user": {"login": "camshaft", "id": 799311, "node_id": "MDQ6VXNlcjc5OTMxMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/799311?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camshaft", "html_url": "https://github.com/camshaft", "followers_url": "https://api.github.com/users/camshaft/followers", "following_url": "https://api.github.com/users/camshaft/following{/other_user}", "gists_url": "https://api.github.com/users/camshaft/gists{/gist_id}", "starred_url": "https://api.github.com/users/camshaft/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camshaft/subscriptions", "organizations_url": "https://api.github.com/users/camshaft/orgs", "repos_url": "https://api.github.com/users/camshaft/repos", "events_url": "https://api.github.com/users/camshaft/events{/privacy}", "received_events_url": "https://api.github.com/users/camshaft/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 64037154, "node_id": "MDU6TGFiZWw2NDAzNzE1NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-compiletime", "name": "I-compiletime", "color": "e11d21", "default": false, "description": "Problems and improvements with respect to compile times."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-08-22T18:24:43Z", "updated_at": "2022-08-22T23:14:02Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "I work on the [`s2n-quic`](https://github.com/aws/s2n-quic) project. We have [`Client`](https://docs.rs/s2n-quic/latest/s2n_quic/client/struct.Builder.html) and [`Server`](https://docs.rs/s2n-quic/latest/s2n_quic/server/struct.Builder.html) builders that allow applications to configure the behavior of the library through several \"providers\":\r\n\r\n```rust\r\nServer::builder()\r\n    .with_connection_id(MyConnectionId)?\r\n    .with_limits(MyLimits)?\r\n    .with_tls(MyTls)?\r\n    .with_io(MyIo)?\r\n    .build()?;\r\n```\r\n\r\nWe noticed that as the number of configured providers increased, the time that `rustc` spends type checking exponentially increases. I've created a standalone example of this behavior [in a gist](https://gist.github.com/camshaft/a13940a5c4bd8d204bade82a69eb0ff6). Note that it doesn't even need to call different providers; the example calls `with_a` over and over again with the same type.\r\n\r\nThe issue seems to be with the use of `impl T` in each of the `with_*` functions:\r\n\r\n```rust\r\n    pub fn with_a<T, U>(self, value: T) -> Builder<impl Providers>\r\n    where\r\n        T: a::Provider,\r\n        U: Providers,\r\n        Self: a::With<T, Output = U>,\r\n```\r\n\r\nIf the return type is changed to `Builder<U>`, the compile time is unchanged in relation to the number of calls.\r\n\r\n|         | impl T | U     |\r\n|---------|--------|-------|\r\n| depth 1 | 0.12s  | 0.12s |\r\n| depth 2 | 0.12s  | 0.12s |\r\n| depth 3 | 0.13s  | 0.12s |\r\n| depth 4 | 0.15s  | 0.12s |\r\n| depth 5 | 0.44s  | 0.12s |\r\n| depth 6 | 5.45s  | 0.12s |\r\n| depth 7 | 1m10s  | 0.12s |\r\n\r\nHere's a summary from the self-profile:\r\n\r\n| Item                                            | Self time | % of total time | Time     | Item count |\r\n|---------|--------|-------|---|---|\r\n| evaluate_obligation                             | 17.58s    | 31.904          | 17.58s   | 340        |\r\n| check_mod_privacy                               | 13.71s    | 24.876          | 13.71s   | 2          |\r\n| typeck                                          | 10.95s    | 19.881          | 19.21s   | 10         |\r\n| type_op_prove_predicate                         | 7.05s     | 12.803          | 16.38s   | 121        |\r\n| mir_borrowck                                    | 4.43s     | 8.035           | 22.13s   | 10         |\r\n| normalize_projection_ty                         | 1.32s     | 2.387           | 1.32s    | 131        |\r\n| self_profile_alloc_query_strings                | 14.69ms   | 0.027           | 26.63ms  | 1          |\r\n\r\nMy expectation is that `impl T` would be equivalent to `U` in the amount of type checking needed. My preference would be to use `impl T`, as it keeps the display size of the type in the UI minimal.\r\n\r\nLet me know if you need any additional details \ud83d\ude03.\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.63.0 (4b91a6ea7 2022-08-08)\r\nbinary: rustc\r\ncommit-hash: 4b91a6ea7258a947e59c6522cd5898e7c0a6a88f\r\ncommit-date: 2022-08-08\r\nhost: x86_64-apple-darwin\r\nrelease: 1.63.0\r\nLLVM version: 14.0.5\r\n```\r\n\r\nnightly (for the self-profile):\r\n```\r\nrustc 1.65.0-nightly (0b79f758c 2022-08-18)\r\nbinary: rustc\r\ncommit-hash: 0b79f758c9aa6646606662a6d623a0752286cd17\r\ncommit-date: 2022-08-18\r\nhost: x86_64-apple-darwin\r\nrelease: 1.65.0-nightly\r\nLLVM version: 15.0.0\r\n```\r\n\r\nI also tested this behavior on an old version of `rustc` (1.35) and compile times were actually worse so there has been some improvement since then.\r\n\r\n```\r\nrustc 1.35.0 (3c235d560 2019-05-20)\r\nbinary: rustc\r\ncommit-hash: 3c235d5600393dfe6c36eeed34042efad8d4f26e\r\ncommit-date: 2019-05-20\r\nhost: x86_64-apple-darwin\r\nrelease: 1.35.0\r\nLLVM version: 8.0\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/100886/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/100886/timeline", "performed_via_github_app": null, "state_reason": null}