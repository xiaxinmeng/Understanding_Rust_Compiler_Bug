{"url": "https://api.github.com/repos/rust-lang/rust/issues/71279", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/71279/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/71279/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/71279/events", "html_url": "https://github.com/rust-lang/rust/issues/71279", "id": 602442711, "node_id": "MDU6SXNzdWU2MDI0NDI3MTE=", "number": 71279, "title": "Implement a function that creates a Cow<'_, CStr> from a slice of bytes", "user": {"login": "NickKolpinskiy", "id": 36904050, "node_id": "MDQ6VXNlcjM2OTA0MDUw", "avatar_url": "https://avatars.githubusercontent.com/u/36904050?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NickKolpinskiy", "html_url": "https://github.com/NickKolpinskiy", "followers_url": "https://api.github.com/users/NickKolpinskiy/followers", "following_url": "https://api.github.com/users/NickKolpinskiy/following{/other_user}", "gists_url": "https://api.github.com/users/NickKolpinskiy/gists{/gist_id}", "starred_url": "https://api.github.com/users/NickKolpinskiy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NickKolpinskiy/subscriptions", "organizations_url": "https://api.github.com/users/NickKolpinskiy/orgs", "repos_url": "https://api.github.com/users/NickKolpinskiy/repos", "events_url": "https://api.github.com/users/NickKolpinskiy/events{/privacy}", "received_events_url": "https://api.github.com/users/NickKolpinskiy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-18T11:53:23Z", "updated_at": "2020-04-19T18:11:43Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "I've been working on FFI-bindings for a C library and I ran into an issue where `CString::new()` would fail if there's a 0-byte.\r\n\r\nI was left with three options:\r\n1) Let the users of my crate deal with `NulError`, which makes it less ergonomic, IMO;\r\n2) Just unwrap the Result under the hood and document the possible panic;\r\n3) When `CString::new()` fails, call `CStr::from_bytes_with_nul()` using `NulError::nul_position()`, wrap both `Ok` and `Err` branches in `Cow::from()`.\r\n\r\nI found the third option to be the most ergonomic and that's what I went with. Of course you could argue that it's sort of a leaky abstraction because users are expected to understand that C-libraries usually read until the 0-byte. But an interior 0-byte in a Rust string is not really a common case, is it?\r\n\r\nSo, what do you guys think, is this something worthy of being a part of `std::ffi`?\r\n\r\nI already made the changes locally and I'd be happy to make a PR. However, I can't come up with a good name, so far I called it `CString::from_slice()` but I don't think it's fitting.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/71279/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/71279/timeline", "performed_via_github_app": null, "state_reason": null}