{"url": "https://api.github.com/repos/rust-lang/rust/issues/112438", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/112438/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/112438/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/112438/events", "html_url": "https://github.com/rust-lang/rust/issues/112438", "id": 1748764574, "node_id": "I_kwDOAAsO6M5oPAee", "number": 112438, "title": "ICE `assertion failed: matches!(self.def_kind(ct.def), DefKind :: AnonConst)` if fn has generic param", "user": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 36996, "node_id": "MDU6TGFiZWwzNjk5Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-easy", "name": "E-easy", "color": "02e10c", "default": false, "description": "Call for participation: Experience needed to fix: Easy / not much (good first issue)"}, {"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}, {"id": 5226739262, "node_id": "LA_kwDOAAsO6M8AAAABN4m2Pg", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-incomplete-features", "name": "requires-incomplete-features", "color": "76dcde", "default": false, "description": ""}, {"id": 5599077117, "node_id": "LA_kwDOAAsO6M8AAAABTbsi_Q", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-inline_const_pat", "name": "F-inline_const_pat", "color": "f9c0cc", "default": false, "description": "#![feature(inline_const_pat)]"}], "state": "closed", "locked": false, "assignee": {"login": "mj10021", "id": 5280405, "node_id": "MDQ6VXNlcjUyODA0MDU=", "avatar_url": "https://avatars.githubusercontent.com/u/5280405?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mj10021", "html_url": "https://github.com/mj10021", "followers_url": "https://api.github.com/users/mj10021/followers", "following_url": "https://api.github.com/users/mj10021/following{/other_user}", "gists_url": "https://api.github.com/users/mj10021/gists{/gist_id}", "starred_url": "https://api.github.com/users/mj10021/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mj10021/subscriptions", "organizations_url": "https://api.github.com/users/mj10021/orgs", "repos_url": "https://api.github.com/users/mj10021/repos", "events_url": "https://api.github.com/users/mj10021/events{/privacy}", "received_events_url": "https://api.github.com/users/mj10021/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mj10021", "id": 5280405, "node_id": "MDQ6VXNlcjUyODA0MDU=", "avatar_url": "https://avatars.githubusercontent.com/u/5280405?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mj10021", "html_url": "https://github.com/mj10021", "followers_url": "https://api.github.com/users/mj10021/followers", "following_url": "https://api.github.com/users/mj10021/following{/other_user}", "gists_url": "https://api.github.com/users/mj10021/gists{/gist_id}", "starred_url": "https://api.github.com/users/mj10021/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mj10021/subscriptions", "organizations_url": "https://api.github.com/users/mj10021/orgs", "repos_url": "https://api.github.com/users/mj10021/repos", "events_url": "https://api.github.com/users/mj10021/events{/privacy}", "received_events_url": "https://api.github.com/users/mj10021/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2023-06-08T22:54:21Z", "updated_at": "2023-06-15T19:04:11Z", "closed_at": "2023-06-15T19:04:11Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "<!--\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\nhow to create smaller examples.\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\n-->\n\n### Code\n\n```Rust\n#![feature(inline_const_pat)]\n\nfn foo<const V: usize>() {\n    match 0 {\n        const { 1 << 5 } | _ => {}\n    }\n}\n\nfn main() {}\n```\n\ninterestingly the code  compiles as soon as I remove `<const V: usize>` and just make it a boring `foo() {...}`\n\n\n### Meta\n<!--\nIf you're using the stable version of the compiler, you should also check if the\nbug also exists in the beta or nightly versions.\n-->\n\n`rustc --version --verbose`:\n```\nrustc 1.72.0-nightly (a97c36dd2 2023-06-07)\nbinary: rustc\ncommit-hash: a97c36dd2e6f711949fc9b790476e93bd9e6d1f4\ncommit-date: 2023-06-07\nhost: x86_64-unknown-linux-gnu\nrelease: 1.72.0-nightly\nLLVM version: 16.0.5\n```\n\n### Error output\n\n```\n<output>\n```\n\n<!--\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\n-->\n<details><summary><strong>Backtrace</strong></summary>\n<p>\n\n```\nwarning: the feature `inline_const_pat` is incomplete and may not be safe to use and/or cause compiler crashes\n --> treereduce.out:1:12\n  |\n1 | #![feature(inline_const_pat)]\n  |            ^^^^^^^^^^^^^^^^\n  |\n  = note: see issue #76001 <https://github.com/rust-lang/rust/issues/76001> for more information\n  = note: `#[warn(incomplete_features)]` on by default\n\nthread 'rustc' panicked at 'assertion failed: matches!(self.def_kind(ct.def), DefKind :: AnonConst)', compiler/rustc_middle/src/mir/interpret/queries.rs:98:25\nstack backtrace:\n   0:     0x7f767775ab71 - trace\n                               at /rustc/a97c36dd2e6f711949fc9b790476e93bd9e6d1f4/library/std/src/../../backtrace/src/backtrace/libunwind.rs:93:5\n   1:     0x7f767775ab71 - trace_unsynchronized<std::sys_common::backtrace::_print_fmt::{closure_env#1}>\n                               at /rustc/a97c36dd2e6f711949fc9b790476e93bd9e6d1f4/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n   2:     0x7f767775ab71 - _print_fmt\n                               at /rustc/a97c36dd2e6f711949fc9b790476e93bd9e6d1f4/library/std/src/sys_common/backtrace.rs:65:5\n   3:     0x7f767775ab71 - fmt\n                               at /rustc/a97c36dd2e6f711949fc9b790476e93bd9e6d1f4/library/std/src/sys_common/backtrace.rs:44:22\n   4:     0x7f76777bb4bf - fmt\n                               at /rustc/a97c36dd2e6f711949fc9b790476e93bd9e6d1f4/library/core/src/fmt/rt.rs:138:9\n   5:     0x7f76777bb4bf - write\n                               at /rustc/a97c36dd2e6f711949fc9b790476e93bd9e6d1f4/library/core/src/fmt/mod.rs:1094:21\n   6:     0x7f767774dd71 - write_fmt<std::sys::unix::stdio::Stderr>\n                               at /rustc/a97c36dd2e6f711949fc9b790476e93bd9e6d1f4/library/std/src/io/mod.rs:1713:15\n   7:     0x7f767775a985 - _print\n                               at /rustc/a97c36dd2e6f711949fc9b790476e93bd9e6d1f4/library/std/src/sys_common/backtrace.rs:47:5\n   8:     0x7f767775a985 - print\n                               at /rustc/a97c36dd2e6f711949fc9b790476e93bd9e6d1f4/library/std/src/sys_common/backtrace.rs:34:9\n   9:     0x7f767775d647 - {closure#1}\n  10:     0x7f767775d434 - default_hook\n                               at /rustc/a97c36dd2e6f711949fc9b790476e93bd9e6d1f4/library/std/src/panicking.rs:288:9\n  11:     0x7f76765cc9fb - <rustc_driver_impl[3f359aa20f2c61f0]::install_ice_hook::{closure#0} as core[f9f5fd1b7386ffed]::ops::function::FnOnce<(&core[f9f5fd1b7386ffed]::panic::panic_info::PanicInfo,)>>::call_once::{shim:vtable#0}\n  12:     0x7f767775dd8d - call<(&core::panic::panic_info::PanicInfo), (dyn core::ops::function::Fn<(&core::panic::panic_info::PanicInfo), Output=()> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>\n                               at /rustc/a97c36dd2e6f711949fc9b790476e93bd9e6d1f4/library/alloc/src/boxed.rs:1999:9\n  13:     0x7f767775dd8d - rust_panic_with_hook\n                               at /rustc/a97c36dd2e6f711949fc9b790476e93bd9e6d1f4/library/std/src/panicking.rs:709:13\n  14:     0x7f767775dae1 - {closure#0}\n                               at /rustc/a97c36dd2e6f711949fc9b790476e93bd9e6d1f4/library/std/src/panicking.rs:595:13\n  15:     0x7f767775afa6 - __rust_end_short_backtrace<std::panicking::begin_panic_handler::{closure_env#0}, !>\n                               at /rustc/a97c36dd2e6f711949fc9b790476e93bd9e6d1f4/library/std/src/sys_common/backtrace.rs:151:18\n  16:     0x7f767775d872 - begin_panic_handler\n                               at /rustc/a97c36dd2e6f711949fc9b790476e93bd9e6d1f4/library/std/src/panicking.rs:593:5\n  17:     0x7f76777b7743 - panic_fmt\n                               at /rustc/a97c36dd2e6f711949fc9b790476e93bd9e6d1f4/library/core/src/panicking.rs:67:14\n  18:     0x7f76777b77d3 - panic\n                               at /rustc/a97c36dd2e6f711949fc9b790476e93bd9e6d1f4/library/core/src/panicking.rs:117:5\n  19:     0x7f7674cf0799 - <rustc_middle[d11dae94dae5aa4]::ty::context::TyCtxt>::const_eval_resolve_for_typeck\n  20:     0x7f7674b74f0f - <rustc_mir_build[42dc4d58850e2f5e]::thir::pattern::PatCtxt>::lower_lit\n  21:     0x7f7674b678a0 - <rustc_mir_build[42dc4d58850e2f5e]::thir::pattern::PatCtxt>::lower_pattern\n  22:     0x7f7674b766cb - <alloc[c49a19475105f89d]::vec::Vec<alloc[c49a19475105f89d]::boxed::Box<rustc_middle[d11dae94dae5aa4]::thir::Pat>> as alloc[c49a19475105f89d]::vec::spec_from_iter::SpecFromIter<alloc[c49a19475105f89d]::boxed::Box<rustc_middle[d11dae94dae5aa4]::thir::Pat>, core[f9f5fd1b7386ffed]::iter::adapters::map::Map<core[f9f5fd1b7386ffed]::slice::iter::Iter<rustc_hir[fad95f961b4ae85c]::hir::Pat>, <rustc_mir_build[42dc4d58850e2f5e]::thir::pattern::PatCtxt>::lower_patterns::{closure#0}>>>::from_iter\n  23:     0x7f7674b67e57 - <rustc_mir_build[42dc4d58850e2f5e]::thir::pattern::PatCtxt>::lower_pattern\n  24:     0x7f7674b65c77 - <core[f9f5fd1b7386ffed]::iter::adapters::map::Map<core[f9f5fd1b7386ffed]::slice::iter::Iter<rustc_hir[fad95f961b4ae85c]::hir::Arm>, <rustc_mir_build[42dc4d58850e2f5e]::thir::cx::Cx>::make_mirror_unadjusted::{closure#0}::{closure#14}> as core[f9f5fd1b7386ffed]::iter::traits::iterator::Iterator>::fold::<(), core[f9f5fd1b7386ffed]::iter::traits::iterator::Iterator::for_each::call<rustc_middle[d11dae94dae5aa4]::thir::ArmId, <alloc[c49a19475105f89d]::vec::Vec<rustc_middle[d11dae94dae5aa4]::thir::ArmId>>::extend_trusted<core[f9f5fd1b7386ffed]::iter::adapters::map::Map<core[f9f5fd1b7386ffed]::slice::iter::Iter<rustc_hir[fad95f961b4ae85c]::hir::Arm>, <rustc_mir_build[42dc4d58850e2f5e]::thir::cx::Cx>::make_mirror_unadjusted::{closure#0}::{closure#14}>>::{closure#0}>::{closure#0}>\n  25:     0x7f7674b65a0d - <alloc[c49a19475105f89d]::vec::Vec<rustc_middle[d11dae94dae5aa4]::thir::ArmId> as alloc[c49a19475105f89d]::vec::spec_from_iter::SpecFromIter<rustc_middle[d11dae94dae5aa4]::thir::ArmId, core[f9f5fd1b7386ffed]::iter::adapters::map::Map<core[f9f5fd1b7386ffed]::slice::iter::Iter<rustc_hir[fad95f961b4ae85c]::hir::Arm>, <rustc_mir_build[42dc4d58850e2f5e]::thir::cx::Cx>::make_mirror_unadjusted::{closure#0}::{closure#14}>>>::from_iter\n  26:     0x7f7674b6b438 - <rustc_mir_build[42dc4d58850e2f5e]::thir::cx::Cx>::make_mirror_unadjusted::{closure#0}\n  27:     0x7f7674b64154 - <rustc_mir_build[42dc4d58850e2f5e]::thir::cx::Cx>::mirror_expr\n  28:     0x7f7674b6afea - <rustc_mir_build[42dc4d58850e2f5e]::thir::cx::Cx>::make_mirror_unadjusted::{closure#0}\n  29:     0x7f7674b64154 - <rustc_mir_build[42dc4d58850e2f5e]::thir::cx::Cx>::mirror_expr\n  30:     0x7f7674fe8e6d - rustc_mir_build[42dc4d58850e2f5e]::thir::cx::thir_body\n  31:     0x7f767460ba51 - rustc_query_impl[84f706b35b6b9e70]::plumbing::__rust_begin_short_backtrace::<rustc_query_impl[84f706b35b6b9e70]::query_impl::thir_body::dynamic_query::{closure#2}::{closure#0}, rustc_middle[d11dae94dae5aa4]::query::erase::Erased<[u8; 16usize]>>\n  32:     0x7f7674e7033b - rustc_query_system[716cab2bfe503dab]::query::plumbing::try_execute_query::<rustc_query_impl[84f706b35b6b9e70]::DynamicConfig<rustc_query_system[716cab2bfe503dab]::query::caches::VecCache<rustc_span[75d82fe363844395]::def_id::LocalDefId, rustc_middle[d11dae94dae5aa4]::query::erase::Erased<[u8; 16usize]>>, false, false, false>, rustc_query_impl[84f706b35b6b9e70]::plumbing::QueryCtxt, false>\n  33:     0x7f7674e70057 - rustc_query_impl[84f706b35b6b9e70]::query_impl::thir_body::get_query_non_incr::__rust_end_short_backtrace\n  34:     0x7f7675deda94 - rustc_mir_build[42dc4d58850e2f5e]::thir::pattern::check_match::check_match\n  35:     0x7f76745ee0ac - rustc_query_impl[84f706b35b6b9e70]::plumbing::__rust_begin_short_backtrace::<rustc_query_impl[84f706b35b6b9e70]::query_impl::check_match::dynamic_query::{closure#2}::{closure#0}, rustc_middle[d11dae94dae5aa4]::query::erase::Erased<[u8; 1usize]>>\n  36:     0x7f7674d3341e - rustc_query_system[716cab2bfe503dab]::query::plumbing::try_execute_query::<rustc_query_impl[84f706b35b6b9e70]::DynamicConfig<rustc_query_system[716cab2bfe503dab]::query::caches::VecCache<rustc_span[75d82fe363844395]::def_id::LocalDefId, rustc_middle[d11dae94dae5aa4]::query::erase::Erased<[u8; 1usize]>>, false, false, false>, rustc_query_impl[84f706b35b6b9e70]::plumbing::QueryCtxt, false>\n  37:     0x7f7675f4bef4 - rustc_query_impl[84f706b35b6b9e70]::query_impl::check_match::get_query_non_incr::__rust_end_short_backtrace\n  38:     0x7f767543c37d - rustc_mir_build[42dc4d58850e2f5e]::build::mir_built\n  39:     0x7f767460ba9c - rustc_query_impl[84f706b35b6b9e70]::plumbing::__rust_begin_short_backtrace::<rustc_query_impl[84f706b35b6b9e70]::query_impl::mir_built::dynamic_query::{closure#2}::{closure#0}, rustc_middle[d11dae94dae5aa4]::query::erase::Erased<[u8; 8usize]>>\n  40:     0x7f767460ba7e - <rustc_query_impl[84f706b35b6b9e70]::query_impl::mir_built::dynamic_query::{closure#2} as core[f9f5fd1b7386ffed]::ops::function::FnOnce<(rustc_middle[d11dae94dae5aa4]::ty::context::TyCtxt, rustc_span[75d82fe363844395]::def_id::LocalDefId)>>::call_once\n  41:     0x7f76746f24cd - rustc_query_system[716cab2bfe503dab]::query::plumbing::try_execute_query::<rustc_query_impl[84f706b35b6b9e70]::DynamicConfig<rustc_query_system[716cab2bfe503dab]::query::caches::VecCache<rustc_span[75d82fe363844395]::def_id::LocalDefId, rustc_middle[d11dae94dae5aa4]::query::erase::Erased<[u8; 8usize]>>, false, false, false>, rustc_query_impl[84f706b35b6b9e70]::plumbing::QueryCtxt, false>\n  42:     0x7f7675f48f11 - rustc_query_impl[84f706b35b6b9e70]::query_impl::mir_built::get_query_non_incr::__rust_end_short_backtrace\n  43:     0x7f76755df2e4 - rustc_mir_transform[4856baf7e44d39b8]::check_unsafety::unsafety_check_result\n  44:     0x7f767460badc - rustc_query_impl[84f706b35b6b9e70]::plumbing::__rust_begin_short_backtrace::<rustc_query_impl[84f706b35b6b9e70]::query_impl::unsafety_check_result::dynamic_query::{closure#2}::{closure#0}, rustc_middle[d11dae94dae5aa4]::query::erase::Erased<[u8; 8usize]>>\n  45:     0x7f767460babe - <rustc_query_impl[84f706b35b6b9e70]::query_impl::unsafety_check_result::dynamic_query::{closure#2} as core[f9f5fd1b7386ffed]::ops::function::FnOnce<(rustc_middle[d11dae94dae5aa4]::ty::context::TyCtxt, rustc_span[75d82fe363844395]::def_id::LocalDefId)>>::call_once\n  46:     0x7f76746f24cd - rustc_query_system[716cab2bfe503dab]::query::plumbing::try_execute_query::<rustc_query_impl[84f706b35b6b9e70]::DynamicConfig<rustc_query_system[716cab2bfe503dab]::query::caches::VecCache<rustc_span[75d82fe363844395]::def_id::LocalDefId, rustc_middle[d11dae94dae5aa4]::query::erase::Erased<[u8; 8usize]>>, false, false, false>, rustc_query_impl[84f706b35b6b9e70]::plumbing::QueryCtxt, false>\n  47:     0x7f7675f4ab91 - rustc_query_impl[84f706b35b6b9e70]::query_impl::unsafety_check_result::get_query_non_incr::__rust_end_short_backtrace\n  48:     0x7f767582d584 - rustc_mir_transform[4856baf7e44d39b8]::mir_const\n  49:     0x7f76746238be - rustc_query_impl[84f706b35b6b9e70]::plumbing::__rust_begin_short_backtrace::<rustc_query_impl[84f706b35b6b9e70]::query_impl::mir_const::dynamic_query::{closure#2}::{closure#0}, rustc_middle[d11dae94dae5aa4]::query::erase::Erased<[u8; 8usize]>>\n  50:     0x7f767462388e - <rustc_query_impl[84f706b35b6b9e70]::query_impl::mir_const::dynamic_query::{closure#2} as core[f9f5fd1b7386ffed]::ops::function::FnOnce<(rustc_middle[d11dae94dae5aa4]::ty::context::TyCtxt, rustc_span[75d82fe363844395]::def_id::LocalDefId)>>::call_once\n  51:     0x7f76746f24cd - rustc_query_system[716cab2bfe503dab]::query::plumbing::try_execute_query::<rustc_query_impl[84f706b35b6b9e70]::DynamicConfig<rustc_query_system[716cab2bfe503dab]::query::caches::VecCache<rustc_span[75d82fe363844395]::def_id::LocalDefId, rustc_middle[d11dae94dae5aa4]::query::erase::Erased<[u8; 8usize]>>, false, false, false>, rustc_query_impl[84f706b35b6b9e70]::plumbing::QueryCtxt, false>\n  52:     0x7f7675f49011 - rustc_query_impl[84f706b35b6b9e70]::query_impl::mir_const::get_query_non_incr::__rust_end_short_backtrace\n  53:     0x7f767534f556 - rustc_mir_transform[4856baf7e44d39b8]::mir_promoted\n  54:     0x7f76745f38bf - rustc_query_impl[84f706b35b6b9e70]::plumbing::__rust_begin_short_backtrace::<rustc_query_impl[84f706b35b6b9e70]::query_impl::mir_promoted::dynamic_query::{closure#2}::{closure#0}, rustc_middle[d11dae94dae5aa4]::query::erase::Erased<[u8; 16usize]>>\n  55:     0x7f7674e7036a - rustc_query_system[716cab2bfe503dab]::query::plumbing::try_execute_query::<rustc_query_impl[84f706b35b6b9e70]::DynamicConfig<rustc_query_system[716cab2bfe503dab]::query::caches::VecCache<rustc_span[75d82fe363844395]::def_id::LocalDefId, rustc_middle[d11dae94dae5aa4]::query::erase::Erased<[u8; 16usize]>>, false, false, false>, rustc_query_impl[84f706b35b6b9e70]::plumbing::QueryCtxt, false>\n  56:     0x7f7675f49457 - rustc_query_impl[84f706b35b6b9e70]::query_impl::mir_promoted::get_query_non_incr::__rust_end_short_backtrace\n  57:     0x7f76754d504c - rustc_borrowck[9b0df5aae4df6ce0]::mir_borrowck\n  58:     0x7f767462385e - rustc_query_impl[84f706b35b6b9e70]::plumbing::__rust_begin_short_backtrace::<rustc_query_impl[84f706b35b6b9e70]::query_impl::mir_borrowck::dynamic_query::{closure#2}::{closure#0}, rustc_middle[d11dae94dae5aa4]::query::erase::Erased<[u8; 8usize]>>\n  59:     0x7f767462382e - <rustc_query_impl[84f706b35b6b9e70]::query_impl::mir_borrowck::dynamic_query::{closure#2} as core[f9f5fd1b7386ffed]::ops::function::FnOnce<(rustc_middle[d11dae94dae5aa4]::ty::context::TyCtxt, rustc_span[75d82fe363844395]::def_id::LocalDefId)>>::call_once\n  60:     0x7f76746f24cd - rustc_query_system[716cab2bfe503dab]::query::plumbing::try_execute_query::<rustc_query_impl[84f706b35b6b9e70]::DynamicConfig<rustc_query_system[716cab2bfe503dab]::query::caches::VecCache<rustc_span[75d82fe363844395]::def_id::LocalDefId, rustc_middle[d11dae94dae5aa4]::query::erase::Erased<[u8; 8usize]>>, false, false, false>, rustc_query_impl[84f706b35b6b9e70]::plumbing::QueryCtxt, false>\n  61:     0x7f7675f4bd11 - rustc_query_impl[84f706b35b6b9e70]::query_impl::mir_borrowck::get_query_non_incr::__rust_end_short_backtrace\n  62:     0x7f7675a70f1e - rustc_data_structures[1f97a7aa4fc669e3]::sync::par_for_each_in::<&[rustc_span[75d82fe363844395]::def_id::LocalDefId], <rustc_middle[d11dae94dae5aa4]::hir::map::Map>::par_body_owners<rustc_interface[5cebeb4b37f8e7df]::passes::analysis::{closure#1}::{closure#0}>::{closure#0}>\n  63:     0x7f7675a70c36 - <rustc_session[3db9de5bce4cb3b6]::session::Session>::time::<(), rustc_interface[5cebeb4b37f8e7df]::passes::analysis::{closure#1}>\n  64:     0x7f7675a7081f - rustc_interface[5cebeb4b37f8e7df]::passes::analysis\n  65:     0x7f7675ad798a - rustc_query_impl[84f706b35b6b9e70]::plumbing::__rust_begin_short_backtrace::<rustc_query_impl[84f706b35b6b9e70]::query_impl::analysis::dynamic_query::{closure#2}::{closure#0}, rustc_middle[d11dae94dae5aa4]::query::erase::Erased<[u8; 1usize]>>\n  66:     0x7f7675ad7979 - <rustc_query_impl[84f706b35b6b9e70]::query_impl::analysis::dynamic_query::{closure#2} as core[f9f5fd1b7386ffed]::ops::function::FnOnce<(rustc_middle[d11dae94dae5aa4]::ty::context::TyCtxt, ())>>::call_once\n  67:     0x7f7675c71ad8 - rustc_query_system[716cab2bfe503dab]::query::plumbing::try_execute_query::<rustc_query_impl[84f706b35b6b9e70]::DynamicConfig<rustc_query_system[716cab2bfe503dab]::query::caches::SingleCache<rustc_middle[d11dae94dae5aa4]::query::erase::Erased<[u8; 1usize]>>, false, false, false>, rustc_query_impl[84f706b35b6b9e70]::plumbing::QueryCtxt, false>\n  68:     0x7f7675c718a9 - rustc_query_impl[84f706b35b6b9e70]::query_impl::analysis::get_query_non_incr::__rust_end_short_backtrace\n  69:     0x7f7675c321f5 - <rustc_middle[d11dae94dae5aa4]::ty::context::GlobalCtxt>::enter::<rustc_driver_impl[3f359aa20f2c61f0]::run_compiler::{closure#1}::{closure#2}::{closure#4}, core[f9f5fd1b7386ffed]::result::Result<(), rustc_span[75d82fe363844395]::ErrorGuaranteed>>\n  70:     0x7f767588ecff - <rustc_interface[5cebeb4b37f8e7df]::interface::Compiler>::enter::<rustc_driver_impl[3f359aa20f2c61f0]::run_compiler::{closure#1}::{closure#2}, core[f9f5fd1b7386ffed]::result::Result<core[f9f5fd1b7386ffed]::option::Option<rustc_interface[5cebeb4b37f8e7df]::queries::Linker>, rustc_span[75d82fe363844395]::ErrorGuaranteed>>\n  71:     0x7f767588c310 - std[72a9bdb14847565]::sys_common::backtrace::__rust_begin_short_backtrace::<rustc_interface[5cebeb4b37f8e7df]::util::run_in_thread_pool_with_globals<rustc_interface[5cebeb4b37f8e7df]::interface::run_compiler<core[f9f5fd1b7386ffed]::result::Result<(), rustc_span[75d82fe363844395]::ErrorGuaranteed>, rustc_driver_impl[3f359aa20f2c61f0]::run_compiler::{closure#1}>::{closure#0}, core[f9f5fd1b7386ffed]::result::Result<(), rustc_span[75d82fe363844395]::ErrorGuaranteed>>::{closure#0}::{closure#0}, core[f9f5fd1b7386ffed]::result::Result<(), rustc_span[75d82fe363844395]::ErrorGuaranteed>>\n  72:     0x7f767588bab5 - <<std[72a9bdb14847565]::thread::Builder>::spawn_unchecked_<rustc_interface[5cebeb4b37f8e7df]::util::run_in_thread_pool_with_globals<rustc_interface[5cebeb4b37f8e7df]::interface::run_compiler<core[f9f5fd1b7386ffed]::result::Result<(), rustc_span[75d82fe363844395]::ErrorGuaranteed>, rustc_driver_impl[3f359aa20f2c61f0]::run_compiler::{closure#1}>::{closure#0}, core[f9f5fd1b7386ffed]::result::Result<(), rustc_span[75d82fe363844395]::ErrorGuaranteed>>::{closure#0}::{closure#0}, core[f9f5fd1b7386ffed]::result::Result<(), rustc_span[75d82fe363844395]::ErrorGuaranteed>>::{closure#1} as core[f9f5fd1b7386ffed]::ops::function::FnOnce<()>>::call_once::{shim:vtable#0}\n  73:     0x7f76777682b5 - call_once<(), dyn core::ops::function::FnOnce<(), Output=()>, alloc::alloc::Global>\n                               at /rustc/a97c36dd2e6f711949fc9b790476e93bd9e6d1f4/library/alloc/src/boxed.rs:1985:9\n  74:     0x7f76777682b5 - call_once<(), alloc::boxed::Box<dyn core::ops::function::FnOnce<(), Output=()>, alloc::alloc::Global>, alloc::alloc::Global>\n                               at /rustc/a97c36dd2e6f711949fc9b790476e93bd9e6d1f4/library/alloc/src/boxed.rs:1985:9\n  75:     0x7f76777682b5 - thread_start\n                               at /rustc/a97c36dd2e6f711949fc9b790476e93bd9e6d1f4/library/std/src/sys/unix/thread.rs:108:17\n  76:     0x7f767326444b - <unknown>\n  77:     0x7f76732e7e40 - <unknown>\n  78:                0x0 - <unknown>\n\nerror: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\n\nnote: rustc 1.72.0-nightly (a97c36dd2 2023-06-07) running on x86_64-unknown-linux-gnu\n\nquery stack during panic:\n#0 [thir_body] building THIR for `foo`\n#1 [check_match] match-checking `foo`\n#2 [mir_built] building MIR for `foo`\n#3 [unsafety_check_result] unsafety-checking `foo`\n#4 [mir_const] preparing `foo` for borrow checking\n#5 [mir_promoted] promoting constants in MIR for `foo`\n#6 [mir_borrowck] borrow-checking `foo`\n#7 [analysis] running analysis passes on this crate\nend of query stack\nwarning: 1 warning emitted\n```\n\n</p>\n</details>\n\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"mj10021\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/112438/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/112438/timeline", "performed_via_github_app": null, "state_reason": "completed"}