{"url": "https://api.github.com/repos/rust-lang/rust/issues/107335", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/107335/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/107335/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/107335/events", "html_url": "https://github.com/rust-lang/rust/issues/107335", "id": 1558621111, "node_id": "I_kwDOAAsO6M5c5qu3", "number": 107335, "title": "Suggested bounds restriction suggests duplicate trait", "user": {"login": "edward-shen", "id": 6173958, "node_id": "MDQ6VXNlcjYxNzM5NTg=", "avatar_url": "https://avatars.githubusercontent.com/u/6173958?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edward-shen", "html_url": "https://github.com/edward-shen", "followers_url": "https://api.github.com/users/edward-shen/followers", "following_url": "https://api.github.com/users/edward-shen/following{/other_user}", "gists_url": "https://api.github.com/users/edward-shen/gists{/gist_id}", "starred_url": "https://api.github.com/users/edward-shen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edward-shen/subscriptions", "organizations_url": "https://api.github.com/users/edward-shen/orgs", "repos_url": "https://api.github.com/users/edward-shen/repos", "events_url": "https://api.github.com/users/edward-shen/events{/privacy}", "received_events_url": "https://api.github.com/users/edward-shen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": {"login": "edward-shen", "id": 6173958, "node_id": "MDQ6VXNlcjYxNzM5NTg=", "avatar_url": "https://avatars.githubusercontent.com/u/6173958?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edward-shen", "html_url": "https://github.com/edward-shen", "followers_url": "https://api.github.com/users/edward-shen/followers", "following_url": "https://api.github.com/users/edward-shen/following{/other_user}", "gists_url": "https://api.github.com/users/edward-shen/gists{/gist_id}", "starred_url": "https://api.github.com/users/edward-shen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edward-shen/subscriptions", "organizations_url": "https://api.github.com/users/edward-shen/orgs", "repos_url": "https://api.github.com/users/edward-shen/repos", "events_url": "https://api.github.com/users/edward-shen/events{/privacy}", "received_events_url": "https://api.github.com/users/edward-shen/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "edward-shen", "id": 6173958, "node_id": "MDQ6VXNlcjYxNzM5NTg=", "avatar_url": "https://avatars.githubusercontent.com/u/6173958?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edward-shen", "html_url": "https://github.com/edward-shen", "followers_url": "https://api.github.com/users/edward-shen/followers", "following_url": "https://api.github.com/users/edward-shen/following{/other_user}", "gists_url": "https://api.github.com/users/edward-shen/gists{/gist_id}", "starred_url": "https://api.github.com/users/edward-shen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edward-shen/subscriptions", "organizations_url": "https://api.github.com/users/edward-shen/orgs", "repos_url": "https://api.github.com/users/edward-shen/repos", "events_url": "https://api.github.com/users/edward-shen/events{/privacy}", "received_events_url": "https://api.github.com/users/edward-shen/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2023-01-26T19:00:42Z", "updated_at": "2023-02-07T20:58:17Z", "closed_at": "2023-02-07T20:58:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Code\n\n```Rust\npub trait TryAdd<Rhs = Self> {\n    type Error;\n    type Output;\n\n    fn try_add(self, rhs: Rhs) -> Result<Self::Output, Self::Error>;\n}\n\nimpl<T: TryAdd> TryAdd for Option<T> {\n    type Error = <T as TryAdd>::Error;\n    type Output = Option<<T as TryAdd>::Output>;\n\n    fn try_add(self, rhs: Self) -> Result<Self::Output, Self::Error> {\n        Ok(self.or(rhs))\n    }\n}\n```\n\n\n### Current output\n\n```Shell\nerror[E0308]: mismatched types\n  --> src/lib.rs:14:12\n   |\n9  | impl<T: TryAdd> TryAdd for Option<T> {\n   |      - this type parameter\n...\n14 |         Ok(self.or(rhs))\n   |         -- ^^^^^^^^^^^^ expected associated type, found type parameter `T`\n   |         |\n   |         arguments to this enum variant are incorrect\n   |\n   = note: expected enum `Option<<T as TryAdd>::Output>`\n              found enum `Option<T>`\nhelp: the type constructed contains `Option<T>` due to the type of the argument passed\n  --> src/lib.rs:14:9\n   |\n14 |         Ok(self.or(rhs))\n   |         ^^^------------^\n   |            |\n   |            this argument influences the type of `Ok`\nnote: tuple variant defined here\n  --> /rustc/c18a5e8a5b1afb0d7a582fe9ebad4c1996c90da3/library/core/src/result.rs:507:5\nhelp: consider further restricting this bound\n   |\n9  | impl<T: TryAdd + TryAdd<Output = T>> TryAdd for Option<T> {\n   |                ++++++++++++++++++++\n\nFor more information about this error, try `rustc --explain E0308`.\nerror: could not compile `playground` due to previous error\n```\n\n\n### Desired output\n\n```Shell\nerror[E0308]: mismatched types\n  --> src/lib.rs:14:12\n   |\n9  | impl<T: TryAdd> TryAdd for Option<T> {\n   |      - this type parameter\n...\n14 |         Ok(self.or(rhs))\n   |         -- ^^^^^^^^^^^^ expected associated type, found type parameter `T`\n   |         |\n   |         arguments to this enum variant are incorrect\n   |\n   = note: expected enum `Option<<T as TryAdd>::Output>`\n              found enum `Option<T>`\nhelp: the type constructed contains `Option<T>` due to the type of the argument passed\n  --> src/lib.rs:14:9\n   |\n14 |         Ok(self.or(rhs))\n   |         ^^^------------^\n   |            |\n   |            this argument influences the type of `Ok`\nnote: tuple variant defined here\n  --> /rustc/c18a5e8a5b1afb0d7a582fe9ebad4c1996c90da3/library/core/src/result.rs:507:5\nhelp: consider further restricting this bound\n   |\n9  | impl<T: TryAdd<Output = T>> TryAdd for Option<T> {\n   |         ++++++++++++++++++\n\nFor more information about this error, try `rustc --explain E0308`.\nerror: could not compile `playground` due to previous error\n```\n\n\n### Rationale and extra context\n\nWhile the diagnostic produces valid code, I think this diagnostic could be improved. I don't think there's ever a valid scenario where a human would write `MyTrait + MyTrait<Output = T>` over `MyTrait<Output = T>`.\n\n\n### Other cases\n\n_No response_\n\n### Anything else?\n\nReproduces on [playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021&gist=10ecd4fc67c7e39d15ac8b8586f4996c).\n\nTested on stable 1.66.1 and nightly 1.69.0-nightly (2023-01-25 c18a5e8a5b1afb0d7a58)\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"edward-shen\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/107335/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/107335/timeline", "performed_via_github_app": null, "state_reason": "completed"}