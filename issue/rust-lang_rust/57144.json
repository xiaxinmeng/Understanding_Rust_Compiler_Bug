{"url": "https://api.github.com/repos/rust-lang/rust/issues/57144", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/57144/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/57144/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/57144/events", "html_url": "https://github.com/rust-lang/rust/issues/57144", "id": 394375627, "node_id": "MDU6SXNzdWUzOTQzNzU2Mjc=", "number": 57144, "title": "Confusing error message for size_of", "user": {"login": "valff", "id": 12503689, "node_id": "MDQ6VXNlcjEyNTAzNjg5", "avatar_url": "https://avatars.githubusercontent.com/u/12503689?v=4", "gravatar_id": "", "url": "https://api.github.com/users/valff", "html_url": "https://github.com/valff", "followers_url": "https://api.github.com/users/valff/followers", "following_url": "https://api.github.com/users/valff/following{/other_user}", "gists_url": "https://api.github.com/users/valff/gists{/gist_id}", "starred_url": "https://api.github.com/users/valff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/valff/subscriptions", "organizations_url": "https://api.github.com/users/valff/orgs", "repos_url": "https://api.github.com/users/valff/repos", "events_url": "https://api.github.com/users/valff/events{/privacy}", "received_events_url": "https://api.github.com/users/valff/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1596121013, "node_id": "MDU6TGFiZWwxNTk2MTIxMDEz", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-confusing", "name": "D-confusing", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error that should be reworked"}, {"id": 1839565265, "node_id": "MDU6TGFiZWwxODM5NTY1MjY1", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-terse", "name": "D-terse", "color": "c9f7a3", "default": false, "description": "A diagnostic that doesn't give enough information about the problem at hand"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-12-27T11:54:44Z", "updated_at": "2022-10-19T19:13:12Z", "closed_at": "2022-10-19T19:13:12Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm trying to implement `const` version of `mem::zeroed` function. The error message suggests to add a bound that is already there.\r\n\r\n```rust\r\n#![feature(const_fn_union)]\r\n#![feature(untagged_unions)]\r\n\r\npub const unsafe fn zeroed<T: Sized>() -> T {\r\n  use core::mem::size_of;\r\n  #[allow(unions_with_drop_fields)]\r\n  union U<T: Sized> {\r\n    bytes: [u8; size_of::<T>()],\r\n    value: T,\r\n  }\r\n  U {\r\n    bytes: [0; size_of::<T>()],\r\n  }\r\n  .value\r\n}\r\n```\r\n\r\n([Playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=cefcc4ea445ac7f9c69f3cc691d23fee))\r\n\r\nErrors:\r\n\r\n```\r\n   Compiling playground v0.0.1 (/playground)\r\nerror[E0277]: the size for values of type `T` cannot be known at compilation time\r\n --> src/lib.rs:8:17\r\n  |\r\n8 |     bytes: [u8; size_of::<T>()],\r\n  |                 ^^^^^^^^^^^^ doesn't have a size known at compile-time\r\n  |\r\n  = help: the trait `std::marker::Sized` is not implemented for `T`\r\n  = note: to learn more, visit <https://doc.rust-lang.org/book/second-edition/ch19-04-advanced-types.html#dynamically-sized-types-and-the-sized-trait>\r\n  = help: consider adding a `where T: std::marker::Sized` bound\r\n  = note: required by `std::mem::size_of`\r\n\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0277`.\r\nerror: Could not compile `playground`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n\r\n```\r\n\r\nWhy this doesn't work? Are there any other methods to construct a zero-initialized `static`?", "closed_by": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/57144/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/57144/timeline", "performed_via_github_app": null, "state_reason": "completed"}