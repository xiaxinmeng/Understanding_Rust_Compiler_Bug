{"url": "https://api.github.com/repos/rust-lang/rust/issues/77848", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/77848/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/77848/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/77848/events", "html_url": "https://github.com/rust-lang/rust/issues/77848", "id": 719333547, "node_id": "MDU6SXNzdWU3MTkzMzM1NDc=", "number": 77848, "title": "SIGSEGV (invalid address) from LLVM in rustc with asm and #[naked] fn", "user": {"login": "Restioson", "id": 6688948, "node_id": "MDQ6VXNlcjY2ODg5NDg=", "avatar_url": "https://avatars.githubusercontent.com/u/6688948?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Restioson", "html_url": "https://github.com/Restioson", "followers_url": "https://api.github.com/users/Restioson/followers", "following_url": "https://api.github.com/users/Restioson/following{/other_user}", "gists_url": "https://api.github.com/users/Restioson/gists{/gist_id}", "starred_url": "https://api.github.com/users/Restioson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Restioson/subscriptions", "organizations_url": "https://api.github.com/users/Restioson/orgs", "repos_url": "https://api.github.com/users/Restioson/repos", "events_url": "https://api.github.com/users/Restioson/events{/privacy}", "received_events_url": "https://api.github.com/users/Restioson/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 100522, "node_id": "MDU6TGFiZWwxMDA1MjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-crash", "name": "I-crash", "color": "e10c02", "default": false, "description": "Issue: The compiler crashes (SIGSEGV, SIGABRT, etc). Use I-ICE instead when the compiler panics."}, {"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 91598611, "node_id": "MDU6TGFiZWw5MTU5ODYxMQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-inline-assembly", "name": "A-inline-assembly", "color": "f7e101", "default": false, "description": "Area: inline asm!(..)"}, {"id": 386798469, "node_id": "MDU6TGFiZWwzODY3OTg0Njk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-naked", "name": "A-naked", "color": "f7e101", "default": false, "description": "Area: #[naked], prologue and epilogue-free, functions, https://git.io/vAzzS"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-10-12T12:17:02Z", "updated_at": "2020-11-25T23:42:36Z", "closed_at": "2020-11-25T23:42:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "After making some modifications to a [relatively complex project](https://github.com/Restioson/wolffia), I received a SIGSEGV from rustc:\r\n\r\n```\r\n* thread #6, name = 'rustc', stop reason = signal SIGSEGV: invalid address (fault address: 0xe10134000)\r\n  * frame #0: 0x00007ffff29dc8ca libLLVM-11-rust-1.49.0-nightly.so`llvm::X86TargetLowering::isZExtFree(llvm::SDValue, llvm::EVT) const + 10\r\n...\r\n    frame #12: 0x00007ffff418c140 librustc_driver-9deb636e5c5c0be1.so`LLVMRustWriteOutputFile + 528\r\n```\r\n\r\n[Full backtrace from LLDB.](https://gist.github.com/Restioson/183be04da4fa828d92492cdf168737fa)\r\n\r\nThis originates in the compilation of the crate itself rather than any of its dependencies.\r\n\r\nThe crate is using quite a few unstable features in its [.cargo/config](https://github.com/Restioson/wolffia/blob/master/kernel/.cargo/config), a [custom target json](https://github.com/Restioson/wolffia/blob/master/kernel/x86_64-unknown-wolffiakernel-none.json), and the following unstable features: `asm, lang_items, allocator_api, alloc_error_handler, panic_info_message, abi_x86_interrupt, naked_functions`. **However,** it appears that the culprit is a particularly complex `asm` block, as commenting it out makes it compile successfully:\r\n\r\n```rust\r\nasm!(\r\n    \"\r\n    mov ax, 0x33\r\n    mov ds, ax\r\n    mov es, ax\r\n    mov fs, ax\r\n    mov gs, ax\r\n    mov rsp, {0}\r\n\r\n    mov rax, rsp\r\n    push 0x33\r\n    push rax\r\n    pushfq\r\n\r\n    push 0x2b\r\n    mov rax, {1}\r\n    push rax\r\n    iretq,\r\n    \",\r\n    in(reg) stack_ptr,\r\n    in(reg) instruction_ptr,\r\n    lateout(\"rax\") _\r\n);\r\n```\r\n\r\nThis occurs inside of a `#[naked]` function [here](https://github.com/Restioson/wolffia/blob/48262b965e83d7263c4200c9e6de4d05958c0d12/kernel/src/userspace/jump.rs). Removing `#[naked]` causes the segfault to go away.\r\n\r\nI have no idea whether this asm block is actually correct, both in terms of macro invocation and assembly, but either way I would not expect a segfault.\r\n\r\n### Meta\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.49.0-nightly (c71248b70 2020-10-11)\r\nbinary: rustc\r\ncommit-hash: c71248b70870960af9993de4f31d3cba9bbce7e8\r\ncommit-date: 2020-10-11\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.49.0-nightly\r\nLLVM version: 11.0\r\n```\r\n\r\n<details><summary>Backtrace</summary>\r\n<p>\r\n\r\n```\r\n* thread #6, name = 'rustc', stop reason = signal SIGSEGV: invalid address (fault address: 0xe10134000)\r\n  * frame #0: 0x00007ffff29dc8ca libLLVM-11-rust-1.49.0-nightly.so`llvm::X86TargetLowering::isZExtFree(llvm::SDValue, llvm::EVT) const + 10\r\n    frame #1: 0x00007ffff0b56ff7 libLLVM-11-rust-1.49.0-nightly.so`llvm::RegsForValue::getCopyToRegs(llvm::SDValue, llvm::SelectionDAG&, llvm::SDLoc const&, llvm::SDValue&, llvm::SDValue*, llvm::Value const*, llvm::ISD::NodeType) const + 503\r\n    frame #2: 0x00007ffff0b7d50d libLLVM-11-rust-1.49.0-nightly.so`llvm::SelectionDAGBuilder::visitInlineAsm(llvm::CallBase const&) + 15101\r\n    frame #3: 0x00007ffff0b5a547 libLLVM-11-rust-1.49.0-nightly.so`llvm::SelectionDAGBuilder::visit(llvm::Instruction const&) + 103\r\n    frame #4: 0x00007ffff0c1a1de libLLVM-11-rust-1.49.0-nightly.so`llvm::SelectionDAGISel::SelectBasicBlock(llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, false, false, void>, false, true>, llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, false, false, void>, false, true>, bool&) + 302\r\n    frame #5: 0x00007ffff0c19473 libLLVM-11-rust-1.49.0-nightly.so`llvm::SelectionDAGISel::SelectAllBasicBlocks(llvm::Function const&) + 7651\r\n    frame #6: 0x00007ffff0c16606 libLLVM-11-rust-1.49.0-nightly.so`llvm::SelectionDAGISel::runOnMachineFunction(llvm::MachineFunction&) + 3030\r\n    frame #7: 0x00007ffff29353e7 libLLVM-11-rust-1.49.0-nightly.so`(anonymous namespace)::X86DAGToDAGISel::runOnMachineFunction(llvm::MachineFunction&) + 151\r\n    frame #8: 0x00007ffff077f44e libLLVM-11-rust-1.49.0-nightly.so`llvm::MachineFunctionPass::runOnFunction(llvm::Function&) + 270\r\n    frame #9: 0x00007ffff0559c92 libLLVM-11-rust-1.49.0-nightly.so`llvm::FPPassManager::runOnFunction(llvm::Function&) + 1618\r\n    frame #10: 0x00007ffff05606a3 libLLVM-11-rust-1.49.0-nightly.so`llvm::FPPassManager::runOnModule(llvm::Module&) + 51\r\n    frame #11: 0x00007ffff055a6ea libLLVM-11-rust-1.49.0-nightly.so`llvm::legacy::PassManagerImpl::run(llvm::Module&) + 1706\r\n    frame #12: 0x00007ffff418c140 librustc_driver-9deb636e5c5c0be1.so`LLVMRustWriteOutputFile + 528\r\n    frame #13: 0x00007ffff40abbdc librustc_driver-9deb636e5c5c0be1.so`rustc_codegen_llvm::back::write::write_output_file::h46d5fc2269ff2c68 + 92\r\n    frame #14: 0x00007ffff40b095c librustc_driver-9deb636e5c5c0be1.so`rustc_codegen_llvm::back::write::codegen::hcd9421f191029966 + 4876\r\n    frame #15: 0x00007ffff40dc52b librustc_driver-9deb636e5c5c0be1.so`rustc_codegen_ssa::back::write::finish_intra_module_work::h867579b3376f579c + 219\r\n    frame #16: 0x00007ffff40d69ce librustc_driver-9deb636e5c5c0be1.so`rustc_codegen_ssa::back::write::execute_work_item::h7ad959003256922b + 3118\r\n    frame #17: 0x00007ffff3fabd4f librustc_driver-9deb636e5c5c0be1.so`std::sys_common::backtrace::__rust_begin_short_backtrace::hba6542b44391edb1 + 207\r\n    frame #18: 0x00007ffff40489d5 librustc_driver-9deb636e5c5c0be1.so`core::ops::function::FnOnce::call_once$u7b$$u7b$vtable.shim$u7d$$u7d$::h7493f76d5c01ce84 + 101\r\n    frame #19: 0x00007ffff33df86a libstd-6e0e72ef3f331f94.so`std::sys::unix::thread::Thread::new::thread_start::hb4b79d379b730058 [inlined] _$LT$alloc..boxed..Box$LT$F$GT$$u20$as$u20$core..ops..function..FnOnce$LT$A$GT$$GT$::call_once::h588ce842808b3fd0 at boxed.rs:1042:9\r\n    frame #20: 0x00007ffff33df864 libstd-6e0e72ef3f331f94.so`std::sys::unix::thread::Thread::new::thread_start::hb4b79d379b730058 [inlined] _$LT$alloc..boxed..Box$LT$F$GT$$u20$as$u20$core..ops..function..FnOnce$LT$A$GT$$GT$::call_once::h46bc655f05471a92 at boxed.rs:1042\r\n    frame #21: 0x00007ffff33df85b libstd-6e0e72ef3f331f94.so`std::sys::unix::thread::Thread::new::thread_start::hb4b79d379b730058 at thread.rs:87\r\n    frame #22: 0x00007ffff32f8609 libpthread.so.0`start_thread(arg=<unavailable>) at pthread_create.c:477:8\r\n    frame #23: 0x00007ffff320c293 libc.so.6`__clone + 67\r\n```\r\n\r\n</p>\r\n</details>\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/77848/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/77848/timeline", "performed_via_github_app": null, "state_reason": "completed"}