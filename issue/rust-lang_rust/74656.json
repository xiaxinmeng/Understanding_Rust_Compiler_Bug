{"url": "https://api.github.com/repos/rust-lang/rust/issues/74656", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/74656/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/74656/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/74656/events", "html_url": "https://github.com/rust-lang/rust/issues/74656", "id": 664057737, "node_id": "MDU6SXNzdWU2NjQwNTc3Mzc=", "number": 74656, "title": "Confusing error messages when using wrong trait in fully qualified syntax (`<T as Trait>::Assoc`)", "user": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1596121013, "node_id": "MDU6TGFiZWwxNTk2MTIxMDEz", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-confusing", "name": "D-confusing", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error that should be reworked"}, {"id": 1659943986, "node_id": "MDU6TGFiZWwxNjU5OTQzOTg2", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-verbose", "name": "D-verbose", "color": "c9f7a3", "default": false, "description": "Too much output caused by a single piece of incorrect code"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-22T21:20:59Z", "updated_at": "2020-10-26T11:30:04Z", "closed_at": "2020-10-26T11:29:55Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "When, by mistake, you use wrong `Trait` in `type Assoc = <T as Trait>::Assoc;` the errors you get are confusing.\r\n\r\nThis example:\r\n\r\n```rust\r\ntrait Op {\r\n    type Output;\r\n}\r\n\r\ntrait Op2 {\r\n    type Output;\r\n}\r\n\r\nstruct Wrap<T>(T);\r\n\r\nimpl<T: Op> Op for Wrap<T> {\r\n    type Output = <T as Op2>::Output;\r\n    //                  ^^^ -- typo\r\n}\r\n```\r\n([playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=2f57856abc296d89f9321cc7380d377f))\r\nGives this error:\r\n```\r\nerror[E0277]: the trait bound `T: Op2` is not satisfied\r\n  --> src/lib.rs:23:13\r\n   |\r\n23 | impl<T: Op> Op for Wrap<T> {\r\n   |             ^^ the trait `Op2` is not implemented for `T`\r\n   |\r\nhelp: consider further restricting this bound\r\n   |\r\n23 | impl<T: Op + Op2> Op for Wrap<T> {\r\n   |            ^^^^^\r\n\r\nerror[E0277]: the trait bound `T: Op2` is not satisfied\r\n  --> src/lib.rs:24:5\r\n   |\r\n24 |     type Output = <T as Op2>::Output;\r\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Op2` is not implemented for `T`\r\n   |\r\nhelp: consider further restricting this bound\r\n   |\r\n23 | impl<T: Op + Op2> Op for Wrap<T> {\r\n   |            ^^^^^\r\n\r\nerror[E0277]: the trait bound `T: Op2` is not satisfied\r\n  --> src/lib.rs:27:5\r\n   |\r\n27 | /     fn op(self) -> Self::Output {\r\n28 | |         self.0.op()\r\n29 | |     }\r\n   | |_____^ the trait `Op2` is not implemented for `T`\r\n   |\r\nhelp: consider further restricting this bound\r\n   |\r\n23 | impl<T: Op + Op2> Op for Wrap<T> {\r\n   |            ^^^^^\r\n```\r\n\r\nThere are 2 problems with it:\r\n1. the error is repeated 3 times\r\n2. the 1-st and 3-rd errors don't point to the place of the requirement\r\n\r\nAlso, if we add a blanket implementation of `Op2` with bound, the error gets even worse:\r\n```rust\r\nimpl<T: core::fmt::Display> Op2 for T{\r\n    type Output = String;\r\n}\r\n```\r\n([playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=d35008097a7b1c2e59556b856e390b64))\r\n```\r\nerror[E0277]: `T` doesn't implement `std::fmt::Display`\r\n  --> src/lib.rs:23:13\r\n   |\r\n23 | impl<T: Op> Op for Wrap<T> {\r\n   |             ^^ `T` cannot be formatted with the default formatter\r\n   |\r\n   = help: the trait `std::fmt::Display` is not implemented for `T`\r\n   = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead\r\n   = note: required because of the requirements on the impl of `Op2` for `T`\r\nhelp: consider further restricting this bound\r\n   |\r\n23 | impl<T: Op + std::fmt::Display> Op for Wrap<T> {\r\n   |            ^^^^^^^^^^^^^^^^^^^\r\n\r\nerror[E0277]: `T` doesn't implement `std::fmt::Display`\r\n  --> src/lib.rs:24:5\r\n   |\r\n24 |     type Output = <T as Op2>::Output;\r\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `T` cannot be formatted with the default formatter\r\n   |\r\n   = help: the trait `std::fmt::Display` is not implemented for `T`\r\n   = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead\r\n   = note: required because of the requirements on the impl of `Op2` for `T`\r\nhelp: consider further restricting this bound\r\n   |\r\n23 | impl<T: Op + std::fmt::Display> Op for Wrap<T> {\r\n   |            ^^^^^^^^^^^^^^^^^^^\r\n\r\nerror[E0277]: `T` doesn't implement `std::fmt::Display`\r\n  --> src/lib.rs:27:5\r\n   |\r\n27 | /     fn op(self) -> Self::Output {\r\n28 | |         self.0.op()\r\n29 | |     }\r\n   | |_____^ `T` cannot be formatted with the default formatter\r\n   |\r\n   = help: the trait `std::fmt::Display` is not implemented for `T`\r\n   = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead\r\n   = note: required because of the requirements on the impl of `Op2` for `T`\r\nhelp: consider further restricting this bound\r\n   |\r\n23 | impl<T: Op + std::fmt::Display> Op for Wrap<T> {\r\n   |            ^^^^^^^^^^^^^^^^^^^\r\n```\r\nThe new problem is that this always suggests `+ std::fmt::Display` ignoring the fact that non `Display` types can implement the trait too", "closed_by": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/74656/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/74656/timeline", "performed_via_github_app": null, "state_reason": "completed"}