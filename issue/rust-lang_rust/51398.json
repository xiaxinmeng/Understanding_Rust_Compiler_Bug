{"url": "https://api.github.com/repos/rust-lang/rust/issues/51398", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/51398/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/51398/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/51398/events", "html_url": "https://github.com/rust-lang/rust/issues/51398", "id": 329929828, "node_id": "MDU6SXNzdWUzMjk5Mjk4Mjg=", "number": 51398, "title": "Custom (synonym) suggestions for nonexistent methods", "user": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-06-06T15:53:37Z", "updated_at": "2020-09-28T22:09:24Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Currently if the user types a method that does not exist, a suggestion may be provided if what was typed is reasonably close to an existing method.\r\n```rust\r\nlet set = ::std::collections::HashSet::new();\r\nset.insrt(0u8); // = help: did you mean `insert`?\r\n```\r\nHowever, this only catches typos \u2014\u00a0completely different names aren't considered \"close\". I think it'd be helpful, especially for people coming from other languages (or switching between them frequently) to be able to specify custom suggestions for potential alternate names, so that something like the following works:\r\n```rust\r\nlet set = ::std::collections::HashSet::new();\r\nset.add(0u8); // = help: did you mean `insert`?\r\nset.push(0u8); // = help: did you mean `insert`?\r\n// etc.\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/51398/reactions", "total_count": 3, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 3, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/51398/timeline", "performed_via_github_app": null, "state_reason": null}