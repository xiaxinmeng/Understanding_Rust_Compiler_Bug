{"url": "https://api.github.com/repos/rust-lang/rust/issues/65108", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/65108/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/65108/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/65108/events", "html_url": "https://github.com/rust-lang/rust/issues/65108", "id": 502759381, "node_id": "MDU6SXNzdWU1MDI3NTkzODE=", "number": 65108, "title": "ptr::offset should explicitly clarify 0-sized offset semantics", "user": {"login": "Gankra", "id": 1136864, "node_id": "MDQ6VXNlcjExMzY4NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1136864?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gankra", "html_url": "https://github.com/Gankra", "followers_url": "https://api.github.com/users/Gankra/followers", "following_url": "https://api.github.com/users/Gankra/following{/other_user}", "gists_url": "https://api.github.com/users/Gankra/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gankra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gankra/subscriptions", "organizations_url": "https://api.github.com/users/Gankra/orgs", "repos_url": "https://api.github.com/users/Gankra/repos", "events_url": "https://api.github.com/users/Gankra/events{/privacy}", "received_events_url": "https://api.github.com/users/Gankra/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 431251592, "node_id": "MDU6TGFiZWw0MzEyNTE1OTI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-docs", "name": "A-docs", "color": "f7e101", "default": false, "description": "Area: documentation for any part of the project, including the compiler, standard library, and tools"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-10-04T17:36:32Z", "updated_at": "2019-10-09T16:21:59Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "https://doc.rust-lang.org/std/primitive.pointer.html#method.offset\r\n\r\nI can't remember the past arguments we definitely had about this, but it would be nice to explicitly call out the answer in the docs.\r\n\r\nAs a relevant example, Vec::into_iter currently unconditionally computes the \"end\" pointer of the array by offsetting by `len` (as long as size_of T > 0). This means that we offset a dangling pointer by 0 when iterating an empty Vec. This is obviously useful to support and annoying to have to guard against, so I would hope that's well-defined.\r\n\r\nhttps://doc.rust-lang.org/src/alloc/vec.rs.html#1860\r\n\r\n```rust\r\nfn into_iter(mut self) -> IntoIter<T> {\r\n        unsafe {\r\n            let begin = self.as_mut_ptr();\r\n            let end = if mem::size_of::<T>() == 0 {\r\n                arith_offset(begin as *const i8, self.len() as isize) as *const T\r\n            } else {\r\n                // SAFE when `begin` dangles and `len == 0`???\r\n                begin.add(self.len()) as *const T\r\n            };\r\n            let cap = self.buf.capacity();\r\n            mem::forget(self);\r\n            IntoIter {\r\n                buf: NonNull::new_unchecked(begin),\r\n                phantom: PhantomData,\r\n                cap,\r\n                ptr: begin,\r\n                end,\r\n            }\r\n        }\r\n    }\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/65108/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/65108/timeline", "performed_via_github_app": null, "state_reason": null}