{"url": "https://api.github.com/repos/rust-lang/rust/issues/77662", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/77662/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/77662/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/77662/events", "html_url": "https://github.com/rust-lang/rust/issues/77662", "id": 716757283, "node_id": "MDU6SXNzdWU3MTY3NTcyODM=", "number": 77662, "title": "Should all the AST node types with attributes be using AttrVec?", "user": {"login": "Ryan1729", "id": 2133026, "node_id": "MDQ6VXNlcjIxMzMwMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2133026?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ryan1729", "html_url": "https://github.com/Ryan1729", "followers_url": "https://api.github.com/users/Ryan1729/followers", "following_url": "https://api.github.com/users/Ryan1729/following{/other_user}", "gists_url": "https://api.github.com/users/Ryan1729/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ryan1729/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ryan1729/subscriptions", "organizations_url": "https://api.github.com/users/Ryan1729/orgs", "repos_url": "https://api.github.com/users/Ryan1729/repos", "events_url": "https://api.github.com/users/Ryan1729/events{/privacy}", "received_events_url": "https://api.github.com/users/Ryan1729/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37234, "node_id": "MDU6TGFiZWwzNzIzNA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-cleanup", "name": "C-cleanup", "color": "f5f1fd", "default": false, "description": "Category: PRs that clean code up or issues documenting cleanup."}, {"id": 234948, "node_id": "MDU6TGFiZWwyMzQ5NDg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-attributes", "name": "A-attributes", "color": "f7e101", "default": false, "description": "Area: #[attributes(..)]"}, {"id": 27424086, "node_id": "MDU6TGFiZWwyNzQyNDA4Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-parser", "name": "A-parser", "color": "f7e101", "default": false, "description": "Area: The parsing of Rust source code to an AST."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-10-07T18:27:34Z", "updated_at": "2021-06-18T04:18:18Z", "closed_at": "2021-06-18T04:18:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I've been working on [a PR to clippy](https://github.com/rust-lang/rust-clippy/pull/6100) that involved looking at the different AST node types in [`rustc_ast::ast`](https://doc.rust-lang.org/nightly/nightly-rustc/rustc_ast/ast/index.html). I noticed that while most of the subset of those types that can contain attributes use [`AttrVec`](https://doc.rust-lang.org/nightly/nightly-rustc/rustc_ast/ast/type.AttrVec.html), (an alias of a [`ThinVec`](https://doc.rust-lang.org/nightly/nightly-rustc/rustc_data_structures/thin_vec/struct.ThinVec.html) of [`Attribute`s](https://doc.rust-lang.org/nightly/nightly-rustc/rustc_ast/ast/struct.Attribute.html)) some node types use a plain `Vec<Attribute>`. \r\n\r\nIn particular, as of this writing, [`Variant`](https://doc.rust-lang.org/nightly/nightly-rustc/rustc_ast/ast/struct.Variant.html#structfield.attrs[), [`StructField`](https://doc.rust-lang.org/nightly/nightly-rustc/rustc_ast/ast/struct.StructField.html#structfield.attrs), [`Item`](https://doc.rust-lang.org/nightly/nightly-rustc/rustc_ast/ast/struct.Item.html#structfield.attrs), [`Crate`](https://doc.rust-lang.org/nightly/nightly-rustc/rustc_ast/ast/struct.Crate.html#structfield.attrs), and [`Arm`](https://doc.rust-lang.org/nightly/nightly-rustc/rustc_ast/ast/struct.Arm.html#structfield.attrs) all use `Vec<Attribute>`. (I found these via [a search in `rustc_ast` for \"attr\"](https://doc.rust-lang.org/nightly/nightly-rustc/rustc_ast/ast/index.html?search=attr) and checking each field in the results, so hopefully that list is complete.)\r\n\r\n`ThinVec`'s documentation says:\r\n> A vector type optimized for cases where this size is usually 0 (cf. SmallVector). The Option<Box<..>> wrapping allows us to represent a zero sized vector with None, which uses only a single (null) pointer. \r\n\r\n\r\nI would suspect that for most of the types that use a plain `Vec<Attribute>` the `Vec` is empty almost all of the time, with the possible exception of `Item`s, since `#[derive(Debug)]` etc. is pretty common.\r\n\r\nSo should more of the types that use a plain `Vec<Attribute>` be using an `AttrVec` instead? Are these fields plain `Vec`s just because no one changed them, or was it somehow determined that those types aren't copied enough for this optimization to matter?\r\n\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/77662/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/77662/timeline", "performed_via_github_app": null, "state_reason": "completed"}