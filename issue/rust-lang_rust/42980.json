{"url": "https://api.github.com/repos/rust-lang/rust/issues/42980", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/42980/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/42980/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/42980/events", "html_url": "https://github.com/rust-lang/rust/issues/42980", "id": 239745418, "node_id": "MDU6SXNzdWUyMzk3NDU0MTg=", "number": 42980, "title": "inefficient abstraction for max and min iterators", "user": {"login": "jaupe", "id": 29653764, "node_id": "MDQ6VXNlcjI5NjUzNzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29653764?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaupe", "html_url": "https://github.com/jaupe", "followers_url": "https://api.github.com/users/jaupe/followers", "following_url": "https://api.github.com/users/jaupe/following{/other_user}", "gists_url": "https://api.github.com/users/jaupe/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaupe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaupe/subscriptions", "organizations_url": "https://api.github.com/users/jaupe/orgs", "repos_url": "https://api.github.com/users/jaupe/repos", "events_url": "https://api.github.com/users/jaupe/events{/privacy}", "received_events_url": "https://api.github.com/users/jaupe/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-06-30T10:53:00Z", "updated_at": "2018-08-01T13:02:03Z", "closed_at": "2018-08-01T13:02:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have been benchmarking aggregations in Rust and empirically discovered that the max and min iterators appear to be inefficient abstractions. I noticed that they are roughly double the time compared to a hand-written for loop\r\n\r\n```\r\n#[inline]\r\nfn vec_max<T: Ord + Copy>(v: &[T]) -> Option<T> {\r\n    if v.is_empty() {\r\n        return None;\r\n    }\r\n    let mut max_val = v[0];\r\n    if v.len() == 1 {\r\n        return Some(max_val);\r\n    }\r\n    for val in &v[1..] {\r\n        if *val > max_val {\r\n            max_val = *val;\r\n        }\r\n    }\r\n    Some(max_val)\r\n}\r\n\r\ntest engine::tests::bench_vec_iter_max     ... bench:  36,254,272 ns/iter (+/- 3,841,473)\r\ntest engine::tests::bench_vec_max          ... bench:  12,162,150 ns/iter (+/- 2,757,891)\r\n```\r\n\r\nIt looks like this abstraction is not efficient:\r\n\r\n```\r\n    // start with the first element as our selection. This avoids\r\n    // having to use `Option`s inside the loop, translating to a\r\n    // sizeable performance gain (6x in one case).\r\n    it.next().map(|mut sel| {\r\n        let mut sel_p = f_proj(&sel);\r\n\r\n        for x in it {\r\n            let x_p = f_proj(&x);\r\n            if f_cmp(&sel_p, &sel, &x_p, &x) {\r\n                sel = x;\r\n                sel_p = x_p;\r\n            }\r\n        }\r\n        (sel_p, sel)\r\n    })\r\n```\r\n\r\nI will have a look into what's being produced and see if it can be made equivalent to a hand-written for loop. ", "closed_by": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/42980/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/42980/timeline", "performed_via_github_app": null, "state_reason": "completed"}