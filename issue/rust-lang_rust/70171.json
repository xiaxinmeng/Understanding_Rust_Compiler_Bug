{"url": "https://api.github.com/repos/rust-lang/rust/issues/70171", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/70171/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/70171/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/70171/events", "html_url": "https://github.com/rust-lang/rust/issues/70171", "id": 584776348, "node_id": "MDU6SXNzdWU1ODQ3NzYzNDg=", "number": 70171, "title": "Misleading error message when trying to implement From?", "user": {"login": "cr1901", "id": 6418027, "node_id": "MDQ6VXNlcjY0MTgwMjc=", "avatar_url": "https://avatars.githubusercontent.com/u/6418027?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cr1901", "html_url": "https://github.com/cr1901", "followers_url": "https://api.github.com/users/cr1901/followers", "following_url": "https://api.github.com/users/cr1901/following{/other_user}", "gists_url": "https://api.github.com/users/cr1901/gists{/gist_id}", "starred_url": "https://api.github.com/users/cr1901/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cr1901/subscriptions", "organizations_url": "https://api.github.com/users/cr1901/orgs", "repos_url": "https://api.github.com/users/cr1901/repos", "events_url": "https://api.github.com/users/cr1901/events{/privacy}", "received_events_url": "https://api.github.com/users/cr1901/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1596299768, "node_id": "MDU6TGFiZWwxNTk2Mjk5NzY4", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-invalid-suggestion", "name": "D-invalid-suggestion", "color": "c9f7a3", "default": false, "description": "A structured suggestion resulting in incorrect code"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-20T00:31:30Z", "updated_at": "2020-08-19T17:23:41Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Consider the following program, which deliberately fails to compile because it is missing a `U: Copy` bound on `do_stuff`:\r\n\r\n```rust\r\nstruct Foo;\r\n\r\nimpl<U, T> From<Result<U, T>> for Foo \r\nwhere U: Copy + Into<u8>,\r\n{\r\n    fn from(r: Result<U, T>) -> Self {\r\n        unimplemented!()\r\n    }\r\n}\r\n\r\nfn do_stuff<U, T>(res: Result<U, T>) -> Foo \r\nwhere U: Into<u8>\r\n{\r\n    Foo::from(res)\r\n}\r\n```\r\n\r\n([Playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=2b0d436407634a50ca4abaa0009f5855))\r\n\r\nErrors:\r\n\r\n```\r\n   Compiling playground v0.0.1 (/playground)\r\nerror[E0277]: the trait bound `U: std::convert::From<std::result::Result<U, T>>` is not satisfied\r\n  --> src/lib.rs:21:15\r\n   |\r\n21 |     Foo::from(res)\r\n   |               ^^^\r\n   |               |\r\n   |               expected an implementor of trait `std::convert::From<std::result::Result<U, T>>`\r\n   |               help: consider borrowing here: `&res`\r\n   |\r\n   = note: required because of the requirements on the impl of `std::convert::From<std::result::Result<U, T>>` for `Foo`\r\n   = note: required by `std::convert::From::from`\r\n\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0277`.\r\nerror: could not compile `playground`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n\r\n```\r\n\r\nI would expect an error suggesting that I constrain the trait bounds on `do_stuff` further with `U: Copy`. However, the diagnostic suggests instead that I should implement `From<Result<U, T>>` on `U` in order to get a `Foo` which implements `From<Result<U, T>>`.\r\n\r\nI _believe_ what is happening is that rustc is completely ignoring my `From<Result<U, T>>` for `Foo` because of the copy bound, and found a candidate `From` implementation elsewhere that also fails. \r\n\r\nHowever, since _the error doesn't tell me where it found the `From` implementation its trying to match against_, the error looks like it's trying to tell me: \"Add a `U: std::convert::From<std::result::Result<U, T>>` bound to `do_stuff`\". This bound doesn't make sense for my custom `From` impl (and also doesn't work anyway!).\r\n\r\nI would expect the error to suggest for me to \"add a `U: Copy` bound to `do_stuff`.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/70171/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/70171/timeline", "performed_via_github_app": null, "state_reason": null}