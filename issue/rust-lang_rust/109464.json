{"url": "https://api.github.com/repos/rust-lang/rust/issues/109464", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/109464/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/109464/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/109464/events", "html_url": "https://github.com/rust-lang/rust/issues/109464", "id": 1634834716, "node_id": "I_kwDOAAsO6M5hcZkc", "number": 109464, "title": "type metadata for unique ID is already in the `TypeMap`!", "user": {"login": "balliegojr", "id": 3179320, "node_id": "MDQ6VXNlcjMxNzkzMjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3179320?v=4", "gravatar_id": "", "url": "https://api.github.com/users/balliegojr", "html_url": "https://github.com/balliegojr", "followers_url": "https://api.github.com/users/balliegojr/followers", "following_url": "https://api.github.com/users/balliegojr/following{/other_user}", "gists_url": "https://api.github.com/users/balliegojr/gists{/gist_id}", "starred_url": "https://api.github.com/users/balliegojr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/balliegojr/subscriptions", "organizations_url": "https://api.github.com/users/balliegojr/orgs", "repos_url": "https://api.github.com/users/balliegojr/repos", "events_url": "https://api.github.com/users/balliegojr/events{/privacy}", "received_events_url": "https://api.github.com/users/balliegojr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 203130, "node_id": "MDU6TGFiZWwyMDMxMzA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-debuginfo", "name": "A-debuginfo", "color": "f7e101", "default": false, "description": "Area: Debugging information in compiled programs (DWARF, PDB, etc.)"}, {"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 3618128266, "node_id": "LA_kwDOAAsO6M7XqEGK", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-async_fn_in_trait", "name": "F-async_fn_in_trait", "color": "f9c0cc", "default": false, "description": "Static async fn in traits"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2023-03-21T23:27:55Z", "updated_at": "2023-03-22T00:29:56Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n-->\r\n\r\n### Code\r\n[Link for the playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021&gist=bd2c1f3db7fd294ecadc4767499dbe0e)\r\n\r\n```Rust\r\n#![allow(incomplete_features)]\r\n#![feature(async_fn_in_trait)]\r\n\r\n#[derive(Clone, Copy)]\r\npub struct SharedState {}\r\n\r\npub trait State {\r\n    async fn execute(self, shared_state: &SharedState);\r\n}\r\n\r\npub trait StateComposer {\r\n    fn and_then<T, F>(self, map_fn: F) -> AndThen<Self, F>\r\n    where\r\n        Self: State + Sized,\r\n        T: State,\r\n        F: FnOnce() -> T,\r\n    {\r\n        AndThen {\r\n            previous: self,\r\n            map_fn,\r\n        }\r\n    }\r\n}\r\n\r\nimpl<T> StateComposer for T where T: State {}\r\npub struct AndThen<T, F> {\r\n    previous: T,\r\n    map_fn: F,\r\n}\r\n\r\nimpl<T, U, F> State for AndThen<T, F>\r\nwhere\r\n    T: State,\r\n    U: State,\r\n    F: FnOnce() -> U,\r\n{\r\n    async fn execute(self, shared_state: &SharedState)\r\n    where\r\n        Self: Sized,\r\n    {\r\n        self.previous.execute(shared_state).await;\r\n        (self.map_fn)().execute(shared_state).await\r\n    }\r\n}\r\n\r\npub struct SomeState {}\r\n\r\nimpl State for SomeState {\r\n    async fn execute(self, shared_state: &SharedState) {}\r\n}\r\n\r\npub fn main() {\r\n    let shared_state = SharedState {};\r\n    async {\r\n        SomeState {}\r\n            .and_then(|| SomeState {})\r\n            .and_then(|| SomeState {})\r\n            .execute(&shared_state)\r\n            .await;\r\n    };\r\n}\r\n\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```rustc 1.70.0-nightly (44f518058 2023-03-20)\r\nbinary: rustc\r\ncommit-hash: 44f5180584404d18058cbbf224c55255db4fdcbb\r\ncommit-date: 2023-03-20\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.70.0-nightly\r\nLLVM version: 15.0.7\r\n```\r\n\r\n### Error output\r\n\r\n```\r\n   Compiling state-machine v0.1.0 (/home/junior/sources/playground/state-machine)\r\nwarning: unused variable: `shared_state`\r\n  --> src/lib.rs:49:28\r\n   |\r\n49 |     async fn execute(self, shared_state: &SharedState) {}\r\n   |                            ^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_shared_state`\r\n   |\r\n   = note: `#[warn(unused_variables)]` on by default\r\n\r\nwarning: unused implementer of `Future` that must be used\r\n  --> src/lib.rs:54:5\r\n   |\r\n54 | /     async {\r\n55 | |         SomeState {}\r\n56 | |             .and_then(|| SomeState {})\r\n57 | |             .and_then(|| SomeState {})\r\n58 | |             .execute(&shared_state)\r\n59 | |             .await;\r\n60 | |     };\r\n   | |_____^\r\n   |\r\n   = note: futures do nothing unless you `.await` or poll them\r\n   = note: `#[warn(unused_must_use)]` on by default\r\n\r\nerror: internal compiler error: compiler/rustc_codegen_llvm/src/debuginfo/metadata/type_map.rs:133:13: type metadata for unique ID 'VariantStructType([async fn body@src/lib.rs:40:5: 43:6], 0, HiddenZst)' is already in the `TypeMap`!\r\n\r\nthread 'rustc' panicked at 'Box<dyn Any>', /rustc/44f5180584404d18058cbbf224c55255db4fdcbb/compiler/rustc_errors/src/lib.rs:1644:9\r\nstack backtrace:\r\n   0:     0x7f2e3ab66bfa - std::backtrace_rs::backtrace::libunwind::trace::h02b863e4bfcd5ee4\r\n                               at /rustc/44f5180584404d18058cbbf224c55255db4fdcbb/library/std/src/../../backtrace/src/backtrace/libunwind.rs:93:5\r\n   1:     0x7f2e3ab66bfa - std::backtrace_rs::backtrace::trace_unsynchronized::h00a2c275504a104d\r\n                               at /rustc/44f5180584404d18058cbbf224c55255db4fdcbb/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\r\n   2:     0x7f2e3ab66bfa - std::sys_common::backtrace::_print_fmt::h026a22e05cf38896\r\n                               at /rustc/44f5180584404d18058cbbf224c55255db4fdcbb/library/std/src/sys_common/backtrace.rs:65:5\r\n   3:     0x7f2e3ab66bfa - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::h34a8f50cf2d025fa\r\n                               at /rustc/44f5180584404d18058cbbf224c55255db4fdcbb/library/std/src/sys_common/backtrace.rs:44:22\r\n   4:     0x7f2e3abca21e - core::fmt::write::h5b51ab21f7d1e0b3\r\n                               at /rustc/44f5180584404d18058cbbf224c55255db4fdcbb/library/core/src/fmt/mod.rs:1254:17\r\n   5:     0x7f2e3ab59a85 - std::io::Write::write_fmt::hf4fa62cadc893d5c\r\n                               at /rustc/44f5180584404d18058cbbf224c55255db4fdcbb/library/std/src/io/mod.rs:1698:15\r\n   6:     0x7f2e3ab669c5 - std::sys_common::backtrace::_print::ha17a326a77d0900c\r\n                               at /rustc/44f5180584404d18058cbbf224c55255db4fdcbb/library/std/src/sys_common/backtrace.rs:47:5\r\n   7:     0x7f2e3ab669c5 - std::sys_common::backtrace::print::h4547d3fae20fb79a\r\n                               at /rustc/44f5180584404d18058cbbf224c55255db4fdcbb/library/std/src/sys_common/backtrace.rs:34:9\r\n   8:     0x7f2e3ab6973f - std::panicking::default_hook::{{closure}}::hc37cfbcbf13dea2f\r\n                               at /rustc/44f5180584404d18058cbbf224c55255db4fdcbb/library/std/src/panicking.rs:271:22\r\n   9:     0x7f2e3ab6947b - std::panicking::default_hook::h68329187d8716430\r\n                               at /rustc/44f5180584404d18058cbbf224c55255db4fdcbb/library/std/src/panicking.rs:290:9\r\n  10:     0x7f2e3ddb53f5 - <rustc_driver_impl[e865fcce65453e97]::DEFAULT_HOOK::{closure#0}::{closure#0} as core[e92a6e72e88848e6]::ops::function::FnOnce<(&core[e92a6e72e88848e6]::panic::panic_info::PanicInfo,)>>::call_once::{shim:vtable#0}\r\n  11:     0x7f2e3ab69f7d - <alloc::boxed::Box<F,A> as core::ops::function::Fn<Args>>::call::he6b1b104583416f4\r\n                               at /rustc/44f5180584404d18058cbbf224c55255db4fdcbb/library/alloc/src/boxed.rs:2002:9\r\n  12:     0x7f2e3ab69f7d - std::panicking::rust_panic_with_hook::h89588635866984f2\r\n                               at /rustc/44f5180584404d18058cbbf224c55255db4fdcbb/library/std/src/panicking.rs:696:13\r\n  13:     0x7f2e3e2eeb71 - std[f90515c7d1e58fcd]::panicking::begin_panic::<rustc_errors[1d3726326fe117a6]::ExplicitBug>::{closure#0}\r\n  14:     0x7f2e3e2ec606 - std[f90515c7d1e58fcd]::sys_common::backtrace::__rust_end_short_backtrace::<std[f90515c7d1e58fcd]::panicking::begin_panic<rustc_errors[1d3726326fe117a6]::ExplicitBug>::{closure#0}, !>\r\n  15:     0x7f2e3e302796 - std[f90515c7d1e58fcd]::panicking::begin_panic::<rustc_errors[1d3726326fe117a6]::ExplicitBug>\r\n  16:     0x7f2e3e364b76 - std[f90515c7d1e58fcd]::panic::panic_any::<rustc_errors[1d3726326fe117a6]::ExplicitBug>\r\n  17:     0x7f2e3e3624c6 - <rustc_errors[1d3726326fe117a6]::HandlerInner>::bug::<&alloc[8437dea91522f7f5]::string::String>\r\n  18:     0x7f2e3e362190 - <rustc_errors[1d3726326fe117a6]::Handler>::bug::<&alloc[8437dea91522f7f5]::string::String>\r\n  19:     0x7f2e3e35a4fb - rustc_middle[20900d4515e9a17b]::util::bug::opt_span_bug_fmt::<rustc_span[f138f19c2ce8dad]::span_encoding::Span>::{closure#0}\r\n  20:     0x7f2e3e358f4a - rustc_middle[20900d4515e9a17b]::ty::context::tls::with_opt::<rustc_middle[20900d4515e9a17b]::util::bug::opt_span_bug_fmt<rustc_span[f138f19c2ce8dad]::span_encoding::Span>::{closure#0}, !>::{closure#0}\r\n  21:     0x7f2e3e358f16 - rustc_middle[20900d4515e9a17b]::ty::context::tls::with_context_opt::<rustc_middle[20900d4515e9a17b]::ty::context::tls::with_opt<rustc_middle[20900d4515e9a17b]::util::bug::opt_span_bug_fmt<rustc_span[f138f19c2ce8dad]::span_encoding::Span>::{closure#0}, !>::{closure#0}, !>\r\n  22:     0x7f2e3e35a446 - rustc_middle[20900d4515e9a17b]::util::bug::opt_span_bug_fmt::<rustc_span[f138f19c2ce8dad]::span_encoding::Span>\r\n  23:     0x7f2e3c45ae73 - rustc_middle[20900d4515e9a17b]::util::bug::bug_fmt\r\n  24:     0x7f2e3c49ace2 - <rustc_codegen_llvm[9e46d5c92cfccab3]::debuginfo::metadata::type_map::TypeMap>::insert\r\n  25:     0x7f2e3dc89ce6 - rustc_codegen_llvm[9e46d5c92cfccab3]::debuginfo::metadata::type_map::build_type_with_children::<rustc_codegen_llvm[9e46d5c92cfccab3]::debuginfo::metadata::enums::build_generator_variant_struct_type_di_node::{closure#0}, rustc_codegen_llvm[9e46d5c92cfccab3]::debuginfo::metadata::enums::build_generator_variant_struct_type_di_node::{closure#1}>\r\n  26:     0x7f2e3dc30137 - rustc_codegen_llvm[9e46d5c92cfccab3]::debuginfo::metadata::enums::build_generator_variant_struct_type_di_node\r\n  27:     0x7f2e3dc67b27 - <&mut rustc_codegen_llvm[9e46d5c92cfccab3]::debuginfo::metadata::enums::native::build_generator_di_node::{closure#0}::{closure#0} as core[e92a6e72e88848e6]::ops::function::FnOnce<(rustc_abi[e976117ca395acc5]::VariantIdx,)>>::call_once\r\n  28:     0x7f2e3dc7b374 - <smallvec[549b52ff25e33a5d]::SmallVec<[rustc_codegen_llvm[9e46d5c92cfccab3]::debuginfo::metadata::enums::native::VariantMemberInfo; 16usize]> as core[e92a6e72e88848e6]::iter::traits::collect::Extend<<[rustc_codegen_llvm[9e46d5c92cfccab3]::debuginfo::metadata::enums::native::VariantMemberInfo; 16usize] as smallvec[549b52ff25e33a5d]::Array>::Item>>::extend::<core[e92a6e72e88848e6]::iter::adapters::map::Map<core[e92a6e72e88848e6]::iter::adapters::map::Map<core[e92a6e72e88848e6]::ops::range::Range<usize>, <rustc_index[32b293d781f6f491]::vec::IndexVec<rustc_abi[e976117ca395acc5]::VariantIdx, rustc_abi[e976117ca395acc5]::LayoutS>>::indices::{closure#0}>, rustc_codegen_llvm[9e46d5c92cfccab3]::debuginfo::metadata::enums::native::build_generator_di_node::{closure#0}::{closure#0}>>\r\n  29:     0x7f2e3dc8a4e4 - rustc_codegen_llvm[9e46d5c92cfccab3]::debuginfo::metadata::type_map::build_type_with_children::<rustc_codegen_llvm[9e46d5c92cfccab3]::debuginfo::metadata::enums::native::build_generator_di_node::{closure#0}, for<'a, 'b, 'c> fn(&'a rustc_codegen_llvm[9e46d5c92cfccab3]::context::CodegenCx<'b, 'c>) -> smallvec[549b52ff25e33a5d]::SmallVec<[&'b rustc_codegen_llvm[9e46d5c92cfccab3]::llvm_::ffi::Metadata; 16usize]>>\r\n  30:     0x7f2e3dc68bac - rustc_codegen_llvm[9e46d5c92cfccab3]::debuginfo::metadata::enums::native::build_generator_di_node\r\n  31:     0x7f2e3dc2f97f - rustc_codegen_llvm[9e46d5c92cfccab3]::debuginfo::metadata::enums::build_generator_di_node\r\n  32:     0x7f2e3c38b138 - rustc_codegen_llvm[9e46d5c92cfccab3]::debuginfo::metadata::type_di_node\r\n  33:     0x7f2e3c627c9e - <rustc_codegen_llvm[9e46d5c92cfccab3]::context::CodegenCx as rustc_codegen_ssa[63d5a3cdf69e7e7e]::traits::debuginfo::DebugInfoMethods>::create_dbg_var\r\n  34:     0x7f2e3c60c59a - rustc_codegen_ssa[63d5a3cdf69e7e7e]::mir::codegen_mir::<rustc_codegen_llvm[9e46d5c92cfccab3]::builder::Builder>\r\n  35:     0x7f2e3d2e36f3 - rustc_codegen_llvm[9e46d5c92cfccab3]::base::compile_codegen_unit::module_codegen\r\n  36:     0x7f2e3d2e1907 - <rustc_codegen_llvm[9e46d5c92cfccab3]::LlvmCodegenBackend as rustc_codegen_ssa[63d5a3cdf69e7e7e]::traits::backend::ExtraBackendMethods>::compile_codegen_unit\r\n  37:     0x7f2e3d2dfcb4 - rustc_codegen_ssa[63d5a3cdf69e7e7e]::base::codegen_crate::<rustc_codegen_llvm[9e46d5c92cfccab3]::LlvmCodegenBackend>\r\n  38:     0x7f2e3d2df5de - <rustc_codegen_llvm[9e46d5c92cfccab3]::LlvmCodegenBackend as rustc_codegen_ssa[63d5a3cdf69e7e7e]::traits::backend::CodegenBackend>::codegen_crate\r\n  39:     0x7f2e3cfb9251 - <rustc_session[ae3e11cc9a6ced82]::session::Session>::time::<alloc[8437dea91522f7f5]::boxed::Box<dyn core[e92a6e72e88848e6]::any::Any>, rustc_interface[cef7fd7d041aab20]::passes::start_codegen::{closure#0}>\r\n  40:     0x7f2e3cfb8d79 - rustc_interface[cef7fd7d041aab20]::passes::start_codegen\r\n  41:     0x7f2e3cfb5aa8 - <rustc_middle[20900d4515e9a17b]::ty::context::GlobalCtxt>::enter::<<rustc_interface[cef7fd7d041aab20]::queries::Queries>::ongoing_codegen::{closure#0}::{closure#0}, core[e92a6e72e88848e6]::result::Result<alloc[8437dea91522f7f5]::boxed::Box<dyn core[e92a6e72e88848e6]::any::Any>, rustc_span[f138f19c2ce8dad]::ErrorGuaranteed>>\r\n  42:     0x7f2e3cfb4004 - <rustc_interface[cef7fd7d041aab20]::queries::Queries>::ongoing_codegen\r\n  43:     0x7f2e3cfb35d1 - <rustc_interface[cef7fd7d041aab20]::interface::Compiler>::enter::<rustc_driver_impl[e865fcce65453e97]::run_compiler::{closure#1}::{closure#2}, core[e92a6e72e88848e6]::result::Result<core[e92a6e72e88848e6]::option::Option<rustc_interface[cef7fd7d041aab20]::queries::Linker>, rustc_span[f138f19c2ce8dad]::ErrorGuaranteed>>\r\n  44:     0x7f2e3cfb16a0 - rustc_span[f138f19c2ce8dad]::with_source_map::<core[e92a6e72e88848e6]::result::Result<(), rustc_span[f138f19c2ce8dad]::ErrorGuaranteed>, rustc_interface[cef7fd7d041aab20]::interface::run_compiler<core[e92a6e72e88848e6]::result::Result<(), rustc_span[f138f19c2ce8dad]::ErrorGuaranteed>, rustc_driver_impl[e865fcce65453e97]::run_compiler::{closure#1}>::{closure#0}::{closure#0}>\r\n  45:     0x7f2e3cfb0c49 - std[f90515c7d1e58fcd]::sys_common::backtrace::__rust_begin_short_backtrace::<rustc_interface[cef7fd7d041aab20]::util::run_in_thread_pool_with_globals<rustc_interface[cef7fd7d041aab20]::interface::run_compiler<core[e92a6e72e88848e6]::result::Result<(), rustc_span[f138f19c2ce8dad]::ErrorGuaranteed>, rustc_driver_impl[e865fcce65453e97]::run_compiler::{closure#1}>::{closure#0}, core[e92a6e72e88848e6]::result::Result<(), rustc_span[f138f19c2ce8dad]::ErrorGuaranteed>>::{closure#0}::{closure#0}, core[e92a6e72e88848e6]::result::Result<(), rustc_span[f138f19c2ce8dad]::ErrorGuaranteed>>\r\n  46:     0x7f2e3d6a2eda - <<std[f90515c7d1e58fcd]::thread::Builder>::spawn_unchecked_<rustc_interface[cef7fd7d041aab20]::util::run_in_thread_pool_with_globals<rustc_interface[cef7fd7d041aab20]::interface::run_compiler<core[e92a6e72e88848e6]::result::Result<(), rustc_span[f138f19c2ce8dad]::ErrorGuaranteed>, rustc_driver_impl[e865fcce65453e97]::run_compiler::{closure#1}>::{closure#0}, core[e92a6e72e88848e6]::result::Result<(), rustc_span[f138f19c2ce8dad]::ErrorGuaranteed>>::{closure#0}::{closure#0}, core[e92a6e72e88848e6]::result::Result<(), rustc_span[f138f19c2ce8dad]::ErrorGuaranteed>>::{closure#1} as core[e92a6e72e88848e6]::ops::function::FnOnce<()>>::call_once::{shim:vtable#0}\r\n  47:     0x7f2e3ab73e53 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::h75ab31ff38cd6fd4\r\n                               at /rustc/44f5180584404d18058cbbf224c55255db4fdcbb/library/alloc/src/boxed.rs:1988:9\r\n  48:     0x7f2e3ab73e53 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::h2ba977e91260a719\r\n                               at /rustc/44f5180584404d18058cbbf224c55255db4fdcbb/library/alloc/src/boxed.rs:1988:9\r\n  49:     0x7f2e3ab73e53 - std::sys::unix::thread::Thread::new::thread_start::h132d174660c69668\r\n                               at /rustc/44f5180584404d18058cbbf224c55255db4fdcbb/library/std/src/sys/unix/thread.rs:108:17\r\n  50:     0x7f2e3a908bb5 - <unknown>\r\n  51:     0x7f2e3a98ad90 - <unknown>\r\n  52:                0x0 - <unknown>\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.70.0-nightly (44f518058 2023-03-20) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: --crate-type lib -C embed-bitcode=no -C debuginfo=2 -C incremental=[REDACTED]\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\nend of query stack\r\n```\r\n\r\n### Observation\r\nThe error does not happen with any of the 3 changes bellow\r\n- Remove the async keyword\r\n- Remove the `SharedState` parameter from the trait function\r\n- Add the type constraint to `AndThen` struct\r\n```Rust\r\npub struct AndThen<T, U, F>\r\nwhere\r\n    T: State,\r\n    U: State,\r\n    F: FnOnce() -> U,\r\n{\r\n    previous: T,\r\n    map_fn: F,\r\n}\r\n``` \r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/109464/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 1}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/109464/timeline", "performed_via_github_app": null, "state_reason": null}