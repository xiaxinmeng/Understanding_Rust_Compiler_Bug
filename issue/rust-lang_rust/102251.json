{"url": "https://api.github.com/repos/rust-lang/rust/issues/102251", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/102251/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/102251/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/102251/events", "html_url": "https://github.com/rust-lang/rust/issues/102251", "id": 1384851841, "node_id": "I_kwDOAAsO6M5SiymB", "number": 102251, "title": "rustdoc does not link members of enum tuple variants that have the same type name as the variant name", "user": {"login": "lopopolo", "id": 860434, "node_id": "MDQ6VXNlcjg2MDQzNA==", "avatar_url": "https://avatars.githubusercontent.com/u/860434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lopopolo", "html_url": "https://github.com/lopopolo", "followers_url": "https://api.github.com/users/lopopolo/followers", "following_url": "https://api.github.com/users/lopopolo/following{/other_user}", "gists_url": "https://api.github.com/users/lopopolo/gists{/gist_id}", "starred_url": "https://api.github.com/users/lopopolo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lopopolo/subscriptions", "organizations_url": "https://api.github.com/users/lopopolo/orgs", "repos_url": "https://api.github.com/users/lopopolo/repos", "events_url": "https://api.github.com/users/lopopolo/events{/privacy}", "received_events_url": "https://api.github.com/users/lopopolo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 203738, "node_id": "MDU6TGFiZWwyMDM3Mzg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-rustdoc", "name": "T-rustdoc", "color": "bfd4f2", "default": false, "description": "Relevant to the rustdoc team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 2406929537, "node_id": "MDU6TGFiZWwyNDA2OTI5NTM3", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-rustdoc-ui", "name": "A-rustdoc-ui", "color": "f7e101", "default": false, "description": "Area: rustdoc UI (generated HTML)"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2022-09-25T00:29:50Z", "updated_at": "2023-04-15T17:19:08Z", "closed_at": "2023-04-15T17:18:04Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI tried this code:\r\n\r\n```rust\r\nuse core::fmt;\r\nuse core::num::TryFromIntError;\r\nuse std::error;\r\nuse std::str::Utf8Error;\r\n\r\nuse tz::error::{DateTimeError, ProjectDateTimeError, TzError};\r\n\r\n/// Error that indicates a given operation has resulted in an integer overflow.\r\n#[derive(Debug, Clone, Copy, Hash, PartialEq, Eq, PartialOrd, Ord)]\r\npub struct IntOverflowError {\r\n    _private: (),\r\n}\r\n\r\nimpl fmt::Display for IntOverflowError {\r\n    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> Result<(), fmt::Error> {\r\n        f.write_str(\"out of int range\")\r\n    }\r\n}\r\n\r\nimpl error::Error for IntOverflowError {}\r\n\r\nimpl IntOverflowError {\r\n    // This error is not to be constructed outside of this crate.\r\n    pub(crate) const fn new() -> Self {\r\n        Self { _private: () }\r\n    }\r\n}\r\n\r\n/// A wrapper around some of the errors provided by `tz-rs`.\r\n#[derive(Debug)]\r\npub enum TimeError {\r\n    /// Created when trying to create a `DateTime`, however the projection to a\r\n    /// UNIX timestamp wasn't achievable. Generally thrown when exceeding the\r\n    /// range of integers (e.g. `> i64::Max`).\r\n    ///\r\n    /// Note: This is just a wrapper over [`tz::error::ProjectDateTimeError`].\r\n    ProjectionError(ProjectDateTimeError),\r\n\r\n    /// Created when one of the parameters of a `DateTime` falls outside the\r\n    /// allowed ranges (e.g. 13th month, 32 day, 24th hour, etc).\r\n    ///\r\n    /// Note: [`tz::error::DateTimeError`] is only thrown from `tz-rs` when a\r\n    /// provided component value is out of range.\r\n    ///\r\n    /// Note: This is different from how MRI ruby is implemented. e.g. Second\r\n    /// 60 is valid in MRI, and will just add an additional second instead of\r\n    /// erroring.\r\n    ComponentOutOfRangeError(DateTimeError),\r\n\r\n    /// A rescuable error originally from the `tz-rs` library.\r\n    UnknownTzError(TzError),\r\n\r\n    /// Indicates that there was an issue when parsing a string for an offset.\r\n    TzStringError(TzStringError),\r\n\r\n    /// The provided tz offset seconds offset is outside of the allowed range.\r\n    TzOutOfRangeError(TzOutOfRangeError),\r\n\r\n    /// A rescuable Integer overflow error. Caused when trying to exceed the\r\n    /// bounds of an int.\r\n    IntOverflowError(IntOverflowError),\r\n\r\n    /// An rescuable unknown error (instead of panicking).\r\n    Unknown,\r\n}\r\n```\r\n\r\nI expected to see this happen: rustdoc linkifies all inner types on all enum variants like it does for `DateTimeError`.\r\n\r\nInstead, this happened: `TzStringError`, `TzOutOfRangeError`, and `IntOverflowError` are not turned into links on the doc page for `TimeError`.\r\n\r\nAs of 2022-09-24 published at https://artichoke.github.io/artichoke/spinoso_time/tzrs/enum.TimeError.html.\r\n\r\nThe inner error types come from `tz-rs`: https://docs.rs/tz-rs/0.6.14/tz/\r\n\r\n### Screenshots\r\n\r\n<img width=\"522\" alt=\"Screen Shot 2022-09-25 at 10 43 04 AM\" src=\"https://user-images.githubusercontent.com/860434/192157459-cc8ec9b2-f06f-4cd6-8985-4a1974e541d8.png\">\r\n\r\n<img width=\"655\" alt=\"Screen Shot 2022-09-25 at 10 43 11 AM\" src=\"https://user-images.githubusercontent.com/860434/192157464-46c71aed-9d1b-4319-b44c-a02a90e7791f.png\">\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n```console\r\n$ rustdoc +nightly -Vv\r\nrustdoc 1.66.0-nightly (4a1467723 2022-09-23)\r\nbinary: rustdoc\r\ncommit-hash: 4a14677239bbd9a3892d165ee24513c1a05820e4\r\ncommit-date: 2022-09-23\r\nhost: x86_64-apple-darwin\r\nrelease: 1.66.0-nightly\r\nLLVM version: 15.0.0\r\n```\r\n\r\n```console\r\n$ rustc +nightly -Vv\r\nrustc 1.66.0-nightly (4a1467723 2022-09-23)\r\nbinary: rustc\r\ncommit-hash: 4a14677239bbd9a3892d165ee24513c1a05820e4\r\ncommit-date: 2022-09-23\r\nhost: x86_64-apple-darwin\r\nrelease: 1.66.0-nightly\r\nLLVM version: 15.0.0\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary>Backtrace</summary>\r\n<p>\r\n\r\n```\r\n<backtrace>\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n@rustbot label T-rustdoc A-rustdoc-ui", "closed_by": {"login": "lopopolo", "id": 860434, "node_id": "MDQ6VXNlcjg2MDQzNA==", "avatar_url": "https://avatars.githubusercontent.com/u/860434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lopopolo", "html_url": "https://github.com/lopopolo", "followers_url": "https://api.github.com/users/lopopolo/followers", "following_url": "https://api.github.com/users/lopopolo/following{/other_user}", "gists_url": "https://api.github.com/users/lopopolo/gists{/gist_id}", "starred_url": "https://api.github.com/users/lopopolo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lopopolo/subscriptions", "organizations_url": "https://api.github.com/users/lopopolo/orgs", "repos_url": "https://api.github.com/users/lopopolo/repos", "events_url": "https://api.github.com/users/lopopolo/events{/privacy}", "received_events_url": "https://api.github.com/users/lopopolo/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/102251/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/102251/timeline", "performed_via_github_app": null, "state_reason": "not_planned"}