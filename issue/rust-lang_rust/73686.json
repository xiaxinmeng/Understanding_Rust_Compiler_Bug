{"url": "https://api.github.com/repos/rust-lang/rust/issues/73686", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/73686/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/73686/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/73686/events", "html_url": "https://github.com/rust-lang/rust/issues/73686", "id": 644464900, "node_id": "MDU6SXNzdWU2NDQ0NjQ5MDA=", "number": 73686, "title": "bench Arc::clone()", "user": {"login": "neetdai", "id": 17525313, "node_id": "MDQ6VXNlcjE3NTI1MzEz", "avatar_url": "https://avatars.githubusercontent.com/u/17525313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neetdai", "html_url": "https://github.com/neetdai", "followers_url": "https://api.github.com/users/neetdai/followers", "following_url": "https://api.github.com/users/neetdai/following{/other_user}", "gists_url": "https://api.github.com/users/neetdai/gists{/gist_id}", "starred_url": "https://api.github.com/users/neetdai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neetdai/subscriptions", "organizations_url": "https://api.github.com/users/neetdai/orgs", "repos_url": "https://api.github.com/users/neetdai/repos", "events_url": "https://api.github.com/users/neetdai/events{/privacy}", "received_events_url": "https://api.github.com/users/neetdai/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-24T09:30:30Z", "updated_at": "2020-06-24T10:30:21Z", "closed_at": "2020-06-24T10:30:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI tried this code:\r\n\r\n```rust\r\nuse criterion::{black_box, criterion_group, criterion_main, Criterion};\r\nfn criterion_benchmark(c: &mut Criterion) {\r\n\r\n    c.bench_function(\"arf clone\", |b| {\r\n        use std::sync::Arc;\r\n        let s: Arc<(String, Option<String>, String)> = Arc::new((String::from(\"hello\"), None, String::from(\"hello\")));\r\n\r\n        let test = |s| {};\r\n\r\n        b.iter(|| {\r\n            test(s.clone());\r\n        });\r\n    });\r\n}\r\n\r\ncriterion_group!(benches, criterion_benchmark);\r\ncriterion_main!(benches);\r\n\r\n```\r\n\r\nI expected to see this happen: bench result\r\n\r\nInstead, this happened: thread 'main' panicked at 'index out of bounds: the len is 500 but the index is 18446744073709551615'\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.44.0 (49cae5576 2020-06-01)\r\nbinary: rustc\r\ncommit-hash: 49cae55760da0a43428eba73abcb659bb70cf2e4\r\ncommit-date: 2020-06-01\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.44.0\r\nLLVM version: 9.0\r\n\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary>Backtrace</summary>\r\n<p>\r\n\r\n```\r\nthread 'main' panicked at 'index out of bounds: the len is 500 but the index is 18446744073709551615', /home/phs/.cargo/registry/src/mirrors.sjtug.sjtu.edu.cn-4f7dbcce21e258a2/criterion-0.3.2/src/plot/plotters_backend/distributions.rs:164:15\r\nstack backtrace:\r\n   0: backtrace::backtrace::libunwind::trace\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/libunwind.rs:86\r\n   1: backtrace::backtrace::trace_unsynchronized\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/mod.rs:66\r\n   2: std::sys_common::backtrace::_print_fmt\r\n             at src/libstd/sys_common/backtrace.rs:78\r\n   3: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt\r\n             at src/libstd/sys_common/backtrace.rs:59\r\n   4: core::fmt::write\r\n             at src/libcore/fmt/mod.rs:1069\r\n   5: std::io::Write::write_fmt\r\n             at src/libstd/io/mod.rs:1504\r\n   6: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:62\r\n   7: std::sys_common::backtrace::print\r\n             at src/libstd/sys_common/backtrace.rs:49\r\n   8: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/panicking.rs:198\r\n   9: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:218\r\n  10: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:511\r\n  11: rust_begin_unwind\r\n             at src/libstd/panicking.rs:419\r\n  12: core::panicking::panic_fmt\r\n             at src/libcore/panicking.rs:111\r\n  13: core::panicking::panic_bounds_check\r\n             at src/libcore/panicking.rs:69\r\n  14: criterion::plot::plotters_backend::distributions::rel_distributions\r\n  15: <criterion::plot::plotters_backend::PlottersBackend as criterion::plot::Plotter>::rel_distributions\r\n  16: <criterion::html::Html as criterion::report::Report>::measurement_complete\r\n  17: <criterion::report::Reports as criterion::report::Report>::measurement_complete\r\n  18: criterion::analysis::common\r\n  19: criterion::benchmark_group::BenchmarkGroup<M>::bench_function\r\n  20: criterion::Criterion<M>::bench_function\r\n  21: bench::main\r\n  22: std::rt::lang_start::{{closure}}\r\n  23: std::rt::lang_start_internal::{{closure}}\r\n             at src/libstd/rt.rs:52\r\n  24: std::panicking::try::do_call\r\n             at src/libstd/panicking.rs:331\r\n  25: std::panicking::try\r\n             at src/libstd/panicking.rs:274\r\n  26: std::panic::catch_unwind\r\n             at src/libstd/panic.rs:394\r\n  27: std::rt::lang_start_internal\r\n             at src/libstd/rt.rs:51\r\n  28: main\r\n  29: __libc_start_main\r\n  30: _start\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n```\r\n\r\n</p>\r\n</details>\r\n", "closed_by": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/73686/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/73686/timeline", "performed_via_github_app": null, "state_reason": "completed"}