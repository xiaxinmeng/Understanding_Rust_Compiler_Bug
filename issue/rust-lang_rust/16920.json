{"url": "https://api.github.com/repos/rust-lang/rust/issues/16920", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/16920/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/16920/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/16920/events", "html_url": "https://github.com/rust-lang/rust/issues/16920", "id": 41619855, "node_id": "MDU6SXNzdWU0MTYxOTg1NQ==", "number": 16920, "title": "Deprecate the `FromPrimitive` trait", "user": {"login": "aochagavia", "id": 5196584, "node_id": "MDQ6VXNlcjUxOTY1ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5196584?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aochagavia", "html_url": "https://github.com/aochagavia", "followers_url": "https://api.github.com/users/aochagavia/followers", "following_url": "https://api.github.com/users/aochagavia/following{/other_user}", "gists_url": "https://api.github.com/users/aochagavia/gists{/gist_id}", "starred_url": "https://api.github.com/users/aochagavia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aochagavia/subscriptions", "organizations_url": "https://api.github.com/users/aochagavia/orgs", "repos_url": "https://api.github.com/users/aochagavia/repos", "events_url": "https://api.github.com/users/aochagavia/events{/privacy}", "received_events_url": "https://api.github.com/users/aochagavia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2014-09-01T09:05:20Z", "updated_at": "2015-06-09T16:31:16Z", "closed_at": "2015-06-09T16:31:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Two reasons:\n- Different types need to deal with this differently (see examples below). Having only one way to do it causes confusion, because it forces you to return an `Option`, even when the function _cannot_ return `None`. The standard library is full of calls followed by `unwrap`.\n- It is not useful to provide a generic way to do it (please correct me if I am wrong).\n\nExamples:\n- No function of `FromPrimitive` can ever return `None` for `BigInt`\n- Only the functions which accept negative numbers can return `None` for `BigUint`\n- For the primitive types, each one has different constraints. For example, `FromPrimitive::<i8>::from_i32` can return `None` because of overflow, while `FromPrimitive::<f64>::from_i32` cannot.\n\nThe only problem I see is in `libtest/stats.rs`, where `FromPrimitive` is used generically. I think however that we can figure it out.\n\nI think the best solution would be have different implementations for each type. \n\ncc @aturon \n", "closed_by": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/16920/reactions", "total_count": 5, "+1": 0, "-1": 2, "laugh": 0, "hooray": 0, "confused": 3, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/16920/timeline", "performed_via_github_app": null, "state_reason": "completed"}