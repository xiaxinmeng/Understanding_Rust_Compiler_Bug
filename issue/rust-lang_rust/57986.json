{"url": "https://api.github.com/repos/rust-lang/rust/issues/57986", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/57986/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/57986/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/57986/events", "html_url": "https://github.com/rust-lang/rust/issues/57986", "id": 404643383, "node_id": "MDU6SXNzdWU0MDQ2NDMzODM=", "number": 57986, "title": "Shall we add a `for` for `macro_rules`?", "user": {"login": "abbychau", "id": 350283, "node_id": "MDQ6VXNlcjM1MDI4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/350283?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abbychau", "html_url": "https://github.com/abbychau", "followers_url": "https://api.github.com/users/abbychau/followers", "following_url": "https://api.github.com/users/abbychau/following{/other_user}", "gists_url": "https://api.github.com/users/abbychau/gists{/gist_id}", "starred_url": "https://api.github.com/users/abbychau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abbychau/subscriptions", "organizations_url": "https://api.github.com/users/abbychau/orgs", "repos_url": "https://api.github.com/users/abbychau/repos", "events_url": "https://api.github.com/users/abbychau/events{/privacy}", "received_events_url": "https://api.github.com/users/abbychau/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-30T07:52:43Z", "updated_at": "2019-01-30T08:41:37Z", "closed_at": "2019-01-30T08:41:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "By now, we have `macro_rules` act like functions.\r\n```rust\r\n    macro_rules! k {\r\n        ($t:expr) => {\r\n            $t.to_string()\r\n        };\r\n    }\r\n\r\nlet a = k!(\"test\");\r\n```\r\n\r\nHowever, if it can act like a trait then it will be more convenient for coding in many cases like `\"test\".k!().do_sth();`.;\r\n\r\nShall we have a `macro_rules` that takes in a `for`?\r\nthat:\r\n```rust\r\nmacro_rules! l for T {\r\n        ($self:expr) => {\r\n            $self.to_string()\r\n        };\r\n}\r\n```", "closed_by": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/57986/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/57986/timeline", "performed_via_github_app": null, "state_reason": "completed"}