{"url": "https://api.github.com/repos/rust-lang/rust/issues/60263", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/60263/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/60263/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/60263/events", "html_url": "https://github.com/rust-lang/rust/issues/60263", "id": 437209754, "node_id": "MDU6SXNzdWU0MzcyMDk3NTQ=", "number": 60263, "title": "Const generic ICE without feature specified", "user": {"login": "DutchGhost", "id": 25501014, "node_id": "MDQ6VXNlcjI1NTAxMDE0", "avatar_url": "https://avatars.githubusercontent.com/u/25501014?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DutchGhost", "html_url": "https://github.com/DutchGhost", "followers_url": "https://api.github.com/users/DutchGhost/followers", "following_url": "https://api.github.com/users/DutchGhost/following{/other_user}", "gists_url": "https://api.github.com/users/DutchGhost/gists{/gist_id}", "starred_url": "https://api.github.com/users/DutchGhost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DutchGhost/subscriptions", "organizations_url": "https://api.github.com/users/DutchGhost/orgs", "repos_url": "https://api.github.com/users/DutchGhost/repos", "events_url": "https://api.github.com/users/DutchGhost/events{/privacy}", "received_events_url": "https://api.github.com/users/DutchGhost/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1282665911, "node_id": "MDU6TGFiZWwxMjgyNjY1OTEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-generics", "name": "A-const-generics", "color": "f7e101", "default": false, "description": "Area: const generics (parameters and arguments)"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-04-25T13:48:18Z", "updated_at": "2019-05-07T19:40:07Z", "closed_at": "2019-05-07T19:40:07Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The following ICE's on nightly only:\r\n```Rust\r\nuse std::marker::PhantomData;\r\n\r\nstruct B<const I: u8>;\r\n\r\nimpl B<0> {\r\n    fn bug() -> Self {\r\n        panic!()\r\n    }\r\n}\r\n```\r\n\r\nNotice I didn't specify the `#![feature(const_generics)]` feature\r\n\r\n<details>\r\n<summary>Backtrace:</summary>\r\n\r\n```\r\n\r\nCompiling playground v0.0.1 (/playground)\r\nerror[E0658]: const generics are unstable\r\n  --> src/lib.rs:23:16\r\n   |\r\n23 | struct B<const I: u8>;\r\n   |                ^\r\n   |\r\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44580\r\n   = help: add #![feature(const_generics)] to the crate attributes to enable\r\n\r\nwarning: unused import: `std::marker::PhantomData`\r\n  --> src/lib.rs:21:5\r\n   |\r\n21 | use std::marker::PhantomData;\r\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^\r\n   |\r\n   = note: #[warn(unused_imports)] on by default\r\n\r\nthread 'rustc' panicked at 'not yet implemented', src/librustc/ty/relate.rs:707:17\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\nstack backtrace:\r\n   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace\r\n             at src/libstd/sys/unix/backtrace/tracing/gcc_s.rs:39\r\n   1: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:71\r\n   2: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/sys_common/backtrace.rs:59\r\n             at src/libstd/panicking.rs:197\r\n   3: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:211\r\n   4: rustc::util::common::panic_hook\r\n   5: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:478\r\n   6: std::panicking::begin_panic\r\n   7: <rustc::ty::subst::Kind as rustc::ty::relate::Relate>::relate\r\n   8: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once\r\n   9: <smallvec::SmallVec<A> as core::iter::traits::collect::FromIterator<<A as smallvec::Array>::Item>>::from_iter\r\n  10: <core::result::Result<T,E> as rustc::ty::context::InternIteratorElement<T,R>>::intern_with\r\n  11: <rustc::infer::combine::Generalizer as rustc::ty::relate::TypeRelation>::relate_item_substs\r\n  12: rustc::ty::relate::super_relate_tys\r\n  13: <rustc::infer::combine::Generalizer as rustc::ty::relate::TypeRelation>::tys\r\n  14: rustc::infer::combine::CombineFields::instantiate\r\n  15: <rustc::infer::sub::Sub as rustc::ty::relate::TypeRelation>::tys\r\n  16: rustc::infer::InferCtxt::commit_if_ok\r\n  17: rustc::infer::InferCtxt::commit_if_ok\r\n  18: rustc_typeck::check::coercion::Coerce::coerce_unsized\r\n  19: rustc::infer::InferCtxt::commit_if_ok\r\n  20: rustc_typeck::check::coercion::Coerce::coerce\r\n  21: rustc::infer::InferCtxt::commit_if_ok\r\n  22: rustc_typeck::check::coercion::<impl rustc_typeck::check::FnCtxt>::try_coerce\r\n  23: rustc_typeck::check::coercion::CoerceMany<E>::coerce_inner\r\n  24: rustc_typeck::check::FnCtxt::check_block_with_expected\r\n  25: rustc_typeck::check::FnCtxt::check_expr_kind\r\n  26: rustc_typeck::check::FnCtxt::check_expr_with_expectation_and_needs\r\n  27: rustc_typeck::check::FnCtxt::check_block_with_expected\r\n  28: rustc_typeck::check::FnCtxt::check_expr_kind\r\n  29: rustc_typeck::check::FnCtxt::check_expr_with_expectation_and_needs\r\n  30: rustc_typeck::check::FnCtxt::check_return_expr\r\n  31: rustc_typeck::check::check_fn\r\n  32: rustc::ty::context::GlobalCtxt::enter_local\r\n  33: rustc_typeck::check::typeck_tables_of\r\n  34: rustc::ty::query::__query_compute::typeck_tables_of\r\n  35: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::typeck_tables_of>::compute\r\n  36: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  37: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  38: rustc::ty::<impl rustc::ty::context::TyCtxt>::par_body_owners\r\n  39: rustc_typeck::check::typeck_item_bodies\r\n  40: rustc::ty::query::__query_compute::typeck_item_bodies\r\n  41: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::typeck_item_bodies>::compute\r\n  42: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  43: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  44: rustc::util::common::time\r\n  45: rustc_typeck::check_crate\r\n  46: rustc_interface::passes::analysis\r\n  47: rustc::ty::query::__query_compute::analysis\r\n  48: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::analysis>::compute\r\n  49: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  50: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  51: rustc_interface::passes::BoxedGlobalCtxt::access::{{closure}}\r\n  52: rustc_interface::passes::create_global_ctxt::{{closure}}\r\n  53: rustc_interface::passes::BoxedGlobalCtxt::enter\r\n  54: rustc_interface::interface::run_compiler_in_existing_thread_pool\r\n  55: std::thread::local::LocalKey<T>::with\r\n  56: scoped_tls::ScopedKey<T>::set\r\n  57: syntax::with_globals\r\nquery stack during panic:\r\n#0 [typeck_tables_of] processing `B::<_>::bug`\r\n#1 [typeck_item_bodies] type-checking all item bodies\r\n#2 [analysis] running analysis passes on this crate\r\nend of query stack\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0658`.\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.36.0-nightly (e305df184 2019-04-24) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C codegen-units=1 -C debuginfo=2 --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nerror: Could not compile `playground`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n\r\n```\r\n</details>", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/60263/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/60263/timeline", "performed_via_github_app": null, "state_reason": "completed"}