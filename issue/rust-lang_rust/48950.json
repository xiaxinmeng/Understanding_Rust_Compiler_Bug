{"url": "https://api.github.com/repos/rust-lang/rust/issues/48950", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/48950/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/48950/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/48950/events", "html_url": "https://github.com/rust-lang/rust/issues/48950", "id": 304248735, "node_id": "MDU6SXNzdWUzMDQyNDg3MzU=", "number": 48950, "title": "Summary issue - stabilization of `!`", "user": {"login": "canndrew", "id": 5555066, "node_id": "MDQ6VXNlcjU1NTUwNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/5555066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/canndrew", "html_url": "https://github.com/canndrew", "followers_url": "https://api.github.com/users/canndrew/followers", "following_url": "https://api.github.com/users/canndrew/following{/other_user}", "gists_url": "https://api.github.com/users/canndrew/gists{/gist_id}", "starred_url": "https://api.github.com/users/canndrew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/canndrew/subscriptions", "organizations_url": "https://api.github.com/users/canndrew/orgs", "repos_url": "https://api.github.com/users/canndrew/repos", "events_url": "https://api.github.com/users/canndrew/events{/privacy}", "received_events_url": "https://api.github.com/users/canndrew/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37544, "node_id": "MDU6TGFiZWwzNzU0NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-typesystem", "name": "A-typesystem", "color": "f7e101", "default": false, "description": "Area: The type system"}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 604454086, "node_id": "MDU6TGFiZWw2MDQ0NTQwODY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-inference", "name": "A-inference", "color": "f7e101", "default": false, "description": "Area: Type inference"}, {"id": 650846969, "node_id": "MDU6TGFiZWw2NTA4NDY5Njk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-tracking-issue", "name": "C-tracking-issue", "color": "f5f1fd", "default": false, "description": "Category: A tracking issue for an RFC or an unstable feature."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2018-03-12T05:52:22Z", "updated_at": "2018-12-21T12:18:34Z", "closed_at": "2018-12-21T12:18:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## What is being stabilized\r\n\r\n* `!` is now a full-fledged type and can now be used in any type position (eg. [RFC 1216](https://github.com/rust-lang/rfcs/pull/1216)). The `!` type can coerce into any other type, see https://github.com/rust-lang/rust/tree/master/src/test/run-fail/adjust_never.rs for an example.\r\n* Type inference will now default unconstrained type variables to `!` instead of `()`. The [`resolve_trait_on_defaulted_unit`](https://github.com/rust-lang/rust/issues/39216) lint has been retired. An example of where this comes up is if you have something like:\r\n\r\n    ```rust\r\n    // We didn't specify the type of `x`. Under some circumstances, type inference\r\n    // will pick a type for us rather than erroring\r\n    let x = Deserialize::deserialize(data);\r\n    ```\r\n\r\n  Under the old rules this would deserialize a `()`, whereas under the new rules it will deserialize a `!`.\r\n\r\n* The `never_type` feature gate is stable, although some of the behaviours it used to gate now live behind the new `exhaustive_patterns` feature gate (see below).\r\n\r\n## What is *not* being stabilized\r\n\r\n* Exhaustive pattern-matching for uninhabited types. eg.\r\n\r\n    ```rust\r\n    let x: Result<u32, !> = ...;\r\n    let Ok(y) = x;\r\n    ```\r\n\r\n  This code will still complain that `Ok(_)` is a refutable pattern. This can be fixed by using the `exhaustive_patterns` feature gate. See [RFC 1872](https://github.com/rust-lang/rfcs/pull/1872) for progress on this issue. See https://github.com/rust-lang/rust/tree/master/src/test/ui/feature-gate-exhaustive-patterns.rs for the testcase which confirms that this behaviour is still gated.\r\n", "closed_by": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/48950/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/48950/timeline", "performed_via_github_app": null, "state_reason": "completed"}