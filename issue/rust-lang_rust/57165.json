{"url": "https://api.github.com/repos/rust-lang/rust/issues/57165", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/57165/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/57165/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/57165/events", "html_url": "https://github.com/rust-lang/rust/issues/57165", "id": 394599931, "node_id": "MDU6SXNzdWUzOTQ1OTk5MzE=", "number": 57165, "title": "Borrow checker doesn't accept certain valid case when branch involves", "user": {"login": "upsuper", "id": 333750, "node_id": "MDQ6VXNlcjMzMzc1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/333750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/upsuper", "html_url": "https://github.com/upsuper", "followers_url": "https://api.github.com/users/upsuper/followers", "following_url": "https://api.github.com/users/upsuper/following{/other_user}", "gists_url": "https://api.github.com/users/upsuper/gists{/gist_id}", "starred_url": "https://api.github.com/users/upsuper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/upsuper/subscriptions", "organizations_url": "https://api.github.com/users/upsuper/orgs", "repos_url": "https://api.github.com/users/upsuper/repos", "events_url": "https://api.github.com/users/upsuper/events{/privacy}", "received_events_url": "https://api.github.com/users/upsuper/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 604489711, "node_id": "MDU6TGFiZWw2MDQ0ODk3MTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-NLL", "name": "A-NLL", "color": "f7e101", "default": false, "description": "Area: Non Lexical Lifetimes (NLL)"}, {"id": 1146616045, "node_id": "MDU6TGFiZWwxMTQ2NjE2MDQ1", "url": "https://api.github.com/repos/rust-lang/rust/labels/NLL-polonius", "name": "NLL-polonius", "color": "f799ea", "default": false, "description": "Issues related for using Polonius in the borrow checker"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-28T10:09:01Z", "updated_at": "2020-06-11T18:06:00Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The compiler currently rejects the following code:\r\n```rust\r\nstruct X {\r\n    next: Option<Box<X>>,\r\n}\r\n\r\nfn main() {\r\n    let mut b = Some(Box::new(X { next: None }));\r\n    let mut p = &mut b;\r\n    while let Some(now) = p {\r\n        if true {\r\n            p = &mut now.next;\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nIt complains that `now` double mutably borrows `p.0`.\r\n\r\nThis explanation is not very convincing. If you rewrite it this way:\r\n```rust\r\n    while let Some(now) = p {\r\n        p = &mut now.next;\r\n    }\r\n```\r\nthe compile would happily accept it, and compiler certainly also accepts\r\n```rust\r\n    while let Some(now) = p {\r\n        // empty body\r\n    }\r\n```\r\nso basically whatever the condition of `if` evaluates to, the original code should always be valid in terms of borrowing.\r\n\r\nI'm not sure if I'm missing something, but it seems to me this is a bug of the borrow checker?", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/57165/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/57165/timeline", "performed_via_github_app": null, "state_reason": null}