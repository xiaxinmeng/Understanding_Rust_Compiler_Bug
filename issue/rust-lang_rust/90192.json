{"url": "https://api.github.com/repos/rust-lang/rust/issues/90192", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/90192/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/90192/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/90192/events", "html_url": "https://github.com/rust-lang/rust/issues/90192", "id": 1034101221, "node_id": "I_kwDOAAsO6M49oyHl", "number": 90192, "title": "ICE: issue-74614.rs with debug asserstions, mir-opt-level=3 and polymorphizations", "user": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 46741598, "node_id": "MDU6TGFiZWw0Njc0MTU5OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-test", "name": "E-needs-test", "color": "02e10c", "default": false, "description": "Call for participation: writing correctness tests"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 4199206102, "node_id": "LA_kwDOAAsO6M76SszW", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-debug-assertions", "name": "requires-debug-assertions", "color": "76dcde", "default": false, "description": "This issue requires debug-assertions in some way"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-10-23T07:23:08Z", "updated_at": "2022-11-06T00:58:58Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\nNote that in order to reproduce this, you need a rustc build with debug assertions enabled!\r\n\r\ncode from `./src/test/ui/polymorphization/issue-74614.rs`\r\n\r\n```Rust\r\n// build-pass\r\n\r\nfn test<T>() {\r\n    std::mem::size_of::<T>();\r\n}\r\n\r\npub fn foo<T>(_: T) -> &'static fn() {\r\n    &(test::<T> as fn())\r\n}\r\n\r\nfn outer<T>() {\r\n    foo(|| ());\r\n}\r\n\r\nfn main() {\r\n    outer::<u8>();\r\n}\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.58.0-dev\r\nbinary: rustc\r\ncommit-hash: unknown\r\ncommit-date: unknown\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.58.0-dev\r\nLLVM version: 13.0.0\r\n```\r\nrustc @ 01198792a608b05e624b0127e76dd0753057016c\r\n\r\n\r\n### Error output\r\n`rustc ./src/test/ui/polymorphization/issue-74614.rs  -Zmir-opt-level=3    -Zpolymorphize=on`\r\n\r\n```\r\nthread 'rustc' panicked at 'assertion failed: matches!(ty.kind(), ty :: Param(_))', compiler/rustc_const_eval/src/interpret/util.rs:55:37\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nthread 'rustc' panicked at 'assertion failed: matches!(ty.kind(), ty :: Param(_))', compiler/rustc_const_eval/src/interpret/util.rs:55:37\r\nstack backtrace:\r\n   0:     0x7fac33bcc2ac - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hb9742b8546a91052\r\n   1:     0x7fac33c77d8c - core::fmt::write::h3fddcb644eebfde3\r\n   2:     0x7fac33c10fd5 - std::io::Write::write_fmt::h1a1f2abcba70e3b1\r\n   3:     0x7fac33bcc0cb - std::sys_common::backtrace::print::hc4410d3dd534974f\r\n   4:     0x7fac33c197e0 - std::panicking::default_hook::{{closure}}::heb097f17356ef40d\r\n   5:     0x7fac33c193ce - std::panicking::default_hook::h3a96289c47c5d257\r\n   6:     0x7fac34f26215 - rustc_driver::DEFAULT_HOOK::{{closure}}::{{closure}}::h225178fa6d985d8b\r\n   7:     0x7fac33c19fe0 - std::panicking::rust_panic_with_hook::h47efdb331119e29d\r\n   8:     0x7fac33bce4f2 - std::panicking::begin_panic_handler::{{closure}}::h5049f125401e6ca6\r\n   9:     0x7fac33bcc3c4 - std::sys_common::backtrace::__rust_end_short_backtrace::h05af6e9294f0df69\r\n  10:     0x7fac33c19932 - rust_begin_unwind\r\n  11:     0x7fac33c764e1 - core::panicking::panic_fmt::hbe77619298865d03\r\n  12:     0x7fac33c763bd - core::panicking::panic::h46baf3c669af5f94\r\n  13:     0x7fac3619888e - <rustc_const_eval::interpret::util::ensure_monomorphic_enough::UsedParamsNeedSubstVisitor as rustc_middle::ty::fold::TypeVisitor>::visit_ty::hfe14ca9ed1e7905f\r\n  14:     0x7fac3619818a - rustc_const_eval::interpret::util::ensure_monomorphic_enough::h6c45688b36013c2b\r\n  15:     0x7fac3624784b - rustc_const_eval::interpret::step::<impl rustc_const_eval::interpret::eval_context::InterpCx<M>>::eval_rvalue_into_place::h7cbada67c71e97f2\r\n  16:     0x7fac3624258b - rustc_const_eval::interpret::step::<impl rustc_const_eval::interpret::eval_context::InterpCx<M>>::run::hd36462915a88e6bd\r\n  17:     0x7fac36221320 - rustc_const_eval::const_eval::eval_queries::eval_to_allocation_raw_provider::hcb6d40b820eac213\r\n  18:     0x7fac367765ec - rustc_query_system::query::plumbing::get_query::hf078d05283963f86\r\n  19:     0x7fac36bb7ad6 - <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::eval_to_allocation_raw::hadf6f0dabc541b11\r\n  20:     0x7fac3621f82f - rustc_const_eval::const_eval::eval_queries::eval_to_const_value_raw_provider::he61c2e0a7118f1b4\r\n  21:     0x7fac36703b3c - rustc_query_system::query::plumbing::get_query::h02e8c9cd08509d7e\r\n  22:     0x7fac36bb7b36 - <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::eval_to_const_value_raw::ha35a1cab1e854f95\r\n  23:     0x7fac3621f46d - rustc_const_eval::const_eval::eval_queries::eval_to_const_value_raw_provider::he61c2e0a7118f1b4\r\n  24:     0x7fac36703b3c - rustc_query_system::query::plumbing::get_query::h02e8c9cd08509d7e\r\n  25:     0x7fac36bb7b36 - <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::eval_to_const_value_raw::ha35a1cab1e854f95\r\n  26:     0x7fac37836ec7 - rustc_middle::mir::interpret::queries::<impl rustc_middle::ty::context::TyCtxt>::const_eval_global_id::h8f0768069952119a\r\n  27:     0x7fac378f21bf - rustc_middle::mir::interpret::queries::<impl rustc_middle::ty::context::TyCtxt>::const_eval_resolve::h179c117b4c59655b\r\n  28:     0x7fac37508662 - <rustc_trait_selection::traits::query::normalize::QueryNormalizer as rustc_middle::ty::fold::TypeFolder>::fold_const::hb245c99910ef171f\r\n  29:     0x7fac37508801 - <rustc_trait_selection::traits::query::normalize::QueryNormalizer as rustc_middle::ty::fold::TypeFolder>::fold_mir_const::h3329ed552d54afb8\r\n  30:     0x7fac36337d90 - <rustc_infer::infer::at::At as rustc_trait_selection::traits::query::normalize::AtExt>::normalize::h96d663739f7b49c2\r\n  31:     0x7fac364232cb - rustc_infer::infer::InferCtxtBuilder::enter::h1134294ab10eec48\r\n  32:     0x7fac36348491 - core::ops::function::FnOnce::call_once::h5b98c61ddb99d90e\r\n  33:     0x7fac3675e6c8 - rustc_query_system::query::plumbing::get_query::hba56dd2bea792c90\r\n  34:     0x7fac36bb8862 - <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::normalize_mir_const_after_erasing_regions::h274465631431d4bf\r\n  35:     0x7fac3535f477 - rustc_middle::ty::fold::TypeFoldable::fold_with::hc8e38b3ac42451cb\r\n  36:     0x7fac3536003a - rustc_middle::ty::fold::TypeFoldable::fold_with::hddffd8cd534f7614\r\n  37:     0x7fac3535ea94 - rustc_middle::ty::fold::TypeFoldable::fold_with::hc2af2687f52562db\r\n  38:     0x7fac35359d02 - rustc_middle::ty::fold::TypeFoldable::fold_with::h455d350994463488\r\n  39:     0x7fac3535a6fc - rustc_middle::ty::fold::TypeFoldable::fold_with::h51026ce53c1af3fc\r\n  40:     0x7fac35404f90 - rustc_middle::ty::normalize_erasing_regions::<impl rustc_middle::ty::context::TyCtxt>::normalize_erasing_regions::h82c5a1d5bce4869f\r\n  41:     0x7fac35406d6a - rustc_middle::ty::normalize_erasing_regions::<impl rustc_middle::ty::context::TyCtxt>::subst_and_normalize_erasing_regions::he8f5f16d2a9bb3af\r\n  42:     0x7fac353dc6b7 - rustc_mir_transform::inline::Inliner::try_inlining::hb8e29314c9b76d1a\r\n  43:     0x7fac353d8e3d - rustc_mir_transform::inline::Inliner::process_blocks::hb2fc9a2e5cbc055e\r\n  44:     0x7fac353d829e - <rustc_mir_transform::inline::Inline as rustc_middle::mir::MirPass>::run_pass::hf6a4eb8173b89807\r\n  45:     0x7fac35541a58 - rustc_mir_transform::run_passes::h7dc5f990a06d68a5\r\n  46:     0x7fac35547593 - rustc_mir_transform::optimized_mir::hf2ae489364a60b98\r\n  47:     0x7fac3660155a - rustc_query_system::query::plumbing::try_execute_query::h2d0c9f581c548f89\r\n  48:     0x7fac367582ef - rustc_query_system::query::plumbing::get_query::hb052f6ea106723af\r\n  49:     0x7fac378ef416 - rustc_middle::ty::<impl rustc_middle::ty::context::TyCtxt>::instance_mir::h6924934e59e88960\r\n  50:     0x7fac353d9dba - rustc_mir_transform::inline::Inliner::try_inlining::hb8e29314c9b76d1a\r\n  51:     0x7fac353d8e3d - rustc_mir_transform::inline::Inliner::process_blocks::hb2fc9a2e5cbc055e\r\n  52:     0x7fac353d829e - <rustc_mir_transform::inline::Inline as rustc_middle::mir::MirPass>::run_pass::hf6a4eb8173b89807\r\n  53:     0x7fac35541a58 - rustc_mir_transform::run_passes::h7dc5f990a06d68a5\r\n  54:     0x7fac35547593 - rustc_mir_transform::optimized_mir::hf2ae489364a60b98\r\n  55:     0x7fac3660155a - rustc_query_system::query::plumbing::try_execute_query::h2d0c9f581c548f89\r\n  56:     0x7fac367582ef - rustc_query_system::query::plumbing::get_query::hb052f6ea106723af\r\n  57:     0x7fac378ef416 - rustc_middle::ty::<impl rustc_middle::ty::context::TyCtxt>::instance_mir::h6924934e59e88960\r\n  58:     0x7fac352dc401 - rustc_monomorphize::collector::collect_neighbours::h536654654527a903\r\n  59:     0x7fac352d1b84 - rustc_monomorphize::collector::collect_items_rec::h9918e4106a823ad2\r\n  60:     0x7fac3529adc2 - rustc_session::utils::<impl rustc_session::session::Session>::time::h46f5b2cc16c744ea\r\n  61:     0x7fac352d0569 - rustc_monomorphize::collector::collect_crate_mono_items::hd6b8da447f3d69d4\r\n  62:     0x7fac352f2470 - rustc_monomorphize::partitioning::collect_and_partition_mono_items::hf3e18df16c46a331\r\n  63:     0x7fac3661babc - rustc_query_system::query::plumbing::try_execute_query::h61043c045b9b17be\r\n  64:     0x7fac367502ed - rustc_query_system::query::plumbing::get_query::ha55955bfbd52bc65\r\n  65:     0x7fac36bb870e - <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::collect_and_partition_mono_items::hc3f40c33cf3fdcc4\r\n  66:     0x7fac351c494e - rustc_codegen_ssa::base::codegen_crate::h152261da58a2bcb6\r\n  67:     0x7fac350f5e0b - <rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::CodegenBackend>::codegen_crate::hc019a98ce10262d7\r\n  68:     0x7fac3508fb9f - rustc_interface::queries::Queries::ongoing_codegen::h67423ffa6421921b\r\n  69:     0x7fac34dd09de - std::sys_common::backtrace::__rust_begin_short_backtrace::hc801dc55c4fb9438\r\n  70:     0x7fac34eed450 - core::ops::function::FnOnce::call_once{{vtable.shim}}::h334b669fc5472cf7\r\n  71:     0x7fac33c1d943 - std::sys::unix::thread::Thread::new::thread_start::h5b3c5f92bbe007fe\r\n  72:     0x7fac30207259 - start_thread\r\n  73:     0x7fac339f55e3 - __GI___clone\r\n  74:                0x0 - <unknown>\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.58.0-dev running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -Z mir-opt-level=3 -Z polymorphize=on\r\n\r\nquery stack during panic:\r\n#0 [eval_to_allocation_raw] const-evaluating + checking `foo::promoted[0]`\r\n#1 [eval_to_const_value_raw] simplifying constant for the type system `foo::promoted[0]`\r\n#2 [eval_to_const_value_raw] simplifying constant for the type system `foo::promoted[0]`\r\n#3 [normalize_mir_const_after_erasing_regions] normalizing `foo::<[closure@./src/test/ui/polymorphization/issue-74614.rs:13:9: 13:14]>::promoted[0]`\r\n#4 [optimized_mir] optimizing MIR for `outer`\r\n#5 [optimized_mir] optimizing MIR for `main`\r\n#6 [collect_and_partition_mono_items] collect_and_partition_mono_items\r\nend of query stack\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/90192/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/90192/timeline", "performed_via_github_app": null, "state_reason": null}