{"url": "https://api.github.com/repos/rust-lang/rust/issues/41985", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/41985/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/41985/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/41985/events", "html_url": "https://github.com/rust-lang/rust/issues/41985", "id": 228502906, "node_id": "MDU6SXNzdWUyMjg1MDI5MDY=", "number": 41985, "title": "Lack of HRTB produces nonsense error message, correct syntax isn't even mentioned in The Book", "user": {"login": "chrivers", "id": 644439, "node_id": "MDQ6VXNlcjY0NDQzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/644439?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrivers", "html_url": "https://github.com/chrivers", "followers_url": "https://api.github.com/users/chrivers/followers", "following_url": "https://api.github.com/users/chrivers/following{/other_user}", "gists_url": "https://api.github.com/users/chrivers/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrivers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrivers/subscriptions", "organizations_url": "https://api.github.com/users/chrivers/orgs", "repos_url": "https://api.github.com/users/chrivers/repos", "events_url": "https://api.github.com/users/chrivers/events{/privacy}", "received_events_url": "https://api.github.com/users/chrivers/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}, {"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1596121013, "node_id": "MDU6TGFiZWwxNTk2MTIxMDEz", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-confusing", "name": "D-confusing", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error that should be reworked"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-05-13T21:56:10Z", "updated_at": "2020-07-13T23:26:05Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "I hit a weird error case today. It turns out, I hit a problem with lifetimes where the only solution was HRTBs (Higher-Ranked Trait Bounds).\r\n\r\nI've tried to condense the reproduction sample as much as possible, without it being utterly abstract:\r\n\r\n```rust\r\nuse std::io::Result;\r\nuse std::fmt::*;\r\n\r\npub trait CanDecode where Self: Sized { fn read(&mut Decoder) -> Result<Self>; }\r\npub trait CanEncode { fn write(self, &mut Encoder) -> Result<()>; }\r\n\r\npub struct Decoder {}\r\npub struct Encoder {}\r\n\r\n\r\n#[derive(Debug)]\r\nstruct DataType {}\r\n\r\nimpl CanDecode for DataType { fn read(_: &mut Decoder) -> Result<Self> { Ok(DataType {}) } }\r\nimpl<'a> CanEncode for &'a DataType { fn write(self, _: &mut Encoder) -> Result<()> { Ok(()) } }\r\n\r\nfn main()\r\n{\r\n    parse::<DataType>().unwrap();\r\n}\r\n\r\nfn parse<'a, P>() -> Result<()> where\r\n    P: CanDecode + Debug,\r\n\r\n  /* attempted syntax: */\r\n&'a P: CanEncode,\r\n    P: 'a,\r\n\r\n  /* correct syntax */\r\n  // for <'x> &'x P: CanEncode,\r\n\r\n{\r\n    let mut rdr = Decoder {};\r\n    let frame = P::read(&mut rdr)?;\r\n    let mut wtr = Encoder {};\r\n    frame.write(&mut wtr)?;\r\n    Ok(())\r\n}\r\n```\r\n\r\nCompiling this code:\r\n\r\n```\r\n$ rustc --version\r\nrustc 1.19.0-nightly (e17a1227a 2017-05-12)\r\n\r\n$ rustc hrtb-ergonomics.rs\r\nerror: `frame` does not live long enough\r\n  --> hrtb-ergonomics.rs:36:5\r\n   |\r\n36 |     frame.write(&mut wtr)?;\r\n   |     ^^^^^ does not live long enough\r\n37 |     Ok(())\r\n38 | }\r\n   | - borrowed value only lives until here\r\n   |\r\nnote: borrowed value must be valid for the lifetime 'a as defined on the body at 32:0...\r\n  --> hrtb-ergonomics.rs:32:1\r\n   |\r\n32 | / {\r\n33 | |     let mut rdr = Decoder {};\r\n34 | |     let frame = P::read(&mut rdr)?;\r\n35 | |     let mut wtr = Encoder {};\r\n36 | |     frame.write(&mut wtr)?;\r\n37 | |     Ok(())\r\n38 | | }\r\n   | |_^\r\n\r\nerror: aborting due to previous error\r\n```\r\n\r\nReplacing the \"attempted code\" with the \"correct syntax\" comment makes this compile fine.\r\n\r\nFor me, this points towards several sub-issues:\r\n\r\n 1) The error message is wrong - it should work just fine according to rustc. It's clearly not ergonomic, at least.\r\n\r\n 1) HRTBs are not mentioned at all in the book. The `for<'a>` syntax was completely new to me, when I heard about it on IRC. The Nomicon mentions this (with the comment \"There aren't many places outside of the Fn traits where we encounter HRTBs, and even for those we have a nice magic sugar for the common cases.\")\r\n\r\n 1) The code is clearly fine (except for the lifetime annotations), but I don't understand *why* the non-HRTB version doesn't compile. The reference is alive inside the parse() fn, which seems fine to me?\r\n\r\n 1) It seems odd to me that I hit a feature that is so obscure that the Nomicon mentions that there \"aren't many places\" where it is encountered. I don't feel like my code is doing anything super obscure. Is there some other much easier way to express this, that I am missing?\r\n\r\nIf this issue should be split up into multiple issues, I'd be happy to help - please advice.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/41985/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/41985/timeline", "performed_via_github_app": null, "state_reason": null}