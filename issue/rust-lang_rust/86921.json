{"url": "https://api.github.com/repos/rust-lang/rust/issues/86921", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/86921/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/86921/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/86921/events", "html_url": "https://github.com/rust-lang/rust/issues/86921", "id": 938505559, "node_id": "MDU6SXNzdWU5Mzg1MDU1NTk=", "number": 86921, "title": "Make lifetime elision rules for closures consistent with lifetime elision rules for functions", "user": {"login": "bstrie", "id": 865233, "node_id": "MDQ6VXNlcjg2NTIzMw==", "avatar_url": "https://avatars.githubusercontent.com/u/865233?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bstrie", "html_url": "https://github.com/bstrie", "followers_url": "https://api.github.com/users/bstrie/followers", "following_url": "https://api.github.com/users/bstrie/following{/other_user}", "gists_url": "https://api.github.com/users/bstrie/gists{/gist_id}", "starred_url": "https://api.github.com/users/bstrie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bstrie/subscriptions", "organizations_url": "https://api.github.com/users/bstrie/orgs", "repos_url": "https://api.github.com/users/bstrie/repos", "events_url": "https://api.github.com/users/bstrie/events{/privacy}", "received_events_url": "https://api.github.com/users/bstrie/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}, {"id": 122406831, "node_id": "MDU6TGFiZWwxMjI0MDY4MzE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-closures", "name": "A-closures", "color": "f7e101", "default": false, "description": "Area: closures (`|args| { .. }`)"}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 604454086, "node_id": "MDU6TGFiZWw2MDQ0NTQwODY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-inference", "name": "A-inference", "color": "f7e101", "default": false, "description": "Area: Type inference"}, {"id": 1622913351, "node_id": "MDU6TGFiZWwxNjIyOTEzMzUx", "url": "https://api.github.com/repos/rust-lang/rust/labels/lang-team-202x-edition", "name": "lang-team-202x-edition", "color": "fcbff6", "default": false, "description": "Something we may consider if we do another edition"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2021-07-07T05:37:15Z", "updated_at": "2021-12-20T01:20:16Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The following code does not compile:\r\n```rust\r\nfn function(x: &i32) -> &i32 { x } // ok\r\nlet closure = |x: &i32| -> &i32 { x }; // fails\r\n```\r\nOutput:\r\n```\r\nerror: lifetime may not live long enough\r\n --> src/main.rs:3:35\r\n  |\r\n3 | let closure = |x: &i32| -> &i32 { x };\r\n  |                   -        -      ^ returning this value requires that `'1` must outlive `'2`\r\n  |                   |        |\r\n  |                   |        let's call the lifetime of this reference `'2`\r\n  |                   let's call the lifetime of this reference `'1`\r\n```\r\nFor `function`, the lifetime of the return type is properly inferred to be equal to the only input lifetime, as per the lifetime elision rules:\r\n\r\n> If there is exactly one lifetime used in the parameters (elided or not), that lifetime is assigned to all elided output lifetimes.\r\n\r\nHowever, for `closure` this is not done, and the return type is assigned a distinct lifetime from the input. AFAIK it is only an accident of history that closures do not have the same lifetime elision rules as functions. This would be a breaking change to fix, but should be able to be done over an edition.\r\n\r\n---\r\n\r\nHere's a simplified example of code that compiles today that might break if the function elision rules were applied to closures:\r\n\r\n```rust\r\nfn foo(s: &str) -> &str {\r\n    let bar = |_| { s };\r\n    bar(&String::new())\r\n}\r\n```\r\n\r\nSee https://github.com/rust-lang/rust/issues/56537 for prior discussion.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/86921/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/86921/timeline", "performed_via_github_app": null, "state_reason": null}