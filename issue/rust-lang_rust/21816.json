{"url": "https://api.github.com/repos/rust-lang/rust/issues/21816", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/21816/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/21816/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/21816/events", "html_url": "https://github.com/rust-lang/rust/issues/21816", "id": 56134028, "node_id": "MDU6SXNzdWU1NjEzNDAyOA==", "number": 21816, "title": "std::cmp::max vs std::num::Float vs NaN", "user": {"login": "kornelski", "id": 72159, "node_id": "MDQ6VXNlcjcyMTU5", "avatar_url": "https://avatars.githubusercontent.com/u/72159?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kornelski", "html_url": "https://github.com/kornelski", "followers_url": "https://api.github.com/users/kornelski/followers", "following_url": "https://api.github.com/users/kornelski/following{/other_user}", "gists_url": "https://api.github.com/users/kornelski/gists{/gist_id}", "starred_url": "https://api.github.com/users/kornelski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kornelski/subscriptions", "organizations_url": "https://api.github.com/users/kornelski/orgs", "repos_url": "https://api.github.com/users/kornelski/repos", "events_url": "https://api.github.com/users/kornelski/events{/privacy}", "received_events_url": "https://api.github.com/users/kornelski/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-01-31T18:28:45Z", "updated_at": "2015-02-15T18:00:19Z", "closed_at": "2015-02-15T17:59:56Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It's _werid_ that `std::cmp::max` can't compare `f64` numbers. I know that strictly speaking IEEE floats don't have total order this function expects, but still it's surprising (and `partial_max` is awkward to use).\n\nAnd there's `std::num::Float::max` which works with `f64` just fine (the docs don't even say how `NaN` is handled).\n\nIt bugs me that the two versions of `max` are not consistent in their strictness, and that [the first-and-most-obvious `max` function](http://doc.rust-lang.org/std/?search=max) in the stdlib \"doesn't work\" with a basic type in the language.\n\nMy suggestion:\n- Rename the `max` version that only allows `Ord` to something else, like `total_max` or `strict_max`.\n- Implement `std::cmp::max` for floating point numbers, so that `a.max(b)` is consistent with `max(a,b)`.\n", "closed_by": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/21816/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/21816/timeline", "performed_via_github_app": null, "state_reason": "completed"}