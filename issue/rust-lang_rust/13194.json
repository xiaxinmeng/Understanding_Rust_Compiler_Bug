{"url": "https://api.github.com/repos/rust-lang/rust/issues/13194", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/13194/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/13194/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/13194/events", "html_url": "https://github.com/rust-lang/rust/issues/13194", "id": 30439690, "node_id": "MDU6SXNzdWUzMDQzOTY5MA==", "number": 13194, "title": "No aliasable, non-nullable, mutable pointers", "user": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2014-03-29T08:20:17Z", "updated_at": "2014-12-29T11:02:28Z", "closed_at": "2014-12-29T11:02:28Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "In this situation:\n\n``` rust\n// type jit_context_t = *mut Struct__jit_context;\npub struct Context {\n    priv jcx: ffi::jit_context_t\n}\n\nimpl Context {\n    /// Create a new Context. Returns None on out-of-memory (as libjit does)\n    pub fn new() -> Option<Context> {\n        unsafe {\n            ffi::jit_init();\n            let x: ffi::jit_context_t = ffi::jit_context_create();\n            if x == null() {\n                None\n            } else {\n                Some(Context { jcx: x })\n            }\n        }\n    }\n}\n```\n\nIdeally I'd be storing `jcx` as some non-nullable pointer, such that `Option<Context>` could be a single word. Unfortunately there is no type usable today. `Option<*mut T>` is 16 bytes on x86_64, and will always be at least one byte more than just the pointer. `Option<~T>` will be 8 bytes, but needs handling about the destructor and also has aliasability guarantees, which will be invalidated by the underlying libjit code. `Option<&'static mut T>` also has aliasing concerns, on top of nasty lifetime hack.\n\nThere is no pointer type usable to get zero overhead in this. Given the decision on #10571 (which I agree with!) it would be nice to have something usable here. Perhaps even a `#[not_null]` attribute, per-field, could be usable?\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/13194/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/13194/timeline", "performed_via_github_app": null, "state_reason": "completed"}