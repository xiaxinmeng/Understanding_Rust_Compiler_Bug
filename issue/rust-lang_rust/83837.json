{"url": "https://api.github.com/repos/rust-lang/rust/issues/83837", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/83837/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/83837/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/83837/events", "html_url": "https://github.com/rust-lang/rust/issues/83837", "id": 849792205, "node_id": "MDU6SXNzdWU4NDk3OTIyMDU=", "number": 83837, "title": "ICE: 'Index `320440878` must be in bounds of vector type `u16`: `[0, 2)`', compiler/rustc_mir/src/interpret/intrinsics.rs:419:17", "user": {"login": "chengniansun", "id": 4554271, "node_id": "MDQ6VXNlcjQ1NTQyNzE=", "avatar_url": "https://avatars.githubusercontent.com/u/4554271?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chengniansun", "html_url": "https://github.com/chengniansun", "followers_url": "https://api.github.com/users/chengniansun/followers", "following_url": "https://api.github.com/users/chengniansun/following{/other_user}", "gists_url": "https://api.github.com/users/chengniansun/gists{/gist_id}", "starred_url": "https://api.github.com/users/chengniansun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chengniansun/subscriptions", "organizations_url": "https://api.github.com/users/chengniansun/orgs", "repos_url": "https://api.github.com/users/chengniansun/repos", "events_url": "https://api.github.com/users/chengniansun/events{/privacy}", "received_events_url": "https://api.github.com/users/chengniansun/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-04-04T04:01:08Z", "updated_at": "2021-11-10T13:32:34Z", "closed_at": "2021-11-10T13:32:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\n```Rust\r\n#![feature(staged_api)]\r\nstruct u16x2(u16, u16);\r\nextern \"platform-intrinsic\" {\r\n    #[rustc_const_stable(feature = \"foo\", since = \"1.3.37\")]\r\n    fn simd_insert(x: T, idx: u32, val: U);\r\n}\r\nfn main() {\r\n    const U: u16x2 = u16x2(13, 14);\r\n    const { simd_insert(U, 0x1319_8a2e, 42_u16) }\r\n}\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.53.0-nightly (0b417ab5c 2021-04-03)\r\nbinary: rustc\r\ncommit-hash: 0b417ab5cdfdedffd74fb22cf22d27033c851304\r\ncommit-date: 2021-04-03\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.53.0-nightly\r\nLLVM version: 12.0.0\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nerror[E0412]: cannot find type `T` in this scope\r\n --> perses_node_priority_with_dfs_delta_reduced_mutant.rs:5:23\r\n  |\r\n5 |     fn simd_insert(x: T, idx: u32, val: U);\r\n  |                       ^ not found in this scope\r\n\r\nerror[E0412]: cannot find type `U` in this scope\r\n --> perses_node_priority_with_dfs_delta_reduced_mutant.rs:5:41\r\n  |\r\n5 |     fn simd_insert(x: T, idx: u32, val: U);\r\n  |                                         ^ not found in this scope\r\n\r\nerror[E0658]: inline-const is experimental\r\n --> perses_node_priority_with_dfs_delta_reduced_mutant.rs:9:5\r\n  |\r\n9 |     const { simd_insert(U, 0x1319_8a2e, 42_u16) }\r\n  |     ^^^^^\r\n  |\r\n  = note: see issue #76001 <https://github.com/rust-lang/rust/issues/76001> for more information\r\n  = help: add `#![feature(inline_const)]` to the crate attributes to enable\r\n\r\nerror[E0658]: platform intrinsics are experimental and possibly buggy\r\n --> perses_node_priority_with_dfs_delta_reduced_mutant.rs:3:8\r\n  |\r\n3 | extern \"platform-intrinsic\" {\r\n  |        ^^^^^^^^^^^^^^^^^^^^\r\n  |\r\n  = note: see issue #27731 <https://github.com/rust-lang/rust/issues/27731> for more information\r\n  = help: add `#![feature(platform_intrinsics)]` to the crate attributes to enable\r\n\r\nwarning: type `u16x2` should have an upper camel case name\r\n --> perses_node_priority_with_dfs_delta_reduced_mutant.rs:2:8\r\n  |\r\n2 | struct u16x2(u16, u16);\r\n  |        ^^^^^ help: convert the identifier to upper camel case (notice the capitalization): `U16x2`\r\n  |\r\n  = note: `#[warn(non_camel_case_types)]` on by default\r\n\r\nerror[E0094]: intrinsic has wrong number of type parameters: found 0, expected 2\r\n --> perses_node_priority_with_dfs_delta_reduced_mutant.rs:5:19\r\n  |\r\n5 |     fn simd_insert(x: T, idx: u32, val: U);\r\n  |                   ^ expected 2 type parameter\r\n\r\nthread 'rustc' panicked at 'Index `320440878` must be in bounds of vector type `u16`: `[0, 2)`', compiler/rustc_mir/src/interpret/intrinsics.rs:419:17\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.53.0-nightly (0b417ab5c 2021-04-03) running on x86_64-unknown-linux-gnu\r\n\r\nquery stack during panic:\r\n#0 [eval_to_allocation_raw] const-evaluating + checking `main::{constant#0}`\r\n#1 [eval_to_const_value_raw] simplifying constant for the type system `main::{constant#0}`\r\nend of query stack\r\nerror: aborting due to 5 previous errors; 1 warning emitted\r\n\r\nSome errors have detailed explanations: E0094, E0412, E0658.\r\nFor more information about an error, try `rustc --explain E0094`.\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nerror[E0412]: cannot find type `T` in this scope\r\n --> perses_node_priority_with_dfs_delta_reduced_mutant.rs:5:23\r\n  |\r\n5 |     fn simd_insert(x: T, idx: u32, val: U);\r\n  |                       ^ not found in this scope\r\n\r\nerror[E0412]: cannot find type `U` in this scope\r\n --> perses_node_priority_with_dfs_delta_reduced_mutant.rs:5:41\r\n  |\r\n5 |     fn simd_insert(x: T, idx: u32, val: U);\r\n  |                                         ^ not found in this scope\r\n\r\nerror[E0658]: inline-const is experimental\r\n --> perses_node_priority_with_dfs_delta_reduced_mutant.rs:9:5\r\n  |\r\n9 |     const { simd_insert(U, 0x1319_8a2e, 42_u16) }\r\n  |     ^^^^^\r\n  |\r\n  = note: see issue #76001 <https://github.com/rust-lang/rust/issues/76001> for more information\r\n  = help: add `#![feature(inline_const)]` to the crate attributes to enable\r\n\r\nerror[E0658]: platform intrinsics are experimental and possibly buggy\r\n --> perses_node_priority_with_dfs_delta_reduced_mutant.rs:3:8\r\n  |\r\n3 | extern \"platform-intrinsic\" {\r\n  |        ^^^^^^^^^^^^^^^^^^^^\r\n  |\r\n  = note: see issue #27731 <https://github.com/rust-lang/rust/issues/27731> for more information\r\n  = help: add `#![feature(platform_intrinsics)]` to the crate attributes to enable\r\n\r\nwarning: type `u16x2` should have an upper camel case name\r\n --> perses_node_priority_with_dfs_delta_reduced_mutant.rs:2:8\r\n  |\r\n2 | struct u16x2(u16, u16);\r\n  |        ^^^^^ help: convert the identifier to upper camel case (notice the capitalization): `U16x2`\r\n  |\r\n  = note: `#[warn(non_camel_case_types)]` on by default\r\n\r\nerror[E0094]: intrinsic has wrong number of type parameters: found 0, expected 2\r\n --> perses_node_priority_with_dfs_delta_reduced_mutant.rs:5:19\r\n  |\r\n5 |     fn simd_insert(x: T, idx: u32, val: U);\r\n  |                   ^ expected 2 type parameter\r\n\r\nthread 'rustc' panicked at 'Index `320440878` must be in bounds of vector type `u16`: `[0, 2)`', compiler/rustc_mir/src/interpret/intrinsics.rs:419:17\r\nstack backtrace:\r\n   0: rust_begin_unwind\r\n             at /rustc/0b417ab5cdfdedffd74fb22cf22d27033c851304/library/std/src/panicking.rs:493:5\r\n   1: std::panicking::begin_panic_fmt\r\n             at /rustc/0b417ab5cdfdedffd74fb22cf22d27033c851304/library/std/src/panicking.rs:435:5\r\n   2: rustc_mir::interpret::intrinsics::<impl rustc_mir::interpret::eval_context::InterpCx<M>>::emulate_intrinsic\r\n   3: <rustc_mir::const_eval::machine::CompileTimeInterpreter as rustc_mir::interpret::machine::Machine>::call_intrinsic\r\n   4: rustc_mir::interpret::terminator::<impl rustc_mir::interpret::eval_context::InterpCx<M>>::eval_fn_call\r\n   5: rustc_mir::interpret::step::<impl rustc_mir::interpret::eval_context::InterpCx<M>>::run\r\n   6: rustc_mir::const_eval::eval_queries::eval_to_allocation_raw_provider\r\n   7: rustc_query_impl::<impl rustc_query_system::query::config::QueryAccessors<rustc_query_impl::plumbing::QueryCtxt> for rustc_query_impl::queries::eval_to_allocation_raw>::compute\r\n   8: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n   9: rustc_data_structures::stack::ensure_sufficient_stack\r\n  10: rustc_query_system::query::plumbing::force_query_with_job\r\n  11: rustc_query_system::query::plumbing::get_query_impl\r\n  12: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::eval_to_allocation_raw\r\n  13: rustc_mir::const_eval::eval_queries::eval_to_const_value_raw_provider\r\n  14: rustc_query_impl::<impl rustc_query_system::query::config::QueryAccessors<rustc_query_impl::plumbing::QueryCtxt> for rustc_query_impl::queries::eval_to_const_value_raw>::compute\r\n  15: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  16: rustc_data_structures::stack::ensure_sufficient_stack\r\n  17: rustc_query_system::query::plumbing::force_query_with_job\r\n  18: rustc_query_system::query::plumbing::get_query_impl\r\n  19: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::eval_to_const_value_raw\r\n  20: rustc_middle::mir::interpret::queries::<impl rustc_middle::ty::context::TyCtxt>::const_eval_global_id\r\n  21: rustc_middle::mir::interpret::queries::<impl rustc_middle::ty::context::TyCtxt>::const_eval_resolve\r\n  22: rustc_infer::infer::InferCtxt::const_eval_resolve\r\n  23: rustc_trait_selection::traits::const_evaluatable::is_const_evaluatable\r\n  24: rustc_trait_selection::traits::fulfill::FulfillProcessor::progress_changed_obligations\r\n  25: rustc_data_structures::obligation_forest::ObligationForest<O>::process_obligations\r\n  26: <rustc_trait_selection::traits::fulfill::FulfillmentContext as rustc_infer::traits::engine::TraitEngine>::select_where_possible\r\n  27: rustc_infer::infer::InferCtxtBuilder::enter\r\n  28: rustc_typeck::check::typeck\r\n  29: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  30: rustc_data_structures::stack::ensure_sufficient_stack\r\n  31: rustc_query_system::query::plumbing::force_query_with_job\r\n  32: rustc_query_system::query::plumbing::get_query_impl\r\n  33: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::typeck\r\n  34: rustc_middle::ty::<impl rustc_middle::ty::context::TyCtxt>::par_body_owners\r\n  35: rustc_typeck::check::typeck_item_bodies\r\n  36: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  37: rustc_data_structures::stack::ensure_sufficient_stack\r\n  38: rustc_query_system::query::plumbing::force_query_with_job\r\n  39: rustc_query_system::query::plumbing::get_query_impl\r\n  40: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::typeck_item_bodies\r\n  41: rustc_session::utils::<impl rustc_session::session::Session>::time\r\n  42: rustc_typeck::check_crate\r\n  43: rustc_interface::passes::analysis\r\n  44: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  45: rustc_data_structures::stack::ensure_sufficient_stack\r\n  46: rustc_query_system::query::plumbing::force_query_with_job\r\n  47: rustc_query_system::query::plumbing::get_query_impl\r\n  48: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::analysis\r\n  49: rustc_interface::passes::QueryContext::enter\r\n  50: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n  51: rustc_span::with_source_map\r\n  52: rustc_interface::interface::create_compiler_and_run\r\n  53: scoped_tls::ScopedKey<T>::set\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.53.0-nightly (0b417ab5c 2021-04-03) running on x86_64-unknown-linux-gnu\r\n\r\nquery stack during panic:\r\n#0 [eval_to_allocation_raw] const-evaluating + checking `main::{constant#0}`\r\n#1 [eval_to_const_value_raw] simplifying constant for the type system `main::{constant#0}`\r\n#2 [typeck] type-checking `main`\r\n#3 [typeck_item_bodies] type-checking all item bodies\r\n#4 [analysis] running analysis passes on this crate\r\nend of query stack\r\nerror: aborting due to 5 previous errors; 1 warning emitted\r\n\r\nSome errors have detailed explanations: E0094, E0412, E0658.\r\nFor more information about an error, try `rustc --explain E0094`.\r\n```\r\n\r\n</p>\r\n</details>", "closed_by": {"login": "Alexendoo", "id": 1830331, "node_id": "MDQ6VXNlcjE4MzAzMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1830331?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Alexendoo", "html_url": "https://github.com/Alexendoo", "followers_url": "https://api.github.com/users/Alexendoo/followers", "following_url": "https://api.github.com/users/Alexendoo/following{/other_user}", "gists_url": "https://api.github.com/users/Alexendoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/Alexendoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Alexendoo/subscriptions", "organizations_url": "https://api.github.com/users/Alexendoo/orgs", "repos_url": "https://api.github.com/users/Alexendoo/repos", "events_url": "https://api.github.com/users/Alexendoo/events{/privacy}", "received_events_url": "https://api.github.com/users/Alexendoo/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/83837/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/83837/timeline", "performed_via_github_app": null, "state_reason": "completed"}