{"url": "https://api.github.com/repos/rust-lang/rust/issues/66228", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/66228/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/66228/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/66228/events", "html_url": "https://github.com/rust-lang/rust/issues/66228", "id": 520107559, "node_id": "MDU6SXNzdWU1MjAxMDc1NTk=", "number": 66228, "title": "E0107: \"expected 1 type argument\" can be read in two opposite ways: as \"this needs to *have* 1 type argument\" and \"this needs to *be* 1 type argument\"", "user": {"login": "sietse", "id": 271843, "node_id": "MDQ6VXNlcjI3MTg0Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/271843?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sietse", "html_url": "https://github.com/sietse", "followers_url": "https://api.github.com/users/sietse/followers", "following_url": "https://api.github.com/users/sietse/following{/other_user}", "gists_url": "https://api.github.com/users/sietse/gists{/gist_id}", "starred_url": "https://api.github.com/users/sietse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sietse/subscriptions", "organizations_url": "https://api.github.com/users/sietse/orgs", "repos_url": "https://api.github.com/users/sietse/repos", "events_url": "https://api.github.com/users/sietse/events{/privacy}", "received_events_url": "https://api.github.com/users/sietse/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1183099971, "node_id": "MDU6TGFiZWwxMTgzMDk5OTcx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-suggestion-diagnostics", "name": "A-suggestion-diagnostics", "color": "f7e101", "default": false, "description": "Area: suggestions generated by the compiler applied by cargo fix"}, {"id": 1596122130, "node_id": "MDU6TGFiZWwxNTk2MTIyMTMw", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-papercut", "name": "D-papercut", "color": "c9f7a3", "default": false, "description": "Diagnostic error that needs small tweaks"}, {"id": 1596122811, "node_id": "MDU6TGFiZWwxNTk2MTIyODEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-newcomer-roadblock", "name": "D-newcomer-roadblock", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error hard to understand for new users"}], "state": "closed", "locked": false, "assignee": {"login": "rustbot", "id": 47979223, "node_id": "MDQ6VXNlcjQ3OTc5MjIz", "avatar_url": "https://avatars.githubusercontent.com/u/47979223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rustbot", "html_url": "https://github.com/rustbot", "followers_url": "https://api.github.com/users/rustbot/followers", "following_url": "https://api.github.com/users/rustbot/following{/other_user}", "gists_url": "https://api.github.com/users/rustbot/gists{/gist_id}", "starred_url": "https://api.github.com/users/rustbot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rustbot/subscriptions", "organizations_url": "https://api.github.com/users/rustbot/orgs", "repos_url": "https://api.github.com/users/rustbot/repos", "events_url": "https://api.github.com/users/rustbot/events{/privacy}", "received_events_url": "https://api.github.com/users/rustbot/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rustbot", "id": 47979223, "node_id": "MDQ6VXNlcjQ3OTc5MjIz", "avatar_url": "https://avatars.githubusercontent.com/u/47979223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rustbot", "html_url": "https://github.com/rustbot", "followers_url": "https://api.github.com/users/rustbot/followers", "following_url": "https://api.github.com/users/rustbot/following{/other_user}", "gists_url": "https://api.github.com/users/rustbot/gists{/gist_id}", "starred_url": "https://api.github.com/users/rustbot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rustbot/subscriptions", "organizations_url": "https://api.github.com/users/rustbot/orgs", "repos_url": "https://api.github.com/users/rustbot/repos", "events_url": "https://api.github.com/users/rustbot/events{/privacy}", "received_events_url": "https://api.github.com/users/rustbot/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2019-11-08T16:25:28Z", "updated_at": "2021-01-13T23:24:38Z", "closed_at": "2021-01-13T23:24:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Summary\r\n\r\nWhen you have nested type arguments, underlining an inner type argument and saying 'expected 1 type argument' does not obviously mean \"expected [this to have] 1 type arg (but it hasn't got any)\": it can also be read as \"expected [this  to be] 1 type arg (but it isn't one)\".\r\n\r\n## Minimal complete example\r\nCode that gives a confusing error message:\r\n\r\n```rust\r\nuse std::sync::Arc;\r\nuse std::thread::JoinHandle;\r\n\r\nstruct Test {\r\n    // error on this line\r\n    handle1: Arc<JoinHandle>,\r\n}\r\n\r\nfn main() {\r\n}\r\n```\r\n\r\nThis results in the following error message:\r\n\r\n```\r\nerror[E0107]: wrong number of type arguments: expected 1, found 0\r\n --> error-wrong-number-of-type-args.rs:5:17\r\n  |\r\n6 |     handle1: Arc<JoinHandle>\r\n  |                  ^^^^^^^^^^ expected 1 type argument\r\n```\r\n\r\n## Expected and observed interpretation by the user\r\n\r\n**Expected interpretation:** `rustc` wanted me to interpret underlining + \"expected 1 type argument\" as \"This should *have* 1 type argument\". In other words, this was the desired train of thought:\r\n> JoinHandle should have 1 type argument, rustc is pointing out to you which expression (JoinHandle plus its 0 or more type arguments) needs extra type arguments.\r\n\r\n**Observed interpretation:** I interpreted underlining + \"expected 1 type argument\" +  as \"There should *be* 1 type argument here\".** That led to the following train of thought:\r\n\r\n> `Arc` should have 1 type argument, and rustc is pointing out to me where the type argument should go. So JoinHandle is not a type argument? But why?! :confused: I thought JoinHandle was a type argument... [I then spent 30 minutes going through lessons and docs on type arguments, Arc, and JoinHandle, looking for clues. I only realised the answer when I opened the provided solution code to compare.]\r\n\r\nSome notes on the user persona: the user (me, in this case) was somebody with about 10 years experience programming R and Python; they had read The Rust Programming Language; they were working on [lesson 7 of Michael Snoyman's Rust Crash Course](https://www.snoyman.com/blog/2018/12/rust-crash-course-07-async-futures-tokio) when they encountered this error message; they lurked sometimes on the /r/rust subreddit; and they had no experience of Rust beyond that.\r\n\r\n## Not as problematic when user has passed at least 1 type arg\r\n\r\nThis particular form of the E0107 error message is printed whenever `provided type args < required type args`. But it's less ambiguous when the user has passed at least one type arg, because then the entire expression (the type and its too-few args) gets underlined:\r\n\r\n```\r\n --> error-wrong-number-of-type-args.rs:7:18\r\n  |\r\n6 |     handle2: Arc<Result<i32>>\r\n  |                  ^^^^^^^^^^^ expected 2 type arguments\r\n```\r\n\r\n## Possible fixes\r\n\r\n### Potential fix 1: change error phrasing to \"expected this to have 1 type argument\"\r\n\r\nThis fix is (a) an improvement on the current message, and (b) easy to implement -- a one-line change in the code. The message takes a (little!) bit more work to parse, when you break it down: knowing what 'this' refers to relies on reading the underlining and mentally discarding the type args.\r\n\r\n```\r\n  |\r\n6 |     handle1: Arc<JoinHandle>\r\n  |                  ^^^^^^^^^^ expected this to have 1 type argument\r\n```\r\n\r\n```\r\n  |\r\n6 |     handle2: Arc<Result<i32>>\r\n  |                  ^^^^^^^^^^^ expected this to have 2 type arguments\r\n```\r\n\r\n### Potential fix 2: mention the type's name in the error message\r\n\r\nI like this fix a lot better, because it makes the error message self-contained and unambiguous while keeping it short. But getting the type name into the string requires more intimate knowledge of the error-reporting code, so you need a bit more codebase knowledge to fix it.\r\n\r\n```\r\n  |\r\n6 |     handle1: Arc<JoinHandle>\r\n  |                  ^^^^^^^^^^ expected JoinHandle to have 1 type argument\r\n```\r\n\r\n```\r\n  |\r\n6 |     handle2: Arc<Result<i32>>\r\n  |                  ^^^^^^^^^^^ expected Result to have 2 type arguments\r\n```\r\n\r\n### Who could do the work\r\n\r\nThe relevant code is in [astconv.rs#L389-L397](https://github.com/rust-lang/rust/blob/ad550b8ef32e336ad74a87669de041eba9f7d1c6/src/librustc_typeck/astconv.rs#L389-L397)\r\nIf we choose fix 1, I could create a pull request for that -- it's a one-line fix.\r\n\r\nFor fix 2, I'd be willing to help out, but at the moment I'm not sure how to obtain the span of code that refers to only to the type that didn't get enough parameters. For something this unimportantant, the maintainer might get a better return on investment if they did it themselves, or opted for fix 1.\r\n\r\n## Meta\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.40.0-nightly (1423bec54 2019-11-05)\r\nbinary: rustc\r\ncommit-hash: 1423bec54cf2db283b614e527cfd602b481485d1\r\ncommit-date: 2019-11-05\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.40.0-nightly\r\nLLVM version: 9.0\r\n```\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\nThis issue has been assigned to @Patryk27 via [this comment](https://github.com/rust-lang/rust/issues/66228#issuecomment-640059803).\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"Patryk27\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/66228/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/66228/timeline", "performed_via_github_app": null, "state_reason": "completed"}