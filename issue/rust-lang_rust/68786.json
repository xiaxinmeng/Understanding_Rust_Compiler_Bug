{"url": "https://api.github.com/repos/rust-lang/rust/issues/68786", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/68786/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/68786/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/68786/events", "html_url": "https://github.com/rust-lang/rust/issues/68786", "id": 558772018, "node_id": "MDU6SXNzdWU1NTg3NzIwMTg=", "number": 68786, "title": "Diagnostic for E0596 points at the wrong borrow?", "user": {"login": "lf-", "id": 6652840, "node_id": "MDQ6VXNlcjY2NTI4NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/6652840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lf-", "html_url": "https://github.com/lf-", "followers_url": "https://api.github.com/users/lf-/followers", "following_url": "https://api.github.com/users/lf-/following{/other_user}", "gists_url": "https://api.github.com/users/lf-/gists{/gist_id}", "starred_url": "https://api.github.com/users/lf-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lf-/subscriptions", "organizations_url": "https://api.github.com/users/lf-/orgs", "repos_url": "https://api.github.com/users/lf-/repos", "events_url": "https://api.github.com/users/lf-/events{/privacy}", "received_events_url": "https://api.github.com/users/lf-/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 171502053, "node_id": "MDU6TGFiZWwxNzE1MDIwNTM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-borrow-checker", "name": "A-borrow-checker", "color": "f7e101", "default": false, "description": "Area: The borrow checker"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-02-02T22:56:07Z", "updated_at": "2023-02-03T15:56:31Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I was writing the following function but forgot to put `.as_mut_slice()` rather than `.as_slice()`:\r\n\r\n```rust\r\nfn find_closest(input: &str, options: &Vec<&str>) {\r\n    let mut distances: Vec<_> = options\r\n        .iter()\r\n        .map(|_| (\"a\", 1.)) // actual code removed but types are the same\r\n        .collect();\r\n    distances\r\n        .as_slice()\r\n        .sort_unstable_by(|a, b| a.1.partial_cmp(&b.1).unwrap());\r\n}\r\n```\r\n\r\nThis produced a `E0596`, with a message that I had trouble with as someone new to Rust:\r\n\r\n```\r\nerror[E0596]: cannot borrow data in a `&` reference as mutable\r\n  --> src\\app.rs:18:5\r\n   |\r\n18 | /     distances\r\n19 | |         .as_slice()\r\n   | |___________________^ cannot borrow as mutable\r\n\r\nerror: aborting due to previous error\r\n```\r\n\r\nWhen trying to figure out what the compiler was taking issue with, I thought that it meant that it wanted the elements in the Vec to be themselves mutable, which didn't make any sense to me.\r\n\r\nI think the diagnostic is referring to the borrow done by the `.sort_unstable_by(F)`, but it is not pointing at it and the current message can be misread as meaning that the `.as_slice()` is borrowing something improperly itself, which it is not.\r\n\r\nThe diagnostic would be more helpful if it was something like this:\r\n\r\n```\r\nerror[E0596]: cannot borrow data in a `&` reference as mutable\r\n  --> src\\app.rs:18:5\r\n   |\r\n18 | /     distances\r\n19 | |         .as_slice()\r\n20 | |         .sort_unstable_by(|a, b| a.1.partial_cmp(&b.1).unwrap());\r\n   | |_____________^ sort_unstable_by cannot borrow &self as mutable\r\n\r\nerror: aborting due to previous error\r\n```\r\n\r\n```\r\nrustc --version\r\nrustc 1.42.0-nightly (212b2c7da 2020-01-30)\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/68786/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/68786/timeline", "performed_via_github_app": null, "state_reason": null}