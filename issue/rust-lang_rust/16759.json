{"url": "https://api.github.com/repos/rust-lang/rust/issues/16759", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/16759/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/16759/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/16759/events", "html_url": "https://github.com/rust-lang/rust/issues/16759", "id": 41148309, "node_id": "MDU6SXNzdWU0MTE0ODMwOQ==", "number": 16759, "title": "Multiple assignment after declaration", "user": {"login": "tstorch", "id": 4622615, "node_id": "MDQ6VXNlcjQ2MjI2MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/4622615?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tstorch", "html_url": "https://github.com/tstorch", "followers_url": "https://api.github.com/users/tstorch/followers", "following_url": "https://api.github.com/users/tstorch/following{/other_user}", "gists_url": "https://api.github.com/users/tstorch/gists{/gist_id}", "starred_url": "https://api.github.com/users/tstorch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tstorch/subscriptions", "organizations_url": "https://api.github.com/users/tstorch/orgs", "repos_url": "https://api.github.com/users/tstorch/repos", "events_url": "https://api.github.com/users/tstorch/events{/privacy}", "received_events_url": "https://api.github.com/users/tstorch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-08-26T08:30:09Z", "updated_at": "2015-01-20T23:59:10Z", "closed_at": "2015-01-20T23:59:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently multiple assignemnt is supported at declaration like this\n\n``` rust\nlet (critPos, period) =\n    if critPos1 > critPos2 {\n        (critPos1, period1)\n    } else {\n        (critPos2, period2)\n    };\n```\n\nI think it would be nice to be able do something like this:\n\n``` rust\n// \"improved\" version of  maximal_suffix in src/libcore/str.rs\n\nfn maximal_suffix(arr: &[u8], reversed: bool) -> (uint, uint) {\n    let mut left = -1; // Corresponds to i in the paper\n    let mut right = 0; // Corresponds to j in the paper\n    let mut offset = 1; // Corresponds to k in the paper\n    let mut period = 1; // Corresponds to p in the paper\n\n    while right + offset < arr.len() {\n        let (a, b) =\n            if reversed {\n                (arr[left + offset], arr[right + offset])\n            } else {\n                (arr[right + offset], arr[left + offset])\n            };\n        // THIS IS THE IMPORTANT PART\n        (left, right, offset, period) =\n            if a < b {\n                // Suffix is smaller, period is entire prefix so far.\n                (left, right + offset, 1, right - left)\n            } else if a == b {\n                // Advance through repetition of the current period.\n                if offset == period {\n                    (left, right + offset, 1, period)\n                } else {\n                    (left, right, offset + 1, period)\n                }\n            } else {\n                // Suffix is larger, start over from current location.\n                (right, right + 1, 1, 1)\n            };\n    }\n    (left + 1, period)\n}\n```\n\nCurrently something similar is at the moment only possible with a small workaround:\n\n``` rust\nfn maximal_suffix(arr: &[u8], reversed: bool) -> (uint, uint) {\n    let mut left = -1; // Corresponds to i in the paper\n    let mut right = 0; // Corresponds to j in the paper\n    let mut offset = 1; // Corresponds to k in the paper\n    let mut period = 1; // Corresponds to p in the paper\n\n    while right + offset < arr.len() {\n        let (a, b) =\n            if reversed {\n                (arr[left + offset], arr[right + offset])\n            } else {\n                (arr[right + offset], arr[left + offset])\n            };\n        // HERE I NEED TO INTRODUCE TEMPORARY VARIABLES\n        let (left_temp, right_temp, offset_temp, period_temp) =\n            if a < b {\n                // Suffix is smaller, period is entire prefix so far.\n                (left, right + offset, 1, right - left)\n            } else if a == b {\n                // Advance through repetition of the current period.\n                if offset == period {\n                    (left, right + offset, 1, period)\n                } else {\n                    (left, right, offset + 1, period)\n                }\n            } else {\n                // Suffix is larger, start over from current location.\n                (right, right + 1, 1, 1)\n            };\n        // AND NOW I CAN PUT THE VALUES BACK IN THE REAL VARIABLES\n        left = left_temp;\n        right = right_temp;\n        offset = offset_temp;\n        period = period_temp;\n    }\n    (left + 1, period)\n}\n```\n", "closed_by": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/16759/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/16759/timeline", "performed_via_github_app": null, "state_reason": "completed"}