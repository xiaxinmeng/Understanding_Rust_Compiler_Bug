{"url": "https://api.github.com/repos/rust-lang/rust/issues/102840", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/102840/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/102840/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/102840/events", "html_url": "https://github.com/rust-lang/rust/issues/102840", "id": 1402244753, "node_id": "I_kwDOAAsO6M5TlI6R", "number": 102840, "title": "Suggest using a struct's name instead of Self", "user": {"login": "nox", "id": 123095, "node_id": "MDQ6VXNlcjEyMzA5NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/123095?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nox", "html_url": "https://github.com/nox", "followers_url": "https://api.github.com/users/nox/followers", "following_url": "https://api.github.com/users/nox/following{/other_user}", "gists_url": "https://api.github.com/users/nox/gists{/gist_id}", "starred_url": "https://api.github.com/users/nox/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nox/subscriptions", "organizations_url": "https://api.github.com/users/nox/orgs", "repos_url": "https://api.github.com/users/nox/repos", "events_url": "https://api.github.com/users/nox/events{/privacy}", "received_events_url": "https://api.github.com/users/nox/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-10-09T11:28:03Z", "updated_at": "2022-10-09T16:44:24Z", "closed_at": "2022-10-09T16:44:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Given the following code:\r\n\r\nhttps://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=3c81ead494d0897d6cd49f20d51302df\r\n\r\n```rust\r\npub struct StrWriter<'w, W> {\r\n    inner: &'w mut W,\r\n}\r\n\r\nimpl<'w, W> StrWriter<'w, W> {\r\n    pub fn reborrow(&mut self) -> StrWriter<'_, W> {\r\n        Self {\r\n            inner: self.inner,\r\n        }\r\n    }\r\n\r\n    pub fn reborrow_explicit_lts<'a>(&'a mut self) -> StrWriter<'a, W> {\r\n        Self {\r\n            inner: self.inner,\r\n        }\r\n    }\r\n}\r\n\r\n```\r\n\r\nThe current output is:\r\n\r\n```\r\nerror: lifetime may not live long enough\r\n --> src/lib.rs:8:20\r\n  |\r\n5 | impl<'w, W> StrWriter<'w, W> {\r\n  |      -- lifetime `'w` defined here\r\n6 |     pub fn reborrow(&mut self) -> StrWriter<'_, W> {\r\n  |                     - let's call the lifetime of this reference `'1`\r\n7 |         Self {\r\n8 |             inner: self.inner,\r\n  |                    ^^^^^^^^^^ this usage requires that `'1` must outlive `'w`\r\n\r\nerror: lifetime may not live long enough\r\n  --> src/lib.rs:14:20\r\n   |\r\n5  | impl<'w, W> StrWriter<'w, W> {\r\n   |      -- lifetime `'w` defined here\r\n...\r\n12 |     pub fn reborrow_explicit_lts<'a>(&'a mut self) -> StrWriter<'a, W> {\r\n   |                                  -- lifetime `'a` defined here\r\n13 |         Self {\r\n14 |             inner: self.inner,\r\n   |                    ^^^^^^^^^^ this usage requires that `'a` must outlive `'w`\r\n   |\r\n   = help: consider adding the following bound: `'a: 'w`\r\n```\r\n\r\nIdeally the output should look like:\r\n\r\n```\r\nerror: lifetime of `Self` does not live long enough\r\n --> src/lib.rs:8:20\r\n  |\r\n5 | impl<'w, W> StrWriter<'w, W> {\r\n  |      -- lifetime `'w` defined here\r\n6 |     pub fn reborrow(&mut self) -> StrWriter<'_, W> {\r\n  |                     - let's call the lifetime of this reference `'1`\r\n7 |         Self {\r\n7 |         ^^^^ help: build the struct value with `StrWriter` instead of `Self`\r\n8 |             inner: self.inner,\r\n  |                    ^^^^^^^^^^ this usage requires that `'1` must outlive `'w`\r\n\r\nerror: lifetime of `Self` does not live long enough\r\n  --> src/lib.rs:14:20\r\n   |\r\n5  | impl<'w, W> StrWriter<'w, W> {\r\n   |      -- lifetime `'w` defined here\r\n...\r\n12 |     pub fn reborrow_explicit_lts<'a>(&'a mut self) -> StrWriter<'a, W> {\r\n   |                                  -- lifetime `'a` defined here\r\n13 |         Self {\r\n   |         ^^^^ help: build the struct value with `StrWriter` instead of `Self`\r\n14 |             inner: self.inner,\r\n   |                    ^^^^^^^^^^ this usage requires that `'a` must outlive `'w`\r\n```\r\n\r\nUsing `Self` instead of the struct name when `self` and the return type of the method only differs in lifetimes will never work, and the user must write the returned struct value with the struct name, without referring to `Self`. The help note for the `reborrow_explicit_lts` is especially egregious because adding the bound `'a: 'w` actually makes the method completely defeat its own purpose of returning the same value with a shorter lifetime.", "closed_by": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/102840/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/102840/timeline", "performed_via_github_app": null, "state_reason": "completed"}