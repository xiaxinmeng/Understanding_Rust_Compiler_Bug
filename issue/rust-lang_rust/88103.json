{"url": "https://api.github.com/repos/rust-lang/rust/issues/88103", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/88103/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/88103/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/88103/events", "html_url": "https://github.com/rust-lang/rust/issues/88103", "id": 972263574, "node_id": "MDU6SXNzdWU5NzIyNjM1NzQ=", "number": 88103, "title": "rust-2021-incompatible-closure-captures trait evaluation overflow error", "user": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 122406831, "node_id": "MDU6TGFiZWwxMjI0MDY4MzE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-closures", "name": "A-closures", "color": "f7e101", "default": false, "description": "Area: closures (`|args| { .. }`)"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 2947369052, "node_id": "MDU6TGFiZWwyOTQ3MzY5MDUy", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-edition-2021", "name": "A-edition-2021", "color": "f7e101", "default": false, "description": "Area: The 2021 edition"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-08-17T03:20:08Z", "updated_at": "2021-08-27T03:48:02Z", "closed_at": "2021-08-27T03:48:02Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "While trying to migrate [`sv-parser`](https://crates.io/crates/sv-parser) 0.11.1 to the 2021 edition, the compiler fails with this error:\r\n\r\n```\r\nerror[E0275]: overflow evaluating the requirement `Box<sv_parser::ValueRangeBinary>: Sync`\r\n```\r\n\r\nIt is hard to create a small reproduction, but here is the command to run in that package to reproduce the error:\r\n\r\n```\r\ncargo rustc --profile=check --example module_list -v -- --force-warn rust-2021-incompatible-closure-captures -Zunstable-options\r\n```\r\n\r\nI'm not sure if it is feasible to avoid this.  I'm guessing that the lint is doing some kind of trait evaluation that happens to add some additional recursion that is not normally there.  Adding `#![recursion_limit=\"256\"]` fixes the problem.  Opening this issue to track whether or not there is anything to do here.\r\n\r\nNote that the lint doesn't actually fire, so this is just during the analysis (presumably somewhere in [`compute_2229_migrations`](https://github.com/rust-lang/rust/blob/0e41c6201f7a3f1823b3b668da61577d89bf76d4/compiler/rustc_typeck/src/check/upvar.rs#L956)).\r\n\r\nFull error:\r\n\r\n```\r\nerror[E0275]: overflow evaluating the requirement `Box<sv_parser::ValueRangeBinary>: Sync`\r\n  |\r\n  = help: consider adding a `#![recursion_limit=\"256\"]` attribute to your crate (`module_list`)\r\n  = note: required because it appears within the type `sv_parser::ValueRange`\r\n  = note: required because it appears within the type `(sv_parser::ValueRange, std::option::Option<sv_parser::DistWeight>)`\r\n  = note: required because it appears within the type `sv_parser::DistItem`\r\n  = note: required because it appears within the type `(sv_parser::DistItem, Vec<(sv_parser::Symbol, sv_parser::DistItem)>)`\r\n  = note: required because it appears within the type `sv_parser::List<sv_parser::Symbol, sv_parser::DistItem>`\r\n  = note: required because it appears within the type `(sv_parser::List<sv_parser::Symbol, sv_parser::DistItem>,)`\r\n  = note: required because it appears within the type `sv_parser::DistList`\r\n  = note: required because it appears within the type `(sv_parser::Symbol, sv_parser::DistList, sv_parser::Symbol)`\r\n  = note: required because it appears within the type `sv_parser::Brace<sv_parser::DistList>`\r\n  = note: required because it appears within the type `(sv_parser::Keyword, sv_parser::Brace<sv_parser::DistList>)`\r\n  = note: required because it appears within the type `std::option::Option<(sv_parser::Keyword, sv_parser::Brace<sv_parser::DistList>)>`\r\n  = note: required because it appears within the type `(sv_parser::Expression, std::option::Option<(sv_parser::Keyword, sv_parser::Brace<sv_parser::DistList>)>)`\r\n  = note: required because it appears within the type `sv_parser::ExpressionOrDist`\r\n  = note: required because it appears within the type `(sv_parser::ExpressionOrDist, std::option::Option<sv_parser::BooleanAbbrev>)`\r\n  = note: required because it appears within the type `sv_parser::SequenceExprExpression`\r\n  = note: required because of the requirements on the impl of `Sync` for `std::ptr::Unique<sv_parser::SequenceExprExpression>`\r\n  = note: required because it appears within the type `Box<sv_parser::SequenceExprExpression>`\r\n  = note: required because it appears within the type `sv_parser::SequenceExpr`\r\n  = note: required because of the requirements on the impl of `Sync` for `std::ptr::Unique<sv_parser::SequenceExpr>`\r\n  = note: required because it appears within the type `Box<sv_parser::SequenceExpr>`\r\n  = note: required because it appears within the type `sv_parser::SequenceActualArg`\r\n  = note: required because it appears within the type `std::option::Option<sv_parser::SequenceActualArg>`\r\n  = note: required because it appears within the type `(std::option::Option<sv_parser::SequenceActualArg>, Vec<(sv_parser::Symbol, std::option::Option<sv_parser::SequenceActualArg>)>)`\r\n  = note: required because it appears within the type `sv_parser::List<sv_parser::Symbol, std::option::Option<sv_parser::SequenceActualArg>>`\r\n  = note: required because it appears within the type `(sv_parser::List<sv_parser::Symbol, std::option::Option<sv_parser::SequenceActualArg>>, Vec<(sv_parser::Symbol, sv_parser::Symbol, sv_parser::Identifier, sv_parser::Paren<std::option::Option<sv_parser::SequenceActualArg>>)>)`\r\n  = note: required because it appears within the type `sv_parser::SequenceListOfArgumentsOrdered`\r\n  = note: required because of the requirements on the impl of `Sync` for `std::ptr::Unique<sv_parser::SequenceListOfArgumentsOrdered>`\r\n  = note: required because it appears within the type `Box<sv_parser::SequenceListOfArgumentsOrdered>`\r\n  = note: required because it appears within the type `sv_parser::SequenceListOfArguments`\r\n  = note: required because it appears within the type `std::option::Option<sv_parser::SequenceListOfArguments>`\r\n  = note: required because it appears within the type `(sv_parser::Symbol, std::option::Option<sv_parser::SequenceListOfArguments>, sv_parser::Symbol)`\r\n  = note: required because it appears within the type `sv_parser::Paren<std::option::Option<sv_parser::SequenceListOfArguments>>`\r\n  = note: required because it appears within the type `std::option::Option<sv_parser::Paren<std::option::Option<sv_parser::SequenceListOfArguments>>>`\r\n  = note: required because it appears within the type `(sv_parser::PsOrHierarchicalSequenceIdentifier, std::option::Option<sv_parser::Paren<std::option::Option<sv_parser::SequenceListOfArguments>>>)`\r\n  = note: required because it appears within the type `sv_parser::SequenceInstance`\r\n  = note: required because it appears within the type `(sv_parser::SequenceInstance, std::option::Option<(sv_parser::Keyword, sv_parser::Expression)>)`\r\n  = note: required because it appears within the type `sv_parser::EventExpressionSequence`\r\n  = note: required because of the requirements on the impl of `Sync` for `std::ptr::Unique<sv_parser::EventExpressionSequence>`\r\n  = note: required because it appears within the type `Box<sv_parser::EventExpressionSequence>`\r\n  = note: required because it appears within the type `sv_parser::EventExpression`\r\n  = note: required because it appears within the type `(sv_parser::Symbol, sv_parser::EventExpression, sv_parser::Symbol)`\r\n  = note: required because it appears within the type `sv_parser::Paren<sv_parser::EventExpression>`\r\n  = note: required because it appears within the type `(sv_parser::Symbol, sv_parser::Paren<sv_parser::EventExpression>)`\r\n  = note: required because it appears within the type `sv_parser::ClockingEventExpression`\r\n  = note: required because of the requirements on the impl of `Sync` for `std::ptr::Unique<sv_parser::ClockingEventExpression>`\r\n  = note: required because it appears within the type `Box<sv_parser::ClockingEventExpression>`\r\n  = note: required because it appears within the type `sv_parser::ClockingEvent`\r\n  = note: required because it appears within the type `std::option::Option<sv_parser::ClockingEvent>`\r\n  = note: required because it appears within the type `(sv_parser::Symbol, std::option::Option<sv_parser::ClockingEvent>)`\r\n  = note: required because it appears within the type `std::option::Option<(sv_parser::Symbol, std::option::Option<sv_parser::ClockingEvent>)>`\r\n  = note: required because it appears within the type `(sv_parser::List<sv_parser::Symbol, std::option::Option<sv_parser::Expression>>, std::option::Option<(sv_parser::Symbol, std::option::Option<sv_parser::ClockingEvent>)>)`\r\n  = note: required because it appears within the type `(sv_parser::Symbol, (sv_parser::List<sv_parser::Symbol, std::option::Option<sv_parser::Expression>>, std::option::Option<(sv_parser::Symbol, std::option::Option<sv_parser::ClockingEvent>)>), sv_parser::Symbol)`\r\n  = note: required because it appears within the type `sv_parser::Paren<(sv_parser::List<sv_parser::Symbol, std::option::Option<sv_parser::Expression>>, std::option::Option<(sv_parser::Symbol, std::option::Option<sv_parser::ClockingEvent>)>)>`\r\n  = note: required because it appears within the type `(sv_parser::SystemTfIdentifier, sv_parser::Paren<(sv_parser::List<sv_parser::Symbol, std::option::Option<sv_parser::Expression>>, std::option::Option<(sv_parser::Symbol, std::option::Option<sv_parser::ClockingEvent>)>)>)`\r\n  = note: required because it appears within the type `sv_parser::SystemTfCallArgExpression`\r\n  = note: required because of the requirements on the impl of `Sync` for `std::ptr::Unique<sv_parser::SystemTfCallArgExpression>`\r\n  = note: required because it appears within the type `Box<sv_parser::SystemTfCallArgExpression>`\r\n  = note: required because it appears within the type `sv_parser::SystemTfCall`\r\n  = note: required because of the requirements on the impl of `Sync` for `std::ptr::Unique<sv_parser::SystemTfCall>`\r\n  = note: required because it appears within the type `Box<sv_parser::SystemTfCall>`\r\n  = note: required because it appears within the type `sv_parser::SubroutineCall`\r\n  = note: required because it appears within the type `(sv_parser::SubroutineCall,)`\r\n  = note: required because it appears within the type `sv_parser::FunctionSubroutineCall`\r\n  = note: required because of the requirements on the impl of `Sync` for `std::ptr::Unique<sv_parser::FunctionSubroutineCall>`\r\n  = note: required because it appears within the type `Box<sv_parser::FunctionSubroutineCall>`\r\n  = note: required because it appears within the type `sv_parser::Primary`\r\n  = note: required because of the requirements on the impl of `Sync` for `std::ptr::Unique<sv_parser::Primary>`\r\n  = note: required because it appears within the type `Box<sv_parser::Primary>`\r\n  = note: required because it appears within the type `sv_parser::Expression`\r\n  = note: required because of the requirements on the impl of `Sync` for `std::ptr::Unique<sv_parser::Expression>`\r\n  = note: required because it appears within the type `Box<sv_parser::Expression>`\r\n  = note: required because it appears within the type `sv_parser::MintypmaxExpression`\r\n  = note: required because of the requirements on the impl of `Sync` for `std::ptr::Unique<sv_parser::MintypmaxExpression>`\r\n  = note: required because it appears within the type `Box<sv_parser::MintypmaxExpression>`\r\n  = note: required because it appears within the type `sv_parser::ParamExpression`\r\n  = note: required because it appears within the type `(sv_parser::ParamExpression,)`\r\n  = note: required because it appears within the type `sv_parser::OrderedParameterAssignment`\r\n  = note: required because it appears within the type `(sv_parser::OrderedParameterAssignment, Vec<(sv_parser::Symbol, sv_parser::OrderedParameterAssignment)>)`\r\n  = note: required because it appears within the type `sv_parser::List<sv_parser::Symbol, sv_parser::OrderedParameterAssignment>`\r\n  = note: required because it appears within the type `(sv_parser::List<sv_parser::Symbol, sv_parser::OrderedParameterAssignment>,)`\r\n  = note: required because it appears within the type `sv_parser::ListOfParameterAssignmentsOrdered`\r\n  = note: required because of the requirements on the impl of `Sync` for `std::ptr::Unique<sv_parser::ListOfParameterAssignmentsOrdered>`\r\n  = note: required because it appears within the type `Box<sv_parser::ListOfParameterAssignmentsOrdered>`\r\n  = note: required because it appears within the type `sv_parser::ListOfParameterAssignments`\r\n  = note: required because it appears within the type `std::option::Option<sv_parser::ListOfParameterAssignments>`\r\n  = note: required because it appears within the type `(sv_parser::Symbol, std::option::Option<sv_parser::ListOfParameterAssignments>, sv_parser::Symbol)`\r\n  = note: required because it appears within the type `sv_parser::Paren<std::option::Option<sv_parser::ListOfParameterAssignments>>`\r\n  = note: required because it appears within the type `(sv_parser::Symbol, sv_parser::Paren<std::option::Option<sv_parser::ListOfParameterAssignments>>)`\r\n  = note: required because it appears within the type `sv_parser::ParameterValueAssignment`\r\n  = note: required because it appears within the type `std::option::Option<sv_parser::ParameterValueAssignment>`\r\n  = note: required because it appears within the type `(sv_parser::PsClassIdentifier, std::option::Option<sv_parser::ParameterValueAssignment>, Vec<(sv_parser::Symbol, sv_parser::ClassIdentifier, std::option::Option<sv_parser::ParameterValueAssignment>)>)`\r\n  = note: required because it appears within the type `sv_parser::ClassType`\r\n  = note: required because it appears within the type `(sv_parser::ClassType, sv_parser::Symbol)`\r\n  = note: required because it appears within the type `sv_parser::ClassScope`\r\n  = note: required because of the requirements on the impl of `Sync` for `std::ptr::Unique<sv_parser::ClassScope>`\r\n  = note: required because it appears within the type `Box<sv_parser::ClassScope>`\r\n  = note: required because it appears within the type `sv_parser::PackageScopeOrClassScope`\r\n  = note: required because it appears within the type `std::option::Option<sv_parser::PackageScopeOrClassScope>`\r\n  = note: required because it appears within the type `(std::option::Option<sv_parser::PackageScopeOrClassScope>, sv_parser::ParameterIdentifier)`\r\n  = note: required because it appears within the type `sv_parser::PsParameterIdentifierScope`\r\n  = note: required because of the requirements on the impl of `Sync` for `std::ptr::Unique<sv_parser::PsParameterIdentifierScope>`\r\n  = note: required because it appears within the type `Box<sv_parser::PsParameterIdentifierScope>`\r\n  = note: required because it appears within the type `sv_parser::PsParameterIdentifier`\r\n  = note: required because it appears within the type `(sv_parser::PsParameterIdentifier, sv_parser::ConstantSelect)`\r\n  = note: required because it appears within the type `sv_parser::ConstantPrimaryPsParameter`\r\n  = note: required because of the requirements on the impl of `Sync` for `std::ptr::Unique<sv_parser::ConstantPrimaryPsParameter>`\r\n  = note: required because it appears within the type `Box<sv_parser::ConstantPrimaryPsParameter>`\r\n  = note: required because it appears within the type `sv_parser::ConstantPrimary`\r\n  = note: required because of the requirements on the impl of `Sync` for `std::ptr::Unique<sv_parser::ConstantPrimary>`\r\n  = note: required because it appears within the type `Box<sv_parser::ConstantPrimary>`\r\n  = note: required because it appears within the type `sv_parser::ConstantExpression`\r\n  = note: required because it appears within the type `(sv_parser::Symbol, sv_parser::ConstantExpression)`\r\n  = note: required because it appears within the type `std::option::Option<(sv_parser::Symbol, sv_parser::ConstantExpression)>`\r\n  = note: required because it appears within the type `(sv_parser::Identifier, std::option::Option<(sv_parser::Symbol, sv_parser::ConstantExpression)>)`\r\n  = note: required because it appears within the type `sv_parser::AttrSpec`\r\n  = note: required because it appears within the type `(sv_parser::AttrSpec, Vec<(sv_parser::Symbol, sv_parser::AttrSpec)>)`\r\n  = note: required because it appears within the type `sv_parser::List<sv_parser::Symbol, sv_parser::AttrSpec>`\r\n  = note: required because it appears within the type `(sv_parser::Symbol, sv_parser::List<sv_parser::Symbol, sv_parser::AttrSpec>, sv_parser::Symbol)`\r\n  = note: required because it appears within the type `sv_parser::AttributeInstance`\r\n  = note: required because of the requirements on the impl of `Sync` for `std::ptr::Unique<sv_parser::AttributeInstance>`\r\n  = note: required because it appears within the type `alloc::raw_vec::RawVec<sv_parser::AttributeInstance>`\r\n  = note: required because it appears within the type `Vec<sv_parser::AttributeInstance>`\r\n  = note: required because it appears within the type `(Vec<sv_parser::AttributeInstance>, sv_parser::ModuleKeyword, std::option::Option<sv_parser::Lifetime>, sv_parser::ModuleIdentifier, Vec<sv_parser::PackageImportDeclaration>, std::option::Option<sv_parser::ParameterPortList>, sv_parser::ListOfPorts, sv_parser::Symbol)`\r\n  = note: required because it appears within the type `sv_parser::ModuleNonansiHeader`\r\n  = note: required because it appears within the type `(sv_parser::ModuleNonansiHeader, std::option::Option<sv_parser::TimeunitsDeclaration>, Vec<sv_parser::ModuleItem>, sv_parser::Keyword, std::option::Option<(sv_parser::Symbol, sv_parser::ModuleIdentifier)>)`\r\n  = note: required because it appears within the type `sv_parser::ModuleDeclarationNonansi`\r\n  = note: required because it appears within the type `&sv_parser::ModuleDeclarationNonansi`\r\n  = note: required because it appears within the type `&&sv_parser::ModuleDeclarationNonansi`\r\n\r\nFor more information about this error, try `rustc --explain E0275`.\r\n```\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.56.0-nightly (8007b506a 2021-08-14)\r\nbinary: rustc\r\ncommit-hash: 8007b506ac5da629f223b755f5a5391edd5f6d01\r\ncommit-date: 2021-08-14\r\nhost: x86_64-apple-darwin\r\nrelease: 1.56.0-nightly\r\nLLVM version: 12.0.1\r\n```\r\n\r\ncc @rust-lang/wg-rfc-2229 \r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/88103/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/88103/timeline", "performed_via_github_app": null, "state_reason": "completed"}