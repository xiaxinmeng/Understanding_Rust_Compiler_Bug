{"url": "https://api.github.com/repos/rust-lang/rust/issues/95324", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/95324/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/95324/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/95324/events", "html_url": "https://github.com/rust-lang/rust/issues/95324", "id": 1181473359, "node_id": "I_kwDOAAsO6M5Ga9pP", "number": 95324, "title": "\"cannot return \u2026\u00a0reference to data owned by the current function\" even though the result would be a harmless reborrow", "user": {"login": "kpreid", "id": 779501, "node_id": "MDQ6VXNlcjc3OTUwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/779501?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kpreid", "html_url": "https://github.com/kpreid", "followers_url": "https://api.github.com/users/kpreid/followers", "following_url": "https://api.github.com/users/kpreid/following{/other_user}", "gists_url": "https://api.github.com/users/kpreid/gists{/gist_id}", "starred_url": "https://api.github.com/users/kpreid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kpreid/subscriptions", "organizations_url": "https://api.github.com/users/kpreid/orgs", "repos_url": "https://api.github.com/users/kpreid/repos", "events_url": "https://api.github.com/users/kpreid/events{/privacy}", "received_events_url": "https://api.github.com/users/kpreid/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-03-26T02:34:58Z", "updated_at": "2022-03-26T02:34:58Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Given [the following code:](https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=22ac8e7675c9130c8cc01e5887fed93e)\r\n\r\n```rust\r\nfn func(foo: &mut i32) -> &i32 {\r\n    &foo\r\n}\r\n```\r\n\r\nThe current output is:\r\n\r\n```\r\nerror[E0515]: cannot return reference to function parameter `foo`\r\n --> src/lib.rs:2:5\r\n  |\r\n2 |     &foo\r\n  |     ^^^^ returns a reference to data owned by the current function\r\n```\r\n\r\nIdeally the code would compile (just as it does when the function body is either `&*foo` or `foo`) or the message would contain a hint similar to `clippy::needless_borrow` that I just need to remove the `&`.\r\n\r\nUsually, the wrong number of `&`s is either harmless or a type error; here, it produces a very confusing error. \u201cWhat do you mean? I'm not returning anything I allocated inside the function. I'm returning a reference to the `Self` that already exists.\u201d (My original case was a method.)\r\n\r\nTested on stable 1.59.0 and nightly. The same problem does not occur if the function's parameter is an `&` reference.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/95324/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/95324/timeline", "performed_via_github_app": null, "state_reason": null}