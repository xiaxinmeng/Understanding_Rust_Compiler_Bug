{"url": "https://api.github.com/repos/rust-lang/rust/issues/77575", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/77575/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/77575/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/77575/events", "html_url": "https://github.com/rust-lang/rust/issues/77575", "id": 714922319, "node_id": "MDU6SXNzdWU3MTQ5MjIzMTk=", "number": 77575, "title": "Compiler help: &str -> String suggestion about to_string", "user": {"login": "darnuria", "id": 2827553, "node_id": "MDQ6VXNlcjI4Mjc1NTM=", "avatar_url": "https://avatars.githubusercontent.com/u/2827553?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darnuria", "html_url": "https://github.com/darnuria", "followers_url": "https://api.github.com/users/darnuria/followers", "following_url": "https://api.github.com/users/darnuria/following{/other_user}", "gists_url": "https://api.github.com/users/darnuria/gists{/gist_id}", "starred_url": "https://api.github.com/users/darnuria/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darnuria/subscriptions", "organizations_url": "https://api.github.com/users/darnuria/orgs", "repos_url": "https://api.github.com/users/darnuria/repos", "events_url": "https://api.github.com/users/darnuria/events{/privacy}", "received_events_url": "https://api.github.com/users/darnuria/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1183099971, "node_id": "MDU6TGFiZWwxMTgzMDk5OTcx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-suggestion-diagnostics", "name": "A-suggestion-diagnostics", "color": "f7e101", "default": false, "description": "Area: suggestions generated by the compiler applied by cargo fix"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-10-05T15:03:59Z", "updated_at": "2022-11-23T23:26:37Z", "closed_at": "2022-11-23T23:26:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Note: If the discussion I suggest settle to a consensus for change I would be happy to be mentored to make a change!\r\n\r\nI open this issue in mind that a similar issue https://github.com/rust-lang/rust/issues/40762 was closed in Apr 25, 2017  but the situation has changed and also in my mind due to the state of the Rust book (details about search below).\r\n\r\n## Situation\r\n\r\nI teach Rust to bachelors 2 students in computer science and and a Rustlings an exercise about strings involve understanding usage of `String` and `&str`, one possible outcome is to give a `&str` instead of a `String` like in this code:\r\n\r\n```rust\r\nfn print_with_string(s: String) {\r\n    println!(\"{}\", s);    \r\n}\r\n\r\nfn main() {\r\n    let s = \"Hello\";\r\n    print_with_string(s);\r\n}\r\n```\r\nThis result in this compiler message in rust stable:\r\n```\r\n   Compiling playground v0.0.1 (/playground)\r\nerror[E0308]: mismatched types\r\n --> src/main.rs:6:23\r\n  |\r\n6 |     print_with_string(c)\r\n  |                       ^\r\n  |                       |\r\n  |                       expected struct `std::string::String`, found `&str`\r\n  |                       help: try using a conversion method: `c.to_string()`\r\n\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0308`.\r\n```\r\nSame almost the same message in nightly.\r\n\r\n## \ud83d\udd0e Actual state about this in the book\r\n\r\n* [ch08-02 Strings](https://doc.rust-lang.org/book/ch08-02-strings.html) chapter in book\r\n* Search occurrence in book of `String::from`: <https://doc.rust-lang.org/book/?search=String::from>\r\n* Search occurrence in book of `to_string`: <https://doc.rust-lang.org/book/?search=to_String>\r\n\r\nEdit: Promoted this section upper in discussion to provide reference quickly.\r\n\r\n## Learning difficulty\r\n\r\nPointing about `to_string()` introduce some complexity since the new standard in book is `String::from(c)`. \r\n\r\nI now that a looot of historical way to convert to `String` exist.\r\n\r\nList thanks to internal forum member [@jethrogb](https://users.rust-lang.org/u/jethrogb):\r\n\r\n* `\"hello\".to_owned()`\r\n* `\"hello\".to_string()`\r\n* `String::from(\"hello\")`\r\n* `\"hello\".into()`\r\n* `format!(\"hello\")` maybe not exactly intended for but some of my student used it in exercise I was surprised.\r\n\r\nI found that as Rust is a difficult language (to teach/and learn), using a conventionalized way of converting remove some burden on student (also on reading), as they learn since they can get a grasp by following teaching material.\r\n\r\nIn teacher perspective explaining to learners \"Okay! `c.to_string()` is exactly the same as `String::from` it's due to historical details\" is not really the best experience. Bonus it hide the fact that a standardized way of converting now exist.\r\n\r\n### Actual implementation\r\n\r\nFollowing @scottmcm and @estebank contribution to the discussion I added this section about what is the state in sources.\r\nlink [/src/alloc/string.rs.html#2257-2262](https://doc.rust-lang.org/src/alloc/string.rs.html#2257-2262):\r\n```rust\r\n#[stable(feature = \"str_to_string_specialization\", since = \"1.9.0\")]\r\nimpl ToString for str {\r\n    #[inline]\r\n    fn to_string(&self) -> String {\r\n        String::from(self)\r\n    }\r\n}\r\n```\r\n\r\nLink [src/alloc/string.rs.html#2305-2311](<https://doc.rust-lang.org/src/alloc/string.rs.html#2305-2311):\r\n```rust\r\n#[stable(feature = \"rust1\", since = \"1.0.0\")]\r\nimpl From<&str> for String {\r\n    #[inline]\r\n    fn from(s: &str) -> String {\r\n        s.to_owned()\r\n    }\r\n}\r\n```\r\n\r\n## Purposed solution\r\n\r\nI would be in favor suggesting usage of `String::from`, bonus it's give exposure to `std::convert::From` trait.\r\n\r\nBacklog: this question seems like a real deal in learning experience and among intermediate Rustacean: <https://users.rust-lang.org/t/what-is-the-idiomatic-way-to-convert-str-to-string/12160/11>\r\n\r\nThanks for reading feel free to close if it's still not a major issue! \ud83c\udf89\r\nEdit: Fix code example.\r\nEdit2: Improve readability by moving book link closer to the begging; add implementation links.", "closed_by": {"login": "darnuria", "id": 2827553, "node_id": "MDQ6VXNlcjI4Mjc1NTM=", "avatar_url": "https://avatars.githubusercontent.com/u/2827553?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darnuria", "html_url": "https://github.com/darnuria", "followers_url": "https://api.github.com/users/darnuria/followers", "following_url": "https://api.github.com/users/darnuria/following{/other_user}", "gists_url": "https://api.github.com/users/darnuria/gists{/gist_id}", "starred_url": "https://api.github.com/users/darnuria/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darnuria/subscriptions", "organizations_url": "https://api.github.com/users/darnuria/orgs", "repos_url": "https://api.github.com/users/darnuria/repos", "events_url": "https://api.github.com/users/darnuria/events{/privacy}", "received_events_url": "https://api.github.com/users/darnuria/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/77575/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/77575/timeline", "performed_via_github_app": null, "state_reason": "completed"}