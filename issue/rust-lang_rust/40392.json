{"url": "https://api.github.com/repos/rust-lang/rust/issues/40392", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/40392/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/40392/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/40392/events", "html_url": "https://github.com/rust-lang/rust/issues/40392", "id": 213079372, "node_id": "MDU6SXNzdWUyMTMwNzkzNzI=", "number": 40392, "title": "Rust generating LLVM IR for dependencies of inline functions", "user": {"login": "retep998", "id": 666308, "node_id": "MDQ6VXNlcjY2NjMwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/666308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/retep998", "html_url": "https://github.com/retep998", "followers_url": "https://api.github.com/users/retep998/followers", "following_url": "https://api.github.com/users/retep998/following{/other_user}", "gists_url": "https://api.github.com/users/retep998/gists{/gist_id}", "starred_url": "https://api.github.com/users/retep998/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/retep998/subscriptions", "organizations_url": "https://api.github.com/users/retep998/orgs", "repos_url": "https://api.github.com/users/retep998/repos", "events_url": "https://api.github.com/users/retep998/events{/privacy}", "received_events_url": "https://api.github.com/users/retep998/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 60344715, "node_id": "MDU6TGFiZWw2MDM0NDcxNQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-medium", "name": "P-medium", "color": "eb6420", "default": false, "description": "Medium priority"}, {"id": 64037154, "node_id": "MDU6TGFiZWw2NDAzNzE1NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-compiletime", "name": "I-compiletime", "color": "e11d21", "default": false, "description": "Problems and improvements with respect to compile times."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 262252840, "node_id": "MDU6TGFiZWwyNjIyNTI4NDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-stable", "name": "regression-from-stable-to-stable", "color": "e4008a", "default": false, "description": "Performance or correctness regression from one stable version to another."}], "state": "closed", "locked": false, "assignee": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2017-03-09T15:53:01Z", "updated_at": "2017-11-08T14:54:14Z", "closed_at": "2017-11-08T14:54:14Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Example code:\r\n```Rust\r\n#![crate_type = \"rlib\"]\r\n#[inline]\r\npub fn foo() -> bool {\r\n    [1, 2] == [3, 4]\r\n}\r\n```\r\nThis is an inline function and as such it shouldn't generate any LLVM IR. If you check what the LLVM IR is with stable you see that it is pretty much empty.\r\n```llvm\r\n; ModuleID = 'rust_out.cgu-0.rs'\r\nsource_filename = \"rust_out.cgu-0.rs\"\r\ntarget datalayout = \"e-m:e-i64:64-f80:128-n8:16:32:64-S128\"\r\ntarget triple = \"x86_64-unknown-linux-gnu\"\r\n\r\n@__rustc_debug_gdb_scripts_section__ = internal unnamed_addr constant [34 x i8] c\"\\01gdb_load_rust_pretty_printers.py\\00\", section \".debug_gdb_scripts\", align 1\r\n\r\n!llvm.dbg.cu = !{!0}\r\n!llvm.module.flags = !{!3}\r\n\r\n!0 = distinct !DICompileUnit(language: DW_LANG_Rust, file: !1, producer: \"rustc version 1.15.1 (021bd294c 2017-02-08)\", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2)\r\n!1 = !DIFile(filename: \"rust_out\", directory: \"/tmp\")\r\n!2 = !{}\r\n!3 = !{i32 2, !\"Debug Info Version\", i32 3}\r\n```\r\nIf you switch to beta or nightly however, then the LLVM IR is filled with a bunch of junk that the function depends on, yet not the function itself.\r\n```llvm\r\n; ModuleID = 'rust_out.cgu-0.rs'\r\nsource_filename = \"rust_out.cgu-0.rs\"\r\ntarget datalayout = \"e-m:e-i64:64-f80:128-n8:16:32:64-S128\"\r\ntarget triple = \"x86_64-unknown-linux-gnu\"\r\n\r\n%\"core::slice::Repr<i32>\" = type { i32*, i64 }\r\n\r\n@__rustc_debug_gdb_scripts_section__ = internal unnamed_addr constant [34 x i8] c\"\\01gdb_load_rust_pretty_printers.py\\00\", section \".debug_gdb_scripts\", align 1\r\n\r\n; Function Attrs: inlinehint uwtable\r\ndefine internal i64 @_ZN4core3mem11size_of_val17h360e37c198a29e05E(i32* noalias nonnull readonly, i64) unnamed_addr #0 !dbg !4 {\r\nentry-block:\r\n  %tmp_ret = alloca i64\r\n  %val = alloca { i32*, i64 }\r\n  %arg0 = alloca { i32*, i64 }\r\n  %2 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %arg0, i32 0, i32 0\r\n  store i32* %0, i32** %2\r\n  %3 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %arg0, i32 0, i32 1\r\n  store i64 %1, i64* %3\r\n  call void @llvm.dbg.declare(metadata { i32*, i64 }* %arg0, metadata !24, metadata !26), !dbg !27\r\n  call void @llvm.dbg.declare(metadata { i32*, i64 }* %val, metadata !28, metadata !26), !dbg !30\r\n  br label %start, !dbg !30\r\n\r\nstart:                                            ; preds = %entry-block\r\n  %4 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %arg0, i32 0, i32 0, !dbg !31\r\n  %5 = load i32*, i32** %4, !dbg !31, !nonnull !2\r\n  %6 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %arg0, i32 0, i32 1, !dbg !31\r\n  %7 = load i64, i64* %6, !dbg !31\r\n  %8 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %val, i32 0, i32 0, !dbg !31\r\n  store i32* %5, i32** %8, !dbg !31\r\n  %9 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %val, i32 0, i32 1, !dbg !31\r\n  store i64 %7, i64* %9, !dbg !31\r\n  %10 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %val, i32 0, i32 0, !dbg !32\r\n  %11 = load i32*, i32** %10, !dbg !32, !nonnull !2\r\n  %12 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %val, i32 0, i32 1, !dbg !32\r\n  %13 = load i64, i64* %12, !dbg !32\r\n  %14 = mul i64 %13, 4, !dbg !32\r\n  store i64 %14, i64* %tmp_ret, !dbg !32\r\n  %15 = load i64, i64* %tmp_ret, !dbg !32\r\n  br label %bb1, !dbg !32\r\n\r\nbb1:                                              ; preds = %start\r\n  ret i64 %15, !dbg !33\r\n}\r\n\r\n; Function Attrs: uwtable\r\ndefine internal zeroext i1 @\"_ZN4core5slice81_$LT$impl$u20$core..cmp..PartialEq$LT$$u5b$B$u5d$$GT$$u20$for$u20$$u5b$A$u5d$$GT$2eq17h6dec557eb728ce87E\"(i32* noalias nonnull readonly, i64, i32* noalias nonnull readonly, i64) unnamed_addr #1 !dbg !34 {\r\nentry-block:\r\n  %other = alloca { i32*, i64 }\r\n  %self = alloca { i32*, i64 }\r\n  %arg1 = alloca { i32*, i64 }\r\n  %arg0 = alloca { i32*, i64 }\r\n  %4 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %arg0, i32 0, i32 0\r\n  store i32* %0, i32** %4\r\n  %5 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %arg0, i32 0, i32 1\r\n  store i64 %1, i64* %5\r\n  call void @llvm.dbg.declare(metadata { i32*, i64 }* %arg0, metadata !44, metadata !26), !dbg !45\r\n  %6 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %arg1, i32 0, i32 0\r\n  store i32* %2, i32** %6\r\n  %7 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %arg1, i32 0, i32 1\r\n  store i64 %3, i64* %7\r\n  call void @llvm.dbg.declare(metadata { i32*, i64 }* %arg1, metadata !46, metadata !26), !dbg !45\r\n  call void @llvm.dbg.declare(metadata { i32*, i64 }* %self, metadata !47, metadata !26), !dbg !49\r\n  call void @llvm.dbg.declare(metadata { i32*, i64 }* %other, metadata !50, metadata !26), !dbg !49\r\n  br label %start, !dbg !49\r\n\r\nstart:                                            ; preds = %entry-block\r\n  %8 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %arg0, i32 0, i32 0, !dbg !51\r\n  %9 = load i32*, i32** %8, !dbg !51, !nonnull !2\r\n  %10 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %arg0, i32 0, i32 1, !dbg !51\r\n  %11 = load i64, i64* %10, !dbg !51\r\n  %12 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %self, i32 0, i32 0, !dbg !51\r\n  store i32* %9, i32** %12, !dbg !51\r\n  %13 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %self, i32 0, i32 1, !dbg !51\r\n  store i64 %11, i64* %13, !dbg !51\r\n  %14 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %arg1, i32 0, i32 0, !dbg !51\r\n  %15 = load i32*, i32** %14, !dbg !51, !nonnull !2\r\n  %16 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %arg1, i32 0, i32 1, !dbg !51\r\n  %17 = load i64, i64* %16, !dbg !51\r\n  %18 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %other, i32 0, i32 0, !dbg !51\r\n  store i32* %15, i32** %18, !dbg !51\r\n  %19 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %other, i32 0, i32 1, !dbg !51\r\n  store i64 %17, i64* %19, !dbg !51\r\n  %20 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %self, i32 0, i32 0, !dbg !52\r\n  %21 = load i32*, i32** %20, !dbg !52, !nonnull !2\r\n  %22 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %self, i32 0, i32 1, !dbg !52\r\n  %23 = load i64, i64* %22, !dbg !52\r\n  %24 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %other, i32 0, i32 0, !dbg !52\r\n  %25 = load i32*, i32** %24, !dbg !52, !nonnull !2\r\n  %26 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %other, i32 0, i32 1, !dbg !52\r\n  %27 = load i64, i64* %26, !dbg !52\r\n  %28 = call zeroext i1 @\"_ZN68_$LT$$u5b$A$u5d$$u20$as$u20$core..slice..SlicePartialEq$LT$A$GT$$GT$5equal17h29b0745304278f2eE\"(i32* noalias nonnull readonly %21, i64 %23, i32* noalias nonnull readonly %25, i64 %27), !dbg !52\r\n  br label %bb1, !dbg !52\r\n\r\nbb1:                                              ; preds = %start\r\n  ret i1 %28, !dbg !53\r\n}\r\n\r\n; Function Attrs: inlinehint uwtable\r\ndefine internal i64 @\"_ZN53_$LT$$u5b$T$u5d$$u20$as$u20$core..slice..SliceExt$GT$3len17h6e1c3544d59ef48dE\"(i32* noalias nonnull readonly, i64) unnamed_addr #0 !dbg !54 {\r\nentry-block:\r\n  %transmute_temp = alloca %\"core::slice::Repr<i32>\"\r\n  %self = alloca { i32*, i64 }\r\n  %arg0 = alloca { i32*, i64 }\r\n  %2 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %arg0, i32 0, i32 0\r\n  store i32* %0, i32** %2\r\n  %3 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %arg0, i32 0, i32 1\r\n  store i64 %1, i64* %3\r\n  call void @llvm.dbg.declare(metadata { i32*, i64 }* %arg0, metadata !58, metadata !26), !dbg !59\r\n  call void @llvm.dbg.declare(metadata { i32*, i64 }* %self, metadata !60, metadata !26), !dbg !62\r\n  br label %start, !dbg !62\r\n\r\nstart:                                            ; preds = %entry-block\r\n  %4 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %arg0, i32 0, i32 0, !dbg !63\r\n  %5 = load i32*, i32** %4, !dbg !63, !nonnull !2\r\n  %6 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %arg0, i32 0, i32 1, !dbg !63\r\n  %7 = load i64, i64* %6, !dbg !63\r\n  %8 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %self, i32 0, i32 0, !dbg !63\r\n  store i32* %5, i32** %8, !dbg !63\r\n  %9 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %self, i32 0, i32 1, !dbg !63\r\n  store i64 %7, i64* %9, !dbg !63\r\n  %10 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %self, i32 0, i32 0, !dbg !64\r\n  %11 = load i32*, i32** %10, !dbg !64, !nonnull !2\r\n  %12 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %self, i32 0, i32 1, !dbg !64\r\n  %13 = load i64, i64* %12, !dbg !64\r\n  %14 = bitcast %\"core::slice::Repr<i32>\"* %transmute_temp to { i32*, i64 }*, !dbg !64\r\n  %15 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %14, i32 0, i32 0, !dbg !64\r\n  store i32* %11, i32** %15, align 8, !dbg !64\r\n  %16 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %14, i32 0, i32 1, !dbg !64\r\n  store i64 %13, i64* %16, align 8, !dbg !64\r\n  %17 = getelementptr inbounds %\"core::slice::Repr<i32>\", %\"core::slice::Repr<i32>\"* %transmute_temp, i32 0, i32 0, !dbg !64\r\n  %18 = getelementptr inbounds %\"core::slice::Repr<i32>\", %\"core::slice::Repr<i32>\"* %transmute_temp, i32 0, i32 1, !dbg !64\r\n  %19 = load i32*, i32** %17, !dbg !64\r\n  %20 = load i64, i64* %18, !dbg !64\r\n  br label %bb1, !dbg !64\r\n\r\nbb1:                                              ; preds = %start\r\n  ret i64 %20, !dbg !65\r\n}\r\n\r\n; Function Attrs: inlinehint uwtable\r\ndefine internal i32* @\"_ZN53_$LT$$u5b$T$u5d$$u20$as$u20$core..slice..SliceExt$GT$6as_ptr17h3d03e9129c948913E\"(i32* noalias nonnull readonly, i64) unnamed_addr #0 !dbg !66 {\r\nentry-block:\r\n  %self = alloca { i32*, i64 }\r\n  %arg0 = alloca { i32*, i64 }\r\n  %2 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %arg0, i32 0, i32 0\r\n  store i32* %0, i32** %2\r\n  %3 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %arg0, i32 0, i32 1\r\n  store i64 %1, i64* %3\r\n  call void @llvm.dbg.declare(metadata { i32*, i64 }* %arg0, metadata !69, metadata !26), !dbg !70\r\n  call void @llvm.dbg.declare(metadata { i32*, i64 }* %self, metadata !71, metadata !26), !dbg !73\r\n  br label %start, !dbg !73\r\n\r\nstart:                                            ; preds = %entry-block\r\n  %4 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %arg0, i32 0, i32 0, !dbg !74\r\n  %5 = load i32*, i32** %4, !dbg !74, !nonnull !2\r\n  %6 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %arg0, i32 0, i32 1, !dbg !74\r\n  %7 = load i64, i64* %6, !dbg !74\r\n  %8 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %self, i32 0, i32 0, !dbg !74\r\n  store i32* %5, i32** %8, !dbg !74\r\n  %9 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %self, i32 0, i32 1, !dbg !74\r\n  store i64 %7, i64* %9, !dbg !74\r\n  %10 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %self, i32 0, i32 0, !dbg !75\r\n  %11 = load i32*, i32** %10, !dbg !75, !nonnull !2\r\n  %12 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %self, i32 0, i32 1, !dbg !75\r\n  %13 = load i64, i64* %12, !dbg !75\r\n  ret i32* %11, !dbg !76\r\n}\r\n\r\n; Function Attrs: uwtable\r\ndefine internal zeroext i1 @\"_ZN68_$LT$$u5b$A$u5d$$u20$as$u20$core..slice..SlicePartialEq$LT$A$GT$$GT$5equal17h29b0745304278f2eE\"(i32* noalias nonnull readonly, i64, i32* noalias nonnull readonly, i64) unnamed_addr #1 !dbg !77 {\r\nentry-block:\r\n  %size = alloca i64\r\n  %_11 = alloca {}\r\n  %_5 = alloca {}\r\n  %other = alloca { i32*, i64 }\r\n  %self = alloca { i32*, i64 }\r\n  %_0 = alloca i8\r\n  %arg1 = alloca { i32*, i64 }\r\n  %arg0 = alloca { i32*, i64 }\r\n  %4 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %arg0, i32 0, i32 0\r\n  store i32* %0, i32** %4\r\n  %5 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %arg0, i32 0, i32 1\r\n  store i64 %1, i64* %5\r\n  call void @llvm.dbg.declare(metadata { i32*, i64 }* %arg0, metadata !80, metadata !26), !dbg !81\r\n  %6 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %arg1, i32 0, i32 0\r\n  store i32* %2, i32** %6\r\n  %7 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %arg1, i32 0, i32 1\r\n  store i64 %3, i64* %7\r\n  call void @llvm.dbg.declare(metadata { i32*, i64 }* %arg1, metadata !82, metadata !26), !dbg !81\r\n  call void @llvm.dbg.declare(metadata { i32*, i64 }* %self, metadata !83, metadata !26), !dbg !85\r\n  call void @llvm.dbg.declare(metadata { i32*, i64 }* %other, metadata !86, metadata !26), !dbg !85\r\n  call void @llvm.dbg.declare(metadata i64* %size, metadata !87, metadata !26), !dbg !89\r\n  br label %start, !dbg !89\r\n\r\nstart:                                            ; preds = %entry-block\r\n  %8 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %arg0, i32 0, i32 0, !dbg !90\r\n  %9 = load i32*, i32** %8, !dbg !90, !nonnull !2\r\n  %10 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %arg0, i32 0, i32 1, !dbg !90\r\n  %11 = load i64, i64* %10, !dbg !90\r\n  %12 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %self, i32 0, i32 0, !dbg !90\r\n  store i32* %9, i32** %12, !dbg !90\r\n  %13 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %self, i32 0, i32 1, !dbg !90\r\n  store i64 %11, i64* %13, !dbg !90\r\n  %14 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %arg1, i32 0, i32 0, !dbg !90\r\n  %15 = load i32*, i32** %14, !dbg !90, !nonnull !2\r\n  %16 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %arg1, i32 0, i32 1, !dbg !90\r\n  %17 = load i64, i64* %16, !dbg !90\r\n  %18 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %other, i32 0, i32 0, !dbg !90\r\n  store i32* %15, i32** %18, !dbg !90\r\n  %19 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %other, i32 0, i32 1, !dbg !90\r\n  store i64 %17, i64* %19, !dbg !90\r\n  %20 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %self, i32 0, i32 0, !dbg !91\r\n  %21 = load i32*, i32** %20, !dbg !91, !nonnull !2\r\n  %22 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %self, i32 0, i32 1, !dbg !91\r\n  %23 = load i64, i64* %22, !dbg !91\r\n  %24 = call i64 @\"_ZN53_$LT$$u5b$T$u5d$$u20$as$u20$core..slice..SliceExt$GT$3len17h6e1c3544d59ef48dE\"(i32* noalias nonnull readonly %21, i64 %23), !dbg !91\r\n  br label %bb1, !dbg !91\r\n\r\nbb1:                                              ; preds = %start\r\n  %25 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %other, i32 0, i32 0, !dbg !91\r\n  %26 = load i32*, i32** %25, !dbg !91, !nonnull !2\r\n  %27 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %other, i32 0, i32 1, !dbg !91\r\n  %28 = load i64, i64* %27, !dbg !91\r\n  %29 = call i64 @\"_ZN53_$LT$$u5b$T$u5d$$u20$as$u20$core..slice..SliceExt$GT$3len17h6e1c3544d59ef48dE\"(i32* noalias nonnull readonly %26, i64 %28), !dbg !91\r\n  br label %bb2, !dbg !91\r\n\r\nbb2:                                              ; preds = %bb1\r\n  %30 = icmp ne i64 %24, %29, !dbg !91\r\n  br i1 %30, label %bb3, label %bb4, !dbg !91\r\n\r\nbb3:                                              ; preds = %bb2\r\n  store i8 0, i8* %_0, !dbg !92\r\n  br label %bb6, !dbg !92\r\n\r\nbb4:                                              ; preds = %bb2\r\n  %31 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %self, i32 0, i32 0, !dbg !93\r\n  %32 = load i32*, i32** %31, !dbg !93, !nonnull !2\r\n  %33 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %self, i32 0, i32 1, !dbg !93\r\n  %34 = load i64, i64* %33, !dbg !93\r\n  %35 = call i32* @\"_ZN53_$LT$$u5b$T$u5d$$u20$as$u20$core..slice..SliceExt$GT$6as_ptr17h3d03e9129c948913E\"(i32* noalias nonnull readonly %32, i64 %34), !dbg !93\r\n  br label %bb7, !dbg !93\r\n\r\nbb5:                                              ; preds = %bb6, %bb14\r\n  %36 = load i8, i8* %_0, !dbg !94, !range !95\r\n  %37 = trunc i8 %36 to i1, !dbg !94\r\n  ret i1 %37, !dbg !94\r\n\r\nbb6:                                              ; preds = %bb3, %bb9\r\n  br label %bb5, !dbg !96\r\n\r\nbb7:                                              ; preds = %bb4\r\n  %38 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %other, i32 0, i32 0, !dbg !93\r\n  %39 = load i32*, i32** %38, !dbg !93, !nonnull !2\r\n  %40 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %other, i32 0, i32 1, !dbg !93\r\n  %41 = load i64, i64* %40, !dbg !93\r\n  %42 = call i32* @\"_ZN53_$LT$$u5b$T$u5d$$u20$as$u20$core..slice..SliceExt$GT$6as_ptr17h3d03e9129c948913E\"(i32* noalias nonnull readonly %39, i64 %41), !dbg !93\r\n  br label %bb8, !dbg !93\r\n\r\nbb8:                                              ; preds = %bb7\r\n  %43 = icmp eq i32* %35, %42, !dbg !93\r\n  br i1 %43, label %bb9, label %bb10, !dbg !93\r\n\r\nbb9:                                              ; preds = %bb8\r\n  store i8 1, i8* %_0, !dbg !97\r\n  br label %bb6, !dbg !97\r\n\r\nbb10:                                             ; preds = %bb8\r\n  %44 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %self, i32 0, i32 0, !dbg !98\r\n  %45 = load i32*, i32** %44, !dbg !98, !nonnull !2\r\n  %46 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %self, i32 0, i32 1, !dbg !98\r\n  %47 = load i64, i64* %46, !dbg !98\r\n  %48 = call i64 @_ZN4core3mem11size_of_val17h360e37c198a29e05E(i32* noalias nonnull readonly %45, i64 %47), !dbg !98\r\n  store i64 %48, i64* %size, !dbg !98\r\n  br label %bb11, !dbg !98\r\n\r\nbb11:                                             ; preds = %bb10\r\n  %49 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %self, i32 0, i32 0, !dbg !99\r\n  %50 = load i32*, i32** %49, !dbg !99, !nonnull !2\r\n  %51 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %self, i32 0, i32 1, !dbg !99\r\n  %52 = load i64, i64* %51, !dbg !99\r\n  %53 = call i32* @\"_ZN53_$LT$$u5b$T$u5d$$u20$as$u20$core..slice..SliceExt$GT$6as_ptr17h3d03e9129c948913E\"(i32* noalias nonnull readonly %50, i64 %52), !dbg !99\r\n  br label %bb12, !dbg !99\r\n\r\nbb12:                                             ; preds = %bb11\r\n  %54 = bitcast i32* %53 to i8*, !dbg !99\r\n  %55 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %other, i32 0, i32 0, !dbg !100\r\n  %56 = load i32*, i32** %55, !dbg !100, !nonnull !2\r\n  %57 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %other, i32 0, i32 1, !dbg !100\r\n  %58 = load i64, i64* %57, !dbg !100\r\n  %59 = call i32* @\"_ZN53_$LT$$u5b$T$u5d$$u20$as$u20$core..slice..SliceExt$GT$6as_ptr17h3d03e9129c948913E\"(i32* noalias nonnull readonly %56, i64 %58), !dbg !100\r\n  br label %bb13, !dbg !100\r\n\r\nbb13:                                             ; preds = %bb12\r\n  %60 = bitcast i32* %59 to i8*, !dbg !100\r\n  %61 = load i64, i64* %size, !dbg !100\r\n  %62 = call i32 @memcmp(i8* %54, i8* %60, i64 %61), !dbg !99\r\n  br label %bb14, !dbg !99\r\n\r\nbb14:                                             ; preds = %bb13\r\n  %63 = icmp eq i32 %62, 0, !dbg !99\r\n  %64 = zext i1 %63 to i8, !dbg !99\r\n  store i8 %64, i8* %_0, !dbg !99\r\n  br label %bb5, !dbg !94\r\n}\r\n\r\n; Function Attrs: nounwind readnone\r\ndeclare void @llvm.dbg.declare(metadata, metadata, metadata) #2\r\n\r\n; Function Attrs: nounwind\r\ndeclare i32 @memcmp(i8*, i8*, i64) unnamed_addr #3\r\n\r\nattributes #0 = { inlinehint uwtable \"no-frame-pointer-elim\"=\"true\" }\r\nattributes #1 = { uwtable \"no-frame-pointer-elim\"=\"true\" }\r\nattributes #2 = { nounwind readnone }\r\nattributes #3 = { nounwind \"no-frame-pointer-elim\"=\"true\" }\r\n\r\n!llvm.dbg.cu = !{!0}\r\n!llvm.module.flags = !{!3}\r\n\r\n!0 = distinct !DICompileUnit(language: DW_LANG_Rust, file: !1, producer: \"rustc version 1.16.0-beta.3 (ecbf0b59e 2017-03-02)\", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2)\r\n!1 = !DIFile(filename: \"rust_out\", directory: \"/tmp\")\r\n!2 = !{}\r\n!3 = !{i32 2, !\"Debug Info Version\", i32 3}\r\n!4 = distinct !DISubprogram(name: \"size_of_val<[i32]>\", linkageName: \"_ZN4core3mem18size_of_val<[i32]>E\", scope: !6, file: !5, line: 217, type: !9, isLocal: false, isDefinition: true, scopeLine: 217, flags: DIFlagPrototyped, isOptimized: false, unit: !0, templateParams: !19, variables: !2)\r\n!5 = !DIFile(filename: \"/buildslave/rust-buildbot/slave/beta-dist-rustc-linux/build/src/libcore/mem.rs\", directory: \"/tmp\")\r\n!6 = !DINamespace(name: \"mem\", scope: !7, file: !5, line: 11)\r\n!7 = !DINamespace(name: \"core\", scope: null, file: !8, line: 11)\r\n!8 = !DIFile(filename: \"/buildslave/rust-buildbot/slave/beta-dist-rustc-linux/build/src/libcore/lib.rs\", directory: \"/tmp\")\r\n!9 = !DISubroutineType(types: !10)\r\n!10 = !{!11, !12}\r\n!11 = !DIBasicType(name: \"usize\", size: 64, align: 64, encoding: DW_ATE_unsigned)\r\n!12 = !DICompositeType(tag: DW_TAG_structure_type, name: \"&[i32]\", file: !13, size: 128, align: 64, elements: !14, identifier: \"a5cff9aaa9457687cc2319407c8037a34d60d3c2\")\r\n!13 = !DIFile(filename: \"<unknown>\", directory: \"\")\r\n!14 = !{!15, !18}\r\n!15 = !DIDerivedType(tag: DW_TAG_member, name: \"data_ptr\", scope: !12, file: !13, baseType: !16, size: 64, align: 64)\r\n!16 = !DIDerivedType(tag: DW_TAG_pointer_type, name: \"*const i32\", baseType: !17, size: 64, align: 64)\r\n!17 = !DIBasicType(name: \"i32\", size: 32, align: 32, encoding: DW_ATE_signed)\r\n!18 = !DIDerivedType(tag: DW_TAG_member, name: \"length\", scope: !12, file: !13, baseType: !11, size: 64, align: 64, offset: 64)\r\n!19 = !{!20}\r\n!20 = !DITemplateTypeParameter(name: \"T\", type: !21)\r\n!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17, align: 32, elements: !22)\r\n!22 = !{!23}\r\n!23 = !DISubrange(count: -1)\r\n!24 = !DILocalVariable(name: \"val\", arg: 1, scope: !4, file: !25, line: 1, type: !12)\r\n!25 = !DIFile(filename: \"<anon>\", directory: \"/tmp\")\r\n!26 = !DIExpression()\r\n!27 = !DILocation(line: 1, scope: !4)\r\n!28 = !DILocalVariable(name: \"val\", scope: !29, file: !5, line: 217, type: !12)\r\n!29 = distinct !DILexicalBlock(scope: !4, file: !5, line: 217, column: 48)\r\n!30 = !DILocation(line: 217, scope: !29)\r\n!31 = !DILocation(line: 217, scope: !4)\r\n!32 = !DILocation(line: 218, scope: !29)\r\n!33 = !DILocation(line: 219, scope: !29)\r\n!34 = distinct !DISubprogram(name: \"eq<i32,i32>\", linkageName: \"_ZN4core5slice8{{impl}}11eq<i32,i32>E\", scope: !36, file: !35, line: 2193, type: !38, isLocal: false, isDefinition: true, scopeLine: 2193, flags: DIFlagPrototyped, isOptimized: false, unit: !0, templateParams: !41, variables: !2)\r\n!35 = !DIFile(filename: \"/buildslave/rust-buildbot/slave/beta-dist-rustc-linux/build/src/libcore/slice.rs\", directory: \"/tmp\")\r\n!36 = !DINamespace(name: \"{{impl}}\", scope: !37, file: !35, line: 2192)\r\n!37 = !DINamespace(name: \"slice\", scope: !7, file: !35, line: 11)\r\n!38 = !DISubroutineType(types: !39)\r\n!39 = !{!40, !12, !12}\r\n!40 = !DIBasicType(name: \"bool\", size: 8, align: 8, encoding: DW_ATE_boolean)\r\n!41 = !{!42, !43}\r\n!42 = !DITemplateTypeParameter(name: \"A\", type: !17)\r\n!43 = !DITemplateTypeParameter(name: \"B\", type: !17)\r\n!44 = !DILocalVariable(name: \"self\", arg: 1, scope: !34, file: !25, line: 1, type: !12)\r\n!45 = !DILocation(line: 1, scope: !34)\r\n!46 = !DILocalVariable(name: \"other\", arg: 2, scope: !34, file: !25, line: 1, type: !12)\r\n!47 = !DILocalVariable(name: \"self\", scope: !48, file: !35, line: 2193, type: !12)\r\n!48 = distinct !DILexicalBlock(scope: !34, file: !35, line: 2193, column: 38)\r\n!49 = !DILocation(line: 2193, scope: !48)\r\n!50 = !DILocalVariable(name: \"other\", scope: !48, file: !35, line: 2193, type: !12)\r\n!51 = !DILocation(line: 2193, scope: !34)\r\n!52 = !DILocation(line: 2194, scope: !48)\r\n!53 = !DILocation(line: 2195, scope: !48)\r\n!54 = distinct !DISubprogram(name: \"len<i32>\", linkageName: \"_ZN4core5slice8{{impl}}8len<i32>E\", scope: !55, file: !35, line: 348, type: !9, isLocal: false, isDefinition: true, scopeLine: 348, flags: DIFlagPrototyped, isOptimized: false, unit: !0, templateParams: !56, variables: !2)\r\n!55 = !DINamespace(name: \"{{impl}}\", scope: !37, file: !35, line: 211)\r\n!56 = !{!57}\r\n!57 = !DITemplateTypeParameter(name: \"T\", type: !17)\r\n!58 = !DILocalVariable(name: \"self\", arg: 1, scope: !54, file: !25, line: 1, type: !12)\r\n!59 = !DILocation(line: 1, scope: !54)\r\n!60 = !DILocalVariable(name: \"self\", scope: !61, file: !35, line: 348, type: !12)\r\n!61 = distinct !DILexicalBlock(scope: !54, file: !35, line: 348, column: 27)\r\n!62 = !DILocation(line: 348, scope: !61)\r\n!63 = !DILocation(line: 348, scope: !54)\r\n!64 = !DILocation(line: 350, scope: !61)\r\n!65 = !DILocation(line: 352, scope: !61)\r\n!66 = distinct !DISubprogram(name: \"as_ptr<i32>\", linkageName: \"_ZN4core5slice8{{impl}}11as_ptr<i32>E\", scope: !55, file: !35, line: 321, type: !67, isLocal: false, isDefinition: true, scopeLine: 321, flags: DIFlagPrototyped, isOptimized: false, unit: !0, templateParams: !56, variables: !2)\r\n!67 = !DISubroutineType(types: !68)\r\n!68 = !{!16, !12}\r\n!69 = !DILocalVariable(name: \"self\", arg: 1, scope: !66, file: !25, line: 1, type: !12)\r\n!70 = !DILocation(line: 1, scope: !66)\r\n!71 = !DILocalVariable(name: \"self\", scope: !72, file: !35, line: 321, type: !12)\r\n!72 = distinct !DILexicalBlock(scope: !66, file: !35, line: 321, column: 33)\r\n!73 = !DILocation(line: 321, scope: !72)\r\n!74 = !DILocation(line: 321, scope: !66)\r\n!75 = !DILocation(line: 322, scope: !72)\r\n!76 = !DILocation(line: 323, scope: !72)\r\n!77 = distinct !DISubprogram(name: \"equal<i32>\", linkageName: \"_ZN4core5slice8{{impl}}10equal<i32>E\", scope: !78, file: !35, line: 2250, type: !38, isLocal: false, isDefinition: true, scopeLine: 2250, flags: DIFlagPrototyped, isOptimized: false, unit: !0, templateParams: !79, variables: !2)\r\n!78 = !DINamespace(name: \"{{impl}}\", scope: !37, file: !35, line: 2247)\r\n!79 = !{!42}\r\n!80 = !DILocalVariable(name: \"self\", arg: 1, scope: !77, file: !25, line: 1, type: !12)\r\n!81 = !DILocation(line: 1, scope: !77)\r\n!82 = !DILocalVariable(name: \"other\", arg: 2, scope: !77, file: !25, line: 1, type: !12)\r\n!83 = !DILocalVariable(name: \"self\", scope: !84, file: !35, line: 2250, type: !12)\r\n!84 = distinct !DILexicalBlock(scope: !77, file: !35, line: 2250, column: 41)\r\n!85 = !DILocation(line: 2250, scope: !84)\r\n!86 = !DILocalVariable(name: \"other\", scope: !84, file: !35, line: 2250, type: !12)\r\n!87 = !DILocalVariable(name: \"size\", scope: !88, file: !35, line: 2258, type: !11)\r\n!88 = distinct !DILexicalBlock(scope: !84, file: !35, line: 2258, column: 46)\r\n!89 = !DILocation(line: 2258, scope: !88)\r\n!90 = !DILocation(line: 2250, scope: !77)\r\n!91 = !DILocation(line: 2251, scope: !84)\r\n!92 = !DILocation(line: 2252, scope: !84)\r\n!93 = !DILocation(line: 2254, scope: !84)\r\n!94 = !DILocation(line: 2262, scope: !84)\r\n!95 = !{i8 0, i8 2}\r\n!96 = !DILocation(line: 2252, scope: !77)\r\n!97 = !DILocation(line: 2255, scope: !84)\r\n!98 = !DILocation(line: 2258, scope: !84)\r\n!99 = !DILocation(line: 2259, scope: !88)\r\n!100 = !DILocation(line: 2260, scope: !88)\r\n```", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/40392/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/40392/timeline", "performed_via_github_app": null, "state_reason": "completed"}