{"url": "https://api.github.com/repos/rust-lang/rust/issues/87215", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/87215/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/87215/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/87215/events", "html_url": "https://github.com/rust-lang/rust/issues/87215", "id": 946811106, "node_id": "MDU6SXNzdWU5NDY4MTExMDY=", "number": 87215, "title": "Address sanitizer false positive when calling FFI function", "user": {"login": "crumblingstatue", "id": 1521976, "node_id": "MDQ6VXNlcjE1MjE5NzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1521976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/crumblingstatue", "html_url": "https://github.com/crumblingstatue", "followers_url": "https://api.github.com/users/crumblingstatue/followers", "following_url": "https://api.github.com/users/crumblingstatue/following{/other_user}", "gists_url": "https://api.github.com/users/crumblingstatue/gists{/gist_id}", "starred_url": "https://api.github.com/users/crumblingstatue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/crumblingstatue/subscriptions", "organizations_url": "https://api.github.com/users/crumblingstatue/orgs", "repos_url": "https://api.github.com/users/crumblingstatue/repos", "events_url": "https://api.github.com/users/crumblingstatue/events{/privacy}", "received_events_url": "https://api.github.com/users/crumblingstatue/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-07-17T12:05:31Z", "updated_at": "2022-02-05T11:17:34Z", "closed_at": "2022-02-05T11:17:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When calling an extern C function with a specific signature, -Zsanitize=address reports a false positive error.\r\nI included a C version of calling the same function in the same way, which reports no error.\r\n\r\nSeems to only trigger with opt-level=0. If the Rust version is built with opt-level=1 or above, no error gets reported.\r\n\r\nmytestlib.h:\r\n```c\r\ntypedef struct\r\n{\r\n    int a;\r\n    int b;\r\n    int c;\r\n} Foo;\r\n\r\nvoid bar(Foo foo, const char* bytes);\r\n```\r\nmytestlib.c:\r\n```c\r\n// clang -shared mytestlib.c -o libmytestlib.so\r\n\r\n#include \"mytestlib.h\"\r\n\r\nvoid bar(Foo foo, const char* bytes)\r\n{\r\n}\r\n```\r\ncver.c:\r\n```c\r\n// clang -I. cver.c -L. -fsanitize=address -lmytestlib -o cver\r\n\r\n#include \"mytestlib.h\"\r\n\r\nint main() {\r\n    Foo foo = {0, 0, 0};\r\n    const char bytes[16] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\r\n    bar(foo, bytes);\r\n}\r\n```\r\nrustver.rs:\r\n```Rust\r\n// rustc rustver.rs -L. -lmytestlib -Z sanitizer=address\r\n\r\n#![allow(non_snake_case)]\r\n\r\nuse std::os::raw::{c_char, c_int, c_void};\r\n\r\n#[repr(C)]\r\nstruct Foo {\r\n    a: c_int,\r\n    b: c_int,\r\n    c: c_int,\r\n}\r\n\r\nextern \"C\" {\r\n    fn bar(\r\n        foo: Foo,\r\n        bytes: *const c_char\r\n    ) -> c_void;\r\n}\r\n\r\nfn main() {\r\n    let mode = Foo {\r\n        a: 0,\r\n        b: 0,\r\n        c: 0,\r\n    };\r\n    let bytes = [0i8; 16];\r\n    unsafe {\r\n        bar(mode, bytes.as_ptr());\r\n    }\r\n}\r\n```\r\nSanitizer output of Rust version:\r\n```\r\n==49283==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffcae60082f at pc 0x5602f4817870 bp 0x7ffcae6007f0 sp 0x7ffcae6007e8\r\nREAD of size 16 at 0x7ffcae60082f thread T0\r\n    #0 0x5602f481786f in rustver::main::h9c19e03384d64f73 (/tmp/sftest/rustver+0x9a86f)\r\n    #1 0x5602f48180c2 in core::ops::function::FnOnce::call_once::hd1707a0f7551fbaf (/tmp/sftest/rustver+0x9b0c2)\r\n    #2 0x5602f48179dd in std::sys_common::backtrace::__rust_begin_short_backtrace::h4bf5b3587a924875 (/tmp/sftest/rustver+0x9a9dd)\r\n    #3 0x5602f4817d1e in std::rt::lang_start::_$u7b$$u7b$closure$u7d$$u7d$::h7082ba1ef153c8f6 (/tmp/sftest/rustver+0x9ad1e)\r\n    #4 0x5602f48285a9 in core::ops::function::impls::_$LT$impl$u20$core..ops..function..FnOnce$LT$A$GT$$u20$for$u20$$RF$F$GT$::call_once::h61bcc1dec5918b7e /rustc/74ef0c3e404cc72c08b2d1e14506f90d9e877269/library/core/src/ops/function.rs:259:13\r\n    #5 0x5602f48285a9 in std::panicking::try::do_call::h672d24f85ce22db4 /rustc/74ef0c3e404cc72c08b2d1e14506f90d9e877269/library/std/src/panicking.rs:401:40\r\n    #6 0x5602f48285a9 in std::panicking::try::he383e7ef11604e58 /rustc/74ef0c3e404cc72c08b2d1e14506f90d9e877269/library/std/src/panicking.rs:365:19\r\n    #7 0x5602f48285a9 in std::panic::catch_unwind::h502ac6058961e393 /rustc/74ef0c3e404cc72c08b2d1e14506f90d9e877269/library/std/src/panic.rs:434:14\r\n    #8 0x5602f48285a9 in std::rt::lang_start_internal::_$u7b$$u7b$closure$u7d$$u7d$::h851ee37bb5d99fdf /rustc/74ef0c3e404cc72c08b2d1e14506f90d9e877269/library/std/src/rt.rs:45:48\r\n    #9 0x5602f48285a9 in std::panicking::try::do_call::h84f41bb3453bbd14 /rustc/74ef0c3e404cc72c08b2d1e14506f90d9e877269/library/std/src/panicking.rs:401:40\r\n    #10 0x5602f48285a9 in std::panicking::try::h969c45dbbf2e4c94 /rustc/74ef0c3e404cc72c08b2d1e14506f90d9e877269/library/std/src/panicking.rs:365:19\r\n    #11 0x5602f48285a9 in std::panic::catch_unwind::he40b1a4614f73e03 /rustc/74ef0c3e404cc72c08b2d1e14506f90d9e877269/library/std/src/panic.rs:434:14\r\n    #12 0x5602f48285a9 in std::rt::lang_start_internal::h0fbab25cccdb30d8 /rustc/74ef0c3e404cc72c08b2d1e14506f90d9e877269/library/std/src/rt.rs:45:20\r\n    #13 0x5602f4817c80 in std::rt::lang_start::h545ca672193475cc (/tmp/sftest/rustver+0x9ac80)\r\n    #14 0x5602f4817912 in main (/tmp/sftest/rustver+0x9a912)\r\n    #15 0x7f712db19b24 in __libc_start_main (/usr/lib/libc.so.6+0x27b24)\r\n    #16 0x5602f478a6bd in _start (/tmp/sftest/rustver+0xd6bd)\r\n\r\nAddress 0x7ffcae60082f is located in stack of thread T0 at offset 47 in frame\r\n    #0 0x5602f48175ff in rustver::main::h9c19e03384d64f73 (/tmp/sftest/rustver+0x9a5ff)\r\n\r\n  This frame has 3 object(s):\r\n    [32, 44) '_4'\r\n    [64, 80) 'bytes' <== Memory access at offset 47 underflows this variable\r\n    [96, 108) 'mode'\r\nHINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork\r\n      (longjmp and C++ exceptions *are* supported)\r\nSUMMARY: AddressSanitizer: stack-buffer-overflow (/tmp/sftest/rustver+0x9a86f) in rustver::main::h9c19e03384d64f73\r\nShadow bytes around the buggy address:\r\n  0x100015cb80b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\r\n  0x100015cb80c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\r\n  0x100015cb80d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\r\n  0x100015cb80e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\r\n  0x100015cb80f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\r\n=>0x100015cb8100: f1 f1 f1 f1 00[04]f2 f2 00 00 f2 f2 00 04 f3 f3\r\n  0x100015cb8110: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\r\n  0x100015cb8120: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\r\n  0x100015cb8130: f1 f1 f1 f1 f8 f8 f3 f3 00 00 00 00 00 00 00 00\r\n  0x100015cb8140: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\r\n  0x100015cb8150: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\r\nShadow byte legend (one shadow byte represents 8 application bytes):\r\n  Addressable:           00\r\n  Partially addressable: 01 02 03 04 05 06 07\r\n  Heap left redzone:       fa\r\n  Freed heap region:       fd\r\n  Stack left redzone:      f1\r\n  Stack mid redzone:       f2\r\n  Stack right redzone:     f3\r\n  Stack after return:      f5\r\n  Stack use after scope:   f8\r\n  Global redzone:          f9\r\n  Global init order:       f6\r\n  Poisoned by user:        f7\r\n  Container overflow:      fc\r\n  Array cookie:            ac\r\n  Intra object redzone:    bb\r\n  ASan internal:           fe\r\n  Left alloca redzone:     ca\r\n  Right alloca redzone:    cb\r\n  Shadow gap:              cc\r\n  ```\r\n\r\nMeta:\r\nrustc 1.55.0-nightly (74ef0c3e4 2021-07-16)\r\nLinux 5.13.1-arch1-1 #1 SMP PREEMPT Fri, 09 Jul 2021 23:42:24 +0000 x86_64 GNU/Linux\r\n\r\n", "closed_by": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/87215/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/87215/timeline", "performed_via_github_app": null, "state_reason": "completed"}