{"url": "https://api.github.com/repos/rust-lang/rust/issues/108018", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/108018/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/108018/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/108018/events", "html_url": "https://github.com/rust-lang/rust/issues/108018", "id": 1583263803, "node_id": "I_kwDOAAsO6M5eXrA7", "number": 108018, "title": "Suggest easily-typo'd alternate methods that match provided arguments", "user": {"login": "alice-i-cecile", "id": 3579909, "node_id": "MDQ6VXNlcjM1Nzk5MDk=", "avatar_url": "https://avatars.githubusercontent.com/u/3579909?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alice-i-cecile", "html_url": "https://github.com/alice-i-cecile", "followers_url": "https://api.github.com/users/alice-i-cecile/followers", "following_url": "https://api.github.com/users/alice-i-cecile/following{/other_user}", "gists_url": "https://api.github.com/users/alice-i-cecile/gists{/gist_id}", "starred_url": "https://api.github.com/users/alice-i-cecile/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alice-i-cecile/subscriptions", "organizations_url": "https://api.github.com/users/alice-i-cecile/orgs", "repos_url": "https://api.github.com/users/alice-i-cecile/repos", "events_url": "https://api.github.com/users/alice-i-cecile/events{/privacy}", "received_events_url": "https://api.github.com/users/alice-i-cecile/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 239393, "node_id": "MDU6TGFiZWwyMzkzOTM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-resolve", "name": "A-resolve", "color": "f7e101", "default": false, "description": "Area: Path resolution"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1596122130, "node_id": "MDU6TGFiZWwxNTk2MTIyMTMw", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-papercut", "name": "D-papercut", "color": "c9f7a3", "default": false, "description": "Diagnostic error that needs small tweaks"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2023-02-14T00:08:54Z", "updated_at": "2023-02-17T20:31:17Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "### Code\n\n```Rust\nfn main() {\r\n    0.add_number(vec![1,2,3]);\r\n    0.add_numbers(1);\r\n}\r\n\r\ntrait Adder {\r\n    fn add_number(&self, number: i32) -> i32;\r\n    fn add_numbers(&self, numbers: impl IntoIterator<Item=i32>) -> i32;\r\n}\r\n\r\nimpl Adder for i32 {\r\n    fn add_number(&self, number: i32) -> i32 {\r\n        self + number\r\n    }\r\n\r\n    fn add_numbers(&self, numbers: impl IntoIterator<Item=i32>) -> i32 {\r\n        self + numbers.into_iter().sum::<i32>()\r\n    }\r\n}\r\n\r\n\r\n[Playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=817296cf5e5207ed8df1542ed311297d)\n```\n\n\n### Current output\n\n```Shell\nerror[E0308]: mismatched types\r\n --> src/main.rs:2:18\r\n  |\r\n2 |     0.add_number(vec![1,2,3]);\r\n  |       ---------- ^^^^^^^^^^^ expected `i32`, found struct `Vec`\r\n  |       |\r\n  |       arguments to this function are incorrect\r\n  |\r\n  = note: expected type `i32`\r\n           found struct `Vec<{integer}>`\r\nnote: associated function defined here\r\n --> src/main.rs:7:8\r\n  |\r\n7 |     fn add_number(&self, number: i32) -> i32;\r\n  |        ^^^^^^^^^^\r\n\r\nerror[E0277]: `{integer}` is not an iterator\r\n --> src/main.rs:3:19\r\n  |\r\n3 |     0.add_numbers(1);\r\n  |       ----------- ^ `{integer}` is not an iterator\r\n  |       |\r\n  |       required by a bound introduced by this call\r\n  |\r\n  = help: the trait `Iterator` is not implemented for `{integer}`\r\n  = note: if you want to iterate between `start` until a value `end`, use the exclusive range syntax `start..end` or the inclusive range syntax `start..=end`\r\n  = note: required for `{integer}` to implement `IntoIterator`\r\nnote: required by a bound in `Adder::add_numbers`\r\n --> src/main.rs:8:41\r\n  |\r\n8 |     fn add_numbers(&self, numbers: impl IntoIterator<Item=i32>) -> i32;\r\n  |                                         ^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `Adder::add_numbers`\r\n\r\nSome errors have detailed explanations: E0277, E0308.\r\nFor more information about an error, try `rustc --explain E0277`.\r\nerror: could not compile `playground` due to 2 previous errors\r\n```\n```\n\n\n### Desired output\n\n```Shell\nThe first line should suggest using `.add_numbers` instead, and the second should recommend using `.add_number` instead.\n```\n\n\n### Rationale and extra context\n\nThis was motivated by https://github.com/bevyengine/bevy/issues/7631. This is a commonly encountered error and new Rust users are thrown off course by the suggestion about trait implementations.\n\n### Other cases\n\n_No response_\n\n### Anything else?\n\n_No response_", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/108018/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 1, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/108018/timeline", "performed_via_github_app": null, "state_reason": null}