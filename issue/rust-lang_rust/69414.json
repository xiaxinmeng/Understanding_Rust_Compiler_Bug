{"url": "https://api.github.com/repos/rust-lang/rust/issues/69414", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/69414/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/69414/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/69414/events", "html_url": "https://github.com/rust-lang/rust/issues/69414", "id": 569577755, "node_id": "MDU6SXNzdWU1Njk1Nzc3NTU=", "number": 69414, "title": "ICE -Zsave-analysis: const-param-type-depends-on-type-param-ungated.rs", "user": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 632580625, "node_id": "MDU6TGFiZWw2MzI1ODA2MjU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-save-analysis", "name": "A-save-analysis", "color": "f7e101", "default": false, "description": "Area: saving results of analyses such as inference and borrowck results to a file."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1282665911, "node_id": "MDU6TGFiZWwxMjgyNjY1OTEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-generics", "name": "A-const-generics", "color": "f7e101", "default": false, "description": "Area: const generics (parameters and arguments)"}, {"id": 1486687397, "node_id": "MDU6TGFiZWwxNDg2Njg3Mzk3", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-const_generics", "name": "F-const_generics", "color": "f9c0cc", "default": false, "description": "`#![feature(const_generics)]`"}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-23T23:26:49Z", "updated_at": "2020-07-18T16:08:20Z", "closed_at": "2020-07-18T16:08:20Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "\r\n`rustc -Zsave-analysis src/test/ui/const-generics/const-param-type-depends-on-type-param-ungated.rs`\r\n\r\n### Code\r\n\r\n```rust\r\nuse std::marker::PhantomData;\r\n\r\nstruct B<T, const N: T>(PhantomData<[T; N]>); //~ ERROR const generics are unstable\r\n//~^ ERROR the types of const generic parameters must derive `PartialEq` and `Eq`\r\n\r\nfn main() {}\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.43.0-nightly (436494b8f 2020-02-22)\r\nbinary: rustc\r\ncommit-hash: 436494b8f8008b600d64b3951f63c2bb0ea81673\r\ncommit-date: 2020-02-22\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.43.0-nightly\r\nLLVM version: 9.0\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nerror[E0658]: const generics are unstable\r\n --> ./ui/const-generics/const-param-type-depends-on-type-param-ungated.rs:3:19\r\n  |\r\n3 | struct B<T, const N: T>(PhantomData<[T; N]>); //~ ERROR const generics are unstable\r\n  |                   ^\r\n  |\r\n  = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\r\n  = help: add `#![feature(const_generics)]` to the crate attributes to enable\r\n\r\nerror[E0741]: the types of const generic parameters must derive `PartialEq` and `Eq`\r\n --> ./ui/const-generics/const-param-type-depends-on-type-param-ungated.rs:3:22\r\n  |\r\n3 | struct B<T, const N: T>(PhantomData<[T; N]>); //~ ERROR const generics are unstable\r\n  |                      ^ `T` doesn't derive both `PartialEq` and `Eq`\r\n\r\nerror: internal compiler error: src/librustc/ty/subst.rs:565: type parameter `T/#0` (T/0) out of range when substituting (root type=Some(T)) substs=[]\r\n\r\nthread 'rustc' panicked at 'Box<Any>', <::std::macros::panic macros>:2:4\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.43.0-nightly (436494b8f 2020-02-22) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -Z save-analysis\r\n\r\nerror: aborting due to 3 previous errors\r\n\r\nSome errors have detailed explanations: E0658, E0741.\r\nFor more information about an error, try `rustc --explain E0658`.\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nerror[E0658]: const generics are unstable\r\n --> ./ui/const-generics/const-param-type-depends-on-type-param-ungated.rs:3:19\r\n  |\r\n3 | struct B<T, const N: T>(PhantomData<[T; N]>); //~ ERROR const generics are unstable\r\n  |                   ^\r\n  |\r\n  = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\r\n  = help: add `#![feature(const_generics)]` to the crate attributes to enable\r\n\r\nerror[E0741]: the types of const generic parameters must derive `PartialEq` and `Eq`\r\n --> ./ui/const-generics/const-param-type-depends-on-type-param-ungated.rs:3:22\r\n  |\r\n3 | struct B<T, const N: T>(PhantomData<[T; N]>); //~ ERROR const generics are unstable\r\n  |                      ^ `T` doesn't derive both `PartialEq` and `Eq`\r\n\r\nerror: internal compiler error: src/librustc/ty/subst.rs:565: type parameter `T/#0` (T/0) out of range when substituting (root type=Some(T)) substs=[]\r\n\r\nthread 'rustc' panicked at 'Box<Any>', <::std::macros::panic macros>:2:4\r\nstack backtrace:\r\n   0: backtrace::backtrace::libunwind::trace\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.44/src/backtrace/libunwind.rs:86\r\n   1: backtrace::backtrace::trace_unsynchronized\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.44/src/backtrace/mod.rs:66\r\n   2: std::sys_common::backtrace::_print_fmt\r\n             at src/libstd/sys_common/backtrace.rs:78\r\n   3: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt\r\n             at src/libstd/sys_common/backtrace.rs:59\r\n   4: core::fmt::write\r\n             at src/libcore/fmt/mod.rs:1052\r\n   5: std::io::Write::write_fmt\r\n             at src/libstd/io/mod.rs:1428\r\n   6: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:62\r\n   7: std::sys_common::backtrace::print\r\n             at src/libstd/sys_common/backtrace.rs:49\r\n   8: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/panicking.rs:204\r\n   9: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:224\r\n  10: rustc_driver::report_ice\r\n  11: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:474\r\n  12: std::panicking::begin_panic\r\n  13: rustc_errors::HandlerInner::span_bug\r\n  14: rustc_errors::Handler::span_bug\r\n  15: rustc::util::bug::opt_span_bug_fmt::{{closure}}\r\n  16: rustc::ty::context::tls::with_opt::{{closure}}\r\n  17: rustc::ty::context::tls::with_opt\r\n  18: rustc::util::bug::opt_span_bug_fmt\r\n  19: rustc::util::bug::span_bug_fmt\r\n  20: <rustc::ty::subst::SubstFolder as rustc::ty::fold::TypeFolder>::fold_ty\r\n  21: rustc_typeck::check::FnCtxt::instantiate_value_path\r\n  22: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_expr_kind\r\n  23: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_expr_with_expectation_and_needs\r\n  24: rustc::ty::context::GlobalCtxt::enter_local\r\n  25: rustc_typeck::check::typeck_tables_of\r\n  26: rustc::ty::query::__query_compute::typeck_tables_of\r\n  27: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::typeck_tables_of>::compute\r\n  28: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  29: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  30: <rustc_save_analysis::dump_visitor::DumpVisitor as syntax::visit::Visitor>::visit_ty\r\n  31: syntax::visit::walk_generic_args\r\n  32: <rustc_save_analysis::dump_visitor::DumpVisitor as syntax::visit::Visitor>::visit_ty\r\n  33: <rustc_save_analysis::dump_visitor::DumpVisitor as syntax::visit::Visitor>::visit_item\r\n  34: <rustc_save_analysis::dump_visitor::DumpVisitor as syntax::visit::Visitor>::visit_mod\r\n  35: rustc::dep_graph::graph::DepGraph::with_ignore\r\n  36: rustc_session::utils::<impl rustc_session::session::Session>::time\r\n  37: rustc::ty::context::tls::enter_global\r\n  38: rustc_interface::interface::run_compiler_in_existing_thread_pool\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.43.0-nightly (436494b8f 2020-02-22) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -Z save-analysis\r\n\r\nquery stack during panic:\r\n#0 [typeck_tables_of] type-checking `B::0::{{constant}}#0`\r\nend of query stack\r\nerror: aborting due to 3 previous errors\r\n\r\nSome errors have detailed explanations: E0658, E0741.\r\nFor more information about an error, try `rustc --explain E0658`.\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/69414/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/69414/timeline", "performed_via_github_app": null, "state_reason": "completed"}