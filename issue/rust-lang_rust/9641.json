{"url": "https://api.github.com/repos/rust-lang/rust/issues/9641", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/9641/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/9641/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/9641/events", "html_url": "https://github.com/rust-lang/rust/issues/9641", "id": 20303591, "node_id": "MDU6SXNzdWUyMDMwMzU5MQ==", "number": 9641, "title": "no debug-info on locals in stack frames when stepping though rust-msgpack", "user": {"login": "glycerine", "id": 445247, "node_id": "MDQ6VXNlcjQ0NTI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/445247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glycerine", "html_url": "https://github.com/glycerine", "followers_url": "https://api.github.com/users/glycerine/followers", "following_url": "https://api.github.com/users/glycerine/following{/other_user}", "gists_url": "https://api.github.com/users/glycerine/gists{/gist_id}", "starred_url": "https://api.github.com/users/glycerine/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glycerine/subscriptions", "organizations_url": "https://api.github.com/users/glycerine/orgs", "repos_url": "https://api.github.com/users/glycerine/repos", "events_url": "https://api.github.com/users/glycerine/events{/privacy}", "received_events_url": "https://api.github.com/users/glycerine/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 203130, "node_id": "MDU6TGFiZWwyMDMxMzA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-debuginfo", "name": "A-debuginfo", "color": "f7e101", "default": false, "description": "Area: Debugging information in compiled programs (DWARF, PDB, etc.)"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2013-10-01T01:26:07Z", "updated_at": "2014-08-07T09:19:01Z", "closed_at": "2014-08-07T09:19:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Josh asked for where I was seeing debug-info goes missing. Most places, in my experience. An easy to repro example is just to debug the msgpack bindings, as below. The rust compiler itself, I'm told from rust/irc, is another prime example.\n\n```\nme@host:/tmp/rust-msgpack$ uname -a\nLinux i7 3.8.0-30-generic #44~precise1-Ubuntu SMP Fri Aug 23 18:32:41 UTC 2013 x86_64 x86_64 x86_64 GNU/Linux\nme@host:/tmp/rust-msgpack$ rustc -v\nrustc 0.8 (48499c7 2013-09-26 15:36:10 -0700)\nhost: x86_64-unknown-linux-gnu\nme@host:/tmp/rust-msgpack$\nme@host:/tmp$ git clone https://github.com/glycerine/rust-msgpack\nCloning into 'rust-msgpack'...\nremote: Counting objects: 85, done.\nremote: Compressing objects: 100% (52/52), done.\nremote: Total 85 (delta 33), reused 84 (delta 32)\nUnpacking objects: 100% (85/85), done.\nme@host:/tmp$ cd rust-msgpack/\nme@host:/tmp/rust-msgpack$ git branch -v\n* master 802d91b add license to readme\nme@host:/tmp/rust-msgpack$ ls\nexample.rs  msgpack.rs  README.md\nme@host:/tmp/rust-msgpack$ rustc -Zextra-debug-info -Z no-opt example.rs\nme@host:/tmp/rust-msgpack$ lh\ntotal 488\ndrwxr-xr-x  3 jaten jaten   4096 Sep 30 18:16 ./\ndrwxrwxrwt 90 root  root   53248 Sep 30 18:16 ../\n-rwxrwxr-x  1 jaten jaten 403433 Sep 30 18:16 example*\ndrwxrwxr-x  8 jaten jaten   4096 Sep 30 18:15 .git/\n-rw-rw-r--  1 jaten jaten  19994 Sep 30 18:15 msgpack.rs\n-rw-rw-r--  1 jaten jaten   1530 Sep 30 18:15 example.rs\n-rw-rw-r--  1 jaten jaten    164 Sep 30 18:15 README.md\nme@host:/tmp/rust-msgpack$ gdb example\nGNU gdb (Ubuntu/Linaro 7.4-2012.04-0ubuntu2.1) 7.4-2012.04\nCopyright (C) 2012 Free Software Foundation, Inc.\nLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.  Type \"show copying\"\nand \"show warranty\" for details.\nThis GDB was configured as \"x86_64-linux-gnu\".\nFor bug reporting instructions, please see:\n<http://bugs.launchpad.net/gdb-linaro/>...\nReading symbols from /tmp/rust-msgpack/example...done.\n(gdb) break msgpack.rs:587\nBreakpoint 1 at 0x4163e7: msgpack.rs:587. (84 locations)\n(gdb) run # 84 locations??\nStarting program: /tmp/rust-msgpack/example\n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\n[New Thread 0x7ffff7fc4700 (LWP 26993)]\n[New Thread 0x7ffff5d67700 (LWP 26994)]\n[New Thread 0x7ffff4fff700 (LWP 26995)]\n[New Thread 0x7ffff4efe700 (LWP 26996)]\n[Switching to Thread 0x7ffff7fc4700 (LWP 26993)]\n\nBreakpoint 1, std..hashmap..HashMap$LT$u32$C$u32$GT$::glue_drop::hf62265217cbfd21aaB ()\n    at msgpack.rs:587\n587           f(self, len)\n(gdb) list\n582         #[inline(always)]\n583         fn read_seq<T>(&mut self, f: &fn(&mut Decoder,uint) -> T) -> T {\n584           //println!(\"in read_seq.\");\n585           let len = self._read_vec_len();\n586           //printfln!(\"I see length of %?\", len);\n587           f(self, len)\n588         }\n589\n590         #[inline(always)]\n591         fn read_seq_elt<T>(&mut self, _idx: uint, f: &fn(&mut Decoder) -> T) -> T { f(self) }\n(gdb) bt\n#0  std..hashmap..HashMap$LT$u32$C$u32$GT$::glue_drop::hf62265217cbfd21aaB () at msgpack.rs:587\n#1  0x000000000042b257 in hashmap::Clone$HashMap::clone::h7953e8b94478d0bcx7aM::v0.0 ()\n    at example.rs:41\n#2  0x0000000000429036 in example::main () at example.rs:41\n#3  0x00007ffff75a1ee0 in rt::task::__extensions__::build_start_wrapper::anon::anon::expr_fn::a0 ()\n   from /tmp/rust-msgpack/../../usr/local/lib/rustc/x86_64-unknown-linux-gnu/lib/libstd-6c65cf4b443341b1-0.8.so\n#4  0x00007ffff75a03a7 in rt::task::__extensions__::run::anon::expr_fn::ai ()\n   from /tmp/rust-msgpack/../../usr/local/lib/rustc/x86_64-unknown-linux-gnu/lib/libstd-6c65cf4b443341b1-0.8.so\n#5  0x00007ffff6d7fb13 in rust_try (f=<optimized out>, fptr=<optimized out>, env=<optimized out>)\n    at /usr/cn/rust/github-master/rust/src/rt/rust_builtin.cpp:499\n#6  0x00007ffff75a02dc in rt::task::Unwinder::try::h199ab8d6eb226980Vqah::v0.8 ()\n   from /tmp/rust-msgpack/../../usr/local/lib/rustc/x86_64-unknown-linux-gnu/lib/libstd-6c65cf4b443341b1-0.8.so\n#7  0x00007ffff75a0151 in rt::task::Task::run::h199ab8d6eb226980Z1ag::v0.8 ()\n   from /tmp/rust-msgpack/../../usr/local/lib/rustc/x86_64-unknown-linux-gnu/lib/libstd-6c65cf4b443341b1-0.8.so\n#8  0x00007ffff75a1a7c in rt::task::__extensions__::build_start_wrapper::anon::expr_fn::aR ()\n   from /tmp/rust-msgpack/../../usr/local/lib/rustc/x86_64-unknown-linux-gnu/lib/libstd-6c65cf4b443341b1-0.8.so\n#9  0x0000000000000000 in ?? ()\n(gdb) list\n592\n593         #[inline(always)]\n594         fn read_struct<T>(&mut self, _name: &str, len: uint, f: &fn(&mut Decoder) -> T) -> T {\n595             //printfln!(\"in read_struct\");\n596           if len != self._read_map_len() { fail!() }\n597 >>>       f(self)\n598         }\n599\n600         #[inline(always)]\n601         fn read_struct_field<T>(&mut self, _name: &str, _idx: uint, f: &fn(&mut Decoder) -> T) -> T {\n(gdb) i lo\nNo symbol table info available.\n(gdb) p len\nNo symbol \"len\" in current context.\n(gdb)\n\n```\n", "closed_by": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/9641/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/9641/timeline", "performed_via_github_app": null, "state_reason": "completed"}