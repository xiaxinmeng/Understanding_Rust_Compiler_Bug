{"url": "https://api.github.com/repos/rust-lang/rust/issues/51540", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/51540/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/51540/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/51540/events", "html_url": "https://github.com/rust-lang/rust/issues/51540", "id": 332112999, "node_id": "MDU6SXNzdWUzMzIxMTI5OTk=", "number": 51540, "title": "Tracking issue for the #[alloc_error_handler] attribute (for no_std + liballoc)", "user": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 129836139, "node_id": "MDU6TGFiZWwxMjk4MzYxMzk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-allocators", "name": "A-allocators", "color": "f7e101", "default": false, "description": "Area: Custom and system allocators"}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 246778137, "node_id": "MDU6TGFiZWwyNDY3NzgxMzc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/B-unstable", "name": "B-unstable", "color": "d304cb", "default": false, "description": "Implemented in the nightly compiler and unstable."}, {"id": 650846969, "node_id": "MDU6TGFiZWw2NTA4NDY5Njk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-tracking-issue", "name": "C-tracking-issue", "color": "f5f1fd", "default": false, "description": "Category: A tracking issue for an RFC or an unstable feature."}, {"id": 880020421, "node_id": "MDU6TGFiZWw4ODAwMjA0MjE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/WG-embedded", "name": "WG-embedded", "color": "c2e0c6", "default": false, "description": "Of interest to the embedded Working Group"}, {"id": 923282386, "node_id": "MDU6TGFiZWw5MjMyODIzODY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/finished-final-comment-period", "name": "finished-final-comment-period", "color": "f9e189", "default": false, "description": "The final comment period is finished for this PR / Issue."}, {"id": 943968375, "node_id": "MDU6TGFiZWw5NDM5NjgzNzU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/disposition-close", "name": "disposition-close", "color": "dd0000", "default": false, "description": "This PR / issue is in PFCP or FCP with a disposition to close it."}, {"id": 2240305001, "node_id": "MDU6TGFiZWwyMjQwMzA1MDAx", "url": "https://api.github.com/repos/rust-lang/rust/labels/Libs-Tracked", "name": "Libs-Tracked", "color": "d4c5f9", "default": false, "description": "Libs issues that are tracked on the team's project board."}, {"id": 3537216018, "node_id": "LA_kwDOAAsO6M7S1aIS", "url": "https://api.github.com/repos/rust-lang/rust/labels/S-tracking-design-concerns", "name": "S-tracking-design-concerns", "color": "4682b4", "default": false, "description": "Blocking design concerns"}, {"id": 3537250192, "node_id": "LA_kwDOAAsO6M7S1ieQ", "url": "https://api.github.com/repos/rust-lang/rust/labels/S-tracking-needs-summary", "name": "S-tracking-needs-summary", "color": "4682b4", "default": false, "description": "It's hard to tell what's been done and what hasn't! Someone should do some investigation."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 137, "created_at": "2018-06-13T18:33:09Z", "updated_at": "2023-04-22T14:37:16Z", "closed_at": "2023-04-22T14:37:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This attribute is mandatory when using the `alloc` crate without the `std` crate. It is used like this:\r\n\r\n```rust\r\n#[alloc_error_handler]\r\nfn foo(_: core::alloc::Layout) -> ! {\r\n    // \u2026\r\n}\r\n```\r\n\r\nImplementation PR: https://github.com/rust-lang/rust/pull/52191\r\n\r\n## Blocking issues\r\n\r\n* [ ] #83430\r\n\r\n## Original issue:\r\n\r\n----\r\n\r\nIn a `no_std` program or staticlib, linking to the `alloc` crate may cause this error:\r\n\r\n```\r\nerror: language item required, but not found: `oom`\r\n```\r\n\r\nThis is fixed by providing the `oom` lang item, which is is normally provided by the `std` crate (where it calls a dynamically-settable hook https://github.com/rust-lang/rust/issues/51245, then aborts). This is called by `alloc::alloc::handle_alloc_error` (which is called by `Vec` and others on memory allocation failure).\r\n\r\n```rust\r\n#![feature(lang_items)]\r\n\r\n#[lang = \"oom\"]\r\nextern fn foo(_: core::alloc::Layout) -> ! {\r\n    // example implementation based on libc\r\n    extern \"C\" { fn abort() -> !; }\r\n    unsafe { abort() }\r\n}\r\n```\r\n\r\nHowever, defining a lang item is an unstable feature.\r\n\r\nPossible solutions include:\r\n\r\n1. Add and stabilize a dedicated attribute similar to [the `#[panic_implementation]` attribute](https://rust-lang.github.io/rfcs/2070-panic-implementation.html#panic_implementation):\r\n\r\n  ```rust\r\n  #[alloc_error_handler]\r\n  fn foo(_: core::alloc::Layout) -> ! {\r\n      // \u2026\r\n  }\r\n  ```\r\n\r\n  The downside is that this is one more mandatory hoop to jump through for `no_std` program that would have been fine with a default hook that aborts.\r\n\r\n2. ~~Move `std`\u2019s dynamically-settable hook into `alloc`: https://github.com/rust-lang/rust/pull/51607. The downside is some mandatory space overhead.~~", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/51540/reactions", "total_count": 6, "+1": 6, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/51540/timeline", "performed_via_github_app": null, "state_reason": "completed"}