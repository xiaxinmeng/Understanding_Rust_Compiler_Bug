{"url": "https://api.github.com/repos/rust-lang/rust/issues/93584", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/93584/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/93584/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/93584/events", "html_url": "https://github.com/rust-lang/rust/issues/93584", "id": 1121942037, "node_id": "I_kwDOAAsO6M5C33oV", "number": 93584, "title": "ICE with incremental compilation in async code", "user": {"login": "bnavetta", "id": 1683332, "node_id": "MDQ6VXNlcjE2ODMzMzI=", "avatar_url": "https://avatars.githubusercontent.com/u/1683332?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bnavetta", "html_url": "https://github.com/bnavetta", "followers_url": "https://api.github.com/users/bnavetta/followers", "following_url": "https://api.github.com/users/bnavetta/following{/other_user}", "gists_url": "https://api.github.com/users/bnavetta/gists{/gist_id}", "starred_url": "https://api.github.com/users/bnavetta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bnavetta/subscriptions", "organizations_url": "https://api.github.com/users/bnavetta/orgs", "repos_url": "https://api.github.com/users/bnavetta/repos", "events_url": "https://api.github.com/users/bnavetta/events{/privacy}", "received_events_url": "https://api.github.com/users/bnavetta/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-02-02T13:41:44Z", "updated_at": "2022-02-02T18:22:26Z", "closed_at": "2022-02-02T18:22:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\nI couldn't figure out how to minimize the code itself, but the exact same crate compiles successfully with incremental compilation disabled (by setting `CARGO_INCREMENTAL=0`) and fails with incremental compilation enabled. Running `cargo clean` also gets incremental compilation working again\r\n\r\n### Code\r\n\r\nThis looked like the function originally identified in the stack trace: \r\n\r\n```Rust\r\nuse camino::Utf8PathBuf;\r\nuse futures::prelude::*;\r\nuse miette::{IntoDiagnostic, WrapErr};\r\nuse tokio::sync::mpsc;\r\nuse tracing::{debug, trace, error, info, instrument};\r\n\r\nuse evdev_async::{AsyncDevice, InputEvent, KeyEvent};\r\n\r\nuse crate::{supervisor::Shutdown, dispatcher::Event};\r\n\r\n#[instrument(skip(stop))]\r\npub async fn watch(path: Utf8PathBuf, dispatch_tx: mpsc::Sender<Event>, mut stop: Shutdown) -> miette::Result<()> {\r\n    let mut device = AsyncDevice::new(&path)\r\n        .into_diagnostic()\r\n        .wrap_err_with(|| format!(\"could not open evdev device {}\", path))?;\r\n\r\n    info!(%path, \"Watching input device\");\r\n\r\n    loop {\r\n        tokio::select! {\r\n            _ = stop.shutdown() => {\r\n                debug!(\"Shutting down watcher loop\");\r\n                break;\r\n            },\r\n            event = device.next() => {\r\n                match event {\r\n                    Some(Ok(ev)) => {\r\n                        let event = InputEvent::from(ev);\r\n                        trace!(?event, \"Received input event\");\r\n\r\n                        if let InputEvent::Key(ev) = event {\r\n                            let dispatch_event = match ev {\r\n                                KeyEvent::Press(code) => Event::KeyPress(code),\r\n                                KeyEvent::Release(code) => Event::KeyRelease(code),\r\n                            };\r\n\r\n                            dispatch_tx.send(dispatch_event).await\r\n                                .into_diagnostic()\r\n                                .wrap_err(\"dispatcher closed\")?;\r\n                        }\r\n                    },\r\n                    Some(Err(err)) => {\r\n                        error!(?err, \"Failure reading input events\");\r\n                    },\r\n                    None => {\r\n                        info!(\"Input device has closed\");\r\n                        break;\r\n                    },\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    Ok(())\r\n}\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.59.0-nightly (83b15bfe1 2021-12-28)\r\nbinary: rustc\r\ncommit-hash: 83b15bfe1c15f325bc186ebfe3691b729ed59f2b\r\ncommit-date: 2021-12-28\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.59.0-nightly\r\nLLVM version: 13.0.0\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nCompiling hotkey-daemon v0.1.0 (/home/ben/src/evhotkeyd/hotkey-daemon)                                                                                                                                           \r\nwarning: associated function is never used: `is_shutdown`                                                                                                                                                           \r\n   --> hotkey-daemon/src/supervisor.rs:197:12                                                                                                                                                                       \r\n    |                                                                                                                                                                                                               \r\n197 |     pub fn is_shutdown(&self) -> bool {                                                                                                                                                                       \r\n    |            ^^^^^^^^^^^                                                                                                                                                                                        \r\n    |                                                                                                                                                                                                               \r\n    = note: `#[warn(dead_code)]` on by default                                                                                                                                                                      \r\n                                                                                                                                                                                                                    \r\nwarning: `hotkey-daemon` (lib) generated 1 warning                                                                                                                                                                  \r\nthread 'rustc' panicked at 'no entry found for key', compiler/rustc_metadata/src/rmeta/decoder.rs:1627:13                                                                                                           \r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace                                                                                                                                       \r\n                                                                                                                                                                                                                    \r\nerror: internal compiler error: unexpected panic                                                                                                                                                                    \r\n                                                                                                                                                                                                                    \r\nnote: the compiler unexpectedly panicked. this is a bug.                                                                                                                                                            \r\n                                                                                                                                                                                                                    \r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md                                                                            \r\n                                                                                                                                                                                                                    \r\nnote: rustc 1.59.0-nightly (83b15bfe1 2021-12-28) running on x86_64-unknown-linux-gnu                                                                                                                               \r\n                                                                                                                                                                                                                    \r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental --crate-type bin                                                                                                                            \r\n                                                                                                                                                                                                                    \r\nnote: some of the compiler flags provided by cargo are hidden                                                                                                                                                       \r\n                                                                                                                                                                                                                    \r\nquery stack during panic:                                                                                                                                                                                           \r\n#0 [codegen_fulfill_obligation] checking if `core::future::into_future::IntoFuture` fulfills its obligations                                                                                                        \r\n#1 [resolve_instance] resolving instance `<tokio::future::poll_fn::PollFn<[closure@hotkey_daemon::device_watcher::watch::{closure#0}::{closure#0}::{closure#1}]> as core::future::into_future::IntoFuture>::into_future`                                                                                                                                                                                                                \r\nend of query stack                                                                                                                                                                                                  \r\nerror: could not compile `hotkey-daemon`\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nthread 'rustc' panicked at 'no entry found for key', compiler/rustc_metadata/src/rmeta/decoder.rs:1627:13\r\nstack backtrace:\r\n   0: rust_begin_unwind\r\n             at /rustc/83b15bfe1c15f325bc186ebfe3691b729ed59f2b/library/std/src/panicking.rs:498:5\r\n   1: core::panicking::panic_fmt\r\n             at /rustc/83b15bfe1c15f325bc186ebfe3691b729ed59f2b/library/core/src/panicking.rs:107:14\r\n   2: core::panicking::panic_display\r\n             at /rustc/83b15bfe1c15f325bc186ebfe3691b729ed59f2b/library/core/src/panicking.rs:63:5\r\n   3: core::panicking::panic_str\r\n             at /rustc/83b15bfe1c15f325bc186ebfe3691b729ed59f2b/library/core/src/panicking.rs:55:5\r\n   4: core::option::expect_failed\r\n             at /rustc/83b15bfe1c15f325bc186ebfe3691b729ed59f2b/library/core/src/option.rs:1821:5\r\n   5: <rustc_metadata::creader::CStore as rustc_session::cstore::CrateStore>::expn_hash_to_expn_id\r\n   6: <rustc_span::hygiene::ExpnId as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode\r\n   7: <rustc_span::hygiene::SyntaxContextData as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode\r\n   8: <rustc_query_impl::on_disk_cache::CacheDecoder as rustc_middle::ty::codec::TyDecoder>::with_position::<<rustc_span::hygiene::SyntaxContext as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode::{closure#0}::{closure#0}, core::result::Result<rustc_span::hygiene::SyntaxContextData, alloc::string::String>>\r\n   9: <rustc_span::span_encoding::Span as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode\r\n  10: <rustc_middle::ty::VariantDef as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode\r\n  11: <rustc_query_impl::on_disk_cache::CacheDecoder as rustc_serialize::serialize::Decoder>::read_seq::<alloc::vec::Vec<rustc_middle::ty::VariantDef>, <alloc::vec::Vec<rustc_middle::ty::VariantDef> as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode::{closure#0}>\r\n  12: <rustc_middle::ty::adt::AdtDef as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode\r\n  13: <rustc_middle::ty::sty::TyKind as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode\r\n  14: <&rustc_middle::ty::TyS as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode\r\n  15: <core::result::Result<rustc_middle::ty::subst::GenericArg, alloc::string::String> as rustc_middle::ty::context::InternIteratorElement<rustc_middle::ty::subst::GenericArg, &rustc_middle::ty::list::List<rustc_middle::ty::subst::GenericArg>>>::intern_with::<core::iter::adapters::map::Map<core::ops::range::Range<usize>, <&rustc_middle::ty::list::List<rustc_middle::ty::subst::GenericArg> as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode::{closure#0}>, <rustc_middle::ty::context::TyCtxt>::mk_substs<core::iter::adapters::map::Map<core::ops::range::Range<usize>, <&rustc_middle::ty::list::List<rustc_middle::ty::subst::GenericArg> as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode::{closure#0}>>::{closure#0}>\r\n  16: <rustc_middle::ty::sty::TyKind as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode\r\n  17: <&rustc_middle::ty::TyS as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode\r\n  18: <core::result::Result<&rustc_middle::ty::TyS, alloc::string::String> as rustc_middle::ty::context::InternIteratorElement<&rustc_middle::ty::TyS, &rustc_middle::ty::list::List<&rustc_middle::ty::TyS>>>::intern_with::<core::iter::adapters::map::Map<core::ops::range::Range<usize>, <rustc_middle::ty::list::List<&rustc_middle::ty::TyS> as rustc_middle::ty::codec::RefDecodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode::{closure#0}>, <rustc_middle::ty::context::TyCtxt>::mk_type_list<core::iter::adapters::map::Map<core::ops::range::Range<usize>, <rustc_middle::ty::list::List<&rustc_middle::ty::TyS> as rustc_middle::ty::codec::RefDecodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode::{closure#0}>>::{closure#0}>\r\n  19: <rustc_middle::ty::list::List<&rustc_middle::ty::TyS> as rustc_middle::ty::codec::RefDecodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode\r\n  20: <rustc_middle::ty::sty::Binder<rustc_middle::ty::sty::FnSig> as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode\r\n  21: <rustc_middle::ty::sty::TyKind as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode\r\n  22: <&rustc_middle::ty::TyS as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode\r\n  23: <&rustc_middle::ty::TyS as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode\r\n  24: <smallvec::SmallVec<[rustc_middle::ty::subst::GenericArg; 8]> as core::iter::traits::collect::Extend<rustc_middle::ty::subst::GenericArg>>::extend::<core::iter::adapters::ResultShunt<core::iter::adapters::map::Map<core::ops::range::Range<usize>, <&rustc_middle::ty::list::List<rustc_middle::ty::subst::GenericArg> as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode::{closure#0}>, alloc::string::String>>\r\n  25: <core::result::Result<rustc_middle::ty::subst::GenericArg, alloc::string::String> as rustc_middle::ty::context::InternIteratorElement<rustc_middle::ty::subst::GenericArg, &rustc_middle::ty::list::List<rustc_middle::ty::subst::GenericArg>>>::intern_with::<core::iter::adapters::map::Map<core::ops::range::Range<usize>, <&rustc_middle::ty::list::List<rustc_middle::ty::subst::GenericArg> as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode::{closure#0}>, <rustc_middle::ty::context::TyCtxt>::mk_substs<core::iter::adapters::map::Map<core::ops::range::Range<usize>, <&rustc_middle::ty::list::List<rustc_middle::ty::subst::GenericArg> as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode::{closure#0}>>::{closure#0}>\r\n  26: <rustc_middle::ty::sty::TyKind as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode\r\n  27: <&rustc_middle::ty::TyS as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode\r\n  28: <core::result::Result<rustc_middle::ty::subst::GenericArg, alloc::string::String> as rustc_middle::ty::context::InternIteratorElement<rustc_middle::ty::subst::GenericArg, &rustc_middle::ty::list::List<rustc_middle::ty::subst::GenericArg>>>::intern_with::<core::iter::adapters::map::Map<core::ops::range::Range<usize>, <&rustc_middle::ty::list::List<rustc_middle::ty::subst::GenericArg> as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode::{closure#0}>, <rustc_middle::ty::context::TyCtxt>::mk_substs<core::iter::adapters::map::Map<core::ops::range::Range<usize>, <&rustc_middle::ty::list::List<rustc_middle::ty::subst::GenericArg> as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode::{closure#0}>>::{closure#0}>\r\n  29: <rustc_middle::ty::sty::TyKind as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode\r\n  30: <&rustc_middle::ty::TyS as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode\r\n  31: <&rustc_middle::ty::TyS as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode\r\n  32: <rustc_middle::ty::context::TyCtxt>::mk_substs::<core::iter::adapters::map::Map<core::ops::range::Range<usize>, <&rustc_middle::ty::list::List<rustc_middle::ty::subst::GenericArg> as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode::{closure#0}>>\r\n  33: <rustc_middle::traits::ImplSource<()> as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode\r\n  34: <core::result::Result<rustc_middle::traits::ImplSource<()>, rustc_errors::ErrorReported> as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode\r\n  35: <rustc_query_impl::on_disk_cache::OnDiskCache>::try_load_query_result::<core::result::Result<rustc_middle::traits::ImplSource<()>, rustc_errors::ErrorReported>>\r\n  36: <<rustc_query_impl::queries::codegen_fulfill_obligation as rustc_query_system::query::config::QueryDescription<rustc_query_impl::plumbing::QueryCtxt>>::TRY_LOAD_FROM_DISK::{closure#0} as core::ops::function::FnOnce<(rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::dep_graph::serialized::SerializedDepNodeIndex)>>::call_once\r\n  37: rustc_query_system::query::plumbing::try_load_from_disk_and_cache_in_memory::<rustc_query_impl::plumbing::QueryCtxt, (rustc_middle::ty::ParamEnv, rustc_middle::ty::sty::Binder<rustc_middle::ty::sty::TraitRef>), core::result::Result<rustc_middle::traits::ImplSource<()>, rustc_errors::ErrorReported>>\r\n  38: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::DefaultCache<(rustc_middle::ty::ParamEnv, rustc_middle::ty::sty::Binder<rustc_middle::ty::sty::TraitRef>), core::result::Result<rustc_middle::traits::ImplSource<()>, rustc_errors::ErrorReported>>>\r\n  39: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::codegen_fulfill_obligation\r\n  40: rustc_ty_utils::instance::inner_resolve_instance\r\n  41: rustc_ty_utils::instance::resolve_instance\r\n  42: rustc_query_system::query::plumbing::try_load_from_disk_and_cache_in_memory::<rustc_query_impl::plumbing::QueryCtxt, rustc_middle::ty::ParamEnvAnd<(rustc_span::def_id::DefId, &rustc_middle::ty::list::List<rustc_middle::ty::subst::GenericArg>)>, core::result::Result<core::option::Option<rustc_middle::ty::instance::Instance>, rustc_errors::ErrorReported>>\r\n  43: rustc_query_system::query::plumbing::get_query::<rustc_query_impl::queries::resolve_instance, rustc_query_impl::plumbing::QueryCtxt>\r\n  44: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::resolve_instance\r\n  45: <rustc_middle::ty::instance::Instance>::resolve\r\n  46: rustc_monomorphize::collector::collect_neighbours\r\n  47: rustc_monomorphize::collector::collect_items_rec\r\n  48: rustc_monomorphize::collector::collect_items_rec\r\n  49: rustc_monomorphize::collector::collect_items_rec\r\n  50: rustc_monomorphize::collector::collect_items_rec\r\n  51: rustc_monomorphize::collector::collect_items_rec\r\n  52: rustc_monomorphize::collector::collect_items_rec\r\n  53: rustc_monomorphize::collector::collect_items_rec\r\n  54: rustc_monomorphize::collector::collect_items_rec\r\n  55: rustc_monomorphize::collector::collect_items_rec\r\n  56: rustc_monomorphize::collector::collect_items_rec\r\n  57: rustc_monomorphize::collector::collect_items_rec\r\n  58: rustc_monomorphize::collector::collect_items_rec\r\n  59: rustc_monomorphize::collector::collect_items_rec\r\n  60: rustc_monomorphize::collector::collect_items_rec\r\n  61: rustc_monomorphize::collector::collect_items_rec\r\n  62: rustc_monomorphize::collector::collect_items_rec\r\n  63: rustc_monomorphize::collector::collect_items_rec\r\n  64: rustc_monomorphize::collector::collect_items_rec\r\n  65: rustc_monomorphize::collector::collect_items_rec\r\n  66: rustc_monomorphize::collector::collect_items_rec\r\n  67: rustc_monomorphize::collector::collect_items_rec\r\n  68: rustc_monomorphize::collector::collect_items_rec\r\n  69: rustc_monomorphize::collector::collect_items_rec\r\n  70: rustc_monomorphize::collector::collect_items_rec\r\n  71: rustc_monomorphize::collector::collect_items_rec\r\n  72: rustc_monomorphize::collector::collect_items_rec\r\n  73: rustc_monomorphize::collector::collect_items_rec\r\n  74: rustc_monomorphize::collector::collect_items_rec\r\n  75: rustc_monomorphize::collector::collect_items_rec\r\n  76: rustc_monomorphize::collector::collect_items_rec\r\n  77: rustc_monomorphize::collector::collect_items_rec\r\n  78: rustc_monomorphize::collector::collect_items_rec\r\n  79: rustc_monomorphize::collector::collect_items_rec\r\n  80: rustc_monomorphize::collector::collect_items_rec\r\n  81: rustc_monomorphize::collector::collect_items_rec\r\n  82: rustc_monomorphize::collector::collect_items_rec\r\n  83: rustc_monomorphize::collector::collect_items_rec\r\n  84: rustc_monomorphize::collector::collect_items_rec\r\n  85: rustc_monomorphize::collector::collect_items_rec\r\n  86: rustc_monomorphize::collector::collect_items_rec\r\n  87: rustc_monomorphize::collector::collect_items_rec\r\n  88: rustc_monomorphize::collector::collect_items_rec\r\n  89: rustc_monomorphize::collector::collect_items_rec\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/93584/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/93584/timeline", "performed_via_github_app": null, "state_reason": "completed"}