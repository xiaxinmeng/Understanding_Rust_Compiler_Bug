{"url": "https://api.github.com/repos/rust-lang/rust/issues/81340", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/81340/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/81340/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/81340/events", "html_url": "https://github.com/rust-lang/rust/issues/81340", "id": 792816522, "node_id": "MDU6SXNzdWU3OTI4MTY1MjI=", "number": 81340, "title": "Rustdoc json: Associated constants in impl have wrong representation", "user": {"login": "HeroicKatora", "id": 5550310, "node_id": "MDQ6VXNlcjU1NTAzMTA=", "avatar_url": "https://avatars.githubusercontent.com/u/5550310?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HeroicKatora", "html_url": "https://github.com/HeroicKatora", "followers_url": "https://api.github.com/users/HeroicKatora/followers", "following_url": "https://api.github.com/users/HeroicKatora/following{/other_user}", "gists_url": "https://api.github.com/users/HeroicKatora/gists{/gist_id}", "starred_url": "https://api.github.com/users/HeroicKatora/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HeroicKatora/subscriptions", "organizations_url": "https://api.github.com/users/HeroicKatora/orgs", "repos_url": "https://api.github.com/users/HeroicKatora/repos", "events_url": "https://api.github.com/users/HeroicKatora/events{/privacy}", "received_events_url": "https://api.github.com/users/HeroicKatora/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 203738, "node_id": "MDU6TGFiZWwyMDM3Mzg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-rustdoc", "name": "T-rustdoc", "color": "bfd4f2", "default": false, "description": "Relevant to the rustdoc team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}, {"id": 2682491374, "node_id": "MDU6TGFiZWwyNjgyNDkxMzc0", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-rustdoc-json", "name": "A-rustdoc-json", "color": "f7e101", "default": false, "description": "Area: Rustdoc JSON backend"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-01-24T15:08:01Z", "updated_at": "2022-06-28T01:03:46Z", "closed_at": "2022-06-28T01:03:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This affects rustdoc json output\r\n\r\n```rust\r\nstruct Simple;\r\n\r\n/// Compare output for this inherent impl:\r\nimpl Simple {\r\n    pub const CONSTANT: usize = 0;\r\n}\r\n\r\npub trait EasyToImpl {\r\n    type ToDeclare;\r\n    const An_ATTRIBTE: usize;\r\n}\r\n\r\n/// versus this trait impl\r\nimpl EasyToImpl for Simple {\r\n    type ToDeclare = usize;\r\n    const An_ATTRIBTE: usize = 0;\r\n}\r\n```\r\n\r\nI expected to see this happen: The constant in the first impl is printed with `ItemEnum::Constant`, the type and constant declaration in `EasyToImpl` with `ItemEnum::{AssocTypeItem, AssocConstItem}`, and the corresponding type definition in the second impl with `ItemEnum::{Typedef, Constant}`.\r\n\r\nInstead, this happened: The constant definitions in both impls are the odd one out. They uses the \r\n`ItemEnum::AssocConstItem` form instead and their definitions are in the `default` attribute.\r\n\r\n<details><summary>The raw json produced</summary>\r\n\r\n```\r\n{\"root\":\"0:0\",\"crate_version\":null,\"includes_private\":false,\"index\":{\"0:0\":{\"id\":\"0:0\",\"crate_id\":0,\"name\":\"example_crate\",\"source\":{\"filename\":\"src/lib.rs\",\"begin\":[1,0],\"end\":[21,1]},\"visibility\":\"public\",\"docs\":\"\",\"links\":{},\"attrs\":[\"#![no_std]\",\"#![feature(no_core)]\",\"#![no_core]\"],\"deprecation\":null,\"kind\":\"module\",\"inner\":{\"is_crate\":true,\"items\":[\"0:1\",\"0:5\"]}},\"0:7\":{\"id\":\"0:7\",\"crate_id\":0,\"name\":\"An_ATTRIBTE\",\"source\":{\"filename\":\"src/lib.rs\",\"begin\":[14,4],\"end\":[14,29]},\"visibility\":\"public\",\"docs\":\"\",\"links\":{},\"attrs\":[],\"deprecation\":null,\"kind\":\"assoc_const\",\"inner\":{\"type\":{\"kind\":\"primitive\",\"inner\":\"usize\"},\"default\":null}},\"0:10\":{\"id\":\"0:10\",\"crate_id\":0,\"name\":\"An_ATTRIBTE\",\"source\":{\"filename\":\"src/lib.rs\",\"begin\":[20,4],\"end\":[20,33]},\"visibility\":\"public\",\"docs\":\"\",\"links\":{},\"attrs\":[],\"deprecation\":null,\"kind\":\"assoc_const\",\"inner\":{\"type\":{\"kind\":\"primitive\",\"inner\":\"usize\"},\"default\":\"0\"}},\"0:4\":{\"id\":\"0:4\",\"crate_id\":0,\"name\":\"CONSTANT\",\"source\":{\"filename\":\"src/lib.rs\",\"begin\":[9,4],\"end\":[9,34]},\"visibility\":\"public\",\"docs\":\"\",\"links\":{},\"attrs\":[],\"deprecation\":null,\"kind\":\"assoc_const\",\"inner\":{\"type\":{\"kind\":\"primitive\",\"inner\":\"usize\"},\"default\":\"0\"}},\"0:1\":{\"id\":\"0:1\",\"crate_id\":0,\"name\":\"Simple\",\"source\":{\"filename\":\"src/lib.rs\",\"begin\":[5,0],\"end\":[5,18]},\"visibility\":\"public\",\"docs\":\"\",\"links\":{},\"attrs\":[],\"deprecation\":null,\"kind\":\"struct\",\"inner\":{\"struct_type\":\"unit\",\"generics\":{\"params\":[],\"where_predicates\":[]},\"fields_stripped\":false,\"fields\":[],\"impls\":[\"0:3\",\"0:8\"]}},\"0:5\":{\"id\":\"0:5\",\"crate_id\":0,\"name\":\"EasyToImpl\",\"source\":{\"filename\":\"src/lib.rs\",\"begin\":[12,0],\"end\":[15,1]},\"visibility\":\"public\",\"docs\":\"\",\"links\":{},\"attrs\":[],\"deprecation\":null,\"kind\":\"trait\",\"inner\":{\"is_auto\":false,\"is_unsafe\":false,\"items\":[\"0:6\",\"0:7\"],\"generics\":{\"params\":[],\"where_predicates\":[]},\"bounds\":[],\"implementors\":[\"0:8\"]}},\"0:8\":{\"id\":\"0:8\",\"crate_id\":0,\"name\":null,\"source\":{\"filename\":\"src/lib.rs\",\"begin\":[18,0],\"end\":[21,1]},\"visibility\":\"crate\",\"docs\":\"versus this trait impl\",\"links\":{},\"attrs\":[],\"deprecation\":null,\"kind\":\"impl\",\"inner\":{\"is_unsafe\":false,\"generics\":{\"params\":[],\"where_predicates\":[]},\"provided_trait_methods\":[],\"trait\":{\"kind\":\"resolved_path\",\"inner\":{\"name\":\"EasyToImpl\",\"id\":\"0:5\",\"args\":{\"angle_bracketed\":{\"args\":[],\"bindings\":[]}},\"param_names\":[]}},\"for\":{\"kind\":\"resolved_path\",\"inner\":{\"name\":\"Simple\",\"id\":\"0:1\",\"args\":{\"angle_bracketed\":{\"args\":[],\"bindings\":[]}},\"param_names\":[]}},\"items\":[\"0:9\",\"0:10\"],\"negative\":false,\"synthetic\":false,\"blanket_impl\":null}},\"0:9\":{\"id\":\"0:9\",\"crate_id\":0,\"name\":\"ToDeclare\",\"source\":{\"filename\":\"src/lib.rs\",\"begin\":[19,4],\"end\":[19,27]},\"visibility\":\"public\",\"docs\":\"\",\"links\":{},\"attrs\":[],\"deprecation\":null,\"kind\":\"typedef\",\"inner\":{\"type\":{\"kind\":\"primitive\",\"inner\":\"usize\"},\"generics\":{\"params\":[],\"where_predicates\":[]}}},\"0:3\":{\"id\":\"0:3\",\"crate_id\":0,\"name\":null,\"source\":{\"filename\":\"src/lib.rs\",\"begin\":[8,0],\"end\":[10,1]},\"visibility\":\"crate\",\"docs\":\"Compare output for this inherent impl:\",\"links\":{},\"attrs\":[],\"deprecation\":null,\"kind\":\"impl\",\"inner\":{\"is_unsafe\":false,\"generics\":{\"params\":[],\"where_predicates\":[]},\"provided_trait_methods\":[],\"trait\":null,\"for\":{\"kind\":\"resolved_path\",\"inner\":{\"name\":\"Simple\",\"id\":\"0:1\",\"args\":{\"angle_bracketed\":{\"args\":[],\"bindings\":[]}},\"param_names\":[]}},\"items\":[\"0:4\"],\"negative\":false,\"synthetic\":false,\"blanket_impl\":null}},\"0:6\":{\"id\":\"0:6\",\"crate_id\":0,\"name\":\"ToDeclare\",\"source\":{\"filename\":\"src/lib.rs\",\"begin\":[13,4],\"end\":[13,19]},\"visibility\":\"public\",\"docs\":\"\",\"links\":{},\"attrs\":[],\"deprecation\":null,\"kind\":\"assoc_type\",\"inner\":{\"bounds\":[],\"default\":null}}},\"paths\":{\"0:5\":{\"crate_id\":0,\"path\":[\"example_crate\",\"EasyToImpl\"],\"kind\":\"trait\"},\"0:9\":{\"crate_id\":0,\"path\":[\"example_crate\",\"ToDeclare\"],\"kind\":\"typedef\"},\"0:0\":{\"crate_id\":0,\"path\":[\"example_crate\"],\"kind\":\"module\"},\"0:1\":{\"crate_id\":0,\"path\":[\"example_crate\",\"Simple\"],\"kind\":\"struct\"}},\"external_crates\":{},\"format_version\":1}\r\n```\r\n\r\n</details>\r\n\r\n<details><summary>Debug print of the item kinds in the impls</summary>\r\n\r\n```\r\n[src/frontend/rustdoc/mod.rs:786] krate.index.get(item_id) = Some(\r\n    Item {\r\n        id: Id(\r\n            \"0:38\",\r\n        ),\r\n        crate_id: 0,\r\n        name: Some(\r\n            \"CONSTANT\",\r\n        ),\r\n        source: Some(\r\n            Span {\r\n                filename: \"src/lib.rs\",\r\n                begin: (\r\n                    69,\r\n                    4,\r\n                ),\r\n                end: (\r\n                    69,\r\n                    34,\r\n                ),\r\n            },\r\n        ),\r\n        visibility: Public,\r\n        docs: \"\",\r\n        links: {},\r\n        attrs: [],\r\n        deprecation: None,\r\n        kind: AssocConst,\r\n        inner: AssocConstItem {\r\n            type_: Primitive(\r\n                \"usize\",\r\n            ),\r\n            default: Some(\r\n                \"0\",\r\n            ),\r\n        },\r\n    },\r\n)\r\n[src/frontend/rustdoc/mod.rs:786] krate.index.get(item_id) = Some(\r\n    Item {\r\n        id: Id(\r\n            \"0:41\",\r\n        ),\r\n        crate_id: 0,\r\n        name: Some(\r\n            \"ToDeclare\",\r\n        ),\r\n        source: Some(\r\n            Span {\r\n                filename: \"src/lib.rs\",\r\n                begin: (\r\n                    79,\r\n                    4,\r\n                ),\r\n                end: (\r\n                    79,\r\n                    27,\r\n                ),\r\n            },\r\n        ),\r\n        visibility: Public,\r\n        docs: \"\",\r\n        links: {},\r\n        attrs: [],\r\n        deprecation: None,\r\n        kind: Typedef,\r\n        inner: TypedefItem(\r\n            Typedef {\r\n                type_: Primitive(\r\n                    \"usize\",\r\n                ),\r\n                generics: Generics {\r\n                    params: [],\r\n                    where_predicates: [],\r\n                },\r\n            },\r\n        ),\r\n    },\r\n)\r\n[src/frontend/rustdoc/mod.rs:786] krate.index.get(item_id) = Some(\r\n    Item {\r\n        id: Id(\r\n            \"0:42\",\r\n        ),\r\n        crate_id: 0,\r\n        name: Some(\r\n            \"An_ATTRIBTE\",\r\n        ),\r\n        source: Some(\r\n            Span {\r\n                filename: \"src/lib.rs\",\r\n                begin: (\r\n                    80,\r\n                    4,\r\n                ),\r\n                end: (\r\n                    80,\r\n                    33,\r\n                ),\r\n            },\r\n        ),\r\n        visibility: Public,\r\n        docs: \"\",\r\n        links: {},\r\n        attrs: [],\r\n        deprecation: None,\r\n        kind: AssocConst,\r\n        inner: AssocConstItem {\r\n            type_: Primitive(\r\n                \"usize\",\r\n            ),\r\n            default: Some(\r\n                \"0\",\r\n            ),\r\n        },\r\n    },\r\n)\r\n```\r\n\r\n</details>\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\ncargo 1.51.0-nightly (a73e5b7d5 2021-01-12)\r\n```\r\n\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/81340/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/81340/timeline", "performed_via_github_app": null, "state_reason": "completed"}