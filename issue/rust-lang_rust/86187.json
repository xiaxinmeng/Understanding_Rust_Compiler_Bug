{"url": "https://api.github.com/repos/rust-lang/rust/issues/86187", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/86187/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/86187/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/86187/events", "html_url": "https://github.com/rust-lang/rust/issues/86187", "id": 916816397, "node_id": "MDU6SXNzdWU5MTY4MTYzOTc=", "number": 86187, "title": "`char::to_uppercase()` can return a lowercase character,  `char::to_lowercase()` can  return an uppercase character", "user": {"login": "timClicks", "id": 27889, "node_id": "MDQ6VXNlcjI3ODg5", "avatar_url": "https://avatars.githubusercontent.com/u/27889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timClicks", "html_url": "https://github.com/timClicks", "followers_url": "https://api.github.com/users/timClicks/followers", "following_url": "https://api.github.com/users/timClicks/following{/other_user}", "gists_url": "https://api.github.com/users/timClicks/gists{/gist_id}", "starred_url": "https://api.github.com/users/timClicks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timClicks/subscriptions", "organizations_url": "https://api.github.com/users/timClicks/orgs", "repos_url": "https://api.github.com/users/timClicks/repos", "events_url": "https://api.github.com/users/timClicks/events{/privacy}", "received_events_url": "https://api.github.com/users/timClicks/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2021-06-10T02:10:17Z", "updated_at": "2021-06-11T11:12:21Z", "closed_at": "2021-06-10T02:27:57Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI tried this code:\r\n\r\n```rust\r\nfn main() {\r\n    let upper = format!(\"{}\", '\u00ba'.to_uppercase());\r\n    assert!(upper.chars().all(|c| c.is_uppercase()));\r\n}\r\n```\r\n[playground link](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=b97ed6c92a6d01d731279526038fea57)\r\n\r\nI expected to see the assertion pass, yet it panics. The inverse operation, e.g. to_lowercase, works fine. However, it's possible that the bug is actualy there. is the \"[original indicator](https://en.wikipedia.org/wiki/Ordinal_indicator)\", and is presumably caseless. Perhaps it would it be better for both `is_lowercase()` and `is_uppercase()`  to both return `false`?\r\n\r\nAfter some testing, see test cases below, it looks like there are about 1,400 characters where `to_uppercase()` returns a lowercase character or `to_lowercase()` returns an uppercase character.\r\n\r\n```rust\r\n#[test]\r\nfn uppercase() {\r\n    let mut failures = 0;\r\n    for c in '0'..=char::MAX {\r\n        if c.is_lowercase() {\r\n            let hopefully_upper = c.to_uppercase();\r\n            let okay = hopefully_upper\r\n                .to_string()\r\n                .chars()\r\n                .all(|c| c.is_uppercase());\r\n            if !okay {\r\n                println!(\"{} ({}) \", c, c.escape_unicode());\r\n                failures += 1;\r\n            }\r\n        }\r\n    }\r\n    assert_eq!(failures, 0);\r\n}\r\n\r\n#[test]\r\nfn lowercase() {\r\n    let mut failures = 0;\r\n    for c in '0'..=char::MAX {\r\n        if c.is_uppercase() {\r\n            let hopefully_lower = c.to_lowercase();\r\n            let okay = hopefully_lower\r\n                .to_string()\r\n                .chars()\r\n                .all(|c| c.is_lowercase());\r\n            if !okay {\r\n                println!(\"{} ({}) \", c, c.escape_unicode());\r\n                failures += 1;\r\n            }\r\n        }\r\n    }\r\n    assert_eq!(failures, 0);\r\n}\r\n```\r\n\r\n[playground link](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=8aa54f0c1d7e2c0dde2861e9395ec8a5)\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n```console\r\n$ rustc --version --verbose\r\nrustc 1.52.1 (9bc8c42bb 2021-05-09)\r\nbinary: rustc\r\ncommit-hash: 9bc8c42bb2f19e745a63f3445f1ac248fb015e53\r\ncommit-date: 2021-05-09\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.52.1\r\nLLVM version: 12.0.0\r\n```\r\n", "closed_by": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/86187/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/86187/timeline", "performed_via_github_app": null, "state_reason": "completed"}