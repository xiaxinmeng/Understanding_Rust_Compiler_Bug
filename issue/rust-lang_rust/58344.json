{"url": "https://api.github.com/repos/rust-lang/rust/issues/58344", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/58344/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/58344/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/58344/events", "html_url": "https://github.com/rust-lang/rust/issues/58344", "id": 408527231, "node_id": "MDU6SXNzdWU0MDg1MjcyMzE=", "number": 58344, "title": "ICE on generic impl trait convergence", "user": {"login": "leops", "id": 1895119, "node_id": "MDQ6VXNlcjE4OTUxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1895119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leops", "html_url": "https://github.com/leops", "followers_url": "https://api.github.com/users/leops/followers", "following_url": "https://api.github.com/users/leops/following{/other_user}", "gists_url": "https://api.github.com/users/leops/gists{/gist_id}", "starred_url": "https://api.github.com/users/leops/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leops/subscriptions", "organizations_url": "https://api.github.com/users/leops/orgs", "repos_url": "https://api.github.com/users/leops/repos", "events_url": "https://api.github.com/users/leops/events{/privacy}", "received_events_url": "https://api.github.com/users/leops/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 46741598, "node_id": "MDU6TGFiZWw0Njc0MTU5OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-test", "name": "E-needs-test", "color": "02e10c", "default": false, "description": "Call for participation: writing correctness tests"}, {"id": 60344715, "node_id": "MDU6TGFiZWw2MDM0NDcxNQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-medium", "name": "P-medium", "color": "eb6420", "default": false, "description": "Medium priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 256133398, "node_id": "MDU6TGFiZWwyNTYxMzMzOTg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-mir", "name": "A-mir", "color": "f7e101", "default": false, "description": "Area: Mid-level IR (MIR) - https://blog.rust-lang.org/2016/04/19/MIR.html"}, {"id": 631673608, "node_id": "MDU6TGFiZWw2MzE2NzM2MDg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-impl-trait", "name": "A-impl-trait", "color": "f7e101", "default": false, "description": "Area: impl Trait. Universally / existentially quantified anonymous types with static dispatch."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-02-10T11:50:05Z", "updated_at": "2019-10-01T12:07:00Z", "closed_at": "2019-10-01T11:50:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using a generic function to \"converge\" two `impl Trait<T>` into `T` when T is an associated type for another trait causes the following error:\r\n\r\n```\r\nerror: internal compiler error: broken MIR in DefId(0/0:14 ~ playground[c5d2]::main[0]) (NoSolution): could not prove Binder(TraitPredicate(<impl Trait<<u32 as std::ops::Add>::Output> as Trait<u32>>))\r\n\r\nerror: internal compiler error: broken MIR in DefId(0/0:14 ~ playground[c5d2]::main[0]) (Terminator { source_info: SourceInfo { span: src/main.rs:46:5: 46:26, scope: scope[0] }, kind: _1 = const <Either<L, R>>::converge(move _2) -> [return: bb3, unwind: bb4] }): call dest mismatch (<u32 as std::ops::Add>::Output <- u32): NoSolution\r\n  --> src/main.rs:45:1\r\n   |\r\n45 | / pub fn main() {\r\n46 | |     add_one(3).converge();\r\n47 | | }\r\n   | |_^\r\n```\r\n\r\nExample code ([Playground link](https://play.rust-lang.org/?version=stable&mode=release&edition=2018&gist=78a447729b5d5e26e6effedcdbd753d7)):\r\n\r\n```rust\r\nuse std::ops::Add;\r\n\r\ntrait Trait<T> {\r\n    fn get(self) -> T;\r\n}\r\n\r\nstruct Holder<T>(T);\r\n\r\nimpl<T> Trait<T> for Holder<T> {\r\n    fn get(self) -> T {\r\n        self.0\r\n    }\r\n}\r\n\r\nenum Either<L, R> {\r\n    Left(L),\r\n    Right(R),\r\n}\r\n\r\nimpl<L, R> Either<L, R> {\r\n    fn converge<T>(self) -> T where L: Trait<T>, R: Trait<T> {\r\n        match self {\r\n            Either::Left(val) => val.get(),\r\n            Either::Right(val) => val.get(),\r\n        }\r\n    }\r\n}\r\n\r\nfn add_generic<A: Add<B>, B>(lhs: A, rhs: B) -> Either<\r\n    impl Trait<<A as Add<B>>::Output>,\r\n    impl Trait<<A as Add<B>>::Output>\r\n> {\r\n    if true {\r\n        Either::Left(Holder(lhs + rhs))\r\n    } else {\r\n        Either::Right(Holder(lhs + rhs))\r\n    }\r\n}\r\n\r\n// FAIL: fn add_one(value: u32) -> Either<impl Trait<u32>, impl Trait<u32>> {\r\nfn add_one(value: u32) -> Either<impl Trait<<u32 as Add<u32>>::Output>, impl Trait<<u32 as Add<u32>>::Output>> {\r\n    add_generic(value, 1u32)\r\n}\r\n\r\npub fn main() {\r\n    add_one(3).converge();\r\n}\r\n```\r\n\r\nThis may or may not be related to the compiler seemingly failing to assert that `<u32 as Add<u32>>::Output == u32`, an error that can be triggered by using the alternate signature for `add_one` at line 40 of the example.\r\n\r\n## Meta\r\n\r\nI tested this with the linked playground on the latest stable (1.32.0), as well as a recent nightly:\r\n```\r\nrustc 1.33.0-nightly (bf669d1e3 2019-01-25)\r\nbinary: rustc\r\ncommit-hash: bf669d1e3295bc688f71b8c91f48a6beaf895f67\r\ncommit-date: 2019-01-25\r\nhost: x86_64-pc-windows-msvc\r\nrelease: 1.33.0-nightly\r\nLLVM version: 8.0\r\n```\r\n\r\nCompiling with `RUST_BACKTRACE=1` doesn't seem to yield a very useful stack but here it is:\r\n```\r\nthread 'rustc' panicked at 'no errors encountered even though `delay_span_bug` issued', src\\librustc_errors\\lib.rs:323:17\r\nstack backtrace:\r\n   0: std::sys_common::alloc::realloc_fallback\r\n   1: std::panicking::take_hook\r\n   2: std::panicking::take_hook\r\n   3: <rustc::ty::SymbolName as core::fmt::Debug>::fmt\r\n   4: std::panicking::rust_panic_with_hook\r\n   5: <rustc_errors::Level as core::fmt::Debug>::fmt\r\n   6: <rustc_errors::Handler as core::ops::drop::Drop>::drop\r\n   7: <rustc_driver::CompilationFailure as core::fmt::Debug>::fmt\r\n   8: <rustc_driver::CompilationFailure as core::fmt::Debug>::fmt\r\n   9: <rustc_driver::CompilationFailure as core::fmt::Debug>::fmt\r\n  10: <rustc_driver::CompilationFailure as core::fmt::Debug>::fmt\r\n  11: <humantime::duration::Error as std::error::Error>::cause\r\n  12: _rust_maybe_catch_panic\r\n  13: <humantime::duration::Error as std::error::Error>::cause\r\n  14: std::sys::windows::thread::Thread::new\r\n  15: BaseThreadInitThunk\r\n  16: RtlUserThreadStart\r\nquery stack during panic:\r\nend of query stack\r\n```", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/58344/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/58344/timeline", "performed_via_github_app": null, "state_reason": "completed"}