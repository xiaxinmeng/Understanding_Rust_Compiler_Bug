{"url": "https://api.github.com/repos/rust-lang/rust/issues/11272", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/11272/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/11272/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/11272/events", "html_url": "https://github.com/rust-lang/rust/issues/11272", "id": 24961934, "node_id": "MDU6SXNzdWUyNDk2MTkzNA==", "number": 11272, "title": "It should be possible to shift a primitive by uint in generic functions", "user": {"login": "octurion", "id": 6114420, "node_id": "MDQ6VXNlcjYxMTQ0MjA=", "avatar_url": "https://avatars.githubusercontent.com/u/6114420?v=4", "gravatar_id": "", "url": "https://api.github.com/users/octurion", "html_url": "https://github.com/octurion", "followers_url": "https://api.github.com/users/octurion/followers", "following_url": "https://api.github.com/users/octurion/following{/other_user}", "gists_url": "https://api.github.com/users/octurion/gists{/gist_id}", "starred_url": "https://api.github.com/users/octurion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/octurion/subscriptions", "organizations_url": "https://api.github.com/users/octurion/orgs", "repos_url": "https://api.github.com/users/octurion/repos", "events_url": "https://api.github.com/users/octurion/events{/privacy}", "received_events_url": "https://api.github.com/users/octurion/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-01-02T12:44:25Z", "updated_at": "2014-01-02T18:56:18Z", "closed_at": "2014-01-02T18:56:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Consider the following generic implementation of rotate left:\n\n``` rust\nfn rotl<T: Int + Unsigned>(num: T, shamt: uint) -> T {\n    let bits = Primitive::bits(None::<T>);\n    let mask = bits - 1;\n\n    // Anding with the mask prevents undefined behaviour in case shamt == 0\n    num << shamt | num >> ((bits - shamt) & mask)\n}\n```\n\nThis function causes a compile error because Int inherits from Bitwise, which only provides implementations for Shl<Self, Self> and Shr<Self, Self>.\n", "closed_by": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/11272/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/11272/timeline", "performed_via_github_app": null, "state_reason": "completed"}