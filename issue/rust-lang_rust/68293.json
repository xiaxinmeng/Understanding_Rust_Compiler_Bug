{"url": "https://api.github.com/repos/rust-lang/rust/issues/68293", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/68293/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/68293/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/68293/events", "html_url": "https://github.com/rust-lang/rust/issues/68293", "id": 551104806, "node_id": "MDU6SXNzdWU1NTExMDQ4MDY=", "number": 68293, "title": "Suggest examples of format specifiers in error messages", "user": {"login": "sunjay", "id": 530939, "node_id": "MDQ6VXNlcjUzMDkzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/530939?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunjay", "html_url": "https://github.com/sunjay", "followers_url": "https://api.github.com/users/sunjay/followers", "following_url": "https://api.github.com/users/sunjay/following{/other_user}", "gists_url": "https://api.github.com/users/sunjay/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunjay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunjay/subscriptions", "organizations_url": "https://api.github.com/users/sunjay/orgs", "repos_url": "https://api.github.com/users/sunjay/repos", "events_url": "https://api.github.com/users/sunjay/events{/privacy}", "received_events_url": "https://api.github.com/users/sunjay/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1183099971, "node_id": "MDU6TGFiZWwxMTgzMDk5OTcx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-suggestion-diagnostics", "name": "A-suggestion-diagnostics", "color": "f7e101", "default": false, "description": "Area: suggestions generated by the compiler applied by cargo fix"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-01-16T23:01:17Z", "updated_at": "2020-09-07T13:23:59Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "This is [real code](https://twitter.com/Sunjay03/status/1217930353874276352) that someone I am helping learn Rust wrote today. It's a problem you could easily stare at for hours and never figure it out. Especially if you're new to using format strings. The code actually looks **correct** (from a distance).\r\n\r\n```rust\r\nfn main() {\r\n    println!(\":#?\", vec![123]);\r\n}\r\n```\r\n\r\nHere's the error message we produce:\r\n\r\n```rust\r\nerror: argument never used\r\n --> src/main.rs:2:21\r\n  |\r\n2 |     println!(\":#?\", vec![123]);\r\n  |              -----  ^^^^^^^^^ argument never used\r\n  |              |\r\n  |              formatting specifier missing\r\n```\r\n\r\nThe person I was helping assumed that some formatting trait hadn't been implemented. It didn't occur to them that the format specifier was incorrect even though it said \"formatting specifier missing\".\r\n\r\nI think we could help them by adding a hint or something that shows an example of a specifier whenever we say \"formatting specifier missing\".\r\n\r\nSomething like:\r\n\r\n```\r\nhint: format specifiers usually look like `{}` or `{:?}`\r\n```\r\n\r\nThis would then help them compare against what they have and find the problem sooner.\r\n\r\nFrom @estebank: ([source](https://twitter.com/ekuber/status/1217936806269710336))\r\n\r\n> We already handle C-style formatting strings and provide an appropriate suggestion, so I think this would also be reasonable to handle this.\r\n> ```rust\r\n> fn main() {\r\n>     println!(\"%d\", 42);\r\n> }\r\n> ```\r\n>\r\n> Adding logic to [here](https://github.com/rust-lang/rust/blob/48840618382eccb8a799320c8e5d08e3b52f4c42/src/librustc_builtin_macros/format_foreign.rs) should be relatively straightforward.\r\n>\r\n> Also, this case should also be slightly tweaked to point at the formatting\r\n> specifiers that *were* found:\r\n>\r\n> ```rust\r\n> fn main() {\r\n>     println!(\"{} :#?\", 1, 42);\r\n> }\r\n> ```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/68293/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/68293/timeline", "performed_via_github_app": null, "state_reason": null}