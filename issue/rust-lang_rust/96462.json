{"url": "https://api.github.com/repos/rust-lang/rust/issues/96462", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/96462/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/96462/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/96462/events", "html_url": "https://github.com/rust-lang/rust/issues/96462", "id": 1216684516, "node_id": "I_kwDOAAsO6M5IhSHk", "number": 96462, "title": "Windows 32-bit shell: x.py fails (in hard to dissect fashion) during LLVM build ", "user": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 123109, "node_id": "MDU6TGFiZWwxMjMxMDk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-windows", "name": "O-windows", "color": "6e6ec0", "default": false, "description": "Operating system: Windows"}, {"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 266005765, "node_id": "MDU6TGFiZWwyNjYwMDU3NjU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-windows-msvc", "name": "O-windows-msvc", "color": "6e6ec0", "default": false, "description": "Toolchain: MSVC, Operating system: Windows"}, {"id": 325438536, "node_id": "MDU6TGFiZWwzMjU0Mzg1MzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-bootstrap", "name": "T-bootstrap", "color": "bfd4f2", "default": false, "description": "Relevant to the bootstrap subteam: Rust's build system (x.py and src/bootstrap)"}, {"id": 419557634, "node_id": "MDU6TGFiZWw0MTk1NTc2MzQ=", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-medium", "name": "E-medium", "color": "02e10c", "default": false, "description": "Call for participation: Experience needed to fix: Medium / intermediate"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-04-27T02:09:53Z", "updated_at": "2022-07-11T13:12:30Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "I tried this code:\r\n\r\n```\r\nD:\\pnkfelix\\RustLang\\rust.git> python x.py build\r\n```\r\n\r\nI expected to see this happen: \r\n\r\n\r\n```\r\n[...]\r\nbuild completed successfully in 99:99:99\r\n```\r\n\r\nInstead, this happened: \r\n\r\n```\r\n[...]\r\nrunning: \"cmake\" \"--build\" \".\" \"--target\" \"install\" \"--config\" \"Release\" \"--\" \"-j\" \"8\"\r\n[5/396] Building CXX object tools\\llvm-cxxdump\\CMakeFiles\\llvm-cxxdump.dir\\Error.cpp.obj\r\ncl : Command line warning D9025 : overriding '/MD' with '/MT'\r\n[8/396] Linking CXX executable bin\\llvm-cfi-verify.exe\r\nFAILED: bin/llvm-cfi-verify.exe\r\ncmd.exe /C \"cd . && \"C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\Common7\\IDE\\CommonExtensions\\Microsoft\\CMake\\CMake\\bin\\cmake.exe\" -E vs_link_exe --intdir=tools\\llvm-cfi-verify\\CMakeFiles\\llvm-cfi-verify.dir --rc=C:\\PROGRA~2\\WI3CF2~1\\10\\bin\\100190~1.0\\x64\\rc.exe --mt=C:\\PROGRA~2\\WI3CF2~1\\10\\bin\\100190~1.0\\x64\\mt.exe --manifests  -- C:\\PROGRA~1\\MICROS~1\\2022\\COMMUN~1\\VC\\Tools\\MSVC\\1431~1.311\\bin\\Hostx64\\x64\\link.exe /nologo @CMakeFiles\\llvm-cfi-verify.rsp  /out:bin\\llvm-cfi-verify.exe /implib:lib\\llvm-cfi-verify.lib /pdb:bin\\llvm-cfi-verify.pdb /version:0.0 /STACK:10000000 /INCREMENTAL:NO /subsystem:console  && cd .\"\r\nLINK: command \"C:\\PROGRA~1\\MICROS~1\\2022\\COMMUN~1\\VC\\Tools\\MSVC\\1431~1.311\\bin\\Hostx64\\x64\\link.exe /nologo @CMakeFiles\\llvm-cfi-verify.rsp /out:bin\\llvm-cfi-verify.exe /implib:lib\\llvm-cfi-verify.lib /pdb:bin\\llvm-cfi-verify.pdb /version:0.0 /STACK:10000000 /INCREMENTAL:NO /subsystem:console /MANIFEST /MANIFESTFILE:bin\\llvm-cfi-verify.exe.manifest\" failed (exit code 1120) with the following output:\r\nLLVMDebugInfoPDB.lib(DIATable.cpp.obj) : error LNK2001: unresolved external symbol \"class ATL::CAtlBaseModule ATL::_AtlBaseModule\" (?_AtlBaseModule@ATL@@3VCAtlBaseModule@1@A)\r\nLLVMDebugInfoPDB.lib(DIAEnumSymbols.cpp.obj) : error LNK2001: unresolved external symbol \"class ATL::CAtlBaseModule ATL::_AtlBaseModule\" (?_AtlBaseModule@ATL@@3VCAtlBaseModule@1@A)\r\n[...]\r\nninja: build stopped: subcommand failed.\r\nthread 'main' panicked at '\r\ncommand did not execute successfully, got: exit code: 1\r\n\r\nbuild script failed, must exit now', C:\\Users\\pnkfelix\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cmake-0.1.44\\src\\lib.rs:885:5\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n        finished in 15.072 seconds\r\nBuild completed unsuccessfully in 99:99:99\r\n```\r\n\r\nActual log, which you would have to dissect to see the actual problem: https://gist.github.com/pnkfelix/4dd2aba17632cccf2803f5f5cda7dba6\r\n\r\n\r\nThe actual problem is that my command prompt had started up using Visual Studio's 32-bit (x86) mode.\r\n\r\nBut that choice of mode does not influence what Rust does for its own bootstrapping. Which then leads its LLVM build to go astray during the link step.\r\n\r\n----\r\n\r\nI have not yet checked to see if skipping the LLVM entirely works in this context. I suspect it might.\r\n\r\nBut if we do request an LLVM build from bootstrap, then `x.py` could do a better job of detecting this scenario at the outset, and reporting it to the user.\r\n\r\n(Arguably LLVM could/should be doing this itself, on our behalf. But its easier for me to figure out how to give a great user experience via `x.py` and `bootstrap` rather than figure out LLVM's CMake business.)", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/96462/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/96462/timeline", "performed_via_github_app": null, "state_reason": null}