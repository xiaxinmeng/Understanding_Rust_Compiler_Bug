{"url": "https://api.github.com/repos/rust-lang/rust/issues/105773", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/105773/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/105773/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/105773/events", "html_url": "https://github.com/rust-lang/rust/issues/105773", "id": 1500041697, "node_id": "I_kwDOAAsO6M5ZaNHh", "number": 105773, "title": "emit lint when using `ref` with match ergonomics", "user": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2022-12-16T11:22:46Z", "updated_at": "2023-05-22T14:11:43Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```rust\nfn foo(x: &Option<u32>) -> Option<&u32> {\n    match x {\n        Some(ref inner) => Some(inner),\n        None => None,\n    }\n}\n```\nbecause of match ergonomics, every binding inside of `Some` is already matched by `ref` implicitly, so the additional explicit `ref` is completely redundant. Consider the following example where `l` and `r` have the exact same type.\n```rust\n#![feature(type_name_of_val)]\nuse std::any::type_name_of_val;\nfn foo(x: &Option<(u32, u32)>) {\n    match x {\n        Some((l, ref r)) => assert_eq!(\n            type_name_of_val(l),\n            type_name_of_val(r),\n        ),\n        None => unreachable!(),\n    }\n}\n\nfn main() {\n    foo(&Some((3, 3)));\n}\n```\n\nThis lint should either suggest to disable match ergonomics by adding `&` and `&mut` patterns in the relevant places or to remove the `ref`.\n\nThere are a lot of places even inside of rustc which hit this pattern, so this lint feels really desirable to me.\n\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":null}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/105773/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/105773/timeline", "performed_via_github_app": null, "state_reason": null}