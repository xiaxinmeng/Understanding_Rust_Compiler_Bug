{"url": "https://api.github.com/repos/rust-lang/rust/issues/18487", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/18487/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/18487/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/18487/events", "html_url": "https://github.com/rust-lang/rust/issues/18487", "id": 47380385, "node_id": "MDU6SXNzdWU0NzM4MDM4NQ==", "number": 18487, "title": "Cannot use &str with the Index trait (LLVM assertion failure: \"Invoking a function with bad signature\")", "user": {"login": "nodakai", "id": 90726, "node_id": "MDQ6VXNlcjkwNzI2", "avatar_url": "https://avatars.githubusercontent.com/u/90726?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nodakai", "html_url": "https://github.com/nodakai", "followers_url": "https://api.github.com/users/nodakai/followers", "following_url": "https://api.github.com/users/nodakai/following{/other_user}", "gists_url": "https://api.github.com/users/nodakai/gists{/gist_id}", "starred_url": "https://api.github.com/users/nodakai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nodakai/subscriptions", "organizations_url": "https://api.github.com/users/nodakai/orgs", "repos_url": "https://api.github.com/users/nodakai/repos", "events_url": "https://api.github.com/users/nodakai/events{/privacy}", "received_events_url": "https://api.github.com/users/nodakai/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-10-31T10:36:13Z", "updated_at": "2014-11-03T23:12:39Z", "closed_at": "2014-11-03T23:12:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "``` rust\nuse std::ops::Index;\n\nstruct S {\n    x: Vec<String>\n}\n\nimpl Index<uint, str> for S {\n    fn index<'a> (&'a self, n: &uint) -> &'a str {\n        self.x[*n].as_slice()\n    }\n}\n\nfn main() {\n    let s = S { x: vec![ \"X\".to_string() ] };\n    println!(\"{}\", &s[0]);\n}\n```\n- http://is.gd/qEasOW\n\n`rustc: /build/rust-git/src/rust/src/llvm/lib/IR/Instructions.cpp:545: void llvm::InvokeInst::init(llvm::Value*, llvm::BasicBlock*, llvm::BasicBlock*, llvm::ArrayRef<llvm::Value*>, const llvm::Twine&): Assertion `((Args.size() == FTy->getNumParams()) || (FTy->isVarArg() && Args.size() > FTy->getNumParams())) && \"Invoking a function with bad signature\"' failed.`\n`Aborted`\n\nAlso, `&s[0]` is ugly.\n\nAnother approach:\n\n``` rust\nuse std::ops::Index;\n\nstruct S {\n    x: Vec<String>\n}\n\nimpl Index<uint, & &str> for S {\n    fn index<'a> (&'a self, n: &uint) -> & &'a str {\n        &self.x[*n].as_slice()\n    }\n}\n\nfn main() {\n    let s = S { x: vec![ \"X\".to_string() ] };\n    println!(\"{}\", s[0]);\n}\n```\n\nThis will get nowhere because `self.x[*n].as_slice()` creates a local string slice object which will quickly goes out of scope.  Perhaps we need to wait for introduction of the [`IndexGet` trait](https://github.com/rust-lang/meeting-minutes/blob/master/weekly-meetings/2014-09-02.md#more-index-traits).\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/18487/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/18487/timeline", "performed_via_github_app": null, "state_reason": "completed"}