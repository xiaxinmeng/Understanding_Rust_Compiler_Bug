{"url": "https://api.github.com/repos/rust-lang/rust/issues/81829", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/81829/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/81829/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/81829/events", "html_url": "https://github.com/rust-lang/rust/issues/81829", "id": 802723678, "node_id": "MDU6SXNzdWU4MDI3MjM2Nzg=", "number": 81829, "title": "Incorrect value is never assigned warning", "user": {"login": "henryboisdequin", "id": 65845077, "node_id": "MDQ6VXNlcjY1ODQ1MDc3", "avatar_url": "https://avatars.githubusercontent.com/u/65845077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/henryboisdequin", "html_url": "https://github.com/henryboisdequin", "followers_url": "https://api.github.com/users/henryboisdequin/followers", "following_url": "https://api.github.com/users/henryboisdequin/following{/other_user}", "gists_url": "https://api.github.com/users/henryboisdequin/gists{/gist_id}", "starred_url": "https://api.github.com/users/henryboisdequin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/henryboisdequin/subscriptions", "organizations_url": "https://api.github.com/users/henryboisdequin/orgs", "repos_url": "https://api.github.com/users/henryboisdequin/repos", "events_url": "https://api.github.com/users/henryboisdequin/events{/privacy}", "received_events_url": "https://api.github.com/users/henryboisdequin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1596121013, "node_id": "MDU6TGFiZWwxNTk2MTIxMDEz", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-confusing", "name": "D-confusing", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error that should be reworked"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-02-06T15:23:14Z", "updated_at": "2021-06-08T20:28:45Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI tried this code:\r\n\r\n```rust\r\nfn main() {\r\n    let something = Some(1);\r\n    let mut is_true = false;\r\n    let mut other = true;\r\n    \r\n    if let Some(n) = something {\r\n        if is_true == true {\r\n            other = false;\r\n        }\r\n        is_true = true;\r\n        \r\n        println!(\"{}\", n)\r\n    }\r\n    \r\n    println!(\"{}\", other)\r\n}\r\n```\r\n\r\n[Playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=87c81a4b3acdb4e1fd4700136bc90ecf)\r\n\r\nI expected this program to run without any warnings.\r\n\r\nInstead, I got a warning saying that `is_true` is never used but it clearly is. Also, the `maybe it is overwritten before being read?` help message is incorrect as I'm doing the if statement (reading) before writing the value again.\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n```\r\nStable version: 1.49.0 (Playground)\r\n1.51.0-nightly (Playground)\r\n1.50.0-beta.8 (Playground)\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary>Output</summary>\r\n<p>\r\n\r\n```\r\nwarning: value assigned to `is_true` is never read\r\n  --> src/main.rs:10:9\r\n   |\r\n10 |         is_true = true;\r\n   |         ^^^^^^^\r\n   |\r\n   = note: `#[warn(unused_assignments)]` on by default\r\n   = help: maybe it is overwritten before being read?\r\n\r\nwarning: 1 warning emitted\r\n\r\n    Finished dev [unoptimized + debuginfo] target(s) in 1.18s\r\n     Running `target/debug/playground`\r\n\r\nStandard Output\r\n\r\n1\r\ntrue\r\n```\r\n\r\n\r\n\r\n</p>\r\n</details>\r\n\r\n@rustbot label D-invalid-suggestion A-diagnostics D-confusing D-incorrect T-compiler\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/81829/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/81829/timeline", "performed_via_github_app": null, "state_reason": null}