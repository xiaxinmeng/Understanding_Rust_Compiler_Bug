{"url": "https://api.github.com/repos/rust-lang/rust/issues/58435", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/58435/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/58435/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/58435/events", "html_url": "https://github.com/rust-lang/rust/issues/58435", "id": 409957252, "node_id": "MDU6SXNzdWU0MDk5NTcyNTI=", "number": 58435, "title": "Compiler panic with associated constant", "user": {"login": "etwyniel", "id": 1582913, "node_id": "MDQ6VXNlcjE1ODI5MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1582913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/etwyniel", "html_url": "https://github.com/etwyniel", "followers_url": "https://api.github.com/users/etwyniel/followers", "following_url": "https://api.github.com/users/etwyniel/following{/other_user}", "gists_url": "https://api.github.com/users/etwyniel/gists{/gist_id}", "starred_url": "https://api.github.com/users/etwyniel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/etwyniel/subscriptions", "organizations_url": "https://api.github.com/users/etwyniel/orgs", "repos_url": "https://api.github.com/users/etwyniel/repos", "events_url": "https://api.github.com/users/etwyniel/events{/privacy}", "received_events_url": "https://api.github.com/users/etwyniel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 46741598, "node_id": "MDU6TGFiZWw0Njc0MTU5OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-test", "name": "E-needs-test", "color": "02e10c", "default": false, "description": "Call for participation: writing correctness tests"}, {"id": 149689562, "node_id": "MDU6TGFiZWwxNDk2ODk1NjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-associated-items", "name": "A-associated-items", "color": "f7e101", "default": false, "description": "Area: Associated items such as associated types and consts."}, {"id": 203429200, "node_id": "MDU6TGFiZWwyMDM0MjkyMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-high", "name": "P-high", "color": "eb6420", "default": false, "description": "High priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2019-02-13T19:11:04Z", "updated_at": "2019-03-09T08:18:08Z", "closed_at": "2019-03-09T08:18:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "The compiler panics when I use a generic associated constant from within the impl.\r\n\r\nI was able to reproduce it with this code:\r\n```rust\r\nstruct S<T>(T);\r\n\r\nimpl<T> S<T> {\r\n    const ID: fn(&S<T>) -> &S<T> = |s| s;\r\n    pub fn id(&self) -> &Self {\r\n        Self::ID(self)\r\n    }\r\n}\r\n\r\nfn main() {\r\n    let s = S(10u32);\r\n    assert!(S::<u32>::ID(&s).0 == 10); // Works fine\r\n    assert!(s.id().0 == 10); // Causes compiler to panic\r\n}\r\n\r\n```\r\n\r\n## Meta\r\n\r\n`rustc --version --verbose`:\r\n\r\nrustc 1.32.0 (9fda7c223 2019-01-16)\r\nbinary: rustc\r\ncommit-hash: 9fda7c2237db910e41d6a712e9a2139b352e558b\r\ncommit-date: 2019-01-16\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.32.0\r\nLLVM version: 8.0\r\n\r\nBacktrace:\r\n```\r\nthread 'main' panicked at 'assertion failed: !value.needs_subst()', src/librustc/traits/query/normalize_erasing_regions.rs:69:9\r\nstack backtrace:\r\n   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace\r\n             at src/libstd/sys/unix/backtrace/tracing/gcc_s.rs:49\r\n   1: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:71\r\n   2: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/sys_common/backtrace.rs:59\r\n             at src/libstd/panicking.rs:211\r\n   3: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:227\r\n   4: rustc::util::common::panic_hook\r\n   5: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:495\r\n   6: std::panicking::begin_panic\r\n   7: rustc::traits::query::normalize_erasing_regions::<impl rustc::ty::context::TyCtxt<'cx, 'tcx, 'tcx>>::normalize_erasing_late_bound_regions\r\n   8: rustc::ty::instance::Instance::resolve_closure\r\n   9: rustc_mir::interpret::cast::<impl rustc_mir::interpret::eval_context::EvalContext<'a, 'mir, 'tcx, M>>::cast\r\n  10: rustc_mir::interpret::step::<impl rustc_mir::interpret::eval_context::EvalContext<'a, 'mir, 'tcx, M>>::run\r\n  11: rustc_mir::const_eval::eval_body_using_ecx\r\n  12: rustc_mir::const_eval::const_eval_raw_provider\r\n  13: rustc::ty::query::__query_compute::const_eval_raw\r\n  14: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors<'tcx> for rustc::ty::query::queries::const_eval_raw<'tcx>>::compute\r\n  15: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  16: <rustc::ty::query::plumbing::JobOwner<'a, 'tcx, Q>>::start\r\n  17: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::force_query_with_job\r\n  18: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::get_query\r\n  19: rustc::ty::query::TyCtxtAt::const_eval_raw\r\n  20: <rustc_mir::interpret::eval_context::EvalContext<'a, 'mir, 'tcx, M>>::const_eval_raw\r\n  21: rustc_mir::interpret::operand::<impl rustc_mir::interpret::eval_context::EvalContext<'a, 'mir, 'tcx, M>>::const_value_to_op\r\n  22: rustc_mir::const_eval::const_to_op\r\n  23: rustc_mir::transform::const_prop::ConstPropagator::eval_constant\r\n  24: <rustc_mir::transform::const_prop::ConstPropagator<'b, 'a, 'tcx> as rustc::mir::visit::Visitor<'tcx>>::visit_terminator_kind\r\n  25: <rustc_mir::transform::const_prop::ConstProp as rustc_mir::transform::MirPass>::run_pass\r\n  26: rustc_mir::transform::run_passes::{{closure}}\r\n  27: rustc_mir::transform::run_passes\r\n  28: rustc_mir::transform::optimized_mir\r\n  29: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors<'tcx> for rustc::ty::query::queries::optimized_mir<'tcx>>::compute\r\n  30: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  31: <rustc::ty::query::plumbing::JobOwner<'a, 'tcx, Q>>::start\r\n  32: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::force_query_with_job\r\n  33: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::try_get_query\r\n  34: rustc::ty::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::instance_mir\r\n  35: rustc_mir::monomorphize::collector::collect_items_rec\r\n  36: rustc_mir::monomorphize::collector::collect_items_rec\r\n  37: rustc_mir::monomorphize::collector::collect_crate_mono_items::{{closure}}\r\n  38: rustc::util::common::time\r\n  39: rustc_mir::monomorphize::collector::collect_crate_mono_items\r\n  40: rustc::util::common::time\r\n  41: rustc_mir::monomorphize::partitioning::collect_and_partition_mono_items\r\n  42: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors<'tcx> for rustc::ty::query::queries::collect_and_partition_mono_items<'tcx>>::compute\r\n  43: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  44: <rustc::ty::query::plumbing::JobOwner<'a, 'tcx, Q>>::start\r\n  45: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::force_query_with_job\r\n  46: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::get_query\r\n  47: rustc_codegen_ssa::base::codegen_crate\r\n  48: <rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_utils::codegen_backend::CodegenBackend>::codegen_crate\r\n  49: rustc::util::common::time\r\n  50: rustc_driver::driver::phase_4_codegen\r\n  51: rustc_driver::driver::compile_input::{{closure}}\r\n  52: rustc::ty::context::tls::enter_context\r\n  53: <std::thread::local::LocalKey<T>>::with\r\n  54: rustc::ty::context::TyCtxt::create_and_enter\r\n  55: rustc_driver::driver::compile_input\r\n  56: rustc_driver::run_compiler_with_pool\r\n  57: <scoped_tls::ScopedKey<T>>::set\r\n  58: rustc_driver::run_compiler\r\n  59: rustc_driver::monitor::{{closure}}\r\n  60: __rust_maybe_catch_panic\r\n             at src/libpanic_unwind/lib.rs:102\r\n  61: rustc_driver::run\r\n  62: rustc_driver::main\r\n  63: std::rt::lang_start::{{closure}}\r\n  64: std::panicking::try::do_call\r\n             at src/libstd/rt.rs:59\r\n             at src/libstd/panicking.rs:310\r\n  65: __rust_maybe_catch_panic\r\n             at src/libpanic_unwind/lib.rs:102\r\n  66: std::rt::lang_start_internal\r\n             at src/libstd/panicking.rs:289\r\n             at src/libstd/panic.rs:398\r\n             at src/libstd/rt.rs:58\r\n  67: main\r\n  68: __libc_start_main\r\n  69: <unknown>\r\nquery stack during panic:\r\n#0 [const_eval_raw] const-evaluating `<S<T>>::ID`\r\n --> associated_generic.rs:6:9\r\n  |\r\n6 |         Self::ID(self)\r\n  |         ^^^^^^^^^^^^^^\r\n#1 [optimized_mir] processing `<S<T>>::id`\r\n#2 [collect_and_partition_mono_items] collect_and_partition_mono_items\r\nend of query stack\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.32.0 (9fda7c223 2019-01-16) running on x86_64-unknown-linux-gnu\r\n\r\n```", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/58435/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/58435/timeline", "performed_via_github_app": null, "state_reason": "completed"}