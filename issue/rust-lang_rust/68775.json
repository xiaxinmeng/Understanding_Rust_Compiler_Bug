{"url": "https://api.github.com/repos/rust-lang/rust/issues/68775", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/68775/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/68775/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/68775/events", "html_url": "https://github.com/rust-lang/rust/issues/68775", "id": 558728754, "node_id": "MDU6SXNzdWU1NTg3Mjg3NTQ=", "number": 68775, "title": "Destructuring after assigning enum is not considered irrefutable", "user": {"login": "tpdickso", "id": 4406631, "node_id": "MDQ6VXNlcjQ0MDY2MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/4406631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tpdickso", "html_url": "https://github.com/tpdickso", "followers_url": "https://api.github.com/users/tpdickso/followers", "following_url": "https://api.github.com/users/tpdickso/following{/other_user}", "gists_url": "https://api.github.com/users/tpdickso/gists{/gist_id}", "starred_url": "https://api.github.com/users/tpdickso/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tpdickso/subscriptions", "organizations_url": "https://api.github.com/users/tpdickso/orgs", "repos_url": "https://api.github.com/users/tpdickso/repos", "events_url": "https://api.github.com/users/tpdickso/events{/privacy}", "received_events_url": "https://api.github.com/users/tpdickso/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2020-02-02T17:30:27Z", "updated_at": "2020-02-02T18:41:33Z", "closed_at": "2020-02-02T17:44:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently, this code fails to compile, as the destructuring of the variant `A` is considered refutable:\r\n```rust\r\nenum Enum {\r\n    A(i32),\r\n    B(f32)\r\n}\r\n\r\nfn main() {\r\n    let a = Enum::A(12);\r\n    let Enum::A(x) = a;\r\n    println!(\"{}\", a);\r\n}\r\n```\r\nIrrefutable matches are difficult to determine in general but I think that this is a low-hanging fruit that would enable some useful programming patterns. For example, in my code, I've got a situation where I need to wrap a type in an enum, then call a method on an immutable reference to that enum value, and then pull it back out of the enum so I can use the value again, and it's nice not to have to wrap it in a `match { ... _ => unreachable!() }`.\r\n\r\nI don't think there's any way where an immutable reference to an enum could change its variant without invoking undefined behaviour, even considering things like `UnsafeCell`, since correct use of an `UnsafeCell` still shouldn't hand out an immutable reference to the enum value itself while still mutating it.", "closed_by": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/68775/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/68775/timeline", "performed_via_github_app": null, "state_reason": "completed"}