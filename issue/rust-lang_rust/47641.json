{"url": "https://api.github.com/repos/rust-lang/rust/issues/47641", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/47641/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/47641/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/47641/events", "html_url": "https://github.com/rust-lang/rust/issues/47641", "id": 290295764, "node_id": "MDU6SXNzdWUyOTAyOTU3NjQ=", "number": 47641, "title": "#[link(name=\u2026)] makes life hard for non-cargo build systems", "user": {"login": "P-E-Meunier", "id": 17021304, "node_id": "MDQ6VXNlcjE3MDIxMzA0", "avatar_url": "https://avatars.githubusercontent.com/u/17021304?v=4", "gravatar_id": "", "url": "https://api.github.com/users/P-E-Meunier", "html_url": "https://github.com/P-E-Meunier", "followers_url": "https://api.github.com/users/P-E-Meunier/followers", "following_url": "https://api.github.com/users/P-E-Meunier/following{/other_user}", "gists_url": "https://api.github.com/users/P-E-Meunier/gists{/gist_id}", "starred_url": "https://api.github.com/users/P-E-Meunier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/P-E-Meunier/subscriptions", "organizations_url": "https://api.github.com/users/P-E-Meunier/orgs", "repos_url": "https://api.github.com/users/P-E-Meunier/repos", "events_url": "https://api.github.com/users/P-E-Meunier/events{/privacy}", "received_events_url": "https://api.github.com/users/P-E-Meunier/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37547, "node_id": "MDU6TGFiZWwzNzU0Nw==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-linkage", "name": "A-linkage", "color": "f7e101", "default": false, "description": "Area: linking into static, shared libraries and binaries"}, {"id": 602425123, "node_id": "MDU6TGFiZWw2MDI0MjUxMjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-dev-tools", "name": "T-dev-tools", "color": "bfd4f2", "default": false, "description": "Relevant to the dev-tools subteam, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-01-21T18:52:00Z", "updated_at": "2020-04-20T22:46:30Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "I'm not sure how that feauter is handled by rustc (and cargo?).\r\n\r\nMy Nix-based build system (carnix) cannot build packages using it, because it has no way to tell a library declared in this way has to be used (I tried just grepping over the source files, but that fails because some modules might not get compiled, depending on the platform and features).\r\n\r\nI'd like at least one of the following:\r\n\r\n- help on what options I need to pass to rustc in order to compile these crates anyway,\r\n- or a new command in cargo and/or in rustc to output flags for these files (such as `cargo:rustc-flags=\u2026`) without compiling anything, that can then be passed to rustc to actually compile the crate.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/47641/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/47641/timeline", "performed_via_github_app": null, "state_reason": null}