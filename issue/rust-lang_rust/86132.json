{"url": "https://api.github.com/repos/rust-lang/rust/issues/86132", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/86132/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/86132/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/86132/events", "html_url": "https://github.com/rust-lang/rust/issues/86132", "id": 914584369, "node_id": "MDU6SXNzdWU5MTQ1ODQzNjk=", "number": 86132, "title": "ICE: 'called `Result::unwrap()` on an `Err` value: \"`7` is not a power of 2\"', compiler/rustc_mir/src/interpret/traits.rs:168:62", "user": {"login": "Cancelll", "id": 26196045, "node_id": "MDQ6VXNlcjI2MTk2MDQ1", "avatar_url": "https://avatars.githubusercontent.com/u/26196045?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Cancelll", "html_url": "https://github.com/Cancelll", "followers_url": "https://api.github.com/users/Cancelll/followers", "following_url": "https://api.github.com/users/Cancelll/following{/other_user}", "gists_url": "https://api.github.com/users/Cancelll/gists{/gist_id}", "starred_url": "https://api.github.com/users/Cancelll/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Cancelll/subscriptions", "organizations_url": "https://api.github.com/users/Cancelll/orgs", "repos_url": "https://api.github.com/users/Cancelll/repos", "events_url": "https://api.github.com/users/Cancelll/events{/privacy}", "received_events_url": "https://api.github.com/users/Cancelll/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 36996, "node_id": "MDU6TGFiZWwzNjk5Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-easy", "name": "E-easy", "color": "02e10c", "default": false, "description": "Call for participation: Experience needed to fix: Easy / not much (good first issue)"}, {"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 60329014, "node_id": "MDU6TGFiZWw2MDMyOTAxNA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-low", "name": "P-low", "color": "eb6420", "default": false, "description": "Low priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 900795185, "node_id": "MDU6TGFiZWw5MDA3OTUxODU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-eval", "name": "A-const-eval", "color": "f7e101", "default": false, "description": "Area: constant evaluation (mir interpretation)"}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}], "state": "closed", "locked": false, "assignee": {"login": "lqd", "id": 247183, "node_id": "MDQ6VXNlcjI0NzE4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/247183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lqd", "html_url": "https://github.com/lqd", "followers_url": "https://api.github.com/users/lqd/followers", "following_url": "https://api.github.com/users/lqd/following{/other_user}", "gists_url": "https://api.github.com/users/lqd/gists{/gist_id}", "starred_url": "https://api.github.com/users/lqd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lqd/subscriptions", "organizations_url": "https://api.github.com/users/lqd/orgs", "repos_url": "https://api.github.com/users/lqd/repos", "events_url": "https://api.github.com/users/lqd/events{/privacy}", "received_events_url": "https://api.github.com/users/lqd/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "lqd", "id": 247183, "node_id": "MDQ6VXNlcjI0NzE4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/247183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lqd", "html_url": "https://github.com/lqd", "followers_url": "https://api.github.com/users/lqd/followers", "following_url": "https://api.github.com/users/lqd/following{/other_user}", "gists_url": "https://api.github.com/users/lqd/gists{/gist_id}", "starred_url": "https://api.github.com/users/lqd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lqd/subscriptions", "organizations_url": "https://api.github.com/users/lqd/orgs", "repos_url": "https://api.github.com/users/lqd/repos", "events_url": "https://api.github.com/users/lqd/events{/privacy}", "received_events_url": "https://api.github.com/users/lqd/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2021-06-08T08:33:42Z", "updated_at": "2021-06-12T03:46:33Z", "closed_at": "2021-06-12T03:46:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\n```Rust\r\nuse std::mem;\r\ntrait Trait {}\r\nconst TRAIT_OBJ_UNALIGNED_VTABLE: &Trait =\r\n    unsafe { mem::transmute((&92u8, &[0b_______001_11i128; 128])) };\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.54.0-nightly (35fff69d0 2021-06-06)\r\nbinary: rustc\r\ncommit-hash: 35fff69d043b1c0f5c29894e7f4b0da8b039c131\r\ncommit-date: 2021-06-06\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.54.0-nightly\r\nLLVM version: 12.0.1\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nwarning: trait objects without an explicit `dyn` are deprecated\r\n --> mutant.rs:3:36\r\n  |\r\n3 | const TRAIT_OBJ_UNALIGNED_VTABLE: &Trait =\r\n  |                                    ^^^^^ help: use `dyn`: `dyn Trait`\r\n  |\r\n  = note: `#[warn(bare_trait_objects)]` on by default\r\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2021 edition!\r\n  = note: for more information, see issue #80165 <https://github.com/rust-lang/rust/issues/80165>\r\n\r\nwarning: constant is never used: `TRAIT_OBJ_UNALIGNED_VTABLE`\r\n --> mutant.rs:3:1\r\n  |\r\n3 | / const TRAIT_OBJ_UNALIGNED_VTABLE: &Trait =\r\n4 | |     unsafe { mem::transmute((&92u8, &[0b_______001_11i128; 128])) };\r\n  | |____________________________________________________________________^\r\n  |\r\n  = note: `#[warn(dead_code)]` on by default\r\n\r\nthread 'rustc' panicked at 'called `Result::unwrap()` on an `Err` value: \"`7` is not a power of 2\"', compiler/rustc_mir/src/interpret/traits.rs:168:62\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.54.0-nightly (35fff69d0 2021-06-06) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -Z mir-opt-level=3 -Z new-llvm-pass-manager=yes -Z unsound-mir-opts=yes -Z polonius=yes -Z polymorphize=yes -C debuginfo=2 -C opt-level=3 --crate-type staticlib\r\n\r\nquery stack during panic:\r\n#0 [eval_to_allocation_raw] const-evaluating + checking `TRAIT_OBJ_UNALIGNED_VTABLE`\r\n#1 [eval_to_const_value_raw] simplifying constant for the type system `TRAIT_OBJ_UNALIGNED_VTABLE`\r\nend of query stack\r\nwarning: 2 warnings emitted\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nwarning: trait objects without an explicit `dyn` are deprecated\r\n --> mutant.rs:3:36\r\n  |\r\n3 | const TRAIT_OBJ_UNALIGNED_VTABLE: &Trait =\r\n  |                                    ^^^^^ help: use `dyn`: `dyn Trait`\r\n  |\r\n  = note: `#[warn(bare_trait_objects)]` on by default\r\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2021 edition!\r\n  = note: for more information, see issue #80165 <https://github.com/rust-lang/rust/issues/80165>\r\n\r\nwarning: constant is never used: `TRAIT_OBJ_UNALIGNED_VTABLE`\r\n --> mutant.rs:3:1\r\n  |\r\n3 | / const TRAIT_OBJ_UNALIGNED_VTABLE: &Trait =\r\n4 | |     unsafe { mem::transmute((&92u8, &[0b_______001_11i128; 128])) };\r\n  | |____________________________________________________________________^\r\n  |\r\n  = note: `#[warn(dead_code)]` on by default\r\n\r\nthread 'rustc' panicked at 'called `Result::unwrap()` on an `Err` value: \"`7` is not a power of 2\"', compiler/rustc_mir/src/interpret/traits.rs:168:62\r\nstack backtrace:\r\n   0: rust_begin_unwind\r\n             at /rustc/35fff69d043b1c0f5c29894e7f4b0da8b039c131/library/std/src/panicking.rs:515:5\r\n   1: core::panicking::panic_fmt\r\n             at /rustc/35fff69d043b1c0f5c29894e7f4b0da8b039c131/library/core/src/panicking.rs:92:14\r\n   2: core::result::unwrap_failed\r\n             at /rustc/35fff69d043b1c0f5c29894e7f4b0da8b039c131/library/core/src/result.rs:1355:5\r\n   3: rustc_mir::interpret::traits::<impl rustc_mir::interpret::eval_context::InterpCx<M>>::read_size_and_align_from_vtable\r\n   4: rustc_mir::interpret::eval_context::InterpCx<M>::size_and_align_of\r\n   5: rustc_mir::interpret::place::<impl rustc_mir::interpret::eval_context::InterpCx<M>>::deref_operand\r\n   6: rustc_mir::interpret::place::<impl rustc_mir::interpret::eval_context::InterpCx<M>>::eval_place\r\n   7: rustc_mir::interpret::step::<impl rustc_mir::interpret::eval_context::InterpCx<M>>::eval_rvalue_into_place\r\n   8: rustc_mir::interpret::step::<impl rustc_mir::interpret::eval_context::InterpCx<M>>::run\r\n   9: rustc_mir::const_eval::eval_queries::eval_to_allocation_raw_provider\r\n  10: rustc_query_impl::<impl rustc_query_system::query::config::QueryAccessors<rustc_query_impl::plumbing::QueryCtxt> for rustc_query_impl::queries::eval_to_allocation_raw>::compute\r\n  11: rustc_query_system::query::plumbing::get_query_impl\r\n  12: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::eval_to_allocation_raw\r\n  13: rustc_mir::const_eval::eval_queries::eval_to_const_value_raw_provider\r\n  14: rustc_query_impl::<impl rustc_query_system::query::config::QueryAccessors<rustc_query_impl::plumbing::QueryCtxt> for rustc_query_impl::queries::eval_to_const_value_raw>::compute\r\n  15: rustc_query_system::query::plumbing::get_query_impl\r\n  16: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::eval_to_const_value_raw\r\n  17: rustc_mir::const_eval::eval_queries::eval_to_const_value_raw_provider\r\n  18: rustc_query_impl::<impl rustc_query_system::query::config::QueryAccessors<rustc_query_impl::plumbing::QueryCtxt> for rustc_query_impl::queries::eval_to_const_value_raw>::compute\r\n  19: rustc_query_system::query::plumbing::get_query_impl\r\n  20: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::eval_to_const_value_raw\r\n  21: rustc_middle::mir::interpret::queries::<impl rustc_middle::ty::context::TyCtxt>::const_eval_global_id\r\n  22: rustc_middle::mir::interpret::queries::<impl rustc_middle::ty::context::TyCtxt>::const_eval_poly\r\n  23: <rustc_lint::BuiltinCombinedLateLintPass as rustc_lint::passes::LateLintPass>::check_item\r\n  24: rustc_hir::intravisit::Visitor::visit_nested_item\r\n  25: rustc_hir::intravisit::walk_crate\r\n  26: rustc_lint::late::late_lint_crate\r\n  27: rustc_data_structures::sync::join\r\n  28: std::panic::catch_unwind\r\n  29: rustc_interface::passes::analysis\r\n  30: rustc_query_system::query::plumbing::get_query_impl\r\n  31: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::analysis\r\n  32: rustc_interface::passes::QueryContext::enter\r\n  33: rustc_span::with_session_globals\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.54.0-nightly (35fff69d0 2021-06-06) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -Z mir-opt-level=3 -Z new-llvm-pass-manager=yes -Z unsound-mir-opts=yes -Z polonius=yes -Z polymorphize=yes -C debuginfo=2 -C opt-level=3 --crate-type staticlib\r\n\r\nquery stack during panic:\r\n#0 [eval_to_allocation_raw] const-evaluating + checking `TRAIT_OBJ_UNALIGNED_VTABLE`\r\n#1 [eval_to_const_value_raw] simplifying constant for the type system `TRAIT_OBJ_UNALIGNED_VTABLE`\r\n#2 [eval_to_const_value_raw] simplifying constant for the type system `TRAIT_OBJ_UNALIGNED_VTABLE`\r\n#3 [analysis] running analysis passes on this crate\r\nend of query stack\r\nwarning: 2 warnings emitted\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"lqd\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/86132/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/86132/timeline", "performed_via_github_app": null, "state_reason": "completed"}