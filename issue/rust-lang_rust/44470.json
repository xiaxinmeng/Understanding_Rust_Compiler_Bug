{"url": "https://api.github.com/repos/rust-lang/rust/issues/44470", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/44470/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/44470/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/44470/events", "html_url": "https://github.com/rust-lang/rust/issues/44470", "id": 256470842, "node_id": "MDU6SXNzdWUyNTY0NzA4NDI=", "number": 44470, "title": "Lifetime error message is backwards: lifetime of reference outlives lifetime of borrowed content", "user": {"login": "bluss", "id": 3209739, "node_id": "MDQ6VXNlcjMyMDk3Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/3209739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluss", "html_url": "https://github.com/bluss", "followers_url": "https://api.github.com/users/bluss/followers", "following_url": "https://api.github.com/users/bluss/following{/other_user}", "gists_url": "https://api.github.com/users/bluss/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluss/subscriptions", "organizations_url": "https://api.github.com/users/bluss/orgs", "repos_url": "https://api.github.com/users/bluss/repos", "events_url": "https://api.github.com/users/bluss/events{/privacy}", "received_events_url": "https://api.github.com/users/bluss/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-09-09T22:41:07Z", "updated_at": "2018-01-17T23:18:59Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "I think this diagnostic can be improved.\r\nWhen compiling this code:\r\n\r\n```rust\r\nfn foo<'a, 'b>(a: &'a str, b: &'b str) -> &'b str {\r\n    a\r\n}\r\n```\r\nWe get this diagnostic:\r\n```rust\r\nerror[E0312]: lifetime of reference outlives lifetime of borrowed content...\r\n --> src/main.rs:4:5\r\n  |\r\n4 |     a\r\n  |     ^\r\n  |\r\nnote: ...the reference is valid for the lifetime 'b as defined on the function body at 3:1...\r\n --> src/main.rs:3:1\r\n  |\r\n3 | / fn foo<'a, 'b>(a: &'a str, b: &'b str) -> &'b str {\r\n4 | |     a\r\n5 | | }\r\n  | |_^\r\nnote: ...but the borrowed content is only valid for the lifetime 'a as defined on the function body at 3:1\r\n --> src/main.rs:3:1\r\n  |\r\n3 | / fn foo<'a, 'b>(a: &'a str, b: &'b str) -> &'b str {\r\n4 | |     a\r\n5 | | }\r\n  | |_^\r\n```\r\n\r\n## The Problematic Code\r\n\r\nThe code is trying to return a reference with lifetime `'a` where `'b` should be, and the two are not compatible in any direction.\r\n\r\nEquivalently, either or:\r\n\r\n* The user is supplying a reference that is not valid long enough to match the signature\r\n* The user is supplying a signature that is not matching the reference that is being returned\r\n\r\n## Problems With the Diagnostic\r\n\r\nThe first line is: `lifetime of reference outlives lifetime of borrowed content...`\r\n\r\n1. The error doesn't mention \"return type\", it probably should to be clear\r\n2. The error is subjectively \u201cbackwards\u201d, it feels a bit alien. It's telling us that the return type specifies a lifetime that is longer than the borrow that was passed.\r\n    - The forwards direction is: borrowed content does not live long enough for the lifetime of the reference (in the return type).\r\n\r\n2. \u201c`reference`\u201d in this sentence refers to the reference in the return type (`&'b str`); but the user will often think in concrete terms. If you say reference, they will think of `a`, the variable that holds a reference\r\n     - Especially the note \u201cthe reference is valid for the lifetime 'b\u201d sounds very concrete, and it's confusing that this is not referring to any variable at all, still just the return type.\r\n\r\n## Proposed Solution\r\n\r\nChange error message to something like:\r\n>  borrowed content does not live long enough for reference in the return type of function foo\r\n\r\nor \r\n\r\n> borrowed content does not live long enough to be returned from function foo\r\n\r\n\r\nThis is inspired by a discussion in #rust-beginners on irc.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/44470/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/44470/timeline", "performed_via_github_app": null, "state_reason": null}