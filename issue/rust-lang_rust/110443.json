{"url": "https://api.github.com/repos/rust-lang/rust/issues/110443", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/110443/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/110443/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/110443/events", "html_url": "https://github.com/rust-lang/rust/issues/110443", "id": 1670654429, "node_id": "I_kwDOAAsO6M5jlCnd", "number": 110443, "title": "inferred repeat expression length unnecessarily needs `Copy`", "user": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 4277128249, "node_id": "LA_kwDOAAsO6M7-78w5", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-generic_arg_infer", "name": "F-generic_arg_infer", "color": "f9c0cc", "default": false, "description": "Using `_` as a const argument: #![feature(generic_arg_infer)]`"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2023-04-17T08:14:26Z", "updated_at": "2023-04-17T08:15:08Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```rust\r\n#![feature(generic_arg_infer)]\r\nstruct NotCopy;\r\n\r\nfn with_len<T, const N: usize>(_: [T; N]) {}\r\n\r\nfn main() {\r\n    let x = [NotCopy; _];\r\n    with_len::<NotCopy, 0>(x)\r\n}\r\n```\r\nresults in the following error:\r\n```rust\r\nerror[[E0277]](https://doc.rust-lang.org/nightly/error_codes/E0277.html): the trait bound `NotCopy: Copy` is not satisfied\r\n --> src/main.rs:7:14\r\n  |\r\n7 |     let x = [NotCopy; _];\r\n  |              ^^^^^^^ the trait `Copy` is not implemented for `NotCopy`\r\n  |\r\n  = note: the `Copy` trait is required because this value will be copied for each element of the array\r\nhelp: consider annotating `NotCopy` with `#[derive(Copy)]`\r\n  |\r\n2 + #[derive(Copy)]\r\n3 | struct NotCopy;\r\n  |\r\n```\r\n\r\nwe should be able to solve that by using marker traits (potentially waiting until they're stable)\r\n```rust\r\n#[marker]\r\ntrait RepeatExprMayCopyValue {}\r\nimpl<T: Copy, const N: usize> RepeatExprMayCopyValue for [T; N] {}\r\nimpl<T> RepeatExprMayCopyValue for [T; 0] {}\r\nimpl<T> RepeatExprMayCopyValue for [T; 1] {}\r\n```\r\nand then change hir typeck to require `RepeatExprMayCopyValue` for the array instead of optionally requiring `Copy` for the value.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/110443/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/110443/timeline", "performed_via_github_app": null, "state_reason": null}