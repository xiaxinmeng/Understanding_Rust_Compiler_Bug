{"url": "https://api.github.com/repos/rust-lang/rust/issues/54738", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/54738/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/54738/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/54738/events", "html_url": "https://github.com/rust-lang/rust/issues/54738", "id": 365761745, "node_id": "MDU6SXNzdWUzNjU3NjE3NDU=", "number": 54738, "title": "Split `ConstValue`", "user": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37234, "node_id": "MDU6TGFiZWwzNzIzNA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-cleanup", "name": "C-cleanup", "color": "f5f1fd", "default": false, "description": "Category: PRs that clean code up or issues documenting cleanup."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 900795185, "node_id": "MDU6TGFiZWw5MDA3OTUxODU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-eval", "name": "A-const-eval", "color": "f7e101", "default": false, "description": "Area: constant evaluation (mir interpretation)"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-10-02T06:46:49Z", "updated_at": "2019-03-15T14:15:29Z", "closed_at": "2019-03-15T14:15:28Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The `ConstValue` type serves different purposes currently. As return value of `const_eval` for statics, consts and promoteds, we could instead always return an `AllocId` + offset (i.e., a `Pointer`) and avoid even thinking about whether we want the value to be immediate instead. Some places want an immediate (array lengths, pattern matching), they could get a different query returning a different type that \"wraps\" the main query.\r\n\r\nSo, I imagine something like: We have one type that serves the current role of `ConstValue`\r\n```rust\r\nenum Const<'tcx> {\r\n   Unevaluated(DefId, &'tcx Substs<'tcx>),\r\n   Evaluated(Pointer),\r\n}\r\n```\r\nand a new one\r\n```rust\r\nenum ConstValue {\r\n  Scalar(Scalar),\r\n  ScalarPair(Scalar, Scalar),\r\n}\r\n```\r\n(I called the latter `ConstValue` for symmetry with the `Value` type. But maybe it's better to not change too many names, and call the 2nd type `ConstImmediate` or so.)\r\n\r\nThen we make the `const_eval` query return a `Pointer`, and we add a new query `const_eval_value` returning a `ConstValue`.\r\n\r\nOverall, this uses the type system to encode that the queries never return `Unevaluated`, and it lets most callers handle everything uniformly (no need to deal with immediates unless needed).\r\n\r\nCc @oli-obk @eddyb -- does this make any sense?", "closed_by": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/54738/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/54738/timeline", "performed_via_github_app": null, "state_reason": "completed"}