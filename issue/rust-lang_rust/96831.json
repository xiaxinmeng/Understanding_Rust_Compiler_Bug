{"url": "https://api.github.com/repos/rust-lang/rust/issues/96831", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/96831/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/96831/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/96831/events", "html_url": "https://github.com/rust-lang/rust/issues/96831", "id": 1228798915, "node_id": "I_kwDOAAsO6M5JPfvD", "number": 96831, "title": "GAT lifetime bound error when using Self::Associated<'a> but works when the associated type is written out.", "user": {"login": "wishawa", "id": 49518157, "node_id": "MDQ6VXNlcjQ5NTE4MTU3", "avatar_url": "https://avatars.githubusercontent.com/u/49518157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wishawa", "html_url": "https://github.com/wishawa", "followers_url": "https://api.github.com/users/wishawa/followers", "following_url": "https://api.github.com/users/wishawa/following{/other_user}", "gists_url": "https://api.github.com/users/wishawa/gists{/gist_id}", "starred_url": "https://api.github.com/users/wishawa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wishawa/subscriptions", "organizations_url": "https://api.github.com/users/wishawa/orgs", "repos_url": "https://api.github.com/users/wishawa/repos", "events_url": "https://api.github.com/users/wishawa/events{/privacy}", "received_events_url": "https://api.github.com/users/wishawa/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}, {"id": 149689562, "node_id": "MDU6TGFiZWwxNDk2ODk1NjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-associated-items", "name": "A-associated-items", "color": "f7e101", "default": false, "description": "Area: Associated items such as associated types and consts."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1485960423, "node_id": "MDU6TGFiZWwxNDg1OTYwNDIz", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-generic_associated_types", "name": "F-generic_associated_types", "color": "f9c0cc", "default": false, "description": "`#![feature(generic_associated_types)]` a.k.a. GATs"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-05-08T05:38:02Z", "updated_at": "2022-05-08T14:28:19Z", "closed_at": "2022-05-08T14:28:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "### I tried this code\r\n[playground link](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021&gist=44c33b66ae0efe73409bcf1de3cb7b2c)\r\n\r\n<details><summary>also pasted here</summary>\r\n\r\n```rust\r\n#![feature(generic_associated_types)]\r\n\r\nuse std::cell::RefCell;\r\n\r\ntrait Visitable {\r\n    type Value<'x>\r\n    where\r\n        Self: 'x;\r\n    fn visit<F>(&self, visitor: F)\r\n    where\r\n        F: for<'x> FnOnce(Self::Value<'x>);\r\n}\r\n\r\nstruct Source<T> {\r\n    value: RefCell<T>,\r\n}\r\n\r\nimpl<T> Visitable for Source<T> {\r\n    type Value<'x> = &'x T where Self: 'x;\r\n    fn visit<F>(&self, visitor: F)\r\n    where\r\n        F: for<'x> FnOnce(Self::Value<'x>), // FAILS (F: FnOnce(Self::Value<'_>) also fails)\r\n        // F: for<'x> FnOnce(&'x T), // WORKS (F: FnOnce(&'_ T) also works)\r\n    {\r\n        let borrow = self.value.borrow();\r\n        visitor(&*borrow)\r\n    }\r\n}\r\n```\r\n\r\n</details>\r\n\r\n### I expected to see this happen\r\nThe code compiles fine.\r\n\r\n### Instead, this happened\r\nThe code does not compile. Error E0311.\r\n\r\n### Workaround\r\nWriting out the associated type (as done on line 23 in the playground), makes the code compile.\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.62.0-nightly (77652b9ef 2022-05-06)\r\nbinary: rustc\r\ncommit-hash: 77652b9ef3fc98e2df0e260efedb80aa68c08c06\r\ncommit-date: 2022-05-06\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.62.0-nightly\r\nLLVM version: 14.0.1\r\n```\r\n", "closed_by": {"login": "wishawa", "id": 49518157, "node_id": "MDQ6VXNlcjQ5NTE4MTU3", "avatar_url": "https://avatars.githubusercontent.com/u/49518157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wishawa", "html_url": "https://github.com/wishawa", "followers_url": "https://api.github.com/users/wishawa/followers", "following_url": "https://api.github.com/users/wishawa/following{/other_user}", "gists_url": "https://api.github.com/users/wishawa/gists{/gist_id}", "starred_url": "https://api.github.com/users/wishawa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wishawa/subscriptions", "organizations_url": "https://api.github.com/users/wishawa/orgs", "repos_url": "https://api.github.com/users/wishawa/repos", "events_url": "https://api.github.com/users/wishawa/events{/privacy}", "received_events_url": "https://api.github.com/users/wishawa/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/96831/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/96831/timeline", "performed_via_github_app": null, "state_reason": "completed"}