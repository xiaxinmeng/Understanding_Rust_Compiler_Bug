{"url": "https://api.github.com/repos/rust-lang/rust/issues/2030", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/2030/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/2030/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/2030/events", "html_url": "https://github.com/rust-lang/rust/issues/2030", "id": 3726579, "node_id": "MDU6SXNzdWUzNzI2NTc5", "number": 2030, "title": "RFC: Rethink argument modes", "user": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37544, "node_id": "MDU6TGFiZWwzNzU0NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-typesystem", "name": "A-typesystem", "color": "f7e101", "default": false, "description": "Area: The type system"}, {"id": 234956, "node_id": "MDU6TGFiZWwyMzQ5NTY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-codegen", "name": "A-codegen", "color": "f7e101", "default": false, "description": "Area: Code generation"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/rust-lang/rust/milestones/7", "html_url": "https://github.com/rust-lang/rust/milestone/7", "labels_url": "https://api.github.com/repos/rust-lang/rust/milestones/7/labels", "id": 85273, "node_id": "MDk6TWlsZXN0b25lODUyNzM=", "number": 7, "title": "0.4", "description": "", "creator": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 179, "state": "closed", "created_at": "2012-02-16T22:09:25Z", "updated_at": "2013-03-20T22:05:40Z", "due_on": "2012-09-14T07:00:00Z", "closed_at": "2012-10-06T05:46:41Z"}, "comments": 1, "created_at": "2012-03-20T12:00:28Z", "updated_at": "2014-06-16T21:56:27Z", "closed_at": "2012-07-31T04:57:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The distinction between && and ++ (by address and by value) is clearly an annoyance, and can be removed for Rust functions now that generics are monomorphized.\n\nI maintain that by-move is strictly less useful than by-copy, and should probably also be removed. By-copy is still needed to efficiently construct things, unless we want to force callers of constructor functions to explicitly move things (`some(move my_local_vec)`) or pay for a copy, which seems unfortunate to me.\n\nAnother thing is that having explicit control over passing style for native functions is necessary. If you have a multi-word-sized thing, you sometimes want to pass it by pointer, and sometimes as a whole, depending on the signature of the native. One option is to always pass things by-value to natives, and make the argument type an unsafe pointer when calling by pointer. Again, this puts a burden on the caller, but native functions are usually wrapped by a rust adaptor function already, so this is probably not all that bad. An unfortunate side effect is that taking the value of a native function would require wrapping it in some kind of adapter, because its calling convention isn't the same as that of a Rust function with the same signature.\n\nMy proposal would be: Keep modes, but only have `copy` and `normal`, where by-copy gives the callee ownership of the argument (moving when possible, making a copy otherwise), and normal leaves ownership with the caller. Automatically pick a suitable passing convention based on the type of the value (immediates are passed directly, all other things are passed by pointer), except for (directly called) native functions, which never take things by-pointer, as outlined above.\n", "closed_by": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/2030/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/2030/timeline", "performed_via_github_app": null, "state_reason": "completed"}