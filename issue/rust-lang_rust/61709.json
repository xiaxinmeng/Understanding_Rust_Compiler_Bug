{"url": "https://api.github.com/repos/rust-lang/rust/issues/61709", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/61709/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/61709/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/61709/events", "html_url": "https://github.com/rust-lang/rust/issues/61709", "id": 453992474, "node_id": "MDU6SXNzdWU0NTM5OTI0NzQ=", "number": 61709, "title": "Extend `rustc_on_unimplemented` to allow pointing at enclosing function/closure", "user": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 60329014, "node_id": "MDU6TGFiZWw2MDMyOTAxNA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-low", "name": "P-low", "color": "eb6420", "default": false, "description": "Low priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 419557634, "node_id": "MDU6TGFiZWw0MTk1NTc2MzQ=", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-medium", "name": "E-medium", "color": "02e10c", "default": false, "description": "Call for participation: Experience needed to fix: Medium / intermediate"}, {"id": 1484153989, "node_id": "MDU6TGFiZWwxNDg0MTUzOTg5", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-on_unimplemented", "name": "F-on_unimplemented", "color": "f9c0cc", "default": false, "description": "Error messages that can be tackled with `#[rustc_on_unimplemented]`"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-06-10T04:25:15Z", "updated_at": "2019-12-03T16:27:18Z", "closed_at": "2019-12-03T16:27:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "We should extend `rustc_on_unimplemented` to be able to point at the enclosing scope. With that capability, [we could turn the following](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=8a82e08f4980eaaa74c2bc09d8a7c9e6):\r\n\r\n```\r\nerror[E0277]: the `?` operator can only be used in a function that returns `Result` or `Option` (or another type that implements `std::ops::Try`)\r\n  --> src/lib.rs:28:31\r\n   |\r\n28 |                     let end = parse_range_u32(end)?;\r\n   |                               ^^^^^^^^^^^^^^^^^^^^^ cannot use the `?` operator in a function that returns `std::ops::RangeInclusive<u32>`\r\n   |\r\n   = help: the trait `std::ops::Try` is not implemented for `std::ops::RangeInclusive<u32>`\r\n   = note: required by `std::ops::Try::from_error`\r\n```\r\n\r\ninto something along the lines of\r\n\r\n```\r\nerror[E0277]: the `?` operator can only be used in a function that returns `Result` or `Option` (or another type that implements `std::ops::Try`)\r\n  --> src/lib.rs:28:31\r\n   |\r\n24 |          .map(|range_spec| {\r\n   |               -\r\n   | ______________|\r\n... |\r\n28 ||                     let end = parse_range_u32(end)?;\r\n   ||                               ^^^^^^^^^^^^^^^^^^^^^ cannot use the `?` operator in a function that returns `std::ops::RangeInclusive<u32>`\r\n... |\r\n48 ||         })\r\n   ||         - this function should return `Result` or `Option` to accept `?`\r\n   ||_________|\r\n   |\r\n   = help: the trait `std::ops::Try` is not implemented for `std::ops::RangeInclusive<u32>`\r\n   = note: required by `std::ops::Try::from_error`\r\n```\r\n\r\n[This has caused confusion in the wild](https://users.rust-lang.org/t/help-with-result-and/29135).", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/61709/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/61709/timeline", "performed_via_github_app": null, "state_reason": "completed"}