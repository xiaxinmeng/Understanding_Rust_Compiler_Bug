{"url": "https://api.github.com/repos/rust-lang/rust/issues/22340", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/22340/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/22340/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/22340/events", "html_url": "https://github.com/rust-lang/rust/issues/22340", "id": 57707227, "node_id": "MDU6SXNzdWU1NzcwNzIyNw==", "number": 22340, "title": "Can\u2019t declare lifetime for closure that returns a reference", "user": {"login": "yonran", "id": 483060, "node_id": "MDQ6VXNlcjQ4MzA2MA==", "avatar_url": "https://avatars.githubusercontent.com/u/483060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yonran", "html_url": "https://github.com/yonran", "followers_url": "https://api.github.com/users/yonran/followers", "following_url": "https://api.github.com/users/yonran/following{/other_user}", "gists_url": "https://api.github.com/users/yonran/gists{/gist_id}", "starred_url": "https://api.github.com/users/yonran/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yonran/subscriptions", "organizations_url": "https://api.github.com/users/yonran/orgs", "repos_url": "https://api.github.com/users/yonran/repos", "events_url": "https://api.github.com/users/yonran/events{/privacy}", "received_events_url": "https://api.github.com/users/yonran/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 122406831, "node_id": "MDU6TGFiZWwxMjI0MDY4MzE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-closures", "name": "A-closures", "color": "f7e101", "default": false, "description": "Area: closures (`|args| { .. }`)"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2015-02-14T21:31:27Z", "updated_at": "2022-05-29T05:49:01Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "When you declare closure argument types, there is no syntax to declare a lifetime parameter. And I guess lifetime elision does not apply to closures. Therefore, there seems to be no way to declare the type of a closure that returns a reference.\n\nIt compiles if you avoid declaring the type of the closure and depend on type inference. But then you would not be able to assign the closure to a local variable.\n\n```\nfn print_first(list: Vec<String>) {\n    let x: &str = list\n    .first()\n    .map(|s: &String| -> &str &s[])  // ERROR \n    //.map(|s: &String| &s[]) // ERROR\n    //.map(|s| -> &str &s[]) // ERROR\n    //.map(|s| &s[])  // OK\n    .unwrap_or(\"\");\n    println!(\"First element is {}\", x);\n}\n```\n\nIt gives a compiler error and a suggestion that does not make sense.\n\n```\n    src/rusttest.rs:4:29: 4:32 error: cannot infer an appropriate lifetime for lifetime parameter 'a in function call due to conflicting requirements\n    src/rusttest.rs:4   .map(|s: &String| -> &str &s[])\n                                                   ^~~\n    src/rusttest.rs:1:1: 10:2 help: consider using an explicit lifetime parameter as shown: fn print_first<'a>(list: Vec<String>)\n    src/rusttest.rs:1 fn print_first(list: Vec<String>) {\n    src/rusttest.rs:2   let x: &str = list\n    src/rusttest.rs:3   .first()\n    src/rusttest.rs:4   .map(|s: &String| -> &str &s[])  // ERROR\n    src/rusttest.rs:5   //.map(|s: &String| &s[]) // ERROR\n    src/rusttest.rs:6   //.map(|s| -> &str &s[]) // ERROR\n```\n\nThis bug is filed after I asked this [question on stack overflow](http://stackoverflow.com/questions/28512314/how-do-i-get-lifetime-of-reference-to-owned-object-cannot-infer-an-appropriate). It may be related to [Region inference fails for closure parameter #17004](https://github.com/rust-lang/rust/issues/17004).\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/22340/reactions", "total_count": 13, "+1": 13, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/22340/timeline", "performed_via_github_app": null, "state_reason": null}