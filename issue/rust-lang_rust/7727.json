{"url": "https://api.github.com/repos/rust-lang/rust/issues/7727", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/7727/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/7727/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/7727/events", "html_url": "https://github.com/rust-lang/rust/issues/7727", "id": 16657823, "node_id": "MDU6SXNzdWUxNjY1NzgyMw==", "number": 7727, "title": "quote_expr, quote_tokens, etc. should not require an \"ext_cx\" to be in scope -- HOW TO FIX THEM", "user": {"login": "jbclements", "id": 226617, "node_id": "MDQ6VXNlcjIyNjYxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/226617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbclements", "html_url": "https://github.com/jbclements", "followers_url": "https://api.github.com/users/jbclements/followers", "following_url": "https://api.github.com/users/jbclements/following{/other_user}", "gists_url": "https://api.github.com/users/jbclements/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbclements/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbclements/subscriptions", "organizations_url": "https://api.github.com/users/jbclements/orgs", "repos_url": "https://api.github.com/users/jbclements/repos", "events_url": "https://api.github.com/users/jbclements/events{/privacy}", "received_events_url": "https://api.github.com/users/jbclements/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235146, "node_id": "MDU6TGFiZWwyMzUxNDY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-syntaxext", "name": "A-syntaxext", "color": "f7e101", "default": false, "description": "Area: Syntax extensions"}, {"id": 132910982, "node_id": "MDU6TGFiZWwxMzI5MTA5ODI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-macros", "name": "A-macros", "color": "f7e101", "default": false, "description": "Area: All kinds of macros (custom derive, macro_rules!, proc macros, ..)"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2013-07-11T22:37:18Z", "updated_at": "2016-02-02T17:10:29Z", "closed_at": "2016-02-02T17:10:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There are a number of problems with our current quote_expr!, quote_tokens!, etc. macros. The first one is that they're cloaking/unhygienic. Fixing this is easy--just change the macro definition so that you have to supply an identifier as the first argument.\n\nThe second problem is that they really shouldn't work in the way that they do.\n\nSpecifically, these macros currently expand into ASTs that represent calls to the parser, thereby generating an AST. This discards all context/hygiene information, and is also inefficient, since you already _have_ the AST that you're trying to protect.\n\nLanguages such as Racket just provide a language primitive called \"quote-syntax\" whose evaluation rule is _literally_ the trivial one--a use of quote-syntax simply evaluates to the AST on the right hand side of the call. \n\nWhat would it take to add this to Rust?\n\n1) You'd need a new AST node called (say) quote_expr.\n2) The typechecker would have to know that any quote_ast node trivially has the type ast::expr -- no checking required.\n\nThis should be less than a day of work for someone who really understands the system well. One question is whether you want to duplicate this work for each of the quote_... thingies, or make one that covers them all, with some kind of simple enum.\n\nIt appears to me that it would also allow us to throw out a huge amount of code--all of the quoting stuff that's in there currently.\n", "closed_by": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/7727/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/7727/timeline", "performed_via_github_app": null, "state_reason": "completed"}