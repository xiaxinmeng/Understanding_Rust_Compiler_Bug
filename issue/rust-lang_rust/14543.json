{"url": "https://api.github.com/repos/rust-lang/rust/issues/14543", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/14543/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/14543/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/14543/events", "html_url": "https://github.com/rust-lang/rust/issues/14543", "id": 34649993, "node_id": "MDU6SXNzdWUzNDY0OTk5Mw==", "number": 14543, "title": "Enforcing static linkage is impossible (and diagnosing why dynamic linking occurs is hard)", "user": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37547, "node_id": "MDU6TGFiZWwzNzU0Nw==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-linkage", "name": "A-linkage", "color": "f7e101", "default": false, "description": "Area: linking into static, shared libraries and binaries"}, {"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2014-05-30T14:28:09Z", "updated_at": "2018-09-24T15:48:19Z", "closed_at": "2018-09-24T15:48:19Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "There are many instances where one concretely needs a statically linked executable (e.g. to avoid having to distribute a pile of Rust dynamic libraries, making deployment much simpler).\n\nThe compiler currently offers no way to request that a compiled artefact is always statically linked against Rust crates (the only option is `-C prefer-dynamic` which isn't really a guarantee either). Since there's no way to force these things, working out why the static linking defaulting failed is very hard, especially with a non-trivial number of dependencies (since the error is almost certainly one of those dependencies coming only in `.so` format).\n\nIf the compiler provided say, `-C statically-linked`, then a user can request that something is only statically linked and receive errors about exactly what is stopping this from happening, e.g. `crate syntax can only be found as a dynamic library`. Without this, the user has to search through all dependencies to find out what is breaking things.\n\n(Case study: I was working through a problem like this with @emk on IRC. After much discussion and `ldd` wrangling, we eventually tracked it down to a library which defines a procedural macro internally along with the rest of the functionality, i.e. introducing a dependency on libsyntax. It would be much easier if we can get the compiler to tell us this straight away.)\n", "closed_by": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/14543/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/14543/timeline", "performed_via_github_app": null, "state_reason": "completed"}