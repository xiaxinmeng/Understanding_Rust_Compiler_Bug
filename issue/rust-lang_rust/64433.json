{"url": "https://api.github.com/repos/rust-lang/rust/issues/64433", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/64433/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/64433/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/64433/events", "html_url": "https://github.com/rust-lang/rust/issues/64433", "id": 493398913, "node_id": "MDU6SXNzdWU0OTMzOTg5MTM=", "number": 64433, "title": "Lifetime errors on nightly-2019-09-11 but not nightly-2019-09-10", "user": {"login": "Bunogi", "id": 15606718, "node_id": "MDQ6VXNlcjE1NjA2NzE4", "avatar_url": "https://avatars.githubusercontent.com/u/15606718?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Bunogi", "html_url": "https://github.com/Bunogi", "followers_url": "https://api.github.com/users/Bunogi/followers", "following_url": "https://api.github.com/users/Bunogi/following{/other_user}", "gists_url": "https://api.github.com/users/Bunogi/gists{/gist_id}", "starred_url": "https://api.github.com/users/Bunogi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Bunogi/subscriptions", "organizations_url": "https://api.github.com/users/Bunogi/orgs", "repos_url": "https://api.github.com/users/Bunogi/repos", "events_url": "https://api.github.com/users/Bunogi/events{/privacy}", "received_events_url": "https://api.github.com/users/Bunogi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1049510487, "node_id": "MDU6TGFiZWwxMDQ5NTEwNDg3", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-async-await", "name": "A-async-await", "color": "f7e101", "default": false, "description": "Area: Async & Await"}, {"id": 1259720434, "node_id": "MDU6TGFiZWwxMjU5NzIwNDM0", "url": "https://api.github.com/repos/rust-lang/rust/labels/AsyncAwait-Polish", "name": "AsyncAwait-Polish", "color": "d4c5f9", "default": false, "description": "Async-await issues that are part of the \"polish\" area"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-09-13T15:51:25Z", "updated_at": "2019-09-24T17:21:35Z", "closed_at": "2019-09-24T17:21:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "The code below will compile without warnings on `nightly-2019-09-10`, but returns a lifetime error on `nightly-2019-09-11` and later.\r\n\r\n```rust\r\n#[derive(Debug)]\r\nstruct A<'a> {\r\n    inner: Vec<&'a str>,\r\n}\r\n\r\nstruct B {}\r\n\r\nimpl B {\r\n    async fn something_with_a(&mut self, a: A<'_>) -> Result<(), String> {\r\n        println!(\"{:?}\", a);\r\n        Ok(())\r\n    }\r\n}\r\n\r\nasync fn can_error(some_string: &str) -> Result<(), String> {\r\n    let a = A { inner: vec![some_string, \"foo\"] };\r\n    let mut b = B {};\r\n    Ok(b.something_with_a(a).await.map(|_| ())?)\r\n}\r\n\r\nfn main() {\r\n    futures::executor::block_on(can_error(\"foo\")).unwrap();\r\n}\r\n```\r\n\r\n`cargo +nightly-2019-09-10 build` compiles the code without warnings, and `cargo +nightly-2019-09-11 build` gives the following error:\r\n```\r\nerror[E0597]: `b` does not live long enough\r\n  --> src/main.rs:18:8\r\n   |\r\n18 |     Ok(b.something_with_a(a).await.map(|_| ())?)\r\n   |        ^--------------------\r\n   |        |\r\n   |        borrowed value does not live long enough\r\n   |        a temporary with access to the borrow is created here ...\r\n19 | }\r\n   | -\r\n   | |\r\n   | `b` dropped here while still borrowed\r\n   | ... and the borrow might be used here, when that temporary is dropped and runs the destructor for type `impl core::future::future::Future`\r\n   |\r\n   = note: The temporary is part of an expression at the end of a block. Consider forcing this temporary to be dropped sooner, before the block's local variables are dropped. For example, you could save the expression's value in a new local variable `x` and then make `x` be the expression at the end of the block.\r\n\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0597`.\r\nerror: Could not compile `bugreport`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n\r\n### Meta\r\n```\r\n$ rustc +nightly-2019-09-11 --version\r\nrustc 1.39.0-nightly (34e82a7b7 2019-09-10)\r\n```", "closed_by": {"login": "cramertj", "id": 5963049, "node_id": "MDQ6VXNlcjU5NjMwNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5963049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cramertj", "html_url": "https://github.com/cramertj", "followers_url": "https://api.github.com/users/cramertj/followers", "following_url": "https://api.github.com/users/cramertj/following{/other_user}", "gists_url": "https://api.github.com/users/cramertj/gists{/gist_id}", "starred_url": "https://api.github.com/users/cramertj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cramertj/subscriptions", "organizations_url": "https://api.github.com/users/cramertj/orgs", "repos_url": "https://api.github.com/users/cramertj/repos", "events_url": "https://api.github.com/users/cramertj/events{/privacy}", "received_events_url": "https://api.github.com/users/cramertj/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/64433/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/64433/timeline", "performed_via_github_app": null, "state_reason": "completed"}