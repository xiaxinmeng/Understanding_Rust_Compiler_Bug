{"url": "https://api.github.com/repos/rust-lang/rust/issues/90368", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/90368/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/90368/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/90368/events", "html_url": "https://github.com/rust-lang/rust/issues/90368", "id": 1038160271, "node_id": "I_kwDOAAsO6M494RGP", "number": 90368, "title": "2021 edition's binding to sub-pattern doesn't work on enum with copyable fields", "user": {"login": "detly", "id": 311239, "node_id": "MDQ6VXNlcjMxMTIzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/311239?v=4", "gravatar_id": "", "url": "https://api.github.com/users/detly", "html_url": "https://github.com/detly", "followers_url": "https://api.github.com/users/detly/followers", "following_url": "https://api.github.com/users/detly/following{/other_user}", "gists_url": "https://api.github.com/users/detly/gists{/gist_id}", "starred_url": "https://api.github.com/users/detly/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/detly/subscriptions", "organizations_url": "https://api.github.com/users/detly/orgs", "repos_url": "https://api.github.com/users/detly/repos", "events_url": "https://api.github.com/users/detly/events{/privacy}", "received_events_url": "https://api.github.com/users/detly/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 171502053, "node_id": "MDU6TGFiZWwxNzE1MDIwNTM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-borrow-checker", "name": "A-borrow-checker", "color": "f7e101", "default": false, "description": "Area: The borrow checker"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1976249039, "node_id": "MDU6TGFiZWwxOTc2MjQ5MDM5", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-patterns", "name": "A-patterns", "color": "f7e101", "default": false, "description": "Relating to patterns and pattern matching"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-10-28T07:10:11Z", "updated_at": "2023-04-26T04:03:55Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "I tried the new \"binding to sub-patterns\" feature in the 2021 edition and it did not work as I expected, or consistently. [Here's a playground link](https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=4a14b694497d8cece3bacb75fcdba5bf).\r\n\r\nFirst, I tried:\r\n\r\n```rust\r\n// NOT copy!\r\n#[derive(Debug)]\r\nenum One {\r\n    A,\r\n    B(bool),\r\n}\r\n\r\nfn main() {\r\n    let a = One::B(true);\r\n    \r\n    match a {\r\n        One::A => println!(\"A\"),\r\n        other @ One::B(success) => {\r\n            println!(\"{:?}\", other);\r\n            println!(\"{}\", success);\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nI expected that even though the wrapping enum is not `Copy`, because the nested `bool` value *is*, it would be copied into `success`. However, I get the error:\r\n\r\n```text\r\nerror[E0382]: use of moved value: `a`\r\n  --> src/main.rs:13:24\r\n   |\r\n9  |     let a = One::B(true);\r\n   |         - move occurs because `a` has type `One`, which does not implement the `Copy` trait\r\n...\r\n13 |         other @ One::B(success) => {\r\n   |         ---------------^^^^^^^-\r\n   |         |              |\r\n   |         |              value used here after move\r\n   |         value moved here\r\n\r\nFor more information about this error, try `rustc --explain E0382`.\r\nerror: could not compile `playground` due to previous error\r\n```\r\n\r\nComparing this to the [example in the release notes](https://blog.rust-lang.org/2021/10/21/Rust-1.56.0.html#new-bindings-in-binding--pattern), where there's a non-`Copy` container (`Matrix`) with a `Copy`-able field (`row_len`), I don't see why it shouldn't work the same way.\r\n\r\nStrangely (I think), if I [remove the `A` variant](https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=a77830e71e9a27ac9a3ee24062959f79), it works. So infallible patterns allow this.\r\n\r\nIt will also work if I do `ref other @ One::B(success)`, but then I can't take ownership of `other`.\r\n\r\nRust version: `rustc 1.56.0 (09c42c458 2021-10-18)`  \r\nPlatform: Ubuntu 21.04  \r\nInstalled via Rustup ", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/90368/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/90368/timeline", "performed_via_github_app": null, "state_reason": null}