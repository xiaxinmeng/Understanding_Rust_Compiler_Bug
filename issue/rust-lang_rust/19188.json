{"url": "https://api.github.com/repos/rust-lang/rust/issues/19188", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/19188/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/19188/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/19188/events", "html_url": "https://github.com/rust-lang/rust/issues/19188", "id": 49722623, "node_id": "MDU6SXNzdWU0OTcyMjYyMw==", "number": 19188, "title": "libs: generalize `as_ref`/`by_ref` adapters to use `BorrowFrom`", "user": {"login": "aturon", "id": 709807, "node_id": "MDQ6VXNlcjcwOTgwNw==", "avatar_url": "https://avatars.githubusercontent.com/u/709807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aturon", "html_url": "https://github.com/aturon", "followers_url": "https://api.github.com/users/aturon/followers", "following_url": "https://api.github.com/users/aturon/following{/other_user}", "gists_url": "https://api.github.com/users/aturon/gists{/gist_id}", "starred_url": "https://api.github.com/users/aturon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aturon/subscriptions", "organizations_url": "https://api.github.com/users/aturon/orgs", "repos_url": "https://api.github.com/users/aturon/repos", "events_url": "https://api.github.com/users/aturon/events{/privacy}", "received_events_url": "https://api.github.com/users/aturon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2014-11-21T17:13:07Z", "updated_at": "2017-08-01T20:58:05Z", "closed_at": "2017-08-01T20:57:55Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "It is a pain to go from `Option<String>` to `Option<&str>`:\n\n``` rust\nopt.as_ref().map(|s| s.as_slice())\n```\n\nThis could be improved by integrating the new `BorrowFrom` infrastructure, generalizing the signature of `as_ref` from\n\n``` rust\nfn as_ref(&self) -> Option<&T>\n```\n\nto\n\n``` rust\nfn as_ref<U=T>(&self) -> Option<&U> where U: BorrowFrom<T>\n```\n\nHowever, to avoid a regression in type inference for types that can be borrowed in multiple ways, we need default type parameters on methods (as above). See https://github.com/rust-lang/rfcs/pull/213\n", "closed_by": {"login": "aturon", "id": 709807, "node_id": "MDQ6VXNlcjcwOTgwNw==", "avatar_url": "https://avatars.githubusercontent.com/u/709807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aturon", "html_url": "https://github.com/aturon", "followers_url": "https://api.github.com/users/aturon/followers", "following_url": "https://api.github.com/users/aturon/following{/other_user}", "gists_url": "https://api.github.com/users/aturon/gists{/gist_id}", "starred_url": "https://api.github.com/users/aturon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aturon/subscriptions", "organizations_url": "https://api.github.com/users/aturon/orgs", "repos_url": "https://api.github.com/users/aturon/repos", "events_url": "https://api.github.com/users/aturon/events{/privacy}", "received_events_url": "https://api.github.com/users/aturon/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/19188/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/19188/timeline", "performed_via_github_app": null, "state_reason": "completed"}