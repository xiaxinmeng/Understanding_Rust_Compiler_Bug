{"url": "https://api.github.com/repos/rust-lang/rust/issues/30867", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/30867/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/30867/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/30867/events", "html_url": "https://github.com/rust-lang/rust/issues/30867", "id": 126321373, "node_id": "MDU6SXNzdWUxMjYzMjEzNzM=", "number": 30867, "title": "HRTB impl selection does not cover type parameters not directly related to the trait.", "user": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37544, "node_id": "MDU6TGFiZWwzNzU0NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-typesystem", "name": "A-typesystem", "color": "f7e101", "default": false, "description": "Area: The type system"}, {"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2016-01-13T01:52:52Z", "updated_at": "2020-02-05T12:44:48Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "The following doesn't compile, as it tries to assign `U` a concrete `&'x i32` instead of `&'a i32`:\n\n``` rust\ntrait Unary<T> {}\nimpl<T, U, F: Fn(T) -> U> Unary<T> for F {}\nfn unary<F: for<'a> Unary<&'a T>, T>() {}\n\nfn test<F: for<'a> Fn(&'a i32) -> &'a i32>() {\n    unary::<F, i32>()\n}\n```\n\nRemoving the `U` type parameter makes it work - `U` is only used for the associated type `Fn::Output` anyway:\n\n``` rust\n#![feature(unboxed_closures)]\n\ntrait Unary<T> {}\nimpl<T, F: Fn<(T,)>> Unary<T> for F {}\nfn unary<F: for<'a> Unary<&'a T>, T>() {}\n\nfn test<F: for<'a> Fn(&'a i32) -> &'a i32>() {\n    unary::<F, i32>()\n}\n```\n\nAFAICT, the selection results in `for<'a, U> F: Fn<(&'a i32,), Output=U>` in the first case, and `for<'a> F: Fn<(&'a i32,)>` in the second case, and we refuse to allow `U` to be parameterized by `'a` in the former case, even though it's only used to satisfy the sugary form of the `Fn` trait.\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/30867/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/30867/timeline", "performed_via_github_app": null, "state_reason": null}