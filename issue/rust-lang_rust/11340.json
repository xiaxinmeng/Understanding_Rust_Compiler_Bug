{"url": "https://api.github.com/repos/rust-lang/rust/issues/11340", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/11340/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/11340/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/11340/events", "html_url": "https://github.com/rust-lang/rust/issues/11340", "id": 25100061, "node_id": "MDU6SXNzdWUyNTEwMDA2MQ==", "number": 11340, "title": "Implement copy_iter() for vectors", "user": {"login": "mitsuhiko", "id": 7396, "node_id": "MDQ6VXNlcjczOTY=", "avatar_url": "https://avatars.githubusercontent.com/u/7396?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitsuhiko", "html_url": "https://github.com/mitsuhiko", "followers_url": "https://api.github.com/users/mitsuhiko/followers", "following_url": "https://api.github.com/users/mitsuhiko/following{/other_user}", "gists_url": "https://api.github.com/users/mitsuhiko/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitsuhiko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitsuhiko/subscriptions", "organizations_url": "https://api.github.com/users/mitsuhiko/orgs", "repos_url": "https://api.github.com/users/mitsuhiko/repos", "events_url": "https://api.github.com/users/mitsuhiko/events{/privacy}", "received_events_url": "https://api.github.com/users/mitsuhiko/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2014-01-06T12:55:04Z", "updated_at": "2015-01-12T17:19:47Z", "closed_at": "2015-01-12T17:19:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently I find myself having to unreference items very often to when combining iterators.  eg: doing this\n\n``` rust\nlet x = bytes!(\"foo\");\nx.iter().map(|&x| x).something_here()\n```\n\nIn some cases you can use `.move_iter()` but that does not work unless you actually want to consume that container.\n\nI wonder if we should have a `.copy_iter()` and `.copy_rev_iter()` that makes copies instead.  This would especially be useful for working with `[u8]`s.  For strings we have `.chars()` which yield the integers directly.  When working on parsers it's not uncommon to do this via iterators at the moment.  However this works widely different for strings and `[u8]`s because of that.  A `.copy_iter()` would bring parity.\n", "closed_by": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/11340/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/11340/timeline", "performed_via_github_app": null, "state_reason": "completed"}