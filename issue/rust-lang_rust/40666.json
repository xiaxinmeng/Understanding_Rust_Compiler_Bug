{"url": "https://api.github.com/repos/rust-lang/rust/issues/40666", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/40666/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/40666/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/40666/events", "html_url": "https://github.com/rust-lang/rust/issues/40666", "id": 215363090, "node_id": "MDU6SXNzdWUyMTUzNjMwOTA=", "number": 40666, "title": "Matching on a struct variant enum", "user": {"login": "nicolaction", "id": 19745880, "node_id": "MDQ6VXNlcjE5NzQ1ODgw", "avatar_url": "https://avatars.githubusercontent.com/u/19745880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicolaction", "html_url": "https://github.com/nicolaction", "followers_url": "https://api.github.com/users/nicolaction/followers", "following_url": "https://api.github.com/users/nicolaction/following{/other_user}", "gists_url": "https://api.github.com/users/nicolaction/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicolaction/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicolaction/subscriptions", "organizations_url": "https://api.github.com/users/nicolaction/orgs", "repos_url": "https://api.github.com/users/nicolaction/repos", "events_url": "https://api.github.com/users/nicolaction/events{/privacy}", "received_events_url": "https://api.github.com/users/nicolaction/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-03-20T09:17:34Z", "updated_at": "2023-05-08T08:32:40Z", "closed_at": "2017-03-20T14:45:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have been playing with rust enums recently, but I found that I can't seem to make them work the way I expect.\r\n\r\nI defined struct variants for an enum:\r\n\r\n```rust\r\npub enum Entity {\r\n    Character {\r\n        money: f64,\r\n        ....\r\n    },\r\n    ...\r\n}\r\n```\r\n\r\nAnd I want to match on them. If I match on self, in the module, I get this:\r\n\r\n```rust\r\nmatch self {\r\n    Entity::Character(entity) => {\r\n        entity.money = ...\r\n```\r\n\r\nBut I get the following error message: \r\n\r\n> error[E0532]: expected tuple struct/variant, found struct variant `types::Entity::Character`\r\n\r\nWhat to do? Am I doing this wrong?\r\n\r\nPS: I know I can destructure the content of the enum, but I want to use it as if it was defined locally with the correct variant.", "closed_by": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/40666/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/40666/timeline", "performed_via_github_app": null, "state_reason": "completed"}