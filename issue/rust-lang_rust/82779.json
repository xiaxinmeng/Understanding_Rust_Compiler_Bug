{"url": "https://api.github.com/repos/rust-lang/rust/issues/82779", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/82779/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/82779/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/82779/events", "html_url": "https://github.com/rust-lang/rust/issues/82779", "id": 822535897, "node_id": "MDU6SXNzdWU4MjI1MzU4OTc=", "number": 82779, "title": "Type checker infinite recursion for trait (completeness issue)", "user": {"login": "Ekleog", "id": 411447, "node_id": "MDQ6VXNlcjQxMTQ0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/411447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ekleog", "html_url": "https://github.com/Ekleog", "followers_url": "https://api.github.com/users/Ekleog/followers", "following_url": "https://api.github.com/users/Ekleog/following{/other_user}", "gists_url": "https://api.github.com/users/Ekleog/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ekleog/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ekleog/subscriptions", "organizations_url": "https://api.github.com/users/Ekleog/orgs", "repos_url": "https://api.github.com/users/Ekleog/repos", "events_url": "https://api.github.com/users/Ekleog/events{/privacy}", "received_events_url": "https://api.github.com/users/Ekleog/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2021-03-04T21:48:14Z", "updated_at": "2023-04-21T18:42:39Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "Hi all,\r\n\r\nWith @vbarrielle, we're looking at an example of code that fails to compile due to, to the best of our understanding, the type checker infinite-looping.\r\n\r\nMinimal code is below:\r\n```rust\r\nuse std::ops::Add;\r\n\r\nstruct Mat<N> {\r\n    a: N,\r\n}\r\n\r\n// works if we comment this block /*\r\nimpl<'a, N: 'a> Add<&'a Mat<N>> for &'a Mat<N>\r\nwhere for<'r> &'r N: Add<&'r N, Output=N>,\r\n{\r\n    type Output = Mat<N>;\r\n    fn add(self, rhs: &'a Mat<N>) -> Mat<N> {\r\n        unimplemented!()\r\n    }\r\n}\r\n// */\r\n\r\nfn addition<'a, N: 'a>(lhs: &'a Mat<N>, rhs: &'a Mat<N>) -> Mat<N>\r\nwhere for<'r> &'r N: Add<&'r N, Output=N>,\r\n{\r\n    unimplemented!()\r\n}\r\n\r\n\r\nfn main() {\r\n    addition(&Mat { a: 2 }, &Mat{ a: 3 }); // also works if we comment this line\r\n}\r\n```\r\n[(playground)](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=a13ffd4aacd5e61f5c23b7d6c8bb1b9c)\r\n\r\nMy best guess is that the issue looks like this:\r\n- The type checker tries to verify that the bounds for `addition(&Mat<usize>, &Mat<usize>)` are verified (hence why it builds without the call)\r\n- For this, it must find a N such that `for<'r> &'r N: Add<&'r N, Output=N>`\r\n- Here would be the bug in this hypothesis: maybe for some reason it tries to resolve with `N = Mat<O>` where O would be another free variable\r\n- And then it would infinite-loop with the bound on the `Add` implementation, doing the same on each loop.\r\n\r\nThe weird thing is, replacing `addition` with `Add::add`, which as far as I could tell should require the exact same bounds, does work. Which makes me guess it's something that is implemented differently for traits and free functions, and traits work well but not when there is a free function like `addition` in the call stack. Maybe an heuristic that ends up primed towards addition of `Mat` by the `addition` function?\r\n\r\nDoes that make sense, or does anyone maybe have a better idea what this may be due to?\r\n\r\n(also, this seems to be related to the references, as removing them does solve the issue \u2014 however, removing the universal quantifiers does not appear to help)\r\n\r\nCheers, and as always thank you for all you do! :heart: ", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/82779/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/82779/timeline", "performed_via_github_app": null, "state_reason": null}