{"url": "https://api.github.com/repos/rust-lang/rust/issues/48645", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/48645/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/48645/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/48645/events", "html_url": "https://github.com/rust-lang/rust/issues/48645", "id": 301544473, "node_id": "MDU6SXNzdWUzMDE1NDQ0NzM=", "number": 48645, "title": "[NLL] borrowed-universal-test.rs output is not great", "user": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 60329014, "node_id": "MDU6TGFiZWw2MDMyOTAxNA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-low", "name": "P-low", "color": "eb6420", "default": false, "description": "Low priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 604489711, "node_id": "MDU6TGFiZWw2MDQ0ODk3MTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-NLL", "name": "A-NLL", "color": "f7e101", "default": false, "description": "Area: Non Lexical Lifetimes (NLL)"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-03-01T20:15:57Z", "updated_at": "2021-10-02T22:33:51Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "The output of this test ...\r\n\r\n```rust\r\n// compile-flags: -Znll-dump-cause\r\n\r\n#![feature(nll)]\r\n#![allow(warnings)]\r\n\r\nfn gimme(x: &(u32,)) -> &u32 {\r\n    &x.0\r\n}\r\n\r\nfn foo<'a>(x: &'a (u32,)) -> &'a u32 {\r\n    let v = 22;\r\n    gimme(&(v,))\r\n    //~^ ERROR borrowed value does not live long enough [E0597]\r\n}\r\n\r\nfn main() {}\r\n```\r\n\r\nis not great\r\n\r\n```\r\n[santiago@archlinux rust1 (borrowed_value_error)]$ rustc +stage1 src/test/ui/nll/borrowed-universal-error.rs -Znll-dump-cause\r\nerror[E0597]: borrowed value does not live long enough\r\n  --> src/test/ui/nll/borrowed-universal-error.rs:22:12\r\n   |\r\n22 |     gimme(&(v,))\r\n   |            ^^^^ temporary value does not live long enough\r\n23 |     //~^ ERROR borrowed value does not live long enough [E0597]\r\n24 | }\r\n   | - temporary value only lives until here\r\n   |\r\nnote: borrowed value must be valid for the lifetime 'a as defined on the function body at 20:1...\r\n  --> src/test/ui/nll/borrowed-universal-error.rs:20:1\r\n   |\r\n20 | fn foo<'a>(x: &'a (u32,)) -> &'a u32 {\r\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nerror: aborting due to previous error\r\n\r\nIf you want more information on this error, try using \"rustc --explain E0597\"\r\n```\r\n\r\ncc @nikomatsakis ", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/48645/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/48645/timeline", "performed_via_github_app": null, "state_reason": null}