{"url": "https://api.github.com/repos/rust-lang/rust/issues/88051", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/88051/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/88051/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/88051/events", "html_url": "https://github.com/rust-lang/rust/issues/88051", "id": 971171179, "node_id": "MDU6SXNzdWU5NzExNzExNzk=", "number": 88051, "title": "Semantically equal `Ordering` matches generate different assembly", "user": {"login": "r00ster91", "id": 35064754, "node_id": "MDQ6VXNlcjM1MDY0NzU0", "avatar_url": "https://avatars.githubusercontent.com/u/35064754?v=4", "gravatar_id": "", "url": "https://api.github.com/users/r00ster91", "html_url": "https://github.com/r00ster91", "followers_url": "https://api.github.com/users/r00ster91/followers", "following_url": "https://api.github.com/users/r00ster91/following{/other_user}", "gists_url": "https://api.github.com/users/r00ster91/gists{/gist_id}", "starred_url": "https://api.github.com/users/r00ster91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/r00ster91/subscriptions", "organizations_url": "https://api.github.com/users/r00ster91/orgs", "repos_url": "https://api.github.com/users/r00ster91/repos", "events_url": "https://api.github.com/users/r00ster91/events{/privacy}", "received_events_url": "https://api.github.com/users/r00ster91/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2021-08-15T16:18:15Z", "updated_at": "2023-04-29T08:14:18Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nhttps://rust.godbolt.org/z/orxr8sffq\r\n\r\nI tried this code:\r\n\r\n```rust\r\nuse std::cmp::Ordering;\r\n\r\npub fn a(x: i32, y: i32) -> i32 {\r\n    match x.cmp(&y) {\r\n        Ordering::Greater => 3,\r\n        Ordering::Equal => 2,\r\n        Ordering::Less => 1,\r\n    }\r\n}\r\n\r\npub fn b(x: i32, y: i32) -> i32 {\r\n    match x.cmp(&y) {\r\n        Ordering::Greater => 3,\r\n        Ordering::Equal => 2,\r\n        _ => 1,\r\n    }\r\n}\r\n```\r\n\r\nI expected to see this happen: They both run at the exact same speed and both emit the exact same assembly.\r\n\r\nInstead, this happened:\r\n```\r\nexample::a:\r\n        xor     ecx, ecx\r\n        cmp     edi, esi\r\n        sete    cl\r\n        xor     ecx, 3\r\n        cmp     edi, esi\r\n        mov     eax, 1\r\n        cmovge  eax, ecx\r\n        ret\r\n\r\nexample::b:\r\n        xor     eax, eax\r\n        cmp     edi, esi\r\n        setne   al\r\n        mov     rcx, -1\r\n        cmovge  rcx, rax\r\n        xor     eax, eax\r\n        cmp     rcx, 1\r\n        sete    al\r\n        lea     edx, [rax + rax]\r\n        add     edx, 1\r\n        test    rcx, rcx\r\n        mov     eax, 2\r\n        cmovne  eax, edx\r\n        ret\r\n```\r\n\r\nIt appears `b` has far more assembly generated for it which doesn't make sense because semantically `a` and `b` are the same.\r\n`b` is probably slower. Either way, it shouldn't generate this much instructions.\r\nI believe this doesn't just apply to `Ordering` but possibly to many more similar cases.\r\n\r\n@rustbot label: +I-slow\r\n\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"hkratz\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/88051/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/88051/timeline", "performed_via_github_app": null, "state_reason": null}