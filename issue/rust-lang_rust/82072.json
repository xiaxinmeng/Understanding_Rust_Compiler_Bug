{"url": "https://api.github.com/repos/rust-lang/rust/issues/82072", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/82072/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/82072/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/82072/events", "html_url": "https://github.com/rust-lang/rust/issues/82072", "id": 807833699, "node_id": "MDU6SXNzdWU4MDc4MzM2OTk=", "number": 82072, "title": "vshrq_n_u8 does not generate ushr instruction when used in loop", "user": {"login": "cberner", "id": 842688, "node_id": "MDQ6VXNlcjg0MjY4OA==", "avatar_url": "https://avatars.githubusercontent.com/u/842688?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cberner", "html_url": "https://github.com/cberner", "followers_url": "https://api.github.com/users/cberner/followers", "following_url": "https://api.github.com/users/cberner/following{/other_user}", "gists_url": "https://api.github.com/users/cberner/gists{/gist_id}", "starred_url": "https://api.github.com/users/cberner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cberner/subscriptions", "organizations_url": "https://api.github.com/users/cberner/orgs", "repos_url": "https://api.github.com/users/cberner/repos", "events_url": "https://api.github.com/users/cberner/events{/privacy}", "received_events_url": "https://api.github.com/users/cberner/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234956, "node_id": "MDU6TGFiZWwyMzQ5NTY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-codegen", "name": "A-codegen", "color": "f7e101", "default": false, "description": "Area: Code generation"}, {"id": 55301954, "node_id": "MDU6TGFiZWw1NTMwMTk1NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-Arm", "name": "O-Arm", "color": "6e6ec0", "default": false, "description": "Target: 32-bit Arm processors (armv6, armv7, thumb...), including 64-bit Arm in AArch32 state"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 631737389, "node_id": "MDU6TGFiZWw2MzE3MzczODk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-simd", "name": "A-simd", "color": "f7e101", "default": false, "description": "Area: SIMD (Single Instruction Multiple Data)"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-02-13T21:33:52Z", "updated_at": "2021-10-05T23:02:16Z", "closed_at": "2021-10-05T23:02:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "I tried this code:\r\n\r\n```rust\r\n#![feature(stdsimd)]\r\n#![feature(aarch64_target_feature)]\r\n\r\n\r\n#[target_feature(enable = \"neon\")]\r\npub unsafe fn fused_addassign_mul_scalar_neon(output_ptr: *mut u8, input_ptr: *const u8) {\r\n    use std::arch::aarch64::*;\r\n  \r\n    for i in 0..2 {\r\n        let input = vld1q_u8(input_ptr.add(i * 16));\r\n        let hi_bits = vshrq_n_u8(input, 4);\r\n        *(output_ptr as *mut uint8x16_t).add(i) = hi_bits;\r\n    }\r\n}\r\n```\r\n\r\nhttps://godbolt.org/z/5dzxf6\r\n\r\nI expected to see this happen: the `ushr` instruction used twice, since `vshrq_n_u8` is documented as generating the `ushr` instruction\r\n\r\nInstead, this happened: the `ushr` is used once, and then 16 single byte load and shift instructions are used\r\n\r\nIf the loop range is changed to `0..1` then a single `ushr` instruction is generated, so it seems to be an issue optimizing the second iteration of the loop correctly.\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.52.0-nightly (3f5aee2d5 2021-02-12)\r\nbinary: rustc\r\ncommit-hash: 3f5aee2d5241139d808f4fdece0026603489afd1\r\ncommit-date: 2021-02-12\r\nhost: aarch64-unknown-linux-gnu\r\nrelease: 1.52.0-nightly\r\nLLVM version: 11.0.1\r\n```\r\n", "closed_by": {"login": "workingjubilee", "id": 46493976, "node_id": "MDQ6VXNlcjQ2NDkzOTc2", "avatar_url": "https://avatars.githubusercontent.com/u/46493976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/workingjubilee", "html_url": "https://github.com/workingjubilee", "followers_url": "https://api.github.com/users/workingjubilee/followers", "following_url": "https://api.github.com/users/workingjubilee/following{/other_user}", "gists_url": "https://api.github.com/users/workingjubilee/gists{/gist_id}", "starred_url": "https://api.github.com/users/workingjubilee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/workingjubilee/subscriptions", "organizations_url": "https://api.github.com/users/workingjubilee/orgs", "repos_url": "https://api.github.com/users/workingjubilee/repos", "events_url": "https://api.github.com/users/workingjubilee/events{/privacy}", "received_events_url": "https://api.github.com/users/workingjubilee/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/82072/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/82072/timeline", "performed_via_github_app": null, "state_reason": "completed"}