{"url": "https://api.github.com/repos/rust-lang/rust/issues/40093", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/40093/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/40093/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/40093/events", "html_url": "https://github.com/rust-lang/rust/issues/40093", "id": 210242476, "node_id": "MDU6SXNzdWUyMTAyNDI0NzY=", "number": 40093, "title": "Binding associated type requires redundancy.", "user": {"login": "frankmcsherry", "id": 5741500, "node_id": "MDQ6VXNlcjU3NDE1MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/5741500?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frankmcsherry", "html_url": "https://github.com/frankmcsherry", "followers_url": "https://api.github.com/users/frankmcsherry/followers", "following_url": "https://api.github.com/users/frankmcsherry/following{/other_user}", "gists_url": "https://api.github.com/users/frankmcsherry/gists{/gist_id}", "starred_url": "https://api.github.com/users/frankmcsherry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frankmcsherry/subscriptions", "organizations_url": "https://api.github.com/users/frankmcsherry/orgs", "repos_url": "https://api.github.com/users/frankmcsherry/repos", "events_url": "https://api.github.com/users/frankmcsherry/events{/privacy}", "received_events_url": "https://api.github.com/users/frankmcsherry/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 149689562, "node_id": "MDU6TGFiZWwxNDk2ODk1NjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-associated-items", "name": "A-associated-items", "color": "f7e101", "default": false, "description": "Area: Associated items such as associated types and consts."}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-02-25T15:52:28Z", "updated_at": "2021-02-02T14:53:07Z", "closed_at": "2021-02-02T14:53:07Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I've been told this may be intended behavior, in which case treat this as a vote for \"I think it shouldn't be\". :)\r\n\r\nIf you have a trait with a constraint on an associated type, \r\n\r\n```rust\r\npub trait Test {\r\n    type Item;\r\n    type Bundle: From<Self::Item>;\r\n}\r\n```\r\n\r\nYou can use the trait without constraints, like so\r\n\r\n```rust\r\nfn works<T>()\r\n    where T: Test,\r\n{ }\r\n```\r\n\r\nbut if you instantiate any associated types it breaks.\r\n\r\n```rust\r\nfn fails<T>() \r\n    where T: Test<Item = String>\r\n{ } \r\n// error[E0277]: the trait bound `<T as Test>::Bundle: std::convert::From<std::string::String>` is not satisfied\r\n// ..\r\n//   = help: consider adding a `where <T as Test>::Bundle: std::convert::From<std::string::String>` bound\r\n```\r\n\r\nYou can solve the problem by copy/paste with the trait constraint.\r\n\r\n```rust\r\nfn works<T>()\r\n    where T: Test<Item = String>,\r\n          T::Bundle: From<T::Item>,\r\n{ }\r\n```\r\n\r\nI've been pointed at [28055](https://github.com/rust-lang/rust/issues/28055), related to super traits (same, maybe not?). I think the invoked argument is that \"too many inferred constraints leads to spooky action at a distance\", which I understand. \r\n\r\nAt the moment, I very much feel like the maintainability trade-off is in totally the wrong direction, though. If this associated type changes, or goes away, or has a new constraint, all existing code that may not care about the type breaks until you copy/paste in the (I feel) redundant requirements the trait already imposes.\r\n\r\nEdit: see also #34106.", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/40093/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/40093/timeline", "performed_via_github_app": null, "state_reason": "completed"}