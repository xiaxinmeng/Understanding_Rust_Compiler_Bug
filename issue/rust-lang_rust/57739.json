{"url": "https://api.github.com/repos/rust-lang/rust/issues/57739", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/57739/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/57739/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/57739/events", "html_url": "https://github.com/rust-lang/rust/issues/57739", "id": 400814882, "node_id": "MDU6SXNzdWU0MDA4MTQ4ODI=", "number": 57739, "title": "ICE when using associated constant as an array size when implementing trait for all types", "user": {"login": "liquidnya", "id": 7364785, "node_id": "MDQ6VXNlcjczNjQ3ODU=", "avatar_url": "https://avatars.githubusercontent.com/u/7364785?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liquidnya", "html_url": "https://github.com/liquidnya", "followers_url": "https://api.github.com/users/liquidnya/followers", "following_url": "https://api.github.com/users/liquidnya/following{/other_user}", "gists_url": "https://api.github.com/users/liquidnya/gists{/gist_id}", "starred_url": "https://api.github.com/users/liquidnya/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liquidnya/subscriptions", "organizations_url": "https://api.github.com/users/liquidnya/orgs", "repos_url": "https://api.github.com/users/liquidnya/repos", "events_url": "https://api.github.com/users/liquidnya/events{/privacy}", "received_events_url": "https://api.github.com/users/liquidnya/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 149689562, "node_id": "MDU6TGFiZWwxNDk2ODk1NjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-associated-items", "name": "A-associated-items", "color": "f7e101", "default": false, "description": "Area: Associated items such as associated types and consts."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1405345617, "node_id": "MDU6TGFiZWwxNDA1MzQ1NjE3", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lazy-normalization", "name": "A-lazy-normalization", "color": "f7e101", "default": false, "description": "Area: lazy normalization (tracking issue: #60471)"}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-01-18T17:14:41Z", "updated_at": "2020-12-30T12:04:57Z", "closed_at": "2020-12-30T12:04:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "The following code results in an internal compiler error: \r\n```rust\r\n\r\ntrait ArraySizeTrait {\r\n     const SIZE: usize = 0;\r\n}\r\n\r\n// remove this impl to get error E0599 instead of ICE\r\nimpl<T : ?Sized> ArraySizeTrait for T {\r\n    const SIZE: usize = 1;\r\n}\r\n\r\nstruct SomeArray<T: ArraySizeTrait> {\r\n    array: [u8; T::SIZE],\r\n    phantom: std::marker::PhantomData<T>,\r\n}\r\n\r\nfn main() {\r\n\r\n}\r\n\r\n```\r\n([Playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=c7b965d6a4439b9471441771aa72242d))\r\n\r\nI expected to see something like error E0599, since removing `impl<T : ?Sized> ArraySizeTrait for T` makes this code quite similar to issue #26402 and causes error E0599.\r\nI tested it with rustc versions 1.32.0 and 1.33.0-nightly.\r\n\r\n## Meta\r\nOutput of the linked playground including backtrace:\r\n```\r\n Compiling playground v0.0.1 (/playground)\r\nerror: internal compiler error: src/librustc/ty/subst.rs:480: Type parameter `T/#0` (T/0) out of range when substituting (root type=Some(T)) substs=[]\r\n\r\nthread 'rustc' panicked at 'Box<Any>', src/librustc_errors/lib.rs:526:9\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\nstack backtrace:\r\n   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace\r\n             at src/libstd/sys/unix/backtrace/tracing/gcc_s.rs:39\r\n   1: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:70\r\n   2: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/sys_common/backtrace.rs:58\r\n             at src/libstd/panicking.rs:200\r\n   3: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:215\r\n   4: rustc::util::common::panic_hook\r\n   5: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:482\r\n   6: std::panicking::begin_panic\r\n   7: rustc_errors::Handler::span_bug\r\n   8: rustc::util::bug::opt_span_bug_fmt::{{closure}}\r\n   9: rustc::ty::context::tls::with_opt::{{closure}}\r\n  10: rustc::ty::context::tls::with_context_opt\r\n  11: rustc::ty::context::tls::with_opt\r\n  12: rustc::util::bug::opt_span_bug_fmt\r\n  13: rustc::util::bug::span_bug_fmt\r\n  14: <rustc::ty::subst::SubstFolder<'a, 'gcx, 'tcx> as rustc::ty::fold::TypeFolder<'gcx, 'tcx>>::fold_ty\r\n  15: <smallvec::SmallVec<A> as core::iter::traits::FromIterator<<A as smallvec::Array>::Item>>::from_iter\r\n  16: rustc::ty::fold::TypeFoldable::fold_with\r\n  17: rustc::traits::codegen::<impl rustc::ty::context::TyCtxt<'a, 'tcx, 'tcx>>::subst_and_normalize_erasing_regions\r\n  18: <rustc_mir::interpret::eval_context::EvalContext<'a, 'mir, 'tcx, M>>::resolve\r\n  19: rustc_mir::interpret::operand::<impl rustc_mir::interpret::eval_context::EvalContext<'a, 'mir, 'tcx, M>>::const_value_to_op\r\n  20: rustc_mir::interpret::step::<impl rustc_mir::interpret::eval_context::EvalContext<'a, 'mir, 'tcx, M>>::run\r\n  21: rustc_mir::const_eval::eval_body_using_ecx\r\n  22: rustc_mir::const_eval::const_eval_raw_provider\r\n  23: rustc::ty::query::__query_compute::const_eval_raw\r\n  24: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors<'tcx> for rustc::ty::query::queries::const_eval_raw<'tcx>>::compute\r\n  25: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  26: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::try_get_with\r\n  27: rustc_mir::const_eval::const_eval_provider\r\n  28: rustc::ty::query::__query_compute::const_eval\r\n  29: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors<'tcx> for rustc::ty::query::queries::const_eval<'tcx>>::compute\r\n  30: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  31: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::try_get_with\r\n  32: <rustc::traits::project::AssociatedTypeNormalizer<'a, 'b, 'gcx, 'tcx> as rustc::ty::fold::TypeFolder<'gcx, 'tcx>>::fold_const\r\n  33: rustc::ty::structural_impls::<impl rustc::ty::fold::TypeFoldable<'tcx> for &'tcx rustc::ty::TyS<'tcx>>::super_fold_with\r\n  34: <rustc::traits::project::AssociatedTypeNormalizer<'a, 'b, 'gcx, 'tcx> as rustc::ty::fold::TypeFolder<'gcx, 'tcx>>::fold_ty\r\n  35: rustc::traits::project::normalize\r\n  36: rustc::infer::InferCtxt::partially_normalize_associated_types_in\r\n  37: <core::iter::Map<I, F> as core::iter::iterator::Iterator>::fold\r\n  38: rustc::ty::context::GlobalCtxt::enter_local\r\n  39: rustc_typeck::check::wfcheck::check_item_well_formed\r\n  40: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors<'tcx> for rustc::ty::query::queries::check_item_well_formed<'tcx>>::compute\r\n  41: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  42: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::try_get_with\r\n  43: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::ensure_query\r\n  44: rustc::session::Session::track_errors\r\n  45: rustc::util::common::time\r\n  46: rustc_typeck::check_crate\r\n  47: <std::thread::local::LocalKey<T>>::with\r\n  48: rustc::ty::context::TyCtxt::create_and_enter\r\n  49: rustc_driver::driver::compile_input\r\n  50: rustc_driver::run_compiler_with_pool\r\n  51: <scoped_tls::ScopedKey<T>>::set\r\n  52: rustc_driver::run_compiler\r\n  53: <scoped_tls::ScopedKey<T>>::set\r\nquery stack during panic:\r\n#0 [const_eval_raw] const-evaluating `SomeArray::array::{{constant}}`\r\n#1 [const_eval] const-evaluating + checking `SomeArray::array::{{constant}}`\r\n#2 [check_item_well_formed] processing `SomeArray`\r\nend of query stack\r\nerror: aborting due to previous error\r\n\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.33.0-nightly (daa53a52a 2019-01-17) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C codegen-units=1 -C debuginfo=2 --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nerror: Could not compile `playground`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n\r\n", "closed_by": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/57739/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/57739/timeline", "performed_via_github_app": null, "state_reason": "completed"}