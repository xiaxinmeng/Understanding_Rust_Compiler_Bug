{"url": "https://api.github.com/repos/rust-lang/rust/issues/5599", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/5599/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/5599/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/5599/events", "html_url": "https://github.com/rust-lang/rust/issues/5599", "id": 12548304, "node_id": "MDU6SXNzdWUxMjU0ODMwNA==", "number": 5599, "title": "add a trait for external iterator objects", "user": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-03-28T04:30:35Z", "updated_at": "2014-06-16T21:56:42Z", "closed_at": "2013-04-13T23:27:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There's currently an example of this in the `treemap` module, since it's required to set methods like `intersection` in-order. An external iterator is basically a state machine, so they're somewhat painful to write by hand but it's _possible_ to generate them automatically, and that could be tackled at some point (probably post-1.0).\n\nThe only method the trait will require is `fn next(&mut self) -> Option<T>`. A default implementation a wrapper (see `{map, set}_advance` in `treemap.rs`) for integrating with `for` loops can be provided.\n\nUnlike internal iteration that works with a closure, external iterators can be interleaved and keep their state when you break out of a loop. All iterators (forward, reverse, range within a container, counter, etc.) can implement the same interface, which means a generic library like Python's itertools can be written around them.\n\nBlocking on #5598 for now, because this should be done with methods.\n", "closed_by": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/5599/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/5599/timeline", "performed_via_github_app": null, "state_reason": "completed"}