{"url": "https://api.github.com/repos/rust-lang/rust/issues/8079", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/8079/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/8079/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/8079/events", "html_url": "https://github.com/rust-lang/rust/issues/8079", "id": 17297397, "node_id": "MDU6SXNzdWUxNzI5NzM5Nw==", "number": 8079, "title": "Method dispatch doesn't look up in inherited traits", "user": {"login": "farnoy", "id": 345808, "node_id": "MDQ6VXNlcjM0NTgwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/345808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/farnoy", "html_url": "https://github.com/farnoy", "followers_url": "https://api.github.com/users/farnoy/followers", "following_url": "https://api.github.com/users/farnoy/following{/other_user}", "gists_url": "https://api.github.com/users/farnoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/farnoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/farnoy/subscriptions", "organizations_url": "https://api.github.com/users/farnoy/orgs", "repos_url": "https://api.github.com/users/farnoy/repos", "events_url": "https://api.github.com/users/farnoy/events{/privacy}", "received_events_url": "https://api.github.com/users/farnoy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-07-27T12:14:01Z", "updated_at": "2013-07-27T12:16:40Z", "closed_at": "2013-07-27T12:16:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Method dispatch does not search in traits that a compound trait inherits. Example below, on 0.8-pre @c5194740a78ec113cb6cbc937e7263e2548f62f6. Generics work though on compound traits.\n\n``` rust\nstruct A;\n\npub trait Method1Able {\n    pub fn method1(&self);\n}\n\npub trait Test : Method1Able {}\n\nimpl Method1Able for A {\n    pub fn method1(&self) {()}\n}\n\nimpl Test for A {}\n\nfn generic<T: Test>(a: &T) {\n  a.method1(); // works\n}\n\nfn main() {\n    let mut a = A;\n    generic(&a);\n    {\n        let mut b = &a as &Test;\n        b.method1();\n        // error: type `&Test<no-bounds>` does not\n        // implement any method in scope named `method1`\n    }\n}\n```\n", "closed_by": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/8079/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/8079/timeline", "performed_via_github_app": null, "state_reason": "completed"}