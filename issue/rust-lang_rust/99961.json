{"url": "https://api.github.com/repos/rust-lang/rust/issues/99961", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/99961/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/99961/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/99961/events", "html_url": "https://github.com/rust-lang/rust/issues/99961", "id": 1323254329, "node_id": "I_kwDOAAsO6M5O30I5", "number": 99961, "title": "rustc 1.48.0+ generates branchier and less compact code for integer division w/ boundary checks", "user": {"login": "mqudsi", "id": 606923, "node_id": "MDQ6VXNlcjYwNjkyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/606923?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mqudsi", "html_url": "https://github.com/mqudsi", "followers_url": "https://api.github.com/users/mqudsi/followers", "following_url": "https://api.github.com/users/mqudsi/following{/other_user}", "gists_url": "https://api.github.com/users/mqudsi/gists{/gist_id}", "starred_url": "https://api.github.com/users/mqudsi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mqudsi/subscriptions", "organizations_url": "https://api.github.com/users/mqudsi/orgs", "repos_url": "https://api.github.com/users/mqudsi/repos", "events_url": "https://api.github.com/users/mqudsi/events{/privacy}", "received_events_url": "https://api.github.com/users/mqudsi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 234956, "node_id": "MDU6TGFiZWwyMzQ5NTY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-codegen", "name": "A-codegen", "color": "f7e101", "default": false, "description": "Area: Code generation"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 262252840, "node_id": "MDU6TGFiZWwyNjIyNTI4NDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-stable", "name": "regression-from-stable-to-stable", "color": "e4008a", "default": false, "description": "Performance or correctness regression from one stable version to another."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-07-30T18:16:56Z", "updated_at": "2022-08-02T05:00:33Z", "closed_at": "2022-07-30T20:35:15Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The following code, which correctly bypasses overflow and divide by zero conditions, generates branchier and less optimal machine code (under x86_64) when compiled under rustc 1.48.0+ as compared to rustc 1.46.0 and below:\r\n\r\n```rust\r\npub fn checked_div_i64(dividend: i64, divisor: i64) -> Option<i64> {\r\n    if dividend > i64::min_value() && divisor != 0 {\r\n            Some(dividend / divisor)\r\n    } else {\r\n        None\r\n    }\r\n}\r\n```\r\n\r\n[Godbolt comparison link](https://godbolt.org/z/bbYzb8no8)\r\n\r\nThe assembly generated in 1.46.0:\r\n\r\n```asm\r\nexample::checked_div_i64:\r\n        xor     eax, eax\r\n        movabs  rcx, -9223372036854775808\r\n        cmp     rdi, rcx\r\n        je      .LBB0_3\r\n        test    rsi, rsi\r\n        je      .LBB0_3\r\n        mov     rax, rdi\r\n        cqo\r\n        idiv    rsi\r\n        mov     rdx, rax\r\n        mov     eax, 1\r\n.LBB0_3:\r\n        ret\r\n```\r\n\r\nvs in 1.48.0:\r\n\r\n```asm\r\nexample::checked_div_i64:\r\n  xor eax, eax\r\n  movabs rcx, -9223372036854775808\r\n  cmp rdi, rcx\r\n  je .LBB0_6\r\n  test rsi, rsi\r\n  je .LBB0_6\r\n  mov rax, rdi\r\n  or rax, rsi\r\n  shr rax, 32\r\n  je .LBB0_3\r\n  mov rax, rdi\r\n  cqo\r\n  idiv rsi\r\n  mov rdx, rax\r\n  jmp .LBB0_5\r\n.LBB0_3:\r\n  mov eax, edi\r\n  xor edx, edx\r\n  div esi\r\n  mov edx, eax\r\n.LBB0_5:\r\n  mov eax, 1\r\n.LBB0_6:\r\n  ret\r\n```\r\n\r\nThe astute will observe that rustc 1.47.0 was skipped in the good/bad demarcation above. That's because rustc 1.47.0 introduced an incorrect checked division w/ panic (which is [now happening again](https://github.com/rust-lang/rust/issues/99960)). My gut feeling is that whatever fixed 1.47's dismal codegen resulted in a still-suboptimal solution as compared to what we had before.\r\n\r\nThe problem still persists in the latest nightlies, but is obscured by #99960.\r\n\r\n@rustbot label +regression-from-stable-to-stable +A-codegen +A-llvm +T-compiler", "closed_by": {"login": "workingjubilee", "id": 46493976, "node_id": "MDQ6VXNlcjQ2NDkzOTc2", "avatar_url": "https://avatars.githubusercontent.com/u/46493976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/workingjubilee", "html_url": "https://github.com/workingjubilee", "followers_url": "https://api.github.com/users/workingjubilee/followers", "following_url": "https://api.github.com/users/workingjubilee/following{/other_user}", "gists_url": "https://api.github.com/users/workingjubilee/gists{/gist_id}", "starred_url": "https://api.github.com/users/workingjubilee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/workingjubilee/subscriptions", "organizations_url": "https://api.github.com/users/workingjubilee/orgs", "repos_url": "https://api.github.com/users/workingjubilee/repos", "events_url": "https://api.github.com/users/workingjubilee/events{/privacy}", "received_events_url": "https://api.github.com/users/workingjubilee/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/99961/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/99961/timeline", "performed_via_github_app": null, "state_reason": "not_planned"}