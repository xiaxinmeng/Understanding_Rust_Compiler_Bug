{"url": "https://api.github.com/repos/rust-lang/rust/issues/31505", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/31505/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/31505/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/31505/events", "html_url": "https://github.com/rust-lang/rust/issues/31505", "id": 132331327, "node_id": "MDU6SXNzdWUxMzIzMzEzMjc=", "number": 31505, "title": "rlibc's memcpy get miscompiled", "user": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-02-09T04:52:36Z", "updated_at": "2016-02-21T07:55:55Z", "closed_at": "2016-02-21T07:55:55Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "rlibc's memcpy get miscompiled with `-O --target=x86_64-sun-solaris -C target-feature=-mmx,-sse,-sse2`\nAt 0x18 `lea     esi, [rsi+0]` zeroes the upper 32-bits of `rsi` which is a 64-bit pointer.\n\nCuriously some targets has the loop unrolled. I don't see any reason for this.\n\nAssembler output of various targets:\n\nx86_64-rumprun-netbsd:\nx86_64-sun-solaris:\n\n```\n.text.memcpy:0000000000000010 memcpy          proc near\n.text.memcpy:0000000000000010                 test    rdx, rdx\n.text.memcpy:0000000000000013                 jz      short loc_2F\n.text.memcpy:0000000000000015                 mov     rax, rdi\n.text.memcpy:0000000000000018                 lea     esi, [rsi+0]\n.text.memcpy:000000000000001F                 nop\n.text.memcpy:0000000000000020\n.text.memcpy:0000000000000020 loc_20:                                 ; CODE XREF: memcpy+1D\u0019j\n.text.memcpy:0000000000000020                 mov     cl, [rsi]\n.text.memcpy:0000000000000022                 mov     [rax], cl\n.text.memcpy:0000000000000024                 inc     rax\n.text.memcpy:0000000000000027                 inc     rsi\n.text.memcpy:000000000000002A                 dec     rdx\n.text.memcpy:000000000000002D                 jnz     short loc_20\n.text.memcpy:000000000000002F\n.text.memcpy:000000000000002F loc_2F:                                 ; CODE XREF: memcpy+3\u0018j\n.text.memcpy:000000000000002F                 mov     rax, rdi\n.text.memcpy:0000000000000032                 retn\n.text.memcpy:0000000000000032 memcpy          endp\n```\n\nx86_64-unknown-linux-gnu:\nx86_64-unknown-linux-musl:\nx86_64-unknown-freebsd:\n\n```\n.text.memcpy:0000000000000010                 public memcpy\n.text.memcpy:0000000000000010 memcpy          proc near\n.text.memcpy:0000000000000010                 test    rdx, rdx\n.text.memcpy:0000000000000013                 jz      loc_A4\n.text.memcpy:0000000000000019                 lea     r8, [rdx-1]\n.text.memcpy:000000000000001D                 xor     ecx, ecx\n.text.memcpy:000000000000001F                 test    dl, 7\n.text.memcpy:0000000000000022                 jz      short loc_3E\n.text.memcpy:0000000000000024                 mov     r9d, edx\n.text.memcpy:0000000000000027                 and     r9d, 7\n.text.memcpy:000000000000002B                 xor     ecx, ecx\n.text.memcpy:000000000000002D                 nop     dword ptr [rax]\n.text.memcpy:0000000000000030\n.text.memcpy:0000000000000030 loc_30:                                 ; CODE XREF: memcpy+2C\u0019j\n.text.memcpy:0000000000000030                 mov     al, [rsi+rcx]\n.text.memcpy:0000000000000033                 mov     [rdi+rcx], al\n.text.memcpy:0000000000000036                 inc     rcx\n.text.memcpy:0000000000000039                 cmp     r9, rcx\n.text.memcpy:000000000000003C                 jnz     short loc_30\n.text.memcpy:000000000000003E\n.text.memcpy:000000000000003E loc_3E:                                 ; CODE XREF: memcpy+12\u0018j\n.text.memcpy:000000000000003E                 cmp     r8, 7\n.text.memcpy:0000000000000042                 jb      short loc_A4\n.text.memcpy:0000000000000044                 sub     rdx, rcx\n.text.memcpy:0000000000000047                 lea     r8, [rdi+rcx+7]\n.text.memcpy:000000000000004C                 lea     rcx, [rsi+rcx+7]\n.text.memcpy:0000000000000051                 db      66h, 66h, 66h, 66h, 66h, 66h, 2Eh\n.text.memcpy:0000000000000051                 nop     dword ptr [rax+rax+00000000h]\n.text.memcpy:0000000000000060\n.text.memcpy:0000000000000060 loc_60:                                 ; CODE XREF: memcpy+92\u0019j\n.text.memcpy:0000000000000060                 mov     al, [rcx-7]\n.text.memcpy:0000000000000063                 mov     [r8-7], al\n.text.memcpy:0000000000000067                 mov     al, [rcx-6]\n.text.memcpy:000000000000006A                 mov     [r8-6], al\n.text.memcpy:000000000000006E                 mov     al, [rcx-5]\n.text.memcpy:0000000000000071                 mov     [r8-5], al\n.text.memcpy:0000000000000075                 mov     al, [rcx-4]\n.text.memcpy:0000000000000078                 mov     [r8-4], al\n.text.memcpy:000000000000007C                 mov     al, [rcx-3]\n.text.memcpy:000000000000007F                 mov     [r8-3], al\n.text.memcpy:0000000000000083                 mov     al, [rcx-2]\n.text.memcpy:0000000000000086                 mov     [r8-2], al\n.text.memcpy:000000000000008A                 mov     al, [rcx-1]\n.text.memcpy:000000000000008D                 mov     [r8-1], al\n.text.memcpy:0000000000000091                 mov     al, [rcx]\n.text.memcpy:0000000000000093                 mov     [r8], al\n.text.memcpy:0000000000000096                 add     r8, 8\n.text.memcpy:000000000000009A                 add     rcx, 8\n.text.memcpy:000000000000009E                 add     rdx, 0FFFFFFFFFFFFFFF8h\n.text.memcpy:00000000000000A2                 jnz     short loc_60\n.text.memcpy:00000000000000A4\n.text.memcpy:00000000000000A4 loc_A4:                                 ; CODE XREF: memcpy+3\u0018j\n.text.memcpy:00000000000000A4                                         ; memcpy+32\u0018j\n.text.memcpy:00000000000000A4                 mov     rax, rdi\n.text.memcpy:00000000000000A7                 retn\n.text.memcpy:00000000000000A7 memcpy          endp\n.text.memcpy:00000000000000A7\n.text.memcpy:00000000000000A7 _text_memcpy    ends\n.text.memcpy\n```\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/31505/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/31505/timeline", "performed_via_github_app": null, "state_reason": "completed"}