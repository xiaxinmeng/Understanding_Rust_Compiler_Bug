{"url": "https://api.github.com/repos/rust-lang/rust/issues/42868", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/42868/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/42868/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/42868/events", "html_url": "https://github.com/rust-lang/rust/issues/42868", "id": 238264229, "node_id": "MDU6SXNzdWUyMzgyNjQyMjk=", "number": 42868, "title": "Tracking issue for `late_bound_lifetime_arguments` compatibility lint", "user": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 630636017, "node_id": "MDU6TGFiZWw2MzA2MzYwMTc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-future-compatibility", "name": "C-future-compatibility", "color": "f5f1fd", "default": false, "description": "Category: future compatibility lints"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 20, "created_at": "2017-06-23T22:04:44Z", "updated_at": "2023-04-21T13:37:44Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "#### What is this lint about\r\n\r\nIn functions not all lifetime parameters are created equal.\r\nFor example, if you have a function like\r\n```rust\r\nfn f<'a, 'b>(arg: &'a u8) -> &'b u8 { .... }\r\n```\r\nboth `'a` and `'b` are listed in the same parameter list, but when stripped from the surface syntax the function looks more like\r\n```rust\r\nfor<'a> fn f<'b>(arg: &'a u8) -> &'b u8 { .... }\r\n```\r\nwhere `'b` is a \"true\" (\"early-bound\") parameter of the function, and `'a` is an \"existential\" (\"late-bound\") parameter. This means the function is not parameterized by `'a`.\r\nTo give some more intuition, let's write a type for function pointer to `f`:\r\n```rust\r\n// PtrF is not parameterized by 'a,\r\ntype PtrF<'b> = for<'a> fn(&'a u8) -> &'b u8;\r\n// but it has to be parameterized by 'b\r\ntype PtrF = for<'a, 'b> fn(&'a u8) -> &'b u8; // ERROR\r\n```\r\nSee more about this distinction in http://smallcultfollowing.com/babysteps/blog/2013/10/29/intermingled-parameter-lists/#early--vs-late-bound-lifetimes\r\n\r\nWhen lifetime arguments are provided to a function explicitly, e.g.\r\n```\r\nf::<'my_a, 'my_b>\r\n```\r\nthe first argument doesn't make much sense because the function is not parameterized by `'a`.\r\nProviding arguments for \"late-bound\" lifetime parameters in general doesn't make sense, while arguments for \"early-bound\" lifetime parameters can be provided.\r\n\r\nIt's not clear how to provide arguments for early-bound lifetime parameters if they are intermixed with late-bound parameters in the same list. For now providing any explicit arguments is prohibited if late-bound parameters are present, so in the future we can adopt any solution without hitting backward compatibility issues.\r\n\r\nNote that late-bound lifetime parameters can be introduced implicitly through lifetime elision:\r\n```rust\r\nfn f(&u8) {}\r\n// Desugars into\r\nfn f<'a>(&'a u8) {} // 'a is late-bound\r\n```\r\n\r\nThe precise rules discerning between early- and late-bound lifetimes can be found here: https://github.com/rust-lang/rust/blob/91aff5775d3b4a95e2b0c2fe50785f3d28fa3dd8/src/librustc/middle/resolve_lifetime.rs#L1541-L1700\r\n\r\n#### How to fix this warning/error\r\n\r\nJust removing the lifetime arguments pointed to by the lint should be enough in most cases.\r\n\r\n#### Current status\r\n- [x] https://github.com/rust-lang/rust/pull/42492 introduces the `late_bound_lifetime_arguments` lint as warn-by-default\r\n- [ ] PR ? makes the `late_bound_lifetime_arguments` lint deny-by-default\r\n- [ ] PR ? makes the `late_bound_lifetime_arguments` lint a hard error", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/42868/reactions", "total_count": 3, "+1": 3, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/42868/timeline", "performed_via_github_app": null, "state_reason": null}