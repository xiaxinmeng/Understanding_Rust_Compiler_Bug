{"url": "https://api.github.com/repos/rust-lang/rust/issues/49111", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/49111/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/49111/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/49111/events", "html_url": "https://github.com/rust-lang/rust/issues/49111", "id": 306157720, "node_id": "MDU6SXNzdWUzMDYxNTc3MjA=", "number": 49111, "title": "internal compiler error: librustc/ich/impls_ty.rs:906: ty::TypeVariants::hash_stable() - Unexpected variant TyInfer(?2).", "user": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-03-17T13:46:19Z", "updated_at": "2018-03-17T14:49:11Z", "closed_at": "2018-03-17T14:49:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\r\ncargo build\r\n   Compiling miri v0.1.0 (file:///Users/bjorn/Documents/miri)\r\nerror: expected one of `.`, `;`, `?`, `}`, or an operator, found `,`\r\n   --> miri/fn_call.rs:388:92\r\n    |\r\n388 |                                 Value::ByRef(MemoryPointer::new(ptr, 0).into(), name_align),\r\n    |                                                                                            ^ expected one of `.`, `;`, `?`, `}`, or an operator here\r\n\r\nerror[E0425]: cannot find value `m` in this scope\r\n   --> miri/lib.rs:260:15\r\n    |\r\n260 |         match m {\r\n    |               ^ did you mean `C`?\r\n\r\nwarning: unused import: `rustc::traits`\r\n  --> miri/lib.rs:25:5\r\n   |\r\n25 | use rustc::traits;\r\n   |     ^^^^^^^^^^^^^\r\n   |\r\n   = note: #[warn(unused_imports)] on by default\r\n\r\nwarning: unused import: `rustc::traits::Reveal`\r\n --> miri/intrinsic.rs:2:5\r\n  |\r\n2 | use rustc::traits::Reveal;\r\n  |     ^^^^^^^^^^^^^^^^^^^^^\r\n\r\nerror[E0308]: mismatched types\r\n   --> miri/lib.rs:263:21\r\n    |\r\n263 |             _ => Ok(()),\r\n    |                     ^^ expected bool, found ()\r\n    |\r\n    = note: expected type `bool`\r\n               found type `()`\r\n\r\nerror[E0308]: mismatched types\r\n   --> miri/lib.rs:270:36\r\n    |\r\n270 |       ) -> EvalResult<'tcx, AllocId> {\r\n    |  ____________________________________^\r\n271 | |\r\n272 | |     }\r\n    | |_____^ expected enum `std::result::Result`, found ()\r\n    |\r\n    = note: expected type `std::result::Result<rustc::mir::interpret::AllocId, rustc::mir::interpret::EvalError<'tcx>>`\r\n               found type `()`\r\n\r\nerror[E0308]: mismatched types\r\n   --> miri/lib.rs:341:13\r\n    |\r\n341 | /             GlobalId {\r\n342 | |                 instance,\r\n343 | |                 promoted: None,\r\n344 | |             },\r\n    | |_____________^ expected struct `rustc::hir::def_id::DefId`, found struct `rustc::mir::interpret::GlobalId`\r\n    |\r\n    = note: expected type `rustc::hir::def_id::DefId`\r\n               found type `rustc::mir::interpret::GlobalId<'_>`\r\n\r\nerror: internal compiler error: librustc/ich/impls_ty.rs:906: ty::TypeVariants::hash_stable() - Unexpected variant TyInfer(?2).\r\n\r\nthread 'rustc' panicked at 'Box<Any>', librustc_errors/lib.rs:540:9\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\nstack backtrace:\r\n   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace\r\n   1: std::sys_common::backtrace::print\r\n   2: std::panicking::default_hook::{{closure}}\r\n   3: std::panicking::default_hook\r\n   4: core::ops::function::Fn::call\r\n   5: std::panicking::rust_panic_with_hook\r\n   6: std::panicking::begin_panic\r\n   7: rustc_errors::Handler::bug\r\n   8: rustc::session::opt_span_bug_fmt::{{closure}}\r\n   9: rustc::ty::context::tls::with_opt::{{closure}}\r\n  10: <std::thread::local::LocalKey<T>>::try_with\r\n  11: <std::thread::local::LocalKey<T>>::with\r\n  12: rustc::ty::context::tls::with\r\n  13: rustc::ty::context::tls::with_opt\r\n  14: rustc::session::opt_span_bug_fmt\r\n  15: rustc::session::bug_fmt\r\n  16: rustc::ich::impls_ty::<impl rustc_data_structures::stable_hasher::HashStable<rustc::ich::hcx::StableHashingContext<'a>> for rustc::ty::sty::TypeVariants<'gcx>>::hash_stable\r\n  17: rustc::ich::impls_ty::<impl rustc_data_structures::stable_hasher::HashStable<rustc::ich::hcx::StableHashingContext<'a>> for &'gcx rustc::ty::Slice<T>>::hash_stable\r\n  18: rustc::ich::impls_ty::<impl rustc_data_structures::stable_hasher::HashStable<rustc::ich::hcx::StableHashingContext<'a>> for rustc::ty::sty::TypeVariants<'gcx>>::hash_stable\r\n  19: <T as rustc::dep_graph::dep_node::DepNodeParams<'a, 'gcx, 'tcx>>::to_fingerprint\r\n  20: rustc::dep_graph::dep_node::DepNode::new\r\n  21: rustc::ty::maps::<impl rustc::ty::maps::queries::dropck_outlives<'tcx>>::try_get\r\n  22: rustc::ty::maps::TyCtxtAt::dropck_outlives\r\n  23: rustc::traits::query::dropck_outlives::<impl rustc::infer::at::At<'cx, 'gcx, 'tcx>>::dropck_outlives\r\n  24: rustc_typeck::check::dropck::check_safety_of_destructor_if_necessary\r\n  25: rustc_typeck::check::regionck::RegionCtxt::check_safety_of_rvalue_destructor_if_necessary\r\n  26: <rustc_typeck::check::regionck::RegionCtxt<'a, 'gcx, 'tcx> as rustc::hir::intravisit::Visitor<'gcx>>::visit_expr\r\n  27: rustc::hir::intravisit::walk_expr\r\n  28: <rustc_typeck::check::regionck::RegionCtxt<'a, 'gcx, 'tcx> as rustc::hir::intravisit::Visitor<'gcx>>::visit_expr\r\n  29: <rustc_typeck::check::regionck::RegionCtxt<'a, 'gcx, 'tcx> as rustc::hir::intravisit::Visitor<'gcx>>::visit_expr\r\n  30: <rustc_typeck::check::regionck::RegionCtxt<'a, 'gcx, 'tcx> as rustc::hir::intravisit::Visitor<'gcx>>::visit_expr\r\n  31: <rustc_typeck::check::regionck::RegionCtxt<'a, 'gcx, 'tcx> as rustc::hir::intravisit::Visitor<'gcx>>::visit_arm\r\n  32: rustc::hir::intravisit::walk_expr\r\n  33: <rustc_typeck::check::regionck::RegionCtxt<'a, 'gcx, 'tcx> as rustc::hir::intravisit::Visitor<'gcx>>::visit_expr\r\n  34: <rustc_typeck::check::regionck::RegionCtxt<'a, 'gcx, 'tcx> as rustc::hir::intravisit::Visitor<'gcx>>::visit_local\r\n  35: rustc::hir::intravisit::walk_expr\r\n  36: <rustc_typeck::check::regionck::RegionCtxt<'a, 'gcx, 'tcx> as rustc::hir::intravisit::Visitor<'gcx>>::visit_expr\r\n  37: <rustc_typeck::check::regionck::RegionCtxt<'a, 'gcx, 'tcx> as rustc::hir::intravisit::Visitor<'gcx>>::visit_arm\r\n  38: rustc::hir::intravisit::walk_expr\r\n  39: <rustc_typeck::check::regionck::RegionCtxt<'a, 'gcx, 'tcx> as rustc::hir::intravisit::Visitor<'gcx>>::visit_expr\r\n  40: <rustc_typeck::check::regionck::RegionCtxt<'a, 'gcx, 'tcx> as rustc::hir::intravisit::Visitor<'gcx>>::visit_expr\r\n  41: rustc::hir::intravisit::walk_expr\r\n  42: <rustc_typeck::check::regionck::RegionCtxt<'a, 'gcx, 'tcx> as rustc::hir::intravisit::Visitor<'gcx>>::visit_expr\r\n  43: <rustc_typeck::check::regionck::RegionCtxt<'a, 'gcx, 'tcx> as rustc::hir::intravisit::Visitor<'gcx>>::visit_arm\r\n  44: rustc::hir::intravisit::walk_expr\r\n  45: <rustc_typeck::check::regionck::RegionCtxt<'a, 'gcx, 'tcx> as rustc::hir::intravisit::Visitor<'gcx>>::visit_expr\r\n  46: <rustc_typeck::check::regionck::RegionCtxt<'a, 'gcx, 'tcx> as rustc::hir::intravisit::Visitor<'gcx>>::visit_local\r\n  47: rustc::hir::intravisit::walk_expr\r\n  48: <rustc_typeck::check::regionck::RegionCtxt<'a, 'gcx, 'tcx> as rustc::hir::intravisit::Visitor<'gcx>>::visit_expr\r\n  49: rustc::hir::intravisit::walk_expr\r\n  50: <rustc_typeck::check::regionck::RegionCtxt<'a, 'gcx, 'tcx> as rustc::hir::intravisit::Visitor<'gcx>>::visit_expr\r\n  51: <rustc_typeck::check::regionck::RegionCtxt<'a, 'gcx, 'tcx> as rustc::hir::intravisit::Visitor<'gcx>>::visit_arm\r\n  52: rustc::hir::intravisit::walk_expr\r\n  53: <rustc_typeck::check::regionck::RegionCtxt<'a, 'gcx, 'tcx> as rustc::hir::intravisit::Visitor<'gcx>>::visit_expr\r\n  54: rustc::hir::intravisit::walk_expr\r\n  55: <rustc_typeck::check::regionck::RegionCtxt<'a, 'gcx, 'tcx> as rustc::hir::intravisit::Visitor<'gcx>>::visit_expr\r\n  56: rustc_typeck::check::regionck::RegionCtxt::visit_fn_body\r\n  57: rustc_typeck::check::regionck::<impl rustc_typeck::check::FnCtxt<'a, 'gcx, 'tcx>>::regionck_fn\r\n  58: rustc::ty::context::tls::enter\r\n  59: rustc::infer::InferCtxtBuilder::enter\r\n  60: rustc_typeck::check::typeck_tables_of\r\n  61: rustc::ty::maps::<impl rustc::ty::maps::queries::typeck_tables_of<'tcx>>::compute_result\r\n  62: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  63: rustc_errors::Handler::track_diagnostics\r\n  64: rustc::ty::maps::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::cycle_check\r\n  65: rustc::ty::maps::<impl rustc::ty::maps::queries::typeck_tables_of<'tcx>>::force\r\n  66: rustc::ty::maps::<impl rustc::ty::maps::queries::typeck_tables_of<'tcx>>::try_get\r\n  67: rustc::ty::maps::TyCtxtAt::typeck_tables_of\r\n  68: rustc::ty::maps::<impl rustc::ty::maps::queries::typeck_tables_of<'tcx>>::ensure\r\n  69: rustc::session::Session::track_errors\r\n  70: rustc_typeck::check::typeck_item_bodies\r\n  71: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  72: rustc_errors::Handler::track_diagnostics\r\n  73: rustc::ty::maps::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::cycle_check\r\n  74: rustc::ty::maps::<impl rustc::ty::maps::queries::typeck_item_bodies<'tcx>>::force\r\n  75: rustc::ty::maps::<impl rustc::ty::maps::queries::typeck_item_bodies<'tcx>>::try_get\r\n  76: rustc::ty::maps::TyCtxtAt::typeck_item_bodies\r\n  77: rustc::ty::maps::<impl rustc::ty::context::TyCtxt<'a, 'tcx, 'lcx>>::typeck_item_bodies\r\n  78: rustc_typeck::check_crate\r\n  79: <std::thread::local::LocalKey<T>>::with\r\n  80: <std::thread::local::LocalKey<T>>::with\r\n  81: rustc::ty::context::TyCtxt::create_and_enter\r\n  82: rustc_driver::driver::compile_input\r\n  83: rustc_driver::run_compiler_impl\r\n  84: syntax::with_globals\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.26.0-nightly (55c984ee5 2018-03-16) running on x86_64-apple-darwin\r\n\r\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nerror: Could not compile `miri`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n```", "closed_by": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/49111/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/49111/timeline", "performed_via_github_app": null, "state_reason": "completed"}