{"url": "https://api.github.com/repos/rust-lang/rust/issues/29499", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/29499/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/29499/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/29499/events", "html_url": "https://github.com/rust-lang/rust/issues/29499", "id": 114453342, "node_id": "MDU6SXNzdWUxMTQ0NTMzNDI=", "number": 29499, "title": "Default impls cannot reliably expose type inequality", "user": {"login": "ebfull", "id": 3794471, "node_id": "MDQ6VXNlcjM3OTQ0NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3794471?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebfull", "html_url": "https://github.com/ebfull", "followers_url": "https://api.github.com/users/ebfull/followers", "following_url": "https://api.github.com/users/ebfull/following{/other_user}", "gists_url": "https://api.github.com/users/ebfull/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebfull/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebfull/subscriptions", "organizations_url": "https://api.github.com/users/ebfull/orgs", "repos_url": "https://api.github.com/users/ebfull/repos", "events_url": "https://api.github.com/users/ebfull/events{/privacy}", "received_events_url": "https://api.github.com/users/ebfull/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2015-11-01T06:10:53Z", "updated_at": "2020-07-07T13:22:30Z", "closed_at": "2019-09-23T11:51:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "``` rust\ntrait NotSame { }\nimpl NotSame for .. { }\nimpl<A> !NotSame for (A, A) { }\n```\n\nIf I understand default impls right, it should be possible to express `S != T` using `(S, T): NotSame`. In fact this does work in some situations, but not generally.\n\n**doesn't work:**\n\n``` rust\n\n\n#![feature(optin_builtin_traits)]\n\ntrait NotSame { }\nimpl NotSame for .. { }\nimpl<A> !NotSame for (A, A) { }\n\nfn f<T, U>(_: T, _: U) where (T, U): NotSame {}\n\nstruct S;\nstruct Z;\n\nfn main() {\n    f(S, Z); // error: the trait `NotSame` is not implemented for the type `(_, _)`\n    f(S, S); // error: the trait `NotSame` is not implemented for the type `(_, _)`\n}\n```\n\n**but this does:**\n\n``` rust\n#![feature(optin_builtin_traits)]\n\nuse std::marker::PhantomData;\n\ntrait NotSame { }\nimpl NotSame for .. { }\nimpl<A> !NotSame for (A, A) { }\n\nstruct Choose<S, P>(PhantomData<(S, P)>);\nstruct Finally<P>(PhantomData<P>);\n\npub trait Chooser<T> {\n    fn num() -> usize;\n}\n\nimpl<S, Q> Chooser<S> for Choose<S, Q> {\n    fn num() -> usize { 0 }\n}\n\nimpl<S> Chooser<S> for Finally<S> {\n    fn num() -> usize { 0 }\n}\n\nimpl<R, S, Q: Chooser<S>> Chooser<S> for Choose<R, Q>\n    where (S, R): NotSame\n{\n    fn num() -> usize { Q::num().checked_add(1).unwrap() }\n}\n\nfn main() { }\n```\n\nPerhaps it only works when trying to ensure there are no conflicting impls? Perhaps it's not meant to work, and the second example is a hole?\n", "closed_by": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/29499/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/29499/timeline", "performed_via_github_app": null, "state_reason": "completed"}