{"url": "https://api.github.com/repos/rust-lang/rust/issues/61504", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/61504/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/61504/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/61504/events", "html_url": "https://github.com/rust-lang/rust/issues/61504", "id": 451712100, "node_id": "MDU6SXNzdWU0NTE3MTIxMDA=", "number": 61504, "title": "Unconditional_recursion lint not triggered in procedural macro", "user": {"login": "treere", "id": 11353602, "node_id": "MDQ6VXNlcjExMzUzNjAy", "avatar_url": "https://avatars.githubusercontent.com/u/11353602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/treere", "html_url": "https://github.com/treere", "followers_url": "https://api.github.com/users/treere/followers", "following_url": "https://api.github.com/users/treere/following{/other_user}", "gists_url": "https://api.github.com/users/treere/gists{/gist_id}", "starred_url": "https://api.github.com/users/treere/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/treere/subscriptions", "organizations_url": "https://api.github.com/users/treere/orgs", "repos_url": "https://api.github.com/users/treere/repos", "events_url": "https://api.github.com/users/treere/events{/privacy}", "received_events_url": "https://api.github.com/users/treere/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235137, "node_id": "MDU6TGFiZWwyMzUxMzc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lint", "name": "A-lint", "color": "f7e101", "default": false, "description": "Area: Lints (warnings about flaws in source code) such as unused_mut."}, {"id": 132910982, "node_id": "MDU6TGFiZWwxMzI5MTA5ODI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-macros", "name": "A-macros", "color": "f7e101", "default": false, "description": "Area: All kinds of macros (custom derive, macro_rules!, proc macros, ..)"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-06-03T22:11:09Z", "updated_at": "2019-06-03T22:18:30Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI ma working with edition 2018 and I tried this piece of code with 1.37 nightly, 1.35 and 1.32 (random pick) with the same result.\r\nSorry if the point of my issue is at the end but I belive that the code is much more clear than me.\r\n\r\nThe code is:\r\n\r\nlib.rs:\r\n```rust\r\nextern crate proc_macro;\r\n\r\nuse proc_macro::TokenStream;\r\n\r\n#[proc_macro_derive(TestMacro)]\r\npub fn derive_answer_fn(input: TokenStream) -> TokenStream {\r\n    let name = input.into_iter().nth(1).unwrap();\r\n\r\n    format!(\r\n        r#\"\r\n        pub trait A {{\r\n            fn f() -> Self;\r\n        }}\r\n\r\n        #[deny(unconditional_recursion)]\r\n        impl A for {0} {{\r\n            fn f() -> Self {{\r\n\r\n            let a = 0;\r\n                <{0} as A>::f()\r\n            }}\r\n        }}\"#, name.to_string()\r\n    ).parse().unwrap()\r\n}\r\n```\r\n\r\ntest.rs:\r\n```rust\r\nuse m::TestMacro;\r\n\r\n#[derive(TestMacro)]\r\nstruct Struct;\r\n\r\nfn main() {\r\n    Struct::f();\r\n}\r\n```\r\n\r\nI thought my test code would behave like:\r\n```rust\r\nstruct Struct;\r\n\r\npub trait A {\r\n    fn f() -> Self;\r\n}\r\n\r\n#[deny(unconditional_recursion)]\r\nimpl A for Struct {\r\n    fn f() -> Self {\r\n        <Struct as A>::f()\r\n    }\r\n}\r\n\r\nfn main() {\r\n    Struct::f();\r\n}\r\n```\r\ngiving this error:\r\n```\r\nerror: function cannot return without recursing\r\n```\r\n\r\ninstead compiles and (obviously)\r\n```\r\nthread 'main' has overflowed its stack\r\nfatal runtime error: stack overflow\r\n```\r\n\r\nAm I doing something wrong? \r\nWhen does the linter check my code? \r\nIs this a normal behavoir?\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/61504/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/61504/timeline", "performed_via_github_app": null, "state_reason": null}