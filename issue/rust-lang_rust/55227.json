{"url": "https://api.github.com/repos/rust-lang/rust/issues/55227", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/55227/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/55227/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/55227/events", "html_url": "https://github.com/rust-lang/rust/issues/55227", "id": 372222711, "node_id": "MDU6SXNzdWUzNzIyMjI3MTE=", "number": 55227, "title": "rustc fails to infer default types that appear inside a path", "user": {"login": "MaikKlein", "id": 1994306, "node_id": "MDQ6VXNlcjE5OTQzMDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1994306?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MaikKlein", "html_url": "https://github.com/MaikKlein", "followers_url": "https://api.github.com/users/MaikKlein/followers", "following_url": "https://api.github.com/users/MaikKlein/following{/other_user}", "gists_url": "https://api.github.com/users/MaikKlein/gists{/gist_id}", "starred_url": "https://api.github.com/users/MaikKlein/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MaikKlein/subscriptions", "organizations_url": "https://api.github.com/users/MaikKlein/orgs", "repos_url": "https://api.github.com/users/MaikKlein/repos", "events_url": "https://api.github.com/users/MaikKlein/events{/privacy}", "received_events_url": "https://api.github.com/users/MaikKlein/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 604454086, "node_id": "MDU6TGFiZWw2MDQ0NTQwODY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-inference", "name": "A-inference", "color": "f7e101", "default": false, "description": "Area: Type inference"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-20T15:32:09Z", "updated_at": "2022-03-22T10:43:49Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\r\ntype MyWorld = World<u32>;\r\nstruct World<S = u32> {\r\n    s: S,\r\n}\r\nimpl<S> World<S> {\r\n    pub fn new() -> Self {\r\n        unimplemented!()\r\n    }\r\n}\r\nfn main() {\r\n    //let mut world = World::new(); // Doesn't compile\r\n    let mut world: World = World::new(); // <= This works :/\r\n    let mut world = MyWorld::new(); // This also works\r\n}\r\n```\r\n[playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2015&gist=8fe5516b40f25a2c4dd2d7dbfd430b7f)\r\n\r\n\r\n```\r\nlet mut world = World::new(); // Doesn't compile\r\nlet mut world: World = World::new(); // This works\r\n```\r\n\r\nTo me this seems like an oversight in how types are inferred inside a path.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/55227/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/55227/timeline", "performed_via_github_app": null, "state_reason": null}