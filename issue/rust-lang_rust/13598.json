{"url": "https://api.github.com/repos/rust-lang/rust/issues/13598", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/13598/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/13598/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/13598/events", "html_url": "https://github.com/rust-lang/rust/issues/13598", "id": 31810886, "node_id": "MDU6SXNzdWUzMTgxMDg4Ng==", "number": 13598, "title": "`use self::b` has stopped consulting local non-pub `use` of `b`", "user": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 239393, "node_id": "MDU6TGFiZWwyMzkzOTM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-resolve", "name": "A-resolve", "color": "f7e101", "default": false, "description": "Area: Path resolution"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2014-04-18T17:07:19Z", "updated_at": "2016-11-21T14:08:48Z", "closed_at": "2016-11-21T14:08:48Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I used to be able to do:\n\n```\nuse a::b;\nuse D = self::b::C;\n```\n\nbut now I cannot, at least not in all cases.\n\nHere is a test case:\n\n``` rust\nmod a {\n    pub mod b {\n        pub type C = uint;\n    }\n}\n\n#[cfg(variant1)]\nmod variant1 {\n    use a::b;\n    use D = self::b::C;\n\n    pub fn main() {\n        let d : D = 3;\n        println!(\"d: {}\", d);\n    }\n}\n\n#[cfg(variant2)]\nmod variant2 {\n    use D = a::b::C;\n\n    pub fn main() {\n        let d : D = 3;\n        println!(\"d: {}\", d);\n    }\n}\n\n#[cfg(variant1)]\npub fn main() {\n    variant1::main();\n}\n\n#[cfg(variant2)]\npub fn main() {\n    variant2::main();\n}\n```\n\nHere is a transcript of how this used to work (on a rustc v0.11-pre circa 2014-04-07) versus breaking now (on a rustc v0.11-pre circa 2014-04018).\n\n```\n% rustc --version\n/Users/fklock/opt/rust-dbg/bin/rustc 0.11-pre (0deb16a 2014-04-07 02:26:37 -0700)\nhost: x86_64-apple-darwin\n% rustc --cfg variant1 /tmp/n.rs && ./n\nd: 3\n% rustc --cfg variant2 /tmp/n.rs && ./n\nd: 3\n% ./objdir-dbgopt/x86_64-apple-darwin/stage2/bin/rustc --version\n./objdir-dbgopt/x86_64-apple-darwin/stage2/bin/rustc 0.11-pre (ce2bab6 2014-04-18 04:11:19 -0700)\nhost: x86_64-apple-darwin\n% ./objdir-dbgopt/x86_64-apple-darwin/stage2/bin/rustc --cfg variant1 /tmp/n.rs && ./n\n/tmp/n.rs:10:9: 10:24 error: unresolved import: could not find `b` in `variant1`.\n/tmp/n.rs:10     use D = self::b::C;\n                     ^~~~~~~~~~~~~~~\n/tmp/n.rs:10:9: 10:24 error: failed to resolve import `self::b::C`\n/tmp/n.rs:10     use D = self::b::C;\n                     ^~~~~~~~~~~~~~~\nerror: aborting due to 2 previous errors\n% ./objdir-dbgopt/x86_64-apple-darwin/stage2/bin/rustc --cfg variant2 /tmp/n.rs && ./n\nd: 3\n% \n```\n\nDiscussion with @alexcrichton leads me to think that this change may have been injected as part of PR #13409.\n\nIt may or may be a bug.  Whether you see it as a bug may depend on your view of how privacy and `use` interact.  (In particular, if you make a variant3 of variant1 where the `use a::b` is rewritten to `pub use a::b`, so that the `b` is now publicly exported from `self`, then things seem to work.)\n\nMy reasoning is that we should be able to do:\n\n```\nuse a::b; // a non-pub import\nuse D = self::b::C;\n```\n\nbecause the way we resolve `use self::b::C`, we look for other non-pub things in `self`, such as a hypothetical non-pub `mod b` defined within `self`.\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/13598/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/13598/timeline", "performed_via_github_app": null, "state_reason": "completed"}