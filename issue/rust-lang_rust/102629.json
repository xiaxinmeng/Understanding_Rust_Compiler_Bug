{"url": "https://api.github.com/repos/rust-lang/rust/issues/102629", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/102629/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/102629/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/102629/events", "html_url": "https://github.com/rust-lang/rust/issues/102629", "id": 1395102777, "node_id": "I_kwDOAAsO6M5TJ5Q5", "number": 102629, "title": "On E0308, detect incorrect attempts to use trait objects", "user": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1183099971, "node_id": "MDU6TGFiZWwxMTgzMDk5OTcx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-suggestion-diagnostics", "name": "A-suggestion-diagnostics", "color": "f7e101", "default": false, "description": "Area: suggestions generated by the compiler applied by cargo fix"}, {"id": 1596122811, "node_id": "MDU6TGFiZWwxNTk2MTIyODEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-newcomer-roadblock", "name": "D-newcomer-roadblock", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error hard to understand for new users"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-10-03T17:49:46Z", "updated_at": "2022-10-03T17:49:46Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "_https://users.rust-lang.org/t/expected-trait-object-dyn-trait-found-struct-struct/82198_\r\n\r\nWhen encountering cases where the user's intent is to have a trait object, but we produce an E0308, we should put some effort in sending them in the right direction. We should provide a suggestion with the right code to properly box and erase the type in the appropriate branches.\r\n\r\n```rust\r\nlet a: dyn Trait = if true {\r\n    Struct\r\n} else {\r\n    foo() // -> dyn Trait\r\n};\r\n```\r\n\r\n```rust\r\nlet a: dyn Trait = if true {\r\n    Struct\r\n} else {\r\n    foo() // -> Box<dyn Trait>\r\n};\r\n```\r\n\r\n```rust\r\nlet a: dyn Trait = if true {\r\n    Struct\r\n} else {\r\n    foo() // -> impl Trait\r\n};\r\n```\r\n\r\n```rust\r\nlet a: Box<dyn Trait> = if true {\r\n    Box::new(Struct)\r\n} else {\r\n    foo() // -> dyn Trait\r\n};\r\n```\r\n\r\n```rust\r\nlet a: Box<dyn Trait> = if true {\r\n    Box::new(Struct)\r\n} else {\r\n    foo() // -> Box<dyn Trait>\r\n};\r\n```\r\n\r\n```rust\r\nlet a: Box<dyn Trait> = if true {\r\n    Box::new(Struct)\r\n} else {\r\n    foo() // -> impl Trait\r\n};\r\n```\r\n\r\n```rust\r\nlet a: Trait = if true {\r\n    Struct\r\n} else {\r\n    foo() // -> dyn Trait\r\n};\r\n```\r\n\r\n```rust\r\nlet a: Trait = if true {\r\n    Struct\r\n} else {\r\n    foo() // -> Box<dyn Trait>\r\n};\r\n```\r\n\r\n```rust\r\nlet a: Trait = if true {\r\n    Struct\r\n} else {\r\n    foo() // -> impl Trait\r\n};\r\n```\r\n\r\n```rust\r\nlet a: Box<dyn Trait> = if true {\r\n    Struct\r\n} else {\r\n    foo() // -> Box<dyn Trait>\r\n};\r\n```\r\n\r\n```rust\r\nlet a: dyn Trait = if true {\r\n    Struct\r\n} else {\r\n    foo() // -> impl Trait\r\n};\r\n```\r\n\r\nWe also want to do this if the binding *doesn't have an explicit type*, but that will require looking at the diverging code branches to see if any of them is a \"root\" trait (if there are multiple trait objects of different traits, and any of them is super trait to all others), and for the explicit types if they implement the trait and can be coerced to the desired trait object.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/102629/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/102629/timeline", "performed_via_github_app": null, "state_reason": null}