{"url": "https://api.github.com/repos/rust-lang/rust/issues/60199", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/60199/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/60199/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/60199/events", "html_url": "https://github.com/rust-lang/rust/issues/60199", "id": 436231042, "node_id": "MDU6SXNzdWU0MzYyMzEwNDI=", "number": 60199, "title": "Multiple anonymous lifetimes bounds upset compiler", "user": {"login": "imp", "id": 92535, "node_id": "MDQ6VXNlcjkyNTM1", "avatar_url": "https://avatars.githubusercontent.com/u/92535?v=4", "gravatar_id": "", "url": "https://api.github.com/users/imp", "html_url": "https://github.com/imp", "followers_url": "https://api.github.com/users/imp/followers", "following_url": "https://api.github.com/users/imp/following{/other_user}", "gists_url": "https://api.github.com/users/imp/gists{/gist_id}", "starred_url": "https://api.github.com/users/imp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/imp/subscriptions", "organizations_url": "https://api.github.com/users/imp/orgs", "repos_url": "https://api.github.com/users/imp/repos", "events_url": "https://api.github.com/users/imp/events{/privacy}", "received_events_url": "https://api.github.com/users/imp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 980999956, "node_id": "MDU6TGFiZWw5ODA5OTk5NTY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-edition-2018-lints", "name": "A-edition-2018-lints", "color": "f7e101", "default": false, "description": "Area: lints supporting the 2018 edition"}, {"id": 1183099971, "node_id": "MDU6TGFiZWwxMTgzMDk5OTcx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-suggestion-diagnostics", "name": "A-suggestion-diagnostics", "color": "f7e101", "default": false, "description": "Area: suggestions generated by the compiler applied by cargo fix"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-04-23T14:49:19Z", "updated_at": "2021-12-02T02:14:58Z", "closed_at": "2021-12-02T02:14:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "TL;DR Rust is unable to compile its own hint with anonymous lifetimes\r\n([Playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=a683984600a6e012b7d0e507f1b4489a))\r\n\r\n\r\n```rust\r\n#![warn(rust_2018_idioms)]\r\n\r\nuse clap::{App, SubCommand};\r\n\r\nfn app() -> App {\r\n    SubCommand::with_name(\"app\")\r\n}\r\n\r\nfn main () {\r\n    let _matches = app().get_matches();\r\n}\r\n```\r\n\r\nRust doesn't like it as `App` is defined with two lifetimes - `App<'a, 'b>`\r\nand indeed the hint is dead on:\r\n```\r\n   Compiling playground v0.0.1 (/playground)\r\nwarning: hidden lifetime parameters in types are deprecated\r\n --> src/lib.rs:5:13\r\n  |\r\n5 | fn app() -> App {\r\n  |             ^^^- help: indicate the anonymous lifetimes: `<'_, '_>`\r\n  |\r\nnote: lint level defined here\r\n --> src/lib.rs:1:9\r\n  |\r\n1 | #![warn(rust_2018_idioms)]\r\n  |         ^^^^^^^^^^^^^^^^\r\n  = note: #[warn(elided_lifetimes_in_paths)] implied by #[warn(rust_2018_idioms)]\r\n```\r\n\r\nSo we do as suggested and add **two** anonymous lifetimes to `App<'_, '_>`\r\n```\r\n#![warn(rust_2018_idioms)]\r\n\r\nuse clap::{App, SubCommand};\r\n\r\nfn app() -> App<'_, '_> {\r\n    SubCommand::with_name(\"app\")\r\n}\r\n\r\nfn main () {\r\n    let _matches = app().get_matches();\r\n}\r\n```\r\n\r\nThis time it is even worth as now compiler coudn't tell these two lifetimes apart\r\n\r\n```\r\n   Compiling playground v0.0.1 (/playground)\r\nerror[E0106]: missing lifetime specifiers\r\n --> src/lib.rs:5:17\r\n  |\r\n5 | fn app() -> App<'_, '_> {\r\n  |                 ^^ expected 2 lifetime parameters\r\n\r\nerror: aborting due to previous error\r\n```\r\n\r\nSo it is either anonymous liftime logic should be fixed to work similar to the type hints, or the help message should avoid suggesting incorrect syntax.\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/60199/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/60199/timeline", "performed_via_github_app": null, "state_reason": "completed"}