{"url": "https://api.github.com/repos/rust-lang/rust/issues/96163", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/96163/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/96163/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/96163/events", "html_url": "https://github.com/rust-lang/rust/issues/96163", "id": 1206528029, "node_id": "I_kwDOAAsO6M5H6igd", "number": 96163, "title": "Miri with strict provenance flags UB in macos impl of `hashmap_random_keys`", "user": {"login": "lopopolo", "id": 860434, "node_id": "MDQ6VXNlcjg2MDQzNA==", "avatar_url": "https://avatars.githubusercontent.com/u/860434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lopopolo", "html_url": "https://github.com/lopopolo", "followers_url": "https://api.github.com/users/lopopolo/followers", "following_url": "https://api.github.com/users/lopopolo/following{/other_user}", "gists_url": "https://api.github.com/users/lopopolo/gists{/gist_id}", "starred_url": "https://api.github.com/users/lopopolo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lopopolo/subscriptions", "organizations_url": "https://api.github.com/users/lopopolo/orgs", "repos_url": "https://api.github.com/users/lopopolo/repos", "events_url": "https://api.github.com/users/lopopolo/events{/privacy}", "received_events_url": "https://api.github.com/users/lopopolo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1244499056, "node_id": "MDU6TGFiZWwxMjQ0NDk5MDU2", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-miri", "name": "A-miri", "color": "f7e101", "default": false, "description": "Area: The miri tool"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2022-04-18T00:33:27Z", "updated_at": "2022-04-20T21:06:05Z", "closed_at": "2022-04-20T21:06:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI tried this code:\r\n\r\n```rust\r\nManuallyDrop::new(HashMap::with_capacity(capacity))\r\n```\r\n\r\nhttps://github.com/artichoke/intaglio/tree/da131444a22fc9b4d9382be5ecb16583cddb31d5\r\n\r\nWith this miri invocation:\r\n\r\n```console\r\n$ MIRIFLAGS=\"-Zmiri-strict-provenance -Zmiri-check-number-validity -Zmiri-symbolic-alignment-check -Zrandomize-layout\" cargo +nightly miri test --test leak_drop\r\n```\r\n\r\nI expected to see this happen: no Miri-flagged UB in `std`\r\n\r\nInstead, this happened:\r\n\r\n```\r\nrunning 5 tests\r\ntest bytes::dealloc_owned_data ... error: Undefined Behavior: 0x1ac318 is not a valid pointer\r\n   --> /Users/lopopolo/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/std/src/sys/unix/rand.rs:130:40\r\n    |\r\n130 |                     let ret = unsafe { f(s.as_mut_ptr() as *mut c_void, s.len()) };\r\n    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ 0x1ac318 is not a valid pointer\r\n    |\r\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\r\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\r\n\r\n    = note: inside closure at /Users/lopopolo/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/std/src/sys/unix/rand.rs:130:40\r\n    = note: inside `std::option::Option::<unsafe extern \"C\" fn(*mut std::ffi::c_void, usize) -> i32>::map::<bool, [closure@std::sys::unix::rand::imp::getentropy_fill_bytes::{closure#0}]>` at /Users/lopopolo/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/option.rs:909:29\r\n    = note: inside `std::sys::unix::rand::imp::getentropy_fill_bytes` at /Users/lopopolo/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/std/src/sys/unix/rand.rs:125:9\r\n    = note: inside `std::sys::unix::rand::imp::fill_bytes` at /Users/lopopolo/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/std/src/sys/unix/rand.rs:141:12\r\n    = note: inside `std::sys::unix::rand::hashmap_random_keys` at /Users/lopopolo/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/std/src/sys/unix/rand.rs:8:9\r\n    = note: inside `std::collections::hash_map::RandomState::new::KEYS::__init` at /Users/lopopolo/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/std/src/collections/hash/map.rs:2952:23\r\n    = note: inside closure at /Users/lopopolo/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/std/src/thread/local.rs:351:25\r\n    = note: inside `std::thread::local::lazy::LazyKeyInner::<std::cell::Cell<(u64, u64)>>::initialize::<[closure@std::collections::hash_map::RandomState::new::KEYS::__getit::{closure#0}]>` at /Users/lopopolo/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/std/src/thread/local.rs:807:25\r\n    = note: inside `std::thread::__FastLocalKeyInner::<std::cell::Cell<(u64, u64)>>::try_initialize::<[closure@std::collections::hash_map::RandomState::new::KEYS::__getit::{closure#0}]>` at /Users/lopopolo/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/std/src/thread/local.rs:985:31\r\n    = note: inside `std::thread::__FastLocalKeyInner::<std::cell::Cell<(u64, u64)>>::get::<[closure@std::collections::hash_map::RandomState::new::KEYS::__getit::{closure#0}]>` at /Users/lopopolo/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/std/src/thread/local.rs:968:29\r\n    = note: inside `std::collections::hash_map::RandomState::new::KEYS::__getit` at /Users/lopopolo/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/std/src/thread/local.rs:343:21\r\n    = note: inside `std::thread::LocalKey::<std::cell::Cell<(u64, u64)>>::try_with::<[closure@std::collections::hash_map::RandomState::new::{closure#0}], std::collections::hash_map::RandomState>` at /Users/lopopolo/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/std/src/thread/local.rs:442:32\r\n    = note: inside `std::thread::LocalKey::<std::cell::Cell<(u64, u64)>>::with::<[closure@std::collections::hash_map::RandomState::new::{closure#0}], std::collections::hash_map::RandomState>` at /Users/lopopolo/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/std/src/thread/local.rs:419:9\r\n    = note: inside `std::collections::hash_map::RandomState::new` at /Users/lopopolo/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/std/src/collections/hash/map.rs:2955:9\r\n    = note: inside `<std::collections::hash_map::RandomState as std::default::Default>::default` at /Users/lopopolo/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/std/src/collections/hash/map.rs:3025:9\r\n    = note: inside `std::collections::HashMap::<&[u8], intaglio::Symbol>::with_capacity` at /Users/lopopolo/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/std/src/collections/hash/map.rs:247:53\r\nnote: inside `intaglio::bytes::SymbolTable::with_capacity` at /Users/lopopolo/dev/artichoke/intaglio/src/bytes.rs:367:36\r\n   --> /Users/lopopolo/dev/artichoke/intaglio/src/bytes.rs:367:36\r\n    |\r\n367 |             map: ManuallyDrop::new(HashMap::with_capacity(capacity)),\r\n    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nnote: inside `bytes::dealloc_owned_data` at tests/leak_drop/bytes.rs:5:21\r\n   --> tests/leak_drop/bytes.rs:5:21\r\n    |\r\n5   |     let mut table = SymbolTable::with_capacity(0);\r\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nnote: inside closure at tests/leak_drop/bytes.rs:4:1\r\n   --> tests/leak_drop/bytes.rs:4:1\r\n    |\r\n3   |   #[test]\r\n    |   ------- in this procedural macro expansion\r\n4   | / fn dealloc_owned_data() {\r\n5   | |     let mut table = SymbolTable::with_capacity(0);\r\n6   | |     for sym in crate::vectors::byte_symbols() {\r\n7   | |         let symbol = sym;\r\n...   |\r\n18  | |     }\r\n19  | | }\r\n    | |_^\r\n    = note: this error originates in the attribute macro `test` (in Nightly builds, run with -Z macro-backtrace for more info)\r\n\r\nnote: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\r\n\r\nerror: aborting due to previous error\r\n\r\nerror: test failed, to rerun pass '--test leak_drop'\r\n```\r\n\r\nhttps://github.com/rust-lang/rust/blob/ec77f252434a532fdb5699ae4f21a3072d211edd/library/std/src/sys/unix/rand.rs#L130\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.62.0-nightly (3f391b845 2022-04-15)\r\nbinary: rustc\r\ncommit-hash: 3f391b84552f210adec7893b50c5da74f9362ae4\r\ncommit-date: 2022-04-15\r\nhost: x86_64-apple-darwin\r\nrelease: 1.62.0-nightly\r\nLLVM version: 14.0.0\r\n```\r\n\r\n```\r\n$ cargo +nightly miri --version --verbose\r\nmiri 0.1.0 (c568f32 2022-04-09)\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary>Backtrace</summary>\r\n<p>\r\n\r\n```\r\n<backtrace>\r\n```\r\n\r\n</p>\r\n</details>\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/96163/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/96163/timeline", "performed_via_github_app": null, "state_reason": "completed"}