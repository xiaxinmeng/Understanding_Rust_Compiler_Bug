{"url": "https://api.github.com/repos/rust-lang/rust/issues/42351", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/42351/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/42351/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/42351/events", "html_url": "https://github.com/rust-lang/rust/issues/42351", "id": 232841527, "node_id": "MDU6SXNzdWUyMzI4NDE1Mjc=", "number": 42351, "title": "Taking the address of a method on a trait object", "user": {"login": "dylanede", "id": 10339269, "node_id": "MDQ6VXNlcjEwMzM5MjY5", "avatar_url": "https://avatars.githubusercontent.com/u/10339269?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dylanede", "html_url": "https://github.com/dylanede", "followers_url": "https://api.github.com/users/dylanede/followers", "following_url": "https://api.github.com/users/dylanede/following{/other_user}", "gists_url": "https://api.github.com/users/dylanede/gists{/gist_id}", "starred_url": "https://api.github.com/users/dylanede/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dylanede/subscriptions", "organizations_url": "https://api.github.com/users/dylanede/orgs", "repos_url": "https://api.github.com/users/dylanede/repos", "events_url": "https://api.github.com/users/dylanede/events{/privacy}", "received_events_url": "https://api.github.com/users/dylanede/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-06-01T10:57:24Z", "updated_at": "2017-06-23T12:37:44Z", "closed_at": "2017-06-23T12:37:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "If I have a trait object, there doesn't appear to be a way at the moment of taking the address of a method on it, i.e. it would be nice to be able to do\r\n\r\n```rust\r\ntrait Foo {\r\n    fn foo(&self);\r\n}\r\nlet x: &Foo = unimplemented!();\r\n// unsafe fn as it is no longer tied to the underlying type.\r\nlet foo_for_x: unsafe fn(*const Foo) = x.foo; // error: attempted to use method as a value\r\n```\r\n\r\nIs there any way of achieving this (getting the address of a method from a trait object or its vtable) in Rust at the moment?", "closed_by": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/42351/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/42351/timeline", "performed_via_github_app": null, "state_reason": "completed"}