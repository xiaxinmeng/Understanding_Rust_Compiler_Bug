{"url": "https://api.github.com/repos/rust-lang/rust/issues/21726", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/21726/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/21726/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/21726/events", "html_url": "https://github.com/rust-lang/rust/issues/21726", "id": 55804969, "node_id": "MDU6SXNzdWU1NTgwNDk2OQ==", "number": 21726, "title": "Subtyping rules for associated type projections", "user": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}, {"id": 149689562, "node_id": "MDU6TGFiZWwxNDk2ODk1NjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-associated-items", "name": "A-associated-items", "color": "f7e101", "default": false, "description": "Area: Associated items such as associated types and consts."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2015-01-28T19:42:28Z", "updated_at": "2015-01-31T07:20:41Z", "closed_at": "2015-01-31T07:20:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "@kimundi showed me [this example](https://gist.github.com/Kimundi/d868b8fb65f8641b3670) program which fails to compile. Here is a reduced version:\n\n``` rust\nfn main() {\n    let s: &'static str = \"foo\";\n    let b: B<()> = B::new(s, ());\n    b.get_short();\n}\n\ntrait IntoRef<'a> {\n    type T: Clone;\n    fn into_ref(self, &'a str) -> Self::T;\n}\n\nimpl<'a> IntoRef<'a> for () {\n    type T = &'a str;\n    fn into_ref(self, s: &'a str) -> &'a str {\n        s\n    }\n}\n\nstruct B<'a, P: IntoRef<'a>>(P::T);\n\nimpl<'a, P: IntoRef<'a>> B<'a, P> {\n    fn new(s: &'a str, i: P) -> B<'a, P> {\n        B(i.into_ref(s))\n    }\n\n    fn get_short(&self) -> P::T {\n        self.0.clone()\n    }\n}\n```\n\nThis yields:\n\n```\nlunch-box. rustc ~/tmp/kimundi.rs\n/home/nmatsakis/tmp/kimundi.rs:3:20: 3:26 error: cannot infer an appropriate lifetime for lifetime parameter `'a` due to conflicting requirements\n/home/nmatsakis/tmp/kimundi.rs:3     let b: B<()> = B::new(s, ());\n                                                    ^~~~~~\n/home/nmatsakis/tmp/kimundi.rs:4:5: 4:18 note: first, the lifetime must be contained by the method call at 4:4...\n/home/nmatsakis/tmp/kimundi.rs:4     b.get_short();\n                                     ^~~~~~~~~~~~~\n/home/nmatsakis/tmp/kimundi.rs:4:5: 4:18 note: ...so type `&str` of expression is valid during the expression\n/home/nmatsakis/tmp/kimundi.rs:4     b.get_short();\n                                     ^~~~~~~~~~~~~\n/home/nmatsakis/tmp/kimundi.rs:3:27: 3:28 note: but, the lifetime must also be contained by the expression at 3:26...\n/home/nmatsakis/tmp/kimundi.rs:3     let b: B<()> = B::new(s, ());\n                                                           ^\n/home/nmatsakis/tmp/kimundi.rs:3:27: 3:28 note: ...so that auto-reference is valid at the time of borrow\n/home/nmatsakis/tmp/kimundi.rs:3     let b: B<()> = B::new(s, ());\n                                                           ^\nerror: aborting due to previous error\n```\n\nHowever, if you change the type of `b` to `B<'static, ()>`, it builds. Seems like there is a missing constraint somewhere in the region inference graph.\n", "closed_by": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/21726/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/21726/timeline", "performed_via_github_app": null, "state_reason": "completed"}