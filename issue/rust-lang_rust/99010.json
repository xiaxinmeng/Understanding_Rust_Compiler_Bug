{"url": "https://api.github.com/repos/rust-lang/rust/issues/99010", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/99010/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/99010/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/99010/events", "html_url": "https://github.com/rust-lang/rust/issues/99010", "id": 1297165542, "node_id": "I_kwDOAAsO6M5NUSzm", "number": 99010, "title": "Infinite recursion when solving bounds", "user": {"login": "lu-zero", "id": 239012, "node_id": "MDQ6VXNlcjIzOTAxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/239012?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lu-zero", "html_url": "https://github.com/lu-zero", "followers_url": "https://api.github.com/users/lu-zero/followers", "following_url": "https://api.github.com/users/lu-zero/following{/other_user}", "gists_url": "https://api.github.com/users/lu-zero/gists{/gist_id}", "starred_url": "https://api.github.com/users/lu-zero/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lu-zero/subscriptions", "organizations_url": "https://api.github.com/users/lu-zero/orgs", "repos_url": "https://api.github.com/users/lu-zero/repos", "events_url": "https://api.github.com/users/lu-zero/events{/privacy}", "received_events_url": "https://api.github.com/users/lu-zero/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-07-07T10:27:46Z", "updated_at": "2022-07-07T13:53:43Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "\r\n\r\nI tried this [code](https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=2c2d11cfd7b21de02275d948acbf36ff):\r\n\r\n```rust\r\nuse std::fmt::{self, Debug};\r\n\r\npub trait ExtendableCommon {\r\n    type Item;\r\n    type SubA;\r\n    type SubB;\r\n    \r\n    type ExtendableSubtype: ExtendableSubtype;\r\n}\r\n\r\npub trait ExtendableSubtype {\r\n    type SubA;\r\n    type SubB;\r\n\r\n    type ExtendableSubA: ExtendableSubA;\r\n    type ExtendableSubB: ExtendableSubB;\r\n}\r\n\r\npub trait ExtendableSubA {\r\n    type Item;\r\n    type ExtendableCommon: ExtendableCommon;\r\n}\r\n\r\npub trait ExtendableSubB {\r\n    type Item;\r\n    type ExtendableCommon: ExtendableCommon;\r\n}\r\n\r\npub struct Common<Other: ExtendableCommon> {\r\n    pub subtype: Subtype<Other::ExtendableSubtype>,\r\n    pub other: Other::Item,\r\n}\r\n\r\npub enum Subtype<Other: ExtendableSubtype> {\r\n    A(SubA<Other::ExtendableSubA>),\r\n    B(SubB<Other::ExtendableSubB>),\r\n}\r\n\r\npub struct SubA<Other: ExtendableSubA> {\r\n    pub a: i32,\r\n    pub children: Vec<Common<Other::ExtendableCommon>>,\r\n    pub other: Other::Item,\r\n}\r\n\r\npub struct SubB<Other: ExtendableSubB> {\r\n    pub b: f64,\r\n    pub children: Vec<Common<Other::ExtendableCommon>>,\r\n    pub other: Other::Item,\r\n}\r\n\r\nimpl<Other> Debug for Common<Other>\r\nwhere\r\n    Other: ExtendableCommon,\r\n    Other::Item: Debug,\r\n    Subtype<Other::ExtendableSubtype>: Debug,\r\n{\r\n    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\r\n        f.debug_struct(\"Common\")\r\n            .field(\"subtype\", &self.subtype)\r\n            .field(\"other\", &self.other)\r\n            .finish()\r\n    }\r\n}\r\n\r\nimpl<Other> Debug for Subtype<Other>\r\nwhere\r\n    Other: ExtendableSubtype,\r\n    SubA<Other::ExtendableSubA>: Debug,\r\n    SubB<Other::ExtendableSubB>: Debug,\r\n{\r\n    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\r\n        match self {\r\n            Self::A(arg0) => f.debug_tuple(\"A\").field(arg0).finish(),\r\n            Self::B(arg0) => f.debug_tuple(\"B\").field(arg0).finish(),\r\n        }\r\n    }\r\n}\r\n\r\nimpl<Other> Debug for SubA<Other>\r\nwhere\r\n    Other: ExtendableSubA,\r\n    Other::Item: Debug,\r\n    Other::ExtendableCommon: ExtendableCommon,\r\n    Common<Other::ExtendableCommon>: Debug,\r\n{\r\n    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\r\n        f.debug_struct(\"SubA\")\r\n            .field(\"a\", &self.a)\r\n            .field(\"children\", &self.children)\r\n            .field(\"other\", &self.other)\r\n            .finish()\r\n    }\r\n}\r\n\r\nimpl<Other> Debug for SubB<Other>\r\nwhere\r\n    Other: ExtendableSubB,\r\n    Other::Item: Debug,\r\n    Other::ExtendableCommon: ExtendableCommon,\r\n    Common<Other::ExtendableCommon>: Debug,\r\n{\r\n    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\r\n        f.debug_struct(\"SubB\")\r\n            .field(\"b\", &self.b)\r\n            .field(\"children\", &self.children)\r\n            .field(\"other\", &self.other)\r\n            .finish()\r\n    }\r\n}\r\n\r\npub fn test() {\r\n    dbg!(Common {\r\n        subtype: Subtype::A(SubA {\r\n            a: 42,\r\n            other: (),\r\n            children: vec![Common {\r\n                subtype: Subtype::B(SubB {\r\n                    b: 32.,\r\n                    other: (),\r\n                    children: vec![],\r\n                }),\r\n                other: (),\r\n            }],\r\n        }),\r\n        other: (),\r\n    });\r\n}\r\n```\r\n\r\nI expected to see this happen: \r\n> The code builds or rustc explains why the bounds are impossible/wrong.\r\n\r\nInstead, this happened: \r\n> rustc seems to keep using ~100% cpu and consumes all the memory available.\r\n\r\nReproduced with current nightly (`rustc 1.64.0-nightly (7665c3543 2022-07-06)`) and stable (`rustc 1.62.0 (a8314ef7d 2022-06-27)`).\r\n\r\nCC: @dodomorandi that original found the problem and minimized it \r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/99010/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/99010/timeline", "performed_via_github_app": null, "state_reason": null}