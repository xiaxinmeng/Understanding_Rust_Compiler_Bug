{"url": "https://api.github.com/repos/rust-lang/rust/issues/103278", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/103278/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/103278/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/103278/events", "html_url": "https://github.com/rust-lang/rust/issues/103278", "id": 1415764324, "node_id": "I_kwDOAAsO6M5UYtlk", "number": 103278, "title": "generic_const_exprs ICE when only enabled in lib and not bin", "user": {"login": "SeeSpring", "id": 30735327, "node_id": "MDQ6VXNlcjMwNzM1MzI3", "avatar_url": "https://avatars.githubusercontent.com/u/30735327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SeeSpring", "html_url": "https://github.com/SeeSpring", "followers_url": "https://api.github.com/users/SeeSpring/followers", "following_url": "https://api.github.com/users/SeeSpring/following{/other_user}", "gists_url": "https://api.github.com/users/SeeSpring/gists{/gist_id}", "starred_url": "https://api.github.com/users/SeeSpring/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SeeSpring/subscriptions", "organizations_url": "https://api.github.com/users/SeeSpring/orgs", "repos_url": "https://api.github.com/users/SeeSpring/repos", "events_url": "https://api.github.com/users/SeeSpring/events{/privacy}", "received_events_url": "https://api.github.com/users/SeeSpring/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-10-20T01:15:41Z", "updated_at": "2022-10-20T01:40:55Z", "closed_at": "2022-10-20T01:40:55Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\n```Rust\r\n// main.rs\r\n\r\n// #![feature(portable_simd)]\r\n// #![feature(generic_const_exprs)]\r\n\r\nfn main() {\r\n    two::test::<8>();\r\n}\r\n\r\n// lib.rs\r\n#![feature(portable_simd)]\r\n#![feature(generic_const_exprs)]\r\n\r\nuse core::simd::*;\r\n\r\nfn join<T, const N: usize>([a, b]: [Simd<T, N>; 2]) -> Simd<T, { N * 2 }>\r\nwhere\r\n    T: SimdElement,\r\n    LaneCount<N>: SupportedLaneCount,\r\n    LaneCount<{ N * 2 }>: SupportedLaneCount,\r\n{\r\n    struct S;\r\n    const fn get_swizzle<const N: usize>() -> [Which; N * 2] {\r\n        let out = [Which::First(0); N * 2];\r\n        out\r\n    }\r\n    impl<const N: usize> Swizzle2<N, { N * 2 }> for S {\r\n        const INDEX: [Which; N * 2] = get_swizzle::<N>();\r\n    }\r\n    S::swizzle2(a, b)\r\n}\r\n\r\npub fn test<const N: usize>()\r\nwhere\r\n    LaneCount<N>: SupportedLaneCount,\r\n    LaneCount<{ N * 2 }>: SupportedLaneCount,\r\n\r\n{\r\n    let v = Simd::<f32, N>::default();\r\n    join([v, Simd::<f32, N>::default()]);\r\n\r\n    todo!();\r\n}\r\n```\r\nUncomment the lines in main.rs for a workaround.\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.66.0-nightly (a24a020e6 2022-10-18)\r\nbinary: rustc\r\ncommit-hash: a24a020e6d926dffe6b472fc647978f92269504e\r\ncommit-date: 2022-10-18\r\nhost: x86_64-pc-windows-msvc\r\nrelease: 1.66.0-nightly\r\nLLVM version: 15.0.2\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nerror: internal compiler error: compiler\\rustc_monomorphize\\src\\collector.rs:792:54: collection encountered polymorphic constant: Unevaluated(UnevaluatedConst { def: WithOptConstParam { did: DefId(2:22756 ~ core[a02b]::core_simd::swizzle::Swizzle2Impl::INDEX_IMPL), const_param_did: None }, substs: [two::join::S, Const { ty: usize, kind: Value(Leaf(0x0000000000000008)) }, Const { ty: usize, kind: Value(Leaf(0x0000000000000010)) }], promoted: None }, [u32; 16]))\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nCompiling two v0.1.0\r\nerror: internal compiler error: compiler\\rustc_monomorphize\\src\\collector.rs:792:54: collection encountered polymorphic constant: Unevaluated(UnevaluatedConst { def: WithOptConstParam { did: DefId(2:22756 ~ core[a02b]::core_simd::swizzle::Swizzle2Impl::INDEX_IMPL), const_param_did: None }, substs: [two::join::S, Const { ty: usize, kind: Value(Leaf(0x0000000000000008)) }, Const { ty: usize, kind: Value(Leaf(0x0000000000000010)) }], promoted: None }, [u32; 16])\r\n  --> D:\\two\\src\\lib.rs:20:5\r\n   |\r\n20 |     S::swizzle2(a, b)\r\n   |     ^^^^^^^^^^^^^^^^^\r\n\r\nthread 'rustc' panicked at 'Box<dyn Any>', /rustc/a24a020e6d926dffe6b472fc647978f92269504e\\compiler\\rustc_errors\\src\\lib.rs:1454:9        \r\nstack backtrace:\r\n   0:     0x7ffdaff497f2 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::h53c4ea2e5298ee7b\r\n   1:     0x7ffdaff850fb - core::fmt::write::h4929c0534d871047\r\n   2:     0x7ffdaff3be1a - <std::io::IoSlice as core::fmt::Debug>::fmt::hea1586eafdc30c79\r\n   3:     0x7ffdaff4953b - std::sys::common::alloc::realloc_fallback::h441a327114321be3\r\n   4:     0x7ffdaff4ce99 - std::panicking::default_hook::h66f001930739e8fd\r\n   5:     0x7ffdaff4cb1a - std::panicking::default_hook::h66f001930739e8fd\r\n   6:     0x7ffd8d2c086b - rustc_driver[1077fc6396368dcf]::describe_lints\r\n   7:     0x7ffdaff4d7f0 - std::panicking::rust_panic_with_hook::h059540785d16ed47\r\n   8:     0x7ffd8e7fcbe3 - <rustc_hir_analysis[142dbad75f13068f]::structured_errors::wrong_number_of_generic_args::GenericArgsInfo as core[a02b6f37981f1b5f]::fmt::Debug>::fmt\r\n   9:     0x7ffd8e7fcb69 - <rustc_hir_analysis[142dbad75f13068f]::structured_errors::wrong_number_of_generic_args::GenericArgsInfo as core[a02b6f37981f1b5f]::fmt::Debug>::fmt\r\n  10:     0x7ffd8e7ffc79 - <rustc_monomorphize[eae9e13b1d7a8a3e]::partitioning::MonoItemPlacement as core[a02b6f37981f1b5f]::fmt::Debug>::fmt\r\n  11:     0x7ffd8e80f279 - <rustc_monomorphize[eae9e13b1d7a8a3e]::collector::MirNeighborCollector as rustc_middle[49f1884e63a0b2fb]::mir::visit::Visitor>::visit_terminator\r\n  12:     0x7ffd8e80ef8f - <rustc_monomorphize[eae9e13b1d7a8a3e]::collector::MirNeighborCollector as rustc_middle[49f1884e63a0b2fb]::mir::visit::Visitor>::visit_terminator\r\n  13:     0x7ffd8e80ee02 - <rustc_monomorphize[eae9e13b1d7a8a3e]::collector::MirNeighborCollector as rustc_middle[49f1884e63a0b2fb]::mir::visit::Visitor>::visit_terminator\r\n  14:     0x7ffd8e7ffebf - <rustc_monomorphize[eae9e13b1d7a8a3e]::partitioning::MonoItemPlacement as core[a02b6f37981f1b5f]::fmt::Debug>::fmt\r\n  15:     0x7ffd8e7ffd48 - <rustc_monomorphize[eae9e13b1d7a8a3e]::partitioning::MonoItemPlacement as core[a02b6f37981f1b5f]::fmt::Debug>::fmt\r\n  16:     0x7ffd8e7ffd06 - <rustc_monomorphize[eae9e13b1d7a8a3e]::partitioning::MonoItemPlacement as core[a02b6f37981f1b5f]::fmt::Debug>::fmt\r\n  17:     0x7ffd8c635e64 - <rustc_monomorphize[eae9e13b1d7a8a3e]::collector::MirNeighborCollector as rustc_middle[49f1884e63a0b2fb]::mir::visit::Visitor>::visit_operand\r\n  18:     0x7ffd8c62bc45 - <rustc_monomorphize[eae9e13b1d7a8a3e]::collector::MirNeighborCollector as rustc_middle[49f1884e63a0b2fb]::mir::visit::Visitor>::visit_operand\r\n  19:     0x7ffd8c62c025 - <rustc_monomorphize[eae9e13b1d7a8a3e]::collector::MirNeighborCollector as rustc_middle[49f1884e63a0b2fb]::mir::visit::Visitor>::visit_operand\r\n  20:     0x7ffd8c62c025 - <rustc_monomorphize[eae9e13b1d7a8a3e]::collector::MirNeighborCollector as rustc_middle[49f1884e63a0b2fb]::mir::visit::Visitor>::visit_operand\r\n  21:     0x7ffd8b2be2ee - <rustc_monomorphize[eae9e13b1d7a8a3e]::collector::MirNeighborCollector as rustc_middle[49f1884e63a0b2fb]::mir::visit::Visitor>::visit_constant\r\n  22:     0x7ffd8b2bd4fd - <rustc_monomorphize[eae9e13b1d7a8a3e]::partitioning::default::DefaultPartitioning as rustc_monomorphize[eae9e13b1d7a8a3e]::partitioning::Partitioner>::place_inlined_mono_items\r\n  23:     0x7ffd8b2b6bc1 - <rustc_hir_analysis[142dbad75f13068f]::collect::type_of::find_opaque_ty_constraints_for_rpit::ConstraintChecker as rustc_hir[c703180ab4123f64]::intravisit::Visitor>::visit_expr\r\n  24:     0x7ffd8b67aff4 - <&[(rustc_middle[49f1884e63a0b2fb]::middle::exported_symbols::ExportedSymbol, rustc_middle[49f1884e63a0b2fb]::middle::exported_symbols::SymbolExportInfo)] as rustc_serialize[b013181c7c9e77bd]::serialize::Decodable<rustc_query_impl[52d4f289546b7e07]::on_disk_cache::CacheDecoder>>::decode\r\n  25:     0x7ffd8b6ba3a5 - <&[(rustc_middle[49f1884e63a0b2fb]::middle::exported_symbols::ExportedSymbol, rustc_middle[49f1884e63a0b2fb]::middle::exported_symbols::SymbolExportInfo)] as rustc_serialize[b013181c7c9e77bd]::serialize::Decodable<rustc_query_impl[52d4f289546b7e07]::on_disk_cache::CacheDecoder>>::decode\r\n  26:     0x7ffd8b4ffe0a - <rustc_query_impl[52d4f289546b7e07]::Queries as rustc_middle[49f1884e63a0b2fb]::ty::query::QueryEngine>::try_mark_green\r\n  27:     0x7ffd8ab65cbf - <rustc_codegen_llvm[9a9d157ce05375fd]::llvm_::ffi::Type>::i8p_llcx\r\n  28:     0x7ffd8ab55c27 - <rustc_codegen_llvm[9a9d157ce05375fd]::LlvmCodegenBackend as rustc_codegen_ssa[2bee8b82c4446057]::traits::backend::CodegenBackend>::codegen_crate\r\n  29:     0x7ffd8ab22fb4 - rustc_interface[69d3caabc375c611]::util::commit_date_str\r\n  30:     0x7ffd8ab35479 - <rustc_interface[69d3caabc375c611]::passes::LintStoreExpandImpl as rustc_expand[c0c33283810bd582]::base::LintStoreExpand>::pre_expansion_lint\r\n  31:     0x7ffd8ab1a47c - <rustc_interface[69d3caabc375c611]::queries::Queries>::ongoing_codegen\r\n  32:     0x7ffd8aad35d9 - <unknown>\r\n  33:     0x7ffd8ab0788a - <rustc_middle[49f1884e63a0b2fb]::ty::SymbolName as core[a02b6f37981f1b5f]::fmt::Display>::fmt\r\n  34:     0x7ffd8aad5412 - <unknown>\r\n  35:     0x7ffd8ab071b7 - rustc_driver[1077fc6396368dcf]::args::arg_expand_all\r\n  36:     0x7ffd8aaf8899 - <unknown>\r\n  37:     0x7ffd8aaf0900 - <unknown>\r\n  38:     0x7ffdaff5e53c - std::sys::windows::thread::Thread::new::h5087fa34a1aa6292\r\n  39:     0x7ffe21237034 - BaseThreadInitThunk\r\n  40:     0x7ffe21a226a1 - RtlUserThreadStart\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md  \r\n\r\nnote: rustc 1.66.0-nightly (a24a020e6 2022-10-18) running on x86_64-pc-windows-msvc\r\n\r\nnote: compiler flags: --crate-type bin -C opt-level=3 -C embed-bitcode=no -C target-cpu=native\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [collect_and_partition_mono_items] collect_and_partition_mono_items\r\nend of query stack\r\nerror: could not compile `two`\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "SeeSpring", "id": 30735327, "node_id": "MDQ6VXNlcjMwNzM1MzI3", "avatar_url": "https://avatars.githubusercontent.com/u/30735327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SeeSpring", "html_url": "https://github.com/SeeSpring", "followers_url": "https://api.github.com/users/SeeSpring/followers", "following_url": "https://api.github.com/users/SeeSpring/following{/other_user}", "gists_url": "https://api.github.com/users/SeeSpring/gists{/gist_id}", "starred_url": "https://api.github.com/users/SeeSpring/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SeeSpring/subscriptions", "organizations_url": "https://api.github.com/users/SeeSpring/orgs", "repos_url": "https://api.github.com/users/SeeSpring/repos", "events_url": "https://api.github.com/users/SeeSpring/events{/privacy}", "received_events_url": "https://api.github.com/users/SeeSpring/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/103278/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/103278/timeline", "performed_via_github_app": null, "state_reason": "completed"}