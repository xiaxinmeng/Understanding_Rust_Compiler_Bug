{"url": "https://api.github.com/repos/rust-lang/rust/issues/88905", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/88905/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/88905/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/88905/events", "html_url": "https://github.com/rust-lang/rust/issues/88905", "id": 994733428, "node_id": "MDU6SXNzdWU5OTQ3MzM0Mjg=", "number": 88905, "title": "String cloning is not optimized the same way as String construction", "user": {"login": "SadiinsoSnowfall", "id": 32017313, "node_id": "MDQ6VXNlcjMyMDE3MzEz", "avatar_url": "https://avatars.githubusercontent.com/u/32017313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SadiinsoSnowfall", "html_url": "https://github.com/SadiinsoSnowfall", "followers_url": "https://api.github.com/users/SadiinsoSnowfall/followers", "following_url": "https://api.github.com/users/SadiinsoSnowfall/following{/other_user}", "gists_url": "https://api.github.com/users/SadiinsoSnowfall/gists{/gist_id}", "starred_url": "https://api.github.com/users/SadiinsoSnowfall/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SadiinsoSnowfall/subscriptions", "organizations_url": "https://api.github.com/users/SadiinsoSnowfall/orgs", "repos_url": "https://api.github.com/users/SadiinsoSnowfall/repos", "events_url": "https://api.github.com/users/SadiinsoSnowfall/events{/privacy}", "received_events_url": "https://api.github.com/users/SadiinsoSnowfall/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 2011781731, "node_id": "MDU6TGFiZWwyMDExNzgxNzMx", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs", "name": "T-libs", "color": "bfd4f2", "default": false, "description": "Relevant to the library team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": {"login": "rustbot", "id": 47979223, "node_id": "MDQ6VXNlcjQ3OTc5MjIz", "avatar_url": "https://avatars.githubusercontent.com/u/47979223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rustbot", "html_url": "https://github.com/rustbot", "followers_url": "https://api.github.com/users/rustbot/followers", "following_url": "https://api.github.com/users/rustbot/following{/other_user}", "gists_url": "https://api.github.com/users/rustbot/gists{/gist_id}", "starred_url": "https://api.github.com/users/rustbot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rustbot/subscriptions", "organizations_url": "https://api.github.com/users/rustbot/orgs", "repos_url": "https://api.github.com/users/rustbot/repos", "events_url": "https://api.github.com/users/rustbot/events{/privacy}", "received_events_url": "https://api.github.com/users/rustbot/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rustbot", "id": 47979223, "node_id": "MDQ6VXNlcjQ3OTc5MjIz", "avatar_url": "https://avatars.githubusercontent.com/u/47979223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rustbot", "html_url": "https://github.com/rustbot", "followers_url": "https://api.github.com/users/rustbot/followers", "following_url": "https://api.github.com/users/rustbot/following{/other_user}", "gists_url": "https://api.github.com/users/rustbot/gists{/gist_id}", "starred_url": "https://api.github.com/users/rustbot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rustbot/subscriptions", "organizations_url": "https://api.github.com/users/rustbot/orgs", "repos_url": "https://api.github.com/users/rustbot/repos", "events_url": "https://api.github.com/users/rustbot/events{/privacy}", "received_events_url": "https://api.github.com/users/rustbot/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2021-09-13T10:41:48Z", "updated_at": "2021-10-10T17:03:25Z", "closed_at": "2021-10-10T17:03:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "I don't know if it is really worth looking into, but I think I found some weird behavior in the rust compiler:\r\nLet's consider the two following functions ([godbolt link](https://godbolt.org/z/T5M1a1e8a)):\r\n```rust\r\npub fn nop(a: &String) {\r\n    a.as_str().to_owned();\r\n}\r\n\r\npub fn complex(a: &String) {\r\n    a.to_owned();\r\n}\r\n```\r\nThey both allocate a String struct but do not use or return it. Rustc is able to optimize away the first one, but not the second one.\r\nIf we dig deeper, we can observe that the compiler is not able to optimize away the `to_owned` and `clone` method when called on a string. Let's look at the following functions ([godbolt link](https://godbolt.org/z/qM5vEx69x)):\r\n```rust\r\npub fn a() {\r\n    \"ok\".to_owned();\r\n}\r\n\r\npub fn b() {\r\n    \"ok\".to_owned().clone();\r\n}\r\n\r\npub fn c() {\r\n    \"ok\".to_owned().as_str().to_owned();\r\n}\r\n\r\npub fn d() {\r\n    \"ok\".to_owned().to_owned();\r\n}\r\n\r\npub fn e() {\r\n    String::from(\"ok\");\r\n}\r\n```\r\nThe fonctions `a`, `c` and `e` are optimized away even on opt-level 2. Whereas the functions `b` and `d` are not and still produce calls to `alloc`, `dealloc`, `drop_in_place`, etc...\r\n\r\nLooking at the stdlib code, [`<&str>::to_owned`](https://github.com/rust-lang/rust/blob/master/library/alloc/src/str.rs#L219) internally calls [`<&[u8]>::to_owned`](https://github.com/rust-lang/rust/blob/master/library/alloc/src/slice.rs#L833), which calls [`<&[u8]>::to_vec`](https://github.com/rust-lang/rust/blob/master/library/alloc/src/slice.rs#L466), which calls [`<&[u8]>::to_vec_in`](https://github.com/rust-lang/rust/blob/master/library/alloc/src/slice.rs#L489) which ends up calling [`hack::to_vec`](https://github.com/rust-lang/rust/blob/master/library/alloc/src/slice.rs#L185).\r\n\r\n[`String::to_string`](https://github.com/rust-lang/rust/blob/master/library/alloc/src/string.rs#L2462) calls [`String::to_owned`](https://github.com/rust-lang/rust/blob/master/library/alloc/src/borrow.rs#L89) which calls [`String::clone`](https://github.com/rust-lang/rust/blob/master/library/alloc/src/string.rs#L1837) which calls [`Vec<u8>::clone`](https://github.com/rust-lang/rust/blob/master/library/alloc/src/vec/mod.rs#L2414) which calls  [`<&[u8]>::to_vec_in`](https://github.com/rust-lang/rust/blob/master/library/alloc/src/slice.rs#L489) with the only difference from the `<&str>::to_owned` path being that the possibly custom allocator of the `Vec` internal buffer is cloned and passed to `<&[u8]>::to_vec_in` in `Vec<u8>::clone`.\r\n\r\nIs it possible that rustc is not able to correctly inline the allocator functions when the default allocator is not directly assumed ?\r\n\r\nThis was tested on `Rustc 1.55` and `Rustc 1.57.0-nightly (b69fe5726 2021-09-10)\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\nThis issue has been assigned to @notriddle via [this comment](https://github.com/rust-lang/rust/issues/88905#issuecomment-918550093).\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"notriddle\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": {"login": "SadiinsoSnowfall", "id": 32017313, "node_id": "MDQ6VXNlcjMyMDE3MzEz", "avatar_url": "https://avatars.githubusercontent.com/u/32017313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SadiinsoSnowfall", "html_url": "https://github.com/SadiinsoSnowfall", "followers_url": "https://api.github.com/users/SadiinsoSnowfall/followers", "following_url": "https://api.github.com/users/SadiinsoSnowfall/following{/other_user}", "gists_url": "https://api.github.com/users/SadiinsoSnowfall/gists{/gist_id}", "starred_url": "https://api.github.com/users/SadiinsoSnowfall/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SadiinsoSnowfall/subscriptions", "organizations_url": "https://api.github.com/users/SadiinsoSnowfall/orgs", "repos_url": "https://api.github.com/users/SadiinsoSnowfall/repos", "events_url": "https://api.github.com/users/SadiinsoSnowfall/events{/privacy}", "received_events_url": "https://api.github.com/users/SadiinsoSnowfall/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/88905/reactions", "total_count": 3, "+1": 2, "-1": 0, "laugh": 1, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/88905/timeline", "performed_via_github_app": null, "state_reason": "completed"}