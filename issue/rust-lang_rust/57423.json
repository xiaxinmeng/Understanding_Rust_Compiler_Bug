{"url": "https://api.github.com/repos/rust-lang/rust/issues/57423", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/57423/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/57423/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/57423/events", "html_url": "https://github.com/rust-lang/rust/issues/57423", "id": 396635929, "node_id": "MDU6SXNzdWUzOTY2MzU5Mjk=", "number": 57423, "title": "Issue in consuming pipe on arm7", "user": {"login": "RCasatta", "id": 6470319, "node_id": "MDQ6VXNlcjY0NzAzMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/6470319?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RCasatta", "html_url": "https://github.com/RCasatta", "followers_url": "https://api.github.com/users/RCasatta/followers", "following_url": "https://api.github.com/users/RCasatta/following{/other_user}", "gists_url": "https://api.github.com/users/RCasatta/gists{/gist_id}", "starred_url": "https://api.github.com/users/RCasatta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RCasatta/subscriptions", "organizations_url": "https://api.github.com/users/RCasatta/orgs", "repos_url": "https://api.github.com/users/RCasatta/repos", "events_url": "https://api.github.com/users/RCasatta/events{/privacy}", "received_events_url": "https://api.github.com/users/RCasatta/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-07T20:23:30Z", "updated_at": "2019-01-08T16:41:40Z", "closed_at": "2019-01-08T16:41:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a rust program which reads from stdin and sometimes it receives 0 from read_line even if I know there are many more lines before the outputs of the previous program ends. (read lines are different across launches in the following example 53542171 lines are read, sometimes it reads everything which are about 300M lines)\r\n\r\nI am not sure I am not panicking somewhere else but the strange thins is the same program always works on x86_64 platform (this is armv7)\r\n\r\nconsuming the output for example with `| wc -l` always work \r\n\r\nsources are here https://github.com/RCasatta/rustat/tree/v2 \r\n\r\n```\r\ntime ./bitcoin-iterate/bitcoin-iterate --blockdir /mnt/ssd/bitcoin/blocks -q --tx=$\r\n%bN %bl %bc %bH %tX' | RUST_BACKTRACE=full ./rustat/target/release/rustat\r\nstarting op_return processer\r\nstarting blocks processer\r\nstarting Segwit processer\r\nbitcoin-iterate: Skipped 13965764 at end of /mnt/ssd/bitcoin/blocks/blk01485.dat\r\nReceived 0 as read_line after 53542171 lines\r\nsending None to line_senders[0]\r\nsending None to line_senders[1]\r\nthread '<unnamed>ending line parser 0\r\n' panicked at 'failed to parse line: Io(Custom { kind: UnexpectedEof, error: StringError(\"failed to $\r\nill whole buffer\") })', libcore/result.rs:ending line parser 1\r\n1009:5sending None to line_senders[2]\r\n\r\nsending None to line_senders[3]\r\nending line parser 3\r\nstack backtrace:\r\n   0:   0x5326eb - std::sys::unix::backtrace::tracing::imp::unwind_backtrace::h2534e215b56d3dcf\r\n                       at libstd/sys/unix/backtrace/tracing/gcc_s.rs:49\r\n   1:   0x529a27 - std::sys_common::backtrace::print::hdffa0e0e2a717179\r\n                       at libstd/sys_common/backtrace.rs:71\r\n                       at libstd/sys_common/backtrace.rs:59\r\n   2:   0x525bef - std::panicking::default_hook::{{closure}}::h938b45f75e1e39a4\r\n                       at libstd/panicking.rs:211\r\n   3:   0x525867 - std::panicking::default_hook::hd9fdeabb669e43fc\r\n                       at libstd/panicking.rs:227\r\n   4:   0x5263eb - std::panicking::rust_panic_with_hook::h781594332e68f14e\r\n                       at libstd/panicking.rs:476\r\n   5:   0x525faf - std::panicking::continue_panic_fmt::h986a35a447ed28cf\r\n                       at libstd/panicking.rs:390\r\n   6:   0x525e97 - rust_begin_unwind\r\n                       at libstd/panicking.rs:325\r\n   7:   0x5694e3 - core::panicking::panic_fmt::hca5dc4e8b320bc56\r\n                       at libcore/panicking.rs:77\r\n   8:   0x5166a3 - core::result::unwrap_failed::ha22f88ccb2ce83ed\r\n   9:   0x50391f - std::sys_common::backtrace::__rust_begin_short_backtrace::he443d31fa1795249\r\n  10:   0x51a353 - std::panicking::try::do_call::hd6efff1203506246                           [27/610]\r\n  11:   0x53adeb - __rust_maybe_catch_panic\r\n                       at libpanic_unwind/lib.rs:102\r\n  12:   0x5052a7 - <F as alloc::boxed::FnBox<A>>::call_box::h5aa894c61e9323d5\r\n  13:   0x533557 - std::sys_common::thread::start_thread::h2eb9063e808b4355\r\n                       at liballoc/boxed.rs:682\r\n                       at libstd/sys_common/thread.rs:24\r\n  14:   0x52698f - std::sys::unix::thread::Thread::new::thread_start::h1c12c88a139098f3\r\n                       at libstd/sys/unix/thread.rs:90\r\nthread 'main' panicked at 'line_parser failed to join: Any', libcore/result.rs:1009:5\r\nstack backtrace:\r\n   0:   0x5326eb - std::sys::unix::backtrace::tracing::imp::unwind_backtrace::h2534e215b56d3dcf\r\n                       at libstd/sys/unix/backtrace/tracing/gcc_s.rs:49\r\n   1:   0x529a27 - std::sys_common::backtrace::print::hdffa0e0e2a717179\r\n                       at libstd/sys_common/backtrace.rs:71\r\n                       at libstd/sys_common/backtrace.rs:59\r\n   2:   0x525bef - std::panicking::default_hook::{{closure}}::h938b45f75e1e39a4\r\n                       at libstd/panicking.rs:211\r\n   3:   0x525867 - std::panicking::default_hook::hd9fdeabb669e43fc\r\n                       at libstd/panicking.rs:227\r\n   4:   0x5263eb - std::panicking::rust_panic_with_hook::h781594332e68f14e\r\n   5:   0x525faf - std::panicking::continue_panic_fmt::h986a35a447ed28cf                      [5/610]\r\n                       at libstd/panicking.rs:390\r\n   6:   0x525e97 - rust_begin_unwind\r\n                       at libstd/panicking.rs:325\r\n   7:   0x5694e3 - core::panicking::panic_fmt::hca5dc4e8b320bc56\r\n                       at libcore/panicking.rs:77\r\n   8:   0x516353 - core::result::unwrap_failed::h20c0d0eb43913a43\r\n   9:   0x502fe7 - rustat::main::hf8527cc1fc92370e\r\n  10:   0x5039e3 - std::rt::lang_start::{{closure}}::ha435600535d49604\r\n  11:   0x525e0f - std::panicking::try::do_call::hd6aaccba94060c88\r\n                       at libstd/rt.rs:59\r\n                       at libstd/panicking.rs:310\r\n  12:   0x53adeb - __rust_maybe_catch_panic\r\n                       at libpanic_unwind/lib.rs:102\r\n  13:   0x525d5b - std::panicking::try::h3baffb5b8337159b\r\n                       at libstd/panicking.rs:289\r\n  14:   0x523d53 - std::rt::lang_start_internal::h6b7407d3925ded7f\r\n                       at libstd/panic.rs:392\r\n                       at libstd/rt.rs:58\r\n  15:   0x5033bf - main\r\n  16: 0xb6db8fe5 - __libc_start_main\r\n\r\nreal    37m7.149s\r\nuser    140m21.616s\r\nsys     30m43.543s\r\n```\r\n\r\n```\r\n$ rustc --version --verbose\r\nrustc 1.31.1 (b6c32da9b 2018-12-18)\r\nbinary: rustc\r\ncommit-hash: b6c32da9b0481e3e9d737153286b3ff8aa39a22c\r\ncommit-date: 2018-12-18\r\nhost: armv7-unknown-linux-gnueabihf\r\nrelease: 1.31.1\r\nLLVM version: 8.0\r\n```\r\n\r\nI can try to emulate the bug with simpler code is that could help", "closed_by": {"login": "RCasatta", "id": 6470319, "node_id": "MDQ6VXNlcjY0NzAzMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/6470319?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RCasatta", "html_url": "https://github.com/RCasatta", "followers_url": "https://api.github.com/users/RCasatta/followers", "following_url": "https://api.github.com/users/RCasatta/following{/other_user}", "gists_url": "https://api.github.com/users/RCasatta/gists{/gist_id}", "starred_url": "https://api.github.com/users/RCasatta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RCasatta/subscriptions", "organizations_url": "https://api.github.com/users/RCasatta/orgs", "repos_url": "https://api.github.com/users/RCasatta/repos", "events_url": "https://api.github.com/users/RCasatta/events{/privacy}", "received_events_url": "https://api.github.com/users/RCasatta/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/57423/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/57423/timeline", "performed_via_github_app": null, "state_reason": "completed"}