{"url": "https://api.github.com/repos/rust-lang/rust/issues/43414", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/43414/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/43414/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/43414/events", "html_url": "https://github.com/rust-lang/rust/issues/43414", "id": 244871912, "node_id": "MDU6SXNzdWUyNDQ4NzE5MTI=", "number": 43414, "title": "Calling web worker function from Emscripten", "user": {"login": "afshinm", "id": 314326, "node_id": "MDQ6VXNlcjMxNDMyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/314326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/afshinm", "html_url": "https://github.com/afshinm", "followers_url": "https://api.github.com/users/afshinm/followers", "following_url": "https://api.github.com/users/afshinm/following{/other_user}", "gists_url": "https://api.github.com/users/afshinm/gists{/gist_id}", "starred_url": "https://api.github.com/users/afshinm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/afshinm/subscriptions", "organizations_url": "https://api.github.com/users/afshinm/orgs", "repos_url": "https://api.github.com/users/afshinm/repos", "events_url": "https://api.github.com/users/afshinm/events{/privacy}", "received_events_url": "https://api.github.com/users/afshinm/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 509440702, "node_id": "MDU6TGFiZWw1MDk0NDA3MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-asmjs", "name": "O-asmjs", "color": "6e6ec0", "default": false, "description": "Target: asm.js - http://asmjs.org/"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-07-22T21:12:44Z", "updated_at": "2017-07-28T11:39:58Z", "closed_at": "2017-07-28T11:39:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm not sure if this one is an issue or a question but I'm trying to create a web worker from Rust, calling a function in the worker file and passing some data to the main thread.\r\n\r\n**main.rs**:\r\n\r\n```rust\r\nmod externs;\r\nextern crate libc;\r\n    \r\nfn main() {\r\n    println!(\"starting worker\");\r\n    let worker = externs::create_worker(\"./worker.js\");\r\n    externs::call_worker(worker, \"worker_fn\", \"\", 0);\r\n    println!(\"worker called\");\r\n}\r\n```\r\n\r\n**worker.rs**:\r\n\r\n```rust\r\n#![feature(link_args)]\r\n#[link_args = \"-s EXPORTED_FUNCTIONS=['_worker_fn'] -s BUILD_AS_WORKER=1\"]\r\n    \r\nextern crate libc;\r\n    \r\nmod externs;\r\n    \r\nextern {}\r\n    \r\nfn main() {\r\n    println!(\"worker main\");\r\n}\r\n    \r\n#[no_mangle]\r\npub extern fn worker_fn() {\r\n    println!(\"hello from the other side!\");\r\n}\r\n```\r\n\r\n\r\nWhen I compile the worker and main files, I'm able to see the message from `main.rs` and even the \"worker main\" message in the worker file. I can also see that the browser sends a request to `worker.js`, but it seems like the main thread does not call the `worker_fn` inside the worker file.\r\n\r\nThis is the `externs` file:\r\n\r\n```rust\r\n    use std::ffi::CString;\r\n    use libc::*;\r\n    use std::str::FromStr;\r\n\r\n    /// Creating web worker\r\n    pub fn create_worker(url: &str) -> ffi::worker_handle {\r\n        let url = CString::new(url).unwrap();\r\n        let ptr = url.as_ptr();\r\n        unsafe { ffi::emscripten_create_worker(ptr) }\r\n    }\r\n    \r\n    extern \"C\" fn do_something_handler(arg1: *mut c_char, arg2: c_int, arg3: *mut c_void) {\r\n        println!(\"worker done!\");\r\n    }\r\n    \r\n    /// Creating web worker\r\n    pub fn call_worker(worker: ffi::worker_handle, func_name: &str, data: &str, size: i32) {\r\n        let func_name = CString::new(func_name).unwrap();\r\n    \r\n        let mut string = String::from_str(data).unwrap();\r\n        let bytes = string.into_bytes();\r\n        let mut cchar : Vec<c_char> = bytes.iter().map(|&w| w as c_char).collect();\r\n        let data_slice = cchar.as_mut_slice();\r\n    \r\n        let mut state = 42;\r\n        let state_ptr: *mut c_void = &mut state as *mut _ as *mut c_void;\r\n    \r\n        unsafe {\r\n            ffi::emscripten_call_worker(\r\n                worker,\r\n                func_name.as_ptr(),\r\n                data_slice.as_mut_ptr(),\r\n                size as c_int,\r\n                Some(do_something_handler),\r\n                state_ptr\r\n            )\r\n        };\r\n    }\r\n    \r\n    // This is mostly standard Rust-C FFI stuff.\r\n    mod ffi {\r\n        use libc::*;\r\n        pub type worker_handle = c_int;\r\n        pub type em_worker_callback_func = Option<unsafe extern \"C\" fn(arg1: *mut c_char,\r\n                                                                       arg2: c_int,\r\n                                                                       arg3: *mut c_void)>;\r\n    \r\n        extern \"C\" {\r\n            pub fn emscripten_run_script_int(x: *const c_char) -> c_int;\r\n            pub fn emscripten_create_worker(url: *const c_char) -> worker_handle;\r\n            pub fn emscripten_call_worker(\r\n                worker: worker_handle,\r\n                funcname: *const c_char,\r\n                data: *mut c_char,\r\n                size: c_int,\r\n                callback: em_worker_callback_func,\r\n                arg: *mut c_void\r\n            );\r\n            pub fn emscripten_worker_respond(data: *mut c_char, size: c_int);\r\n            pub fn emscripten_worker_respond_provisionally(data: *mut c_char, size: c_int);\r\n        }\r\n    }\r\n```\r\n\r\nI don't understand what the problem is. Should I somehow change the worker file or maybe even the `link_args`?\r\n", "closed_by": {"login": "afshinm", "id": 314326, "node_id": "MDQ6VXNlcjMxNDMyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/314326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/afshinm", "html_url": "https://github.com/afshinm", "followers_url": "https://api.github.com/users/afshinm/followers", "following_url": "https://api.github.com/users/afshinm/following{/other_user}", "gists_url": "https://api.github.com/users/afshinm/gists{/gist_id}", "starred_url": "https://api.github.com/users/afshinm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/afshinm/subscriptions", "organizations_url": "https://api.github.com/users/afshinm/orgs", "repos_url": "https://api.github.com/users/afshinm/repos", "events_url": "https://api.github.com/users/afshinm/events{/privacy}", "received_events_url": "https://api.github.com/users/afshinm/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/43414/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/43414/timeline", "performed_via_github_app": null, "state_reason": "completed"}