{"url": "https://api.github.com/repos/rust-lang/rust/issues/86364", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/86364/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/86364/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/86364/events", "html_url": "https://github.com/rust-lang/rust/issues/86364", "id": 922660967, "node_id": "MDU6SXNzdWU5MjI2NjA5Njc=", "number": 86364, "title": "run non-const Display/Debug impls for const panic message", "user": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 268744493, "node_id": "MDU6TGFiZWwyNjg3NDQ0OTM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-fn", "name": "A-const-fn", "color": "f7e101", "default": false, "description": "Area: const fn foo(..) {..}. Pure functions which can be applied at compile time."}, {"id": 900795185, "node_id": "MDU6TGFiZWw5MDA3OTUxODU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-eval", "name": "A-const-eval", "color": "f7e101", "default": false, "description": "Area: constant evaluation (mir interpretation)"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2021-06-16T14:06:15Z", "updated_at": "2023-04-05T17:29:42Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Given that the CTFE core engine already supports the entire display machinery (demonstrated by the fact that it works in Miri), we might ~~alternatively~~ poke a small hole into the const checks that allows executing formatting machinery from `panic_fmt` only -- something like \"miri unleashed\", but more targeted.\r\n\r\n_Originally posted by @RalfJung in https://github.com/rust-lang/rust/issues/78356#issuecomment-862283228_\r\n\r\nBasically the same rationale as allowing -> _ return types in the parser, to get a better error later. In this case, when you use panic!() in CTFE, you are going to fail the build *anyway*, so we can just as well run something that may fail to get evaluated because it does something horribly unconst.\r\n\r\nThe only problem is that then const fn can execute non-const code at runtime during the panic machinery and before actually panicking, which may not be desirable.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/86364/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/86364/timeline", "performed_via_github_app": null, "state_reason": null}