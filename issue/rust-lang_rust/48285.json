{"url": "https://api.github.com/repos/rust-lang/rust/issues/48285", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/48285/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/48285/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/48285/events", "html_url": "https://github.com/rust-lang/rust/issues/48285", "id": 297958622, "node_id": "MDU6SXNzdWUyOTc5NTg2MjI=", "number": 48285, "title": "Disambiguating associated types from super traits in a trait object", "user": {"login": "vitalyd", "id": 549403, "node_id": "MDQ6VXNlcjU0OTQwMw==", "avatar_url": "https://avatars.githubusercontent.com/u/549403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vitalyd", "html_url": "https://github.com/vitalyd", "followers_url": "https://api.github.com/users/vitalyd/followers", "following_url": "https://api.github.com/users/vitalyd/following{/other_user}", "gists_url": "https://api.github.com/users/vitalyd/gists{/gist_id}", "starred_url": "https://api.github.com/users/vitalyd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vitalyd/subscriptions", "organizations_url": "https://api.github.com/users/vitalyd/orgs", "repos_url": "https://api.github.com/users/vitalyd/repos", "events_url": "https://api.github.com/users/vitalyd/events{/privacy}", "received_events_url": "https://api.github.com/users/vitalyd/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-02-17T00:19:07Z", "updated_at": "2023-03-20T13:03:47Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "Suppose you have a trait:\r\n```\r\ntrait Foo: std::ops::Index<usize> + std::ops::Index<isize> {}\r\n```\r\nHow do you declare a `Foo` trait object, say a `Box`? The `Output` associated types need to be specified but they need to be disambiguated between the two super traits.  Projections that I\u2019ve tried don\u2019t seem to work but it\u2019s possible I didn\u2019t try the right incarnation.\r\n\r\nThis stems from the https://users.rust-lang.org/t/how-to-specify-associated-types-with-same-name-in-generics/15677 post.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/48285/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/48285/timeline", "performed_via_github_app": null, "state_reason": null}