{"url": "https://api.github.com/repos/rust-lang/rust/issues/61320", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/61320/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/61320/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/61320/events", "html_url": "https://github.com/rust-lang/rust/issues/61320", "id": 449877990, "node_id": "MDU6SXNzdWU0NDk4Nzc5OTA=", "number": 61320, "title": "3 \"broken MIR\" ICEs when combining futures and assoc. types", "user": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 149689562, "node_id": "MDU6TGFiZWwxNDk2ODk1NjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-associated-items", "name": "A-associated-items", "color": "f7e101", "default": false, "description": "Area: Associated items such as associated types and consts."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 256133398, "node_id": "MDU6TGFiZWwyNTYxMzMzOTg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-mir", "name": "A-mir", "color": "f7e101", "default": false, "description": "Area: Mid-level IR (MIR) - https://blog.rust-lang.org/2016/04/19/MIR.html"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2019-05-29T15:32:19Z", "updated_at": "2019-06-05T02:08:56Z", "closed_at": "2019-06-05T02:08:56Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The following code, which uses `futures`, a few self-defined traits with associated types, and `where`-clauses on those, causes 3 \"broken MIR\" ICEs when built ([Playground link](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=d4e8481ec3756f66299d2f33ef3604c8)):\r\n\r\n```rust\r\nuse futures::{Future, IntoFuture};\r\n\r\nstruct Request<T>(T);\r\n\r\ntrait RequestContext {}\r\nimpl<T> RequestContext for T {}\r\nstruct NoContext;\r\nimpl AsRef<NoContext> for NoContext {\r\n    fn as_ref(&self) -> &Self { &NoContext }\r\n}\r\n\r\ntype BoxedError = Box<dyn ::std::error::Error + Send + Sync>;\r\ntype DefaultFuture<T, E> = Box<dyn Future<Item=T, Error=E> + Send>;\r\n\r\ntrait Guard: Sized {\r\n    type Result: IntoFuture<Item = Self, Error = BoxedError>;\r\n    fn from_request(\r\n        request: &Request<()>, \r\n    ) -> Self::Result;\r\n}\r\n\r\ntrait FromRequest: Sized {\r\n    type Context;\r\n    type Future: Future<Item = Self, Error = BoxedError> + Send;\r\n    fn from_request(\r\n        request: Request<()>, \r\n    ) -> Self::Future;\r\n}\r\n\r\nstruct MyGuard;\r\nimpl Guard for MyGuard {\r\n    type Result = Result<Self, BoxedError>;\r\n    fn from_request(_request: &Request<()>) -> Self::Result {\r\n        Ok(MyGuard)\r\n    }\r\n}\r\n\r\nstruct Generic<I> {\r\n    _inner: I,\r\n}\r\n\r\nimpl<I> FromRequest for Generic<I>\r\nwhere\r\n    MyGuard: Guard,\r\n    <MyGuard as Guard>::Result:\r\n        futures::IntoFuture<Item = MyGuard, Error = BoxedError>,\r\n    <<MyGuard as Guard>::Result as futures::IntoFuture>::Future:\r\n        Send,\r\n    I: FromRequest<Context = NoContext>\r\n{\r\n    type Future = DefaultFuture<Self, BoxedError>;\r\n    type Context = NoContext;\r\n    fn from_request(\r\n        headers: Request<()>,\r\n    ) -> DefaultFuture<Self, BoxedError> {\r\n        let _future = <MyGuard as Guard>::from_request(&headers)\r\n            .into_future()\r\n            .and_then(move |_| {\r\n                <I as FromRequest>::from_request(headers)\r\n                    .into_future()\r\n                    .and_then(move |fld_inner| {\r\n                        Ok(Generic {\r\n                            _inner: fld_inner,\r\n                        })\r\n                        .into_future()\r\n                    })\r\n            });\r\n        panic!();\r\n    }\r\n}\r\n```\r\n\r\nCompiler output:\r\n\r\n```\r\nerror: internal compiler error: broken MIR in DefId(0/0:29 ~ playground[aa0a]::{{impl}}[3]::from_request[0]) (Terminator { source_info: SourceInfo { span: src/lib.rs:56:23: 57:27, scope: scope[0] }, kind: _4 = const futures::future::IntoFuture::into_future(move _5) -> [return: bb3, unwind: bb4] }): call dest mismatch (futures::future::result_::FutureResult<MyGuard, std::boxed::Box<dyn std::error::Error + std::marker::Send + std::marker::Sync>> <- <std::result::Result<MyGuard, std::boxed::Box<dyn std::error::Error + std::marker::Send + std::marker::Sync>> as futures::future::IntoFuture>::Future): NoSolution\r\n  --> src/lib.rs:56:64\r\n   |\r\n56 |         let _future = <MyGuard as Guard>::from_request(&headers)\r\n   |                                                                ^\r\n\r\nerror: internal compiler error: broken MIR in DefId(0/1:20 ~ playground[aa0a]::{{impl}}[3]::from_request[0]::{{closure}}[0]) (NoSolution): could not prove Binder(TraitPredicate(<<std::result::Result<MyGuard, std::boxed::Box<(dyn std::error::Error + std::marker::Send + std::marker::Sync + 'static)>> as futures::future::IntoFuture>::Future as std::marker::Send>))\r\n  --> src/lib.rs:61:31\r\n   |\r\n61 |                       .and_then(move |fld_inner| {\r\n   |  _______________________________^\r\n62 | |                         Ok(Generic {\r\n63 | |                             _inner: fld_inner,\r\n64 | |                         })\r\n65 | |                         .into_future()\r\n66 | |                     })\r\n   | |_____________________^\r\n\r\nerror: internal compiler error: broken MIR in DefId(0/0:29 ~ playground[aa0a]::{{impl}}[3]::from_request[0]) (NoSolution): could not prove Binder(TraitPredicate(<<std::result::Result<MyGuard, std::boxed::Box<(dyn std::error::Error + std::marker::Send + std::marker::Sync + 'static)>> as futures::future::IntoFuture>::Future as std::marker::Send>))\r\n  --> src/lib.rs:58:23\r\n   |\r\n58 |               .and_then(move |_| {\r\n   |  _______________________^\r\n59 | |                 <I as FromRequest>::from_request(headers)\r\n60 | |                     .into_future()\r\n61 | |                     .and_then(move |fld_inner| {\r\n...  |\r\n66 | |                     })\r\n67 | |             });\r\n   | |_____________^\r\n\r\nthread 'rustc' panicked at 'no errors encountered even though `delay_span_bug` issued', src/librustc_errors/lib.rs:354:17\r\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.35.0 (3c235d560 2019-05-20) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C codegen-units=1 -C debuginfo=2 --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nerror: Could not compile `playground`.\r\n```\r\n\r\nAny help on minifying the code would be welcome. Inlining the `futures` trait definitions into the crate makes one of the ICEs go away, so this version pulls it in as an external crate.", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/61320/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/61320/timeline", "performed_via_github_app": null, "state_reason": "completed"}