{"url": "https://api.github.com/repos/rust-lang/rust/issues/55005", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/55005/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/55005/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/55005/events", "html_url": "https://github.com/rust-lang/rust/issues/55005", "id": 369433250, "node_id": "MDU6SXNzdWUzNjk0MzMyNTA=", "number": 55005, "title": "Arc::drop has a (potentially) dangling shared ref", "user": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 60344715, "node_id": "MDU6TGFiZWw2MDM0NDcxNQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-medium", "name": "P-medium", "color": "eb6420", "default": false, "description": "Medium priority"}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 267612997, "node_id": "MDU6TGFiZWwyNjc2MTI5OTc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-unsound", "name": "I-unsound", "color": "e11d21", "default": false, "description": "Issue: A soundness hole (worst kind of bug), see: https://en.wikipedia.org/wiki/Soundness"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 880020421, "node_id": "MDU6TGFiZWw4ODAwMjA0MjE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/WG-embedded", "name": "WG-embedded", "color": "c2e0c6", "default": false, "description": "Of interest to the embedded Working Group"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 65, "created_at": "2018-10-12T07:35:19Z", "updated_at": "2022-07-24T02:27:11Z", "closed_at": "2022-07-24T02:27:10Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Discovered by @Amanieu on [IRLO](https://internals.rust-lang.org/t/is-it-possible-to-be-memory-safe-with-deallocated-self/8457). Quoting their report:\r\n\r\n`Arc::drop` contains this code:\r\n```rust\r\nif self.inner().strong.fetch_sub(1, Release) != 1 {\r\n    return;\r\n}\r\n```\r\nOnce the current thread (Thread A) has decremented the reference count, Thread B could come in and free the `ArcInner`.\r\n\r\nThe problem becomes apparent when you look at the implementation of `fetch_sub`:\r\n```rust\r\npub fn fetch_sub(&self, val: $int_type, order: Ordering) -> $int_type {\r\n    unsafe { atomic_sub(self.v.get(), val, order) }\r\n    // HERE\r\n}\r\n```\r\nNote the point marked HERE: at this point we have released our claim to the `Arc` (as in, decremented the count), which means that Thread B might have freed the `ArcInner`. However the `&self` still points to the strong reference count in the `ArcInner` -- so `&self` dangles.\r\n\r\nOther instances of this:\r\n* https://github.com/rust-lang/rust/issues/65796", "closed_by": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/55005/reactions", "total_count": 7, "+1": 4, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 3, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/55005/timeline", "performed_via_github_app": null, "state_reason": "completed"}