{"url": "https://api.github.com/repos/rust-lang/rust/issues/80748", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/80748/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/80748/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/80748/events", "html_url": "https://github.com/rust-lang/rust/issues/80748", "id": 780070270, "node_id": "MDU6SXNzdWU3ODAwNzAyNzA=", "number": 80748, "title": "ICE'd (twice in a row!) when not enabling `const_generics` but a downstream crate that does enable and use it", "user": {"login": "mental32", "id": 27660514, "node_id": "MDQ6VXNlcjI3NjYwNTE0", "avatar_url": "https://avatars.githubusercontent.com/u/27660514?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mental32", "html_url": "https://github.com/mental32", "followers_url": "https://api.github.com/users/mental32/followers", "following_url": "https://api.github.com/users/mental32/following{/other_user}", "gists_url": "https://api.github.com/users/mental32/gists{/gist_id}", "starred_url": "https://api.github.com/users/mental32/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mental32/subscriptions", "organizations_url": "https://api.github.com/users/mental32/orgs", "repos_url": "https://api.github.com/users/mental32/repos", "events_url": "https://api.github.com/users/mental32/events{/privacy}", "received_events_url": "https://api.github.com/users/mental32/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1486687397, "node_id": "MDU6TGFiZWwxNDg2Njg3Mzk3", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-const_generics", "name": "F-const_generics", "color": "f9c0cc", "default": false, "description": "`#![feature(const_generics)]`"}, {"id": 2341291797, "node_id": "MDU6TGFiZWwyMzQxMjkxNzk3", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-generic_const_exprs", "name": "F-generic_const_exprs", "color": "f9c0cc", "default": false, "description": "`#![feature(generic_const_exprs)]`"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2021-01-06T05:44:13Z", "updated_at": "2021-02-11T18:46:12Z", "closed_at": "2021-02-11T18:46:12Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\nSo this time rustc ICE'd with a SIGILL, I'm not sure how bad that's supposed to be...\r\n\r\n### Code\r\n\r\ntree\r\n\r\n```\r\n\u251c\u2500\u2500 Cargo.toml\r\n\u251c\u2500\u2500 src\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 lib.rs\r\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 main.rs\r\n```\r\n\r\nmain.rs\r\n\r\n```Rust\r\n// #![feature(const_generics)]  // If you enable this feature in main.rs it all works fine!\r\n\r\nuse icey::*;\r\n\r\nfn main() {\r\n    let obj = TypeErasedObject::from(0usize);\r\n}\r\n```\r\n\r\nlib.rs:\r\n\r\n```Rust\r\n#![feature(const_evaluatable_checked)]\r\n#![feature(const_generics)]\r\n\r\nuse core::mem::{forget, size_of, MaybeUninit};\r\n\r\n#[repr(packed)]\r\npub struct TypeErasedObject<const N: usize> {\r\n    buf: [u8; N],\r\n}\r\n\r\nimpl<U> From<U> for TypeErasedObject<{ size_of::<U>() }> {\r\n    fn from(val: U) -> Self {\r\n        unsafe {\r\n            let mut obj = MaybeUninit::zeroed().assume_init();\r\n\r\n            core::intrinsics::copy_nonoverlapping(\r\n                &val as *const U,\r\n                &mut obj as *const _ as *mut U,\r\n                size_of::<U>(),\r\n            );\r\n\r\n            forget(val);\r\n\r\n            obj\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.51.0-nightly (da305a2b0 2021-01-05)\r\nbinary: rustc\r\ncommit-hash: da305a2b00530aa34dea4e48389204c26fa35dbb\r\ncommit-date: 2021-01-05\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.51.0-nightly\r\n```\r\n\r\n### Error output\r\n\r\n<details><summary><strong>Error output</strong></summary>\r\n<p>\r\n\r\n```\r\nmental@felix /t/icey (master) [101]> cargo run\r\nwarning: the feature `const_evaluatable_checked` is incomplete and may not be safe to use and/or cause compiler crashes\r\n --> src/lib.rs:1:12\r\n  |\r\n1 | #![feature(const_evaluatable_checked)]\r\n  |            ^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  |\r\n  = note: `#[warn(incomplete_features)]` on by default\r\n  = note: see issue #76560 <https://github.com/rust-lang/rust/issues/76560> for more information\r\n\r\nwarning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\r\n --> src/lib.rs:2:12\r\n  |\r\n2 | #![feature(const_generics)]\r\n  |            ^^^^^^^^^^^^^^\r\n  |\r\n  = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\r\n\r\nwarning: field is never read: `buf`\r\n --> src/lib.rs:8:5\r\n  |\r\n8 |     buf: [u8; N],\r\n  |     ^^^^^^^^^^^^\r\n  |\r\n  = note: `#[warn(dead_code)]` on by default\r\n\r\nwarning: 3 warnings emitted\r\n\r\n   Compiling icey v0.1.0 (/tmp/icey)\r\nwarning: unused variable: `obj`\r\n --> src/main.rs:6:9\r\n  |\r\n6 |     let obj = TypeErasedObject::from(0usize);\r\n  |         ^^^ help: if this is intentional, prefix it with an underscore: `_obj`\r\n  |\r\n  = note: `#[warn(unused_variables)]` on by default\r\n\r\nthread 'rustc' panicked at 'called `Result::unwrap()` on an `Err` value: ErrorReported', compiler/rustc_mir/src/monomorphize/collector.rs:746:84\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.51.0-nightly (da305a2b0 2021-01-05) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [collect_and_partition_mono_items] collect_and_partition_mono_items\r\nend of query stack\r\nwarning: 1 warning emitted\r\n\r\nerror: internal compiler error: Encountered error `Unimplemented` selecting `Binder(<icey::TypeErasedObject<8_usize> as std::convert::From<usize>>)` during codegen\r\n  |\r\n  = note: delayed at compiler/rustc_trait_selection/src/traits/codegen.rs:68:32\r\n\r\nerror: internal compiler error: broken MIR in DefId(0:4 ~ icey[a815]::main) (CanonicalUserTypeAnnotation { user_ty: Canonical { max_universe: U0, variables: [CanonicalVarInfo { kind: Const(U0) }, CanonicalVarInfo { kind: Ty(General(U0)) }], value: TypeOf(DefId(2:1991 ~ core[27a9]::convert::From::from), UserSubsts { substs: [icey::TypeErasedObject<^0>, ^1], user_self_ty: None }) }, span: src/main.rs:6:15: 6:37 (#0), inferred_ty: fn(usize) -> icey::TypeErasedObject<{_: usize}> {<icey::TypeErasedObject<{_: usize}> as std::convert::From<usize>>::from} }): bad user type AscribeUserType(fn(usize) -> icey::TypeErasedObject<{_: usize}> {<icey::TypeErasedObject<{_: usize}> as std::convert::From<usize>>::from}, DefId(2:1991 ~ core[27a9]::convert::From::from) UserSubsts { substs: [icey::TypeErasedObject<{_: _}>, _], user_self_ty: None }): NoSolution\r\n  |\r\n  = note: delayed at compiler/rustc_mir/src/borrow_check/type_check/mod.rs:253:27\r\n\r\nthread 'rustc' panicked at 'no errors encountered even though `delay_span_bug` issued', compiler/rustc_errors/src/lib.rs:974:13\r\nstack backtrace:\r\n   0:     0x7ff631e847f7 - std::backtrace_rs::backtrace::libunwind::trace::h746c3e9529d524bc\r\n                               at /rustc/da305a2b00530aa34dea4e48389204c26fa35dbb/library/std/src/../../backtrace/src/backtrace/libunwind.rs:90:5\r\n   1:     0x7ff631e847f7 - std::backtrace_rs::backtrace::trace_unsynchronized::h84373278bfb39e0c\r\n                               at /rustc/da305a2b00530aa34dea4e48389204c26fa35dbb/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\r\n   2:     0x7ff631e847f7 - std::sys_common::backtrace::_print_fmt::h517324efde750597\r\n                               at /rustc/da305a2b00530aa34dea4e48389204c26fa35dbb/library/std/src/sys_common/backtrace.rs:67:5\r\n   3:     0x7ff631e847f7 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hf594ab77fac89284\r\n                               at /rustc/da305a2b00530aa34dea4e48389204c26fa35dbb/library/std/src/sys_common/backtrace.rs:46:22\r\n   4:     0x7ff631ef507c - core::fmt::write::h3868db8542c90941\r\n                               at /rustc/da305a2b00530aa34dea4e48389204c26fa35dbb/library/core/src/fmt/mod.rs:1078:17\r\n   5:     0x7ff631e76732 - std::io::Write::write_fmt::h3f6656f045fa877f\r\n                               at /rustc/da305a2b00530aa34dea4e48389204c26fa35dbb/library/std/src/io/mod.rs:1518:15\r\n   6:     0x7ff631e884c5 - std::sys_common::backtrace::_print::hda7655c057c24dcc\r\n                               at /rustc/da305a2b00530aa34dea4e48389204c26fa35dbb/library/std/src/sys_common/backtrace.rs:49:5\r\n   7:     0x7ff631e884c5 - std::sys_common::backtrace::print::h546a6c8431d46287\r\n                               at /rustc/da305a2b00530aa34dea4e48389204c26fa35dbb/library/std/src/sys_common/backtrace.rs:36:9\r\n   8:     0x7ff631e884c5 - std::panicking::default_hook::{{closure}}::h006dd083853faf51\r\n                               at /rustc/da305a2b00530aa34dea4e48389204c26fa35dbb/library/std/src/panicking.rs:208:50\r\n   9:     0x7ff631e88023 - std::panicking::default_hook::hf0f9afb1017317fc\r\n                               at /rustc/da305a2b00530aa34dea4e48389204c26fa35dbb/library/std/src/panicking.rs:225:9\r\n  10:     0x7ff6326ef36b - rustc_driver::report_ice::h7f38a651c021f7c4\r\n  11:     0x7ff631e88dc6 - std::panicking::rust_panic_with_hook::hb7a19826c029b1d6\r\n                               at /rustc/da305a2b00530aa34dea4e48389204c26fa35dbb/library/std/src/panicking.rs:595:17\r\n  12:     0x7ff631e888e7 - std::panicking::begin_panic_handler::{{closure}}::hde71edcd925d0c5e\r\n                               at /rustc/da305a2b00530aa34dea4e48389204c26fa35dbb/library/std/src/panicking.rs:497:13\r\n  13:     0x7ff631e84cbc - std::sys_common::backtrace::__rust_end_short_backtrace::h8a3c7d6cea578919\r\n                               at /rustc/da305a2b00530aa34dea4e48389204c26fa35dbb/library/std/src/sys_common/backtrace.rs:141:18\r\n  14:     0x7ff631e88849 - rust_begin_unwind\r\n                               at /rustc/da305a2b00530aa34dea4e48389204c26fa35dbb/library/std/src/panicking.rs:493:5\r\n  15:     0x7ff631e887fb - std::panicking::begin_panic_fmt::hee67ce14b77d0396\r\n                               at /rustc/da305a2b00530aa34dea4e48389204c26fa35dbb/library/std/src/panicking.rs:435:5\r\n  16:     0x7ff635808a23 - rustc_errors::HandlerInner::flush_delayed::h336555a5d5079cda\r\n  17:     0x7ff6358072a4 - <rustc_errors::HandlerInner as core::ops::drop::Drop>::drop::he52694f8b8fafc7c\r\n  18:     0x7ff634bba8e8 - core::ptr::drop_in_place::hb66213509a6069c4\r\n  19:     0x7ff634bbc88d - <alloc::rc::Rc<T> as core::ops::drop::Drop>::drop::h162a1b2d5ffb70e8\r\n  20:     0x7ff634bb8a5d - core::ptr::drop_in_place::h1b39670ebb19752a\r\n  21:     0x7ff634bb8473 - rustc_span::with_source_map::h36095e686800efef\r\n  22:     0x7ff634bc3b7a - rustc_interface::interface::create_compiler_and_run::hbd9692e1ed97f25b\r\n  23:     0x7ff634bb8737 - std::sys_common::backtrace::__rust_begin_short_backtrace::hc05e05dc1f4978f3\r\n  24:     0x7ff634b9c55a - core::ops::function::FnOnce::call_once{{vtable.shim}}::h105413704138b627\r\n  25:     0x7ff631e98fea - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::hea1090dbdcecbf5a\r\n                               at /rustc/da305a2b00530aa34dea4e48389204c26fa35dbb/library/alloc/src/boxed.rs:1480:9\r\n  26:     0x7ff631e98fea - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::h8d5723d3912bd325\r\n                               at /rustc/da305a2b00530aa34dea4e48389204c26fa35dbb/library/alloc/src/boxed.rs:1480:9\r\n  27:     0x7ff631e98fea - std::sys::unix::thread::Thread::new::thread_start::hc17a425ca2995724\r\n                               at /rustc/da305a2b00530aa34dea4e48389204c26fa35dbb/library/std/src/sys/unix/thread.rs:71:17\r\n  28:     0x7ff631d9a3e9 - start_thread\r\n  29:     0x7ff631cb7293 - __GI___clone\r\n  30:                0x0 - <unknown>\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.51.0-nightly (da305a2b0 2021-01-05) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\nend of query stack\r\nthread panicked while panicking. aborting.\r\nerror: could not compile `icey`\r\n\r\nCaused by:\r\n  process didn't exit successfully: `rustc --crate-name icey --edition=2018 src/main.rs --error-format=json --json=diagnostic-rendered-ansi --crate-type bin --emit=dep-info,link -C embed-bitcode=no -C debuginfo=2 -C metadata=9186bff72f6e5e0b -C extra-filename=-9186bff72f6e5e0b --out-dir /tmp/icey/target/debug/deps -C incremental=/tmp/icey/target/debug/incremental -L dependency=/tmp/icey/target/debug/deps --extern icey=/tmp/icey/target/debug/deps/libicey-738371281f5478e6.rlib` (signal: 4, SIGILL: illegal instruction)\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "mental32", "id": 27660514, "node_id": "MDQ6VXNlcjI3NjYwNTE0", "avatar_url": "https://avatars.githubusercontent.com/u/27660514?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mental32", "html_url": "https://github.com/mental32", "followers_url": "https://api.github.com/users/mental32/followers", "following_url": "https://api.github.com/users/mental32/following{/other_user}", "gists_url": "https://api.github.com/users/mental32/gists{/gist_id}", "starred_url": "https://api.github.com/users/mental32/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mental32/subscriptions", "organizations_url": "https://api.github.com/users/mental32/orgs", "repos_url": "https://api.github.com/users/mental32/repos", "events_url": "https://api.github.com/users/mental32/events{/privacy}", "received_events_url": "https://api.github.com/users/mental32/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/80748/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/80748/timeline", "performed_via_github_app": null, "state_reason": "completed"}