{"url": "https://api.github.com/repos/rust-lang/rust/issues/67027", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/67027/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/67027/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/67027/events", "html_url": "https://github.com/rust-lang/rust/issues/67027", "id": 532827017, "node_id": "MDU6SXNzdWU1MzI4MjcwMTc=", "number": 67027, "title": "Linux version of nonblocking TcpListener::accept differs from other platforms", "user": {"login": "hashmap", "id": 417244, "node_id": "MDQ6VXNlcjQxNzI0NA==", "avatar_url": "https://avatars.githubusercontent.com/u/417244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hashmap", "html_url": "https://github.com/hashmap", "followers_url": "https://api.github.com/users/hashmap/followers", "following_url": "https://api.github.com/users/hashmap/following{/other_user}", "gists_url": "https://api.github.com/users/hashmap/gists{/gist_id}", "starred_url": "https://api.github.com/users/hashmap/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hashmap/subscriptions", "organizations_url": "https://api.github.com/users/hashmap/orgs", "repos_url": "https://api.github.com/users/hashmap/repos", "events_url": "https://api.github.com/users/hashmap/events{/privacy}", "received_events_url": "https://api.github.com/users/hashmap/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 123110, "node_id": "MDU6TGFiZWwxMjMxMTA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-linux", "name": "O-linux", "color": "6e6ec0", "default": false, "description": "Operating system: Linux"}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-12-04T17:22:15Z", "updated_at": "2019-12-04T17:35:30Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "If `TcpListener` is in non-blocking mode then accepted streams inherit this property on all platforms except Linux, where `accept4` is used instead of `accept`.\r\n\r\nThis code (with commented out `stream.set_nonblocking(false)`)  unexpectedly works as expected on Linux only, because `stream` is in blocking mode.\r\n\r\n```\r\n let listener = TcpListener::bind(\"0.0.0.0:3333\").unwrap();\r\n    listener.set_nonblocking(true).expect(\"set nonblocking\");\r\n\r\n    println!(\"Server listening on port 3333\");\r\n    loop {\r\n        match listener.accept() {\r\n            Ok((mut stream, _)) => {\r\n                println!(\"New connection\");\r\n                //stream.set_nonblocking(false).expect(\"nonblock\");\r\n                stream\r\n                    .set_read_timeout(Some(Duration::from_secs(10)))\r\n                    .expect(\"set timeout\");\r\n                let mut data = [0 as u8; 2];\r\n                match stream.read_exact(&mut data) {\r\n                    Ok(_) => println!(\"Got message!\"),\r\n                    Err(e) => println!(\"Failed to receive data: {:?}\", e),\r\n                }\r\n            }\r\n            Err(_e) => {\r\n                println!(\"Error: {:?}\", e);\r\n            }\r\n        }\r\n    }\r\n\r\n```\r\n\r\n`accept4` man page explains:\r\n```\r\nOn Linux, the new socket returned by accept() does not inherit file status\r\nflags such as O_NONBLOCK and O_ASYNC from the listening socket. \r\nThis behavior differs from the canonical BSD sockets implementation.\r\nPortable programs should not rely on inheritance or noninheritance\r\nof file status flags and always explicitly set all required flags on the socket\r\nreturned from accept(). \r\n```\r\n\r\nI agree that code above should also set non_blocking explicitly, at the same time it would be nice to behave the same way on all platoftms.\r\n\r\n## Meta\r\nrustc --version --verbose\r\nrustc 1.37.0 (eae3437df 2019-08-13)\r\nbinary: rustc\r\ncommit-hash: eae3437dfe991621e8afdc82734f4a172d7ddf9b\r\ncommit-date: 2019-08-13\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.37.0\r\nLLVM version: 8.0\r\n\r\n(but it applies to multiple versions)", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/67027/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/67027/timeline", "performed_via_github_app": null, "state_reason": null}