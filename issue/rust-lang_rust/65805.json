{"url": "https://api.github.com/repos/rust-lang/rust/issues/65805", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/65805/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/65805/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/65805/events", "html_url": "https://github.com/rust-lang/rust/issues/65805", "id": 512463348, "node_id": "MDU6SXNzdWU1MTI0NjMzNDg=", "number": 65805, "title": "impl Trait does not capture lifetime of generic argument", "user": {"login": "jonhoo", "id": 176295, "node_id": "MDQ6VXNlcjE3NjI5NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/176295?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonhoo", "html_url": "https://github.com/jonhoo", "followers_url": "https://api.github.com/users/jonhoo/followers", "following_url": "https://api.github.com/users/jonhoo/following{/other_user}", "gists_url": "https://api.github.com/users/jonhoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonhoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonhoo/subscriptions", "organizations_url": "https://api.github.com/users/jonhoo/orgs", "repos_url": "https://api.github.com/users/jonhoo/repos", "events_url": "https://api.github.com/users/jonhoo/events{/privacy}", "received_events_url": "https://api.github.com/users/jonhoo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37544, "node_id": "MDU6TGFiZWwzNzU0NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-typesystem", "name": "A-typesystem", "color": "f7e101", "default": false, "description": "Area: The type system"}, {"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 631673608, "node_id": "MDU6TGFiZWw2MzE2NzM2MDg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-impl-trait", "name": "A-impl-trait", "color": "f7e101", "default": false, "description": "Area: impl Trait. Universally / existentially quantified anonymous types with static dispatch."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-10-25T11:29:10Z", "updated_at": "2019-10-26T12:07:25Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "According to [RFC 1951](https://github.com/rust-lang/rfcs/blob/master/text/1951-expand-impl-trait.md), `impl Trait` in return position should capture the lifetime of any associated generic parameters. However, in this code, that logic appears not to work ([playground](https://play.rust-lang.org/?version=beta&mode=debug&edition=2018&gist=62d220b0533fcb9530ee5f2c75ac31c4)):\r\n\r\n```rust\r\nuse std::future::Future;\r\nuse std::pin::Pin;\r\n\r\nstruct A;\r\n\r\nimpl A {\r\n    fn a<T>(&self, t: T) -> impl Future<Output = ()> {\r\n        let _ = t;\r\n        async {}\r\n    }\r\n}\r\n\r\nstruct B(A);\r\n\r\nimpl B {\r\n    fn works<'a, T: 'a>(\r\n        self,\r\n        t: T,\r\n    ) -> impl Future<Output = (Self, impl Future<Output = ()> + 'a)> + 'a {\r\n        async move {\r\n            let f = Pin::from(Box::new(self.0.a(t)) as Box<dyn Future<Output = _>>);\r\n            (self, f)\r\n        }\r\n    }\r\n\r\n    fn doesnt_work<T>(self, t: T) -> impl Future<Output = (Self, impl Future<Output = ()>)> {\r\n        async move {\r\n            let f = Pin::from(Box::new(self.0.a(t)) as Box<dyn Future<Output = _>>);\r\n            (self, f)\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nSpecifically, the compiler gives two _almost_ identical errors for the `doesnt_work` method:\r\n```\r\nerror[E0310]: the parameter type `T` may not live long enough\r\n  --> src/lib.rs:28:31\r\n   |\r\n26 |     fn doesnt_work<T>(self, t: T) -> impl Future<Output = (Self, impl Future<Output = ()>)> {\r\n   |                    - help: consider adding an explicit lifetime bound `T: 'static`...\r\n27 |         async move {\r\n28 |             let f = Pin::from(Box::new(self.0.a(t)) as Box<dyn Future<Output = _>>);\r\n   |                               ^^^^^^^^^^^^^^^^^^^^^\r\n   |\r\nnote: ...so that the type `impl std::future::Future` will meet its required lifetime bounds\r\n  --> src/lib.rs:28:31\r\n   |\r\n28 |             let f = Pin::from(Box::new(self.0.a(t)) as Box<dyn Future<Output = _>>);\r\n   |                               ^^^^^^^^^^^^^^^^^^^^^\r\n```\r\nand\r\n```\r\nerror[E0310]: the parameter type `T` may not live long enough\r\n  --> src/lib.rs:28:31\r\n   |\r\n26 |     fn doesnt_work<T>(self, t: T) -> impl Future<Output = (Self, impl Future<Output = ()>)> {\r\n   |                    - help: consider adding an explicit lifetime bound `T: 'static`...\r\n27 |         async move {\r\n28 |             let f = Pin::from(Box::new(self.0.a(t)) as Box<dyn Future<Output = _>>);\r\n   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n   |\r\nnote: ...so that it can be closed over into an object\r\n  --> src/lib.rs:28:31\r\n   |\r\n28 |             let f = Pin::from(Box::new(self.0.a(t)) as Box<dyn Future<Output = _>>);\r\n   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n```\r\n\r\nI was (perhaps mistakenly) under the impression that the semantics of `impl Trait` in return position should be as the explicit lifetimes on the `works` method indicate, but that doesn't seem to be the case? When the lifetimes are explicitly annotated, as in the `works` method, the method compiles just fine.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/65805/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/65805/timeline", "performed_via_github_app": null, "state_reason": null}