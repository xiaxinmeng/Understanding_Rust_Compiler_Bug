{"url": "https://api.github.com/repos/rust-lang/rust/issues/87143", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/87143/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/87143/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/87143/events", "html_url": "https://github.com/rust-lang/rust/issues/87143", "id": 944872028, "node_id": "MDU6SXNzdWU5NDQ4NzIwMjg=", "number": 87143, "title": "Codegen bug: `repr(C)` `const`s containing a reference don't inline", "user": {"login": "Radbuglet", "id": 10578060, "node_id": "MDQ6VXNlcjEwNTc4MDYw", "avatar_url": "https://avatars.githubusercontent.com/u/10578060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Radbuglet", "html_url": "https://github.com/Radbuglet", "followers_url": "https://api.github.com/users/Radbuglet/followers", "following_url": "https://api.github.com/users/Radbuglet/following{/other_user}", "gists_url": "https://api.github.com/users/Radbuglet/gists{/gist_id}", "starred_url": "https://api.github.com/users/Radbuglet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Radbuglet/subscriptions", "organizations_url": "https://api.github.com/users/Radbuglet/orgs", "repos_url": "https://api.github.com/users/Radbuglet/repos", "events_url": "https://api.github.com/users/Radbuglet/events{/privacy}", "received_events_url": "https://api.github.com/users/Radbuglet/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234956, "node_id": "MDU6TGFiZWwyMzQ5NTY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-codegen", "name": "A-codegen", "color": "f7e101", "default": false, "description": "Area: Code generation"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-07-14T23:35:41Z", "updated_at": "2021-07-18T09:17:16Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "Bug summary: `repr(C)` interacts weirdly with codegen and prevents `const` items from being inlined in specific scenarios.\r\n\r\nWhich specific scenarios? Here are the simplest conditions I could find:\r\n\r\n- The \"parent\" struct contained in the `const` must contain a separate `repr(C)` \"wrapper\" struct. The parent struct may be `repr(C)` or `repr(Rust)` but the wrapper struct must be `repr(C)`. A separate wrapper struct is always required.\r\n- Within the wrapper: references or pointers derived from references cause the bug. Pointer literals and non-pointer values do not.\r\n- The `const` must be wrapped in an enum in a non-const environment (i.e. roundtripping in a `const` definition won't cause the bug, but roundtripping in a non-`const` scope will)\r\n\r\nHere are the Godbolt playgrounds I derived these conditions from:\r\n\r\n- [`repr(C)` with `ref -> raw ptr` field](https://godbolt.org/z/14T3GPxMn)\r\n- [`repr(C)` with `ref -> raw ptr` field, no indirection](https://godbolt.org/z/6Es3Pq7P3)\r\n- [`repr(C)` with `ref -> raw ptr` field, `repr(C)` parent](https://godbolt.org/z/78a5eosET)\r\n- [`repr(rust)` with `ref -> raw ptr` field](https://godbolt.org/z/j9jY7K1Ms)\r\n- [`repr(C)` with `ref` field](https://godbolt.org/z/MGoET5drb)\r\n- [`repr(C)` with `raw bytes` field](https://godbolt.org/z/s8bea6j5v)\r\n- [`repr(C)` with `raw pointer literal` field](https://godbolt.org/z/41GMfo3qP)\r\n- [`repr(C)` with `ref -> raw ptr` field, early enum roundtrip](https://godbolt.org/z/3Pd498Pdd)\r\n\r\nafaik. Godbolt's nightly Rust compiler is a little behind but I checked the first example on my local nightly installation and got the exact same result. Here's the verbose version information for that installation:\r\n\r\n```\r\nrustc 1.53.0 (53cb7b09b 2021-06-17)\r\nbinary: rustc\r\ncommit-hash: 53cb7b09b00cbea8754ffb78e7e3cb521cb8af4b\r\ncommit-date: 2021-06-17\r\nhost: x86_64-pc-windows-msvc\r\nrelease: 1.53.0\r\nLLVM version: 12.0.1\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/87143/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/87143/timeline", "performed_via_github_app": null, "state_reason": null}