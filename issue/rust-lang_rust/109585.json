{"url": "https://api.github.com/repos/rust-lang/rust/issues/109585", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/109585/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/109585/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/109585/events", "html_url": "https://github.com/rust-lang/rust/issues/109585", "id": 1640436271, "node_id": "I_kwDOAAsO6M5hxxIv", "number": 109585, "title": "Clone derive macro's trait bound checker issues false positive on generic type parameter", "user": {"login": "tmvkrpxl0", "id": 41675181, "node_id": "MDQ6VXNlcjQxNjc1MTgx", "avatar_url": "https://avatars.githubusercontent.com/u/41675181?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmvkrpxl0", "html_url": "https://github.com/tmvkrpxl0", "followers_url": "https://api.github.com/users/tmvkrpxl0/followers", "following_url": "https://api.github.com/users/tmvkrpxl0/following{/other_user}", "gists_url": "https://api.github.com/users/tmvkrpxl0/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmvkrpxl0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmvkrpxl0/subscriptions", "organizations_url": "https://api.github.com/users/tmvkrpxl0/orgs", "repos_url": "https://api.github.com/users/tmvkrpxl0/repos", "events_url": "https://api.github.com/users/tmvkrpxl0/events{/privacy}", "received_events_url": "https://api.github.com/users/tmvkrpxl0/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2023-03-25T08:49:06Z", "updated_at": "2023-03-25T20:21:14Z", "closed_at": "2023-03-25T20:21:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI tried this code:\r\n\r\n```rust\r\nuse std::cell::RefCell;\r\nuse std::hash::Hash;\r\nuse std::rc::Rc;\r\n\r\n#[derive(Clone)]\r\npub struct Container {\r\n    pub object: SharedObject<Dummy>\r\n}\r\n\r\n#[derive(PartialEq, Eq, Clone)]\r\npub struct SharedObject<T:Hash + Eq+ PartialEq>(pub Rc<RefCell<T>>);\r\n\r\n#[derive(Hash, Eq, PartialEq)]\r\npub struct Dummy {}\r\n```\r\n\r\nI expected to see this happen: I expected it to compile just fine\r\n\r\nInstead, this happened: It fails with compilation error 'the trait bound `Dummy: Clone` is not satisfied'\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.70.0-nightly (8be3c2bda 2023-03-24)\r\nbinary: rustc\r\ncommit-hash: 8be3c2bda6b683f87b24714ba595e8b04faef54c\r\ncommit-date: 2023-03-24\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.70.0-nightly\r\nLLVM version: 15.0.7\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary>Backtrace</summary>\r\n<p>\r\n\r\n```\r\nRUST_BACKTRACE=1 cargo build\r\n   Compiling lisp_parser v0.1.0 (/home/tmvkrpxl0/CLionProjects/ExperimentalLanguage)\r\nwarning: unused import: `BitOr`\r\n --> src/types.rs:3:24\r\n  |\r\n3 | use std::ops::{BitAnd, BitOr};\r\n  |                        ^^^^^\r\n  |\r\n  = note: `#[warn(unused_imports)]` on by default\r\n\r\nerror[E0277]: the trait bound `Node: Clone` is not satisfied\r\n --> src/types.rs:8:10\r\n  |\r\n6 | #[derive(Eq, PartialEq, Clone)]\r\n  |                         ----- in this derive macro expansion\r\n7 | pub enum Type {\r\n8 |     Unit(SharedObject<Node>),\r\n  |          ^^^^^^^^^^^^^^^^^^ the trait `Clone` is not implemented for `Node`\r\n  |\r\nnote: required for `SharedObject<Node>` to implement `Clone`\r\n --> src/ast.rs:9:25\r\n  |\r\n9 | #[derive(PartialEq, Eq, Clone)]\r\n  |                         ^^^^^ unsatisfied trait bound introduced in this `derive` macro\r\n  = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)\r\n\r\nwarning: unused import: `Pointer`\r\n --> src/syntax_analyzer.rs:3:36\r\n  |\r\n3 | use std::fmt::{Display, Formatter, Pointer};\r\n  |                                    ^^^^^^^\r\n\r\nFor more information about this error, try `rustc --explain E0277`.\r\nwarning: `lisp_parser` (lib) generated 2 warnings\r\nerror: could not compile `lisp_parser` (lib) due to previous error; 2 warnings emitted\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\nThe purpose of `SharedObject` in my project is wrapper for Rc<RefCell<T>>. type alias may also work, but I've implemented Hash trait for using it as a key for HashMap. T in this context represent type that are big and should avoid being copied.\r\nI expect it to work well considering Rc is clone-able type.\r\nImplementing Clone manually instead works:\r\n```rs\r\nuse std::cell::RefCell;\r\nuse std::hash::Hash;\r\nuse std::rc::Rc;\r\n\r\n#[derive(Clone)]\r\npub struct Container {\r\n    pub object: SharedObject<Dummy>\r\n}\r\n\r\n#[derive(PartialEq, Eq)]\r\npub struct SharedObject<T:Hash + Eq+ PartialEq>(pub Rc<RefCell<T>>);\r\n\r\nimpl<T: Hash + Eq+ PartialEq> Clone for SharedObject<T> {\r\n    fn clone(&self) -> Self {\r\n        SharedObject(self.0.clone())\r\n    }\r\n}\r\n\r\n#[derive(Hash, Eq, PartialEq)]\r\npub struct Dummy {}\r\n```\r\n\r\nAfter looking through derive macro of Clone, I found that it expects all type parameters to also implement Clone. I find it bit strange, as wrapping it with Rc would work just fine.", "closed_by": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/109585/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/109585/timeline", "performed_via_github_app": null, "state_reason": "not_planned"}