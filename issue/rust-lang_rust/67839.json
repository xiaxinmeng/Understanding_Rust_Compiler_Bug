{"url": "https://api.github.com/repos/rust-lang/rust/issues/67839", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/67839/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/67839/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/67839/events", "html_url": "https://github.com/rust-lang/rust/issues/67839", "id": 545086646, "node_id": "MDU6SXNzdWU1NDUwODY2NDY=", "number": 67839, "title": "Attributes are reordered before they are passed to a proc-macro", "user": {"login": "Luro02", "id": 24826124, "node_id": "MDQ6VXNlcjI0ODI2MTI0", "avatar_url": "https://avatars.githubusercontent.com/u/24826124?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Luro02", "html_url": "https://github.com/Luro02", "followers_url": "https://api.github.com/users/Luro02/followers", "following_url": "https://api.github.com/users/Luro02/following{/other_user}", "gists_url": "https://api.github.com/users/Luro02/gists{/gist_id}", "starred_url": "https://api.github.com/users/Luro02/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Luro02/subscriptions", "organizations_url": "https://api.github.com/users/Luro02/orgs", "repos_url": "https://api.github.com/users/Luro02/repos", "events_url": "https://api.github.com/users/Luro02/events{/privacy}", "received_events_url": "https://api.github.com/users/Luro02/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 234948, "node_id": "MDU6TGFiZWwyMzQ5NDg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-attributes", "name": "A-attributes", "color": "f7e101", "default": false, "description": "Area: #[attributes(..)]"}, {"id": 132910982, "node_id": "MDU6TGFiZWwxMzI5MTA5ODI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-macros", "name": "A-macros", "color": "f7e101", "default": false, "description": "Area: All kinds of macros (custom derive, macro_rules!, proc macros, ..)"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2020-01-03T17:32:00Z", "updated_at": "2021-02-27T05:05:46Z", "closed_at": "2021-02-27T05:05:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I am working on a proc-macro, where I would like to give the user the option, to decide, which attributes (and doc comments) should be forwarded.\r\n\r\nFor example\r\n```rust\r\nuse shorthand::ShortHand;\r\n\r\n#[derive(ShortHand)]\r\n#[shorthand(enable(forward(doc)))]\r\n/// This should be in the output\r\n#[shorthand(disable(forward(doc)))]\r\n/// This line should not.\r\n#[shorthand(enable(forward(doc)))]\r\n/// This should be in the output\r\nstruct Example {\r\n    value: String,\r\n}\r\n```\r\n\r\nas you can see in the above case, the order of the attributes is very important.\r\nSadly the rust compiler (or the `proc_macro` crate) does reorder the attributes, before passing them to the function as a `TokenStream`.\r\n\r\n```rust\r\n#![feature(prelude_import)]\r\n#[prelude_import]                                                               \r\nuse std::prelude::v1::*;                                                        \r\n#[macro_use]                                                                    \r\nextern crate std;                                                               \r\nuse shorthand::ShortHand;                                                       \r\n/// This should be in the output\r\n/// This line should not.                                                       \r\n/// This should be in the output                                                \r\n#[shorthand(enable(forward(doc)))]\r\n#[shorthand(disable(forward(doc)))]                                             \r\n#[shorthand(enable(forward(doc)))]\r\nstruct Example {\r\n    value: String,\r\n}\r\n#[allow(dead_code)]\r\nimpl Example {\r\n    #[inline(always)]\r\n    pub fn value(&self) -> &String {\r\n        &self.value\r\n    }\r\n    #[inline(always)]\r\n    pub fn set_value(&mut self, value: String) -> &mut Self {\r\n        self.value = value;\r\n        self\r\n    }\r\n}\r\n#[allow(dead_code)]\r\nfn main() {}\r\n#[main]\r\npub fn main() -> () {\r\n    extern crate test;\r\n    test::test_main_static(&[])\r\n}\r\n```\r\n(this is the output of `cargo expand`, the proc-macro gets a similar `TokenStream`, where the order is not preserved either)\r\n\r\nI think this should not happen and the order should be preserved! Are there any good reasons for reordering them?\r\n\r\nrelated to #36211", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/67839/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/67839/timeline", "performed_via_github_app": null, "state_reason": "completed"}