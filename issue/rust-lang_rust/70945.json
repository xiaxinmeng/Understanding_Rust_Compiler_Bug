{"url": "https://api.github.com/repos/rust-lang/rust/issues/70945", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/70945/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/70945/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/70945/events", "html_url": "https://github.com/rust-lang/rust/issues/70945", "id": 597070575, "node_id": "MDU6SXNzdWU1OTcwNzA1NzU=", "number": 70945, "title": "[mir-opt] New optimization: eliminate concrete type -> trait object conversions", "user": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}, {"id": 1927601458, "node_id": "MDU6TGFiZWwxOTI3NjAxNDU4", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-mir-opt", "name": "A-mir-opt", "color": "f7e101", "default": false, "description": "Area: MIR optimizations"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-09T07:09:35Z", "updated_at": "2020-04-09T11:25:17Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Basically I am suggesting to turn\r\n\r\n```rust\r\nlet x = SomeStruct;\r\nlet y: &dyn SomeTrait = &x;\r\ny.some_method();\r\n```\r\n\r\ninto\r\n\r\n```rust\r\nlet x = SomeStruct;\r\nlet y: &SomeStruct = &x;\r\nx.some_method()\r\n```\r\n\r\nWhile the above code is likely never written, you can easily get this after inlining some function that e.g. returns a `Box<dyn Trait>` where the type that was turned into a trait object is always the same. I case the function is a trait method, we can't change the function into one returning `impl Trait`. This optimization would do the transformation for us.\r\n\r\ncc @rust-lang/wg-mir-opt ", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/70945/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/70945/timeline", "performed_via_github_app": null, "state_reason": null}