{"url": "https://api.github.com/repos/rust-lang/rust/issues/79843", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/79843/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/79843/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/79843/events", "html_url": "https://github.com/rust-lang/rust/issues/79843", "id": 759853104, "node_id": "MDU6SXNzdWU3NTk4NTMxMDQ=", "number": 79843, "title": "\"introduce a type parameter with a trait bound instead of using `impl Trait`\" diagnostic is malformed for async fns where the previous parameter is a borrow", "user": {"login": "Arnavion", "id": 1096010, "node_id": "MDQ6VXNlcjEwOTYwMTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1096010?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Arnavion", "html_url": "https://github.com/Arnavion", "followers_url": "https://api.github.com/users/Arnavion/followers", "following_url": "https://api.github.com/users/Arnavion/following{/other_user}", "gists_url": "https://api.github.com/users/Arnavion/gists{/gist_id}", "starred_url": "https://api.github.com/users/Arnavion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Arnavion/subscriptions", "organizations_url": "https://api.github.com/users/Arnavion/orgs", "repos_url": "https://api.github.com/users/Arnavion/repos", "events_url": "https://api.github.com/users/Arnavion/events{/privacy}", "received_events_url": "https://api.github.com/users/Arnavion/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 289259951, "node_id": "MDU6TGFiZWwyODkyNTk5NTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-help-wanted", "name": "E-help-wanted", "color": "02E10C", "default": false, "description": "Call for participation: Help is requested to fix this issue."}, {"id": 419557634, "node_id": "MDU6TGFiZWw0MTk1NTc2MzQ=", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-medium", "name": "E-medium", "color": "02e10c", "default": false, "description": "Call for participation: Experience needed to fix: Medium / intermediate"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1049510487, "node_id": "MDU6TGFiZWwxMDQ5NTEwNDg3", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-async-await", "name": "A-async-await", "color": "f7e101", "default": false, "description": "Area: Async & Await"}, {"id": 1183099971, "node_id": "MDU6TGFiZWwxMTgzMDk5OTcx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-suggestion-diagnostics", "name": "A-suggestion-diagnostics", "color": "f7e101", "default": false, "description": "Area: suggestions generated by the compiler applied by cargo fix"}, {"id": 1259721467, "node_id": "MDU6TGFiZWwxMjU5NzIxNDY3", "url": "https://api.github.com/repos/rust-lang/rust/labels/AsyncAwait-Triaged", "name": "AsyncAwait-Triaged", "color": "d4c5f9", "default": false, "description": "Async-await issues that have been triaged during a working group meeting."}, {"id": 1596299768, "node_id": "MDU6TGFiZWwxNTk2Mjk5NzY4", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-invalid-suggestion", "name": "D-invalid-suggestion", "color": "c9f7a3", "default": false, "description": "A structured suggestion resulting in incorrect code"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-12-08T23:07:39Z", "updated_at": "2020-12-21T07:00:01Z", "closed_at": "2020-12-21T07:00:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "(Edit: Actually, being an inherent fn doesn't matter. It happens with top-level fns too.)\r\n\r\nhttps://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=bc52a6f5c708462abbd91b4dd7d9b1ba\r\n\r\n```rust\r\ntrait Foo {\r\n    type Bar;\r\n    fn bar(&self) -> Self::Bar;\r\n}\r\n\r\nasync fn run(_: &(), foo: impl Foo) -> std::io::Result<()> {\r\n    fn assert_is_send<T: Send>(_: &T) {}\r\n\r\n    let bar = foo.bar();\r\n    assert_is_send(&bar);\r\n\r\n    Ok(())\r\n}\r\n```\r\n\r\nThis prints the diagnostic:\r\n\r\n```\r\nerror[E0277]: `<impl Foo as Foo>::Bar` cannot be sent between threads safely\r\n  --> src/lib.rs:10:20\r\n   |\r\n7  |     fn assert_is_send<T: Send>(_: &T) {}\r\n   |                          ---- required by this bound in `assert_is_send`\r\n...\r\n10 |     assert_is_send(&bar);\r\n   |                    ^^^^ `<impl Foo as Foo>::Bar` cannot be sent between threads safely\r\n   |\r\n   = help: the trait `Send` is not implemented for `<impl Foo as Foo>::Bar`\r\nhelp: introduce a type parameter with a trait bound instead of using `impl Trait`\r\n   |\r\n6  | async fn run(_: &, F: Foo(), foo: F) -> std::io::Result<()> where <F as Foo>::Bar: Send {\r\n   |                  ^^^^^^^^         ^                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n```\r\n\r\nThe suggestion in the last line is not valid syntax (`_: &,`). It also emits malformed syntax if the first parameter is a `&self` or `&mut self` parameter.\r\n\r\nThe diagnostic becomes well-formed if any of the following is done:\r\n\r\n- The first parameter is changed to `_: ()` instead of `_: &()`\r\n\r\n- The fn is not an async fn.\r\n\r\nIn either case, the diagnostic correctly says:\r\n\r\n```\r\n6  | fn run<F: Foo>(_: &(), foo: F) -> std::io::Result<()> where <F as Foo>::Bar: Send {\r\n   |       ^^^^^^^^              ^                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n```\r\n\r\n### Meta\r\n\r\nHappens on both nightly:\r\n\r\n```\r\nrustc 1.50.0-nightly (e792288df 2020-12-05)\r\nbinary: rustc\r\ncommit-hash: e792288df31636ca28108516c63a00ce4267063a\r\ncommit-date: 2020-12-05\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.50.0-nightly\r\n```\r\n\r\n... and stable:\r\n\r\n```\r\nrustc 1.48.0 (7eac88abb 2020-11-16)\r\nbinary: rustc\r\ncommit-hash: 7eac88abb2e57e752f3302f02be5f3ce3d7adfb4\r\ncommit-date: 2020-11-16\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.48.0\r\nLLVM version: 11.0\r\n```", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/79843/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/79843/timeline", "performed_via_github_app": null, "state_reason": "completed"}