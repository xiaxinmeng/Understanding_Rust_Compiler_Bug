{"url": "https://api.github.com/repos/rust-lang/rust/issues/27403", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/27403/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/27403/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/27403/events", "html_url": "https://github.com/rust-lang/rust/issues/27403", "id": 98265542, "node_id": "MDU6SXNzdWU5ODI2NTU0Mg==", "number": 27403, "title": "conflicting implementations when attempting to `impl<S> Into<S> for ArbitraryStructWithNoOtherImpls<S>`", "user": {"login": "jmesmon", "id": 103437, "node_id": "MDQ6VXNlcjEwMzQzNw==", "avatar_url": "https://avatars.githubusercontent.com/u/103437?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jmesmon", "html_url": "https://github.com/jmesmon", "followers_url": "https://api.github.com/users/jmesmon/followers", "following_url": "https://api.github.com/users/jmesmon/following{/other_user}", "gists_url": "https://api.github.com/users/jmesmon/gists{/gist_id}", "starred_url": "https://api.github.com/users/jmesmon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jmesmon/subscriptions", "organizations_url": "https://api.github.com/users/jmesmon/orgs", "repos_url": "https://api.github.com/users/jmesmon/repos", "events_url": "https://api.github.com/users/jmesmon/events{/privacy}", "received_events_url": "https://api.github.com/users/jmesmon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 60329014, "node_id": "MDU6TGFiZWw2MDMyOTAxNA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-low", "name": "P-low", "color": "eb6420", "default": false, "description": "Low priority"}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-07-30T21:10:20Z", "updated_at": "2017-10-25T05:02:45Z", "closed_at": "2017-10-25T05:02:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "At the very least (if this failure is expected), the error needs to be improved to actually point to the conflicting impl rather than simply printing the crate name and repeating the same function output that conflicts (if it is for some reason not possible to print better info about the previously declared conflicting impl, at the very least the compiler should stop repeating the output for the impl generating the error). On the diagnostics side, this appears related to #27218.\n\nNote that simply changing the struct (in this case, `GenX<T>`) to a non-generic struct allows the build to proceed without issue (example: http://is.gd/lRAhBF).\n\nIt appears that somehow the `impl<T, U> Into<U> for T where U: From<T>` is considered to be conflicting with all `Into<U>` impls where `U` is a generic parameter even in cases where `U` _does not_ impl `From<T>`.\n\nerror:\n\n```\n<anon>:6:1: 10:2 error: conflicting implementations for trait `core::convert::Into` [E0119]\n<anon>: 6 impl<S> Into<S> for GenX<S> {\n<anon>: 7     fn into(self) -> S {\n<anon>: 8         self.inner\n<anon>: 9     }\n<anon>:10 }\n<anon>:6:1: 10:2 help: see the detailed explanation for E0119\n<anon>:6:1: 10:2 note: conflicting implementation in crate `core`\n<anon>: 6 impl<S> Into<S> for GenX<S> {\n<anon>: 7     fn into(self) -> S {\n<anon>: 8         self.inner\n<anon>: 9     }\n<anon>:10 }\nerror: aborting due to previous error\n```\n\nsource:\n\n```\npub struct GenX<S> {\n    inner: S,\n}\nimpl<S> Into<S> for GenX<S> {\n    fn into(self) -> S {\n        self.inner\n    }\n}\n```\n\nplaypen: http://is.gd/zrwjve\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/27403/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/27403/timeline", "performed_via_github_app": null, "state_reason": "completed"}