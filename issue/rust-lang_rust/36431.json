{"url": "https://api.github.com/repos/rust-lang/rust/issues/36431", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/36431/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/36431/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/36431/events", "html_url": "https://github.com/rust-lang/rust/issues/36431", "id": 176504842, "node_id": "MDU6SXNzdWUxNzY1MDQ4NDI=", "number": 36431, "title": " \"lifetime parameter is not constrained...\" when using lifetime param to derive assoc. type from reference type trait impl", "user": {"login": "insaneinside", "id": 4030926, "node_id": "MDQ6VXNlcjQwMzA5MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/4030926?v=4", "gravatar_id": "", "url": "https://api.github.com/users/insaneinside", "html_url": "https://github.com/insaneinside", "followers_url": "https://api.github.com/users/insaneinside/followers", "following_url": "https://api.github.com/users/insaneinside/following{/other_user}", "gists_url": "https://api.github.com/users/insaneinside/gists{/gist_id}", "starred_url": "https://api.github.com/users/insaneinside/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/insaneinside/subscriptions", "organizations_url": "https://api.github.com/users/insaneinside/orgs", "repos_url": "https://api.github.com/users/insaneinside/repos", "events_url": "https://api.github.com/users/insaneinside/events{/privacy}", "received_events_url": "https://api.github.com/users/insaneinside/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37544, "node_id": "MDU6TGFiZWwzNzU0NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-typesystem", "name": "A-typesystem", "color": "f7e101", "default": false, "description": "Area: The type system"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-09-12T22:49:51Z", "updated_at": "2023-04-05T17:35:06Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This works ([playpen](https://is.gd/bFeGb7)):\n\n``` rust\nuse std::marker::PhantomData;\ntrait X {\n    type Q;\n}\ntrait Y { } \n\nstruct Z<T> { t: PhantomData<T> }\n\nimpl<'a, T> X for Z<T> where T: 'a, &'a T: Y {\n    type Q = u8;\n}\n```\n\nIf instead we add an associated type `Z` to `Y` and try to write `type Q = <&'a T as Y>::Z;` in the `X` implementation, it fails with \"error[E0207]: the lifetime parameter `'a` is not constrained by the impl trait, self type, or predicates\" ([playpen](https://is.gd/CqJvsp):\n\n``` rust\nuse std::marker::PhantomData;\ntrait X {\n    type Q;\n}\ntrait Y {\n    type Z;\n} \n\nstruct Z<T> { t: PhantomData<T> }\n\nimpl<'a, T> X for Z<T> where T: 'a, &'a T: Y {\n    type Q = <&'a T as Y>::Z;\n}\n```\n\nRust version: doesn't seem to matter; all of stable, beta, and nightly on play.rlo produce the same results.\n\nThanks to @QuietMisdreavus on IRC for helping with the reduced example.\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/36431/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/36431/timeline", "performed_via_github_app": null, "state_reason": null}