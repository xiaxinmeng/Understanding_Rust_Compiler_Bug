{"url": "https://api.github.com/repos/rust-lang/rust/issues/10074", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/10074/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/10074/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/10074/events", "html_url": "https://github.com/rust-lang/rust/issues/10074", "id": 21623402, "node_id": "MDU6SXNzdWUyMTYyMzQwMg==", "number": 10074, "title": "Should externfn! include an abi?", "user": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2013-10-26T00:05:07Z", "updated_at": "2013-10-30T13:04:34Z", "closed_at": "2013-10-30T13:04:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It's now recommended to use `externfn!(...)` to bind to a C library function, but those external functions are being declared with the implicit `Rust` abi. For example, this script errors out:\n\n```\nexternfn!(fn foo())\n//extern \"C\" { fn foo(); }\n\nfn bar(_f: extern \"C\" unsafe fn()) { }\n\nfn main() {\n    bar(foo)\n}\n```\n\nIt errors with:\n\n```\nfoo.rs:8:8: 8:11 error: mismatched types: expected `extern \"C\" unsafe fn()` but found `extern \"Rust\" unsafe fn()` (expected \"C\" fn but found \"Rust\" fn)\nfoo.rs:8     bar(foo)\n                 ^~~\nerror: aborting due to previous error\n```\n\nSwapping the comments gets it to compile fine. Is this safe? Given that #10052 says the Rust ABI is not precisely defined as the C ABI, should we change `externfn!` to include an ABI argument to future proof our bindings?\n", "closed_by": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/10074/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/10074/timeline", "performed_via_github_app": null, "state_reason": "completed"}