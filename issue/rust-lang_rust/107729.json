{"url": "https://api.github.com/repos/rust-lang/rust/issues/107729", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/107729/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/107729/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/107729/events", "html_url": "https://github.com/rust-lang/rust/issues/107729", "id": 1572774029, "node_id": "I_kwDOAAsO6M5dvqCN", "number": 107729, "title": "Rust 1.66 broke warp impl Reply on return types", "user": {"login": "jxs", "id": 1204690, "node_id": "MDQ6VXNlcjEyMDQ2OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1204690?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jxs", "html_url": "https://github.com/jxs", "followers_url": "https://api.github.com/users/jxs/followers", "following_url": "https://api.github.com/users/jxs/following{/other_user}", "gists_url": "https://api.github.com/users/jxs/gists{/gist_id}", "starred_url": "https://api.github.com/users/jxs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jxs/subscriptions", "organizations_url": "https://api.github.com/users/jxs/orgs", "repos_url": "https://api.github.com/users/jxs/repos", "events_url": "https://api.github.com/users/jxs/events{/privacy}", "received_events_url": "https://api.github.com/users/jxs/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 60344715, "node_id": "MDU6TGFiZWw2MDM0NDcxNQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-medium", "name": "P-medium", "color": "eb6420", "default": false, "description": "Medium priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2023-02-06T15:22:45Z", "updated_at": "2023-02-27T22:29:49Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi there,\r\nwe just noticed on `warp` CI that one of the examples [was broken](https://github.com/seanmonstar/warp/actions/runs/4044441194/jobs/6954592991#step:4:258) (we have `#![deny(warnings)]` for the examples). The output is as follows:\r\n```Rust\r\nwarning: opaque type `impl warp::Filter + warp::filter::FilterBase<Extract = impl Reply, Error = Rejection> + Clone` does not satisfy its associated type bounds\r\n  --> examples/todos.rs:39:22\r\n   |\r\n39 |     ) -> impl Filter<Extract = impl warp::Reply, Error = warp::Rejection> + Clone {\r\n   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n   |\r\n  ::: /home/jxs/dev/oss/warp/src/filter/mod.rs:40:19\r\n   |\r\n40 |     type Extract: Tuple; // + Send;\r\n   |                   ----- this associated type bound is unsatisfied for `impl Reply`\r\n   |\r\n   = note: `#[warn(opaque_hidden_inferred_bound)]` on by default\r\nhelp: add this bound\r\n   |\r\n39 |     ) -> impl Filter<Extract = impl warp::Reply + warp::generic::Tuple, Error = warp::Rejection> + Clone {\r\n   |                                                 ++++++++++++++++++++++\r\n\r\nwarning: opaque type `impl warp::Filter + warp::filter::FilterBase<Extract = impl Reply, Error = Rejection> + Clone` does not satisfy its associated type bounds\r\n  --> examples/todos.rs:49:22\r\n   |\r\n49 |     ) -> impl Filter<Extract = impl warp::Reply, Error = warp::Rejection> + Clone {\r\n   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n   |\r\n  ::: /home/jxs/dev/oss/warp/src/filter/mod.rs:40:19\r\n   |\r\n40 |     type Extract: Tuple; // + Send;\r\n   |                   ----- this associated type bound is unsatisfied for `impl Reply`\r\n   |\r\nhelp: add this bound\r\n   |\r\n49 |     ) -> impl Filter<Extract = impl warp::Reply + warp::generic::Tuple, Error = warp::Rejection> + Clone {\r\n   |                                                 ++++++++++++++++++++++\r\n\r\nwarning: opaque type `impl warp::Filter + warp::filter::FilterBase<Extract = impl Reply, Error = Rejection> + Clone` does not satisfy its associated type bounds\r\n  --> examples/todos.rs:60:22\r\n   |\r\n60 |     ) -> impl Filter<Extract = impl warp::Reply, Error = warp::Rejection> + Clone {\r\n   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n   |\r\n  ::: /home/jxs/dev/oss/warp/src/filter/mod.rs:40:19\r\n   |\r\n40 |     type Extract: Tuple; // + Send;\r\n   |                   ----- this associated type bound is unsatisfied for `impl Reply`\r\n   |\r\nhelp: add this bound\r\n   |\r\n60 |     ) -> impl Filter<Extract = impl warp::Reply + warp::generic::Tuple, Error = warp::Rejection> + Clone {\r\n   |                                                 ++++++++++++++++++++++\r\n\r\nwarning: opaque type `impl warp::Filter + warp::filter::FilterBase<Extract = impl Reply, Error = Rejection> + Clone` does not satisfy its associated type bounds\r\n  --> examples/todos.rs:71:22\r\n   |\r\n71 |     ) -> impl Filter<Extract = impl warp::Reply, Error = warp::Rejection> + Clone {\r\n   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n   |\r\n  ::: /home/jxs/dev/oss/warp/src/filter/mod.rs:40:19\r\n   |\r\n40 |     type Extract: Tuple; // + Send;\r\n   |                   ----- this associated type bound is unsatisfied for `impl Reply`\r\n   |\r\nhelp: add this bound\r\n   |\r\n71 |     ) -> impl Filter<Extract = impl warp::Reply + warp::generic::Tuple, Error = warp::Rejection> + Clone {\r\n   |                                                 ++++++++++++++++++++++\r\n\r\nwarning: opaque type `impl warp::Filter + warp::filter::FilterBase<Extract = impl Reply, Error = Rejection> + Clone` does not satisfy its associated type bounds\r\n  --> examples/todos.rs:82:22\r\n   |\r\n82 |     ) -> impl Filter<Extract = impl warp::Reply, Error = warp::Rejection> + Clone {\r\n   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n   |\r\n  ::: /home/jxs/dev/oss/warp/src/filter/mod.rs:40:19\r\n   |\r\n40 |     type Extract: Tuple; // + Send;\r\n   |                   ----- this associated type bound is unsatisfied for `impl Reply`\r\n   |\r\nhelp: add this bound\r\n   |\r\n82 |     ) -> impl Filter<Extract = impl warp::Reply + warp::generic::Tuple, Error = warp::Rejection> + Clone {\r\n   |                                                 ++++++++++++++++++++++\r\n```\r\nIt seems to have been introduced with Rust version `1.66` as with `1.65` the example compiles fine. I also tried with the latest nightly (`cargo 1.69.0-nightly (e84a7928d 2023-01-31)`) which still reproduces the problem. This feels like a bug as it being a warning doesn't provide help, btw `warp::generic::Tuple` is private.\r\nThe `todos` example should work as a MRE, but if required I can try to provide a simpler use case.\r\n\r\nThanks!\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/107729/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/107729/timeline", "performed_via_github_app": null, "state_reason": null}