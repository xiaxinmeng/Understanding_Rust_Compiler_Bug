{"url": "https://api.github.com/repos/rust-lang/rust/issues/58343", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/58343/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/58343/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/58343/events", "html_url": "https://github.com/rust-lang/rust/issues/58343", "id": 408520339, "node_id": "MDU6SXNzdWU0MDg1MjAzMzk=", "number": 58343, "title": "rpath is incorrect when crate links against compiler libraries", "user": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1244499056, "node_id": "MDU6TGFiZWwxMjQ0NDk5MDU2", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-miri", "name": "A-miri", "color": "f7e101", "default": false, "description": "Area: The miri tool"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-02-10T10:13:38Z", "updated_at": "2019-08-06T08:59:55Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "When compiling something like [Miri](https://github.com/solson/miri/) that links against librustc and other compiler libraries, even with `rpath = true` in my `Cargo.toml`, the resulting binary does not work without `LD_LIBRARY_PATH`:\r\n```\r\n$ target/release/miri\r\ntarget/release/miri: error while loading shared libraries: librustc_driver-e8ad12ee87dce48b.so: cannot open shared object file: No such file or directory\r\n```\r\nLooking at the bianary, I noticed a RUNPATH and no RPATH and learned that RPATH got deprecated in favor of RUNPATH:\r\n```\r\n$ readelf -d target/release/miri | egrep 'R(UN)?PATH'\r\n 0x000000000000001d (RUNPATH)            Library runpath: [$ORIGIN/../../../../rustc.2/build/x86_64-unknown-linux-gnu/stage2/lib/rustlib/x86_64-unknown-linux-gnu/lib:/home/r/src/rust/miri/lib/rustlib/x86_64-unknown-linux-gnu/lib]\r\n```\r\n\r\nHowever, after some research, two things strike me about this:\r\n* First of all, the number of \"../\" is wrong -- there is one too much. Starting at the directory containing the binary (`~/src/rust/miri/target/release`), going up 4 times leads to `~/src`, while the `rustc.2` directory is at `~/src/rust/rustc.2`.\r\n* ~~Second, according to [this](https://stackoverflow.com/questions/6324131/rpath-origin-not-having-desired-effect), the binary needs to have the `ORIGIN` flag set for `$ORIGIN` to actually work, and that flag is not set:~~ I verified this locally and that flag does not seem to be needed.\r\n\r\n    ```\r\n    $ readelf -d target/release/miri | egrep -i flag\r\n     0x000000000000001e (FLAGS)              BIND_NOW\r\n     0x000000006ffffffb (FLAGS_1)            Flags: NOW PIE\r\n    ```\r\n\r\nI am also really surprised that it encodes the path to the sysroot as relative to the binary, but the path to other libs compiled in the same crate as absolute to the binary. Shouldn't it rather be the other way around?", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/58343/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/58343/timeline", "performed_via_github_app": null, "state_reason": null}