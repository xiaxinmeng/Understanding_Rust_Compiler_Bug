{"url": "https://api.github.com/repos/rust-lang/rust/issues/52035", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/52035/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/52035/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/52035/events", "html_url": "https://github.com/rust-lang/rust/issues/52035", "id": 338070385, "node_id": "MDU6SXNzdWUzMzgwNzAzODU=", "number": 52035, "title": "Borrow lifetimes for function arguments should follow evaluation order, not lexical order", "user": {"login": "iainmerrick", "id": 252111, "node_id": "MDQ6VXNlcjI1MjExMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/252111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iainmerrick", "html_url": "https://github.com/iainmerrick", "followers_url": "https://api.github.com/users/iainmerrick/followers", "following_url": "https://api.github.com/users/iainmerrick/following{/other_user}", "gists_url": "https://api.github.com/users/iainmerrick/gists{/gist_id}", "starred_url": "https://api.github.com/users/iainmerrick/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iainmerrick/subscriptions", "organizations_url": "https://api.github.com/users/iainmerrick/orgs", "repos_url": "https://api.github.com/users/iainmerrick/repos", "events_url": "https://api.github.com/users/iainmerrick/events{/privacy}", "received_events_url": "https://api.github.com/users/iainmerrick/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-07-03T22:10:37Z", "updated_at": "2018-07-04T08:17:32Z", "closed_at": "2018-07-04T08:17:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've hit several cases where the borrow checker prevents reasonable-looking code where the same objects are used in both a function call and its arguments. This often happens when calling a method on \"self\" that also needs to reference self to calculate an argument.\r\n\r\nI tried this code:\r\n\r\n```\r\n#[derive(Debug, Default)]\r\nstruct Foo {\r\n\tvalues: Vec<usize>,\r\n}\r\n\r\nimpl Foo {\r\n\tfn size(&self) -> usize {\r\n\t\tself.values.len()\r\n\t}\r\n\tfn inc(&mut self) {\r\n\t\tself.values.push(self.size());\r\n\t}\r\n}\r\n\r\nfn main() {\r\n\tlet mut foo = Foo::default();\r\n\tfoo.inc();\r\n    println!(\"{:?}\", foo);\r\n}\r\n```\r\n\r\nI expected this to work because `self.size()` is calculated first; it just copies a value out and does not retain a reference. After this, `self.values.push` can safely take a mutable reference.\r\n\r\nInstead, this happened: <explanation>\r\n\r\n```\r\nerror[E0502]: cannot borrow `*self` as immutable because `self.values` is also borrowed as mutable\r\n  --> hello.rs:11:20\r\n   |\r\n11 |         self.values.push(self.size());\r\n   |         -----------      ^^^^       - mutable borrow ends here\r\n   |         |                |\r\n   |         |                immutable borrow occurs here\r\n   |         mutable borrow occurs here\r\n```\r\n\r\nIt looks like `self.values` grabs a mutable reference _before_ the `self.size()` call. The lifetime of `self.values` is lexically scoped over the entire function call, but I expected the arguments to be fully evaluated first. (Is borrowing always entirely lexically scoped? I can see how that makes for easier error messages...)\r\n\r\nYou can work around the problem just by manually splitting it across two lines:\r\n\r\n```\r\n\tfn inc(&mut self) {\r\n\t\tlet n = self.size();\r\n\t\tself.values.push(n);\r\n\t}\r\n```\r\n\r\nBut I really expect that to be a trivial transformation with identical semantics. It's surprising that it has such different borrow behavior. It would be great if the borrow checker could do this kind of transformation automatically.\r\n\r\n## Meta\r\n\r\n`rustc --version --verbose`:\r\n\r\nrustc 1.28.0-nightly (e3bf634e0 2018-06-28)\r\nbinary: rustc\r\ncommit-hash: e3bf634e060bc2f8665878288bcea02008ca346e\r\ncommit-date: 2018-06-28\r\nhost: x86_64-apple-darwin\r\nrelease: 1.28.0-nightly\r\nLLVM version: 6.0", "closed_by": {"login": "iainmerrick", "id": 252111, "node_id": "MDQ6VXNlcjI1MjExMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/252111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iainmerrick", "html_url": "https://github.com/iainmerrick", "followers_url": "https://api.github.com/users/iainmerrick/followers", "following_url": "https://api.github.com/users/iainmerrick/following{/other_user}", "gists_url": "https://api.github.com/users/iainmerrick/gists{/gist_id}", "starred_url": "https://api.github.com/users/iainmerrick/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iainmerrick/subscriptions", "organizations_url": "https://api.github.com/users/iainmerrick/orgs", "repos_url": "https://api.github.com/users/iainmerrick/repos", "events_url": "https://api.github.com/users/iainmerrick/events{/privacy}", "received_events_url": "https://api.github.com/users/iainmerrick/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/52035/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/52035/timeline", "performed_via_github_app": null, "state_reason": "completed"}