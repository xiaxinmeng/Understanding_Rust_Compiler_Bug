{"url": "https://api.github.com/repos/rust-lang/rust/issues/57639", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/57639/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/57639/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/57639/events", "html_url": "https://github.com/rust-lang/rust/issues/57639", "id": 399449865, "node_id": "MDU6SXNzdWUzOTk0NDk4NjU=", "number": 57639, "title": "Regression in trait bounds that are redundant with associated type's HRTB", "user": {"login": "rozbb", "id": 752802, "node_id": "MDQ6VXNlcjc1MjgwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/752802?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rozbb", "html_url": "https://github.com/rozbb", "followers_url": "https://api.github.com/users/rozbb/followers", "following_url": "https://api.github.com/users/rozbb/following{/other_user}", "gists_url": "https://api.github.com/users/rozbb/gists{/gist_id}", "starred_url": "https://api.github.com/users/rozbb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rozbb/subscriptions", "organizations_url": "https://api.github.com/users/rozbb/orgs", "repos_url": "https://api.github.com/users/rozbb/repos", "events_url": "https://api.github.com/users/rozbb/events{/privacy}", "received_events_url": "https://api.github.com/users/rozbb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 147085028, "node_id": "MDU6TGFiZWwxNDcwODUwMjg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-nightly", "name": "regression-from-stable-to-nightly", "color": "e4008a", "default": false, "description": "Performance or correctness regression from stable to nightly."}, {"id": 203429200, "node_id": "MDU6TGFiZWwyMDM0MjkyMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-high", "name": "P-high", "color": "eb6420", "default": false, "description": "High priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 262252628, "node_id": "MDU6TGFiZWwyNjIyNTI2Mjg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-beta", "name": "regression-from-stable-to-beta", "color": "e4008a", "default": false, "description": "Performance or correctness regression from stable to beta."}], "state": "closed", "locked": false, "assignee": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, {"login": "aturon", "id": 709807, "node_id": "MDQ6VXNlcjcwOTgwNw==", "avatar_url": "https://avatars.githubusercontent.com/u/709807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aturon", "html_url": "https://github.com/aturon", "followers_url": "https://api.github.com/users/aturon/followers", "following_url": "https://api.github.com/users/aturon/following{/other_user}", "gists_url": "https://api.github.com/users/aturon/gists{/gist_id}", "starred_url": "https://api.github.com/users/aturon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aturon/subscriptions", "organizations_url": "https://api.github.com/users/aturon/orgs", "repos_url": "https://api.github.com/users/aturon/repos", "events_url": "https://api.github.com/users/aturon/events{/privacy}", "received_events_url": "https://api.github.com/users/aturon/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 14, "created_at": "2019-01-15T17:18:33Z", "updated_at": "2019-02-22T00:24:21Z", "closed_at": "2019-02-22T00:24:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "The title is a mouthful, so let me explain and give some motivation. Say I have a trait `MyTrait` with an associated type `MessageType`. This message type must be deserializable (in the serde sense), i.e., `MessageType: for<'a> Deserialize<'a>`. Now suppose I have a generic struct `GenericStruct<T>` where `T: MyTrait`. I want the struct to contain a message, so I put a thing of type `T::MessageType` inside the struct. I would like `GenericStruct` to also be `Deserialize`able now, so I `#[derive(Deserialize)]`.\r\n\r\nConcretely, the code\r\n\r\n```rust\r\nuse serde::Deserialize;\r\n\r\n//trait DeserializeOwned: for<'a> Deserialize<'a> {}\r\n\r\ntrait MyTrait {\r\n    type MessageType: Sized + for<'a> Deserialize<'a>;\r\n    //type MessageType: Sized + DeserializeOwned;\r\n}\r\n\r\n#[derive(Deserialize)]\r\nstruct GenericStruct<T: MyTrait>(T::MessageType);\r\n```\r\n**compiles in 1.31.1-stable and fails in 1.33.0-nightly** with error message\r\n```\r\nerror[E0308]: mismatched types\r\n  |\r\n  | #[derive(Deserialize)]\r\n  |          ^^^^^^^^^^^ one type is more general than the other\r\n  |\r\n  = note: expected type `for<'a> _IMPL_DESERIALIZE_FOR_GenericStruct::_serde::Deserialize<'a>`\r\n             found type `_IMPL_DESERIALIZE_FOR_GenericStruct::_serde::Deserialize<'de>`\r\n```\r\nFurthermore, if the commented lines are uncommented, and the first `type` line in `MyTrait` is commented out, the code now compiles in stable and nightly.\r\n\r\nI don't believe this is version-specific behavior in serde. I would like to make a neater minimal testcase, but I don't know of any auto-derivable traits that only take a lifetime as a parameter.", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/57639/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/57639/timeline", "performed_via_github_app": null, "state_reason": "completed"}