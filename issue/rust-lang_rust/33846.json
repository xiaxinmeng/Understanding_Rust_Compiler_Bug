{"url": "https://api.github.com/repos/rust-lang/rust/issues/33846", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/33846/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/33846/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/33846/events", "html_url": "https://github.com/rust-lang/rust/issues/33846", "id": 156558468, "node_id": "MDU6SXNzdWUxNTY1NTg0Njg=", "number": 33846, "title": "Weird integer inference failure", "user": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37544, "node_id": "MDU6TGFiZWwzNzU0NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-typesystem", "name": "A-typesystem", "color": "f7e101", "default": false, "description": "Area: The type system"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 604454086, "node_id": "MDU6TGFiZWw2MDQ0NTQwODY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-inference", "name": "A-inference", "color": "f7e101", "default": false, "description": "Area: Type inference"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-05-24T16:58:02Z", "updated_at": "2023-05-30T10:12:49Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "``` rust\nconst K: u64 = 8;\nconst P0: [u64; 6] = [2, 3, 7, 9, 10, 14];\n\nfn main() {\n    let mut ps = Vec::from(&P0 as &[_]);\n    // Fixup P0 if necessary.\n    for p in &mut ps {\n        if *p == K {\n            if *p == 2 || *p == 9 {\n                *p -= 1;\n            } else {\n                *p += 1;\n            }\n        }\n    }\n    println!(\"{:?}\", ps);\n}\n```\n\nfails to compile, despite compiler figuring out that `ps: Vec<u64>`, but explicit annotation of the vector type is necessary for integers to be inferred correctly:\n\n```\n\u2026\n    // either works\n    let mut ps: Vec<u64> = Vec::from(&P0 as &[_]);\n    let mut ps = Vec::from(&P0 as &[u64]);\n\u2026\n```\n\nI would expect all the code snippets to be equivalent and compile.\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/33846/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/33846/timeline", "performed_via_github_app": null, "state_reason": null}