{"url": "https://api.github.com/repos/rust-lang/rust/issues/103684", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/103684/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/103684/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/103684/events", "html_url": "https://github.com/rust-lang/rust/issues/103684", "id": 1427202846, "node_id": "I_kwDOAAsO6M5VEWMe", "number": 103684, "title": "Adding statements after implicit return could result in confusing errors", "user": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1596121013, "node_id": "MDU6TGFiZWwxNTk2MTIxMDEz", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-confusing", "name": "D-confusing", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error that should be reworked"}, {"id": 1596122130, "node_id": "MDU6TGFiZWwxNTk2MTIyMTMw", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-papercut", "name": "D-papercut", "color": "c9f7a3", "default": false, "description": "Diagnostic error that needs small tweaks"}, {"id": 1596122811, "node_id": "MDU6TGFiZWwxNTk2MTIyODEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-newcomer-roadblock", "name": "D-newcomer-roadblock", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error hard to understand for new users"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-10-28T12:37:35Z", "updated_at": "2022-11-11T03:25:19Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "This originated from someone who is only starting to learn the language and incorrectly thought that the `if` statement returned values on their own and tried to add statements after the `if`.\r\n\r\nGiven the following code: [play](https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=509fed780a8c4113906299f02ecf2102)\r\n\r\n```rust\r\nfn foo(x: bool) -> i32 {\r\n    if x {\r\n        1\r\n    } else {\r\n        2\r\n    }\r\n    \r\n    println!(\"{x}\");\r\n}\r\n```\r\n\r\nThe current output is this, which can be confusing to beginners if they do not know that the trailing expression is used as the return value.\r\n\r\n```\r\nerror[E0308]: mismatched types\r\n --> src/lib.rs:3:9\r\n  |\r\n2 | /     if x {\r\n3 | |         1\r\n  | |         ^ expected `()`, found integer\r\n4 | |     } else {\r\n5 | |         2\r\n6 | |     }\r\n  | |_____- expected this to be `()`\r\n  |\r\nhelp: you might have meant to return this value\r\n  |\r\n3 |         return 1;\r\n  |         ++++++  +\r\n\r\nerror[E0308]: mismatched types\r\n --> src/lib.rs:5:9\r\n  |\r\n2 | /     if x {\r\n3 | |         1\r\n4 | |     } else {\r\n5 | |         2\r\n  | |         ^ expected `()`, found integer\r\n6 | |     }\r\n  | |_____- expected this to be `()`\r\n  |\r\nhelp: you might have meant to return this value\r\n  |\r\n5 |         return 2;\r\n  |         ++++++  +\r\n\r\nerror[E0308]: mismatched types\r\n --> src/lib.rs:1:20\r\n  |\r\n1 | fn foo(x: bool) -> i32 {\r\n  |    ---             ^^^ expected `i32`, found `()`\r\n  |    |\r\n  |    implicitly returns `()` as its body has no tail or `return` expression\r\n```\r\n\r\n<!-- The following is not always necessary. -->\r\nIdeally the output should include a suggestion to store the possibly intended return value in a variable and returning it later, like so:\r\n\r\n```\r\nhelp: you might have meant to return this value\r\n\r\n    let return_value = if x {\r\n        1\r\n    } else {\r\n        2\r\n    };\r\n\r\n    println!(\"{x}\");\r\n    return_value\r\n```\r\n\r\n<!--\r\nIf the problem is not self-explanatory, please provide a rationale for the\r\nchange.\r\n-->\r\n\r\n<!--\r\nIf dramatically different output is caused by small changes, consider also\r\nadding them here.\r\n\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions. The output might also be\r\ndifferent depending on the Edition.\r\n-->\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/103684/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/103684/timeline", "performed_via_github_app": null, "state_reason": null}