{"url": "https://api.github.com/repos/rust-lang/rust/issues/31561", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/31561/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/31561/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/31561/events", "html_url": "https://github.com/rust-lang/rust/issues/31561", "id": 132886147, "node_id": "MDU6SXNzdWUxMzI4ODYxNDc=", "number": 31561, "title": "rustc nightly panics on refutable pattern", "user": {"login": "dvgb", "id": 1530, "node_id": "MDQ6VXNlcjE1MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1530?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dvgb", "html_url": "https://github.com/dvgb", "followers_url": "https://api.github.com/users/dvgb/followers", "following_url": "https://api.github.com/users/dvgb/following{/other_user}", "gists_url": "https://api.github.com/users/dvgb/gists{/gist_id}", "starred_url": "https://api.github.com/users/dvgb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dvgb/subscriptions", "organizations_url": "https://api.github.com/users/dvgb/orgs", "repos_url": "https://api.github.com/users/dvgb/repos", "events_url": "https://api.github.com/users/dvgb/events{/privacy}", "received_events_url": "https://api.github.com/users/dvgb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 147085028, "node_id": "MDU6TGFiZWwxNDcwODUwMjg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-nightly", "name": "regression-from-stable-to-nightly", "color": "e4008a", "default": false, "description": "Performance or correctness regression from stable to nightly."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-02-11T04:37:24Z", "updated_at": "2016-03-06T15:10:52Z", "closed_at": "2016-03-06T15:10:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "The below (invalid) code gives a panic in nightly rust. Stable and beta both happily reject it without panicking.\n\n```\n[:/tmp/tmp.O1NUYLh865] % cat c.rs \nenum Thing {\n    Foo(u8),\n    Bar,\n    Baz,\n}\n\nfn main() {\n    let x = Thing::Foo(1);\n    let Thing::Foo(y) = x;\n}\n[:/tmp/tmp.O1NUYLh865] % multirust run nightly rustc c.rs \nerror: internal compiler error: unexpected panic\nnote: the compiler unexpectedly panicked. this is a bug.\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\nnote: run with `RUST_BACKTRACE=1` for a backtrace\nthread 'rustc' panicked at 'assertion failed: `(left == right)` (left: `2`, right: `1`)', ../src/librustc/middle/check_match.rs:1060\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\n\n[:/tmp/tmp.O1NUYLh865] 101 % RUST_BACKTRACE=1 multirust run nightly rustc c.rs\nerror: internal compiler error: unexpected panic\nnote: the compiler unexpectedly panicked. this is a bug.\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\nthread 'rustc' panicked at 'assertion failed: `(left == right)` (left: `2`, right: `1`)', ../src/librustc/middle/check_match.rs:1060\nstack backtrace:\n   1:     0x7f951e272800 - sys::backtrace::tracing::imp::write::h558d5f2978e55ac4ttu\n   2:     0x7f951e27a39b - panicking::default_handler::_$u7b$$u7b$closure$u7d$$u7d$::closure.43238\n   3:     0x7f951e279ef3 - panicking::default_handler::hbf3975cab47e4b81VWy\n   4:     0x7f951e243dac - sys_common::unwind::begin_unwind_inner::h78f1521fe1f5d27biit\n   5:     0x7f951e244848 - sys_common::unwind::begin_unwind_fmt::h964018da5137d3feoht\n   6:     0x7f951b58a488 - middle::check_match::check_irrefutable::h64cfa433b6a9a40ak8j\n   7:     0x7f951b55bec2 - middle::check_match::check_local::h8f4f38fe6a2d5f2bc6j\n   8:     0x7f951b55c117 - middle::check_match::check_fn::hcd366a08ad1d37a936j\n   9:     0x7f951b55c7b1 - middle::check_match::check_crate::hc1f332dc78a396f1JUi\n  10:     0x7f951e78af49 - driver::phase_3_run_analysis_passes::_$u7b$$u7b$closure$u7d$$u7d$::closure.27964\n  11:     0x7f951e78720e - middle::ty::context::ctxt<'tcx>::create_and_enter::h5439679730299442922\n  12:     0x7f951e783363 - driver::phase_3_run_analysis_passes::h12589397492560770879\n  13:     0x7f951e7560d8 - driver::compile_input::hb24a9d779e578b83Bca\n  14:     0x7f951e7463e8 - run_compiler::hf1f6ba491f28518acHc\n  15:     0x7f951e7438d1 - sys_common::unwind::try::try_fn::h10141810680521866859\n  16:     0x7f951e27028b - __rust_try\n  17:     0x7f951e2687cd - sys_common::unwind::inner_try::h876b2793e1ec4011kft\n  18:     0x7f951e744120 - boxed::F.FnBox<A>::call_box::h14464204619411869790\n  19:     0x7f951e278960 - sys::thread::Thread::new::thread_start::h36aef2efeb591414fUx\n  20:     0x7f9516a7b4a3 - start_thread\n  21:     0x7f951def913c - clone\n  22:                0x0 - <unknown>\n\n[:/tmp/tmp.O1NUYLh865] 101 % multirust run beta rustc c.rsb           \nc.rs:9:9: 9:22 error: refutable pattern in local binding: `Bar` not covered [E0005]\nc.rs:9     let Thing::Foo(y) = x;\n               ^~~~~~~~~~~~~\nc.rs:9:9: 9:22 help: run `rustc --explain E0005` to see a detailed explanation\nerror: aborting due to previous error\n[:/tmp/tmp.O1NUYLh865] 101 % multirust run stable rustc c.rs\nc.rs:9:9: 9:22 error: refutable pattern in local binding: `Bar` not covered [E0005]\nc.rs:9     let Thing::Foo(y) = x;\n               ^~~~~~~~~~~~~\nc.rs:9:9: 9:22 help: run `rustc --explain E0005` to see a detailed explanation\nerror: aborting due to previous error\n[:/tmp/tmp.O1NUYLh865] 101 % multirust run nightly rustc --version --verbose  \nmultirust: checking metadata version\nmultirust: got metadata version 2\nrustc 1.8.0-nightly (32b2ef7ad 2016-02-09)\nbinary: rustc\ncommit-hash: 32b2ef7add2836cba5867d2e5ac9610cef416447\ncommit-date: 2016-02-09\nhost: x86_64-unknown-linux-gnu\nrelease: 1.8.0-nightly\n[:/tmp/tmp.O1NUYLh865] % multirust run beta rustc --version --verbose \nmultirust: checking metadata version\nmultirust: got metadata version 2\nrustc 1.7.0-beta.2 (f4b756e6c 2016-02-03)\nbinary: rustc\ncommit-hash: f4b756e6c6c204927c692449b11001e9db56199f\ncommit-date: 2016-02-03\nhost: x86_64-unknown-linux-gnu\nrelease: 1.7.0-beta.2\n[:/tmp/tmp.O1NUYLh865] % multirust run stable rustc --version --verbose\nmultirust: checking metadata version\nmultirust: got metadata version 2\nrustc 1.6.0 (c30b771ad 2016-01-19)\nbinary: rustc\ncommit-hash: c30b771ad9d44ab84f8c88b80c25fcfde2433126\ncommit-date: 2016-01-19\nhost: x86_64-unknown-linux-gnu\nrelease: 1.6.0\n```\n\nSeems to only happen when the enum has at least three arms. Changing number of arms the  `(left == right)` seems to have left equal to number of arms minus one.\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/31561/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/31561/timeline", "performed_via_github_app": null, "state_reason": "completed"}