{"url": "https://api.github.com/repos/rust-lang/rust/issues/106876", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/106876/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/106876/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/106876/events", "html_url": "https://github.com/rust-lang/rust/issues/106876", "id": 1533464883, "node_id": "I_kwDOAAsO6M5bZtEz", "number": 106876, "title": "associated-types-invalid-trait-ref diagnostics can be misleading", "user": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2023-01-14T20:21:37Z", "updated_at": "2023-01-14T20:33:19Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "### Code\r\ncode from `./ui/associated-types/associated-types-invalid-trait-ref-issue-18865.rs`\r\n```Rust\r\ntrait Foo<T> {\r\n    type Bar;\r\n    fn get_bar(&self) -> Self::Bar;\r\n}\r\n\r\nfn f<T:Foo<isize>>(t: &T) {\r\n    let u: <T as Foo<usize>>::Bar = t.get_bar();\r\n    //~^ ERROR the trait bound `T: Foo<usize>` is not satisfied\r\n}\r\n\r\nfn main() { }\r\n```\r\n\r\n\r\nThe solution to the error is to use `Foo<isize>` for `u` instead of `usize` but rustc totally misses that it looks like:\r\n\r\n````\r\nerror[E0277]: the trait bound `T: Foo<usize>` is not satisfied\r\n --> src/lib.rs:7:12\r\n  |\r\n7 |     let u: <T as Foo<usize>>::Bar = t.get_bar();\r\n  |            ^^^^^^^^^^^^^^^^^^^^^^ the trait `Foo<usize>` is not implemented for `T`\r\n  |\r\nhelp: consider further restricting this bound\r\n  |\r\n6 | fn f<T:Foo<isize> + Foo<usize>>(t: &T) {\r\n  |                   ++++++++++++\r\n\r\nFor more information about this error, try `rustc --explain E0277`\r\n````\r\napplied:\r\n````rust\r\ntrait Foo<T> {\r\n    type Bar;\r\n    fn get_bar(&self) -> Self::Bar;\r\n}\r\n\r\nfn f<T:Foo<isize> + Foo<usize>>(t: &T) {\r\n    let u: <T as Foo<usize>>::Bar = t.get_bar();\r\n}\r\n\r\nfn main() { }\r\n````\r\n=> new error:\r\n\r\n````\r\nerror[E0284]: type annotations needed\r\n --> src/lib.rs:7:39\r\n  |\r\n7 |     let u: <T as Foo<usize>>::Bar = t.get_bar();\r\n  |                                       ^^^^^^^\r\n  |\r\n  = note: cannot satisfy `<T as Foo<_>>::Bar == <T as Foo<usize>>::Bar`\r\nhelp: try using a fully qualified path to specify the expected types\r\n  |\r\n7 |     let u: <T as Foo<usize>>::Bar = <T as Foo<T>>::get_bar(t);\r\n  |                                     +++++++++++++++++++++++ ~\r\n````\r\n\r\n=> applied\r\n\r\n````rust\r\ntrait Foo<T> {\r\n    type Bar;\r\n    fn get_bar(&self) -> Self::Bar;\r\n}\r\n\r\nfn f<T:Foo<isize> + Foo<usize>>(t: &T) {\r\n    let u: <T as Foo<usize>>::Bar = <T as Foo<T>>::get_bar(t);\r\n}\r\n\r\nfn main() { }\r\n````\r\n\r\n=> new error (duplicate?)\r\n\r\n````\r\nerror[E0277]: the trait bound `T: Foo<T>` is not satisfied\r\n --> src/lib.rs:7:60\r\n  |\r\n7 |     let u: <T as Foo<usize>>::Bar = <T as Foo<T>>::get_bar(t);\r\n  |                                     ---------------------- ^ the trait `Foo<T>` is not implemented for `T`\r\n  |                                     |\r\n  |                                     required by a bound introduced by this call\r\n  |\r\nhelp: consider further restricting this bound\r\n  |\r\n6 | fn f<T:Foo<isize> + Foo<usize> + Foo<T>>(t: &T) {\r\n  |                                ++++++++\r\n\r\nerror[E0277]: the trait bound `T: Foo<T>` is not satisfied\r\n --> src/lib.rs:7:37\r\n  |\r\n7 |     let u: <T as Foo<usize>>::Bar = <T as Foo<T>>::get_bar(t);\r\n  |                                     ^^^^^^^^^^^^^^^^^^^^^^ the trait `Foo<T>` is not implemented for `T`\r\n  |\r\nhelp: consider further restricting this bound\r\n  |\r\n6 | fn f<T:Foo<isize> + Foo<usize> + Foo<T>>(t: &T) {\r\n  |                                ++++++++\r\n\r\nFor more information about this error, try `rustc --explain E0277`.\r\n````\r\n\r\nsuggestion applied:\r\n\r\n````rust\r\ntrait Foo<T> {\r\n    type Bar;\r\n    fn get_bar(&self) -> Self::Bar;\r\n}\r\n\r\nfn f<T:Foo<isize> + Foo<usize> + Foo<T>>(t: &T) {\r\n    let u: <T as Foo<usize>>::Bar = <T as Foo<T>>::get_bar(t);\r\n}\r\n\r\nfn main() { }\r\n\r\n````\r\n\r\nfinal error WHICH ACTUALLY HINTS TO THE ACTUAL PROBLEM :D\r\n\r\n````\r\nerror[E0308]: mismatched types\r\n --> src/lib.rs:7:37\r\n  |\r\n6 | fn f<T:Foo<isize> + Foo<usize> + Foo<T>>(t: &T) {\r\n  |      - this type parameter\r\n7 |     let u: <T as Foo<usize>>::Bar = <T as Foo<T>>::get_bar(t);\r\n  |            ----------------------   ^^^^^^^^^^^^^^^^^^^^^^^^^ expected `usize`, found type parameter `T`\r\n  |            |\r\n  |            expected due to this\r\n  |\r\n  = note: expected associated type `<T as Foo<usize>>::Bar`\r\n             found associated type `<T as Foo<T>>::Bar`\r\n````", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/106876/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/106876/timeline", "performed_via_github_app": null, "state_reason": null}