{"url": "https://api.github.com/repos/rust-lang/rust/issues/30331", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/30331/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/30331/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/30331/events", "html_url": "https://github.com/rust-lang/rust/issues/30331", "id": 121754941, "node_id": "MDU6SXNzdWUxMjE3NTQ5NDE=", "number": 30331, "title": "Compiler suggest wrong fix", "user": {"login": "KalitaAlexey", "id": 11215191, "node_id": "MDQ6VXNlcjExMjE1MTkx", "avatar_url": "https://avatars.githubusercontent.com/u/11215191?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KalitaAlexey", "html_url": "https://github.com/KalitaAlexey", "followers_url": "https://api.github.com/users/KalitaAlexey/followers", "following_url": "https://api.github.com/users/KalitaAlexey/following{/other_user}", "gists_url": "https://api.github.com/users/KalitaAlexey/gists{/gist_id}", "starred_url": "https://api.github.com/users/KalitaAlexey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KalitaAlexey/subscriptions", "organizations_url": "https://api.github.com/users/KalitaAlexey/orgs", "repos_url": "https://api.github.com/users/KalitaAlexey/repos", "events_url": "https://api.github.com/users/KalitaAlexey/events{/privacy}", "received_events_url": "https://api.github.com/users/KalitaAlexey/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-12-11T17:24:36Z", "updated_at": "2017-06-12T16:04:33Z", "closed_at": "2017-06-12T16:04:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "For code\n\n```\nuse std::borrow::BorrowMut;\n\npub struct NodeChildIndex {\n    index: usize,\n}\n\nimpl NodeChildIndex {\n    fn new(index: usize) -> Self {\n        NodeChildIndex { index: index }\n    }\n}\n\npub trait NodeChild {\n}\n\npub struct Node<'a> {\n    children: Vec<Box<NodeChild + 'a>>,\n}\n\nimpl<'a> Node<'a> {\n    pub fn new() -> Self {\n        Node { children: Vec::new() }\n    }\n\n    pub fn add_child<T: NodeChild + 'a>(&mut self, child: Box<T>) -> NodeChildIndex {\n        self.children.push(child);\n        NodeChildIndex::new(0)\n    }\n\n    pub fn child_at_index_mut(&mut self, index: &NodeChildIndex) -> &mut NodeChild {\n        self.children[index.index].borrow_mut()\n    }\n}\n```\n\nIt outputs\n\n```\nsrc\\lib.rs:30:2: 32:3 help: consider using an explicit lifetime parameter as shown: fn child_at_index_mut(&'a mut self, index: &NodeChildIndex) -> &mut NodeChild\nsrc\\lib.rs:30   pub fn child_at_index_mut(&mut self, index: &NodeChildIndex) -> &mut NodeChild {\nsrc\\lib.rs:31       self.children[index.index].borrow_mut()\nsrc\\lib.rs:32   }\nsrc\\lib.rs:31:30: 31:42 error: mismatched types:\n expected `core::borrow::Borrow<NodeChild>`,\n    found `core::borrow::Borrow<NodeChild>`\n(lifetime mismatch) [E0308]\nsrc\\lib.rs:31       self.children[index.index].borrow_mut()\n                                               ^~~~~~~~~~~~\nsrc\\lib.rs:31:30: 31:42 help: run `rustc --explain E0308` to see a detailed explanation\nsrc\\lib.rs:30:81: 32:3 note: the anonymous lifetime #1 defined on the block at 30:80...\nsrc\\lib.rs:30   pub fn child_at_index_mut(&mut self, index: &NodeChildIndex) -> &mut NodeChild {\nsrc\\lib.rs:31       self.children[index.index].borrow_mut()\nsrc\\lib.rs:32   }\nsrc\\lib.rs:30:81: 32:3 note: ...does not necessarily outlive the lifetime 'a as defined on the block at 30:80\nsrc\\lib.rs:30   pub fn child_at_index_mut(&mut self, index: &NodeChildIndex) -> &mut NodeChild {\nsrc\\lib.rs:31       self.children[index.index].borrow_mut()\nsrc\\lib.rs:32   }\n```\n\nIt suggests me to add `'a` to `&mut self`. But correct fix for me is to add `+ 'a` to return type\n\n```\npub fn child_at_index_mut(&mut self, index: &NodeChildIndex) -> &mut (NodeChild + 'a) {\n    self.children[index.index].borrow_mut()\n}\n```\n", "closed_by": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/30331/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/30331/timeline", "performed_via_github_app": null, "state_reason": "completed"}