{"url": "https://api.github.com/repos/rust-lang/rust/issues/105297", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/105297/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/105297/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/105297/events", "html_url": "https://github.com/rust-lang/rust/issues/105297", "id": 1476300749, "node_id": "I_kwDOAAsO6M5X_o_N", "number": 105297, "title": "Vec::split_off could be dangerous.", "user": {"login": "bigspider", "id": 6681844, "node_id": "MDQ6VXNlcjY2ODE4NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6681844?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bigspider", "html_url": "https://github.com/bigspider", "followers_url": "https://api.github.com/users/bigspider/followers", "following_url": "https://api.github.com/users/bigspider/following{/other_user}", "gists_url": "https://api.github.com/users/bigspider/gists{/gist_id}", "starred_url": "https://api.github.com/users/bigspider/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bigspider/subscriptions", "organizations_url": "https://api.github.com/users/bigspider/orgs", "repos_url": "https://api.github.com/users/bigspider/repos", "events_url": "https://api.github.com/users/bigspider/events{/privacy}", "received_events_url": "https://api.github.com/users/bigspider/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-12-05T11:09:45Z", "updated_at": "2022-12-05T12:27:57Z", "closed_at": "2022-12-05T12:24:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, as I'm still a Rust beginner, I apologize if the issue is known, or void for some reason I don't yet see.\r\n\r\nI read in the documentation of [Vec::split_off](https://doc.rust-lang.org/std/vec/struct.Vec.html#method.split_off):\r\n\r\n> Splits the collection into two at the given index.\r\n> \r\n> Returns a newly allocated vector containing the elements in the range [at, len). After the call, the original vector will be left containing the elements [0, at) with its previous capacity unchanged.\r\n> \r\n\r\nI think this is a potentially dangerous default behavior. I would expect a Vector implementation to guarantee the following in its default usage (that is, when not explicitly tampering with the _capacity_):\r\n- The amortized update cost is O(1) per element\r\n- The memory occupation is O(n) _in the worst case_\r\n\r\nThe behavior of `split_off` of leaving capacity unchanged (instead of _possibly_ shrinking it according to the default capacity management strategy) doesn't allow to _guarantee_ both the above properties at the same time:\r\n- splitting off all-but-the-first element permanently leaves a large, unused capacity. If this action is repeated on the remaining elements, this could leave O(n^2) memory occupation on a program with O(n^2) running time, instead of O(n) memory occupation.\r\n- if the programmer realizes the problem, they might think that calling `shrink_at_capacity` is a solution, and it indeed solves the memory issue \u2212 but it now becomes O(n^2) to split-off elements in small chunks (say, one by one).\r\n\r\nIn fact, it doesn't seem that there is a way of triggering the shrinking strategy after `split_off` (except hacks like pushing and popping a dummy element), so one might have to avoid using it completely.\r\nThe reason I think the default behavior is especially dangerous is that realizing the problem in a real program requires non-trivial algorithmic thinking, and it only happens _in the worst case_, e.g. it might not be detected until some malicious crafted input is fed to the program.", "closed_by": {"login": "workingjubilee", "id": 46493976, "node_id": "MDQ6VXNlcjQ2NDkzOTc2", "avatar_url": "https://avatars.githubusercontent.com/u/46493976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/workingjubilee", "html_url": "https://github.com/workingjubilee", "followers_url": "https://api.github.com/users/workingjubilee/followers", "following_url": "https://api.github.com/users/workingjubilee/following{/other_user}", "gists_url": "https://api.github.com/users/workingjubilee/gists{/gist_id}", "starred_url": "https://api.github.com/users/workingjubilee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/workingjubilee/subscriptions", "organizations_url": "https://api.github.com/users/workingjubilee/orgs", "repos_url": "https://api.github.com/users/workingjubilee/repos", "events_url": "https://api.github.com/users/workingjubilee/events{/privacy}", "received_events_url": "https://api.github.com/users/workingjubilee/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/105297/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/105297/timeline", "performed_via_github_app": null, "state_reason": "not_planned"}