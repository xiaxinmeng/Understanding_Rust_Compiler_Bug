{"url": "https://api.github.com/repos/rust-lang/rust/issues/68484", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/68484/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/68484/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/68484/events", "html_url": "https://github.com/rust-lang/rust/issues/68484", "id": 554146412, "node_id": "MDU6SXNzdWU1NTQxNDY0MTI=", "number": 68484, "title": "Severe slowdown when wrapping a [MaybeUninit<T>; N] in a struct", "user": {"login": "timvermeulen", "id": 2904179, "node_id": "MDQ6VXNlcjI5MDQxNzk=", "avatar_url": "https://avatars.githubusercontent.com/u/2904179?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timvermeulen", "html_url": "https://github.com/timvermeulen", "followers_url": "https://api.github.com/users/timvermeulen/followers", "following_url": "https://api.github.com/users/timvermeulen/following{/other_user}", "gists_url": "https://api.github.com/users/timvermeulen/gists{/gist_id}", "starred_url": "https://api.github.com/users/timvermeulen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timvermeulen/subscriptions", "organizations_url": "https://api.github.com/users/timvermeulen/orgs", "repos_url": "https://api.github.com/users/timvermeulen/repos", "events_url": "https://api.github.com/users/timvermeulen/events{/privacy}", "received_events_url": "https://api.github.com/users/timvermeulen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 234956, "node_id": "MDU6TGFiZWwyMzQ5NTY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-codegen", "name": "A-codegen", "color": "f7e101", "default": false, "description": "Area: Code generation"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-01-23T13:09:02Z", "updated_at": "2022-07-19T01:40:36Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Consider the following function:\r\n\r\n```rust\r\n#![feature(maybe_uninit_extra)]\r\n\r\nuse std::{mem::MaybeUninit, ops::Range};\r\n\r\nconst N: usize = 10_000;\r\nconst RANGE: Range<u32> = 2500..7500;\r\n\r\nfn foo() -> u32 {\r\n    unsafe {\r\n        let mut array = MaybeUninit::<[MaybeUninit<u32>; N]>::uninit().assume_init();\r\n        let mut len = 0;\r\n\r\n        for value in RANGE {\r\n            array.get_unchecked_mut(len).write(value);\r\n            len += 1;\r\n        }\r\n\r\n        (0..len).map(|i| array.get_unchecked(i).read()).sum()\r\n    }\r\n}\r\n```\r\n\r\nThis runs as fast as I would expect. But if I put `array` and `len` in a struct, like this:\r\n\r\n```rust\r\nstruct S {\r\n    array: [MaybeUninit<u32>; N],\r\n    len: usize,\r\n}\r\n\r\npub fn bar() -> u32 {\r\n    unsafe {\r\n        let mut s = S {\r\n            array: MaybeUninit::uninit().assume_init(),\r\n            len: 0,\r\n        };\r\n\r\n        for value in RANGE {\r\n            s.array.get_unchecked_mut(s.len).write(value);\r\n            s.len += 1;\r\n        }\r\n\r\n        (0..s.len).map(|i| s.array.get_unchecked(i).read()).sum()\r\n    }\r\n}\r\n```\r\n\r\nThis runs about 15x as slowly using (although these didn't change anything)\r\n```\r\n[profile.bench]\r\nlto = true\r\ncodegen-units = 1\r\n```\r\nwith the 2020-01-22 nightly toolchain. This difference can be observed with much smaller values of `N`, too, and blackboxing values didn't make a difference.\r\n\r\n[Playground with benchmarks](https://play.rust-lang.org/?version=nightly&mode=release&edition=2018&gist=ece1d1e8eea46b962166a27325fb60f8)", "closed_by": {"login": "workingjubilee", "id": 46493976, "node_id": "MDQ6VXNlcjQ2NDkzOTc2", "avatar_url": "https://avatars.githubusercontent.com/u/46493976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/workingjubilee", "html_url": "https://github.com/workingjubilee", "followers_url": "https://api.github.com/users/workingjubilee/followers", "following_url": "https://api.github.com/users/workingjubilee/following{/other_user}", "gists_url": "https://api.github.com/users/workingjubilee/gists{/gist_id}", "starred_url": "https://api.github.com/users/workingjubilee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/workingjubilee/subscriptions", "organizations_url": "https://api.github.com/users/workingjubilee/orgs", "repos_url": "https://api.github.com/users/workingjubilee/repos", "events_url": "https://api.github.com/users/workingjubilee/events{/privacy}", "received_events_url": "https://api.github.com/users/workingjubilee/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/68484/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/68484/timeline", "performed_via_github_app": null, "state_reason": "reopened"}