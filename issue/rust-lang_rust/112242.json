{"url": "https://api.github.com/repos/rust-lang/rust/issues/112242", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/112242/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/112242/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/112242/events", "html_url": "https://github.com/rust-lang/rust/issues/112242", "id": 1739602685, "node_id": "I_kwDOAAsO6M5nsDr9", "number": 112242, "title": "ice: rustdoc: Znormalize-docs : index out of bounds, snapshot vec", "user": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 203738, "node_id": "MDU6TGFiZWwyMDM3Mzg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-rustdoc", "name": "T-rustdoc", "color": "bfd4f2", "default": false, "description": "Relevant to the rustdoc team, which will review and decide on the PR/issue."}, {"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1118598314, "node_id": "MDU6TGFiZWwxMTE4NTk4MzE0", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-synthetic-impls", "name": "A-synthetic-impls", "color": "f7e101", "default": false, "description": "Area: Synthetic impls, used by rustdoc to document auto traits and traits with blanket impls"}, {"id": 3771326768, "node_id": "LA_kwDOAAsO6M7gyeEw", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-auto-traits", "name": "A-auto-traits", "color": "f7e101", "default": false, "description": "Area: auto traits (`auto trait Send`)"}, {"id": 4917540716, "node_id": "LA_kwDOAAsO6M8AAAABJRu3bA", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-normalize-docs", "name": "F-normalize-docs", "color": "f9c0cc", "default": false, "description": "-Z normalize-docs"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2023-06-03T14:59:27Z", "updated_at": "2023-06-20T05:48:57Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n-->\r\n\r\n### Code\r\n`rustdoc -Znormalize-docs --edition=2021 file.rs`\r\n```Rust\r\nmod foo {\r\n    pub trait MyTrait<'a> {\r\n        type MyItem: ?Sized;\r\n    }\r\n\r\n    pub struct Inner<'a, Q, R: ?Sized> {\r\n        field: Q,\r\n        field3: &'a u8,\r\n        my_foo: Foo<Q>,\r\n        field2: R,\r\n    }\r\n\r\n    pub struct Outer<'a, T, K: ?Sized> {\r\n        my_inner: Inner<'a, T, K>,\r\n    }\r\n\r\n    pub struct Foo<T> {\r\n        myfield: T,\r\n    }\r\n}\r\n\r\n// @has complex/struct.NotOuter.html\r\n// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl\"]//h3[@class=\"code-header\"]' \\\r\n// @has complex/struct.NotOuter.html\r\n// -> &'b i8, T: MyTrait<'a>, <T as MyTrait<'a>>::MyItem: Copy, 'a: 'static\"\r\n\r\npub use foo::{Foo, Inner as NotInner, MyTrait as NotMyTrait, Outer as NotOuter};\r\n\r\nunsafe impl<T> Send for Foo<T>\r\nwhere\r\n    T: NotMyTrait<'static>,\r\n{\r\n}\r\n\r\nunsafe impl<'a, Q, R: ?Sized> Send for NotInner<'static, Q, R>\r\nwhere\r\n    Q: NotMyTrait<'a>,\r\n    <Q as NotMyTrait<'a>>::MyItem: Copy,\r\n    R: for<'b> Fn((&'b bool, &'a u8)) -> &'b i8,\r\n    Foo<Q>: Send,\r\n{\r\n}\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustdoc 1.72.0-nightly (dd5d7c729 2023-06-02)\r\nbinary: rustdoc\r\ncommit-hash: dd5d7c729d4e8a59708df64002e09dbcbc4005ba\r\ncommit-date: 2023-06-02\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.72.0-nightly\r\nLLVM version: 16.0.4\r\n```\r\n\r\n### Error output\r\n\r\n```\r\n<output>\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nthread 'rustc' panicked at 'index out of bounds: the len is 0 but the index is 1', /cargo/registry/src/index.crates.io-6f17d22bba15001f/ena-0.14.2/src/snapshot_vec.rs:199:10\r\nstack backtrace:\r\n   0:     0x7f3621169bb1 - std::backtrace_rs::backtrace::libunwind::trace::hf9423e7319e7b273\r\n                               at /rustc/dd5d7c729d4e8a59708df64002e09dbcbc4005ba/library/std/src/../../backtrace/src/backtrace/libunwind.rs:93:5\r\n   1:     0x7f3621169bb1 - std::backtrace_rs::backtrace::trace_unsynchronized::h66acda1b30f743d6\r\n                               at /rustc/dd5d7c729d4e8a59708df64002e09dbcbc4005ba/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\r\n   2:     0x7f3621169bb1 - std::sys_common::backtrace::_print_fmt::hd68a2e46e11b4b1a\r\n                               at /rustc/dd5d7c729d4e8a59708df64002e09dbcbc4005ba/library/std/src/sys_common/backtrace.rs:65:5\r\n   3:     0x7f3621169bb1 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::h9597144efc95fd0d\r\n                               at /rustc/dd5d7c729d4e8a59708df64002e09dbcbc4005ba/library/std/src/sys_common/backtrace.rs:44:22\r\n   4:     0x7f36211ca18f - core::fmt::rt::Argument::fmt::h78292bc3d727b7ea\r\n                               at /rustc/dd5d7c729d4e8a59708df64002e09dbcbc4005ba/library/core/src/fmt/rt.rs:138:9\r\n   5:     0x7f36211ca18f - core::fmt::write::h3c0df26dbae30f71\r\n                               at /rustc/dd5d7c729d4e8a59708df64002e09dbcbc4005ba/library/core/src/fmt/mod.rs:1094:21\r\n   6:     0x7f362115ce61 - std::io::Write::write_fmt::h9885b87fb4cdbd4b\r\n                               at /rustc/dd5d7c729d4e8a59708df64002e09dbcbc4005ba/library/std/src/io/mod.rs:1713:15\r\n   7:     0x7f36211699c5 - std::sys_common::backtrace::_print::h8dd7723bf85d46b9\r\n                               at /rustc/dd5d7c729d4e8a59708df64002e09dbcbc4005ba/library/std/src/sys_common/backtrace.rs:47:5\r\n   8:     0x7f36211699c5 - std::sys_common::backtrace::print::h4d1dcd147b97d0e0\r\n                               at /rustc/dd5d7c729d4e8a59708df64002e09dbcbc4005ba/library/std/src/sys_common/backtrace.rs:34:9\r\n   9:     0x7f362116c687 - std::panicking::default_hook::{{closure}}::h77fbf8c391b9b7dc\r\n  10:     0x7f362116c474 - std::panicking::default_hook::h8cf79dcd3fda8d66\r\n                               at /rustc/dd5d7c729d4e8a59708df64002e09dbcbc4005ba/library/std/src/panicking.rs:288:9\r\n  11:     0x7f362436c01b - <rustc_driver_impl[1c1e48d71b0475de]::install_ice_hook::{closure#0} as core[4909aebc30286168]::ops::function::FnOnce<(&core[4909aebc30286168]::panic::panic_info::PanicInfo,)>>::call_once::{shim:vtable#0}\r\n  12:     0x7f362116cdcd - <alloc::boxed::Box<F,A> as core::ops::function::Fn<Args>>::call::hab8947fe39a54f02\r\n                               at /rustc/dd5d7c729d4e8a59708df64002e09dbcbc4005ba/library/alloc/src/boxed.rs:1999:9\r\n  13:     0x7f362116cdcd - std::panicking::rust_panic_with_hook::h499030a402682852\r\n                               at /rustc/dd5d7c729d4e8a59708df64002e09dbcbc4005ba/library/std/src/panicking.rs:709:13\r\n  14:     0x7f362116cb67 - std::panicking::begin_panic_handler::{{closure}}::h6ee14f69855f4395\r\n                               at /rustc/dd5d7c729d4e8a59708df64002e09dbcbc4005ba/library/std/src/panicking.rs:597:13\r\n  15:     0x7f3621169fe6 - std::sys_common::backtrace::__rust_end_short_backtrace::he15120d3b7461309\r\n                               at /rustc/dd5d7c729d4e8a59708df64002e09dbcbc4005ba/library/std/src/sys_common/backtrace.rs:151:18\r\n  16:     0x7f362116c8b2 - rust_begin_unwind\r\n                               at /rustc/dd5d7c729d4e8a59708df64002e09dbcbc4005ba/library/std/src/panicking.rs:593:5\r\n  17:     0x7f36211c6413 - core::panicking::panic_fmt::hc8e9b6dda341d3de\r\n                               at /rustc/dd5d7c729d4e8a59708df64002e09dbcbc4005ba/library/core/src/panicking.rs:67:14\r\n  18:     0x7f36211c6572 - core::panicking::panic_bounds_check::h05862dd3eb969670\r\n                               at /rustc/dd5d7c729d4e8a59708df64002e09dbcbc4005ba/library/core/src/panicking.rs:162:5\r\n  19:     0x7f36223a7876 - <ena[4426b5e329104381]::unify::UnificationTable<ena[4426b5e329104381]::unify::backing_vec::InPlace<rustc_middle[810cd5c852e8362a]::infer::unify_key::RegionVidKey, &mut alloc[c31f8ca689b1ba4a]::vec::Vec<ena[4426b5e329104381]::unify::VarValue<rustc_middle[810cd5c852e8362a]::infer::unify_key::RegionVidKey>>, &mut rustc_infer[631e14d7b7f44c7d]::infer::undo_log::InferCtxtUndoLogs>>>::uninlined_get_root_key\r\n  20:     0x7f362245ba5d - <rustc_infer[631e14d7b7f44c7d]::infer::canonical::canonicalizer::Canonicalizer as rustc_type_ir[924a60b187e3d5f3]::fold::TypeFolder<rustc_middle[810cd5c852e8362a]::ty::context::TyCtxt>>::fold_region\r\n  21:     0x7f3622d0610d - <&rustc_middle[810cd5c852e8362a]::ty::list::List<rustc_middle[810cd5c852e8362a]::ty::subst::GenericArg> as rustc_type_ir[924a60b187e3d5f3]::fold::TypeFoldable<rustc_middle[810cd5c852e8362a]::ty::context::TyCtxt>>::try_fold_with::<rustc_infer[631e14d7b7f44c7d]::infer::canonical::canonicalizer::Canonicalizer>\r\n  22:     0x7f3622d408a0 - <rustc_trait_selection[b17b0dc4b37af673]::traits::query::normalize::QueryNormalizer as rustc_type_ir[924a60b187e3d5f3]::fold::FallibleTypeFolder<rustc_middle[810cd5c852e8362a]::ty::context::TyCtxt>>::try_fold_ty\r\n  23:     0x556ae975b959 - <rustc_infer[631e14d7b7f44c7d]::infer::at::At as rustc_trait_selection[b17b0dc4b37af673]::traits::query::normalize::QueryNormalizeExt>::query_normalize::<rustc_middle[810cd5c852e8362a]::ty::sty::Binder<rustc_middle[810cd5c852e8362a]::ty::Ty>>\r\n  24:     0x556ae99a53e8 - rustdoc[88e8a3041a7fc0e6]::clean::normalize\r\n  25:     0x556ae99d148f - rustdoc[88e8a3041a7fc0e6]::clean::clean_middle_ty\r\n  26:     0x556ae999ce5a - rustdoc[88e8a3041a7fc0e6]::clean::clean_predicate\r\n  27:     0x556ae98270e0 - <rustdoc[88e8a3041a7fc0e6]::clean::auto_trait::AutoTraitFinder>::param_env_to_generics\r\n  28:     0x556ae994a326 - <rustc_trait_selection[b17b0dc4b37af673]::traits::auto_trait::AutoTraitFinder>::find_auto_trait_generics::<rustdoc[88e8a3041a7fc0e6]::clean::types::Generics, <rustdoc[88e8a3041a7fc0e6]::clean::auto_trait::AutoTraitFinder>::generate_for_trait::{closure#0}>\r\n  29:     0x556ae982383f - <rustdoc[88e8a3041a7fc0e6]::clean::auto_trait::AutoTraitFinder>::generate_for_trait\r\n  30:     0x556ae98b5bb0 - <alloc[c31f8ca689b1ba4a]::vec::Vec<rustdoc[88e8a3041a7fc0e6]::clean::types::Item> as alloc[c31f8ca689b1ba4a]::vec::spec_from_iter::SpecFromIter<rustdoc[88e8a3041a7fc0e6]::clean::types::Item, core[4909aebc30286168]::iter::adapters::filter_map::FilterMap<alloc[c31f8ca689b1ba4a]::vec::into_iter::IntoIter<rustc_span[f21e7ea1847889b8]::def_id::DefId>, <rustdoc[88e8a3041a7fc0e6]::clean::auto_trait::AutoTraitFinder>::get_auto_trait_impls::{closure#0}>>>::from_iter\r\n  31:     0x556ae9824061 - <rustdoc[88e8a3041a7fc0e6]::clean::auto_trait::AutoTraitFinder>::get_auto_trait_impls\r\n  32:     0x556ae9867df3 - rustdoc[88e8a3041a7fc0e6]::clean::utils::get_auto_trait_and_blanket_impls\r\n  33:     0x556ae997b083 - <rustdoc[88e8a3041a7fc0e6]::passes::collect_trait_impls::SyntheticImplCollector as rustdoc[88e8a3041a7fc0e6]::visit::DocVisitor>::visit_item\r\n  34:     0x556ae997b18a - <rustdoc[88e8a3041a7fc0e6]::passes::collect_trait_impls::SyntheticImplCollector as rustdoc[88e8a3041a7fc0e6]::visit::DocVisitor>::visit_item\r\n  35:     0x556ae997b18a - <rustdoc[88e8a3041a7fc0e6]::passes::collect_trait_impls::SyntheticImplCollector as rustdoc[88e8a3041a7fc0e6]::visit::DocVisitor>::visit_item\r\n  36:     0x556ae997cc06 - <rustdoc[88e8a3041a7fc0e6]::passes::collect_trait_impls::SyntheticImplCollector as rustdoc[88e8a3041a7fc0e6]::visit::DocVisitor>::visit_crate\r\n  37:     0x556ae97f83a7 - <rustc_session[92d4b519115028ad]::session::Session>::time::<alloc[c31f8ca689b1ba4a]::vec::Vec<rustdoc[88e8a3041a7fc0e6]::clean::types::Item>, rustdoc[88e8a3041a7fc0e6]::passes::collect_trait_impls::collect_trait_impls::{closure#0}>\r\n  38:     0x556ae9978ce3 - rustdoc[88e8a3041a7fc0e6]::passes::collect_trait_impls::collect_trait_impls\r\n  39:     0x556ae97f85b2 - <rustc_session[92d4b519115028ad]::session::Session>::time::<rustdoc[88e8a3041a7fc0e6]::clean::types::Crate, rustdoc[88e8a3041a7fc0e6]::core::run_global_ctxt::{closure#7}>\r\n  40:     0x556ae9973435 - rustdoc[88e8a3041a7fc0e6]::core::run_global_ctxt\r\n  41:     0x556ae97f8831 - <rustc_session[92d4b519115028ad]::session::Session>::time::<(rustdoc[88e8a3041a7fc0e6]::clean::types::Crate, rustdoc[88e8a3041a7fc0e6]::config::RenderOptions, rustdoc[88e8a3041a7fc0e6]::formats::cache::Cache), rustdoc[88e8a3041a7fc0e6]::main_args::{closure#1}::{closure#0}::{closure#0}::{closure#0}>\r\n  42:     0x556ae9742a03 - <rustc_middle[810cd5c852e8362a]::ty::context::GlobalCtxt>::enter::<rustdoc[88e8a3041a7fc0e6]::main_args::{closure#1}::{closure#0}::{closure#0}, core[4909aebc30286168]::result::Result<(), rustc_span[f21e7ea1847889b8]::ErrorGuaranteed>>\r\n  43:     0x556ae97f9bf3 - <rustc_interface[6876b9425c9db921]::interface::Compiler>::enter::<rustdoc[88e8a3041a7fc0e6]::main_args::{closure#1}::{closure#0}, core[4909aebc30286168]::result::Result<(), rustc_span[f21e7ea1847889b8]::ErrorGuaranteed>>\r\n  44:     0x556ae9944502 - rustc_span[f21e7ea1847889b8]::set_source_map::<core[4909aebc30286168]::result::Result<(), rustc_span[f21e7ea1847889b8]::ErrorGuaranteed>, rustc_interface[6876b9425c9db921]::interface::run_compiler<core[4909aebc30286168]::result::Result<(), rustc_span[f21e7ea1847889b8]::ErrorGuaranteed>, rustdoc[88e8a3041a7fc0e6]::main_args::{closure#1}>::{closure#0}::{closure#0}>\r\n  45:     0x556ae9a0a6ca - <scoped_tls[3d28ca529fb5aad6]::ScopedKey<rustc_span[f21e7ea1847889b8]::SessionGlobals>>::set::<rustc_interface[6876b9425c9db921]::interface::run_compiler<core[4909aebc30286168]::result::Result<(), rustc_span[f21e7ea1847889b8]::ErrorGuaranteed>, rustdoc[88e8a3041a7fc0e6]::main_args::{closure#1}>::{closure#0}, core[4909aebc30286168]::result::Result<(), rustc_span[f21e7ea1847889b8]::ErrorGuaranteed>>\r\n  46:     0x556ae96f7409 - std[cde9a7b237b1159]::sys_common::backtrace::__rust_begin_short_backtrace::<rustc_interface[6876b9425c9db921]::util::run_in_thread_pool_with_globals<rustc_interface[6876b9425c9db921]::interface::run_compiler<core[4909aebc30286168]::result::Result<(), rustc_span[f21e7ea1847889b8]::ErrorGuaranteed>, rustdoc[88e8a3041a7fc0e6]::main_args::{closure#1}>::{closure#0}, core[4909aebc30286168]::result::Result<(), rustc_span[f21e7ea1847889b8]::ErrorGuaranteed>>::{closure#0}::{closure#0}, core[4909aebc30286168]::result::Result<(), rustc_span[f21e7ea1847889b8]::ErrorGuaranteed>>\r\n  47:     0x556ae9914301 - <<std[cde9a7b237b1159]::thread::Builder>::spawn_unchecked_<rustc_interface[6876b9425c9db921]::util::run_in_thread_pool_with_globals<rustc_interface[6876b9425c9db921]::interface::run_compiler<core[4909aebc30286168]::result::Result<(), rustc_span[f21e7ea1847889b8]::ErrorGuaranteed>, rustdoc[88e8a3041a7fc0e6]::main_args::{closure#1}>::{closure#0}, core[4909aebc30286168]::result::Result<(), rustc_span[f21e7ea1847889b8]::ErrorGuaranteed>>::{closure#0}::{closure#0}, core[4909aebc30286168]::result::Result<(), rustc_span[f21e7ea1847889b8]::ErrorGuaranteed>>::{closure#1} as core[4909aebc30286168]::ops::function::FnOnce<()>>::call_once::{shim:vtable#0}\r\n  48:     0x7f36211772c5 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::h13a60418c9a4d1aa\r\n                               at /rustc/dd5d7c729d4e8a59708df64002e09dbcbc4005ba/library/alloc/src/boxed.rs:1985:9\r\n  49:     0x7f36211772c5 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::he4eb541375b2c3d8\r\n                               at /rustc/dd5d7c729d4e8a59708df64002e09dbcbc4005ba/library/alloc/src/boxed.rs:1985:9\r\n  50:     0x7f36211772c5 - std::sys::unix::thread::Thread::new::thread_start::hbdba04d5a7b01509\r\n                               at /rustc/dd5d7c729d4e8a59708df64002e09dbcbc4005ba/library/std/src/sys/unix/thread.rs:108:17\r\n  51:     0x7f3620df1bb5 - <unknown>\r\n  52:     0x7f3620e73d90 - <unknown>\r\n  53:                0x0 - <unknown>\r\n\r\nerror: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-rustdoc&template=ice.md\r\n\r\nnote: rustc 1.72.0-nightly (dd5d7c729 2023-06-02) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -Z normalize-docs\r\n\r\nquery stack during panic:\r\nend of query stack\r\n```\r\n\r\n</p>\r\n</details>\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/112242/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/112242/timeline", "performed_via_github_app": null, "state_reason": null}