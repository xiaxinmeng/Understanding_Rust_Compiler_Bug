{"url": "https://api.github.com/repos/rust-lang/rust/issues/95462", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/95462/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/95462/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/95462/events", "html_url": "https://github.com/rust-lang/rust/issues/95462", "id": 1185927887, "node_id": "I_kwDOAAsO6M5Gr9LP", "number": 95462, "title": "Typo `MaybeUnint` doesn't suggest `MaybeUninit`", "user": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": {"login": "m-ysk", "id": 47472854, "node_id": "MDQ6VXNlcjQ3NDcyODU0", "avatar_url": "https://avatars.githubusercontent.com/u/47472854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ysk", "html_url": "https://github.com/m-ysk", "followers_url": "https://api.github.com/users/m-ysk/followers", "following_url": "https://api.github.com/users/m-ysk/following{/other_user}", "gists_url": "https://api.github.com/users/m-ysk/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ysk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ysk/subscriptions", "organizations_url": "https://api.github.com/users/m-ysk/orgs", "repos_url": "https://api.github.com/users/m-ysk/repos", "events_url": "https://api.github.com/users/m-ysk/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ysk/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "m-ysk", "id": 47472854, "node_id": "MDQ6VXNlcjQ3NDcyODU0", "avatar_url": "https://avatars.githubusercontent.com/u/47472854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ysk", "html_url": "https://github.com/m-ysk", "followers_url": "https://api.github.com/users/m-ysk/followers", "following_url": "https://api.github.com/users/m-ysk/following{/other_user}", "gists_url": "https://api.github.com/users/m-ysk/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ysk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ysk/subscriptions", "organizations_url": "https://api.github.com/users/m-ysk/orgs", "repos_url": "https://api.github.com/users/m-ysk/repos", "events_url": "https://api.github.com/users/m-ysk/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ysk/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-03-30T06:03:30Z", "updated_at": "2022-11-01T11:44:24Z", "closed_at": "2022-11-01T11:44:24Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "<!--\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\nalong with any information you feel relevant to replicating the bug.\n\nIf you cannot produce a minimal reproduction case (something that would work in\nisolation), please provide the steps or even link to a repository that causes\nthe problematic output to occur.\n-->\n\nGiven the following code: <https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021&gist=3868d05aad2cfb9e962511b364e05077>\n\n```rust\nuse std::mem::MaybeUninit;\n\npub fn next_unsafe(x: &mut (usize, MaybeUninit<[u16; 8]>)) -> Option<[u16; 8]> {\n    if x.0 > 0 {\n        x.0 -= 1;\n        Some(if x.0 > 0 {\n            x.1.assume_init_ref().clone()\n        } else {\n            std::mem::replace(&mut x.1, MaybeUnint::uninit()).assume_init()\n        })\n    } else {\n        None\n    }\n}\n```\n\nThe current output is:\n\n```\nerror[E0433]: failed to resolve: use of undeclared type `MaybeUnint`\n --> src/lib.rs:9:41\n  |\n9 |             std::mem::replace(&mut x.1, MaybeUnint::uninit()).assume_init()\n  |                                         ^^^^^^^^^^ use of undeclared type `MaybeUnint`\n\nFor more information about this error, try `rustc --explain E0433`.\n```\n\n<!-- The following is not always necessary. -->\nIdeally the output should look something like:\n\n```\nerror[E0433]: failed to resolve: use of undeclared type `MaybeUnint`\n --> src/lib.rs:9:41\n  |\n9 |             std::mem::replace(&mut x.1, MaybeUnint::uninit()).assume_init()\n  |                                         ^^^^^^^^^^ use of undeclared type `MaybeUnint`\n  |                                         help: there is an in-scope type with a similar name: `MaybeUninit`\n\nFor more information about this error, try `rustc --explain E0433`.\n```\n\nSimilar to how there's a suggestion when I typo the method name instead:\n\n```\nerror[E0599]: no function or associated item named `unint` found for union `MaybeUninit` in the current scope\n --> src/lib.rs:9:54\n  |\n9 |             std::mem::replace(&mut x.1, MaybeUninit::unint()).assume_init()\n  |                                                      ^^^^^\n  |                                                      |\n  |                                                      function or associated item not found in `MaybeUninit<_>`\n  |                                                      help: there is an associated function with a similar name: `uninit`\n\nFor more information about this error, try `rustc --explain E0599`.\n```\n\nI can understand that searching the entire universe of paths on resolution might not be worth doing, but hopefully things that are `use`d could be done reasonably, or something similar.\n\n(That said, once it's already `use`d it's also true that I'm in much less *need* of the help.)\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"m-ysk\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/95462/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/95462/timeline", "performed_via_github_app": null, "state_reason": "completed"}