{"url": "https://api.github.com/repos/rust-lang/rust/issues/59718", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/59718/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/59718/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/59718/events", "html_url": "https://github.com/rust-lang/rust/issues/59718", "id": 429604501, "node_id": "MDU6SXNzdWU0Mjk2MDQ1MDE=", "number": 59718, "title": "TLS lookups in libsyntax_pos are expensive", "user": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 64037154, "node_id": "MDU6TGFiZWw2NDAzNzE1NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-compiletime", "name": "I-compiletime", "color": "e11d21", "default": false, "description": "Problems and improvements with respect to compile times."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 632886930, "node_id": "MDU6TGFiZWw2MzI4ODY5MzA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-thread-locals", "name": "A-thread-locals", "color": "f7e101", "default": false, "description": "Area: Thread local storage (TLS)"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 28, "created_at": "2019-04-05T06:39:18Z", "updated_at": "2022-12-07T21:07:54Z", "closed_at": "2022-12-07T21:07:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "https://github.com/rust-lang/rust/pull/59693 is a nice speed-up for rustc, reducing instruction counts by as much as 12%. https://github.com/rust-lang/rust/pull/59693#issuecomment-479829802 shows that approximately half the speedup is from avoiding TLS lookups.\r\n\r\nSo I thought: what else is using TLS lookups? I did some profiling and found that `syntax_pos::GLOBALS` accounts for most of it. It has three pieces, `symbol_interner`, `hygiene_data`, `span_interner`.  I did some profiling of the places where they are accessed via `GLOBALS::with`:\r\n```\r\nrustc:\r\n791545069 counts:\r\n(  1) 499029030 (63.0%, 63.0%):     symbol_interner\r\n(  2) 181386140 (22.9%, 86.0%):     hygiene_data\r\n(  3) 109861627 (13.9%, 99.8%):     span_interner\r\n\r\nripgrep:\r\n5455319 counts:\r\n(  1)  2819190 (51.7%, 51.7%):     symbol_interner\r\n(  2)  2015746 (37.0%, 88.6%):     hygiene_data\r\n(  3)   599975 (11.0%, 99.6%):     span_interner\r\n\r\nstyle-servo\r\n79839701 counts:\r\n(  1) 36436621 (45.6%, 45.6%):     hygiene_data\r\n(  2) 31539114 (39.5%, 85.1%):     symbol_interner\r\n(  3) 11562409 (14.5%, 99.6%):     span_interner\r\n\r\nwebrender\r\n27006839 counts:\r\n(  1) 11021232 (40.8%, 40.8%):     hygiene_data\r\n(  2)  9218693 (34.1%, 74.9%):     symbol_interner\r\n(  3)  6707365 (24.8%, 99.8%):     span_interner\r\n```\r\nThese measurements are from a rustc that didn't have #59693's change applied, which avoids almost all of the `span_interner` accesses. And those accesses were only 11.0-24.8% of the `syntax_pos::GLOBALS` accesses. In other words, if we could eliminate most or all of the `hygiene_data` and `symbol_interner` accesses, we'd get even bigger wins than what we saw in #59693.\r\n\r\nI admit that I don't understand how `syntax_pos::GLOBALS` works, why the TLS reference is needed for a global value.\r\n\r\nOne possible idea is to increase the size of `Symbol` from 4 bytes to 8 bytes, and then store short symbols (7 bytes or less) inline. Some preliminary profiling suggests this could capture roughly half of the symbols. `hygiene_data` is a harder nut to crack, being a more complicated structure.\r\n\r\ncc @rust-lang/wg-compiler-performance ", "closed_by": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/59718/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/59718/timeline", "performed_via_github_app": null, "state_reason": "completed"}