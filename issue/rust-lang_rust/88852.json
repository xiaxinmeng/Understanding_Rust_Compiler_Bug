{"url": "https://api.github.com/repos/rust-lang/rust/issues/88852", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/88852/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/88852/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/88852/events", "html_url": "https://github.com/rust-lang/rust/issues/88852", "id": 993816315, "node_id": "MDU6SXNzdWU5OTM4MTYzMTU=", "number": 88852, "title": "`u32::from_be_bytes(*bytes)` generates suboptimal code on riscv", "user": {"login": "xobs", "id": 238325, "node_id": "MDQ6VXNlcjIzODMyNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/238325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xobs", "html_url": "https://github.com/xobs", "followers_url": "https://api.github.com/users/xobs/followers", "following_url": "https://api.github.com/users/xobs/following{/other_user}", "gists_url": "https://api.github.com/users/xobs/gists{/gist_id}", "starred_url": "https://api.github.com/users/xobs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xobs/subscriptions", "organizations_url": "https://api.github.com/users/xobs/orgs", "repos_url": "https://api.github.com/users/xobs/repos", "events_url": "https://api.github.com/users/xobs/events{/privacy}", "received_events_url": "https://api.github.com/users/xobs/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 234956, "node_id": "MDU6TGFiZWwyMzQ5NTY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-codegen", "name": "A-codegen", "color": "f7e101", "default": false, "description": "Area: Code generation"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1049491442, "node_id": "MDU6TGFiZWwxMDQ5NDkxNDQy", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-heavy", "name": "I-heavy", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to binary size of generated code."}, {"id": 1210355734, "node_id": "MDU6TGFiZWwxMjEwMzU1NzM0", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-riscv", "name": "O-riscv", "color": "6e6ec0", "default": false, "description": "Target: RISC-V architecture"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2021-09-11T11:12:22Z", "updated_at": "2023-04-05T17:35:35Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI tried this code:\r\n\r\n```rust\r\npub fn from_be_slice_manual(bytes: &[u8; 4]) -> u32 {\r\n    (bytes[0] as u32) << 24\r\n    | ((bytes[1] as u32) << 16)\r\n    | ((bytes[2] as u32) << 8)\r\n    | (bytes[3] as u32)\r\n}\r\n\r\npub fn from_be_slice_intrinsic(bytes: &[u8; 4]) -> u32 {\r\n    u32::from_be_bytes(*bytes)\r\n}\r\n```\r\n\r\nI expected to see this happen: Both should produce equal output, or at the very least the one using the intrinsic should be acceptable. **When building on x86 these produce the same output**, and on `arm-unknown-linux-gnueabi` the output is different but not terrible. On `riscv64gc-unknown-linux-gnu` the asm generated by the intrinsic is massive.\r\n\r\nInstead, this happened:\r\n\r\n```asm\r\nexample::from_be_slice_manual:\r\n        lb      a1, 0(a0)\r\n        lbu     a2, 1(a0)\r\n        slli    a1, a1, 24\r\n        lbu     a3, 2(a0)\r\n        slli    a2, a2, 16\r\n        lbu     a0, 3(a0)\r\n        or      a1, a1, a2\r\n        slli    a2, a3, 8\r\n        or      a1, a1, a2\r\n        or      a0, a0, a1\r\n        ret\r\n\r\nexample::from_be_slice_intrinsic:\r\n        lbu     a1, 1(a0)\r\n        lbu     a2, 0(a0)\r\n        lb      a3, 3(a0)\r\n        lbu     a0, 2(a0)\r\n        slli    a1, a1, 8\r\n        or      a1, a1, a2\r\n        slli    a2, a3, 8\r\n        or      a0, a0, a2\r\n        slli    a0, a0, 16\r\n        or      a0, a0, a1\r\n        slli    a1, a0, 8\r\n        addi    a2, zero, 255\r\n        slli    a3, a2, 32\r\n        and     a1, a1, a3\r\n        slli    a3, a0, 24\r\n        slli    a4, a2, 40\r\n        and     a3, a3, a4\r\n        or      a1, a1, a3\r\n        slli    a3, a0, 40\r\n        slli    a2, a2, 48\r\n        and     a2, a2, a3\r\n        slli    a0, a0, 56\r\n        or      a0, a0, a2\r\n        or      a0, a0, a1\r\n        srli    a0, a0, 32\r\n        ret\r\n```\r\n\r\n### Meta\r\n\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.55.0\r\n1\r\nrustc 1.55.0 - 786ms\r\n\r\nrustc 1.55.0 (c8dfcfe04 2021-09-06)\r\nbinary: rustc\r\ncommit-hash: c8dfcfe046a7680554bf4eb612bad840e7631c4b\r\ncommit-date: 2021-09-06\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.55.0\r\nLLVM version: 12.0.1\r\n```\r\n\r\nGodbolt link: https://godbolt.org/z/aPPdnond5", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/88852/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/88852/timeline", "performed_via_github_app": null, "state_reason": null}