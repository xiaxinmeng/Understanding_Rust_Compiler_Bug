{"url": "https://api.github.com/repos/rust-lang/rust/issues/106683", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/106683/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/106683/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/106683/events", "html_url": "https://github.com/rust-lang/rust/issues/106683", "id": 1527590857, "node_id": "I_kwDOAAsO6M5bDS_J", "number": 106683, "title": "Strange Code Generation for Custom DST methods", "user": {"login": "ZhennanWu", "id": 38578020, "node_id": "MDQ6VXNlcjM4NTc4MDIw", "avatar_url": "https://avatars.githubusercontent.com/u/38578020?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ZhennanWu", "html_url": "https://github.com/ZhennanWu", "followers_url": "https://api.github.com/users/ZhennanWu/followers", "following_url": "https://api.github.com/users/ZhennanWu/following{/other_user}", "gists_url": "https://api.github.com/users/ZhennanWu/gists{/gist_id}", "starred_url": "https://api.github.com/users/ZhennanWu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ZhennanWu/subscriptions", "organizations_url": "https://api.github.com/users/ZhennanWu/orgs", "repos_url": "https://api.github.com/users/ZhennanWu/repos", "events_url": "https://api.github.com/users/ZhennanWu/events{/privacy}", "received_events_url": "https://api.github.com/users/ZhennanWu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2023-01-10T15:28:28Z", "updated_at": "2023-01-13T20:12:56Z", "closed_at": "2023-01-13T20:12:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\nGodbolt link: https://godbolt.org/z/YM65qf41h\r\n\r\nI tried this simple custom DST method:\r\n\r\n```rust\r\nuse std::any::TypeId;\r\nuse std::any::Any;\r\nuse std::hint::black_box;\r\nstruct A<T:?Sized+'static> {\r\n    a: i32,\r\n    b: T\r\n}\r\n\r\nimpl<T:?Sized+'static> A<T> {\r\n    fn bb(&self) -> TypeId {\r\n        self.b.type_id()\r\n    }\r\n}\r\n\r\npub fn main() {\r\n    let mut a0 = black_box(A{a: 8, b: 9 as i32});\r\n    let mut a: &mut A<dyn Any> = &mut a0;\r\n    a=black_box(a);\r\n    black_box(a.bb());\r\n}\r\n```\r\n\r\nIt turns out the generated assembly (`rustc 1.68.0-nightly (659e169d3 2023-01-04) -Copt-level=3`) contains strange operations on the `%rdi` register, while never actually using the `%rdi` register. It doesn't seem to be performing any caller-reserving-space sort of stuff, and there doesn't seem to be the need for such behavior for this method. \r\n\r\n```\r\n<T as core::any::Any>::type_id:\r\n        movabs  rax, 3735189839305137790\r\n        ret\r\n\r\ncore::ptr::drop_in_place<i32>:\r\n        ret\r\n\r\nexample::main:\r\n        push    rbx\r\n        sub     rsp, 32\r\n        movabs  rax, 38654705672\r\n        mov     qword ptr [rsp + 24], rax\r\n        lea     rax, [rsp + 24]\r\n        mov     qword ptr [rsp + 8], rax\r\n        lea     rax, [rip + .L__unnamed_1]\r\n        mov     qword ptr [rsp + 16], rax\r\n        lea     rbx, [rsp + 8]\r\n        mov     rax, qword ptr [rsp + 16]\r\n# OPERATION ON RDI\r\n        mov     rdi, qword ptr [rax + 16]\r\n        add     rdi, 3\r\n        and     rdi, -4\r\n        add     rdi, qword ptr [rsp + 8]\r\n# THE ACTUAL FUNCTION CALL\r\n        call    qword ptr [rax + 24]\r\n        mov     qword ptr [rsp + 8], rax\r\n        add     rsp, 32\r\n        pop     rbx\r\n        ret\r\n\r\n.L__unnamed_1:\r\n        .quad   core::ptr::drop_in_place<i32>\r\n        .asciz  \"\\004\\000\\000\\000\\000\\000\\000\\000\\004\\000\\000\\000\\000\\000\\000\"\r\n        .quad   <T as core::any::Any>::type_id\r\n```\r\n\r\nIf we re-implement it as a trait object method call, there won't be operations on %rdi register but rather a direct call.\r\n\r\nI haven't tried with more complex code yet, but with simple methods, there seems to be a consistent pattern where custom DST produces longer code than a typical trait object.\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc 1.68.0-nightly (659e169d3 2023-01-04)`:\r\n\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary>Backtrace</summary>\r\n<p>\r\n\r\n```\r\n<backtrace>\r\n```\r\n\r\n</p>\r\n</details>\r\n", "closed_by": {"login": "ZhennanWu", "id": 38578020, "node_id": "MDQ6VXNlcjM4NTc4MDIw", "avatar_url": "https://avatars.githubusercontent.com/u/38578020?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ZhennanWu", "html_url": "https://github.com/ZhennanWu", "followers_url": "https://api.github.com/users/ZhennanWu/followers", "following_url": "https://api.github.com/users/ZhennanWu/following{/other_user}", "gists_url": "https://api.github.com/users/ZhennanWu/gists{/gist_id}", "starred_url": "https://api.github.com/users/ZhennanWu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ZhennanWu/subscriptions", "organizations_url": "https://api.github.com/users/ZhennanWu/orgs", "repos_url": "https://api.github.com/users/ZhennanWu/repos", "events_url": "https://api.github.com/users/ZhennanWu/events{/privacy}", "received_events_url": "https://api.github.com/users/ZhennanWu/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/106683/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/106683/timeline", "performed_via_github_app": null, "state_reason": "completed"}