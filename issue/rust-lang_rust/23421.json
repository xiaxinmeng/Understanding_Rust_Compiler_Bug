{"url": "https://api.github.com/repos/rust-lang/rust/issues/23421", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/23421/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/23421/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/23421/events", "html_url": "https://github.com/rust-lang/rust/issues/23421", "id": 62208311, "node_id": "MDU6SXNzdWU2MjIwODMxMQ==", "number": 23421, "title": "Inaccuracies in the reference about bitshifts and overflows", "user": {"login": "simias", "id": 7925386, "node_id": "MDQ6VXNlcjc5MjUzODY=", "avatar_url": "https://avatars.githubusercontent.com/u/7925386?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simias", "html_url": "https://github.com/simias", "followers_url": "https://api.github.com/users/simias/followers", "following_url": "https://api.github.com/users/simias/following{/other_user}", "gists_url": "https://api.github.com/users/simias/gists{/gist_id}", "starred_url": "https://api.github.com/users/simias/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simias/subscriptions", "organizations_url": "https://api.github.com/users/simias/orgs", "repos_url": "https://api.github.com/users/simias/repos", "events_url": "https://api.github.com/users/simias/events{/privacy}", "received_events_url": "https://api.github.com/users/simias/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2015-03-16T21:00:09Z", "updated_at": "2015-03-25T05:09:12Z", "closed_at": "2015-03-25T05:09:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "The references states that `>>` is a logical right shift, however it seems that it behaves like an _arithmetic_ right shift for signed integers. For instance the following snippet prints `-2`:\n\n``` rust\nlet i = -4i32;\n\nprintln!(\"{}\", i >> 1);\n```\n\nA logical right shift should produce `2147483646` (assuming 2's complement representation which I think rust guarantees?).\n\nIn the same spirit the reference does not say if shifting outside the range of an integer is defined. From my quick test it doesn't appear to be:\n\n``` rust\nlet i = 10u32;\nlet j = 200u32;\n\nprintln!(\"{}\", i << j);\n```\n\nThis prints garbage on my computer and on the playpen, so I assume it's UB or at least UV (it doesn't trigger the overflow check in debug builds though, maybe it should?)\n\nOn a similar topic the reference also states that the following behaviours are safe:\n- Unsigned integer overflow (well-defined as wrapping)\n- Signed integer overflow (well-defined as two's complement representation wrapping)\n\nI believe that's not true anymore.\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/23421/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/23421/timeline", "performed_via_github_app": null, "state_reason": "completed"}