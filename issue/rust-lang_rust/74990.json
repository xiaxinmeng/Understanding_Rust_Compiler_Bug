{"url": "https://api.github.com/repos/rust-lang/rust/issues/74990", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/74990/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/74990/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/74990/events", "html_url": "https://github.com/rust-lang/rust/issues/74990", "id": 670237997, "node_id": "MDU6SXNzdWU2NzAyMzc5OTc=", "number": 74990, "title": "Tracking Issue for \"C-unwind ABI\", RFC 2945", "user": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 45472092, "node_id": "MDU6TGFiZWw0NTQ3MjA5Mg==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-ffi", "name": "A-ffi", "color": "f7e101", "default": false, "description": "Area: Foreign Function Interface (FFI)"}, {"id": 89436934, "node_id": "MDU6TGFiZWw4OTQzNjkzNA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/B-RFC-approved", "name": "B-RFC-approved", "color": "d304cb", "default": false, "description": "Approved by a merged RFC but not yet implemented."}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 223796632, "node_id": "MDU6TGFiZWwyMjM3OTY2MzI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/relnotes", "name": "relnotes", "color": "fad8c7", "default": false, "description": "Marks issues that should be documented in the release notes of the next release."}, {"id": 650846969, "node_id": "MDU6TGFiZWw2NTA4NDY5Njk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-tracking-issue", "name": "C-tracking-issue", "color": "f5f1fd", "default": false, "description": "Category: A tracking issue for an RFC or an unstable feature."}, {"id": 919710011, "node_id": "MDU6TGFiZWw5MTk3MTAwMTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/disposition-merge", "name": "disposition-merge", "color": "008800", "default": false, "description": "This issue / PR is in PFCP or FCP with a disposition to merge it."}, {"id": 923282386, "node_id": "MDU6TGFiZWw5MjMyODIzODY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/finished-final-comment-period", "name": "finished-final-comment-period", "color": "f9e189", "default": false, "description": "The final comment period is finished for this PR / Issue."}, {"id": 2245032240, "node_id": "MDU6TGFiZWwyMjQ1MDMyMjQw", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-c_unwind", "name": "F-c_unwind", "color": "f9c0cc", "default": false, "description": "`#![feature(c_unwind)]`"}, {"id": 3537211959, "node_id": "LA_kwDOAAsO6M7S1ZI3", "url": "https://api.github.com/repos/rust-lang/rust/labels/S-tracking-impl-incomplete", "name": "S-tracking-impl-incomplete", "color": "4682b4", "default": false, "description": ""}, {"id": 4288196623, "node_id": "LA_kwDOAAsO6M7_mLAP", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-abi", "name": "A-abi", "color": "f7e101", "default": false, "description": "Area: Concerning the \"application binary interface\" between functions."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 46, "created_at": "2020-07-31T21:11:17Z", "updated_at": "2023-06-17T23:50:26Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for creating a tracking issue! \ud83d\udcdc Tracking issues are for tracking a\r\nfeature from implementation to stabilisation. Make sure to include the relevant\r\nRFC for the feature if it has one. Otherwise provide a short summary of the\r\nfeature and link any relevant PRs or issues, and remove any sections that are\r\nnot relevant to the feature.\r\n\r\nRemember to add team labels to the tracking issue.\r\nFor a language team feature, this would e.g., be `T-lang`.\r\nSuch a feature should also be labeled with e.g., `F-c_unwind`.\r\nThis label is used to associate issues (e.g., bugs and design questions) to the feature.\r\n-->\r\n\r\nThis is a tracking issue for the RFC \"C-unwind ABI\" (rust-lang/rfcs#2945).\r\n\r\nThe feature gate for the issue is `#![feature(c_unwind)]`.\r\n\r\nThis RFC was created as part of the ffi-unwind project group tracked at https://github.com/rust-lang/lang-team/issues/19.\r\n\r\n### About tracking issues\r\n\r\nTracking issues are used to record the overall progress of implementation.\r\nThey are also uses as hubs connecting to other relevant issues, e.g., bugs or open design questions.\r\nA tracking issue is however *not* meant for large scale discussion, questions, or bug reports about a feature.\r\nInstead, open a dedicated issue for the specific matter and add the relevant feature gate label.\r\n\r\n### Steps\r\n<!--\r\nInclude each step required to complete the feature. Typically this is a PR\r\nimplementing a feature, followed by a PR that stabilises the feature. However\r\nfor larger features an implementation could be broken up into multiple PRs.\r\n-->\r\n\r\n- [ ] Implement the RFC\r\n- [ ] Adjust documentation ([see instructions on rustc-dev-guide][doc-guide])\r\n- [ ] Stabilization PR ([see instructions on rustc-dev-guide][stabilization-guide])\r\n\r\n[stabilization-guide]: https://rustc-dev-guide.rust-lang.org/stabilization_guide.html#stabilization-pr\r\n[doc-guide]: https://rustc-dev-guide.rust-lang.org/stabilization_guide.html#documentation-prs\r\n\r\n### Implementation notes\r\n\r\nMajor provisions in the RFC:\r\n\r\n* [x] Add a `C-unwind` ABI and `system-unwind` (I think), we may need more variants.\r\n* [ ] For external functions with the C ABI, we already (I believe) add the \"nounwind\" LLVM attributes when we build them. We want to continue doing this.\r\n* [ ] For external functions with the C-unwind ABI, we do *not* want any such attributes.\r\n* [ ] For Rust functions defined with the C ABI, e.g., `extern \"C\" fn foo() { ... }`, we want to force them to abort if there is a panic. The MIR helper function [`should_abort_on_panic`](https://doc.rust-lang.org/nightly/nightly-rustc/rustc_mir_build/build/fn.should_abort_on_panic.html) already exists and I think will modify the generated code to insert the required shims in such a case. They should also be marked as \"nounwind\" in LLVM, if they're not already. \r\n* [ ] Rust functions with the \"C-unwind\" ABI should **not** abort on panic.\r\n* [ ] Use ABI to guide the \"nounwind\" attribute on callsites as well.\r\n* [ ] Write suitable codegen tests to check generated LLVM IR.\r\n\r\n### Unresolved Questions\r\n<!--\r\nInclude any open questions that need to be answered before the feature can be\r\nstabilised.\r\n-->\r\n\r\nNone. The unresolved questions in the RFC were meant to be solved by future RFCs building on this one.\r\n\r\n### Implementation history\r\n* Initial implementation: https://github.com/rust-lang/rust/pull/76570\r\n* Additional work (removing `#[unwind]`, adjusting panic handling): https://github.com/rust-lang/rust/pull/86155", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/74990/reactions", "total_count": 9, "+1": 0, "-1": 0, "laugh": 0, "hooray": 8, "confused": 0, "heart": 1, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/74990/timeline", "performed_via_github_app": null, "state_reason": null}