{"url": "https://api.github.com/repos/rust-lang/rust/issues/23833", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/23833/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/23833/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/23833/events", "html_url": "https://github.com/rust-lang/rust/issues/23833", "id": 65068855, "node_id": "MDU6SXNzdWU2NTA2ODg1NQ==", "number": 23833, "title": "const_eval sometimes confuses (a guess at) expected type with expression's actual type", "user": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37544, "node_id": "MDU6TGFiZWwzNzU0NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-typesystem", "name": "A-typesystem", "color": "f7e101", "default": false, "description": "Area: The type system"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-03-29T15:00:02Z", "updated_at": "2016-08-11T22:55:52Z", "closed_at": "2016-08-11T22:55:52Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "const_eval sometimes confuses a guess at expected type with expression's actual type\n\nHere's an example:\n\n``` rust\nuse std::fmt;\nuse std::{i8, i16, i32, i64, isize};\nuse std::{u8, u16, u32, u64, usize};\n\nconst A_I8_T\n    : [u32; (i8::MAX as i8 - 1i8) as usize]\n    = [0; (i8::MAX as usize) - 1];\n\nfn main() {\n    foo(&A_I8_T[..]);\n}\n\nfn foo<T:fmt::Debug>(x: T) {\n    println!(\"{:?}\", x);\n}\n```\n\n[playpen](http://is.gd/3E7vQ`h) yields:\n\n```\n<anon>:6:14: 6:33 error: array length constant evaluation error: can't do this op on a usize and isize [E0250]\n<anon>:6     : [u32; (i8::MAX as i8 - 1i8) as usize]\n                      ^~~~~~~~~~~~~~~~~~~\nerror: aborting due to previous error\nplaypen: application terminated with error code 101\n```\n\nI believe this is due to this line in `const_eval.rs`:\n\nhttps://github.com/rust-lang/rust/blob/master/src/librustc/middle/const_eval.rs#L504\n(transcribed immediately below for ease of reference:)\n\nNamely, the logic here takes a constant expression like the one in the above count expression and feeds the expected `usize` type down into the computation of `(i8::MAX as i8 - 1i8)`.\n\n``` rust\n      ast::ExprCast(ref base, ref target_ty) => {\n        // This tends to get called w/o the type actually having been\n        // populated in the ctxt, which was causing things to blow up\n        // (#5900). Fall back to doing a limited lookup to get past it.\n        let ety = ety.or_else(|| ast_ty_to_prim_ty(tcx, &**target_ty))\n                .unwrap_or_else(|| {\n                    tcx.sess.span_fatal(target_ty.span,\n                                        \"target type not found for const cast\")\n                });\n        // Prefer known type to noop, but always have a type hint.\n        let base_hint = ty::expr_ty_opt(tcx, &**base).unwrap_or(ety);\n        let val = try!(eval_const_expr_partial(tcx, &**base, Some(base_hint)));\n        match cast_const(val, ety) {\n            Ok(val) => val,\n            Err(kind) => return Err(ConstEvalErr { span: e.span, kind: kind }),\n        }\n      }\n```\n\nEven though there are many many hints in  `(i8::MAX as i8 - 1i8)` that are attempting to force the left- and right-hand sides to both be `i8`, the const_eval is ignoring them and trying to force the left-hand-side to be a `usize`.\n\n(This causes problems for proper overflow detection in const_eval.)\n", "closed_by": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/23833/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/23833/timeline", "performed_via_github_app": null, "state_reason": "completed"}