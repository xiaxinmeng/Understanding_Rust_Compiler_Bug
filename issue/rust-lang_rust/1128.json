{"url": "https://api.github.com/repos/rust-lang/rust/issues/1128", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/1128/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/1128/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/1128/events", "html_url": "https://github.com/rust-lang/rust/issues/1128", "id": 2144069, "node_id": "MDU6SXNzdWUyMTQ0MDY5", "number": 1128, "title": "Task system is embarrassingly unexpressive", "user": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/rust-lang/rust/milestones/3", "html_url": "https://github.com/rust-lang/rust/milestone/3", "labels_url": "https://api.github.com/repos/rust-lang/rust/milestones/3/labels", "id": 7452, "node_id": "MDk6TWlsZXN0b25lNzQ1Mg==", "number": 3, "title": "0.1 first supported public release", "description": "", "creator": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 106, "state": "closed", "created_at": "2011-05-05T21:43:30Z", "updated_at": "2013-04-19T16:14:01Z", "due_on": "2012-01-31T08:00:00Z", "closed_at": "2012-01-20T03:40:13Z"}, "comments": 1, "created_at": "2011-11-04T14:07:37Z", "updated_at": "2011-11-04T14:21:03Z", "closed_at": "2011-11-04T14:21:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The primitives provided in `task` and `comm` are _very_ primitive. Too primitive to write a tutorial chapter about without sounding completely lame. So I tried to write a helper function which helps create a channel back from a child task to its parent. None of the existing tests or examples seem to do this. And, apparently, with good reason.\n\nBelow is what I have. It doesn't work. Writing new task-creation utilities will typically require type parameters. We currently can not spawn functions with type parameters, so the 'landing pad' helper that such a utility would spawn can not be generic.\n\nI half got around this with a clunky `reinterpret_cast`, but the resulting program doesn't work when the `To` type has a different size than an `int`, because the port being created in `helper` doesn't know its type.\n\nNot being able to write generic utility functions around task spawning seems unacceptable. I'm marking this as a blocker because I don't think we can release a language that is supposed to have tasks as one of its interesting features with such a primitive set of task operations. I'm holding off on writing the tutorial section about tasks until we figure out a solution here. (Or maybe it already exists and I just didn't see it.)\n\n```\nuse std;\nimport std::{task, comm};\n\ntype connected_fn<To, From> = fn(comm::port<To>, comm::chan<From>);\nfn spawn_connected<uniq To, uniq From>(f: connected_fn<To, From>)\n    -> {task: task::task, in: comm::port<From>, out: comm::chan<To>} unsafe {\n    fn helper(d: (comm::chan<int>,\n                  comm::chan<comm::chan<int>>,\n                  connected_fn<int, int>)) {\n        let (out, send_in, f) = d;\n        let in = comm::port::<int>();\n        comm::send(send_in, comm::chan(in));\n        f(in, out);\n    }\n    let in = comm::port::<From>();\n    let get_out = comm::port::<comm::chan<To>>();\n    let task = task::spawn((comm::chan(in), comm::chan(get_out), f),\n                           std::unsafe::reinterpret_cast(helper));\n    ret {task: task, in: in, out: comm::recv(get_out)};\n}\n\ntag msg { msg(int); quit; }\n\nfn worker(in: comm::port<msg>, out: comm::chan<int>) {\n    while true {\n        alt comm::recv(in) {\n          msg(i) { comm::send(out, i * 10); }\n          quit. { break; }\n        }\n    }\n}\n\nfn main() {\n    let {task, in, out} = spawn_connected(worker);\n    comm::send(out, msg(20));\n    log_err comm::recv(in);\n    comm::send(out, quit);\n}\n```\n", "closed_by": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/1128/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/1128/timeline", "performed_via_github_app": null, "state_reason": "completed"}