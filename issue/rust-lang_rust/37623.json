{"url": "https://api.github.com/repos/rust-lang/rust/issues/37623", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/37623/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/37623/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/37623/events", "html_url": "https://github.com/rust-lang/rust/issues/37623", "id": 187619352, "node_id": "MDU6SXNzdWUxODc2MTkzNTI=", "number": 37623, "title": "Add an easy way to get details of a type's size and layout in memory", "user": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2016-11-07T03:45:13Z", "updated_at": "2016-11-29T20:01:02Z", "closed_at": "2016-11-29T20:01:02Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Multiple times recently, while looking at #36799, I have wanted to know exactly how a type is laid out in memory, including padding and unused bytes. Particular for enums where the variants can vary significantly in size, and shrinking large variants can be a win.\r\n\r\nI have successfully shrunk some types (#37445, #37577). I manually worked out their memory layouts by using a combination of `println!` statements and staring at the code. I can usually work out the layout, though not always. (E.g. I know that `Rvalue` is 152 bytes on 64-bit platforms, and that the `BinaryOp` and `CheckedBinaryOp` variants are the largest, but I haven't yet worked out why they take that much space because the nesting of the types within those variants is deep and non-obvious.)\r\n\r\nBut it is a huge pain to do it manually, as well as unreliable. It would be lovely if there was an easy way to get this information. Something like `std::intrinsics::type_name`, perhaps. Such a feature would have wide utility for developers of many Rust programs.", "closed_by": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/37623/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 1, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/37623/timeline", "performed_via_github_app": null, "state_reason": "completed"}