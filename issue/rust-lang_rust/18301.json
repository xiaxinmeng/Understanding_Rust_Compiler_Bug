{"url": "https://api.github.com/repos/rust-lang/rust/issues/18301", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/18301/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/18301/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/18301/events", "html_url": "https://github.com/rust-lang/rust/issues/18301", "id": 46797077, "node_id": "MDU6SXNzdWU0Njc5NzA3Nw==", "number": 18301, "title": "Allow implementation of Show for RadixFmt with user-defined type", "user": {"login": "jsanders", "id": 38320, "node_id": "MDQ6VXNlcjM4MzIw", "avatar_url": "https://avatars.githubusercontent.com/u/38320?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsanders", "html_url": "https://github.com/jsanders", "followers_url": "https://api.github.com/users/jsanders/followers", "following_url": "https://api.github.com/users/jsanders/following{/other_user}", "gists_url": "https://api.github.com/users/jsanders/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsanders/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsanders/subscriptions", "organizations_url": "https://api.github.com/users/jsanders/orgs", "repos_url": "https://api.github.com/users/jsanders/repos", "events_url": "https://api.github.com/users/jsanders/events{/privacy}", "received_events_url": "https://api.github.com/users/jsanders/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-10-25T00:44:49Z", "updated_at": "2015-10-27T14:51:57Z", "closed_at": "2015-10-27T14:51:57Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm not sure whether or not this is meant to work already. It is almost possible with:\n\n``` rust\nimpl fmt::Show for fmt::RadixFmt<MyType, fmt::Radix> {\n    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {\n        let fmt::RadixFmt(ref x, radix) = *self;\n        let base = radix.base; // This doesn't work because base is private\n        // ...\n    }\n}\n```\n\nIt doesn't seem possible to get the actual base out, due to its privacy. It used to be possible to provide a ToStrRadix implementation for a user-defined type, and it would be really nice to be able to use the `fmt::radix` method.\n", "closed_by": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/18301/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/18301/timeline", "performed_via_github_app": null, "state_reason": "completed"}