{"url": "https://api.github.com/repos/rust-lang/rust/issues/97643", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/97643/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/97643/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/97643/events", "html_url": "https://github.com/rust-lang/rust/issues/97643", "id": 1257912284, "node_id": "I_kwDOAAsO6M5K-jfc", "number": 97643, "title": "Emit only one note per struct when multiple fields would trigger the same compiler note", "user": {"login": "bruxisma", "id": 63051, "node_id": "MDQ6VXNlcjYzMDUx", "avatar_url": "https://avatars.githubusercontent.com/u/63051?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bruxisma", "html_url": "https://github.com/bruxisma", "followers_url": "https://api.github.com/users/bruxisma/followers", "following_url": "https://api.github.com/users/bruxisma/following{/other_user}", "gists_url": "https://api.github.com/users/bruxisma/gists{/gist_id}", "starred_url": "https://api.github.com/users/bruxisma/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bruxisma/subscriptions", "organizations_url": "https://api.github.com/users/bruxisma/orgs", "repos_url": "https://api.github.com/users/bruxisma/repos", "events_url": "https://api.github.com/users/bruxisma/events{/privacy}", "received_events_url": "https://api.github.com/users/bruxisma/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1659943986, "node_id": "MDU6TGFiZWwxNjU5OTQzOTg2", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-verbose", "name": "D-verbose", "color": "c9f7a3", "default": false, "description": "Too much output caused by a single piece of incorrect code"}], "state": "closed", "locked": false, "assignee": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-06-02T09:10:55Z", "updated_at": "2022-06-22T05:32:36Z", "closed_at": "2022-06-22T05:32:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n\r\nIf you cannot produce a minimal reproduction case (something that would work in\r\nisolation), please provide the steps or even link to a repository that causes\r\nthe problematic output to occur.\r\n-->\r\n\r\nGiven the following code: <!-- Please provide a link to play.rust-lang.org -->\r\n\r\n```rust\r\n#[derive(Debug)]\r\npub struct Whatever {\r\n  pub field0: (),\r\n  field1: (),\r\n  field2: (),\r\n  field3: (),\r\n  field4: (),\r\n}\r\n```\r\n\r\nThe current output is:\r\n\r\n```\r\nwarning: field is never read: `field1`\r\n  --> src\\cmake\\preset.rs:23:3\r\n   |\r\n23 |   field1: (),\r\n   |   ^^^^^^^^^^\r\n   |\r\nnote: `Whatever` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\r\n  --> src\\cmake\\preset.rs:20:10\r\n   |\r\n20 | #[derive(Debug)]\r\n   |          ^^^^^\r\n   = note: this warning originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)\r\n\r\nwarning: field is never read: `field2`\r\n  --> src\\cmake\\preset.rs:24:3\r\n   |\r\n24 |   field2: (),\r\n   |   ^^^^^^^^^^\r\n   |\r\nnote: `Whatever` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\r\n  --> src\\cmake\\preset.rs:20:10\r\n   |\r\n20 | #[derive(Debug)]\r\n   |          ^^^^^\r\n   = note: this warning originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)\r\n\r\nwarning: field is never read: `field3`\r\n  --> src\\cmake\\preset.rs:25:3\r\n   |\r\n25 |   field3: (),\r\n   |   ^^^^^^^^^^\r\n   |\r\nnote: `Whatever` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\r\n  --> src\\cmake\\preset.rs:20:10\r\n   |\r\n20 | #[derive(Debug)]\r\n   |          ^^^^^\r\n   = note: this warning originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)\r\n\r\nwarning: field is never read: `field4`\r\n  --> src\\cmake\\preset.rs:26:3\r\n   |\r\n26 |   field4: (),\r\n   |   ^^^^^^^^^^\r\n   |\r\nnote: `Whatever` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\r\n  --> src\\cmake\\preset.rs:20:10\r\n   |\r\n20 | #[derive(Debug)]\r\n   |          ^^^^^\r\n   = note: this warning originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)\r\n\r\n```\r\n\r\n<!-- The following is not always necessary. -->\r\nIdeally the output should look like:\r\n\r\n```\r\nwarning: field is never read: `field1`\r\n  --> src\\cmake\\preset.rs:23:3\r\n   |\r\n23 |   field1: (),\r\n   |   ^^^^^^^^^^\r\n   |\r\n\r\nwarning: field is never read: `field2`\r\n  --> src\\cmake\\preset.rs:24:3\r\n   |\r\n24 |   field2: (),\r\n   |   ^^^^^^^^^^\r\n   |\r\n\r\nwarning: field is never read: `field3`\r\n  --> src\\cmake\\preset.rs:25:3\r\n   |\r\n25 |   field3: (),\r\n   |   ^^^^^^^^^^\r\n   |\r\n\r\nwarning: field is never read: `field4`\r\n  --> src\\cmake\\preset.rs:26:3\r\n   |\r\n26 |   field4: (),\r\n   |   ^^^^^^^^^^\r\n   |\r\nnote: `Whatever` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\r\n  --> src\\cmake\\preset.rs:20:10\r\n   |\r\n20 | #[derive(Debug)]\r\n   |          ^^^^^\r\n   = note: this warning originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)\r\n\r\n```\r\n\r\nOr something even more compact if possible. Without this, compiler output is almost double, and mostly unnecessary.\r\n\r\n<!--\r\nIf the problem is not self-explanatory, please provide a rationale for the\r\nchange.\r\n-->\r\n\r\n<!--\r\nIf dramatically different output is caused by small changes, consider also\r\nadding them here.\r\n\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions. The output might also be\r\ndifferent depending on the Edition.\r\n-->\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/97643/reactions", "total_count": 8, "+1": 7, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 1, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/97643/timeline", "performed_via_github_app": null, "state_reason": "completed"}