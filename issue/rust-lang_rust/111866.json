{"url": "https://api.github.com/repos/rust-lang/rust/issues/111866", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/111866/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/111866/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/111866/events", "html_url": "https://github.com/rust-lang/rust/issues/111866", "id": 1721629259, "node_id": "I_kwDOAAsO6M5mnfpL", "number": 111866, "title": "Move assert! panic to cold function ", "user": {"login": "PSeitz", "id": 1109503, "node_id": "MDQ6VXNlcjExMDk1MDM=", "avatar_url": "https://avatars.githubusercontent.com/u/1109503?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PSeitz", "html_url": "https://github.com/PSeitz", "followers_url": "https://api.github.com/users/PSeitz/followers", "following_url": "https://api.github.com/users/PSeitz/following{/other_user}", "gists_url": "https://api.github.com/users/PSeitz/gists{/gist_id}", "starred_url": "https://api.github.com/users/PSeitz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PSeitz/subscriptions", "organizations_url": "https://api.github.com/users/PSeitz/orgs", "repos_url": "https://api.github.com/users/PSeitz/repos", "events_url": "https://api.github.com/users/PSeitz/events{/privacy}", "received_events_url": "https://api.github.com/users/PSeitz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 2011781731, "node_id": "MDU6TGFiZWwyMDExNzgxNzMx", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs", "name": "T-libs", "color": "bfd4f2", "default": false, "description": "Relevant to the library team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2023-05-23T09:29:30Z", "updated_at": "2023-05-23T15:58:40Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "We can probably assume that `assert!` panics are never in the hot path. They are usually placed at the top of a function to catch invalid arguments.\r\n\r\nCurrently the panic is inlined into the code (https://godbolt.org/z/oPzcK9zYG), so if a function is called, there's a bunch of bunch bytes in the caches that are seldom used.\r\nI saw this impacting performance negatively in several places.\r\n\r\n[`copy_from_slice`](https://doc.rust-lang.org/std/primitive.slice.html#method.copy_from_slice) uses a function which is marked as `cold` and  `inline(never)` to avoid this issue.\r\n\r\n\r\nIdeally `assert!` would always apply the same technique. I'm not sure how to handle picking a function name or if that can be avoided. \r\n\r\n```rust\r\npub fn copy(src: &[u8], dst: &mut [u8]) {\r\n    #[inline(never)]\r\n    #[cold]\r\n    #[track_caller]\r\n    fn len_mismatch_fail(dst_len: usize, src_len: usize) -> ! {\r\n        panic!(\r\n            \"source slice length ({}) does not match destination slice length ({})\",\r\n            src_len, dst_len,\r\n        );\r\n    }\r\n\r\n    if src.len() != dst.len() {\r\n        len_mismatch_fail(src.len(), dst.len());\r\n    }\r\n    // My code starts at the beginning of the function\r\n\r\n}\r\n\r\n\r\npub fn copy2(src: &[u8], dst: &mut [u8]) {\r\n\r\n    assert!(src.len() == dst.len(), \"source slice length ({}) does not match destination slice length ({})\",\r\n            src.len(), dst.len());\r\n    // My code comes after the inlined assertion stuff\r\n}\r\n```\r\n\r\n`copy2` macro expanded code:\r\n```rust\r\n\r\npub fn copy2(src: &[u8], dst: &mut [u8]) {\r\n    if !(src.len() == dst.len()) {\r\n            {\r\n                ::std::rt::panic_fmt(format_args!(\"source slice length ({0}) does not match destination slice length ({1})\",\r\n                        src.len(), dst.len()));\r\n            }\r\n        };\r\n}\r\n```", "closed_by": {"login": "saethlin", "id": 12105168, "node_id": "MDQ6VXNlcjEyMTA1MTY4", "avatar_url": "https://avatars.githubusercontent.com/u/12105168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saethlin", "html_url": "https://github.com/saethlin", "followers_url": "https://api.github.com/users/saethlin/followers", "following_url": "https://api.github.com/users/saethlin/following{/other_user}", "gists_url": "https://api.github.com/users/saethlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/saethlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saethlin/subscriptions", "organizations_url": "https://api.github.com/users/saethlin/orgs", "repos_url": "https://api.github.com/users/saethlin/repos", "events_url": "https://api.github.com/users/saethlin/events{/privacy}", "received_events_url": "https://api.github.com/users/saethlin/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/111866/reactions", "total_count": 4, "+1": 4, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/111866/timeline", "performed_via_github_app": null, "state_reason": "reopened"}