{"url": "https://api.github.com/repos/rust-lang/rust/issues/61442", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/61442/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/61442/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/61442/events", "html_url": "https://github.com/rust-lang/rust/issues/61442", "id": 451126686, "node_id": "MDU6SXNzdWU0NTExMjY2ODY=", "number": 61442, "title": "Broken MIR in futures generator (async/await)", "user": {"login": "Bunogi", "id": 15606718, "node_id": "MDQ6VXNlcjE1NjA2NzE4", "avatar_url": "https://avatars.githubusercontent.com/u/15606718?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Bunogi", "html_url": "https://github.com/Bunogi", "followers_url": "https://api.github.com/users/Bunogi/followers", "following_url": "https://api.github.com/users/Bunogi/following{/other_user}", "gists_url": "https://api.github.com/users/Bunogi/gists{/gist_id}", "starred_url": "https://api.github.com/users/Bunogi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Bunogi/subscriptions", "organizations_url": "https://api.github.com/users/Bunogi/orgs", "repos_url": "https://api.github.com/users/Bunogi/repos", "events_url": "https://api.github.com/users/Bunogi/events{/privacy}", "received_events_url": "https://api.github.com/users/Bunogi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 256133398, "node_id": "MDU6TGFiZWwyNTYxMzMzOTg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-mir", "name": "A-mir", "color": "f7e101", "default": false, "description": "Area: Mid-level IR (MIR) - https://blog.rust-lang.org/2016/04/19/MIR.html"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 679846574, "node_id": "MDU6TGFiZWw2Nzk4NDY1NzQ=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-generators", "name": "A-generators", "color": "f7e101", "default": false, "description": "Area: Generators"}, {"id": 1049510487, "node_id": "MDU6TGFiZWwxMDQ5NTEwNDg3", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-async-await", "name": "A-async-await", "color": "f7e101", "default": false, "description": "Area: Async & Await"}, {"id": 1259720434, "node_id": "MDU6TGFiZWwxMjU5NzIwNDM0", "url": "https://api.github.com/repos/rust-lang/rust/labels/AsyncAwait-Polish", "name": "AsyncAwait-Polish", "color": "d4c5f9", "default": false, "description": "Async-await issues that are part of the \"polish\" area"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-06-01T21:30:20Z", "updated_at": "2019-06-25T05:22:49Z", "closed_at": "2019-06-25T05:22:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Issue\r\nThe code below causes an internal compiler error. I've provided some more details as comments.\r\n\r\n```\r\nerror: internal compiler error: src/librustc_mir/transform/generator.rs:532: Broken MIR: generator contains type &mut std::string::String in MIR, but typeck only knows about for<'r, 's, 't0, 't1, 't2, 't3, 't4, 't5, 't6, 't7> {Update, u64, std::string::String, for<'t8> fn(std::fmt::Arguments<'t8>) -> std::string::String {std::fmt::format}, fn(&'r [&'r str], &'r [std::fmt::ArgumentV1<'r>]) -> std::fmt::Arguments<'r> {std::fmt::Arguments::<'r>::new_v1}, &'s str, str, &'t0 str, [&'t1 str; 1], &'t2 [&'t3 str; 1], &'t4 [&'t5 str; 1], &'t6 [&'t7 str], impl core::future::future::Future, ()}\r\n  --> src/main.rs:32:41\r\n   |\r\n32 |   async fn perform_update(update: Update) {\r\n   |  _________________________________________^\r\n33 | |     if let Update::User(id) = update {\r\n34 | |         let mut reply = String::new();\r\n35 | |         reply += &format!(\"{}\", get_user(id).await);\r\n36 | |     }\r\n37 | | }\r\n   | |_^\r\n```\r\n## Code\r\n```rust \r\n#![feature(async_await)]\r\n\r\nuse std::fmt;\r\n\r\n#[derive(Default)]\r\nstruct User {\r\n    first_name: String,\r\n    last_name: Option<String>,\r\n    username: Option<String>,\r\n}\r\n\r\nimpl fmt::Display for User {\r\n    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\r\n        if let Some(u) = &self.username {\r\n            write!(f, \"{}\", u)\r\n        } else if let Some(last) = &self.last_name {\r\n            write!(f, \"{} {}\", self.first_name, last)\r\n        } else {\r\n            write!(f, \"{}\", self.first_name)\r\n        }\r\n    }\r\n}\r\n\r\nasync fn get_user(id: u64) -> User {\r\n    unimplemented!()\r\n}\r\n\r\nenum Update {\r\n    User(u64),\r\n}\r\n\r\nasync fn perform_update(update: Update) {\r\n    if let Update::User(id) = update {\r\n        let mut reply = String::new();\r\n        //If `reply` is assigned directly to this value, the code compiles.\r\n        reply += &format!(\"{}\", get_user(id).await);\r\n    }\r\n}\r\n\r\nfn main() {\r\n    //Compiles when this line is omitted, using futures-preview 0.3.0-alpha.16\r\n    futures::executor::block_on(perform_update(Update::User(Default::default())));\r\n}\r\n```\r\n\r\n## Meta\r\nrustc 1.37.0-nightly (7840a0b75 2019-05-31)\r\nbinary: rustc\r\ncommit-hash: 7840a0b753a065a41999f1fb6028f67d33e3fdd5\r\ncommit-date: 2019-05-31\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.37.0-nightly\r\nLLVM version: 8.0\r\n\r\nBacktrace:\r\n```\r\nthread 'rustc' panicked at 'Box<Any>', src/librustc_errors/lib.rs:572:9\r\nstack backtrace:\r\n   0: backtrace::backtrace::libunwind::trace\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.25/src/backtrace/libunwind.rs:97\r\n   1: backtrace::backtrace::trace_unsynchronized\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.25/src/backtrace/mod.rs:66\r\n   2: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:47\r\n   3: std::sys_common::backtrace::print\r\n             at src/libstd/sys_common/backtrace.rs:36\r\n   4: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/panicking.rs:197\r\n   5: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:211\r\n   6: rustc::util::common::panic_hook\r\n   7: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:478\r\n   8: std::panicking::begin_panic\r\n   9: rustc_errors::Handler::span_bug\r\n  10: rustc::util::bug::opt_span_bug_fmt::{{closure}}\r\n  11: rustc::ty::context::tls::with_opt::{{closure}}\r\n  12: rustc::ty::context::tls::with_context_opt\r\n  13: rustc::ty::context::tls::with_opt\r\n  14: rustc::util::bug::opt_span_bug_fmt\r\n  15: rustc::util::bug::span_bug_fmt\r\n  16: <rustc_mir::transform::generator::StateTransform as rustc_mir::transform::MirPass>::run_pass\r\n  17: rustc_mir::transform::run_passes::{{closure}}\r\n  18: rustc_mir::transform::run_passes\r\n  19: rustc_mir::transform::optimized_mir\r\n  20: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::optimized_mir>::compute\r\n  21: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  22: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  23: rustc::ty::layout::LayoutCx<rustc::ty::context::TyCtxt>::layout_raw_uncached\r\n  24: rustc::ty::layout::layout_raw\r\n  25: rustc::ty::query::__query_compute::layout_raw\r\n  26: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::layout_raw>::compute\r\n  27: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  28: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  29: <rustc::ty::layout::LayoutCx<rustc::ty::context::TyCtxt> as rustc_target::abi::LayoutOf>::layout_of\r\n  30: <rustc_mir::transform::const_prop::ConstPropagator as rustc::mir::visit::MutVisitor>::visit_statement\r\n  31: <rustc_mir::transform::const_prop::ConstProp as rustc_mir::transform::MirPass>::run_pass\r\n  32: rustc_mir::transform::run_passes::{{closure}}\r\n  33: rustc_mir::transform::run_passes\r\n  34: rustc_mir::transform::optimized_mir\r\n  35: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::optimized_mir>::compute\r\n  36: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  37: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  38: rustc_mir::monomorphize::collector::collect_items_rec\r\n  39: rustc_mir::monomorphize::collector::collect_items_rec\r\n  40: rustc_mir::monomorphize::collector::collect_crate_mono_items::{{closure}}\r\n  41: rustc::util::common::time\r\n  42: rustc_mir::monomorphize::collector::collect_crate_mono_items\r\n  43: rustc::util::common::time\r\n  44: rustc_mir::monomorphize::partitioning::collect_and_partition_mono_items\r\n  45: rustc::ty::query::__query_compute::collect_and_partition_mono_items\r\n  46: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::collect_and_partition_mono_items>::compute\r\n  47: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  48: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  49: rustc_codegen_ssa::base::codegen_crate\r\n  50: <rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_utils::codegen_backend::CodegenBackend>::codegen_crate\r\n  51: rustc::util::common::time\r\n  52: rustc_interface::passes::start_codegen\r\n  53: rustc::ty::context::tls::enter_global\r\n  54: rustc_interface::passes::BoxedGlobalCtxt::access::{{closure}}\r\n  55: rustc_interface::passes::create_global_ctxt::{{closure}}\r\n  56: rustc_interface::passes::BoxedGlobalCtxt::enter\r\n  57: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::ongoing_codegen\r\n  58: rustc_interface::interface::run_compiler_in_existing_thread_pool\r\n  59: std::thread::local::LocalKey<T>::with\r\n  60: scoped_tls::ScopedKey<T>::set\r\n  61: syntax::with_globals\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\nquery stack during panic:\r\n#0 [optimized_mir] processing `perform_update::{{closure}}#0`\r\n#1 [layout_raw] computing layout of `[static generator@src/main.rs:32:41: 37:2 update:Update for<'r, 's, 't0, 't1, 't2, 't3, 't4, 't5, 't6, 't7> {Update, u64, std::string::String, for<'t8> fn(std::fmt::Arguments<'t8>) -> std::string::String {std::fmt::format}, fn(&'r [&'r str], &'r [std::fmt::ArgumentV1<'r>]) -> std::fmt::Arguments<'r> {std::fmt::Arguments::<'r>::new_v1}, &'s str, str, &'t0 str, [&'t1 str; 1], &'t2 [&'t3 str; 1], &'t4 [&'t5 str; 1], &'t6 [&'t7 str], std::future::GenFuture<[static generator@src/main.rs:24:36: 26:2 id:u64 {}]>, ()}]`\r\n#2 [optimized_mir] processing `perform_update`\r\n#3 [collect_and_partition_mono_items] collect_and_partition_mono_items\r\nend of query stack\r\n```", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/61442/reactions", "total_count": 3, "+1": 3, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/61442/timeline", "performed_via_github_app": null, "state_reason": "completed"}