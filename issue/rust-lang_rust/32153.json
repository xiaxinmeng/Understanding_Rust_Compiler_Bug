{"url": "https://api.github.com/repos/rust-lang/rust/issues/32153", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/32153/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/32153/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/32153/events", "html_url": "https://github.com/rust-lang/rust/issues/32153", "id": 139566920, "node_id": "MDU6SXNzdWUxMzk1NjY5MjA=", "number": 32153, "title": "Unexpected panic while compiling a a piece of code with destructuring", "user": {"login": "astonbitecode", "id": 11261467, "node_id": "MDQ6VXNlcjExMjYxNDY3", "avatar_url": "https://avatars.githubusercontent.com/u/11261467?v=4", "gravatar_id": "", "url": "https://api.github.com/users/astonbitecode", "html_url": "https://github.com/astonbitecode", "followers_url": "https://api.github.com/users/astonbitecode/followers", "following_url": "https://api.github.com/users/astonbitecode/following{/other_user}", "gists_url": "https://api.github.com/users/astonbitecode/gists{/gist_id}", "starred_url": "https://api.github.com/users/astonbitecode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/astonbitecode/subscriptions", "organizations_url": "https://api.github.com/users/astonbitecode/orgs", "repos_url": "https://api.github.com/users/astonbitecode/repos", "events_url": "https://api.github.com/users/astonbitecode/events{/privacy}", "received_events_url": "https://api.github.com/users/astonbitecode/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-03-09T12:42:59Z", "updated_at": "2016-03-09T19:57:43Z", "closed_at": "2016-03-09T17:15:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\n\nI would like to report an issue, after the compiler prompted me to do so.\n\nI am using [toml-rs](https://github.com/alexcrichton/toml-rs) to get some configuration data, so I have a function like the following:\n\n```\nextern crate toml;\n\nuse toml::Value;\n\nfn read(toml: &Value, path: &'static str, typ: &'static str) -> DefinitionResult {\n    match toml.lookup(path) {\n        Some(v) => {\n            match typ {\n                \"String\" => DefinitionResult::String(v.as_str().unwrap().to_string()),\n                \"Integer\" => DefinitionResult::Integer(v.as_integer().unwrap()),\n                _ => DefinitionResult::Err(\"Cannot handle type\")\n            }\n        }\n        None => {\n            DefinitionResult::Err(\"Path does not exist in TOML\")\n        }\n    }\n}\n```\n\nWith `DefinitionResult` being an enum:\n\n```\npub enum DefinitionResult {\n    String(String),\n    Integer(i64),\n    Long(u64),\n    Err(&'static str)\n}\n```\n\nI have created a Unit test like the following:\n\n```\n#[test]\nfn get_string() {\n    let toml_string = r#\"\n        [table1]\n        key1 = \"value1\"\n        key2 = \"value2\"\n        [table2]\n        key1 = \"value1\"\n        key2 = \"value2\"\n    \"#.to_string();\n    let toml = toml_string.parse().unwrap();\n\n    let DefinitionResult::String(v1) = super::read(&toml, \"table1.key1\", \"String\");\n    assert!(v1 == \"value1\");\n}\n```\n\nand once I want to compile and run the test with `cargo test` I get the following error from the compiler:\n\n> error: internal compiler error: unexpected panic\n> note: the compiler unexpectedly panicked. this is a bug.\n> note: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\n> note: run with `RUST_BACKTRACE=1` for a backtrace\n> thread 'rustc' panicked at 'assertion failed: `(left == right)` (left: `3`, right: `1`)', ../src/librustc/middle/check_match.rs:1051\n> note: Run with `RUST_BACKTRACE=1` for a backtrace.\n\nI guess that has to do with the destructuring here:\n\n`DefinitionResult::String(v1) = super::read(&toml, \"table1.key1\", \"String\")`\n\nTo be honest I am not sure if destructuring an enum like that using `let` is supported anyway.\n\nIf I re-write the destructure like: \n\n```\nmatch super::read(&toml, \"table1.key1\", \"String\") {\n    DefinitionResult::String(v1) => assert!(v1 == \"value1\"),\n    _ => assert!(true),\n}\n```\n\neverything works great.\n\nThank you!\n## Meta\n### rustc --version --verbose:\n\nrustc 1.8.0-nightly (c8fc4817d 2016-02-22)\nbinary: rustc\ncommit-hash: c8fc4817dcbf50690aba1fc8bd4db336aff2dbc6\ncommit-date: 2016-02-22\nhost: x86_64-unknown-linux-gnu\nrelease: 1.8.0-nightly\n### stack backtrace:\n\n   1:     0x7fea61f9f340 - sys::backtrace::tracing:: imp::write::h2bb24970c1600d4fNyu\n   2:     0x7fea61fa86ab - panicking::default_handler::_$u7b$$u7b$closure$u7d$$u7d$::closure.43727\n   3:     0x7fea61fa8203 - panicking::default_handler::hb760707c7feda3cdbez\n   4:     0x7fea61f70d7c - sys_common::unwind::begin_unwind_inner::h78583c314295e3926mt\n   5:     0x7fea61f71818 - sys_common::unwind::begin_unwind_fmt::h903be369b05a3ccccmt\n   6:     0x7fea5f2811d8 - middle::check_match::check_irrefutable::h8d1ba0bed3fbea2aQ4j\n   7:     0x7fea5f251f42 - middle::check_match::check_local::h2d216d4e5ead2573K2j\n   8:     0x7fea5f252197 - middle::check_match::check_fn::h082db3cfa9cb9bc8A3j\n   9:     0x7fea5f252901 - middle::check_match::check_crate::hc28c1fe732f94679kSi\n  10:     0x7fea624c142e - driver::phase_3_run_analysis_passes::_$u7b$$u7b$closure$u7d$$u7d$::closure.28446\n  11:     0x7fea624be1e5 - middle::ty::context::ctxt<'tcx>::create_and_enter::h6911830796927350595\n  12:     0x7fea624bad3f - driver::phase_3_run_analysis_passes::h10607465921210735652\n  13:     0x7fea6248c5b5 - driver::compile_input::h9417f7071f41b0b1Bca\n  14:     0x7fea6247c907 - run_compiler::h1d04446f72d95b52HOc\n  15:     0x7fea6247a0b1 - sys_common::unwind::try::try_fn::h2224149726337910613\n  16:     0x7fea61f9cd9b - __rust_try\n  17:     0x7fea61f9534d - sys_common::unwind::inner_try::hdfdf33e7068c9cb28jt\n  18:     0x7fea6247a900 - boxed::F.FnBox<A>::call_box::h8331008289514682961\n  19:     0x7fea61fa6c79 - sys::thread::Thread:: new::thread_start::h1272204999bddc95vby\n  20:     0x7fea5a735423 - start_thread\n  21:     0x7fea61c25cbc - clone\n  22:                0x0 - <unknown>\n", "closed_by": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/32153/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/32153/timeline", "performed_via_github_app": null, "state_reason": "completed"}