{"url": "https://api.github.com/repos/rust-lang/rust/issues/46489", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/46489/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/46489/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/46489/events", "html_url": "https://github.com/rust-lang/rust/issues/46489", "id": 278959528, "node_id": "MDU6SXNzdWUyNzg5NTk1Mjg=", "number": 46489, "title": "Proc macro hygiene regression", "user": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 60344715, "node_id": "MDU6TGFiZWw2MDM0NDcxNQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-medium", "name": "P-medium", "color": "eb6420", "default": false, "description": "Medium priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 19, "created_at": "2017-12-04T11:18:20Z", "updated_at": "2019-02-15T04:44:39Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Something in the range https://github.com/rust-lang/rust/compare/bb42071f6...f9b0897c5, likely https://github.com/rust-lang/rust/pull/46343 (CC @jseyfried), broke Servo.\r\n\r\nWe have a `#[dom_struct]` attribute implemented in a `dom_struct` crate like this:\r\n\r\n```rust\r\n#[proc_macro_attribute]\r\npub fn dom_struct(args: TokenStream, input: TokenStream) -> TokenStream {\r\n    if !args.is_empty() {\r\n        panic!(\"#[dom_struct] takes no arguments\");\r\n    }\r\n    let attributes = quote! {\r\n        #[derive(DenyPublicFields, DomObject, JSTraceable, MallocSizeOf)]\r\n        #[must_root]\r\n        #[repr(C)]\r\n    };\r\n    iter::once(attributes).chain(iter::once(input)).collect()\r\n}\r\n```\r\n\r\nEach of the derives is defined in a respective crate. The `script` crate depends on all of these crates and uses `#[dom_struct]`. Some of the derives generate code that reference items defined in `script`. For example, `#[derive(DomObject)]` implements the `script::dom::bindings::refector::DomObject` trait.\r\n\r\nSince rustc 1.24.0-nightly (f9b0897c5 2017-12-02), every use of `#[dom_struct]` fails with:\r\n\r\n```rust\r\nerror[E0433]: failed to resolve. Could not find `js` in `{{root}}`\r\n  --> components/script/dom/attr.rs:28:1\r\n   |\r\n28 | #[dom_struct]\r\n   | ^^^^^^^^^^^^^ Could not find `js` in `{{root}}`\r\n\r\nerror[E0433]: failed to resolve. Could not find `dom` in `{{root}}`\r\n  --> components/script/dom/attr.rs:28:1\r\n   |\r\n28 | #[dom_struct]\r\n   | ^^^^^^^^^^^^^ Could not find `dom` in `{{root}}`\r\n\r\nerror[E0433]: failed to resolve. Could not find `js` in `{{root}}`\r\n  --> components/script/dom/attr.rs:28:1\r\n   |\r\n28 | #[dom_struct]\r\n   | ^^^^^^^^^^^^^ Could not find `js` in `{{root}}`\r\n\r\nerror[E0433]: failed to resolve. Could not find `malloc_size_of` in `{{root}}`\r\n  --> components/script/dom/attr.rs:28:1\r\n   |\r\n28 | #[dom_struct]\r\n   | ^^^^^^^^^^^^^ Could not find `malloc_size_of` in `{{root}}`\r\n```\r\n\r\nI suppose that these errors come from code generated by the derives, and that `{{root}}` refers to the root of the `dom_struct` crate where the `#[derive(\u2026)]` tokens come from. Indeed, the `js` and `dom` are not an cannot be available there, they\u2019re in the `script` crate which depends on `dom_struct`.\r\n\r\nWe can work around this by erasing hygiene data in the `#[derive(\u2026)]` tokens:\r\n\r\n```diff\r\n--- a/components/dom_struct/lib.rs\r\n+++ b/components/dom_struct/lib.rs\r\n@@ -17,7 +17,9 @@ pub fn dom_struct(args: TokenStream, input: TokenStream) -> TokenStream {\r\n     let attributes = quote! {\r\n         #[derive(DenyPublicFields, DomObject, JSTraceable, MallocSizeOf)]\r\n         #[must_root]\r\n         #[repr(C)]\r\n     };\r\n+    let attributes = attributes.to_string().parse().unwrap();\r\n     iter::once(attributes).chain(iter::once(input)).collect()\r\n }\r\n```\r\n\r\n\u2026 but this seems like a valid pattern that shouldn\u2019t necessitate such hacks.", "closed_by": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/46489/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/46489/timeline", "performed_via_github_app": null, "state_reason": null}