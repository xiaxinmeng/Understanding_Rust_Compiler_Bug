{"url": "https://api.github.com/repos/rust-lang/rust/issues/89976", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/89976/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/89976/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/89976/events", "html_url": "https://github.com/rust-lang/rust/issues/89976", "id": 1028264499, "node_id": "I_kwDOAAsO6M49ShIz", "number": 89976, "title": "Confusing: Implementation of `FnOnce` is not general enough", "user": {"login": "Darksonn", "id": 928074, "node_id": "MDQ6VXNlcjkyODA3NA==", "avatar_url": "https://avatars.githubusercontent.com/u/928074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Darksonn", "html_url": "https://github.com/Darksonn", "followers_url": "https://api.github.com/users/Darksonn/followers", "following_url": "https://api.github.com/users/Darksonn/following{/other_user}", "gists_url": "https://api.github.com/users/Darksonn/gists{/gist_id}", "starred_url": "https://api.github.com/users/Darksonn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Darksonn/subscriptions", "organizations_url": "https://api.github.com/users/Darksonn/orgs", "repos_url": "https://api.github.com/users/Darksonn/repos", "events_url": "https://api.github.com/users/Darksonn/events{/privacy}", "received_events_url": "https://api.github.com/users/Darksonn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2021-10-17T09:09:36Z", "updated_at": "2022-07-02T23:11:10Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Someone on the Tokio discord came across the following bad compiler error message. Given the following code:\r\n\r\n```rust\r\nuse std::sync::Arc;\r\nuse futures::stream::{self, StreamExt};\r\n\r\nstruct MyStruct {}\r\n\r\nimpl MyStruct {\r\n    async fn import_all(&self, list: Arc<Vec<String>>) {\r\n        stream::iter(&*list)\r\n            .map(|txn| {\r\n                let bd_c = list.clone();\r\n                async move { self.import(bd_c, txn).await }\r\n            })\r\n            .buffer_unordered(10)\r\n            .collect::<Vec<bool>>()\r\n            .await;\r\n    }\r\n    \r\n    async fn import(&self, list: Arc<Vec<String>>, now: &str) -> bool {\r\n        list.iter().any(|v| v == now)\r\n    }\r\n}\r\n\r\n#[tokio::main]\r\nasync fn main() {\r\n    let ms = MyStruct {};\r\n    \r\n    tokio::spawn(async move {\r\n        ms.import_all(Arc::new(vec![])).await;\r\n    }).await.unwrap();\r\n}\r\n```\r\n[playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=d54fbb24703a4dc19fd0dfa54feaeb86)\r\n\r\nThe current output is:\r\n\r\n```\r\nerror: implementation of `FnOnce` is not general enough\r\n  --> src/main.rs:27:5\r\n   |\r\n27 |     tokio::spawn(async move {\r\n   |     ^^^^^^^^^^^^ implementation of `FnOnce` is not general enough\r\n   |\r\n   = note: closure with signature `fn(&'0 String) -> impl futures::Future` must implement `FnOnce<(&String,)>`, for any lifetime `'0`...\r\n   = note: ...but it actually implements `FnOnce<(&String,)>`\r\n```\r\n\r\nThis is an incredibly confusing error message, and it isn't in the right place. This fix is to change `import` to take an index instead of a reference in the last argument. Interestingly if you remove the main function, the error disappears. If you replace the `import_all` function with a function returning a boxed future, then the error happens in the `import_all` function instead.\r\n\r\ncc @ryanobjc", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/89976/reactions", "total_count": 4, "+1": 4, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/89976/timeline", "performed_via_github_app": null, "state_reason": null}