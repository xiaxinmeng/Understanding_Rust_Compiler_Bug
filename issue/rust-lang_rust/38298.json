{"url": "https://api.github.com/repos/rust-lang/rust/issues/38298", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/38298/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/38298/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/38298/events", "html_url": "https://github.com/rust-lang/rust/issues/38298", "id": 194833599, "node_id": "MDU6SXNzdWUxOTQ4MzM1OTk=", "number": 38298, "title": "Insufficient normalization", "user": {"login": "alexreg", "id": 67036, "node_id": "MDQ6VXNlcjY3MDM2", "avatar_url": "https://avatars.githubusercontent.com/u/67036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexreg", "html_url": "https://github.com/alexreg", "followers_url": "https://api.github.com/users/alexreg/followers", "following_url": "https://api.github.com/users/alexreg/following{/other_user}", "gists_url": "https://api.github.com/users/alexreg/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexreg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexreg/subscriptions", "organizations_url": "https://api.github.com/users/alexreg/orgs", "repos_url": "https://api.github.com/users/alexreg/repos", "events_url": "https://api.github.com/users/alexreg/events{/privacy}", "received_events_url": "https://api.github.com/users/alexreg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37544, "node_id": "MDU6TGFiZWwzNzU0NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-typesystem", "name": "A-typesystem", "color": "f7e101", "default": false, "description": "Area: The type system"}, {"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-12-11T14:04:27Z", "updated_at": "2023-04-05T17:34:25Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The following should work, as far as I know, but unfortunately doesn't. It seems like the type bound on `Bar` is getting ignored when used in `Foo`.\r\n\r\n```rust\r\nuse ::std::io::Write;\r\n\r\npub trait Foo {\r\n    type FooBaz: Bar;\r\n    \r\n    fn get_bars() -> Box<Iterator<Item = Self::FooBaz>>;\r\n}\r\n\r\npub trait Bar where <Self::BarBaz as ToOwned>::Owned: Write {\r\n    type BarBaz: ToOwned;\r\n}\r\n```\r\n\r\nOf course, ideally I would specify the `where` clause on the associated type itself, but this currently isn't possible.\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/38298/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/38298/timeline", "performed_via_github_app": null, "state_reason": null}