{"url": "https://api.github.com/repos/rust-lang/rust/issues/17744", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/17744/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/17744/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/17744/events", "html_url": "https://github.com/rust-lang/rust/issues/17744", "id": 44828351, "node_id": "MDU6SXNzdWU0NDgyODM1MQ==", "number": 17744, "title": "`illegal recursive type` check is excessively strict on associated types", "user": {"login": "sp3d", "id": 4684824, "node_id": "MDQ6VXNlcjQ2ODQ4MjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4684824?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sp3d", "html_url": "https://github.com/sp3d", "followers_url": "https://api.github.com/users/sp3d/followers", "following_url": "https://api.github.com/users/sp3d/following{/other_user}", "gists_url": "https://api.github.com/users/sp3d/gists{/gist_id}", "starred_url": "https://api.github.com/users/sp3d/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sp3d/subscriptions", "organizations_url": "https://api.github.com/users/sp3d/orgs", "repos_url": "https://api.github.com/users/sp3d/repos", "events_url": "https://api.github.com/users/sp3d/events{/privacy}", "received_events_url": "https://api.github.com/users/sp3d/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37544, "node_id": "MDU6TGFiZWwzNzU0NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-typesystem", "name": "A-typesystem", "color": "f7e101", "default": false, "description": "Area: The type system"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-10-03T17:50:32Z", "updated_at": "2015-01-09T19:31:52Z", "closed_at": "2015-01-09T19:31:52Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As far as I can tell, the purpose of the \"illegal recursive type\" error (in src/librustc/middle/typeck/astconv.rs) is to prevent types from referring to themselves in their definition, e.g. as done in src/test/compile-fail/infinite-vec-type-recursion.rs (`type x = Vec<x>;`). \n\nHowever, the logic being used to implement this check also disallows the following usage of associated types, which is intended to provide an implementation of the trait `R` on `Vec<T>` if `T` itself implements `R` (doing so by passing through `T`'s associated type `assoc`):\n\n```\ntrait R\n{\n    type assoc;\n}\nimpl<T: R> R for Vec<T>\n{\n    type assoc=<T as R>::assoc;\n    //does work: type assoc=uint;\n}\n```\n\nIt seems like this code should be accepted (though `type assoc=<Vec<T> as R>::assoc;` _should_ still fail this check).\n", "closed_by": {"login": "sp3d", "id": 4684824, "node_id": "MDQ6VXNlcjQ2ODQ4MjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4684824?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sp3d", "html_url": "https://github.com/sp3d", "followers_url": "https://api.github.com/users/sp3d/followers", "following_url": "https://api.github.com/users/sp3d/following{/other_user}", "gists_url": "https://api.github.com/users/sp3d/gists{/gist_id}", "starred_url": "https://api.github.com/users/sp3d/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sp3d/subscriptions", "organizations_url": "https://api.github.com/users/sp3d/orgs", "repos_url": "https://api.github.com/users/sp3d/repos", "events_url": "https://api.github.com/users/sp3d/events{/privacy}", "received_events_url": "https://api.github.com/users/sp3d/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/17744/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/17744/timeline", "performed_via_github_app": null, "state_reason": "completed"}