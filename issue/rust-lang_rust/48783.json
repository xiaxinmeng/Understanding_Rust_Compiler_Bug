{"url": "https://api.github.com/repos/rust-lang/rust/issues/48783", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/48783/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/48783/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/48783/events", "html_url": "https://github.com/rust-lang/rust/issues/48783", "id": 302781421, "node_id": "MDU6SXNzdWUzMDI3ODE0MjE=", "number": 48783, "title": "refactor the `BorrowckErrors` trait to take `fn(self)`", "user": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37234, "node_id": "MDU6TGFiZWwzNzIzNA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-cleanup", "name": "C-cleanup", "color": "f5f1fd", "default": false, "description": "Category: PRs that clean code up or issues documenting cleanup."}, {"id": 67766349, "node_id": "MDU6TGFiZWw2Nzc2NjM0OQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-mentor", "name": "E-mentor", "color": "02E10C", "default": false, "description": "Call for participation: This issue has a mentor. Use RustcContributor::new on Zulip for discussion."}, {"id": 604489711, "node_id": "MDU6TGFiZWw2MDQ0ODk3MTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-NLL", "name": "A-NLL", "color": "f7e101", "default": false, "description": "Area: Non Lexical Lifetimes (NLL)"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-03-06T16:54:41Z", "updated_at": "2018-03-20T12:50:59Z", "closed_at": "2018-03-20T12:50:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The [`BorrowckErrors` trait] is used to report errors from both HIR and MIR-based borrowck:\r\n\r\nhttps://github.com/rust-lang/rust/blob/c9334404f06a188854af33835a0efe1e834e4ac4/src/librustc_mir/util/borrowck_errors.rs#L55\r\n\r\nIt contains various methods currently defined to take `&self`:\r\n\r\nhttps://github.com/rust-lang/rust/blob/c9334404f06a188854af33835a0efe1e834e4ac4/src/librustc_mir/util/borrowck_errors.rs#L77-L84\r\n\r\nHowever, it is implemented on the `TyCtxt` type:\r\n\r\nhttps://github.com/rust-lang/rust/blob/c9334404f06a188854af33835a0efe1e834e4ac4/src/librustc_mir/util/borrowck_errors.rs#L494\r\n\r\nThis type is actually an alias for an `&`-reference, so that means that the final `self` winds up passing a double reference. This is not bad in and of itself, but @spastorino encountered in https://github.com/rust-lang/rust/pull/48682 that the current setup causes conflicts around the tcx when using an `&mut` self method. In particular, if you do something like this:\r\n\r\n```rust\r\nlet err = self.tcx.cannot_use_while_mutably_borrowed(...);\r\n..\r\n```\r\n\r\nthis will borrow `&self.tcx` for as long as `err` is in use, preventing us from invoking other `&mut self` methods.\r\n\r\nFor now, we worked around this problem by storing the `tcx` into a local variable:\r\n\r\n```rust\r\nlet tcx = self.tcx;\r\n```\r\n\r\nBut if the methods were defined instead as `fn(self)`, then it would have worked fine the original way.\r\n\r\nMaking this transformation would involve a few changes though. First off, right now the returned `DiagnosticBuilder` values carry the lifetime of the incoming `&self` reference. We would want to change that to the lifetime of the `TyCtxt`, so we would need to modify the trait to carry a lifetime parameter:\r\n\r\n```rust\r\n/// This trait is expected to be implemented on a reference.\r\n/// The `'r` is the lifetime of that reference.\r\ntrait BorrowckErrors<'cx> {\r\n    ...\r\n    fn cannot_use_when_mutably_borrowed(\r\n        self, // changed to self\r\n        span: Span,\r\n        ...\r\n    ) -> DiagnosticBuilder<'cx> {\r\n        ... // as before\r\n    }\r\n    ...\r\n}\r\n```\r\n\r\nThen it would be implememented for `TyCtxt` like:\r\n\r\n```rust\r\nimpl<'cx, 'gcx, 'tcx> BorrowckErrors<'cx> for TyCtxt<'cx, 'gcx, 'tcx> { ... }\r\n```\r\n\r\nAnd we would have to modify the [other impl](https://github.com/rust-lang/rust/blob/c9334404f06a188854af33835a0efe1e834e4ac4/src/librustc_borrowck/borrowck/mod.rs#L256) like so:\r\n\r\n```rust\r\nimpl<'a, b, 'tcx: 'b> BorrowckErrors<'a> for &'a BorrowckCtxt<'b, 'tcx> {\r\n```\r\n\r\n\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/48783/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 1, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/48783/timeline", "performed_via_github_app": null, "state_reason": "completed"}