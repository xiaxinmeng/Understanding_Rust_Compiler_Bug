{"url": "https://api.github.com/repos/rust-lang/rust/issues/3429", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/3429/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/3429/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/3429/events", "html_url": "https://github.com/rust-lang/rust/issues/3429", "id": 6731351, "node_id": "MDU6SXNzdWU2NzMxMzUx", "number": 3429, "title": "Conflicting between `impl <T: Base> T: Ext` and `impl B: Ext`", "user": {"login": "gifnksm", "id": 164213, "node_id": "MDQ6VXNlcjE2NDIxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/164213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gifnksm", "html_url": "https://github.com/gifnksm", "followers_url": "https://api.github.com/users/gifnksm/followers", "following_url": "https://api.github.com/users/gifnksm/following{/other_user}", "gists_url": "https://api.github.com/users/gifnksm/gists{/gist_id}", "starred_url": "https://api.github.com/users/gifnksm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gifnksm/subscriptions", "organizations_url": "https://api.github.com/users/gifnksm/orgs", "repos_url": "https://api.github.com/users/gifnksm/repos", "events_url": "https://api.github.com/users/gifnksm/events{/privacy}", "received_events_url": "https://api.github.com/users/gifnksm/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234876, "node_id": "MDU6TGFiZWwyMzQ4NzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-hard", "name": "E-hard", "color": "02e10c", "default": false, "description": "Call for participation: Experience needed to fix: Hard / a lot"}, {"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2012-09-08T13:44:55Z", "updated_at": "2016-11-14T20:36:16Z", "closed_at": "2014-11-03T17:16:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Minimized test case\n\n(taken from bstrie's comment below)\n\n``` rust\nfn main() {\n    let x = X;\n    x.foobar();\n}\n\ntrait Foo {\n    fn foobar(&self);\n}\n\ntrait Bar {\n    fn foobar(&self);\n}\n\ntrait FooBase {}\n\ntrait BarBase {}\n\nimpl<T: FooBase> Foo for T {\n    fn foobar(&self) {}\n}\n\nimpl<T: BarBase> Bar for T {\n    fn foobar(&self) {}\n}\n\nstruct X;\n\nimpl FooBase for X {}\n```\n## Original bug report follows\n\nI tried implementing of a trait `Eq` for a generic type `T: OrdEx`, but rustc says conflicting between `impl <T: OrdEx> T: Eq` and `impl Cmp: Eq`.\n\nextcmp.rs:\n\n``` rust\nuse cmp::{Eq, Ord};\n\nenum Cmp { Lt, Eq, Gt }\n\ntrait OrdEx {\n    pure fn cmp(&&other: self) -> Cmp;\n}\n\nimpl Cmp : Eq {\n    pure fn eq(&&other: Cmp) -> bool {\n        match (self, other) {\n          (Lt, Lt) | (Gt, Gt) | (Eq, Eq) => true,\n          _ => false\n        }\n    }\n    pure fn ne(&&other: Cmp) -> bool { !self.eq(other) }\n}\n\nimpl<T: OrdEx> T : Eq {\n    pure fn eq(&&other: T) -> bool { match self.cmp(other) { Eq => true, _ => false } }\n    pure fn ne(&&other: T) -> bool { !self.eq(other) }\n}\n\nimpl<T: OrdEx> T : Ord {\n    pure fn lt(&&other: T) -> bool { match self.cmp(other) { Lt      => true, _ => false} }\n    pure fn le(&&other: T) -> bool { match self.cmp(other) { Lt | Eq => true, _ => false} }\n    pure fn ge(&&other: T) -> bool { match self.cmp(other) { Eq | Gt => true, _ => false} }\n    pure fn gt(&&other: T) -> bool { match self.cmp(other) { Gt      => true, _ => false} }\n}\n\nfn main() {\n}\n```\n\n```\n$ rustc extcmp.rs\nextcmp.rs:19:0: 22:1 error: conflicting implementations for a trait\nextcmp.rs:19 impl<T: OrdEx> T : Eq {\nextcmp.rs:20     pure fn eq(&&other: T) -> bool { match self.cmp(other) { Eq => true, _ => false } }\nextcmp.rs:21     pure fn ne(&&other: T) -> bool { !self.eq(other) }\nextcmp.rs:22 }\nextcmp.rs:9:0: 17:1 note: note conflicting implementation here\nextcmp.rs:9 impl Cmp : Eq {\nextcmp.rs:10     pure fn eq(&&other: Cmp) -> bool {\nextcmp.rs:11         match (self, other) {\nextcmp.rs:12           (Lt, Lt) | (Gt, Gt) | (Eq, Eq) => true,\nextcmp.rs:13           _ => false\nextcmp.rs:14         }\n             ...\nextcmp.rs:16:40: 16:47 error: multiple applicable methods in scope\nextcmp.rs:16     pure fn ne(&&other: Cmp) -> bool { !self.eq(other) }\n                                                     ^~~~~~~\nextcmp.rs:10:4: 15:5 note: candidate #1 is `__extensions__::eq`\nextcmp.rs:10     pure fn eq(&&other: Cmp) -> bool {\nextcmp.rs:11         match (self, other) {\nextcmp.rs:12           (Lt, Lt) | (Gt, Gt) | (Eq, Eq) => true,\nextcmp.rs:13           _ => false\nextcmp.rs:14         }\nextcmp.rs:15     }\nextcmp.rs:20:4: 20:87 note: candidate #2 is `__extensions__::eq`\nextcmp.rs:20     pure fn eq(&&other: T) -> bool { match self.cmp(other) { Eq => true, _ => false } }\n                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nerror: aborting due to 2 previous errors\n```\n", "closed_by": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/3429/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/3429/timeline", "performed_via_github_app": null, "state_reason": "completed"}