{"url": "https://api.github.com/repos/rust-lang/rust/issues/84408", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/84408/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/84408/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/84408/events", "html_url": "https://github.com/rust-lang/rust/issues/84408", "id": 864254199, "node_id": "MDU6SXNzdWU4NjQyNTQxOTk=", "number": 84408, "title": "Operations with const-generics in array types and converting between between different const-generic-based types", "user": {"login": "ViliamVadocz", "id": 26529068, "node_id": "MDQ6VXNlcjI2NTI5MDY4", "avatar_url": "https://avatars.githubusercontent.com/u/26529068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ViliamVadocz", "html_url": "https://github.com/ViliamVadocz", "followers_url": "https://api.github.com/users/ViliamVadocz/followers", "following_url": "https://api.github.com/users/ViliamVadocz/following{/other_user}", "gists_url": "https://api.github.com/users/ViliamVadocz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ViliamVadocz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ViliamVadocz/subscriptions", "organizations_url": "https://api.github.com/users/ViliamVadocz/orgs", "repos_url": "https://api.github.com/users/ViliamVadocz/repos", "events_url": "https://api.github.com/users/ViliamVadocz/events{/privacy}", "received_events_url": "https://api.github.com/users/ViliamVadocz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 46741598, "node_id": "MDU6TGFiZWw0Njc0MTU5OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-test", "name": "E-needs-test", "color": "02e10c", "default": false, "description": "Call for participation: writing correctness tests"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1282665911, "node_id": "MDU6TGFiZWwxMjgyNjY1OTEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-generics", "name": "A-const-generics", "color": "f7e101", "default": false, "description": "Area: const generics (parameters and arguments)"}, {"id": 1486687397, "node_id": "MDU6TGFiZWwxNDg2Njg3Mzk3", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-const_generics", "name": "F-const_generics", "color": "f9c0cc", "default": false, "description": "`#![feature(const_generics)]`"}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}, {"id": 2341291797, "node_id": "MDU6TGFiZWwyMzQxMjkxNzk3", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-generic_const_exprs", "name": "F-generic_const_exprs", "color": "f9c0cc", "default": false, "description": "`#![feature(generic_const_exprs)]`"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-04-21T20:27:00Z", "updated_at": "2021-04-27T12:21:51Z", "closed_at": "2021-04-27T12:21:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\nSeems like the `A + B` in `Bar`'s type is important to the bug. Other operations like `A * B` also run into the ICE, but if you try and replace that with just `A` it compiles. \r\n\r\n### Code\r\n\r\n```Rust\r\n#![feature(const_generics, const_evaluatable_checked)]\r\n#![allow(incomplete_features)]\r\n\r\ntrait Melon<const X: usize> {\r\n    fn new(arr: [i32; X]) -> Self;\r\n    fn change<T: Melon<X>>(self) -> T;\r\n}\r\n\r\nstruct Foo([i32; 5]);\r\nstruct Bar<const A: usize, const B: usize>([i32; A + B])\r\nwhere [(); A + B]: ;\r\n\r\nimpl Melon<5> for Foo {\r\n    fn new(arr: [i32; 5]) -> Self {\r\n        Foo(arr)\r\n    }\r\n    fn change<T: Melon<5>>(self) -> T {\r\n        T::new(self.0)\r\n    }\r\n}\r\n\r\nimpl<const A: usize, const B: usize> Melon<{A + B}> for Bar<A, B>\r\nwhere [(); A + B]: ,\r\n{\r\n    fn new(arr: [i32; A + B]) -> Self {\r\n        Bar(arr)\r\n    }\r\n    fn change<T: Melon<{A + B}>>(self) -> T {\r\n        T::new(self.0)\r\n    }\r\n}\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.53.0-nightly (6df26f897 2021-04-20)\r\nbinary: rustc\r\ncommit-hash: 6df26f897cffb2d86880544bb451c6b5f8509b2d\r\ncommit-date: 2021-04-20\r\nhost: x86_64-pc-windows-msvc\r\nrelease: 1.53.0-nightly\r\nLLVM version: 12.0.0\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nerror: internal compiler error: compiler\\rustc_middle\\src\\ty\\subst.rs:577:17: const parameter `A/#0` (Const { ty: usize, val: Param(A/#0) }/0) out of range when substituting substs=[]\r\n\r\nthread 'rustc' panicked at 'Box<Any>', /rustc/6df26f897cffb2d86880544bb451c6b5f8509b2d\\library\\std\\src\\panic.rs:59:5\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.53.0-nightly (6df26f897 2021-04-20) running on x86_64-pc-windows-msvc\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [check_impl_item_well_formed] checking that `<impl at src\\main.rs:22:1: 31:2>::change` is well-formed\r\n#1 [analysis] running analysis passes on this crate\r\nend of query stack\r\nerror: aborting due to previous error\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nthread 'rustc' panicked at 'Box<Any>', /rustc/6df26f897cffb2d86880544bb451c6b5f8509b2d\\library\\std\\src\\panic.rs:59:5\r\nstack backtrace:\r\n   0:     0x7ffd4ce958ae - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::h65f771762210e3e5\r\n   1:     0x7ffd4cebea9c - core::fmt::write::h3d73561f801c6731\r\n   2:     0x7ffd4ce89a28 - <std::io::IoSlice as core::fmt::Debug>::fmt::h6fd08a0ca4059bc8\r\n   3:     0x7ffd4ce99982 - std::panicking::take_hook::ha49dee799706a2d8\r\n   4:     0x7ffd4ce99474 - std::panicking::take_hook::ha49dee799706a2d8\r\n   5:     0x7ffd2b2fbf97 - rustc_driver::report_ice::h812a9754403fbbdc\r\n   6:     0x7ffd4ce9a165 - std::panicking::rust_panic_with_hook::h9e7cc259d68b1de2\r\n   7:     0x7ffd2f17be10 - <rustc_middle::ty::adt::AdtKind as core::fmt::Debug>::fmt::h2ee351654030b4fc\r\n   8:     0x7ffd2f17bd59 - <rustc_middle::ty::adt::AdtKind as core::fmt::Debug>::fmt::h2ee351654030b4fc\r\n   9:     0x7ffd2f6aa9f1 - rustc_middle::ty::context::invalid_hir_id_for_typeck_results::h6c48d2fdfa70f6d1\r\n  10:     0x7ffd2f0f6600 - rustc_middle::ty::subst::_DERIVE_rustc_middle_ty_Lift_lifted_FOR_UserSubsts::<impl rustc_middle::ty::context::Lift for rustc_middle::ty::subst::UserSubsts>::lift_to_tcx::h021776e9417d5213\r\n  11:     0x7ffd2f0f38f2 - rustc_middle::ty::subst::_DERIVE_rustc_middle_ty_Lift_lifted_FOR_UserSubsts::<impl rustc_middle::ty::context::Lift for rustc_middle::ty::subst::UserSubsts>::lift_to_tcx::h021776e9417d5213\r\n  12:     0x7ffd2f0f4a02 - rustc_middle::ty::subst::_DERIVE_rustc_middle_ty_Lift_lifted_FOR_UserSubsts::<impl rustc_middle::ty::context::Lift for rustc_middle::ty::subst::UserSubsts>::lift_to_tcx::h021776e9417d5213\r\n  13:     0x7ffd2f2bc7ee - <rustc_middle::ty::sty::Binder<rustc_middle::ty::ProjectionPredicate> as rustc_middle::ty::ToPredicate>::to_predicate::h8dc1b09e3ae97c82\r\n  14:     0x7ffd2f2b0f50 - rustc_middle::ty::query::on_disk_cache::<impl rustc_serialize::serialize::Decodable<rustc_middle::ty::query::on_disk_cache::CacheDecoder> for &[rustc_middle::mir::abstract_const::Node]>::decode::h7681f01fb2de2107\r\n  15:     0x7ffd2f2b0e99 - rustc_middle::ty::query::on_disk_cache::<impl rustc_serialize::serialize::Decodable<rustc_middle::ty::query::on_disk_cache::CacheDecoder> for &[rustc_middle::mir::abstract_const::Node]>::decode::h7681f01fb2de2107\r\n  16:     0x7ffd2f2bc6f9 - <rustc_middle::ty::sty::Binder<rustc_middle::ty::ProjectionPredicate> as rustc_middle::ty::ToPredicate>::to_predicate::h8dc1b09e3ae97c82\r\n  17:     0x7ffd2f6b2c79 - rustc_middle::util::bug::bug_fmt::hd1c51d8be5b3ef25\r\n  18:     0x7ffd2f0e5a9e - <rustc_middle::ty::subst::SubstFolder as rustc_middle::ty::fold::TypeFolder>::fold_const::hcf2e6a45c1bf75de\r\n  19:     0x7ffd2efabee6 - rustc_trait_selection::traits::const_evaluatable::AbstractConst::from_const::heb6093fdb2e42508\r\n  20:     0x7ffd2efabf52 - rustc_trait_selection::traits::const_evaluatable::AbstractConst::from_const::heb6093fdb2e42508\r\n  21:     0x7ffd2efa817e - rustc_trait_selection::traits::const_evaluatable::is_const_evaluatable::h4eeb4758f6a96962\r\n  22:     0x7ffd2eecdc6d - rustc_trait_selection::traits::fulfill::FulfillProcessor::progress_changed_obligations::h39afafb54186303c\r\n  23:     0x7ffd2ef16f9a - <rustc_trait_selection::traits::structural_match::NonStructuralMatchTy as core::fmt::Debug>::fmt::h2d930786959ab225\r\n  24:     0x7ffd2eeccf6c - <rustc_trait_selection::traits::fulfill::FulfillmentContext as rustc_infer::traits::engine::TraitEngine>::select_where_possible::h6a17fc15f71eaec4\r\n  25:     0x7ffd2eeccd7d - <rustc_trait_selection::traits::fulfill::FulfillmentContext as rustc_infer::traits::engine::TraitEngine>::select_all_or_error::hacaee408d2a3c454\r\n  26:     0x7ffd2d928327 - rustc_typeck::check::fn_ctxt::_impl::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::field_ty::hb9fe98508141df72\r\n  27:     0x7ffd2db4a15e - <rustc_typeck::check::wfcheck::check_where_clauses::{{closure}}::CountParams as rustc_middle::ty::fold::TypeVisitor>::visit_const::h48e0340e336549f9\r\n  28:     0x7ffd2da171ec - <<dyn rustc_typeck::astconv::AstConv>::create_substs_for_ast_path::SubstsForAstPathCtxt as rustc_typeck::astconv::CreateSubstsForGenericArgsCtxt>::inferred_kind::h7103ec010d5dbc70\r\n  29:     0x7ffd2db4320c - <rustc_typeck::outlives::explicit::ExplicitPredicatesMap as core::fmt::Debug>::fmt::h8d282f693ebe6563\r\n  30:     0x7ffd2daeeac1 - rustc_typeck::check::check::check_item_type::h6d0181cf4ad8d1c0\r\n  31:     0x7ffd2e0d91b9 - <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::try_print_query_stack::h07e195f66514fe41\r\n  32:     0x7ffd2e0709ef - rustc_query_impl::<impl rustc_query_system::query::config::QueryAccessors<rustc_query_impl::plumbing::QueryCtxt> for rustc_query_impl::queries::resolve_instance>::hash_result::h0c68ae38607363e3\r\n  33:     0x7ffd2def56ea - <rustc_ast_lowering::item::ItemLowerer as rustc_ast::visit::Visitor>::visit_foreign_item::hff6f397d94ea9c2d\r\n  34:     0x7ffd2de2b27b - <rustc_ast_lowering::item::ItemLowerer as rustc_ast::visit::Visitor>::visit_foreign_item::hff6f397d94ea9c2d\r\n  35:     0x7ffd2ddc298e - <rustc_ast_lowering::item::ItemLowerer as rustc_ast::visit::Visitor>::visit_foreign_item::hff6f397d94ea9c2d\r\n  36:     0x7ffd2e0c5622 - <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::try_print_query_stack::h07e195f66514fe41\r\n  37:     0x7ffd2db4acac - <rustc_typeck::check::wfcheck::CheckTypeWellFormedVisitor as rustc_hir::intravisit::Visitor>::visit_impl_item::h2124384b81c410ea\r\n  38:     0x7ffd2db117e3 - <rustc_typeck::check::diverges::Diverges as core::fmt::Debug>::fmt::h1d95cb539170b8de\r\n  39:     0x7ffd2da3f86d - <<dyn rustc_typeck::astconv::AstConv>::create_substs_for_ast_path::SubstsForAstPathCtxt as rustc_typeck::astconv::CreateSubstsForGenericArgsCtxt>::inferred_kind::h7103ec010d5dbc70\r\n  40:     0x7ffd2d9aadeb - <rustc_typeck::check::op::Op as core::fmt::Debug>::fmt::h5fe8945ca2b804a2\r\n  41:     0x7ffd2da535cc - rustc_typeck::check_crate::h0f0522b8cfef46ab\r\n  42:     0x7ffd2b4353f5 - rustc_interface::passes::BoxedResolver::to_resolver_outputs::hed3f4a674c84aa76\r\n  43:     0x7ffd2e0d8489 - <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::try_print_query_stack::h07e195f66514fe41\r\n  44:     0x7ffd2e063c22 - rustc_query_impl::<impl rustc_query_system::query::config::QueryAccessors<rustc_query_impl::plumbing::QueryCtxt> for rustc_query_impl::queries::resolve_instance>::hash_result::h0c68ae38607363e3\r\n  45:     0x7ffd2defe9a7 - <rustc_ast_lowering::item::ItemLowerer as rustc_ast::visit::Visitor>::visit_foreign_item::hff6f397d94ea9c2d\r\n  46:     0x7ffd2de4ce2a - <rustc_ast_lowering::item::ItemLowerer as rustc_ast::visit::Visitor>::visit_foreign_item::hff6f397d94ea9c2d\r\n  47:     0x7ffd2dd7b18e - <rustc_ast_lowering::item::ItemLowerer as rustc_ast::visit::Visitor>::visit_foreign_item::hff6f397d94ea9c2d\r\n  48:     0x7ffd2e0bd8a2 - <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::try_print_query_stack::h07e195f66514fe41\r\n  49:     0x7ffd2b333e8a - <rustc_span::symbol::SymbolStr as core::fmt::Display>::fmt::h96a1e17f3d7b1192\r\n  50:     0x7ffd2b30673b - rustc_driver::pretty::print_after_hir_lowering::h34fc3daaffe50b1c\r\n  51:     0x7ffd2b2fecac - <rustc_driver::Compilation as core::fmt::Debug>::fmt::hfa68f16ac1132e65\r\n  52:     0x7ffd2b308426 - rustc_driver::pretty::print_after_hir_lowering::h34fc3daaffe50b1c\r\n  53:     0x7ffd2b32e2a4 - <rustc_span::symbol::SymbolStr as core::fmt::Display>::fmt::h96a1e17f3d7b1192\r\n  54:     0x7ffd2b33077f - <rustc_span::symbol::SymbolStr as core::fmt::Display>::fmt::h96a1e17f3d7b1192\r\n  55:     0x7ffd2b33ad7d - <rustc_span::symbol::SymbolStr as core::fmt::Display>::fmt::h96a1e17f3d7b1192\r\n  56:     0x7ffd4cea821a - std::sys::windows::thread::Thread::new::h35832c8baf769397\r\n  57:     0x7ffda3797034 - BaseThreadInitThunk\r\n  58:     0x7ffda55e2651 - RtlUserThreadStart\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/84408/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/84408/timeline", "performed_via_github_app": null, "state_reason": "completed"}