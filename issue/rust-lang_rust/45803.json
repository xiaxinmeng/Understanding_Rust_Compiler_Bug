{"url": "https://api.github.com/repos/rust-lang/rust/issues/45803", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/45803/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/45803/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/45803/events", "html_url": "https://github.com/rust-lang/rust/issues/45803", "id": 271426215, "node_id": "MDU6SXNzdWUyNzE0MjYyMTU=", "number": 45803, "title": "[u8] methods in libcore?", "user": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 657353545, "node_id": "MDU6TGFiZWw2NTczNTM1NDU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-accepted", "name": "C-feature-accepted", "color": "f5f1fd", "default": false, "description": "Category: A feature request that has been accepted pending implementation."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-11-06T10:29:32Z", "updated_at": "2018-04-22T02:18:51Z", "closed_at": "2018-04-22T02:18:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "# Background on [T] methods\r\n\r\nInherent methods for slices are currently defined in liballoc with:\r\n\r\n```rust\r\n#[lang(slice)]\r\nimpl<T> [T] {\r\n    // \u2026\r\n}\r\n```\r\n\r\n`#[lang(slice)]` is an escape hatch to allow that impl to exist. Normally it wouldn\u2019t be allowed since liballoc is not the crate that defined slices types. (No such crate exists.) The compiler only allows one `#[lang(slice)]` item to exist, so we have it in liballoc where it can define every method we want slices to have.\r\n\r\nSo in `#![no_std]` crates that do not depend on liballoc, slices have no inherent methods. Instead, libcore has a `core::slice::SliceExt` trait implemented for `[T]` that has a subset of the methods and needs to be imported into scope to be used.\r\n\r\n# Background on [u8] methods\r\n\r\nhttps://github.com/rust-lang/rust/pull/44042 added inherent methods specific to byte slices. They\u2019re also in liballoc, with a new dedicated lang item:\r\n\r\n```rust\r\n#[lang(slice_u8)]\r\nimpl [u8] {\r\n    // \u2026\r\n}\r\n```\r\n\r\nBut they\u2019re not available without liballoc, although they don\u2019t all depend on allocation.\r\n\r\n# Now\r\n\r\nIt\u2019d be nice to have some of these `[u8]` methods without liballoc. The simple thing would be to continue this pattern and add a `core::slice::SliceU8Ext` trait, but that doesn\u2019t seem like very good design.\r\n\r\nMaybe it\u2019s time to revisit `SliceExt`. Could the \u201conly one `#[lang(slice)]`\u201d restriction be lifted? Or could we add new `core_slice` and `core_slice_u8` lang items?\r\n\r\nCC @eddyb ", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/45803/reactions", "total_count": 4, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 4, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/45803/timeline", "performed_via_github_app": null, "state_reason": "completed"}