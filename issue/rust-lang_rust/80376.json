{"url": "https://api.github.com/repos/rust-lang/rust/issues/80376", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/80376/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/80376/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/80376/events", "html_url": "https://github.com/rust-lang/rust/issues/80376", "id": 774851818, "node_id": "MDU6SXNzdWU3NzQ4NTE4MTg=", "number": 80376, "title": "MaybeUninit::write_slice_cloned() makes it very easy to accidentally leak", "user": {"login": "mgeier", "id": 705404, "node_id": "MDQ6VXNlcjcwNTQwNA==", "avatar_url": "https://avatars.githubusercontent.com/u/705404?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mgeier", "html_url": "https://github.com/mgeier", "followers_url": "https://api.github.com/users/mgeier/followers", "following_url": "https://api.github.com/users/mgeier/following{/other_user}", "gists_url": "https://api.github.com/users/mgeier/gists{/gist_id}", "starred_url": "https://api.github.com/users/mgeier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mgeier/subscriptions", "organizations_url": "https://api.github.com/users/mgeier/orgs", "repos_url": "https://api.github.com/users/mgeier/repos", "events_url": "https://api.github.com/users/mgeier/events{/privacy}", "received_events_url": "https://api.github.com/users/mgeier/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2238194189, "node_id": "MDU6TGFiZWwyMjM4MTk0MTg5", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-slice", "name": "A-slice", "color": "f7e101", "default": false, "description": "Area: [T]"}, {"id": 2242906716, "node_id": "MDU6TGFiZWwyMjQyOTA2NzE2", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-raw-pointers", "name": "A-raw-pointers", "color": "f7e101", "default": false, "description": "Area: raw pointers, MaybeUninit, NonNull"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-12-26T10:02:38Z", "updated_at": "2021-06-23T23:37:51Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It is expected behavior that objects assigned/written to `MaybeUninit` might leak at some point (if `assume_init()` or similar is not used). However, `MaybeUninit::write_slice_cloned()` returns a `&mut [T]` (which might be passed on to further functions, where its origin might not be apparent), and objects assigned to that might leak as well, which I think is less obvious.\r\n\r\n[playground example](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=b6e1808a6424dacb7497f68fb65f78e6)\r\n\r\nI don't know if there is a way to improve the API to mitigate this problem, but I think at least the documentation should point out the potential leaking.\r\n\r\nCurrently, it is noted that already initialized values in `MaybeUnint` will not be dropped:\r\n\r\nhttps://github.com/rust-lang/rust/blob/780b094d767b6720c11b1bf145dac2cf2643b89e/library/core/src/mem/maybe_uninit.rs#L923\r\n\r\nHowever, it is not mentioned that assigning to the resulting slice might also lead to leaks.\r\n\r\n`MaybeUninit::write_slice_cloned()` was added in #79607\r\nTracking issue: #79995\r\nSee also https://users.rust-lang.org/t/is-there-a-way-to-copy-t-into-mut-maybeuninit-t-without-unsafe/51301\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"DrMeepster\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/80376/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/80376/timeline", "performed_via_github_app": null, "state_reason": null}