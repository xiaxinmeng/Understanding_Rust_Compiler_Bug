{"url": "https://api.github.com/repos/rust-lang/rust/issues/54841", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/54841/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/54841/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/54841/events", "html_url": "https://github.com/rust-lang/rust/issues/54841", "id": 367149683, "node_id": "MDU6SXNzdWUzNjcxNDk2ODM=", "number": 54841, "title": "Incorrect diagnostic span on syntax error in macro invoc inside trait, impl, extern blocks", "user": {"login": "abonander", "id": 3198595, "node_id": "MDQ6VXNlcjMxOTg1OTU=", "avatar_url": "https://avatars.githubusercontent.com/u/3198595?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abonander", "html_url": "https://github.com/abonander", "followers_url": "https://api.github.com/users/abonander/followers", "following_url": "https://api.github.com/users/abonander/following{/other_user}", "gists_url": "https://api.github.com/users/abonander/gists{/gist_id}", "starred_url": "https://api.github.com/users/abonander/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abonander/subscriptions", "organizations_url": "https://api.github.com/users/abonander/orgs", "repos_url": "https://api.github.com/users/abonander/repos", "events_url": "https://api.github.com/users/abonander/events{/privacy}", "received_events_url": "https://api.github.com/users/abonander/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 36996, "node_id": "MDU6TGFiZWwzNjk5Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-easy", "name": "E-easy", "color": "02e10c", "default": false, "description": "Call for participation: Experience needed to fix: Easy / not much (good first issue)"}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 67766349, "node_id": "MDU6TGFiZWw2Nzc2NjM0OQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-mentor", "name": "E-mentor", "color": "02E10C", "default": false, "description": "Call for participation: This issue has a mentor. Use RustcContributor::new on Zulip for discussion."}, {"id": 289259951, "node_id": "MDU6TGFiZWwyODkyNTk5NTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-help-wanted", "name": "E-help-wanted", "color": "02E10C", "default": false, "description": "Call for participation: Help is requested to fix this issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-10-05T10:22:41Z", "updated_at": "2018-10-13T20:38:01Z", "closed_at": "2018-10-13T20:38:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "A syntax error produced by a macro invocation in a `trait {}` or `impl {}` block will have an incorrect span for its second label:\r\n\r\n[Playground](https://play.rust-lang.org/?gist=7a0fd6c77f665d89f5b40ec949e9b93f&version=stable&mode=debug&edition=2015)\r\n```rust\r\nmacro_rules! m {\r\n    () => {\r\n        let\r\n    }\r\n}\r\n\r\ntrait Foo {\r\n    m!();\r\n}\r\n```\r\n\r\nProduces this error:\r\n```\r\nerror: expected one of `async`, `const`, `extern`, `fn`, `type`, or `unsafe`, found `let`\r\n --> src/lib.rs:3:9\r\n  |\r\n1 | macro_rules! m {\r\n  | - expected one of `async`, `const`, `extern`, `fn`, `type`, or `unsafe` here\r\n2 |     () => {\r\n3 |         let\r\n  |         ^^^ unexpected token\r\n...\r\n8 |     m!();\r\n  |     ----- in this macro invocation\r\n```\r\n\r\nThe \"expected one of ... here\" line is pointing to line 1 but it should be elaborating on the \"unexpected token\" label, or just replacing it. The behavior is identical for `impl {}` blocks.\r\n\r\nThis appears to be due to some faulty logic in [`Parser::expect_one_of()`](https://github.com/rust-lang/rust/blob/master/src/libsyntax/parse/parser.rs#L681) which isn't robust in the face of macro invocations. If it can't get lines for either span from the sourcemap it should assume they're the same (in fact I'm not sure why it emits a separate \"unexpected token\" label).\r\n\r\nDiscovered in #54833 but not introduced by it; when that's merged `extern {}` blocks will show this behavior too (as seen in `issue-54441.stderr` on that PR).\r\n\r\nI'll try to look into this sometime this weekend but I'm also willing to mentor on it, though like I mentioned I'm not sure why the error handling logic in `Parser::expect_one_of()` is so complex to begin with.\r\n\r\ncc @petrochenkov ", "closed_by": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/54841/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/54841/timeline", "performed_via_github_app": null, "state_reason": "completed"}