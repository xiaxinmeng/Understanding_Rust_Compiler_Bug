{"url": "https://api.github.com/repos/rust-lang/rust/issues/99405", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/99405/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/99405/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/99405/events", "html_url": "https://github.com/rust-lang/rust/issues/99405", "id": 1307542700, "node_id": "I_kwDOAAsO6M5N74Ss", "number": 99405, "title": "Trait method takes precedence over inherent method on ambiguous numeric type", "user": {"login": "steffahn", "id": 3986214, "node_id": "MDQ6VXNlcjM5ODYyMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3986214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steffahn", "html_url": "https://github.com/steffahn", "followers_url": "https://api.github.com/users/steffahn/followers", "following_url": "https://api.github.com/users/steffahn/following{/other_user}", "gists_url": "https://api.github.com/users/steffahn/gists{/gist_id}", "starred_url": "https://api.github.com/users/steffahn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steffahn/subscriptions", "organizations_url": "https://api.github.com/users/steffahn/orgs", "repos_url": "https://api.github.com/users/steffahn/repos", "events_url": "https://api.github.com/users/steffahn/events{/privacy}", "received_events_url": "https://api.github.com/users/steffahn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37544, "node_id": "MDU6TGFiZWwzNzU0NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-typesystem", "name": "A-typesystem", "color": "f7e101", "default": false, "description": "Area: The type system"}, {"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-07-18T07:51:01Z", "updated_at": "2022-09-30T06:51:43Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "This is arguably quite confusing:\r\n```rs\r\ntrait Trait {\r\n    fn abs(self) -> Self;\r\n}\r\n\r\nimpl Trait for i64 {\r\n    fn abs(self) -> Self {\r\n        2 * self\r\n    }\r\n}\r\n\r\nfn main() {\r\n    let x = 42;\r\n    println!(\"{}\", x.abs());\r\n    println!(\"{}\", x.abs());\r\n}\r\n```\r\nOuput:\r\n```\r\n84\r\n42\r\n```\r\n\r\n---\r\n\r\nSo the first `x.abs()` call resolves to the trait method, which is then used to influence type inference to make `x` an `i64`. With `x` being `i64`, the second `x.abs()` call calls the inherent method.\r\n\r\n@rustbot label T-compiler, T-lang, A-traits, A-typesystem", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/99405/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 1}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/99405/timeline", "performed_via_github_app": null, "state_reason": null}