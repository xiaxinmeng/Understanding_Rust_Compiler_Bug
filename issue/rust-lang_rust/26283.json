{"url": "https://api.github.com/repos/rust-lang/rust/issues/26283", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/26283/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/26283/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/26283/events", "html_url": "https://github.com/rust-lang/rust/issues/26283", "id": 88080431, "node_id": "MDU6SXNzdWU4ODA4MDQzMQ==", "number": 26283, "title": "\"parameter `T` is never used\" with recursive type", "user": {"login": "eefriedman", "id": 12769964, "node_id": "MDQ6VXNlcjEyNzY5OTY0", "avatar_url": "https://avatars.githubusercontent.com/u/12769964?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eefriedman", "html_url": "https://github.com/eefriedman", "followers_url": "https://api.github.com/users/eefriedman/followers", "following_url": "https://api.github.com/users/eefriedman/following{/other_user}", "gists_url": "https://api.github.com/users/eefriedman/gists{/gist_id}", "starred_url": "https://api.github.com/users/eefriedman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eefriedman/subscriptions", "organizations_url": "https://api.github.com/users/eefriedman/orgs", "repos_url": "https://api.github.com/users/eefriedman/repos", "events_url": "https://api.github.com/users/eefriedman/events{/privacy}", "received_events_url": "https://api.github.com/users/eefriedman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37544, "node_id": "MDU6TGFiZWwzNzU0NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-typesystem", "name": "A-typesystem", "color": "f7e101", "default": false, "description": "Area: The type system"}, {"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-06-13T23:06:55Z", "updated_at": "2023-04-05T17:35:01Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Testcase:\n\n``` rust\nenum Foo<T> {\n    F(Option<Box<Foo<Box<T>>>>)\n}\nfn main() { }\n```\n\nGives:\n\n```\n<anon>:16:10: 16:11 error: parameter `T` is never used [E0392]\n<anon>:16 enum Foo<T> {\n                   ^\n<anon>:16:10: 16:11 help: consider removing `T` or using a marker such as `core::marker::PhantomData`\n```\n\nNot sure if this is really something rustc should actually support (I imagine trying to prove recursive properties about it is extremely awkward), but the error message makes no sense.\n\nMore related testcases:\n\n``` rust\n// Crashes rustc with a stack overflow\nuse std::marker::PhantomData;\nenum Foo<T> {\n    F(Option<Box<Foo<Box<T>>>>, PhantomData<T>)\n}\nfn takesfoo<T>(f:&Foo<T>) {\n    match f {\n        &Foo::F(Some(ref b), PhantomData) => takesfoo(&**b),\n        &Foo::F(None, PhantomData) => ()\n    }\n}\nfn main() { }\n```\n\n``` rust\n// Gives \"error: overflow while adding drop-check rules for Foo<i32>\"\nuse std::marker::PhantomData;\nenum Foo<T> {\n    F(Option<Box<Foo<Box<T>>>>, PhantomData<T>)\n}\nfn main() { let _f = Foo::F::<i32>(None, PhantomData); }\n```\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/26283/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/26283/timeline", "performed_via_github_app": null, "state_reason": null}