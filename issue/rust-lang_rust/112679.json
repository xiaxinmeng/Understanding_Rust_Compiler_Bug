{"url": "https://api.github.com/repos/rust-lang/rust/issues/112679", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/112679/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/112679/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/112679/events", "html_url": "https://github.com/rust-lang/rust/issues/112679", "id": 1759465944, "node_id": "I_kwDOAAsO6M5o31HY", "number": 112679, "title": "bootstrap: Make `rust` options configurable per-stage", "user": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 67766349, "node_id": "MDU6TGFiZWw2Nzc2NjM0OQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-mentor", "name": "E-mentor", "color": "02E10C", "default": false, "description": "Call for participation: This issue has a mentor. Use RustcContributor::new on Zulip for discussion."}, {"id": 325438536, "node_id": "MDU6TGFiZWwzMjU0Mzg1MzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-bootstrap", "name": "T-bootstrap", "color": "bfd4f2", "default": false, "description": "Relevant to the bootstrap subteam: Rust's build system (x.py and src/bootstrap)"}, {"id": 419557634, "node_id": "MDU6TGFiZWw0MTk1NTc2MzQ=", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-medium", "name": "E-medium", "color": "02e10c", "default": false, "description": "Call for participation: Experience needed to fix: Medium / intermediate"}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}], "state": "open", "locked": false, "assignee": {"login": "hi-rustin", "id": 29879298, "node_id": "MDQ6VXNlcjI5ODc5Mjk4", "avatar_url": "https://avatars.githubusercontent.com/u/29879298?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hi-rustin", "html_url": "https://github.com/hi-rustin", "followers_url": "https://api.github.com/users/hi-rustin/followers", "following_url": "https://api.github.com/users/hi-rustin/following{/other_user}", "gists_url": "https://api.github.com/users/hi-rustin/gists{/gist_id}", "starred_url": "https://api.github.com/users/hi-rustin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hi-rustin/subscriptions", "organizations_url": "https://api.github.com/users/hi-rustin/orgs", "repos_url": "https://api.github.com/users/hi-rustin/repos", "events_url": "https://api.github.com/users/hi-rustin/events{/privacy}", "received_events_url": "https://api.github.com/users/hi-rustin/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "hi-rustin", "id": 29879298, "node_id": "MDQ6VXNlcjI5ODc5Mjk4", "avatar_url": "https://avatars.githubusercontent.com/u/29879298?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hi-rustin", "html_url": "https://github.com/hi-rustin", "followers_url": "https://api.github.com/users/hi-rustin/followers", "following_url": "https://api.github.com/users/hi-rustin/following{/other_user}", "gists_url": "https://api.github.com/users/hi-rustin/gists{/gist_id}", "starred_url": "https://api.github.com/users/hi-rustin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hi-rustin/subscriptions", "organizations_url": "https://api.github.com/users/hi-rustin/orgs", "repos_url": "https://api.github.com/users/hi-rustin/repos", "events_url": "https://api.github.com/users/hi-rustin/events{/privacy}", "received_events_url": "https://api.github.com/users/hi-rustin/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2023-06-15T19:56:49Z", "updated_at": "2023-06-16T09:03:52Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "There are several cases where it makes sense to have different configuration between different stages. A simple one is debuginfo - we enable `rust.debuginfo-level-std = 1` in dist builders, but only need it for stage 2, not stage 1. Another is optimization levels; for developing, it can make sense to build rustc with `optimize = true` but std with `optimize = false` (https://github.com/rust-lang/rust/issues/112678).\n\nWe should make it easier to configure this without using RUSTFLAGS_NOT_BOOTSTRAP, which is hard to discover and breaks caching if you get it wrong. I'm imagining something like `rust.stage1.debuginfo-level-std`, where *any* option under `rust` is allowed to be configured per-stage. This also implies that any option under `rust` should be applicable to a single stage; anything today that isn't should be moved to `build`.\n\nMentoring instructions:\n1. Audit https://github.com/rust-lang/rust/blob/5dee431d87783cc9fff2e80613959594c20e3336/src/bootstrap/config.rs#L825-L876 for anything that doesn't make sense to set for only a single stage  (e.g. `channel`, `musl_root`, `rpath`).\n2. Take the options from 1. and move them to `build`. I expect there to be a lot of these, so if possible add aliases from the old name to the new one - maybe add something like `struct MovedOptions { ... }` and then `#[serde(flatten)] renamed: MovedOptions` in both `Build` and `Rust`? Make an entry in src/bootstrap/changelog.md.\n3. Add a new `struct PerStage<T> { stage0: T, stage1: T, stage2: T, default: T }` and use it everywhere in `Rust`; add it to the `define_config` macro if that makes it easier. This is based off of https://doc.rust-lang.org/nightly/nightly-rustc/rustc_hir/def/struct.PerNS.html and should have similar apis.\n4. Add tests for your change in `src/bootstrap/config/tests.rs`.\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"hi-rustin\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/112679/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/112679/timeline", "performed_via_github_app": null, "state_reason": null}