{"url": "https://api.github.com/repos/rust-lang/rust/issues/49084", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/49084/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/49084/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/49084/events", "html_url": "https://github.com/rust-lang/rust/issues/49084", "id": 305889920, "node_id": "MDU6SXNzdWUzMDU4ODk5MjA=", "number": 49084, "title": "macro rules shadowing error should emit where the macro being shadowed lives", "user": {"login": "gnzlbg", "id": 904614, "node_id": "MDQ6VXNlcjkwNDYxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/904614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnzlbg", "html_url": "https://github.com/gnzlbg", "followers_url": "https://api.github.com/users/gnzlbg/followers", "following_url": "https://api.github.com/users/gnzlbg/following{/other_user}", "gists_url": "https://api.github.com/users/gnzlbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnzlbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnzlbg/subscriptions", "organizations_url": "https://api.github.com/users/gnzlbg/orgs", "repos_url": "https://api.github.com/users/gnzlbg/repos", "events_url": "https://api.github.com/users/gnzlbg/events{/privacy}", "received_events_url": "https://api.github.com/users/gnzlbg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 132910982, "node_id": "MDU6TGFiZWwxMzI5MTA5ODI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-macros", "name": "A-macros", "color": "f7e101", "default": false, "description": "Area: All kinds of macros (custom derive, macro_rules!, proc macros, ..)"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-03-16T11:14:28Z", "updated_at": "2020-04-20T20:19:06Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The `macro-expanded `macro_rules!`s may not shadow existing macros` should mention where the macro being shadowed was defined.\r\n\r\nFor example compiling `stdsimd` I get the following error:\r\n\r\n```\r\nerror: `is_x86_feature_detected` is already in scope\r\n   --> crates/stdsimd/src/../../../stdsimd/arch/detect/arch/x86.rs:21:1\r\n    |\r\n21  | / macro_rules! is_x86_feature_detected {\r\n22  | |     (\"aes\") => {\r\n23  | |         cfg!(target_feature = \"aes\") || $crate::arch::detect::check_for(\r\n24  | |             $crate::arch::detect::Feature::aes)  };\r\n...   |\r\n165 | |     };\r\n166 | | }\r\n    | |_^\r\n    |\r\n    = note: macro-expanded `macro_rules!`s may not shadow existing macros (see RFC 1560)\r\n\r\nerror: aborting due to previous error\r\n```\r\n\r\nwhich tells me that I am defining a macro that is already defined somewhere, but it is not telling me where. That would make this diagnostic much better.\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/49084/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/49084/timeline", "performed_via_github_app": null, "state_reason": null}