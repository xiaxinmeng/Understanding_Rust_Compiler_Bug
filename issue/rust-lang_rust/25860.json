{"url": "https://api.github.com/repos/rust-lang/rust/issues/25860", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/25860/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/25860/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/25860/events", "html_url": "https://github.com/rust-lang/rust/issues/25860", "id": 82044592, "node_id": "MDU6SXNzdWU4MjA0NDU5Mg==", "number": 25860, "title": "Implied bounds on nested references + variance = soundness hole", "user": {"login": "aturon", "id": 709807, "node_id": "MDQ6VXNlcjcwOTgwNw==", "avatar_url": "https://avatars.githubusercontent.com/u/709807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aturon", "html_url": "https://github.com/aturon", "followers_url": "https://api.github.com/users/aturon/followers", "following_url": "https://api.github.com/users/aturon/following{/other_user}", "gists_url": "https://api.github.com/users/aturon/gists{/gist_id}", "starred_url": "https://api.github.com/users/aturon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aturon/subscriptions", "organizations_url": "https://api.github.com/users/aturon/orgs", "repos_url": "https://api.github.com/users/aturon/repos", "events_url": "https://api.github.com/users/aturon/events{/privacy}", "received_events_url": "https://api.github.com/users/aturon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37544, "node_id": "MDU6TGFiZWwzNzU0NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-typesystem", "name": "A-typesystem", "color": "f7e101", "default": false, "description": "Area: The type system"}, {"id": 60344715, "node_id": "MDU6TGFiZWw2MDM0NDcxNQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-medium", "name": "P-medium", "color": "eb6420", "default": false, "description": "Medium priority"}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 267612997, "node_id": "MDU6TGFiZWwyNjc2MTI5OTc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-unsound", "name": "I-unsound", "color": "e11d21", "default": false, "description": "Issue: A soundness hole (worst kind of bug), see: https://en.wikipedia.org/wiki/Soundness"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 3921861239, "node_id": "LA_kwDOAAsO6M7pwtp3", "url": "https://api.github.com/repos/rust-lang/rust/labels/S-bug-has-test", "name": "S-bug-has-test", "color": "862eff", "default": false, "description": "A `known-bug` test has been added for this bug."}], "state": "open", "locked": false, "assignee": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 46, "created_at": "2015-05-28T17:37:18Z", "updated_at": "2023-06-06T16:14:59Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "The combination of variance and implied bounds for nested references opens a hole in the current type system:\n\n``` rust\nstatic UNIT: &'static &'static () = &&();\n\nfn foo<'a, 'b, T>(_: &'a &'b (), v: &'b T) -> &'a T { v }\n\nfn bad<'a, T>(x: &'a T) -> &'static T {\n    let f: fn(&'static &'a (), &'a T) -> &'static T = foo;\n    f(UNIT, x)\n}\n```\n\nThis can likely be resolved by checking well-formedness of the instantiated fn type.\n\n---\n\nUpdate from @pnkfelix : \n\nWhile the test as written above is rejected by Rust today (with the error message for line 6 saying \"in type `&'static &'a ()`, reference has a longer lifetime than the data it references\"), that is just an artifact of the original source code (with its explicit type signature) running up against _one_ new WF-check.\n\nThe fundamental issue persists, since one can today write instead:\n\n``` rust\nstatic UNIT: &'static &'static () = &&();\n\nfn foo<'a, 'b, T>(_: &'a &'b (), v: &'b T) -> &'a T { v }\n\nfn bad<'a, T>(x: &'a T) -> &'static T {\n    let f: fn(_, &'a T) -> &'static T = foo;\n    f(UNIT, x)\n}\n```\n\n(and this way, still get the bad behaving `fn bad`, by just side-stepping one of the explicit type declarations.)\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/25860/reactions", "total_count": 73, "+1": 15, "-1": 0, "laugh": 2, "hooray": 0, "confused": 43, "heart": 0, "rocket": 0, "eyes": 13}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/25860/timeline", "performed_via_github_app": null, "state_reason": null}