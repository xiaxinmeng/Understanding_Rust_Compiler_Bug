{"url": "https://api.github.com/repos/rust-lang/rust/issues/110926", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/110926/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/110926/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/110926/events", "html_url": "https://github.com/rust-lang/rust/issues/110926", "id": 1687969566, "node_id": "I_kwDOAAsO6M5knF8e", "number": 110926, "title": "If two crates have the same name, distinguish them in rustc's output?", "user": {"login": "njsmith", "id": 609896, "node_id": "MDQ6VXNlcjYwOTg5Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/609896?v=4", "gravatar_id": "", "url": "https://api.github.com/users/njsmith", "html_url": "https://github.com/njsmith", "followers_url": "https://api.github.com/users/njsmith/followers", "following_url": "https://api.github.com/users/njsmith/following{/other_user}", "gists_url": "https://api.github.com/users/njsmith/gists{/gist_id}", "starred_url": "https://api.github.com/users/njsmith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/njsmith/subscriptions", "organizations_url": "https://api.github.com/users/njsmith/orgs", "repos_url": "https://api.github.com/users/njsmith/repos", "events_url": "https://api.github.com/users/njsmith/events{/privacy}", "received_events_url": "https://api.github.com/users/njsmith/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 2150480426, "node_id": "MDU6TGFiZWwyMTUwNDgwNDI2", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-crate-version-mismatch", "name": "D-crate-version-mismatch", "color": "c9f7a3", "default": false, "description": "Errors caused be the use of two different crate versions."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2023-04-28T06:19:44Z", "updated_at": "2023-04-28T09:29:52Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "### Code\r\n\r\nI'm writing code that uses the py-spy and remoteprocess crates. py-spy also uses remoteprocess internally. I tried to switch to using a different version of remoteprocess with some patches, but I foolishly did this by changing my top-level crate to *depend* on `remoteprocess = { git = ... }`, when what I really wanted was to use a `[patch.crates-io]` stanza. Anyway, the end result is that I had two different `remoteprocess` crates in my dependency tree without knowing it, and rustc gave me some spectacularly confusing errors. In particular, in a single message output, it suggested to try adding the line `use remoteprocess::SomeTrait`, and also suggested removing the line `use remoteprocess::SomeTrait` because it was unused.\r\n\r\n\r\n### Current output\r\n\r\n```Shell\r\nerror[E0599]: no method named `copy` found for struct `Process` in the current scope\r\n   --> src/shmem.rs:273:22\r\n    |\r\n273 |                     .copy(current.metadata.name_ptr, current.metadata.name_len)?;\r\n    |                      ^^^^ method not found in `Process`\r\n    |\r\n   ::: /Users/njs/.cargo/registry/src/github.com-1ecc6299db9ec823/remoteprocess-0.4.11/src/lib.rs:170:8\r\n    |\r\n170 |     fn copy(&self, addr: usize, length: usize) -> Result<Vec<u8>, Error> {\r\n    |        ---- the method is available for `remoteprocess::osx::Process` here\r\n    |\r\n    = help: items from traits can only be used if the trait is in scope\r\nhelp: the following trait is implemented but not in scope; perhaps add a `use` for it:\r\n    |\r\n1   | use remoteprocess::ProcessMemory;\r\n    |\r\n\r\nwarning: unused import: `remoteprocess::ProcessMemory`\r\n --> src/shmem.rs:5:5\r\n  |\r\n5 | use remoteprocess::ProcessMemory;\r\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  |\r\n  = note: `#[warn(unused_imports)]` on by default\r\n```\r\n\r\n\r\n### Desired output\r\n\r\nIt'd be nice if rustc detected this case and printed something hinting at what's going on?\r\n\r\n\r\n### Rationale and extra context\r\n\r\n_No response_\r\n\r\n### Other cases\r\n\r\n_No response_\r\n\r\n### Anything else?\r\n\r\n_No response_", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/110926/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/110926/timeline", "performed_via_github_app": null, "state_reason": null}