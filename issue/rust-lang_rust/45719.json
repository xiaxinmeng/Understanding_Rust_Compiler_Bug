{"url": "https://api.github.com/repos/rust-lang/rust/issues/45719", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/45719/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/45719/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/45719/events", "html_url": "https://github.com/rust-lang/rust/issues/45719", "id": 270635087, "node_id": "MDU6SXNzdWUyNzA2MzUwODc=", "number": 45719, "title": "Clarify semantics of `wrapping_offset` when leaving object bounds", "user": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-11-02T12:26:14Z", "updated_at": "2018-07-25T02:29:43Z", "closed_at": "2018-07-25T02:29:43Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The documentation of `wrapping_offset` should clarify whether it is legal to use this function to move from one object to another. Concretely, is the following a \"safe\" function in the sense that it is safe to call by any safe client?\r\n```rust\r\nfn is_this_safe(x: &mut i32, y: &mut i32) {\r\n    let x_ptr = x as *mut _; drop({x});\r\n    let y_ptr = y as *mut _; drop({y});\r\n    let diff  = x_ptr.offset_to(y_ptr).unwrap();\r\n    let x_alias = x_ptr.wrapping_offset(diff);\r\n    unsafe { *x_alias = 42; }\r\n}\r\n```\r\n(The funny `drop` just make sure that the original `x` and `y` are gone, side-stepping some memory model questions.)\r\n\r\nI see two possible options:\r\n* We say this is safe. Then we have to change the implementation of `wrapping_offset`; currently, it compiles to a `getelementptr` which (even without `inbounds`) is documented to possibly return a pointer that cannot be dereferenced *even if* it is equal to a valid pointer. The intention behind this is probably for `getelementptr` to preserve aliasing information. As a consequence, `getelementptr` cannot cross object boundaries.\r\n* We say this is not safe. Then the documentation of `wrapping_offset` should get a big fat warning saying so.\r\n\r\nGiven that `wrapping_offset` is a safe function, I think I would prefer the least surprising option, which is to make this safe. One possible implementation would be to cast the pointer to an integer, do the arithmetic there, and cast back.\r\n\r\nCc @eddyb @arielb1 @Gankro ", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/45719/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/45719/timeline", "performed_via_github_app": null, "state_reason": "completed"}