{"url": "https://api.github.com/repos/rust-lang/rust/issues/111412", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/111412/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/111412/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/111412/events", "html_url": "https://github.com/rust-lang/rust/issues/111412", "id": 1702865524, "node_id": "I_kwDOAAsO6M5lf6p0", "number": 111412, "title": "Inline asm make code to fail with LTO accross all rust channels", "user": {"login": "SyntheticBird45", "id": 118022351, "node_id": "U_kgDOBwjgzw", "avatar_url": "https://avatars.githubusercontent.com/u/118022351?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SyntheticBird45", "html_url": "https://github.com/SyntheticBird45", "followers_url": "https://api.github.com/users/SyntheticBird45/followers", "following_url": "https://api.github.com/users/SyntheticBird45/following{/other_user}", "gists_url": "https://api.github.com/users/SyntheticBird45/gists{/gist_id}", "starred_url": "https://api.github.com/users/SyntheticBird45/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SyntheticBird45/subscriptions", "organizations_url": "https://api.github.com/users/SyntheticBird45/orgs", "repos_url": "https://api.github.com/users/SyntheticBird45/repos", "events_url": "https://api.github.com/users/SyntheticBird45/events{/privacy}", "received_events_url": "https://api.github.com/users/SyntheticBird45/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2023-05-09T23:06:13Z", "updated_at": "2023-05-16T02:10:24Z", "closed_at": "2023-05-09T23:30:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI wanted to make a custom inline assembly implementation of getrandom, by directly calling syscall, instead of using libc. I needed to encrypt data using the aes-gcm-siv crate. Here's a minimal code reproducing the error I get on a larger codebase:\r\n\r\n```rust\r\nuse std::arch::asm;\r\nuse aes_gcm_siv::{KeyInit, Nonce, AeadInPlace, Aes256GcmSiv};\r\n\u200e\r\nfn main() {\r\n\u200e\r\n\tlet mut big_data = [0u8; 2048];\r\n\tfill_random_bytes(&mut big_data);\r\n\tlet mut uuid = [0u8; 16];\r\n\tlet mut aes_key = [0u8; 32];\r\n\tfill_random_bytes(&mut aes_key);\r\n\tfill_random_bytes(&mut uuid);\r\n\u200e\r\n\tlet aes = Aes256GcmSiv::new_from_slice(&aes_key).unwrap();\r\n\tlet mut nonce = [0u8; 12];\r\n\tfill_random_bytes(&mut nonce);\r\n\tlet mut tag = [0u8; 16];\r\n\u200e\r\n\tlet tg = aes.encrypt_in_place_detached(Nonce::from_slice(&nonce), b\"\", &mut big_data).unwrap();\r\n\ttag.copy_from_slice(tg.as_ref());\r\n\u200e\r\n\tif let Err(err) = aes.decrypt_in_place_detached(Nonce::from_slice(&nonce), b\"\", &mut big_data, tag.as_ref().into()) {\r\n\t\tprintln!(\"Error at decrypt : {}\", err);\r\n\t}\r\n}\r\n\u200e\r\n#[cfg(target_os = \"linux\")]\r\nfn fill_random_bytes(buf: &mut [u8]) -> u8 {\r\n\tlet res: isize;\r\n\tunsafe {\r\n\t\tlet len = buf.len();\r\n\t\tlet ptr = buf.as_mut_ptr();\r\n\t\tasm!(\r\n\t\t\t// Invoking syscall\r\n\t\t\t\"syscall\",\r\n\u200e\r\n\t\t\tin(\"rax\") 318,\r\n\t\t\tin(\"rdi\") ptr,\r\n\t\t\tin(\"rsi\") len,\r\n\t\t\tin(\"rdx\") 0,\r\n\t\t\tlateout(\"rax\") res,\r\n\t\t);\r\n\t}\r\n\tres.to_be_bytes()[0]\r\n}\r\n```\r\n\r\nI expected to see this happen: With `lto=\"off\"` the decryption works correctly.\r\n\r\nInstead, this happened: with `lto=false|lto=\"thin\"|lto=\"fat\"` this return an `AEAD::error`, making the decryption unsuccessful. The error isn't decorative and the buffer isn't the decrypted data. Please note that replacing this custom implementation by the getrandom crate solve the issue : \r\n```rust\r\nfn fill_random_bytes(buf: &mut [u8]) {\r\n\r\n\tgetrandom::getrandom(buf).unwrap()\r\n}\r\n```\r\nThis make everything works normal.\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\nThe issue persist on rust beta and nightly. Note that Nightly even fail to decrypt with lto=\"off\".\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.69.0 (84c898d65 2023-04-16)\r\nbinary: rustc\r\ncommit-hash: 84c898d65adf2f39a5a98507f1fe0ce10a2b8dbc\r\ncommit-date: 2023-04-16\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.69.0\r\nLLVM version: 15.0.7\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary>Backtrace</summary>\r\n<p>\r\n\r\n```\r\n      Running `target/release/encryption-random-asm`\r\nError at decrypt : aead::Error\r\n```\r\n</p>\r\n</details>\r\n", "closed_by": {"login": "SyntheticBird45", "id": 118022351, "node_id": "U_kgDOBwjgzw", "avatar_url": "https://avatars.githubusercontent.com/u/118022351?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SyntheticBird45", "html_url": "https://github.com/SyntheticBird45", "followers_url": "https://api.github.com/users/SyntheticBird45/followers", "following_url": "https://api.github.com/users/SyntheticBird45/following{/other_user}", "gists_url": "https://api.github.com/users/SyntheticBird45/gists{/gist_id}", "starred_url": "https://api.github.com/users/SyntheticBird45/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SyntheticBird45/subscriptions", "organizations_url": "https://api.github.com/users/SyntheticBird45/orgs", "repos_url": "https://api.github.com/users/SyntheticBird45/repos", "events_url": "https://api.github.com/users/SyntheticBird45/events{/privacy}", "received_events_url": "https://api.github.com/users/SyntheticBird45/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/111412/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/111412/timeline", "performed_via_github_app": null, "state_reason": "completed"}