{"url": "https://api.github.com/repos/rust-lang/rust/issues/102905", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/102905/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/102905/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/102905/events", "html_url": "https://github.com/rust-lang/rust/issues/102905", "id": 1403892057, "node_id": "I_kwDOAAsO6M5TrbFZ", "number": 102905, "title": "`str::array_split` for splitting a string into a constant number of substrings", "user": {"login": "pitaj", "id": 803701, "node_id": "MDQ6VXNlcjgwMzcwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/803701?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pitaj", "html_url": "https://github.com/pitaj", "followers_url": "https://api.github.com/users/pitaj/followers", "following_url": "https://api.github.com/users/pitaj/following{/other_user}", "gists_url": "https://api.github.com/users/pitaj/gists{/gist_id}", "starred_url": "https://api.github.com/users/pitaj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pitaj/subscriptions", "organizations_url": "https://api.github.com/users/pitaj/orgs", "repos_url": "https://api.github.com/users/pitaj/repos", "events_url": "https://api.github.com/users/pitaj/events{/privacy}", "received_events_url": "https://api.github.com/users/pitaj/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 1282665911, "node_id": "MDU6TGFiZWwxMjgyNjY1OTEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-generics", "name": "A-const-generics", "color": "f7e101", "default": false, "description": "Area: const generics (parameters and arguments)"}, {"id": 2238196890, "node_id": "MDU6TGFiZWwyMjM4MTk2ODkw", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-str", "name": "A-str", "color": "f7e101", "default": false, "description": "Area: str and String"}, {"id": 3425147156, "node_id": "LA_kwDOAAsO6M7MJ5kU", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-array", "name": "A-array", "color": "f7e101", "default": false, "description": "Area: [T; N]"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2022-10-11T01:55:06Z", "updated_at": "2023-03-07T05:26:56Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Related to:\r\n\r\n- [`str::split_once`](https://doc.rust-lang.org/stable/std/primitive.str.html#method.split_once)\r\n- [`str::splitn`](https://doc.rust-lang.org/stable/std/primitive.str.html#method.splitn)\r\n- [`slice::as_chunks`](https://doc.rust-lang.org/stable/std/primitive.slice.html#method.as_chunks)\r\n\r\nThe idea is to provide an API similar to `split_once`, but allowing the programmer to specify any number of substrings at compile time, instead of being limited to two (one split) or relying on `splitn` at runtime.\r\n\r\nThis is helpful for many cases where a programmer wants exactly N substrings, no more and no less, and knows N at compile time. `splitn` can work for this use case, but since you get an iterator out, there's no concise way to get the substrings into an array. You could also have less than N substrings.\r\n\r\n### API\r\n```rust\r\npub fn array_split<const N: usize, 'a, P: Pattern<'a>>(&'a self, delimiter: P) -> Option<[&'a str; N]>\r\n```\r\n\r\n### Usage example\r\n```rust\r\nlet static_format = \"abc 123 xyz The rest of the string\";\r\nlet parts: [&str; 4] = static_format.array_split(char::is_whitespace).unwrap();\r\n// or using turbofish to specify # of substrings\r\nlet parts = static_format.array_split::<4>(char::is_whitespace).unwrap();\r\n\r\nassert_eq!(parts, [\"abc\", \"123\", \"xyz\", \"The rest of the string\"]);\r\n```\r\n\r\nReturning an array enables nice features like infallible destructuring:\r\n```rust\r\nlet line = \"John Doe,Engineer,Kansas,555-555-5555,This is a comment about John, who is a hard worker, and loves to fish.\";\r\nlet [name, occupation, state, phone_num, comment] = line.array_split().unwrap();\r\n\r\nassert_eq!(name, \"John Doe\");\r\nassert_eq!(phone_num, \"555-555-5555\");\r\nassert_eq!(comment, \"This is a comment about John, who is a hard worker, and loves to fish.\");\r\n```\r\n\r\n@rustbot label +T-libs-api +A-str +A-array +A-const-generics", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/102905/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/102905/timeline", "performed_via_github_app": null, "state_reason": null}