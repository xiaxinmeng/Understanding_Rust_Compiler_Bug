{"url": "https://api.github.com/repos/rust-lang/rust/issues/75336", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/75336/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/75336/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/75336/events", "html_url": "https://github.com/rust-lang/rust/issues/75336", "id": 675707520, "node_id": "MDU6SXNzdWU2NzU3MDc1MjA=", "number": 75336, "title": "Apply polymorphization to `Instance` substitutions", "user": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2263949245, "node_id": "MDU6TGFiZWwyMjYzOTQ5MjQ1", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-polymorphization", "name": "A-polymorphization", "color": "f7e101", "default": false, "description": "Area: Polymorphization"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-09T14:16:57Z", "updated_at": "2020-08-09T19:28:16Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "When #75255 landed, all `Instance` substitutions were polymorphized which enabled optimisation of the following test case:\r\n\r\n```rust\r\n// compile-flags:-Zpolymorphize=on -Zprint-mono-items=lazy -Copt-level=1\r\n// ignore-tidy-linelength\r\n\r\n#![crate_type = \"rlib\"]\r\n\r\n// Test that only one copy of `Iter::map` and `iter::repeat` are generated.\r\n\r\nfn unused<T>() -> u64 {\r\n    42\r\n}\r\n\r\nfn foo<T>() {\r\n    let x = [1, 2, 3, std::mem::size_of::<T>()];\r\n    x.iter().map(|_| ());\r\n}\r\n\r\n//~ MONO_ITEM fn core::iter[0]::adapters[0]::{{impl}}[29]::new[0]<core::slice[0]::Iter[0]<usize>, pr_75255::foo[0]::{{closure}}[0]<T>> @@ pr_75255-cgu.0[External]\r\n//~ MONO_ITEM fn core::iter[0]::traits[0]::iterator[0]::Iterator[0]::map[0]<core::slice[0]::Iter[0]<usize>, (), pr_75255::foo[0]::{{closure}}[0]<T>> @@ pr_75255-cgu.1[Internal]\r\n\r\nfn bar<T>() {\r\n    std::iter::repeat(unused::<T>);\r\n}\r\n\r\n//~ MONO_ITEM fn core::iter[0]::sources[0]::repeat[0]<fn() -> u64> @@ pr_75255-cgu.1[Internal]\r\n\r\npub fn dispatch() {\r\n    foo::<String>();\r\n    foo::<Vec<String>>();\r\n\r\n    bar::<String>();\r\n    bar::<Vec<String>>();\r\n}\r\n\r\n// These are all the items that aren't relevant to the test.\r\n//~ MONO_ITEM fn core::mem[0]::size_of[0]<alloc::string[0]::String[0]> @@ pr_75255-cgu.1[Internal]\r\n//~ MONO_ITEM fn core::mem[0]::size_of[0]<alloc::vec[0]::Vec[0]<alloc::string[0]::String[0]>> @@ pr_75255-cgu.1[Internal]\r\n//~ MONO_ITEM fn core::mem[0]::size_of[0]<usize> @@ pr_75255-cgu.1[Internal]\r\n//~ MONO_ITEM fn core::ptr[0]::const_ptr[0]::{{impl}}[0]::add[0]<usize> @@ pr_75255-cgu.1[Internal]\r\n//~ MONO_ITEM fn core::ptr[0]::const_ptr[0]::{{impl}}[0]::is_null[0]<usize> @@ pr_75255-cgu.1[Internal]\r\n//~ MONO_ITEM fn core::ptr[0]::const_ptr[0]::{{impl}}[0]::offset[0]<usize> @@ pr_75255-cgu.1[Internal]\r\n//~ MONO_ITEM fn core::ptr[0]::const_ptr[0]::{{impl}}[0]::wrapping_add[0]<u8> @@ pr_75255-cgu.1[Internal]\r\n//~ MONO_ITEM fn core::ptr[0]::const_ptr[0]::{{impl}}[0]::wrapping_offset[0]<u8> @@ pr_75255-cgu.1[Internal]\r\n//~ MONO_ITEM fn core::ptr[0]::non_null[0]::{{impl}}[3]::new_unchecked[0]<usize> @@ pr_75255-cgu.1[Internal]\r\n//~ MONO_ITEM fn core::ptr[0]::null[0]<u8> @@ pr_75255-cgu.1[Internal]\r\n//~ MONO_ITEM fn core::slice[0]::{{impl}}[0]::as_ptr[0]<usize> @@ pr_75255-cgu.1[Internal]\r\n//~ MONO_ITEM fn core::slice[0]::{{impl}}[0]::iter[0]<usize> @@ pr_75255-cgu.1[Internal]\r\n//~ MONO_ITEM fn core::slice[0]::{{impl}}[0]::len[0]<usize> @@ pr_75255-cgu.1[Internal]\r\n//~ MONO_ITEM fn pr_75255::dispatch[0] @@ pr_75255-cgu.1[External]\r\n//~ MONO_ITEM fn pr_75255::foo[0]<alloc::string[0]::String[0]> @@ pr_75255-cgu.1[Internal]\r\n//~ MONO_ITEM fn pr_75255::foo[0]<alloc::vec[0]::Vec[0]<alloc::string[0]::String[0]>> @@ pr_75255-cgu.1[Internal]\r\n//~ MONO_ITEM fn pr_75255::bar[0]<alloc::string[0]::String[0]> @@ pr_75255-cgu.1[Internal]\r\n//~ MONO_ITEM fn pr_75255::bar[0]<alloc::vec[0]::Vec[0]<alloc::string[0]::String[0]>> @@ pr_75255-cgu.1[Internal]\r\n```\r\n\r\nHowever, due to an oversight, it wasn't noticed that this made other tests and stage2 bootstrapping fail when polymorphisation was enabled (cursory investigation suggested regressions were related to #69925), so it was restricted in #75337 to cases that didn't result in regressions. We should investigate what we can do to re-enable this.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/75336/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/75336/timeline", "performed_via_github_app": null, "state_reason": null}