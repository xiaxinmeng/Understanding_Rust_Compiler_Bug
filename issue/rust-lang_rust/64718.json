{"url": "https://api.github.com/repos/rust-lang/rust/issues/64718", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/64718/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/64718/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/64718/events", "html_url": "https://github.com/rust-lang/rust/issues/64718", "id": 497338435, "node_id": "MDU6SXNzdWU0OTczMzg0MzU=", "number": 64718, "title": "std::process::Command doesn't follow Unix signal safety in forked child", "user": {"login": "ericyoungblut", "id": 49252933, "node_id": "MDQ6VXNlcjQ5MjUyOTMz", "avatar_url": "https://avatars.githubusercontent.com/u/49252933?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ericyoungblut", "html_url": "https://github.com/ericyoungblut", "followers_url": "https://api.github.com/users/ericyoungblut/followers", "following_url": "https://api.github.com/users/ericyoungblut/following{/other_user}", "gists_url": "https://api.github.com/users/ericyoungblut/gists{/gist_id}", "starred_url": "https://api.github.com/users/ericyoungblut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ericyoungblut/subscriptions", "organizations_url": "https://api.github.com/users/ericyoungblut/orgs", "repos_url": "https://api.github.com/users/ericyoungblut/repos", "events_url": "https://api.github.com/users/ericyoungblut/events{/privacy}", "received_events_url": "https://api.github.com/users/ericyoungblut/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 60344715, "node_id": "MDU6TGFiZWw2MDM0NDcxNQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-medium", "name": "P-medium", "color": "eb6420", "default": false, "description": "Medium priority"}, {"id": 267612997, "node_id": "MDU6TGFiZWwyNjc2MTI5OTc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-unsound", "name": "I-unsound", "color": "e11d21", "default": false, "description": "Issue: A soundness hole (worst kind of bug), see: https://en.wikipedia.org/wiki/Soundness"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 2011781731, "node_id": "MDU6TGFiZWwyMDExNzgxNzMx", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs", "name": "T-libs", "color": "bfd4f2", "default": false, "description": "Relevant to the library team, which will review and decide on the PR/issue."}, {"id": 2635899341, "node_id": "MDU6TGFiZWwyNjM1ODk5MzQx", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-unix", "name": "O-unix", "color": "6e6ec0", "default": false, "description": "Operating system: Unix-like"}, {"id": 3812066157, "node_id": "LA_kwDOAAsO6M7jN4Nt", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-process", "name": "A-process", "color": "f7e101", "default": false, "description": "Area: std::process and std::env"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2019-09-23T21:29:27Z", "updated_at": "2022-12-12T08:45:26Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "**Update (2022-12-12)**: The issue description is outdated, but [some problems remain](https://github.com/rust-lang/rust/issues/64718#issuecomment-1346099608).\r\n\r\nThese lines from spawn can cause a deadlock. It's wrong to assume that you can lock in the parent and the unlock in the child. Read man 2 fork and man 7 signal-safety on Linux.\r\n\r\n        // Whatever happens after the fork is almost for sure going to touch or\r\n        // look at the environment in one way or another (PATH in `execvp` or\r\n        // accessing the `environ` pointer ourselves). Make sure no other thread\r\n        // is accessing the environment when we do the fork itself.\r\n        //\r\n        // Note that as soon as we're done with the fork there's no need to hold\r\n        // a lock any more because the parent won't do anything and the child is\r\n        // in its own process.\r\n        let result = unsafe {\r\n            let _env_lock = sys::os::env_lock();\r\n            cvt(libc::fork())?\r\n        };\r\n\r\nQumulo has a custom thread library which exposes this issue.\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/64718/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/64718/timeline", "performed_via_github_app": null, "state_reason": null}