{"url": "https://api.github.com/repos/rust-lang/rust/issues/50091", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/50091/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/50091/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/50091/events", "html_url": "https://github.com/rust-lang/rust/issues/50091", "id": 316076475, "node_id": "MDU6SXNzdWUzMTYwNzY0NzU=", "number": 50091, "title": "Dropping a large vector of vectors is slow", "user": {"login": "rookboom", "id": 1814791, "node_id": "MDQ6VXNlcjE4MTQ3OTE=", "avatar_url": "https://avatars.githubusercontent.com/u/1814791?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rookboom", "html_url": "https://github.com/rookboom", "followers_url": "https://api.github.com/users/rookboom/followers", "following_url": "https://api.github.com/users/rookboom/following{/other_user}", "gists_url": "https://api.github.com/users/rookboom/gists{/gist_id}", "starred_url": "https://api.github.com/users/rookboom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rookboom/subscriptions", "organizations_url": "https://api.github.com/users/rookboom/orgs", "repos_url": "https://api.github.com/users/rookboom/repos", "events_url": "https://api.github.com/users/rookboom/events{/privacy}", "received_events_url": "https://api.github.com/users/rookboom/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-19T23:36:45Z", "updated_at": "2018-05-28T02:43:18Z", "closed_at": "2018-05-27T23:36:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "When allocating a large number of vectors, Rust takes a long time to deallocate all the memory when the variables are dropped. \r\n\r\nBelow is a program that reproduces the problem:\r\n\r\n```\r\nuse std::time::{Instant};\r\n\r\nfn main() {\r\n    let now = Instant::now();\r\n\r\n    println!(\"Create token ranges\"); \r\n    const NR_ELEMENTS: usize = 1000000;\r\n    \r\n    let mut token_ranges: Vec<Vec<(usize, usize)>> = Vec::with_capacity(NR_ELEMENTS);\r\n\r\n    for _ in 0..NR_ELEMENTS {\r\n        token_ranges.push(vec![(7, 7); 1000]); // dummy token ranges. in reality the 1000 is not fixed per document\r\n    }           \r\n    println!(\r\n        \"Finished creating token ranges after {} s\",\r\n        now.elapsed().as_secs());      \r\n\r\n    drop(token_ranges);\r\n    println!(\r\n        \"Finished dropping token ranges after {} s\",\r\n        now.elapsed().as_secs()); \r\n}\r\n```\r\n\r\nand the console output:\r\n\r\n```\r\nA:\\temp\\slow_exit [master +4 ~0 -0 !]> cargo run --release\r\n   Compiling slow_exit v0.1.0 (file:///A:/temp/slow_exit)\r\n    Finished release [optimized] target(s) in 1.0 secs\r\n     Running `target\\release\\slow_exit.exe`\r\nCreate token ranges\r\nFinished creating token ranges after 8 s\r\nFinished dropping token ranges after 18 s\r\n```\r\n\r\nFor context, I am trying to do text processing on about 1 million documents. \r\nEach document contains about 1000 tokens and I am storing the token ranges. \r\nI allocating a *Vec<Vec<(usize, usize)>>* in memory to store the token ranges for each document. \r\n*usize* is 64bits (8bytes) so each token range takes 16 bytes.\r\nIn total I allocate 16 * 1000 * 1 000 000 bytes just for the tokens. That is 16 GB.\r\nAllocating this much memory takes about 8 seconds.\r\nDropping the variable adds an additional 10 seconds to free the memory. \r\n\r\nThis seems slow? My expectation would be that dropping variables from the heap should be significantly faster than creating them on the heap?\r\n", "closed_by": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/50091/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/50091/timeline", "performed_via_github_app": null, "state_reason": "completed"}