{"url": "https://api.github.com/repos/rust-lang/rust/issues/82329", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/82329/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/82329/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/82329/events", "html_url": "https://github.com/rust-lang/rust/issues/82329", "id": 812599655, "node_id": "MDU6SXNzdWU4MTI1OTk2NTU=", "number": 82329, "title": "ICE: print_if saw if with weird alternative, if-let.rs with -Zunpretty=hir,typed", "user": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-02-20T12:32:39Z", "updated_at": "2021-04-26T01:54:31Z", "closed_at": "2021-04-26T01:54:31Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\ncode reduced from `./src/test/ui/expr/if/if-let.rs`\r\n```Rust\r\npub fn main() {\r\n    if true {\r\n    } else if let a = 1 { //~ WARN irrefutable `if let`\r\n    }\r\n}\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.52.0-nightly (9b471a3f5 2021-02-19)\r\nbinary: rustc\r\ncommit-hash: 9b471a3f5fe57e5c6e08acf665f2094422415a3d\r\ncommit-date: 2021-02-19\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.52.0-nightly\r\nLLVM version: 11.0.1\r\n```\r\n\r\n### Error output\r\n`rustc  -Zunpretty=hir,typed  ./src/test/ui/expr/if/if-let.rs `\r\n```\r\nwarning: irrefutable `if let` pattern\r\n --> ./src/test/ui/expr/if/if-let.rs:3:12\r\n  |\r\n3 |       } else if let a = 1 { //~ WARN irrefutable `if let`\r\n  |  ____________^\r\n4 | |     }\r\n  | |_____^\r\n  |\r\n  = note: `#[warn(irrefutable_let_patterns)]` on by default\r\n  = note: this pattern will always match, so the `if let` is useless\r\n  = help: consider replacing the `if let` with a `let`\r\n\r\nwarning: unused variable: `a`\r\n --> ./src/test/ui/expr/if/if-let.rs:3:19\r\n  |\r\n3 |     } else if let a = 1 { //~ WARN irrefutable `if let`\r\n  |                   ^ help: if this is intentional, prefix it with an underscore: `_a`\r\n  |\r\n  = note: `#[warn(unused_variables)]` on by default\r\n\r\nthread 'rustc' panicked at 'print_if saw if with weird alternative', compiler/rustc_hir_pretty/src/lib.rs:1106:25\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.52.0-nightly (9b471a3f5 2021-02-19) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -Z unpretty=hir,typed\r\n\r\nquery stack during panic:\r\nend of query stack\r\nwarning: 2 warnings emitted\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nwarning: irrefutable `if let` pattern\r\n --> ./src/test/ui/expr/if/if-let.rs:3:12\r\n  |\r\n3 |       } else if let a = 1 { //~ WARN irrefutable `if let`\r\n  |  ____________^\r\n4 | |     }\r\n  | |_____^\r\n  |\r\n  = note: `#[warn(irrefutable_let_patterns)]` on by default\r\n  = note: this pattern will always match, so the `if let` is useless\r\n  = help: consider replacing the `if let` with a `let`\r\n\r\nwarning: unused variable: `a`\r\n --> ./src/test/ui/expr/if/if-let.rs:3:19\r\n  |\r\n3 |     } else if let a = 1 { //~ WARN irrefutable `if let`\r\n  |                   ^ help: if this is intentional, prefix it with an underscore: `_a`\r\n  |\r\n  = note: `#[warn(unused_variables)]` on by default\r\n\r\nthread 'rustc' panicked at 'print_if saw if with weird alternative', compiler/rustc_hir_pretty/src/lib.rs:1106:25\r\nstack backtrace:\r\n   0:     0x7f9ec782aab0 - std::backtrace_rs::backtrace::libunwind::trace::hb4de9797f80b7b8c\r\n                               at /rustc/9b471a3f5fe57e5c6e08acf665f2094422415a3d/library/std/src/../../backtrace/src/backtrace/libunwind.rs:90:5\r\n   1:     0x7f9ec782aab0 - std::backtrace_rs::backtrace::trace_unsynchronized::h59566d0bd20efff7\r\n                               at /rustc/9b471a3f5fe57e5c6e08acf665f2094422415a3d/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\r\n   2:     0x7f9ec782aab0 - std::sys_common::backtrace::_print_fmt::hcfa5ce6be50275d4\r\n                               at /rustc/9b471a3f5fe57e5c6e08acf665f2094422415a3d/library/std/src/sys_common/backtrace.rs:67:5\r\n   3:     0x7f9ec782aab0 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hd8c307a38b9bab04\r\n                               at /rustc/9b471a3f5fe57e5c6e08acf665f2094422415a3d/library/std/src/sys_common/backtrace.rs:46:22\r\n   4:     0x7f9ec789be6c - core::fmt::write::h3868db8542c90941\r\n                               at /rustc/9b471a3f5fe57e5c6e08acf665f2094422415a3d/library/core/src/fmt/mod.rs:1092:17\r\n   5:     0x7f9ec781d992 - std::io::Write::write_fmt::hab90295d5a0f197d\r\n                               at /rustc/9b471a3f5fe57e5c6e08acf665f2094422415a3d/library/std/src/io/mod.rs:1568:15\r\n   6:     0x7f9ec782e9a5 - std::sys_common::backtrace::_print::h19224910b8700cf1\r\n                               at /rustc/9b471a3f5fe57e5c6e08acf665f2094422415a3d/library/std/src/sys_common/backtrace.rs:49:5\r\n   7:     0x7f9ec782e9a5 - std::sys_common::backtrace::print::h25dedfa68c5fb84a\r\n                               at /rustc/9b471a3f5fe57e5c6e08acf665f2094422415a3d/library/std/src/sys_common/backtrace.rs:36:9\r\n   8:     0x7f9ec782e9a5 - std::panicking::default_hook::{{closure}}::h12c5765653a72a42\r\n                               at /rustc/9b471a3f5fe57e5c6e08acf665f2094422415a3d/library/std/src/panicking.rs:208:50\r\n   9:     0x7f9ec782e453 - std::panicking::default_hook::he65cee71c4209f0c\r\n                               at /rustc/9b471a3f5fe57e5c6e08acf665f2094422415a3d/library/std/src/panicking.rs:225:9\r\n  10:     0x7f9ec808d08b - rustc_driver::report_ice::h56d5f6e6a9fb9d03\r\n  11:     0x7f9ec782f2a6 - std::panicking::rust_panic_with_hook::h01a674d863fe0d8a\r\n                               at /rustc/9b471a3f5fe57e5c6e08acf665f2094422415a3d/library/std/src/panicking.rs:595:17\r\n  12:     0x7f9ec8fa4a41 - std::panicking::begin_panic::{{closure}}::h5e9fb21077bcfadf\r\n  13:     0x7f9ec8fa4a0d - std::sys_common::backtrace::__rust_end_short_backtrace::ha2819b916bca578d\r\n  14:     0x7f9ec8f9d6c9 - std::panicking::begin_panic::hb606139d6809b89e\r\n  15:     0x7f9ecac449a2 - rustc_hir_pretty::State::print_else::h13a42ddbc0c4e458\r\n  16:     0x7f9eca06f4f7 - rustc_hir_pretty::State::print_expr::h630362f92949cd28\r\n  17:     0x7f9ecac4462e - rustc_hir_pretty::State::print_block_maybe_unclosed::hcf06e8cd6e66bb18\r\n  18:     0x7f9eca06f1b2 - rustc_hir_pretty::State::print_expr::h630362f92949cd28\r\n  19:     0x7f9ec8041cbb - <rustc_driver::pretty::TypedAnnotation as rustc_hir_pretty::PpAnn>::nested::h53a621d91a26f1b3\r\n  20:     0x7f9ecac41b5c - rustc_hir_pretty::State::print_item::hd997ca7f360e8261\r\n  21:     0x7f9ec8041cbb - <rustc_driver::pretty::TypedAnnotation as rustc_hir_pretty::PpAnn>::nested::h53a621d91a26f1b3\r\n  22:     0x7f9ec8f9b3b3 - rustc_hir_pretty::State::print_mod::hcf0cdbb827143e3c\r\n  23:     0x7f9ec8f9a79a - rustc_hir_pretty::print_crate::hd1b9ef1369b4e493\r\n  24:     0x7f9ec80455e1 - rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps::h78403d5a5d7ddadf\r\n  25:     0x7f9ec808493c - rustc_query_system::dep_graph::graph::DepGraph<K>::with_ignore::h82f9688f71c0f5b9\r\n  26:     0x7f9ec80429d8 - rustc_driver::pretty::print_after_hir_lowering::h102b65afa3784540\r\n  27:     0x7f9ec809463e - rustc_interface::passes::QueryContext::enter::he206c0d61f6fb2e9\r\n  28:     0x7f9eca3ff6d7 - rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter::hae97633c8f5175d4\r\n  29:     0x7f9eca3f7e11 - rustc_span::with_source_map::hd16d211d24c668a9\r\n  30:     0x7f9eca3fec62 - scoped_tls::ScopedKey<T>::set::h08e96579ac07fec5\r\n  31:     0x7f9eca400448 - std::sys_common::backtrace::__rust_begin_short_backtrace::h84dc4b3263d56f8c\r\n  32:     0x7f9eca3deaba - core::ops::function::FnOnce::call_once{{vtable.shim}}::h209d27a00dc0b7e3\r\n  33:     0x7f9ec783fffa - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::h321523073ee11258\r\n                               at /rustc/9b471a3f5fe57e5c6e08acf665f2094422415a3d/library/alloc/src/boxed.rs:1546:9\r\n  34:     0x7f9ec783fffa - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::hf0e85e12c83b99b3\r\n                               at /rustc/9b471a3f5fe57e5c6e08acf665f2094422415a3d/library/alloc/src/boxed.rs:1546:9\r\n  35:     0x7f9ec783fffa - std::sys::unix::thread::Thread::new::thread_start::hba22c7961aa0e2f8\r\n                               at /rustc/9b471a3f5fe57e5c6e08acf665f2094422415a3d/library/std/src/sys/unix/thread.rs:71:17\r\n  36:     0x7f9ec7745299 - start_thread\r\n  37:     0x7f9ec765a153 - clone\r\n  38:                0x0 - <unknown>\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.52.0-nightly (9b471a3f5 2021-02-19) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -Z unpretty=hir,typed\r\n\r\nquery stack during panic:\r\nend of query stack\r\nwarning: 2 warnings emitted\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/82329/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/82329/timeline", "performed_via_github_app": null, "state_reason": "completed"}