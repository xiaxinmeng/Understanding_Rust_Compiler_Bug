{"url": "https://api.github.com/repos/rust-lang/rust/issues/58532", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/58532/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/58532/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/58532/events", "html_url": "https://github.com/rust-lang/rust/issues/58532", "id": 411166645, "node_id": "MDU6SXNzdWU0MTExNjY2NDU=", "number": 58532, "title": "Compiler unepectedly paniced", "user": {"login": "FoseFx", "id": 22842759, "node_id": "MDQ6VXNlcjIyODQyNzU5", "avatar_url": "https://avatars.githubusercontent.com/u/22842759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FoseFx", "html_url": "https://github.com/FoseFx", "followers_url": "https://api.github.com/users/FoseFx/followers", "following_url": "https://api.github.com/users/FoseFx/following{/other_user}", "gists_url": "https://api.github.com/users/FoseFx/gists{/gist_id}", "starred_url": "https://api.github.com/users/FoseFx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FoseFx/subscriptions", "organizations_url": "https://api.github.com/users/FoseFx/orgs", "repos_url": "https://api.github.com/users/FoseFx/repos", "events_url": "https://api.github.com/users/FoseFx/events{/privacy}", "received_events_url": "https://api.github.com/users/FoseFx/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-02-17T09:19:25Z", "updated_at": "2019-03-07T13:33:05Z", "closed_at": "2019-03-07T13:33:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## short summary of the bug\r\n\r\nI tried to compile  this code:\r\n\r\n## code sample that causes the bug\r\n```\r\n\r\n#[derive(Debug)]\r\nenum NodeOrNull<T> {\r\n    Node(Node<T>),\r\n    Null\r\n}\r\n\r\n#[derive(Debug)]\r\nstruct Node<T> {\r\n    value: T,\r\n    lower_equal: NodeOrNull<T>,\r\n    higher: NodeOrNull<T>\r\n}\r\n\r\nimpl<T> Node<T> {\r\n    fn new(val: T) -> Self {\r\n        return Node {value: val, higher: NodeOrNull::Null, lower_equal: NodeOrNull::Null};\r\n    }\r\n}\r\n\r\n#[derive(Debug)]\r\nstruct Sort<T> {\r\n    root: NodeOrNull<T>\r\n}\r\nimpl<T> Sort<T> {\r\n    fn new() -> Self {\r\n        return Sort { root: NodeOrNull::Null };\r\n    }\r\n    fn of(val: Node<T>) -> Self {\r\n        return Sort { root: val };\r\n    }\r\n    \r\n}\r\n\r\n\r\nfn main() {\r\n    let root = Node::new(5);\r\n    let sort = Sort::of(root);\r\n    println!(\"{:#?}\", sort);\r\n}\r\n```\r\n\r\n## I expected to see this happen:\r\nIt should compile.\r\n\r\nInstead, this happened:\r\n`error: internal compiler error: unexpected panic`\r\n\r\n## Meta\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.32.0 (9fda7c223 2019-01-16)\r\nbinary: rustc\r\ncommit-hash: 9fda7c2237db910e41d6a712e9a2139b352e558b\r\ncommit-date: 2019-01-16\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.32.0\r\nLLVM version: 8.0\r\n\r\n```\r\n\r\nBacktrace:\r\n```\r\nthread 'main' panicked at 'did not find a cycle', src/librustc/ty/query/job.rs:146:9\r\nstack backtrace:\r\n   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace\r\n             at src/libstd/sys/unix/backtrace/tracing/gcc_s.rs:49\r\n   1: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:71\r\n   2: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/sys_common/backtrace.rs:59\r\n             at src/libstd/panicking.rs:211\r\n   3: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:227\r\n   4: rustc::util::common::panic_hook\r\n   5: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:495\r\n   6: std::panicking::begin_panic\r\n   7: rustc::ty::query::job::QueryJob::await\r\n   8: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::try_get_query\r\n   9: rustc::ty::AdtDef::sized_constraint\r\n  10: rustc::ty::AdtDef::sized_constraint_for_ty\r\n  11: <core::iter::FlatMap<I, U, F> as core::iter::iterator::Iterator>::next\r\n  12: <smallvec::SmallVec<A> as core::iter::traits::FromIterator<<A as smallvec::Array>::Item>>::from_iter\r\n  13: <T as rustc::ty::context::InternIteratorElement<T, R>>::intern_with\r\n  14: rustc::ty::adt_sized_constraint\r\n  15: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors<'tcx> for rustc::ty::query::queries::adt_sized_constraint<'tcx>>::compute\r\n  16: rustc::ty::context::tls::with_context\r\n  17: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  18: <rustc::ty::query::plumbing::JobOwner<'a, 'tcx, Q>>::start\r\n  19: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::force_query_with_job\r\n  20: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::force_query\r\n  21: rustc::ty::query::plumbing::force_from_dep_node\r\n  22: rustc::dep_graph::graph::DepGraph::try_mark_green\r\n  23: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::try_mark_green_and_read\r\n  24: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::try_get_query\r\n  25: rustc::ty::AdtDef::sized_constraint\r\n  26: rustc::traits::select::SelectionContext::sized_conditions\r\n  27: rustc::traits::select::SelectionContext::assemble_candidates\r\n  28: rustc::traits::select::SelectionContext::candidate_from_obligation_no_cache\r\n  29: rustc::ty::context::tls::with_context\r\n  30: rustc::traits::select::SelectionContext::candidate_from_obligation\r\n  31: rustc::traits::select::SelectionContext::select\r\n  32: <rustc_data_structures::obligation_forest::ObligationForest<O>>::process_obligations\r\n  33: <rustc::traits::fulfill::FulfillmentContext<'tcx> as rustc::traits::engine::TraitEngine<'tcx>>::select_where_possible\r\n  34: <rustc::traits::fulfill::FulfillmentContext<'tcx> as rustc::traits::engine::TraitEngine<'tcx>>::select_all_or_error\r\n  35: rustc_typeck::check::FnCtxt::select_all_obligations_or_error\r\n  36: rustc::ty::context::tls::with_related_context\r\n  37: rustc::infer::InferCtxtBuilder::enter\r\n  38: rustc_typeck::check::wfcheck::check_item_well_formed\r\n  39: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors<'tcx> for rustc::ty::query::queries::check_item_well_formed<'tcx>>::compute\r\n  40: rustc::ty::context::tls::with_context\r\n  41: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  42: <rustc::ty::query::plumbing::JobOwner<'a, 'tcx, Q>>::start\r\n  43: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::force_query_with_job\r\n  44: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::get_query\r\n  45: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::ensure_query\r\n  46: rustc::session::Session::track_errors\r\n  47: rustc::util::common::time\r\n  48: rustc_typeck::check_crate\r\n  49: rustc::ty::context::tls::enter_context\r\n  50: <std::thread::local::LocalKey<T>>::with\r\n  51: rustc::ty::context::TyCtxt::create_and_enter\r\n  52: rustc_driver::driver::compile_input\r\n  53: rustc_driver::run_compiler_with_pool\r\n  54: <scoped_tls::ScopedKey<T>>::set\r\n  55: rustc_driver::run_compiler\r\n  56: rustc_driver::monitor::{{closure}}\r\n  57: __rust_maybe_catch_panic\r\n             at src/libpanic_unwind/lib.rs:102\r\n  58: rustc_driver::run\r\n  59: rustc_driver::main\r\n  60: std::rt::lang_start::{{closure}}\r\n  61: std::panicking::try::do_call\r\n             at src/libstd/rt.rs:59\r\n             at src/libstd/panicking.rs:310\r\n  62: __rust_maybe_catch_panic\r\n             at src/libpanic_unwind/lib.rs:102\r\n  63: std::rt::lang_start_internal\r\n             at src/libstd/panicking.rs:289\r\n             at src/libstd/panic.rs:398\r\n             at src/libstd/rt.rs:58\r\n  64: main\r\n  65: __libc_start_main\r\n  66: <unknown>\r\nquery stack during panic:\r\n#0 [adt_sized_constraint] processing `NodeOrNull`\r\n#1 [check_item_well_formed] processing `NodeOrNull`\r\nend of query stack\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.32.0 (9fda7c223 2019-01-16) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n```\r\n", "closed_by": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/58532/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/58532/timeline", "performed_via_github_app": null, "state_reason": "completed"}