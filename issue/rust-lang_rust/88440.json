{"url": "https://api.github.com/repos/rust-lang/rust/issues/88440", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/88440/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/88440/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/88440/events", "html_url": "https://github.com/rust-lang/rust/issues/88440", "id": 981932716, "node_id": "MDU6SXNzdWU5ODE5MzI3MTY=", "number": 88440, "title": "2021 disjoint capture suggestion breaks macro_rules macro", "user": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 122406831, "node_id": "MDU6TGFiZWwxMjI0MDY4MzE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-closures", "name": "A-closures", "color": "f7e101", "default": false, "description": "Area: closures (`|args| { .. }`)"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1183099971, "node_id": "MDU6TGFiZWwxMTgzMDk5OTcx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-suggestion-diagnostics", "name": "A-suggestion-diagnostics", "color": "f7e101", "default": false, "description": "Area: suggestions generated by the compiler applied by cargo fix"}, {"id": 1596299768, "node_id": "MDU6TGFiZWwxNTk2Mjk5NzY4", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-invalid-suggestion", "name": "D-invalid-suggestion", "color": "c9f7a3", "default": false, "description": "A structured suggestion resulting in incorrect code"}, {"id": 2947369052, "node_id": "MDU6TGFiZWwyOTQ3MzY5MDUy", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-edition-2021", "name": "A-edition-2021", "color": "f7e101", "default": false, "description": "Area: The 2021 edition"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2021-08-28T21:35:19Z", "updated_at": "2021-08-31T18:28:48Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I tried this code:\r\n\r\n```rust\r\n#![allow(unused)]\r\n#![warn(rust_2021_incompatible_closure_captures)]\r\n\r\nmacro_rules! foo {\r\n    ($v:ident) => {\r\n        move || {\r\n            println!(\"{:?}\", $v.0);\r\n        }\r\n    };\r\n}\r\n\r\nfn main() {\r\n    let x = (vec![1], vec![2]);\r\n    foo!(x);\r\n}\r\n```\r\n\r\nThe rust_2021_incompatible_closure_captures lint generates a suggestion which causes this to fail to compile:\r\n\r\n```rust\r\nmacro_rules! foo {\r\n    ($v:ident) => {\r\n        move || {\r\n            let _ = &x;  // ERROR: cannot find value `x` in this scope\r\n            println!(\"{:?}\", $v.0);\r\n        }\r\n    };\r\n}\r\n```\r\n\r\nI'm not exactly sure what this should do.  In this particular case, the suggestion is not required.  However, that's a fundamental problem with the `rust_2021_incompatible_closure_captures` lint, as it does not know when it is required.\r\n\r\nIn general, modifying macros can be prone to failure, so maybe an alternative is to issue a warning with a non-machine-applicable fix when inside a `macro_rules` definition?\r\n\r\nThis was found in the 2021 crater run for rcodec 1.0.1: https://crater-reports.s3.amazonaws.com/pr-87190-3/try%23a7a572ce3edd6d476191fbfe92c9c1986e009b34/reg/rcodec-1.0.1/log.txt\r\nNote that this has even worse behavior than the example above.  The sample macro:\r\n\r\n```rust\r\nmacro_rules! forcomp_stmts {\r\n    { $yld:block, $v:ident, $e:expr } => {\r\n        $e.map(move |$v| $yld)\r\n    };\r\n    { $yld:block, $v:ident, $e:expr, $($tv:ident, $te:expr),+ } => {\r\n        $e.and_then(move |$v| {\r\n            forcomp_stmts!($yld, $($tv, $te),+)\r\n        })\r\n    };\r\n}\r\n```\r\n\r\nrewrites the map call to:\r\n\r\n```rust\r\n        $e.map{ let _ = &decoded; (move |$v| $yld) }\r\n```\r\n\r\nwhich is invalid syntax. \r\n\r\n### Meta\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.56.0-nightly (ac50a5335 2021-08-27)\r\nbinary: rustc\r\ncommit-hash: ac50a53359328a5d7f2f558833e63d59d372e4f7\r\ncommit-date: 2021-08-27\r\nhost: x86_64-apple-darwin\r\nrelease: 1.56.0-nightly\r\nLLVM version: 13.0.0\r\n```\r\n\r\ncc @rust-lang/wg-rfc-2229 ", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/88440/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/88440/timeline", "performed_via_github_app": null, "state_reason": null}