{"url": "https://api.github.com/repos/rust-lang/rust/issues/64437", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/64437/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/64437/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/64437/events", "html_url": "https://github.com/rust-lang/rust/issues/64437", "id": 493448495, "node_id": "MDU6SXNzdWU0OTM0NDg0OTU=", "number": 64437, "title": "Higher rank trait bounds cannot genericise across functions with a bound sharing a lifetime with the prototype", "user": {"login": "CJKay", "id": 1470499, "node_id": "MDQ6VXNlcjE0NzA0OTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1470499?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CJKay", "html_url": "https://github.com/CJKay", "followers_url": "https://api.github.com/users/CJKay/followers", "following_url": "https://api.github.com/users/CJKay/following{/other_user}", "gists_url": "https://api.github.com/users/CJKay/gists{/gist_id}", "starred_url": "https://api.github.com/users/CJKay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CJKay/subscriptions", "organizations_url": "https://api.github.com/users/CJKay/orgs", "repos_url": "https://api.github.com/users/CJKay/repos", "events_url": "https://api.github.com/users/CJKay/events{/privacy}", "received_events_url": "https://api.github.com/users/CJKay/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}, {"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-13T17:57:05Z", "updated_at": "2020-06-25T10:30:48Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "The current implementation of higher rank trait bounds does not appear to be able to match on functions which take a bound that uses a lifetime that the function also uses. Case in point:\r\n\r\n```rust\r\npub trait U<T> {}\r\n\r\nimpl<T> U<T> for () {}\r\n\r\npub fn inner<'a, T>(_: &'a ())\r\n    where T: U<&'a ()>\r\n{\r\n    unimplemented!()\r\n}\r\n\r\nfn outer<F>(f: F)\r\n    where F: for<'a> Fn(&'a ()),\r\n{\r\n    unimplemented!()\r\n}\r\n\r\nfn foo() {\r\n    outer(inner)\r\n}\r\n\r\n```\r\n\r\n([Playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=268e418107096468f8588dd9fdecb17c))\r\n\r\nErrors:\r\n\r\n```\r\n   Compiling playground v0.0.1 (/playground)\r\nerror[E0631]: type mismatch in function arguments\r\n  --> src/lib.rs:18:5\r\n   |\r\n5  | / pub fn inner<'a, T>(_: &'a ())\r\n6  | |     where T: U<&'a ()>\r\n7  | | {\r\n8  | |     unimplemented!()\r\n9  | | }\r\n   | |_- found signature of `fn(&()) -> _`\r\n...\r\n18 |       outer(inner)\r\n   |       ^^^^^ expected signature of `for<'a> fn(&'a ()) -> _`\r\n   |\r\nnote: required by `outer`\r\n  --> src/lib.rs:11:1\r\n   |\r\n11 | / fn outer<F>(f: F)\r\n12 | |     where F: for<'a> Fn(&'a ()),\r\n13 | | {\r\n14 | |     unimplemented!()\r\n15 | | }\r\n   | |_^\r\n\r\nerror[E0271]: type mismatch resolving `for<'a> <fn(&()) {inner::<'_, _>} as std::ops::FnOnce<(&'a (),)>>::Output == ()`\r\n  --> src/lib.rs:18:5\r\n   |\r\n18 |     outer(inner)\r\n   |     ^^^^^ expected bound lifetime parameter 'a, found concrete lifetime\r\n   |\r\nnote: required by `outer`\r\n  --> src/lib.rs:11:1\r\n   |\r\n11 | / fn outer<F>(f: F)\r\n12 | |     where F: for<'a> Fn(&'a ()),\r\n13 | | {\r\n14 | |     unimplemented!()\r\n15 | | }\r\n   | |_^\r\n\r\nerror: aborting due to 2 previous errors\r\n\r\nFor more information about this error, try `rustc --explain E0271`.\r\nerror: Could not compile `playground`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n\r\n```\r\n\r\nYou can get this to compile by swapping out `where T: U<&'a ()>` with `where T: U<()>`.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/64437/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/64437/timeline", "performed_via_github_app": null, "state_reason": null}