{"url": "https://api.github.com/repos/rust-lang/rust/issues/90811", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/90811/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/90811/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/90811/events", "html_url": "https://github.com/rust-lang/rust/issues/90811", "id": 1051422876, "node_id": "I_kwDOAAsO6M4-q3Cc", "number": 90811, "title": "rustdoc: Incorrect parsing of links followed by parens", "user": {"login": "lilyball", "id": 714, "node_id": "MDQ6VXNlcjcxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lilyball", "html_url": "https://github.com/lilyball", "followers_url": "https://api.github.com/users/lilyball/followers", "following_url": "https://api.github.com/users/lilyball/following{/other_user}", "gists_url": "https://api.github.com/users/lilyball/gists{/gist_id}", "starred_url": "https://api.github.com/users/lilyball/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lilyball/subscriptions", "organizations_url": "https://api.github.com/users/lilyball/orgs", "repos_url": "https://api.github.com/users/lilyball/repos", "events_url": "https://api.github.com/users/lilyball/events{/privacy}", "received_events_url": "https://api.github.com/users/lilyball/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 203738, "node_id": "MDU6TGFiZWwyMDM3Mzg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-rustdoc", "name": "T-rustdoc", "color": "bfd4f2", "default": false, "description": "Relevant to the rustdoc team, which will review and decide on the PR/issue."}, {"id": 1118567289, "node_id": "MDU6TGFiZWwxMTE4NTY3Mjg5", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-intra-doc-links", "name": "A-intra-doc-links", "color": "f7e101", "default": false, "description": "Area: Intra-doc links, the ability to link to items in docs by name"}, {"id": 2352122097, "node_id": "MDU6TGFiZWwyMzUyMTIyMDk3", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-discussion", "name": "C-discussion", "color": "f5f1fd", "default": false, "description": "Category: Discussion or questions that doesn't represent real issues."}, {"id": 2499041632, "node_id": "MDU6TGFiZWwyNDk5MDQxNjMy", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-markdown-parsing", "name": "A-markdown-parsing", "color": "f7e101", "default": false, "description": "Area: Markdown parsing for doc-comments"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2021-11-11T22:48:40Z", "updated_at": "2021-12-19T19:17:09Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "rustdoc seems to be parsing links incorrectly when they're followed by parens. The general theme is that part of rustdoc is right-biased in parsing links, e.g. `[Foo][](bar)` is parsed like `[Foo]` and `[](bar)`, but part of rustdoc parses it correctly. The observed behavior here is rather confusing, and it gets worse once you nest another link in the parens.\r\n\r\n### Examples\r\n\r\n#### Basic link\r\n\r\n```rust\r\n//! [Some][](value)\r\n```\r\n\r\n<details><summary><strong>Output:</strong> <a href=\"https://doc.rust-lang.org/1.56.1/core/option/enum.Option.html#variant.Some\" title=\"Some\">Some</a>(value)</summary>\r\n\r\n```html\r\n<a href=\"https://doc.rust-lang.org/1.56.1/core/option/enum.Option.html#variant.Some\" title=\"Some\">Some</a>\r\n(value)\r\n```\r\n</details>\r\n\r\nThe HTML output is correct but it emits a spurious warning:\r\n\r\n```\r\nwarning: unresolved link to `value`\r\n --> src/lib.rs:1:14\r\n  |\r\n1 | //! [Some][](value)\r\n  |              ^^^^^ no item named `value` in scope\r\n  |\r\n  = note: `#[warn(rustdoc::broken_intra_doc_links)]` on by default\r\n  = help: to escape `[` and `]` characters, add '\\' before them like `\\[` or `\\]`\r\n```\r\n\r\n#### Nested link\r\n\r\nIf we put another link inside the parens, the warning goes away but the nested link is not parsed:\r\n\r\n```rust\r\n//! [Some][]([Ok][])\r\n```\r\n\r\n<details><summary><strong>Output:</strong> <a href=\"https://doc.rust-lang.org/1.56.1/core/option/enum.Option.html#variant.Some\" title=\"Some\">Some</a>([Ok][])</summary>\r\n\r\n```html\r\n<a href=\"https://doc.rust-lang.org/1.56.1/core/option/enum.Option.html#variant.Some\" title=\"Some\">Some</a>\r\n([Ok][])\r\n```\r\n</details>\r\n\r\n#### Nested link with parens\r\n\r\nIf we put parens after the nested link, the nested link is then parsed, but parsed incorrectly. The output makes this clear. Again, no warnings:\r\n\r\n```rust\r\n//! [Some][]([Ok][](value))\r\n```\r\n\r\n<details><summary><strong>Output:</strong> <a href=\"https://doc.rust-lang.org/1.56.1/core/option/enum.Option.html#variant.Some\" title=\"Some\">Some</a>([Ok]<a href=\"value\"></a>)</summary>\r\n\r\nHTML Output:\r\n```html\r\n<a href=\"https://doc.rust-lang.org/1.56.1/core/option/enum.Option.html#variant.Some\" title=\"Some\">Some</a>\r\n([Ok]\r\n<a href=\"value\"></a>\r\n)\r\n```\r\n</details>\r\n\r\n#### Nested link with parens followed by link to same item\r\n\r\nPerhaps the most bizarre behavior here is if I simply include the nested link again elsewhere in the same doc comment, it parses correctly (and with no warnings). I've placed it on the same line for simplicity in this example, but the link can be anywhere in the doc comment.\r\n\r\n```rust\r\n//! [Some][]([Ok][](value)) or maybe [Ok][]\r\n```\r\n\r\n<details><summary><strong>Output:</strong> <a href=\"https://doc.rust-lang.org/1.56.1/core/option/enum.Option.html#variant.Some\" title=\"Some\">Some</a>(<a href=\"https://doc.rust-lang.org/1.56.1/core/result/enum.Result.html#variant.Ok\" title=\"Ok\">Ok</a>(value)) or maybe <a href=\"https://doc.rust-lang.org/1.56.1/core/result/enum.Result.html#variant.Ok\" title=\"Ok\">Ok</a></summary>\r\n\r\n```html\r\n<a href=\"https://doc.rust-lang.org/1.56.1/core/option/enum.Option.html#variant.Some\" title=\"Some\">Some</a>\r\n(\r\n<a href=\"https://doc.rust-lang.org/1.56.1/core/result/enum.Result.html#variant.Ok\" title=\"Ok\">Ok</a>\r\n(value)) or maybe \r\n<a href=\"https://doc.rust-lang.org/1.56.1/core/result/enum.Result.html#variant.Ok\" title=\"Ok\">Ok</a>\r\n```\r\n</details>\r\n\r\nInterestingly, it's not the link text that has to be the same, but the link destination. This example works equally well if I replace the second link with `[Nope][Ok]` but breaks if I use e.g. `[Ok](http://example.com)`.\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.56.1 (59eed8a2a 2021-11-01)\r\nbinary: rustc\r\ncommit-hash: 59eed8a2aac0230a8b53e89d4e99d55912ba6b35\r\ncommit-date: 2021-11-01\r\nhost: x86_64-apple-darwin\r\nrelease: 1.56.1\r\nLLVM version: 13.0.0\r\n```\r\n\r\nThis occurs on nightly too\r\n\r\n`rustc +nightly --version --verbose`:\r\n```\r\nrustc 1.58.0-nightly (82af160c2 2021-11-10)\r\nbinary: rustc\r\ncommit-hash: 82af160c2cb9c349a0373cba98d8ad7f911f0d34\r\ncommit-date: 2021-11-10\r\nhost: x86_64-apple-darwin\r\nrelease: 1.58.0-nightly\r\nLLVM version: 13.0.0\r\n```\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/90811/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/90811/timeline", "performed_via_github_app": null, "state_reason": null}