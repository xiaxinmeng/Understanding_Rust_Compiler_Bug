{"url": "https://api.github.com/repos/rust-lang/rust/issues/70791", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/70791/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/70791/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/70791/events", "html_url": "https://github.com/rust-lang/rust/issues/70791", "id": 594143696, "node_id": "MDU6SXNzdWU1OTQxNDM2OTY=", "number": 70791, "title": "Compiler error references non-existent/undefined lifetimes?", "user": {"login": "thanatos", "id": 90853, "node_id": "MDQ6VXNlcjkwODUz", "avatar_url": "https://avatars.githubusercontent.com/u/90853?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thanatos", "html_url": "https://github.com/thanatos", "followers_url": "https://api.github.com/users/thanatos/followers", "following_url": "https://api.github.com/users/thanatos/following{/other_user}", "gists_url": "https://api.github.com/users/thanatos/gists{/gist_id}", "starred_url": "https://api.github.com/users/thanatos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thanatos/subscriptions", "organizations_url": "https://api.github.com/users/thanatos/orgs", "repos_url": "https://api.github.com/users/thanatos/repos", "events_url": "https://api.github.com/users/thanatos/events{/privacy}", "received_events_url": "https://api.github.com/users/thanatos/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1596121013, "node_id": "MDU6TGFiZWwxNTk2MTIxMDEz", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-confusing", "name": "D-confusing", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error that should be reworked"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-04T22:48:18Z", "updated_at": "2020-06-12T02:05:23Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm trying to box the `impl Future` returned from an `async fn`; to that end, I tried wrapping it in a closure that does the boxing:\r\n\r\n```rust\r\n    let _clousre = |r: &Request<'_>| Box::new(index_get(r));\r\n```\r\n\r\n(`index_get` is an `async fn`.)\r\n\r\nI expected to see this happen: Well, I had hoped it would compile! I do not know if it should, however.\r\n\r\nInstead, this happened:\r\n\r\n```\r\nerror: lifetime may not live long enough\r\n  --> src/main.rs:19:38\r\n   |\r\n19 |     let _clousre = |r: &Request<'_>| Box::new(index_get(r));\r\n   |                        -           - ^^^^^^^^^^^^^^^^^^^^^^ returning this value requires that `'1` must outlive `'2`\r\n   |                        |           |\r\n   |                        |           return type of closure is std::boxed::Box<impl std::future::Future>\r\n   |                        let's call the lifetime of this reference `'1`\r\n\r\nerror: lifetime may not live long enough\r\n  --> src/main.rs:19:38\r\n   |\r\n19 |     let _clousre = |r: &Request<'_>| Box::new(index_get(r));\r\n   |                                 -- - ^^^^^^^^^^^^^^^^^^^^^^ returning this value requires that `'3` must outlive `'4`\r\n   |                                 |  |\r\n   |                                 |  return type of closure is std::boxed::Box<impl std::future::Future>\r\n   |                                 let's call this `'3`\r\n```\r\n\r\nHere, the error message references lifetimes `'1` and `'2`; it defines `'1`, **but what is `'2`?**\r\n\r\n(It also repeats the message twice, which seems odd.)\r\n\r\n`rustc --version --verbose`:\r\n```\r\n\u00bb rustc --version --verbose\r\nrustc 1.40.0 (73528e339 2019-12-16)\r\nbinary: rustc\r\ncommit-hash: 73528e339aae0f17a15ffa49a8ac608f50c6cf14\r\ncommit-date: 2019-12-16\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.40.0\r\nLLVM version: 9.0\r\n```\r\n\r\nWhile this isn't the latest stable, I can also replicate this in the playground, using both nightly and stable there. [Playground Example](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=098996eb7fdd4e8850986f59e7cd9b7a)", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/70791/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/70791/timeline", "performed_via_github_app": null, "state_reason": null}