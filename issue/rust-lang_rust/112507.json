{"url": "https://api.github.com/repos/rust-lang/rust/issues/112507", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/112507/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/112507/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/112507/events", "html_url": "https://github.com/rust-lang/rust/issues/112507", "id": 1751140531, "node_id": "I_kwDOAAsO6M5oYEiz", "number": 112507, "title": "ice: E0061: `remove the extra arguments` suggestion malformed", "user": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 4199206102, "node_id": "LA_kwDOAAsO6M76SszW", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-debug-assertions", "name": "requires-debug-assertions", "color": "76dcde", "default": false, "description": "This issue requires debug-assertions in some way"}], "state": "closed", "locked": false, "assignee": {"login": "chenyukang", "id": 230646, "node_id": "MDQ6VXNlcjIzMDY0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/230646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenyukang", "html_url": "https://github.com/chenyukang", "followers_url": "https://api.github.com/users/chenyukang/followers", "following_url": "https://api.github.com/users/chenyukang/following{/other_user}", "gists_url": "https://api.github.com/users/chenyukang/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenyukang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenyukang/subscriptions", "organizations_url": "https://api.github.com/users/chenyukang/orgs", "repos_url": "https://api.github.com/users/chenyukang/repos", "events_url": "https://api.github.com/users/chenyukang/events{/privacy}", "received_events_url": "https://api.github.com/users/chenyukang/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "chenyukang", "id": 230646, "node_id": "MDQ6VXNlcjIzMDY0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/230646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenyukang", "html_url": "https://github.com/chenyukang", "followers_url": "https://api.github.com/users/chenyukang/followers", "following_url": "https://api.github.com/users/chenyukang/following{/other_user}", "gists_url": "https://api.github.com/users/chenyukang/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenyukang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenyukang/subscriptions", "organizations_url": "https://api.github.com/users/chenyukang/orgs", "repos_url": "https://api.github.com/users/chenyukang/repos", "events_url": "https://api.github.com/users/chenyukang/events{/privacy}", "received_events_url": "https://api.github.com/users/chenyukang/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2023-06-10T22:27:22Z", "updated_at": "2023-06-20T15:52:43Z", "closed_at": "2023-06-20T15:52:43Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n-->\r\n\r\n### Code\r\n\r\n```Rust\r\npub enum Value {\r\n    Float(Option<f64>),\r\n}\r\n\r\nfn main() {\r\n    let a = Value::Float(\r\n        0,\r\n        None,\r\n        0,\r\n        PrivateStruct(0),\r\n        0,\r\n        0,\r\n        None,\r\n        0,\r\n        None,\r\n        0,\r\n    );\r\n}\r\n\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.72.0-nightly (43062c43d 2023-06-09)\r\nbinary: rustc\r\ncommit-hash: 43062c43d2a63cf4e261c6eddc417575c4f3062f\r\ncommit-date: 2023-06-09\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.72.0-nightly\r\nLLVM version: 16.0.5\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nerror[E0425]: cannot find function, tuple struct or tuple variant `PrivateStruct` in this scope\r\n  --> treereduce.out:10:9\r\n   |\r\n10 |         PrivateStruct(0),\r\n   |         ^^^^^^^^^^^^^ not found in this scope\r\n\r\nerror[E0061]: this enum variant takes 1 argument but 10 arguments were supplied\r\n --> treereduce.out:6:13\r\n  |\r\n6 |     let a = Value::Float(\r\n  |             ^^^^^^^^^^^^\r\n  |\r\nnote: tuple variant defined here\r\n --> treereduce.out:2:5\r\n  |\r\n2 |     Float(Option<f64>),\r\n  |     ^^^^^\r\nhelp: remove the extra arguments\r\n  |\r\n7 ~         ,\r\n8 ~         None0,\r\n9 ~         None,\r\n  |\r\n\r\nerror: aborting due to 2 previous errors\r\n\r\nSome errors have detailed explanations: E0061, E0425.\r\nFor more information about an error, try `rustc --explain E0061`.\r\n```\r\n\r\nthis looks wrong:\r\n````\r\nhelp: remove the extra arguments\r\n  |\r\n7 ~         ,\r\n8 ~         None0,\r\n9 ~         None,\r\n  |\r\n````\r\nI guess it should be something like\r\n```\r\n0,\r\nNone,\r\n0,\r\n```\r\n?\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nthread 'rustc' panicked at 'assertion failed: `(left == right)`\r\n  left: `Some([SubstitutionPart { span: treereduce.out:14:10: 16:9 (#0), snippet: \"\" }, SubstitutionPart { span: treereduce.out:15:13: 16:10 (#0), snippet: \"\" }])`,\r\n right: `None`: suggestion must not have overlapping parts', /home/matthias/vcs/github/rust_debug_assertions/compiler/rustc_errors/src/diagnostic.rs:628:9\r\nstack backtrace:\r\n   0:     0x7f2e10ef05f6 - trace\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/library/std/src/../../backtrace/src/backtrace/libunwind.rs:93:5\r\n   1:     0x7f2e10ef05f6 - trace_unsynchronized<std::sys_common::backtrace::_print_fmt::{closure_env#1}>\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\r\n   2:     0x7f2e10ef05f6 - _print_fmt\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/library/std/src/sys_common/backtrace.rs:65:5\r\n   3:     0x7f2e10ef05f6 - fmt\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/library/std/src/sys_common/backtrace.rs:44:22\r\n   4:     0x7f2e10f3cf08 - fmt\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/library/core/src/fmt/rt.rs:138:9\r\n   5:     0x7f2e10f3cf08 - write\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/library/core/src/fmt/mod.rs:1094:21\r\n   6:     0x7f2e10ea98cf - write_fmt<std::sys::unix::stdio::Stderr>\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/library/std/src/io/mod.rs:1713:15\r\n   7:     0x7f2e10ef03f5 - _print\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/library/std/src/sys_common/backtrace.rs:47:5\r\n   8:     0x7f2e10ef03f5 - print\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/library/std/src/sys_common/backtrace.rs:34:9\r\n   9:     0x7f2e10ec93ac - {closure#1}\r\n  10:     0x7f2e10ec9071 - default_hook\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/library/std/src/panicking.rs:288:9\r\n  11:     0x7f2e1288d1cb - call<(&core::panic::panic_info::PanicInfo), (dyn core::ops::function::Fn<(&core::panic::panic_info::PanicInfo), Output=()> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/library/alloc/src/boxed.rs:1999:9\r\n  12:     0x7f2e1288d1cb - {closure#0}\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/compiler/rustc_driver_impl/src/lib.rs:1281:13\r\n  13:     0x7f2e10ec9b95 - call<(&core::panic::panic_info::PanicInfo), (dyn core::ops::function::Fn<(&core::panic::panic_info::PanicInfo), Output=()> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/library/alloc/src/boxed.rs:1999:9\r\n  14:     0x7f2e10ec9b95 - rust_panic_with_hook\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/library/std/src/panicking.rs:709:13\r\n  15:     0x7f2e10ef0907 - {closure#0}\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/library/std/src/panicking.rs:597:13\r\n  16:     0x7f2e10ef06d6 - __rust_end_short_backtrace<std::panicking::begin_panic_handler::{closure_env#0}, !>\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/library/std/src/sys_common/backtrace.rs:151:18\r\n  17:     0x7f2e10ec9702 - begin_panic_handler\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/library/std/src/panicking.rs:593:5\r\n  18:     0x7f2e10e7e143 - panic_fmt\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/library/core/src/panicking.rs:67:14\r\n  19:     0x7f2e10e7e6bb - assert_failed_inner\r\n  20:     0x7f2e117dbb19 - core[b962eb8751e8bda6]::panicking::assert_failed::<core[b962eb8751e8bda6]::option::Option<&[rustc_errors[b6f6d948a016dba6]::SubstitutionPart; 2usize]>, core[b962eb8751e8bda6]::option::Option<&[rustc_errors[b6f6d948a016dba6]::SubstitutionPart; 2usize]>>\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/library/core/src/panicking.rs:228:5\r\n  21:     0x7f2e13085e0c - multipart_suggestion_with_style<alloc::string::String>\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/compiler/rustc_errors/src/diagnostic.rs:628:9\r\n  22:     0x7f2e12e6a291 - multipart_suggestion<alloc::string::String>\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/compiler/rustc_errors/src/diagnostic.rs:584:9\r\n  23:     0x7f2e12e6a291 - multipart_suggestion<rustc_span::ErrorGuaranteed, alloc::string::String>\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/compiler/rustc_errors/src/diagnostic_builder.rs:466:35\r\n  24:     0x7f2e12e6a291 - report_arg_errors\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/compiler/rustc_hir_typeck/src/fn_ctxt/checks.rs:1214:17\r\n  25:     0x7f2e12e65af8 - check_argument_types\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/compiler/rustc_hir_typeck/src/fn_ctxt/checks.rs:456:13\r\n  26:     0x7f2e12e25f34 - confirm_builtin_call\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/compiler/rustc_hir_typeck/src/callee.rs:454:9\r\n  27:     0x7f2e12e246d2 - check_call\r\n  28:     0x7f2e12ebe982 - check_expr_kind\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/compiler/rustc_hir_typeck/src/expr.rs:336:45\r\n  29:     0x7f2e12e3f945 - {closure#0}\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/compiler/rustc_hir_typeck/src/expr.rs:240:18\r\n  30:     0x7f2e12e3f945 - maybe_grow<rustc_middle::ty::Ty, rustc_hir_typeck::expr::{impl#0}::check_expr_with_expectation_and_args::{closure_env#0}>\r\n                               at /home/matthias/.cargo/registry/src/index.crates.io-6f17d22bba15001f/stacker-0.1.15/src/lib.rs:55:9\r\n  31:     0x7f2e12e3f945 - ensure_sufficient_stack<rustc_middle::ty::Ty, rustc_hir_typeck::expr::{impl#0}::check_expr_with_expectation_and_args::{closure_env#0}>\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/compiler/rustc_data_structures/src/stack.rs:17:5\r\n  32:     0x7f2e12e3f945 - check_expr_with_expectation_and_args\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/compiler/rustc_hir_typeck/src/expr.rs:236:18\r\n  33:     0x7f2e12ebd183 - check_expr_with_expectation\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/compiler/rustc_hir_typeck/src/expr.rs:190:9\r\n  34:     0x7f2e12e6d99b - check_expr_with_hint\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/compiler/rustc_hir_typeck/src/expr.rs:142:9\r\n  35:     0x7f2e12e6d99b - check_expr_coercible_to_type\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/compiler/rustc_hir_typeck/src/expr.rs:132:18\r\n  36:     0x7f2e12e6d99b - check_decl_initializer\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/compiler/rustc_hir_typeck/src/fn_ctxt/checks.rs:1420:13\r\n  37:     0x7f2e12e6dbae - check_decl\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/compiler/rustc_hir_typeck/src/fn_ctxt/checks.rs:1431:27\r\n  38:     0x7f2e12e6dfd6 - check_decl_local\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/compiler/rustc_hir_typeck/src/fn_ctxt/checks.rs:1464:9\r\n  39:     0x7f2e12e6dfd6 - check_stmt\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/compiler/rustc_hir_typeck/src/fn_ctxt/checks.rs:1481:17\r\n  40:     0x7f2e12e6e747 - {closure#0}\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/compiler/rustc_hir_typeck/src/fn_ctxt/checks.rs:1553:17\r\n  41:     0x7f2e12e6e747 - with_breakable_ctxt<rustc_hir_typeck::fn_ctxt::checks::{impl#0}::check_block_with_expected::{closure_env#0}, ()>\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/compiler/rustc_hir_typeck/src/fn_ctxt/_impl.rs:1523:22\r\n  42:     0x7f2e12e6e747 - check_block_with_expected\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/compiler/rustc_hir_typeck/src/fn_ctxt/checks.rs:1551:26\r\n  43:     0x7f2e12ebe5b2 - check_expr_kind\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/compiler/rustc_hir_typeck/src/expr.rs:335:41\r\n  44:     0x7f2e12e3f945 - {closure#0}\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/compiler/rustc_hir_typeck/src/expr.rs:240:18\r\n  45:     0x7f2e12e3f945 - maybe_grow<rustc_middle::ty::Ty, rustc_hir_typeck::expr::{impl#0}::check_expr_with_expectation_and_args::{closure_env#0}>\r\n                               at /home/matthias/.cargo/registry/src/index.crates.io-6f17d22bba15001f/stacker-0.1.15/src/lib.rs:55:9\r\n  46:     0x7f2e12e3f945 - ensure_sufficient_stack<rustc_middle::ty::Ty, rustc_hir_typeck::expr::{impl#0}::check_expr_with_expectation_and_args::{closure_env#0}>\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/compiler/rustc_data_structures/src/stack.rs:17:5\r\n  47:     0x7f2e12e3f945 - check_expr_with_expectation_and_args\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/compiler/rustc_hir_typeck/src/expr.rs:236:18\r\n  48:     0x7f2e12ebd183 - check_expr_with_expectation\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/compiler/rustc_hir_typeck/src/expr.rs:190:9\r\n  49:     0x7f2e12e416ef - check_expr_with_hint\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/compiler/rustc_hir_typeck/src/expr.rs:142:9\r\n  50:     0x7f2e12e416ef - check_return_expr\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/compiler/rustc_hir_typeck/src/expr.rs:830:30\r\n  51:     0x7f2e1305e03d - check_fn\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/compiler/rustc_hir_typeck/src/check.rs:120:5\r\n  52:     0x7f2e12f1b924 - {closure#0}<rustc_hir_typeck::typeck::{closure_env#0}>\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/compiler/rustc_hir_typeck/src/lib.rs:215:9\r\n  53:     0x7f2e12f1b924 - typeck_with_fallback<rustc_hir_typeck::typeck::{closure_env#0}>\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/compiler/rustc_hir_typeck/src/lib.rs:175:36\r\n  54:     0x7f2e12f1b924 - typeck\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/compiler/rustc_hir_typeck/src/lib.rs:157:5\r\n  55:     0x7f2e1452dffc - {closure#0}\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/compiler/rustc_query_impl/src/plumbing.rs:577:33\r\n  56:     0x7f2e1452dffc - __rust_begin_short_backtrace<rustc_query_impl::query_impl::typeck::dynamic_query::{closure#2}::{closure_env#0}, rustc_middle::query::erase::Erased<[u8; 8]>>\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/compiler/rustc_query_impl/src/plumbing.rs:506:18\r\n  57:     0x7f2e144f4d5c - {closure#2}\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/compiler/rustc_query_impl/src/plumbing.rs:574:25\r\n  58:     0x7f2e144f4d5c - call_once<rustc_query_impl::query_impl::typeck::dynamic_query::{closure_env#2}, (rustc_middle::ty::context::TyCtxt, rustc_span::def_id::LocalDefId)>\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/library/core/src/ops/function.rs:250:5\r\n  59:     0x7f2e14340b66 - compute<rustc_query_system::query::caches::VecCache<rustc_span::def_id::LocalDefId, rustc_middle::query::erase::Erased<[u8; 8]>>, false, false, false>\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/compiler/rustc_query_impl/src/lib.rs:116:9\r\n  60:     0x7f2e14340b66 - {closure#0}<rustc_query_impl::DynamicConfig<rustc_query_system::query::caches::VecCache<rustc_span::def_id::LocalDefId, rustc_middle::query::erase::Erased<[u8; 8]>>, false, false, false>, rustc_query_impl::plumbing::QueryCtxt>\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/compiler/rustc_query_system/src/query/plumbing.rs:487:72\r\n  61:     0x7f2e14340b66 - {closure#0}<rustc_query_system::query::plumbing::execute_job_non_incr::{closure_env#0}<rustc_query_impl::DynamicConfig<rustc_query_system::query::caches::VecCache<rustc_span::def_id::LocalDefId, rustc_middle::query::erase::Erased<[u8; 8]>>, false, false, false>, rustc_query_impl::plumbing::QueryCtxt>, rustc_middle::query::erase::Erased<[u8; 8]>>\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/compiler/rustc_middle/src/ty/context/tls.rs:82:9\r\n  62:     0x7f2e14340b66 - try_with<core::cell::Cell<*const ()>, rustc_middle::ty::context::tls::enter_context::{closure_env#0}<rustc_query_system::query::plumbing::execute_job_non_incr::{closure_env#0}<rustc_query_impl::DynamicConfig<rustc_query_system::query::caches::VecCache<rustc_span::def_id::LocalDefId, rustc_middle::query::erase::Erased<[u8; 8]>>, false, false, false>, rustc_query_impl::plumbing::QueryCtxt>, rustc_middle::query::erase::Erased<[u8; 8]>>, rustc_middle::query::erase::Erased<[u8; 8]>>\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/library/std/src/thread/local.rs:270:16\r\n  63:     0x7f2e14340b66 - with<core::cell::Cell<*const ()>, rustc_middle::ty::context::tls::enter_context::{closure_env#0}<rustc_query_system::query::plumbing::execute_job_non_incr::{closure_env#0}<rustc_query_impl::DynamicConfig<rustc_query_system::query::caches::VecCache<rustc_span::def_id::LocalDefId, rustc_middle::query::erase::Erased<[u8; 8]>>, false, false, false>, rustc_query_impl::plumbing::QueryCtxt>, rustc_middle::query::erase::Erased<[u8; 8]>>, rustc_middle::query::erase::Erased<[u8; 8]>>\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/library/std/src/thread/local.rs:246:9\r\n  64:     0x7f2e14340b66 - enter_context<rustc_query_system::query::plumbing::execute_job_non_incr::{closure_env#0}<rustc_query_impl::DynamicConfig<rustc_query_system::query::caches::VecCache<rustc_span::def_id::LocalDefId, rustc_middle::query::erase::Erased<[u8; 8]>>, false, false, false>, rustc_query_impl::plumbing::QueryCtxt>, rustc_middle::query::erase::Erased<[u8; 8]>>\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/compiler/rustc_middle/src/ty/context/tls.rs:79:9\r\n  65:     0x7f2e14340b66 - {closure#0}<rustc_middle::query::erase::Erased<[u8; 8]>, rustc_query_system::query::plumbing::execute_job_non_incr::{closure_env#0}<rustc_query_impl::DynamicConfig<rustc_query_system::query::caches::VecCache<rustc_span::def_id::LocalDefId, rustc_middle::query::erase::Erased<[u8; 8]>>, false, false, false>, rustc_query_impl::plumbing::QueryCtxt>>\r\n  ......\r\n  \r\n  160:     0x7f2e128a0865 - {closure#0}<rustc_interface::util::run_in_thread_pool_with_globals::{closure#0}::{closure_env#0}<rustc_interface::interface::run_compiler::{closure_env#0}<core::result::Result<(), rustc_span::ErrorGuaranteed>, rustc_driver_impl::run_compiler::{closure_env#1}>, core::result::Result<(), rustc_span::ErrorGuaranteed>>, core::result::Result<(), rustc_span::ErrorGuaranteed>>\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/library/std/src/thread/mod.rs:529:17\r\n 161:     0x7f2e128a0865 - call_once<core::result::Result<(), rustc_span::ErrorGuaranteed>, std::thread::{impl#0}::spawn_unchecked_::{closure#1}::{closure_env#0}<rustc_interface::util::run_in_thread_pool_with_globals::{closure#0}::{closure_env#0}<rustc_interface::interface::run_compiler::{closure_env#0}<core::result::Result<(), rustc_span::ErrorGuaranteed>, rustc_driver_impl::run_compiler::{closure_env#1}>, core::result::Result<(), rustc_span::ErrorGuaranteed>>, core::result::Result<(), rustc_span::ErrorGuaranteed>>>\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/library/core/src/panic/unwind_safe.rs:271:9\r\n 162:     0x7f2e128a0865 - do_call<core::panic::unwind_safe::AssertUnwindSafe<std::thread::{impl#0}::spawn_unchecked_::{closure#1}::{closure_env#0}<rustc_interface::util::run_in_thread_pool_with_globals::{closure#0}::{closure_env#0}<rustc_interface::interface::run_compiler::{closure_env#0}<core::result::Result<(), rustc_span::ErrorGuaranteed>, rustc_driver_impl::run_compiler::{closure_env#1}>, core::result::Result<(), rustc_span::ErrorGuaranteed>>, core::result::Result<(), rustc_span::ErrorGuaranteed>>>, core::result::Result<(), rustc_span::ErrorGuaranteed>>\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/library/std/src/panicking.rs:500:40\r\n 163:     0x7f2e128a0865 - try<core::result::Result<(), rustc_span::ErrorGuaranteed>, core::panic::unwind_safe::AssertUnwindSafe<std::thread::{impl#0}::spawn_unchecked_::{closure#1}::{closure_env#0}<rustc_interface::util::run_in_thread_pool_with_globals::{closure#0}::{closure_env#0}<rustc_interface::interface::run_compiler::{closure_env#0}<core::result::Result<(), rustc_span::ErrorGuaranteed>, rustc_driver_impl::run_compiler::{closure_env#1}>, core::result::Result<(), rustc_span::ErrorGuaranteed>>, core::result::Result<(), rustc_span::ErrorGuaranteed>>>>\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/library/std/src/panicking.rs:464:19\r\n 164:     0x7f2e128a0865 - catch_unwind<core::panic::unwind_safe::AssertUnwindSafe<std::thread::{impl#0}::spawn_unchecked_::{closure#1}::{closure_env#0}<rustc_interface::util::run_in_thread_pool_with_globals::{closure#0}::{closure_env#0}<rustc_interface::interface::run_compiler::{closure_env#0}<core::result::Result<(), rustc_span::ErrorGuaranteed>, rustc_driver_impl::run_compiler::{closure_env#1}>, core::result::Result<(), rustc_span::ErrorGuaranteed>>, core::result::Result<(), rustc_span::ErrorGuaranteed>>>, core::result::Result<(), rustc_span::ErrorGuaranteed>>\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/library/std/src/panic.rs:142:14\r\n 165:     0x7f2e128a0865 - {closure#1}<rustc_interface::util::run_in_thread_pool_with_globals::{closure#0}::{closure_env#0}<rustc_interface::interface::run_compiler::{closure_env#0}<core::result::Result<(), rustc_span::ErrorGuaranteed>, rustc_driver_impl::run_compiler::{closure_env#1}>, core::result::Result<(), rustc_span::ErrorGuaranteed>>, core::result::Result<(), rustc_span::ErrorGuaranteed>>\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/library/std/src/thread/mod.rs:528:30\r\n 166:     0x7f2e128a0865 - call_once<std::thread::{impl#0}::spawn_unchecked_::{closure_env#1}<rustc_interface::util::run_in_thread_pool_with_globals::{closure#0}::{closure_env#0}<rustc_interface::interface::run_compiler::{closure_env#0}<core::result::Result<(), rustc_span::ErrorGuaranteed>, rustc_driver_impl::run_compiler::{closure_env#1}>, core::result::Result<(), rustc_span::ErrorGuaranteed>>, core::result::Result<(), rustc_span::ErrorGuaranteed>>, ()>\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/library/core/src/ops/function.rs:250:5\r\n 167:     0x7f2e10e9cf5a - call_once<(), dyn core::ops::function::FnOnce<(), Output=()>, alloc::alloc::Global>\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/library/alloc/src/boxed.rs:1985:9\r\n 168:     0x7f2e10e9cf5a - call_once<(), alloc::boxed::Box<dyn core::ops::function::FnOnce<(), Output=()>, alloc::alloc::Global>, alloc::alloc::Global>\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/library/alloc/src/boxed.rs:1985:9\r\n 169:     0x7f2e10ea5ba5 - thread_start\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/library/std/src/sys/unix/thread.rs:108:17\r\n 170:     0x7f2e10ca344b - <unknown>\r\n 171:     0x7f2e10d26e40 - <unknown>\r\n 172:                0x0 - <unknown>\r\n\r\nerror: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.72.0-dev running on x86_64-unknown-linux-gnu\r\n\r\nquery stack during panic:\r\n#0 [typeck] type-checking `main`\r\n#1 [used_trait_imports] finding used_trait_imports `main`\r\n#2 [analysis] running analysis passes on this crate\r\nend of query stack\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0425`.\r\n```\r\n\r\n</p>\r\n</details>\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/112507/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/112507/timeline", "performed_via_github_app": null, "state_reason": "completed"}