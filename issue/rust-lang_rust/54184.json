{"url": "https://api.github.com/repos/rust-lang/rust/issues/54184", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/54184/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/54184/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/54184/events", "html_url": "https://github.com/rust-lang/rust/issues/54184", "id": 359906036, "node_id": "MDU6SXNzdWUzNTk5MDYwMzY=", "number": 54184, "title": "generic existential types should (at most) warn, not error, if a type parameter is unused", "user": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 25, "created_at": "2018-09-13T13:52:44Z", "updated_at": "2019-02-19T18:21:47Z", "closed_at": "2019-02-19T18:21:47Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Consider the following code ([play](https://play.rust-lang.org/?gist=d57057ce3bab5ec0d9e28fc1e86cd6d6&version=nightly&mode=debug&edition=2015)): \r\n\r\n```rust\r\n#![feature(existential_type)]\r\n\r\nfn main() {\r\n    let y = choose(vec![1, 2, 3, 4].into_iter());\r\n    for (i, elem) in y.enumerate() {\r\n        println!(\"processing y[{}]: {:?}\", i, elem);\r\n    }\r\n}\r\n\r\nexistential type MaybeWrapped<I>: Iterator<Item = usize>;\r\n\r\nfn choose<I: Iterator<Item = usize>>(x: I) -> MaybeWrapped<I> {\r\n    // If you switch to variant below, it works.\r\n    // return Wrapped(x);\r\n    return x.collect::<Vec<usize>>().into_iter();\r\n}\r\n\r\n/// Trivial wrapper around an iterator.\r\nstruct Wrapped<I: Iterator>(I);\r\nimpl<I: Iterator> Iterator for Wrapped<I> {\r\n    type Item = I::Item;\r\n    fn next(&mut self) -> Option<I::Item> { self.0.next() }\r\n}\r\n```\r\n\r\nThe compiler errors, with the diagnostic\r\n\r\n```\r\nerror[E0091]: type parameter `I` is unused\r\n  --> src/main.rs:10:31\r\n   |\r\n10 | existential type MaybeWrapped<I>: Iterator<Item = usize>;\r\n   |                               ^ unused type parameter\r\n\r\nerror: aborting due to previous error\r\n```\r\n\r\nBut it should not be illegal to leave a type parameter unused. It is useful, from the view-point of the implementor, to have the option of returning concrete types that do not use the given type.\r\n\r\n(Also, I find the diagnostic itself a bit less helpful than it could be; when I first read it, I thought it was complaining about not seeing `I` on the trait-bound in `existential type <NAME>: <TRAIT_BOUND>`; I needed @eddyb  to point out to me that the issue is in the body of `fn choose` itself.) ", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/54184/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/54184/timeline", "performed_via_github_app": null, "state_reason": "completed"}