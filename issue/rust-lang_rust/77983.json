{"url": "https://api.github.com/repos/rust-lang/rust/issues/77983", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/77983/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/77983/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/77983/events", "html_url": "https://github.com/rust-lang/rust/issues/77983", "id": 722546136, "node_id": "MDU6SXNzdWU3MjI1NDYxMzY=", "number": 77983, "title": "Uplift `declare_interior_mutable_const` and `borrow_interior_mutable_const` from clippy to rustc", "user": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235137, "node_id": "MDU6TGFiZWwyMzUxMzc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lint", "name": "A-lint", "color": "f7e101", "default": false, "description": "Area: Lints (warnings about flaws in source code) such as unused_mut."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-10-15T17:55:13Z", "updated_at": "2021-06-26T16:09:41Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "In tokio 0.2, there was a footgun: if you created a `const Runtime`, then each time you called `runtime.block_on()` it would make a new runtime. This lead to confusing errors at runtime like 'reactor gone' which gave no hint of what actually went wrong: https://github.com/rust-lang/rust-clippy/issues/6088\r\n\r\nFortunately, this was fixed by `const_item_mutation` in https://github.com/rust-lang/rust/pull/75573. Unfortunately, `Runtime::block_on` will now take `&self` instead of `&mut self` starting in tokio 0.3: https://tokio.rs/blog/2020-10-tokio-0-3\r\n\r\n`Runtime` can now only be constructed at runtime: as a local variable or in a `once_cell`, or `lazy_static`. The code for that looks like this:\r\n\r\n```rust\r\nuse once_cell::sync::Lazy;\r\nuse tokio::runtime::Runtime;\r\n\r\nconst RUNTIME: Lazy<Runtime> = Lazy::new(|| {\r\n    Runtime::new().unwrap()\r\n});\r\n\r\nfn main() {\r\n    RUNTIME.block_on(async {});\r\n}\r\n```\r\n\r\nrustc will compile this without a warning. Clippy, however, says that this is almost certainly not what you want:\r\n\r\n```\r\nerror: a `const` item should never be interior mutable\r\n --> src/main.rs:4:1\r\n  |\r\n4 |   const RUNTIME: Lazy<Runtime> = Lazy::new(|| {\r\n  |   ^----\r\n  |   |\r\n  |  _make this a static item (maybe with lazy_static)\r\n  | |\r\n5 | |     Runtime::new().unwrap()\r\n6 | | });\r\n  | |___^\r\n  |\r\n  = note: `#[deny(clippy::declare_interior_mutable_const)]` on by default\r\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\r\n\r\nerror: a `const` item with interior mutability should not be borrowed\r\n --> src/main.rs:9:5\r\n  |\r\n9 |     RUNTIME.block_on(async {});\r\n  |     ^^^^^^^\r\n  |\r\n  = note: `#[deny(clippy::borrow_interior_mutable_const)]` on by default\r\n  = help: assign this const to a local or static variable, and use the variable here\r\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#borrow_interior_mutable_const\r\n```\r\n\r\nTo avoid having this footgun, the lint should be uplifted from clippy to rustc (possibly as warn-by-default), so that users will notice it even if they don't use clippy.\r\n\r\ncc @Darksonn ", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/77983/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/77983/timeline", "performed_via_github_app": null, "state_reason": null}