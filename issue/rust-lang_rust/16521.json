{"url": "https://api.github.com/repos/rust-lang/rust/issues/16521", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/16521/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/16521/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/16521/events", "html_url": "https://github.com/rust-lang/rust/issues/16521", "id": 40355383, "node_id": "MDU6SXNzdWU0MDM1NTM4Mw==", "number": 16521, "title": "Add Persistent Collections to libcollections", "user": {"login": "Gankra", "id": 1136864, "node_id": "MDQ6VXNlcjExMzY4NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1136864?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gankra", "html_url": "https://github.com/Gankra", "followers_url": "https://api.github.com/users/Gankra/followers", "following_url": "https://api.github.com/users/Gankra/following{/other_user}", "gists_url": "https://api.github.com/users/Gankra/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gankra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gankra/subscriptions", "organizations_url": "https://api.github.com/users/Gankra/orgs", "repos_url": "https://api.github.com/users/Gankra/repos", "events_url": "https://api.github.com/users/Gankra/events{/privacy}", "received_events_url": "https://api.github.com/users/Gankra/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2014-08-15T15:09:44Z", "updated_at": "2015-02-11T01:07:16Z", "closed_at": "2015-02-11T01:07:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Many people want (fully) persistent collections in Rust to make it more pure-functional friendly. Rust doesn't have GC, Laziness, or Memoization (and I don't think it should), so we can't do any of the really fancy stuff described in the oft-cited \"purely functional data structures\". Instead, we should go practical and simple by copying several of the structures described in [Scala's Concrete Immutable Collections](http://docs.scala-lang.org/overviews/collections/concrete-immutable-collection-classes.html).\n\nOf particular interest is:\n- `List`: As far as I can tell this is the standard `cons/cdr` `SinglyLinkedList` every single functional language offers. I have most of an impl of this in the works using Rc, just need to write tests.\n- `Vector`: A high-degree (32) BTree with path-copying to provide \"practically constant\" random access into a list\n- `Queue`: A pair of Lists for \"front\" and \"back\", deletes take linear time when the \"back\" is empty, so as a fully persistent collection this is easily exploitable by an adversary!\n- `HashTrie`: A high-degree (32) Trie over hashes with path-copying to provide a \"practically constant\" hashmap\n- `RedBlackTree`: A redblack tree (presumably with path-copying?) for a treemap\n\nIdeally, we could do something magic by genercizing over Box and Rc to reuse a lot of code between our persistent and ephemeral tree-based collections, but I'm doubtful it will be that easy.\n", "closed_by": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/16521/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/16521/timeline", "performed_via_github_app": null, "state_reason": "completed"}