{"url": "https://api.github.com/repos/rust-lang/rust/issues/31854", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/31854/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/31854/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/31854/events", "html_url": "https://github.com/rust-lang/rust/issues/31854", "id": 135911719, "node_id": "MDU6SXNzdWUxMzU5MTE3MTk=", "number": 31854, "title": "Allow linking against dylibs in LTO mode", "user": {"login": "comex", "id": 47517, "node_id": "MDQ6VXNlcjQ3NTE3", "avatar_url": "https://avatars.githubusercontent.com/u/47517?v=4", "gravatar_id": "", "url": "https://api.github.com/users/comex", "html_url": "https://github.com/comex", "followers_url": "https://api.github.com/users/comex/followers", "following_url": "https://api.github.com/users/comex/following{/other_user}", "gists_url": "https://api.github.com/users/comex/gists{/gist_id}", "starred_url": "https://api.github.com/users/comex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/comex/subscriptions", "organizations_url": "https://api.github.com/users/comex/orgs", "repos_url": "https://api.github.com/users/comex/repos", "events_url": "https://api.github.com/users/comex/events{/privacy}", "received_events_url": "https://api.github.com/users/comex/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37547, "node_id": "MDU6TGFiZWwzNzU0Nw==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-linkage", "name": "A-linkage", "color": "f7e101", "default": false, "description": "Area: linking into static, shared libraries and binaries"}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-02-24T00:31:12Z", "updated_at": "2023-05-26T07:47:10Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I would like to build a binary that links against some crates using LTO and others dynamically.  (Why?  Because I have a dynamic library that contains all of LLVM and is 30MB, slowing down linking.  Note that this is not LLVM's own dynamic library, it's a Rust crate compiled to dylib that itself links LLVM statically.  One might imagine more generic use cases, e.g. LTOing small dependencies and dynamically linking large ones.)  Here's a model:\n\n`xa.rs`:\n\n``` rust\n#![crate_type = \"bin\"]\nextern crate xb;\nextern crate xc;\npub fn main() { xb::b(); xc::c(); }\n```\n\n`xb.rs`:\n\n``` rust\n#![crate_type = \"rlib\"]\npub fn b() {}\n```\n\n`xc.rs`:\n\n``` rust\n#![crate_type = \"dylib\"]\npub fn c() {}\n```\n\nThis can be built successfully without LTO, albeit only if the dylib links libstd dynamically (otherwise you get \"cannot satisfy dependencies so `std` only shows up once\"):\n\n```\nrustc ../xc.rs -C prefer-dynamic -L. && rustc ../xb.rs -L. && rustc ../xa.rs -L.\n```\n\nThe binary `xa` contains the code from `xa.rs` and `xb.rs` linked statically (but with a conventional linker rather than LTO), and dynamically links against `libxc.dylib` and libstd.\n\nBut if the last command includes `-C lto`, I just get:\n\n```\nerror: could not find rlib for: `xc`\n```\n\nIt would be nice if rustc supported this.\n\nIn principle support could also be added for combining LTO and non-LTO static linking, but that would require some method to identify which is desired, since both types refer to `.rlib` files.\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/31854/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/31854/timeline", "performed_via_github_app": null, "state_reason": null}