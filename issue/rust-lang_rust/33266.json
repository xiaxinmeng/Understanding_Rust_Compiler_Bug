{"url": "https://api.github.com/repos/rust-lang/rust/issues/33266", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/33266/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/33266/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/33266/events", "html_url": "https://github.com/rust-lang/rust/issues/33266", "id": 151759189, "node_id": "MDU6SXNzdWUxNTE3NTkxODk=", "number": 33266, "title": "docs: `size_of` is implemented as stride, but claims otherwise", "user": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 36996, "node_id": "MDU6TGFiZWwzNjk5Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-easy", "name": "E-easy", "color": "02e10c", "default": false, "description": "Call for participation: Experience needed to fix: Easy / not much (good first issue)"}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-04-28T22:38:42Z", "updated_at": "2016-05-03T06:57:00Z", "closed_at": "2016-05-03T06:57:00Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Discussion of https://github.com/rust-lang/rfcs/issues/1397 with the lang team led to inspection of the documentation for `std::mem::size_of` and `std::intrinsics::size_of`\n- `std::mem::size_of` ([link](https://doc.rust-lang.org/std/mem/fn.size_of.html)) just says \"returns the size of a type in bytes.\"  Understanding what this means (and deciding whether it is true or not) depends on how one interprets the word \"size\" in that sentence.\n- `std::intrinsics::size_of` ([link](https://doc.rust-lang.org/std/intrinsics/fn.size_of.html)) is worse. Why? Because it adds the additional paragraph:\n\n> This is the exact number of bytes in memory taken up by a value of the given type. In other words, a memset of this size would exactly overwrite a value. When laid out in vectors and structures there may be additional padding between elements.\n\nThis is much more specific, but the added specifics are wrong in terms of that the implementation does.\n\nThe quoted text is describing the notion of \"size\" as [denoted by Swift](https://github.com/apple/swift/blob/master/docs/ABI.rst#fragile-struct-and-tuple-layout). But Rust's implementation of `std::intrinsics::size_of` ends up eventually calling out to LLVM's [`getTypeAllocSize`](http://llvm.org/docs/doxygen/html/classllvm_1_1DataLayout.html#a1d6fcc02e91ba24510aba42660c90e29), which:\n\n> Returns the offset in bytes between successive objects of the specified type, including alignment padding. \n\n---\n\nAt this point we cannot change the name nor the behavior of `std::mem::size_of` -- which is fine, since as I understand it, the behavior of `std::mem::size_of` basically matches that of `sizeof(T)` in the C/C++ language family.\n\nBut we should:\n1. Change the documentation for `std::mem::size_of`, to make it clear what its behavior is (for this, we might as well point out that it is behaving like \"stride\" in Swift's terms)\n2. We should either fix the documentation for `std::intrinsics::size_of` so it no longer outright lies, or replace that single intrinsic with a pair of intrinsics that are analogous to Swift's `size` and `stride`.\n   - (With respect to https://github.com/rust-lang/rfcs/issues/1397, if we do introduce an analogous distinction, we will have to choose a name other than \"size\" for the quantity that is not forcibly rounded up to a multiple of the alignment. Maybe \"length\", \"fill\", or \"utilization\"...)\n\n---\n\nNeither of the above items are incredibly high priority, since the `std::mem::size_of` docs are not currently lying (just vague), and `std::intrinsic::size_of` is unstable. But it would probably be good to address at least one of the two, for these reasons:\n- to avoid users making invalid inferences about `std::mem::size_of`'s behavior (and thus manually rounding up its results to each type's alignment), and\n- to avoid some well-meaning Rust developer cut-and-pasting the `std::intrinsic::size_of` docs over into `std::mem::size_of`.\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/33266/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/33266/timeline", "performed_via_github_app": null, "state_reason": "completed"}