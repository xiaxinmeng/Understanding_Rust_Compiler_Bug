{"url": "https://api.github.com/repos/rust-lang/rust/issues/102775", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/102775/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/102775/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/102775/events", "html_url": "https://github.com/rust-lang/rust/issues/102775", "id": 1400993702, "node_id": "I_kwDOAAsO6M5TgXem", "number": 102775, "title": "Failing to infer type of T::into() in [] operator, results in broken diagnostic.", "user": {"login": "gimbles", "id": 93856041, "node_id": "U_kgDOBZghKQ", "avatar_url": "https://avatars.githubusercontent.com/u/93856041?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gimbles", "html_url": "https://github.com/gimbles", "followers_url": "https://api.github.com/users/gimbles/followers", "following_url": "https://api.github.com/users/gimbles/following{/other_user}", "gists_url": "https://api.github.com/users/gimbles/gists{/gist_id}", "starred_url": "https://api.github.com/users/gimbles/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gimbles/subscriptions", "organizations_url": "https://api.github.com/users/gimbles/orgs", "repos_url": "https://api.github.com/users/gimbles/repos", "events_url": "https://api.github.com/users/gimbles/events{/privacy}", "received_events_url": "https://api.github.com/users/gimbles/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1596299768, "node_id": "MDU6TGFiZWwxNTk2Mjk5NzY4", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-invalid-suggestion", "name": "D-invalid-suggestion", "color": "c9f7a3", "default": false, "description": "A structured suggestion resulting in incorrect code"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2022-10-07T11:00:06Z", "updated_at": "2022-12-13T19:08:25Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "> **Important**: This is continued from [this Zulip stream](https://rust-lang.zulipchat.com/#narrow/stream/122651-general/topic/Broken.20diagnostic.20for.20code.20that.20should.20probably.20not.20break/near/302699589).\r\n\r\n[Playground Link](https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=37aa5e0d1f97c184f3d035bf5b4f2fcf)\r\n\r\nI tried this code:\r\n\r\n```rust\r\nstruct M;\r\nimpl From<M> for usize {\r\n    fn from(_: M) -> Self {\r\n        0_usize\r\n    }\r\n}\r\nfn main() {\r\n    let m = M;\r\n    let a = [5_u32];\r\n    println!(\"{}\", a[m.into()]);\r\n}\r\n// Minimized example from Jesse Ruderman on Rust's Zulip.\r\n```\r\n\r\nError ->\r\n```\r\nerror[[E0282]](https://doc.rust-lang.org/stable/error-index.html#E0282): type annotations needed\r\n  --> src/main.rs:10:20\r\n   |\r\n10 |     println!(\"{}\", a[m.into()]);\r\n   |                    ^^^^^^^^^^^ cannot infer type of the type parameter `T` declared on the associated function `new_display`\r\n   |\r\n   = note: this error originates in the macro `$crate::format_args_nl` which comes from the expansion of the macro `println` (in Nightly builds, run with -Z macro-backtrace for more info)\r\nhelp: consider specifying the generic argument\r\n   |\r\n10 |     println!(\"{}\", a[m.into()]::<T>);\r\n   |                               +++++\r\n\r\nFor more information about this error, try `rustc --explain E0282`.\r\nerror: could not compile `playground` due to previous error\r\n```\r\n\r\nI expected to see this happen: It should infer the type, or at least emit a correct diagnostic.\r\n\r\nInstead, this happened: It errors, with the diagnostic containing a non-working suggestion.\r\n\r\n### Meta\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.66.0-nightly (0ca356586 2022-10-06)\r\nbinary: rustc\r\ncommit-hash: 0ca356586fed56002b10920fd21ddf6fb12de797\r\ncommit-date: 2022-10-06\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.66.0-nightly\r\nLLVM version: 15.0.2\r\n```\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/102775/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/102775/timeline", "performed_via_github_app": null, "state_reason": null}