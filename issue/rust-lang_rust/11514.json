{"url": "https://api.github.com/repos/rust-lang/rust/issues/11514", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/11514/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/11514/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/11514/events", "html_url": "https://github.com/rust-lang/rust/issues/11514", "id": 25493107, "node_id": "MDU6SXNzdWUyNTQ5MzEwNw==", "number": 11514, "title": "Let-in binding syntax", "user": {"login": "lucian1900", "id": 101894, "node_id": "MDQ6VXNlcjEwMTg5NA==", "avatar_url": "https://avatars.githubusercontent.com/u/101894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lucian1900", "html_url": "https://github.com/lucian1900", "followers_url": "https://api.github.com/users/lucian1900/followers", "following_url": "https://api.github.com/users/lucian1900/following{/other_user}", "gists_url": "https://api.github.com/users/lucian1900/gists{/gist_id}", "starred_url": "https://api.github.com/users/lucian1900/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lucian1900/subscriptions", "organizations_url": "https://api.github.com/users/lucian1900/orgs", "repos_url": "https://api.github.com/users/lucian1900/repos", "events_url": "https://api.github.com/users/lucian1900/events{/privacy}", "received_events_url": "https://api.github.com/users/lucian1900/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2014-01-13T12:13:23Z", "updated_at": "2014-01-15T13:13:38Z", "closed_at": "2014-01-15T13:13:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "I thought it would be interesting to be also able to bind a symbol only for the scope of the following expression, much like \"let ... in\" syntax in Haskell/ML.\n\nSo this\n\n```\nlet a = 1 in a + 1\n```\n\nwould be equivalent to this\n\n```\n{\n    let a = 1;\n    a + 1\n}\n```\n\nSuch syntax would also more closely align with `match`, where the symbols are scoped only in that arm of the match.\n\nI've felt the need for this trying to write `Some(&1)` and having to fall back binding it separately, but I understand that will be fixed.\n", "closed_by": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/11514/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/11514/timeline", "performed_via_github_app": null, "state_reason": "completed"}