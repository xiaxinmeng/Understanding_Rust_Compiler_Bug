{"url": "https://api.github.com/repos/rust-lang/rust/issues/42323", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/42323/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/42323/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/42323/events", "html_url": "https://github.com/rust-lang/rust/issues/42323", "id": 232447679, "node_id": "MDU6SXNzdWUyMzI0NDc2Nzk=", "number": 42323, "title": "In rustdoc, omit trait impls that a user cannot call", "user": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 203738, "node_id": "MDU6TGFiZWwyMDM3Mzg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-rustdoc", "name": "T-rustdoc", "color": "bfd4f2", "default": false, "description": "Relevant to the rustdoc team, which will review and decide on the PR/issue."}, {"id": 66893153, "node_id": "MDU6TGFiZWw2Njg5MzE1Mw==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-visibility", "name": "A-visibility", "color": "f7e101", "default": false, "description": "Area: visibility/privacy modifiers such as `pub`"}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-31T04:06:00Z", "updated_at": "2022-01-18T22:16:36Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "```rust\r\npub struct Public;\r\nstruct Private;\r\n\r\nimpl From<Private> for Public {\r\n    fn from(_: Private) -> Self {\r\n        unimplemented!()\r\n    }\r\n}\r\n```\r\n\r\nThe rustdoc of `Public` displays a `From` impl that cannot be invoked by users of the crate.\r\n\r\n![selection_057](https://cloud.githubusercontent.com/assets/1940490/26615406/77d6e194-457b-11e7-919c-29d309f8813d.png)\r\n\r\nI'm sure there are lots of edge cases to consider, but this is a common pattern especially for error types for use with `?`. It would be nice to hide such impls from rustdoc without requiring the crate author to tag them with `#[doc(hidden)]`.\r\n\r\nThis came up during the libz blitz evaluation of the reqwest crate. https://github.com/seanmonstar/reqwest/issues/106", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/42323/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/42323/timeline", "performed_via_github_app": null, "state_reason": null}