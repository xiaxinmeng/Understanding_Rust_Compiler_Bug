{"url": "https://api.github.com/repos/rust-lang/rust/issues/42371", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/42371/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/42371/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/42371/events", "html_url": "https://github.com/rust-lang/rust/issues/42371", "id": 233047854, "node_id": "MDU6SXNzdWUyMzMwNDc4NTQ=", "number": 42371, "title": "Semantics of StorageLive in loops", "user": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 256133398, "node_id": "MDU6TGFiZWwyNTYxMzMzOTg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-mir", "name": "A-mir", "color": "f7e101", "default": false, "description": "Area: Mid-level IR (MIR) - https://blog.rust-lang.org/2016/04/19/MIR.html"}, {"id": 650846969, "node_id": "MDU6TGFiZWw2NTA4NDY5Njk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-tracking-issue", "name": "C-tracking-issue", "color": "f5f1fd", "default": false, "description": "Category: A tracking issue for an RFC or an unstable feature."}], "state": "closed", "locked": false, "assignee": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 17, "created_at": "2017-06-02T00:45:23Z", "updated_at": "2020-12-29T23:20:04Z", "closed_at": "2020-12-12T05:04:32Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "This code\r\n```rust\r\nfn factorial_loop() -> i64 {\r\n    let mut product = 1;\r\n    let mut i = 1;\r\n\r\n    while i <= 10 {\r\n        product *= i;\r\n        i += 1;\r\n    }\r\n\r\n    product\r\n}\r\n```\r\ncompiles to\r\n```\r\nfn factorial_loop() -> i64 {\r\n    let mut _0: i64;                     // return pointer\r\n    scope 1 {\r\n        let mut _1: i64;                 // \"product\" in scope 1 at src/main.rs:2:9: 2:20\r\n        scope 2 {\r\n            let mut _2: i64;             // \"i\" in scope 2 at src/main.rs:3:9: 3:14\r\n        }\r\n    }\r\n    let mut _3: ();\r\n    let mut _4: bool;\r\n    let mut _5: i64;\r\n    let mut _6: ();\r\n    let mut _7: i64;\r\n    let mut _8: (i64, bool);\r\n    let mut _9: (i64, bool);\r\n    let mut _10: i64;\r\n\r\n    bb0: {\r\n        StorageLive(_1);                 // scope 0 at src/main.rs:2:9: 2:20\r\n        _1 = const 1i64;                 // scope 0 at src/main.rs:2:23: 2:24\r\n        StorageLive(_2);                 // scope 1 at src/main.rs:3:9: 3:14\r\n        _2 = const 1i64;                 // scope 1 at src/main.rs:3:17: 3:18\r\n        goto -> bb1;                     // scope 2 at src/main.rs:5:5: 8:6\r\n    }\r\n\r\n    bb1: {\r\n        StorageLive(_4);                 // scope 2 at src/main.rs:5:11: 5:18\r\n        StorageLive(_5);                 // scope 2 at src/main.rs:5:11: 5:12\r\n        _5 = _2;                         // scope 2 at src/main.rs:5:11: 5:12\r\n        _4 = Le(_5, const 10i64);        // scope 2 at src/main.rs:5:11: 5:18\r\n        StorageDead(_5);                 // scope 2 at src/main.rs:5:18: 5:18\r\n        switchInt(_4) -> [0u8: bb2, otherwise: bb3]; // scope 2 at src/main.rs:5:5: 8:6\r\n    }\r\n\r\n    bb2: {\r\n        _3 = ();                         // scope 2 at src/main.rs:5:5: 8:6\r\n        StorageDead(_4);                 // scope 2 at src/main.rs:8:6: 8:6\r\n        StorageLive(_10);                // scope 2 at src/main.rs:10:5: 10:12\r\n        _10 = _1;                        // scope 2 at src/main.rs:10:5: 10:12\r\n        _0 = _10;                        // scope 2 at src/main.rs:10:5: 10:12\r\n        StorageDead(_10);                // scope 2 at src/main.rs:10:12: 10:12\r\n        StorageDead(_2);                 // scope 1 at src/main.rs:11:2: 11:2\r\n        StorageDead(_1);                 // scope 0 at src/main.rs:11:2: 11:2\r\n        return;                          // scope 0 at src/main.rs:11:2: 11:2\r\n    }\r\n\r\n    bb3: {\r\n        StorageLive(_7);                 // scope 2 at src/main.rs:6:20: 6:21\r\n        _7 = _2;                         // scope 2 at src/main.rs:6:20: 6:21\r\n        _8 = CheckedMul(_1, _7);         // scope 2 at src/main.rs:6:9: 6:21\r\n        assert(!(_8.1: bool), \"attempt to multiply with overflow\") -> bb4; // scope 2 at src/main.rs:6:9: 6:21\r\n    }\r\n\r\n    bb4: {\r\n        _1 = (_8.0: i64);                // scope 2 at src/main.rs:6:9: 6:21\r\n        StorageDead(_7);                 // scope 2 at src/main.rs:6:21: 6:21\r\n        _9 = CheckedAdd(_2, const 1i64); // scope 2 at src/main.rs:7:9: 7:15\r\n        assert(!(_9.1: bool), \"attempt to add with overflow\") -> bb5; // scope 2 at src/main.rs:7:9: 7:15\r\n    }\r\n\r\n    bb5: {\r\n        _2 = (_9.0: i64);                // scope 2 at src/main.rs:7:9: 7:15\r\n        _6 = ();                         // scope 2 at src/main.rs:5:19: 8:6\r\n        goto -> bb1;                     // scope 2 at src/main.rs:5:5: 8:6\r\n    }\r\n}\r\n```\r\nOn every run through the loop, `StorageLive(_4)` is executed, and there is no matching `StorageDead`.\r\n\r\nThe intended semantics of multiple `StorageLive` on the same location are unclear. However, evidence suggests that LLVM considers a variable dead before *any* `llvm.lifetime.start`, in particular, in `llvm.lifetime.start; load; llvm.lifetime.start`, LLVM feels free to treat that load as yielding `undef`. The reference manual says so (however, it doesn't say anything about `llvm.lifetime.start; load; llvm.lifetime.end; llvm.lifetime.start` being fine, so it seems incomplete), and @eddyb managed to actually obtain UB from a redundant `llvm.lifetime.start` in\r\n```rust\r\n#![feature(link_llvm_intrinsics, untagged_unions)]\r\n\r\nextern {\r\n    #[link_name = \"llvm.lifetime.start\"]\r\n    fn MyStorageLive(size: usize, ptr: *const u8);\r\n}\r\n\r\n#[allow(unions_with_drop_fields)]\r\nunion Foo<T> { x: T }\r\n\r\nfn main() {\r\n    unsafe {\r\n        let mut x = Foo { x: String::new() };\r\n        while x.x.len() < 10 {\r\n            x.x.push('a');\r\n            assert_eq!(std::mem::size_of_val(&x.x), 24);\r\n            MyStorageLive(24, &x.x as *const _ as *const _);\r\n            println!(\"{}\", &x.x[..])\r\n        }\r\n    }\r\n}\r\n```\r\n[Playpen](https://is.gd/CBLLiN)\r\nIf you comment out the `MyStorageLive`, this prints some a's. If you leave it in, nothing is printed.\r\n\r\nThis suggests we should rather not permit \"redundant\" `StorageLive`, and hence the program at the beginning of this report should be translated such that `_4` is marked live *before* the loop, rather than *inside* the loop.", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/42371/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/42371/timeline", "performed_via_github_app": null, "state_reason": "completed"}