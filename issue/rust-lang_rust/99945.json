{"url": "https://api.github.com/repos/rust-lang/rust/issues/99945", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/99945/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/99945/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/99945/events", "html_url": "https://github.com/rust-lang/rust/issues/99945", "id": 1323016209, "node_id": "I_kwDOAAsO6M5O26AR", "number": 99945, "title": "Failed to normalize", "user": {"login": "lasernoises", "id": 64537872, "node_id": "MDQ6VXNlcjY0NTM3ODcy", "avatar_url": "https://avatars.githubusercontent.com/u/64537872?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lasernoises", "html_url": "https://github.com/lasernoises", "followers_url": "https://api.github.com/users/lasernoises/followers", "following_url": "https://api.github.com/users/lasernoises/following{/other_user}", "gists_url": "https://api.github.com/users/lasernoises/gists{/gist_id}", "starred_url": "https://api.github.com/users/lasernoises/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lasernoises/subscriptions", "organizations_url": "https://api.github.com/users/lasernoises/orgs", "repos_url": "https://api.github.com/users/lasernoises/repos", "events_url": "https://api.github.com/users/lasernoises/events{/privacy}", "received_events_url": "https://api.github.com/users/lasernoises/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1472502130, "node_id": "MDU6TGFiZWwxNDcyNTAyMTMw", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-type_alias_impl_trait", "name": "F-type_alias_impl_trait", "color": "f9c0cc", "default": false, "description": "`#[feature(type_alias_impl_trait)]`"}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-07-30T12:58:28Z", "updated_at": "2022-09-29T17:25:44Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\nI hit this error working with `type_alias_impl_trait`. This is the most I've managed to minimize the code.\r\n\r\n### Code\r\n\r\n```Rust\r\n#![feature(type_alias_impl_trait)]\r\n\r\ntrait Widget<E> {\r\n    type State;\r\n\r\n    fn make_state(&self) -> Self::State;\r\n}\r\n\r\nimpl<E> Widget<E> for () {\r\n    type State = ();\r\n\r\n    fn make_state(&self) -> Self::State {}\r\n}\r\n\r\nstruct StatefulWidget<F>(F);\r\n\r\ntype StateWidget<'a> = impl Widget<&'a ()>;\r\n\r\nimpl<F: for<'a> Fn(&'a ()) -> StateWidget<'a>> Widget<()> for StatefulWidget<F> {\r\n    type State = ();\r\n\r\n    fn make_state(&self) -> Self::State {}\r\n}\r\n\r\nfn new_stateful_widget<F: for<'a> Fn(&'a ()) -> StateWidget<'a>>(build: F) -> impl Widget<()> {\r\n    StatefulWidget(build)\r\n}\r\n\r\nfn main() {\r\n    new_stateful_widget(|_| ()).make_state();\r\n}\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.64.0-nightly (3924dac7b 2022-07-29)\r\nbinary: rustc\r\ncommit-hash: 3924dac7bb29bc8eb348059c901e8f912399c857\r\ncommit-date: 2022-07-29\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.64.0-nightly\r\nLLVM version: 14.0.6\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nerror: internal compiler error: compiler/rustc_middle/src/ty/normalize_erasing_regions.rs:199:90: Failed to normalize <impl Widget<()> as Widget<()>>::State, maybe try to call `try_normalize_erasing_regions` instead\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nerror: internal compiler error: compiler/rustc_middle/src/ty/normalize_erasing_regions.rs:199:90: Failed to normalize <impl Widget<()> as Widget<()>>::State, maybe try to call `try_normalize_erasing_regions` instead\r\n\r\nthread 'rustc' panicked at 'Box<dyn Any>', /rustc/3924dac7bb29bc8eb348059c901e8f912399c857/compiler/rustc_errors/src/lib.rs:1392:9\r\nstack backtrace:\r\n   0: std::panicking::begin_panic::<rustc_errors::ExplicitBug>\r\n   1: std::panic::panic_any::<rustc_errors::ExplicitBug>\r\n   2: <rustc_errors::HandlerInner>::bug::<&alloc::string::String>\r\n   3: <rustc_errors::Handler>::bug::<&alloc::string::String>\r\n   4: rustc_middle::ty::context::tls::with_context_opt::<rustc_middle::ty::context::tls::with_opt<rustc_middle::util::bug::opt_span_bug_fmt<rustc_span::span_encoding::Span>::{closure#0}, ()>::{closure#0}, ()>\r\n   5: rustc_middle::util::bug::opt_span_bug_fmt::<rustc_span::span_encoding::Span>\r\n   6: rustc_middle::util::bug::bug_fmt\r\n   7: <rustc_middle::ty::normalize_erasing_regions::NormalizeAfterErasingRegionsFolder as rustc_middle::ty::fold::TypeFolder>::fold_ty\r\n   8: rustc_monomorphize::collector::collect_neighbours\r\n   9: rustc_monomorphize::collector::collect_items_rec\r\n  10: rustc_data_structures::sync::par_for_each_in::<alloc::vec::Vec<rustc_middle::mir::mono::MonoItem>, rustc_monomorphize::collector::collect_crate_mono_items::{closure#1}::{closure#0}>\r\n  11: <rustc_session::session::Session>::time::<(), rustc_monomorphize::collector::collect_crate_mono_items::{closure#1}>\r\n  12: rustc_monomorphize::collector::collect_crate_mono_items\r\n  13: rustc_monomorphize::partitioning::collect_and_partition_mono_items\r\n  14: <rustc_query_system::dep_graph::graph::DepGraph<rustc_middle::dep_graph::dep_node::DepKind>>::with_task::<rustc_middle::ty::context::TyCtxt, (), (&std::collections::hash::set::HashSet<rustc_span::def_id::DefId, core::hash::BuildHasherDefault<rustc_hash::FxHasher>>, &[rustc_middle::mir::mono::CodegenUnit])>\r\n  15: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::DefaultCache<(), (&std::collections::hash::set::HashSet<rustc_span::def_id::DefId, core::hash::BuildHasherDefault<rustc_hash::FxHasher>>, &[rustc_middle::mir::mono::CodegenUnit])>>\r\n  16: rustc_query_system::query::plumbing::get_query::<rustc_query_impl::queries::collect_and_partition_mono_items, rustc_query_impl::plumbing::QueryCtxt>\r\n  17: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::collect_and_partition_mono_items\r\n  18: rustc_codegen_ssa::base::codegen_crate::<rustc_codegen_llvm::LlvmCodegenBackend>\r\n  19: <rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::CodegenBackend>::codegen_crate\r\n  20: <rustc_session::session::Session>::time::<alloc::boxed::Box<dyn core::any::Any>, rustc_interface::passes::start_codegen::{closure#0}>\r\n  21: <rustc_interface::passes::QueryContext>::enter::<<rustc_interface::queries::Queries>::ongoing_codegen::{closure#0}::{closure#0}, core::result::Result<alloc::boxed::Box<dyn core::any::Any>, rustc_errors::ErrorGuaranteed>>\r\n  22: <rustc_interface::queries::Queries>::ongoing_codegen\r\n  23: <rustc_interface::interface::Compiler>::enter::<rustc_driver::run_compiler::{closure#1}::{closure#2}, core::result::Result<core::option::Option<rustc_interface::queries::Linker>, rustc_errors::ErrorGuaranteed>>\r\n  24: rustc_span::with_source_map::<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_interface::interface::create_compiler_and_run<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver::run_compiler::{closure#1}>::{closure#1}>\r\n  25: rustc_interface::interface::create_compiler_and_run::<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver::run_compiler::{closure#1}>\r\n  26: <scoped_tls::ScopedKey<rustc_span::SessionGlobals>>::set::<rustc_interface::interface::run_compiler<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver::run_compiler::{closure#1}>::{closure#0}, core::result::Result<(), rustc_errors::ErrorGuaranteed>>\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.64.0-nightly (3924dac7b 2022-07-29) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: --crate-type bin -C embed-bitcode=no -C debuginfo=2 -C incremental\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [collect_and_partition_mono_items] collect_and_partition_mono_items\r\nend of query stack\r\nerror: could not compile `rust-playground`\r\n```\r\n\r\n</p>\r\n</details>", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/99945/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/99945/timeline", "performed_via_github_app": null, "state_reason": null}