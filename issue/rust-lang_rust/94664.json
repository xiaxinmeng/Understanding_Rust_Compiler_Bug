{"url": "https://api.github.com/repos/rust-lang/rust/issues/94664", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/94664/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/94664/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/94664/events", "html_url": "https://github.com/rust-lang/rust/issues/94664", "id": 1160519718, "node_id": "I_kwDOAAsO6M5FLCAm", "number": 94664, "title": "Compiler crash during doc test with generic_const_exprs", "user": {"login": "ssande7", "id": 1731652, "node_id": "MDQ6VXNlcjE3MzE2NTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1731652?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ssande7", "html_url": "https://github.com/ssande7", "followers_url": "https://api.github.com/users/ssande7/followers", "following_url": "https://api.github.com/users/ssande7/following{/other_user}", "gists_url": "https://api.github.com/users/ssande7/gists{/gist_id}", "starred_url": "https://api.github.com/users/ssande7/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ssande7/subscriptions", "organizations_url": "https://api.github.com/users/ssande7/orgs", "repos_url": "https://api.github.com/users/ssande7/repos", "events_url": "https://api.github.com/users/ssande7/events{/privacy}", "received_events_url": "https://api.github.com/users/ssande7/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-03-06T05:05:12Z", "updated_at": "2022-03-06T21:52:30Z", "closed_at": "2022-03-06T21:52:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Trying to use `generic_const_exprs` (#76560) to enforce bounds on a const generic is causing a compiler crash for doc tests if `#![feature(generic_const_exprs)]` is not included in the doc test snippet. This does not occur in all cases - eg. the `TryFrom` example below causes a crash, but the `From` example does not. Seems to be related to the `Result` type.\r\n\r\n### Code\r\n`cargo new --lib const_generics_bug`\r\n\r\n`lib.rs`:\r\n```Rust\r\n#![allow(incomplete_features)]\r\n#![feature(generic_const_exprs)]\r\n\r\npub struct If<const B: bool>;\r\npub trait True {}\r\nimpl True for If<true> {}\r\n\r\n#[derive(Debug)]\r\npub struct FooError;\r\n\r\npub struct Foo<const N: usize> where If<{N>0}>: True {\r\n    pub bar: [i32; N],\r\n}\r\n\r\nimpl<const N: usize> TryFrom<[i32;N]> for Foo<N> \r\nwhere If<{N>0}>: True,\r\n{\r\n    type Error = FooError;\r\n\r\n    /// # Examples\r\n    /// ```\r\n    // /// #![feature(generic_const_exprs)]   // <-- Uncommenting this line fixes the crash\r\n    /// use const_generics_bug::{FooError, Foo};\r\n    /// fn main() -> Result<(), FooError> {\r\n    ///     let _baz = Foo::<4>::try_from([1,2,3,4])?;\r\n    ///     Ok(())\r\n    /// }\r\n    /// ```\r\n    fn try_from(value: [i32;N]) -> Result<Self, Self::Error> {\r\n        Ok(Self {\r\n            bar: value,\r\n        })\r\n    }\r\n}\r\n\r\n// This test passes\r\n#[test]\r\nfn test() -> Result<(), FooError> {\r\n    let _baz = Foo::<4>::try_from([1,2,3,4])?;\r\n    Ok(())\r\n}\r\n\r\n\r\n// Uncommenting the below (and commenting out test() and impl TryFrom) works fine\r\n\r\n// impl<const N: usize> From<[i32;N]> for Foo<N> \r\n// where If<{N>0}>: True,\r\n// {\r\n//     /// # Examples\r\n//     /// ```\r\n//     /// use const_generics_bug::Foo;\r\n//     /// fn main() {\r\n//     ///     let _baz = Foo::<4>::from([1,2,3,4]);\r\n//     /// }\r\n//     /// ```\r\n//     fn from(value: [i32;N]) -> Self {\r\n//         Self {\r\n//             bar: value,\r\n//         }\r\n//     }\r\n// }\r\n\r\n```\r\n\r\n### Meta\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.61.0-nightly (c274e4969 2022-03-05)\r\nbinary: rustc\r\ncommit-hash: c274e4969f058b1c644243181ece9f829efa7594\r\ncommit-date: 2022-03-05\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.61.0-nightly\r\nLLVM version: 14.0.0\r\n```\r\n\r\n### Error output\r\n\r\n```\r\n---- src/lib.rs - Foo<N>::try_from (line 22) stdout ----\r\nerror: internal compiler error: compiler/rustc_middle/src/ty/normalize_erasing_regions.rs:179:90: Failed to normalize std::result::Result<const_generics_bug::Foo<N>, <const_generics_bug::Foo<N> as std::convert::TryFrom<[i32; N]>>::Error>, maybe try to call `try_normalize_erasing_regions` instead\r\n\r\nthread 'rustc' panicked at 'Box<dyn Any>', compiler/rustc_errors/src/lib.rs:1236:9\r\n\r\n```\r\n\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\n   0: std::panicking::begin_panic::<rustc_errors::ExplicitBug>\r\n   1: std::panic::panic_any::<rustc_errors::ExplicitBug>\r\n   2: <rustc_errors::HandlerInner>::bug\r\n   3: <rustc_errors::Handler>::bug\r\n   4: rustc_middle::ty::context::tls::with_opt::<rustc_middle::util::bug::opt_span_bug_fmt<rustc_span::span_encoding::Span>::{closure#0}, ()>\r\n   5: rustc_middle::util::bug::opt_span_bug_fmt::<rustc_span::span_encoding::Span>\r\n   6: rustc_middle::util::bug::bug_fmt\r\n   7: <rustc_middle::ty::Ty as rustc_middle::ty::fold::TypeFoldable>::try_fold_with::<rustc_middle::ty::normalize_erasing_regions::NormalizeAfterErasingRegionsFolder>\r\n   8: <&rustc_middle::ty::list::List<rustc_middle::ty::Ty> as rustc_middle::ty::fold::TypeFoldable>::try_fold_with::<rustc_middle::ty::normalize_erasing_regions::NormalizeAfterErasingRegionsFolder>\r\n   9: <rustc_middle::ty::instance::Instance>::fn_sig_for_fn_abi\r\n  10: rustc_middle::ty::layout::fn_abi_of_instance\r\n  11: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::DefaultCache<rustc_middle::ty::ParamEnvAnd<(rustc_middle::ty::instance::Instance, &rustc_middle::ty::list::List<rustc_middle::ty::Ty>)>, core::result::Result<&rustc_target::abi::call::FnAbi<rustc_middle::ty::Ty>, rustc_middle::ty::layout::FnAbiError>>>\r\n  12: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::fn_abi_of_instance\r\n  13: <rustc_codegen_llvm::context::CodegenCx as rustc_codegen_ssa::traits::declare::PreDefineMethods>::predefine_fn\r\n  14: rustc_codegen_llvm::base::compile_codegen_unit::module_codegen\r\n  15: <rustc_query_system::dep_graph::graph::DepGraph<rustc_middle::dep_graph::dep_node::DepKind>>::with_task::<rustc_middle::ty::context::TyCtxt, rustc_span::symbol::Symbol, rustc_codegen_ssa::ModuleCodegen<rustc_codegen_llvm::ModuleLlvm>>\r\n  16: rustc_codegen_llvm::base::compile_codegen_unit\r\n  17: <rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::CodegenBackend>::codegen_crate\r\n  18: <rustc_session::session::Session>::time::<alloc::boxed::Box<dyn core::any::Any>, rustc_interface::passes::start_codegen::{closure#0}>\r\n  19: <rustc_interface::passes::QueryContext>::enter::<<rustc_interface::queries::Queries>::ongoing_codegen::{closure#0}::{closure#0}, core::result::Result<alloc::boxed::Box<dyn core::any::Any>, rustc_errors::ErrorGuaranteed>>\r\n  20: <rustc_interface::queries::Queries>::ongoing_codegen\r\n  21: <rustc_interface::interface::Compiler>::enter::<rustc_driver::run_compiler::{closure#1}::{closure#2}, core::result::Result<core::option::Option<rustc_interface::queries::Linker>, rustc_errors::ErrorGuaranteed>>\r\n  22: rustc_span::with_source_map::<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_interface::interface::create_compiler_and_run<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver::run_compiler::{closure#1}>::{closure#1}>\r\n  23: rustc_interface::interface::create_compiler_and_run::<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver::run_compiler::{closure#1}>\r\n  24: <scoped_tls::ScopedKey<rustc_span::SessionGlobals>>::set::<rustc_interface::interface::run_compiler<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver::run_compiler::{closure#1}>::{closure#0}, core::result::Result<(), rustc_errors::ErrorGuaranteed>>\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.61.0-nightly (c274e4969 2022-03-05) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: --crate-type bin -C codegen-units=1 -C embed-bitcode=no\r\n\r\nquery stack during panic:\r\n#0 [fn_abi_of_instance] computing call ABI of `<const_generics_bug::Foo<4_usize> as core::convert::TryFrom<[i32; 4]>>::try_from`\r\nend of query stack\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "BoxyUwU", "id": 21149742, "node_id": "MDQ6VXNlcjIxMTQ5NzQy", "avatar_url": "https://avatars.githubusercontent.com/u/21149742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BoxyUwU", "html_url": "https://github.com/BoxyUwU", "followers_url": "https://api.github.com/users/BoxyUwU/followers", "following_url": "https://api.github.com/users/BoxyUwU/following{/other_user}", "gists_url": "https://api.github.com/users/BoxyUwU/gists{/gist_id}", "starred_url": "https://api.github.com/users/BoxyUwU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BoxyUwU/subscriptions", "organizations_url": "https://api.github.com/users/BoxyUwU/orgs", "repos_url": "https://api.github.com/users/BoxyUwU/repos", "events_url": "https://api.github.com/users/BoxyUwU/events{/privacy}", "received_events_url": "https://api.github.com/users/BoxyUwU/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/94664/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/94664/timeline", "performed_via_github_app": null, "state_reason": "completed"}