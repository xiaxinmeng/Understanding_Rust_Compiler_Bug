{"url": "https://api.github.com/repos/rust-lang/rust/issues/27456", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/27456/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/27456/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/27456/events", "html_url": "https://github.com/rust-lang/rust/issues/27456", "id": 98533453, "node_id": "MDU6SXNzdWU5ODUzMzQ1Mw==", "number": 27456, "title": "Warn for functions that should 'obviously' be unsafe", "user": {"login": "dimbleby", "id": 875184, "node_id": "MDQ6VXNlcjg3NTE4NA==", "avatar_url": "https://avatars.githubusercontent.com/u/875184?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dimbleby", "html_url": "https://github.com/dimbleby", "followers_url": "https://api.github.com/users/dimbleby/followers", "following_url": "https://api.github.com/users/dimbleby/following{/other_user}", "gists_url": "https://api.github.com/users/dimbleby/gists{/gist_id}", "starred_url": "https://api.github.com/users/dimbleby/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dimbleby/subscriptions", "organizations_url": "https://api.github.com/users/dimbleby/orgs", "repos_url": "https://api.github.com/users/dimbleby/repos", "events_url": "https://api.github.com/users/dimbleby/events{/privacy}", "received_events_url": "https://api.github.com/users/dimbleby/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-08-01T12:19:25Z", "updated_at": "2015-08-05T07:50:19Z", "closed_at": "2015-08-04T21:48:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "As a noob writing FFI code I have more than once made a mistake something like this\n\n``` rust\nfn foo(pointer: *const u32) -> u32 {\n    unsafe { *pointer + 1 }\n}\n```\n\nClearly `foo()` should have been marked unsafe, as a caller can demonstrate by writing the following safe code:\n\n``` rust\nlet ptr = std::ptr::null();\nfoo(ptr);\n```\n\nWouldn't it be nice if the compiler had warned something along the lines of \"foo dereferences one of its pointer arguments, so should be marked as unsafe\"?\n\nI recognise that this is only one of a million ways of writing code that should-be-unsafe-but-isn't, and no doubt asking the compiler to warn for all of them would be an impossibly difficult task.\n\nHowever I'm hoping that this particular case might be fairly low-hanging fruit, and if so I suggest that it would be a useful warning to have.\n", "closed_by": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/27456/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/27456/timeline", "performed_via_github_app": null, "state_reason": "completed"}