{"url": "https://api.github.com/repos/rust-lang/rust/issues/41964", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/41964/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/41964/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/41964/events", "html_url": "https://github.com/rust-lang/rust/issues/41964", "id": 228428726, "node_id": "MDU6SXNzdWUyMjg0Mjg3MjY=", "number": 41964, "title": "iter::Scan should not unconditionally implement FusedIterator", "user": {"login": "shepmaster", "id": 174509, "node_id": "MDQ6VXNlcjE3NDUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/174509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shepmaster", "html_url": "https://github.com/shepmaster", "followers_url": "https://api.github.com/users/shepmaster/followers", "following_url": "https://api.github.com/users/shepmaster/following{/other_user}", "gists_url": "https://api.github.com/users/shepmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/shepmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shepmaster/subscriptions", "organizations_url": "https://api.github.com/users/shepmaster/orgs", "repos_url": "https://api.github.com/users/shepmaster/repos", "events_url": "https://api.github.com/users/shepmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/shepmaster/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-05-12T23:13:26Z", "updated_at": "2017-05-26T15:31:55Z", "closed_at": "2017-05-26T15:31:55Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "[`Scan` unconditionally implements `FusedIterator` if the wrapped iterator does](https://github.com/rust-lang/rust/blob/e17a1227ac779a181b2839998e26a7e4e434c2a0/src/libcore/iter/mod.rs#L1781-L1783):\r\n\r\n```rust\r\nimpl<B, I, St, F> FusedIterator for Scan<I, St, F>\r\n    where I: FusedIterator, F: FnMut(&mut St, I::Item) -> Option<B> {}\r\n```\r\n\r\nSince the closure to `scan` can choose to return `None`, this implementation is overly broad. It would need to take the closure into account, which seems... not possible.\r\n\r\nHere's a reproduction showing the unexpected behavior when the closure returns `None`:\r\n\r\n```\r\n#![feature(fused)]\r\n\r\nfn dump<I: Iterator<Item = i32>>(label: &str, mut iter: I) {\r\n    println!(\"= Running: {}\", label);\r\n    for _ in 0..10 {\r\n        println!(\"{:?}\", iter.next());\r\n    }\r\n    println!(\"\");\r\n}\r\n\r\nfn boxed_internal_fuse() -> Box<Iterator<Item = i32>> {\r\n    Box::new((1..3)\r\n        .scan(1, |_, x| if x < 2 { None } else { Some(x) })\r\n        .fuse())\r\n}\r\n\r\nfn boxed_no_fuse() -> Box<Iterator<Item = i32>> {\r\n    Box::new((1..3)\r\n        .scan(1, |_, x| if x < 2 { None } else { Some(x) }))\r\n}\r\n\r\nuse std::iter::FusedIterator;\r\nfn boxed_no_fuse_but_fused() -> Box<FusedIterator<Item = i32>> {\r\n    Box::new((1..3)\r\n        .scan(1, |_, x| if x < 2 { None } else { Some(x) }))\r\n}\r\n\r\nfn main() {\r\n    let i1 = (1..3)\r\n        .scan(1, |_, x| if x < 2 { None } else { Some(x) });\r\n    dump(\"Scan\", i1);\r\n    \r\n    let i2 = (1..3)\r\n        .scan(1, |_, x| if x < 2 { None } else { Some(x) })\r\n        .fuse();\r\n    dump(\"Fuse<Scan>\", i2);\r\n    \r\n    dump(\"Box<Fuse<Scan>>\", boxed_internal_fuse());\r\n    dump(\"Fuse<Box<Iterator>>\", boxed_no_fuse().fuse());\r\n    dump(\"Fuse<Box<FusedIterator>>\", boxed_no_fuse_but_fused().fuse());\r\n}\r\n```\r\n\r\n```\r\n= Running: Scan\r\nNone\r\nSome(2)\r\nNone\r\nNone\r\nNone\r\nNone\r\nNone\r\nNone\r\nNone\r\nNone\r\n\r\n= Running: Fuse<Scan>\r\nNone\r\nSome(2)\r\nNone\r\nNone\r\nNone\r\nNone\r\nNone\r\nNone\r\nNone\r\nNone\r\n\r\n= Running: Box<Fuse<Scan>>\r\nNone\r\nSome(2)\r\nNone\r\nNone\r\nNone\r\nNone\r\nNone\r\nNone\r\nNone\r\nNone\r\n\r\n= Running: Fuse<Box<Iterator>>\r\nNone\r\nNone\r\nNone\r\nNone\r\nNone\r\nNone\r\nNone\r\nNone\r\nNone\r\nNone\r\n\r\n= Running: Fuse<Box<FusedIterator>>\r\nNone\r\nSome(2)\r\nNone\r\nNone\r\nNone\r\nNone\r\nNone\r\nNone\r\nNone\r\nNone\r\n```\r\n\r\nThis example requires nightly for the feature to demonstrate, but the effect can be felt in stable Rust.\r\n\r\n[Originally reported via Stack Overflow](http://stackoverflow.com/q/43947111/155423)", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/41964/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/41964/timeline", "performed_via_github_app": null, "state_reason": "completed"}