{"url": "https://api.github.com/repos/rust-lang/rust/issues/100695", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/100695/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/100695/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/100695/events", "html_url": "https://github.com/rust-lang/rust/issues/100695", "id": 1342214853, "node_id": "I_kwDOAAsO6M5QAJLF", "number": 100695, "title": "#[deny(overflowing_literals)] is not triggered on proc macro output without a source span", "user": {"login": "kupiakos", "id": 3309728, "node_id": "MDQ6VXNlcjMzMDk3Mjg=", "avatar_url": "https://avatars.githubusercontent.com/u/3309728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kupiakos", "html_url": "https://github.com/kupiakos", "followers_url": "https://api.github.com/users/kupiakos/followers", "following_url": "https://api.github.com/users/kupiakos/following{/other_user}", "gists_url": "https://api.github.com/users/kupiakos/gists{/gist_id}", "starred_url": "https://api.github.com/users/kupiakos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kupiakos/subscriptions", "organizations_url": "https://api.github.com/users/kupiakos/orgs", "repos_url": "https://api.github.com/users/kupiakos/repos", "events_url": "https://api.github.com/users/kupiakos/events{/privacy}", "received_events_url": "https://api.github.com/users/kupiakos/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-08-17T19:42:51Z", "updated_at": "2022-08-17T19:44:29Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "Proc macros will not trigger `#[deny(overflowing_literals)]` if the violating output literal is not associated with an input span. It does not matter if the input span is a literal or completely unrelated. This is unexpected, as an overflowing literal should always be checked regardless of how it was generated.\r\n\r\nproc macro lib.rs:\r\n```rust\r\nextern crate proc_macro;\r\n\r\n#[proc_macro]\r\npub fn no_overflow_error_without_span(input: proc_macro::TokenStream) -> proc_macro::TokenStream {\r\n    // Convert the input to/from string to remove span info\r\n    let value_str = input.to_string();\r\n    let mut output = proc_macro::TokenStream::new();\r\n    output.extend([\r\n        \"pub const PEAR: u8 = \"\r\n            .parse::<proc_macro::TokenStream>()\r\n            .unwrap(),\r\n        value_str.parse().unwrap(),\r\n        \";\".parse().unwrap(),\r\n    ]);\r\n    output\r\n}\r\n\r\n#[proc_macro]\r\npub fn overflow_error_with_unrelated_span(input: proc_macro::TokenStream) -> proc_macro::TokenStream {\r\n    let mut input = input.into_iter();\r\n    let in_token = input.next().expect(\"single token\");\r\n    assert!(input.next().is_none(), \"more than one token\");\r\n\r\n    let value_str = \"256\".to_string();\r\n    let mut value_token: proc_macro::TokenTree = value_str\r\n        .parse::<proc_macro::TokenStream>()\r\n        .unwrap()\r\n        .into_iter()\r\n        .next()\r\n        .unwrap();\r\n    value_token.set_span(in_token.span());\r\n    let mut output = proc_macro::TokenStream::new();\r\n    output.extend([\r\n        \"pub const BANANA: u8 = \"\r\n            .parse::<proc_macro::TokenStream>()\r\n            .unwrap(),\r\n        value_token.into(),\r\n        \";\".parse().unwrap(),\r\n    ]);\r\n    output\r\n}\r\n\r\n#[proc_macro]\r\npub fn overflow_error_with_passthrough(input: proc_macro::TokenStream) -> proc_macro::TokenStream {\r\n    let mut output = proc_macro::TokenStream::new();\r\n    output.extend([\r\n        \"pub const APPLE: u8 = \"\r\n            .parse::<proc_macro::TokenStream>()\r\n            .unwrap(),\r\n        input,\r\n        \";\".parse().unwrap(),\r\n    ]);\r\n    output\r\n}\r\n\r\n```\r\n\r\ntest:\r\n```rust\r\n\r\n// Errors out as expected\r\noverflow_error_with_passthrough!(256);\r\n\r\n// Gives an expected overflow error even though the span is completely unrelated to the overflow.\r\noverflow_error_with_unrelated_span!(blah);\r\n\r\n// No error here! This is unexpected. PEAR is equal to 0 as it implicitly overflowed.\r\nno_overflow_error_without_span!(256);\r\n```\r\n\r\n\r\n`rustc --version --verbose`:\r\n```\r\n$ rustc --version --verbose\r\nrustc 1.64.0-nightly (87588a2af 2022-07-13)\r\nbinary: rustc\r\ncommit-hash: 87588a2afd9ca903366f0deaf84d805f34469384\r\ncommit-date: 2022-07-13\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.64.0-nightly\r\nLLVM version: 14.0.6\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/100695/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/100695/timeline", "performed_via_github_app": null, "state_reason": null}