{"url": "https://api.github.com/repos/rust-lang/rust/issues/80375", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/80375/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/80375/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/80375/events", "html_url": "https://github.com/rust-lang/rust/issues/80375", "id": 774825140, "node_id": "MDU6SXNzdWU3NzQ4MjUxNDA=", "number": 80375, "title": "ICE: compiler/rustc_middle/src/ty/subst.rs:568:17: const parameter `COUNT/#0` (Const { ty: usize, val: Param(COUNT/#0) }/0) out of range when substituting substs=[]", "user": {"login": "chengniansun", "id": 4554271, "node_id": "MDQ6VXNlcjQ1NTQyNzE=", "avatar_url": "https://avatars.githubusercontent.com/u/4554271?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chengniansun", "html_url": "https://github.com/chengniansun", "followers_url": "https://api.github.com/users/chengniansun/followers", "following_url": "https://api.github.com/users/chengniansun/following{/other_user}", "gists_url": "https://api.github.com/users/chengniansun/gists{/gist_id}", "starred_url": "https://api.github.com/users/chengniansun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chengniansun/subscriptions", "organizations_url": "https://api.github.com/users/chengniansun/orgs", "repos_url": "https://api.github.com/users/chengniansun/repos", "events_url": "https://api.github.com/users/chengniansun/events{/privacy}", "received_events_url": "https://api.github.com/users/chengniansun/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 262252840, "node_id": "MDU6TGFiZWwyNjIyNTI4NDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-stable", "name": "regression-from-stable-to-stable", "color": "e4008a", "default": false, "description": "Performance or correctness regression from one stable version to another."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1282665911, "node_id": "MDU6TGFiZWwxMjgyNjY1OTEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-generics", "name": "A-const-generics", "color": "f7e101", "default": false, "description": "Area: const generics (parameters and arguments)"}, {"id": 2392976201, "node_id": "MDU6TGFiZWwyMzkyOTc2MjAx", "url": "https://api.github.com/repos/rust-lang/rust/labels/const-generics-fixed-by-min_const_generics", "name": "const-generics-fixed-by-min_const_generics", "color": "3f5dca", "default": false, "description": "A bug that has been fixed once `min_const_generics` is enabled."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-12-26T05:33:43Z", "updated_at": "2020-12-30T11:48:08Z", "closed_at": "2020-12-29T03:01:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\n```Rust\r\nstruct MyArray<const COUNT: usize>([u8; COUNT + 1]);\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.50.0-nightly (bb178237c 2020-12-25)\r\nbinary: rustc\r\ncommit-hash: bb178237c5539c75e1b85ab78a8ab902b1f333d5\r\ncommit-date: 2020-12-25\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.50.0-nightly\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nerror[E0658]: const generics are unstable\r\n --> perses_node_priority_with_dfs_delta_reduced_mutant.rs:1:22\r\n  |\r\n1 | struct MyArray<const COUNT: usize>([u8; COUNT + 1]);\r\n  |                      ^^^^^\r\n  |\r\n  = note: see issue #74878 <https://github.com/rust-lang/rust/issues/74878> for more information\r\n  = help: add `#![feature(min_const_generics)]` to the crate attributes to enable\r\n\r\nerror[E0601]: `main` function not found in crate `perses_node_priority_with_dfs_delta_reduced_mutant`\r\n --> perses_node_priority_with_dfs_delta_reduced_mutant.rs:1:1\r\n  |\r\n1 | struct MyArray<const COUNT: usize>([u8; COUNT + 1]);\r\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ consider adding a `main` function to `perses_node_priority_with_dfs_delta_reduced_mutant.rs`\r\n\r\nerror: internal compiler error: compiler/rustc_middle/src/ty/subst.rs:568:17: const parameter `COUNT/#0` (Const { ty: usize, val: Param(COUNT/#0) }/0) out of range when substituting substs=[]\r\n\r\nthread 'rustc' panicked at 'Box<Any>', /rustc/bb178237c5539c75e1b85ab78a8ab902b1f333d5/compiler/rustc_errors/src/lib.rs:904:9\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.50.0-nightly (bb178237c 2020-12-25) running on x86_64-unknown-linux-gnu\r\n\r\nquery stack during panic:\r\n#0 [eval_to_allocation_raw] const-evaluating + checking `MyArray::0::{constant#0}`\r\n#1 [eval_to_const_value_raw] simplifying constant for the type system `MyArray::0::{constant#0}`\r\nend of query stack\r\nerror: aborting due to 3 previous errors\r\n\r\nSome errors have detailed explanations: E0601, E0658.\r\nFor more information about an error, try `rustc --explain E0601`.\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nerror[E0658]: const generics are unstable\r\n --> perses_node_priority_with_dfs_delta_reduced_mutant.rs:1:22\r\n  |\r\n1 | struct MyArray<const COUNT: usize>([u8; COUNT + 1]);\r\n  |                      ^^^^^\r\n  |\r\n  = note: see issue #74878 <https://github.com/rust-lang/rust/issues/74878> for more information\r\n  = help: add `#![feature(min_const_generics)]` to the crate attributes to enable\r\n\r\nerror[E0601]: `main` function not found in crate `perses_node_priority_with_dfs_delta_reduced_mutant`\r\n --> perses_node_priority_with_dfs_delta_reduced_mutant.rs:1:1\r\n  |\r\n1 | struct MyArray<const COUNT: usize>([u8; COUNT + 1]);\r\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ consider adding a `main` function to `perses_node_priority_with_dfs_delta_reduced_mutant.rs`\r\n\r\nerror: internal compiler error: compiler/rustc_middle/src/ty/subst.rs:568:17: const parameter `COUNT/#0` (Const { ty: usize, val: Param(COUNT/#0) }/0) out of range when substituting substs=[]\r\n\r\nthread 'rustc' panicked at 'Box<Any>', /rustc/bb178237c5539c75e1b85ab78a8ab902b1f333d5/compiler/rustc_errors/src/lib.rs:904:9\r\nstack backtrace:\r\n   0: std::panicking::begin_panic\r\n   1: rustc_errors::HandlerInner::span_bug\r\n   2: rustc_errors::Handler::span_bug\r\n   3: rustc_middle::ty::context::tls::with_opt\r\n   4: rustc_middle::util::bug::opt_span_bug_fmt\r\n   5: rustc_middle::util::bug::span_bug_fmt\r\n   6: <rustc_middle::ty::subst::SubstFolder as rustc_middle::ty::fold::TypeFolder>::fold_const\r\n   7: rustc_middle::ty::normalize_erasing_regions::<impl rustc_middle::ty::context::TyCtxt>::subst_and_normalize_erasing_regions\r\n   8: rustc_mir::interpret::operand::<impl rustc_mir::interpret::eval_context::InterpCx<M>>::eval_operand\r\n   9: rustc_mir::interpret::step::<impl rustc_mir::interpret::eval_context::InterpCx<M>>::eval_rvalue_into_place\r\n  10: rustc_mir::interpret::step::<impl rustc_mir::interpret::eval_context::InterpCx<M>>::run\r\n  11: rustc_mir::const_eval::eval_queries::eval_to_allocation_raw_provider\r\n  12: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::eval_to_allocation_raw>::compute\r\n  13: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  14: rustc_data_structures::stack::ensure_sufficient_stack\r\n  15: rustc_query_system::query::plumbing::get_query_impl\r\n  16: rustc_mir::const_eval::eval_queries::eval_to_const_value_raw_provider\r\n  17: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::eval_to_const_value_raw>::compute\r\n  18: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  19: rustc_data_structures::stack::ensure_sufficient_stack\r\n  20: rustc_query_system::query::plumbing::get_query_impl\r\n  21: rustc_mir::const_eval::eval_queries::eval_to_const_value_raw_provider\r\n  22: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::eval_to_const_value_raw>::compute\r\n  23: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  24: rustc_data_structures::stack::ensure_sufficient_stack\r\n  25: rustc_query_system::query::plumbing::get_query_impl\r\n  26: rustc_middle::mir::interpret::queries::<impl rustc_middle::ty::context::TyCtxt>::const_eval_resolve\r\n  27: <rustc_trait_selection::traits::project::AssocTypeNormalizer as rustc_middle::ty::fold::TypeFolder>::fold_const\r\n  28: rustc_middle::ty::structural_impls::<impl rustc_middle::ty::fold::TypeFoldable for &rustc_middle::ty::TyS>::super_fold_with\r\n  29: <rustc_trait_selection::traits::project::AssocTypeNormalizer as rustc_middle::ty::fold::TypeFolder>::fold_ty\r\n  30: rustc_data_structures::stack::ensure_sufficient_stack\r\n  31: rustc_trait_selection::traits::project::normalize\r\n  32: <rustc_infer::infer::InferCtxt as rustc_trait_selection::infer::InferCtxtExt>::partially_normalize_associated_types_in\r\n  33: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold\r\n  34: <alloc::vec::Vec<T> as alloc::vec::SpecFromIter<T,I>>::from_iter\r\n  35: rustc_typeck::check::wfcheck::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::non_enum_variant\r\n  36: rustc_infer::infer::InferCtxtBuilder::enter\r\n  37: rustc_typeck::check::wfcheck::check_item_well_formed\r\n  38: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::check_item_well_formed>::compute\r\n  39: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  40: rustc_data_structures::stack::ensure_sufficient_stack\r\n  41: rustc_query_system::query::plumbing::get_query_impl\r\n  42: rustc_query_system::query::plumbing::ensure_query_impl\r\n  43: <rustc_typeck::check::wfcheck::CheckTypeWellFormedVisitor as rustc_hir::itemlikevisit::ParItemLikeVisitor>::visit_item\r\n  44: rustc_data_structures::sync::par_for_each_in\r\n  45: rustc_hir::hir::Crate::par_visit_all_item_likes\r\n  46: rustc_session::session::Session::track_errors\r\n  47: rustc_typeck::check_crate\r\n  48: rustc_interface::passes::analysis\r\n  49: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::analysis>::compute\r\n  50: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  51: rustc_data_structures::stack::ensure_sufficient_stack\r\n  52: rustc_query_system::query::plumbing::get_query_impl\r\n  53: rustc_interface::passes::QueryContext::enter\r\n  54: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n  55: rustc_span::with_source_map\r\n  56: rustc_interface::interface::create_compiler_and_run\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.50.0-nightly (bb178237c 2020-12-25) running on x86_64-unknown-linux-gnu\r\n\r\nquery stack during panic:\r\n#0 [eval_to_allocation_raw] const-evaluating + checking `MyArray::0::{constant#0}`\r\n#1 [eval_to_const_value_raw] simplifying constant for the type system `MyArray::0::{constant#0}`\r\n#2 [eval_to_const_value_raw] simplifying constant for the type system `MyArray::0::{constant#0}`\r\n#3 [check_item_well_formed] checking that `MyArray` is well-formed\r\n#4 [analysis] running analysis passes on this crate\r\nend of query stack\r\nerror: aborting due to 3 previous errors\r\n\r\nSome errors have detailed explanations: E0601, E0658.\r\nFor more information about an error, try `rustc --explain E0601`.\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/80375/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/80375/timeline", "performed_via_github_app": null, "state_reason": "completed"}