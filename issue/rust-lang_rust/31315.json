{"url": "https://api.github.com/repos/rust-lang/rust/issues/31315", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/31315/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/31315/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/31315/events", "html_url": "https://github.com/rust-lang/rust/issues/31315", "id": 130072121, "node_id": "MDU6SXNzdWUxMzAwNzIxMjE=", "number": 31315, "title": "ARM ABI Violation on extern function that returns u8", "user": {"login": "fpgaminer", "id": 1585817, "node_id": "MDQ6VXNlcjE1ODU4MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1585817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fpgaminer", "html_url": "https://github.com/fpgaminer", "followers_url": "https://api.github.com/users/fpgaminer/followers", "following_url": "https://api.github.com/users/fpgaminer/following{/other_user}", "gists_url": "https://api.github.com/users/fpgaminer/gists{/gist_id}", "starred_url": "https://api.github.com/users/fpgaminer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fpgaminer/subscriptions", "organizations_url": "https://api.github.com/users/fpgaminer/orgs", "repos_url": "https://api.github.com/users/fpgaminer/repos", "events_url": "https://api.github.com/users/fpgaminer/events{/privacy}", "received_events_url": "https://api.github.com/users/fpgaminer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234956, "node_id": "MDU6TGFiZWwyMzQ5NTY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-codegen", "name": "A-codegen", "color": "f7e101", "default": false, "description": "Area: Code generation"}, {"id": 55301954, "node_id": "MDU6TGFiZWw1NTMwMTk1NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-Arm", "name": "O-Arm", "color": "6e6ec0", "default": false, "description": "Target: 32-bit Arm processors (armv6, armv7, thumb...), including 64-bit Arm in AArch32 state"}], "state": "closed", "locked": false, "assignee": {"login": "Aatch", "id": 342416, "node_id": "MDQ6VXNlcjM0MjQxNg==", "avatar_url": "https://avatars.githubusercontent.com/u/342416?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aatch", "html_url": "https://github.com/Aatch", "followers_url": "https://api.github.com/users/Aatch/followers", "following_url": "https://api.github.com/users/Aatch/following{/other_user}", "gists_url": "https://api.github.com/users/Aatch/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aatch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aatch/subscriptions", "organizations_url": "https://api.github.com/users/Aatch/orgs", "repos_url": "https://api.github.com/users/Aatch/repos", "events_url": "https://api.github.com/users/Aatch/events{/privacy}", "received_events_url": "https://api.github.com/users/Aatch/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Aatch", "id": 342416, "node_id": "MDQ6VXNlcjM0MjQxNg==", "avatar_url": "https://avatars.githubusercontent.com/u/342416?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aatch", "html_url": "https://github.com/Aatch", "followers_url": "https://api.github.com/users/Aatch/followers", "following_url": "https://api.github.com/users/Aatch/following{/other_user}", "gists_url": "https://api.github.com/users/Aatch/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aatch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aatch/subscriptions", "organizations_url": "https://api.github.com/users/Aatch/orgs", "repos_url": "https://api.github.com/users/Aatch/repos", "events_url": "https://api.github.com/users/Aatch/events{/privacy}", "received_events_url": "https://api.github.com/users/Aatch/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2016-01-31T03:48:21Z", "updated_at": "2016-05-10T20:28:06Z", "closed_at": "2016-05-08T12:33:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Rust will violate the ARM ABI on functions like `pub extern \"C\" fn bsp_callback() -> u8` by not zero extending into `r0`.  This causes problems for C code that calls those functions.\n\nReduced reproduction code/project available at this gist:\nhttps://gist.github.com/fpgaminer/88e26978e023652fb1dd\n\nReplace \">\" in the file names with \"/\" to restore file structure.  Compile C library \"foo\" by running `make` in the `foo` directory.  Compile project using `cargo build --target=thumbv6m-none-eabi --release`.  Disassembly included in the Gist.\n\nIn the `bsp_callback` function's disassembly I expected to see this:\n\n```\nldrb r0, [...]    // Load our test byte\nstrb r0, [...]    // Store temporarily on the stack\n...   // other functionality\nldrb r0, [...]    // Load our test byte from the stack\npop {..., pc}   // Return\n```\n\nInstead, this happened:\n\n```\n080000d0 <bsp_callback>:\n 80000d0:   b5f0        push    {r4, r5, r6, r7, lr}\n 80000d2:   b08d        sub sp, #52 ; 0x34\n 80000d4:   481b        ldr r0, [pc, #108]  ; (8000144 <bsp_callback+0x74>)\n 80000d6:   7800        ldrb    r0, [r0, #0]\n 80000d8:   a904        add r1, sp, #16\n 80000da:   7008        strb    r0, [r1, #0]\n...   // other functionality\n 800013a:   9804        ldr r0, [sp, #16]\n 800013c:   b00d        add sp, #52 ; 0x34\n 800013e:   bdf0        pop {r4, r5, r6, r7, pc}\n```\n\nNotice the use of `ldr r0, [sp, #16]` before the return.  This results in the upper 3 bytes (on a 32-bit system) of r0 being loaded with garbage.  The ARM ABI states \"A Fundamental Data Type that is smaller than 4 bytes is zero- or sign-extended to a word and returned in r0.\"  So Rust is violating the ABI here.  The C code that calls `bsp_callback` depends on this ABI and will fail due to the garbage bytes.\n\nSorry for the large amount of code in the test project.  I encountered this bug in a much larger project, and quickly reduced it down to a minimal test case.  It's hard to get a test case that properly clobbers the bytes that `ldr` loads, plus this project targets ARM so that adds a whole mess of extra code.  `bsp_callback` here just does some raw pointer dereferencing to quickly get data that won't be optimized away.  `print!` and `semihosting` are also used to prevent optimizing away code, and to give the compiler a chance to pour garbage into the stack so the bug is obvious.\n\nThis reproduction case requires compiling in release mode, but the project where I encounter the bug was in debug mode.\n## Meta\n\nrustc 1.8.0-nightly (38e23e8f7 2016-01-27)\nbinary: rustc\ncommit-hash: 38e23e8f7b97f7add3b9b868766251b0aa060a14\ncommit-date: 2016-01-27\nhost: x86_64-unknown-linux-gnu\nrelease: 1.8.0-nightly\n\narm-none-eabi-gcc (GNU Tools for ARM Embedded Processors) 5.2.1 20151202 (release) [ARM/embedded-5-branch revision 231848]\n\nARMv6, Cortex-M0 (STM32F072)\n## Too Long; Didn't Reproduce\n\nFor the lazy: Go to the Gist (https://gist.github.com/fpgaminer/88e26978e023652fb1dd), check the disassembly for `bsp_callback` which was declared `pub extern \"C\" fn bsp_callback() -> u8`.  Notice that the assembly uses `strb` to save r0, and then later uses `ldr` to load it right before returning.  This leaves r0 with garbage in its upper bytes.  The ARM ABI says the upper bytes should be 0 in this case.\n", "closed_by": {"login": "sanxiyn", "id": 45249, "node_id": "MDQ6VXNlcjQ1MjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/45249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanxiyn", "html_url": "https://github.com/sanxiyn", "followers_url": "https://api.github.com/users/sanxiyn/followers", "following_url": "https://api.github.com/users/sanxiyn/following{/other_user}", "gists_url": "https://api.github.com/users/sanxiyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanxiyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanxiyn/subscriptions", "organizations_url": "https://api.github.com/users/sanxiyn/orgs", "repos_url": "https://api.github.com/users/sanxiyn/repos", "events_url": "https://api.github.com/users/sanxiyn/events{/privacy}", "received_events_url": "https://api.github.com/users/sanxiyn/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/31315/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/31315/timeline", "performed_via_github_app": null, "state_reason": "completed"}