{"url": "https://api.github.com/repos/rust-lang/rust/issues/46216", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/46216/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/46216/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/46216/events", "html_url": "https://github.com/rust-lang/rust/issues/46216", "id": 276456812, "node_id": "MDU6SXNzdWUyNzY0NTY4MTI=", "number": 46216, "title": "[confusing error message] iterate over str", "user": {"login": "gnzlbg", "id": 904614, "node_id": "MDQ6VXNlcjkwNDYxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/904614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnzlbg", "html_url": "https://github.com/gnzlbg", "followers_url": "https://api.github.com/users/gnzlbg/followers", "following_url": "https://api.github.com/users/gnzlbg/following{/other_user}", "gists_url": "https://api.github.com/users/gnzlbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnzlbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnzlbg/subscriptions", "organizations_url": "https://api.github.com/users/gnzlbg/orgs", "repos_url": "https://api.github.com/users/gnzlbg/repos", "events_url": "https://api.github.com/users/gnzlbg/events{/privacy}", "received_events_url": "https://api.github.com/users/gnzlbg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 239393, "node_id": "MDU6TGFiZWwyMzkzOTM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-resolve", "name": "A-resolve", "color": "f7e101", "default": false, "description": "Area: Path resolution"}, {"id": 693664741, "node_id": "MDU6TGFiZWw2OTM2NjQ3NDE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-mentor", "name": "E-needs-mentor", "color": "02e10c", "default": false, "description": "Call for participation: This issue is in need of a mentor."}, {"id": 693665463, "node_id": "MDU6TGFiZWw2OTM2NjU0NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/WG-diagnostics", "name": "WG-diagnostics", "color": "c2e0c6", "default": false, "description": "Working group: diagnostics"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-11-23T19:03:06Z", "updated_at": "2018-02-13T01:29:00Z", "closed_at": "2018-02-07T20:50:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Given:\r\n\r\n```rust\r\nfn main() {\r\n    for c in \"foobarbaz\" {\r\n        println!(\"{}\", c);\r\n    }\r\n}\r\n```\r\n\r\nRust produces ([playground](https://play.rust-lang.org/?gist=832480c20a7bde6e5371b07610e22358&version=stable)):\r\n\r\n```shell\r\nerror[E0277]: the trait bound `&str: std::iter::Iterator` is not satisfied\r\n --> src/main.rs:2:5\r\n  |\r\n2 | /     for c in \"foobarbaz\" {\r\n3 | |         println!(\"{}\", c);\r\n4 | |     }\r\n  | |_____^ `&str` is not an iterator; maybe try calling `.iter()` or a similar method\r\n  |\r\n  = help: the trait `std::iter::Iterator` is not implemented for `&str`\r\n  = note: required by `std::iter::IntoIterator::into_iter`\r\n```\r\n\r\nThe suggestion says `iter` or a similar method, but `&str` doesn't have an `.iter()` method (that's why it says \"or a similar method\").\r\n\r\nI don't think this is good enough.\r\n\r\nIt should scan the methods of `str` that return something that implements `Iterator` (or can be auto-deref to something that implements it) and suggest those. In this case, `chars()`, `bytes()`,... The error message should look more like this:\r\n\r\n```shell\r\nerror[E0277]: the trait bound `&str: std::iter::Iterator` is not satisfied\r\n --> src/main.rs:2:5\r\n  |\r\n2 | /     for c in \"foobarbaz\" {\r\n3 | |         println!(\"{}\", c);\r\n4 | |     }\r\n  | |_____^ `&str` is not an iterator\r\n  |\r\n  = help: the trait `std::iter::Iterator` is not implemented for `&str`\r\n  = note: required by `std::iter::IntoIterator::into_iter`\r\n\r\nThe following methods of `&str` return an `Iterator`:\r\n  - `chars`\r\n  - `bytes`\r\n  - ... \r\n```", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/46216/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/46216/timeline", "performed_via_github_app": null, "state_reason": "completed"}