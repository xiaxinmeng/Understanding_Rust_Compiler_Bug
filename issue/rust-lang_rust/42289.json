{"url": "https://api.github.com/repos/rust-lang/rust/issues/42289", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/42289/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/42289/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/42289/events", "html_url": "https://github.com/rust-lang/rust/issues/42289", "id": 231895909, "node_id": "MDU6SXNzdWUyMzE4OTU5MDk=", "number": 42289, "title": "Broken MIR: Nested Match With Const Byte Slice", "user": {"login": "GGist", "id": 5248583, "node_id": "MDQ6VXNlcjUyNDg1ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/5248583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GGist", "html_url": "https://github.com/GGist", "followers_url": "https://api.github.com/users/GGist/followers", "following_url": "https://api.github.com/users/GGist/following{/other_user}", "gists_url": "https://api.github.com/users/GGist/gists{/gist_id}", "starred_url": "https://api.github.com/users/GGist/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GGist/subscriptions", "organizations_url": "https://api.github.com/users/GGist/orgs", "repos_url": "https://api.github.com/users/GGist/repos", "events_url": "https://api.github.com/users/GGist/events{/privacy}", "received_events_url": "https://api.github.com/users/GGist/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 60344715, "node_id": "MDU6TGFiZWw2MDM0NDcxNQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-medium", "name": "P-medium", "color": "eb6420", "default": false, "description": "Medium priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 256133398, "node_id": "MDU6TGFiZWwyNTYxMzMzOTg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-mir", "name": "A-mir", "color": "f7e101", "default": false, "description": "Area: Mid-level IR (MIR) - https://blog.rust-lang.org/2016/04/19/MIR.html"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2017-05-28T21:28:04Z", "updated_at": "2018-04-05T14:43:19Z", "closed_at": "2018-04-05T14:43:19Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I tried this code:\r\n\r\n```\r\nconst MY_PROTOCOL: &'static [u8] = b\"MyProtocol\";\r\n\r\n#[derive(Debug)]\r\nenum Protocol {\r\n    MyProtocol,\r\n    Custom(Vec<u8>)\r\n}\r\n\r\nfn main() {\r\n    let protocol = b\"MyProtocol\";\r\n    \r\n    println!(\"{:?}\", parse_real_protocol(&protocol[..]));\r\n}\r\n\r\nfn parse_real_protocol(bytes: &[u8]) -> Option<Protocol> {\r\n    match {\r\n        match true {\r\n            true  => Some(bytes),\r\n            false => None\r\n        }\r\n    } {\r\n        Some(MY_PROTOCOL) => Some(Protocol::MyProtocol),\r\n        Some(custom)      => Some(Protocol::Custom(custom.to_vec())),\r\n        None              => None\r\n    }\r\n}\r\n```\r\n\r\nI expected to see this happen: compiles fine\r\n\r\nInstead, this happened:\r\n\r\n```\r\n$ cargo run\r\n   Compiling testing v0.1.0 (file:///C:/users/amill/GitHub/testing)\r\nerror: internal compiler error: broken MIR (((_3 as Some).0: &'static [u8; 10])): bad field access (&[u8]: &'static [u8; 10]): Sorts(ExpectedFound { expected: [u8; 10], found: [u8] })\r\n  --> src\\main.rs:22:14\r\n   |\r\n22 |         Some(MY_PROTOCOL) => Some(Protocol::MyProtocol),\r\n   |              ^^^^^^^^^^^\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nthread 'rustc' panicked at 'Box<Any>', src\\librustc_errors\\lib.rs:421\r\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\r\n```\r\n\r\n## Meta\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.19.0-nightly (28fd1e519 2017-05-27)\r\nbinary: rustc\r\ncommit-hash: 28fd1e519a3807c632d58d01e73b4948000639ba\r\ncommit-date: 2017-05-27\r\nhost: x86_64-pc-windows-msvc\r\nrelease: 1.19.0-nightly\r\nLLVM version: 4.0\r\n```\r\n\r\nBacktrace:\r\n```\r\nthread 'rustc' panicked at 'Box<Any>', src\\librustc_errors\\lib.rs:421\r\nstack backtrace:\r\n   0: <std::time::SystemTimeError as core::fmt::Display>::fmt\r\n   1: std::panicking::Location::line\r\n   2: std::panicking::Location::line\r\n   3: std::panicking::rust_panic_with_hook\r\n   4: <unknown>\r\n   5: <unknown>\r\n   6: <rustc_mir::transform::type_check::TypeVerifier<'a, 'b, 'gcx, 'tcx> as rustc::mir::visit::Visitor<'tcx>>::visit_mir\r\n   7: <rustc_mir::transform::type_check::TypeVerifier<'a, 'b, 'gcx, 'tcx> as rustc::mir::visit::Visitor<'tcx>>::visit_mir\r\n   8: <rustc_mir::transform::type_check::TypeVerifier<'a, 'b, 'gcx, 'tcx> as rustc::mir::visit::Visitor<'tcx>>::visit_rvalue\r\n   9: <rustc_mir::transform::type_check::TypeVerifier<'a, 'b, 'gcx, 'tcx> as rustc::mir::visit::Visitor<'tcx>>::visit_mir\r\n  10: <rustc_mir::transform::type_check::TypeckMir as rustc::mir::transform::MirPass>::run_pass\r\n  11: <rustc_mir::shim::DropShimElaborator<'a, 'tcx> as rustc_mir::util::elaborate_drops::DropElaborator<'a, 'tcx>>::get_drop_flag\r\n  12: <rustc_mir::shim::DropShimElaborator<'a, 'tcx> as rustc_mir::util::elaborate_drops::DropElaborator<'a, 'tcx>>::get_drop_flag\r\n  13: rustc::ty::maps::<impl rustc::ty::maps::queries::mir_const<'tcx>>::try_get\r\n  14: rustc::ty::maps::TyCtxtAt::mir_const\r\n  15: rustc::ty::maps::<impl rustc::ty::context::TyCtxt<'a, 'tcx, 'lcx>>::mir_const\r\n  16: <rustc_mir::shim::DropShimElaborator<'a, 'tcx> as rustc_mir::util::elaborate_drops::DropElaborator<'a, 'tcx>>::get_drop_flag\r\n  17: rustc::ty::maps::<impl rustc::ty::maps::queries::mir_validated<'tcx>>::try_get\r\n  18: rustc::ty::maps::TyCtxtAt::mir_validated\r\n  19: rustc::ty::maps::<impl rustc::ty::context::TyCtxt<'a, 'tcx, 'lcx>>::mir_validated\r\n  20: rustc_borrowck::borrowck::provide\r\n  21: rustc::ty::maps::<impl rustc::ty::maps::queries::borrowck<'tcx>>::try_get\r\n  22: rustc::ty::maps::<impl rustc::ty::context::TyCtxt<'a, 'tcx, 'lcx>>::borrowck\r\n  23: rustc_borrowck::borrowck::check_crate\r\n  24: rustc_driver::driver::count_nodes\r\n  25: rustc_driver::driver::count_nodes\r\n  26: rustc_driver::driver::compile_input\r\n  27: rustc_driver::run_compiler\r\n  28: <unknown>\r\n  29: _rust_maybe_catch_panic\r\n  30: <rustc_driver::derive_registrar::Finder as rustc::hir::itemlikevisit::ItemLikeVisitor<'v>>::visit_trait_item\r\n  31: std::sys::imp::thread::Thread::new\r\n  32: BaseThreadInitThunk\r\n\r\nerror: Could not compile `testing`.\r\n```\r\n\r\n---\r\n\r\nIndeed, subbing out the constant in the match for just ```b\"MyProtocol\"``` works as expected. Note that the above code is a bit nonsensical, but it was simplified from:\r\n```\r\n#[macro_use]\r\nextern crate nom;\r\n\r\nuse nom::{be_u8, rest, IResult};\r\n\r\nconst MY_PROTOCOL: &'static [u8] = b\"MyProtocol\";\r\n\r\n#[derive(Debug)]\r\nenum Protocol {\r\n    MyProtocol,\r\n    Custom(Vec<u8>)\r\n}\r\n\r\nfn main() {\r\n    let mut protocol = b\"MyProtocol\";\r\n    \r\n    println!(\"{:?}\", parse_real_protocol(&protocol[..]));\r\n}\r\n\r\nfn parse_real_protocol(bytes: &[u8]) -> IResult<&[u8], Protocol> {\r\n    switch!(bytes, rest,\r\n        MY_PROTOCOL => value!(Protocol::MyProtocol) |\r\n        custom      => value!(Protocol::Custom(custom.to_vec()))\r\n    )\r\n}\r\n```\r\n\r\nWhere I ran ```cargo rustc -- -Z unstable-options --pretty=expanded``` to come up with a simplified version.", "closed_by": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/42289/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/42289/timeline", "performed_via_github_app": null, "state_reason": "completed"}