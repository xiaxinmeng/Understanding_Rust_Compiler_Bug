{"url": "https://api.github.com/repos/rust-lang/rust/issues/31025", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/31025/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/31025/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/31025/events", "html_url": "https://github.com/rust-lang/rust/issues/31025", "id": 127512706, "node_id": "MDU6SXNzdWUxMjc1MTI3MDY=", "number": 31025, "title": "nightly `rustc -Z ast-json` generates malformed json", "user": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 147085028, "node_id": "MDU6TGFiZWwxNDcwODUwMjg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-nightly", "name": "regression-from-stable-to-nightly", "color": "e4008a", "default": false, "description": "Performance or correctness regression from stable to nightly."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-01-19T18:50:46Z", "updated_at": "2016-01-21T20:51:42Z", "closed_at": "2016-01-21T20:51:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In #30565, @michaelwoerister changed the encoding of `syntax::codemap::Span` from serializing the value as a single `u64` into serializing two sequential `u32` values. Unfortunately this violates the serialization protocol, and causes a span like `mk_sp(0, 10)` to be serialized as `010`. Here's the current implementation:\n\n``` rust\nimpl Encodable for Span {\n    fn encode<S: Encoder>(&self, s: &mut S) -> Result<(), S::Error> {\n        try!(s.emit_u32(self.lo.0));\n        s.emit_u32(self.hi.0)\n    }\n}\n\nimpl Decodable for Span {\n    fn decode<D: Decoder>(d: &mut D) -> Result<Span, D::Error> {\n        let lo = BytePos(try! { d.read_u32() });\n        let hi = BytePos(try! { d.read_u32() });\n        Ok(mk_sp(lo, hi))\n    }\n}\n```\n\nSemantically speaking these spans should be serialized as a tuple, which would properly delimit the two values, but since that'd add a bunch of tagging overhead to the output, it'd probably be more efficient to just restore the old encoding:\n\n``` rust\nimpl Encodable for Span {\n    fn encode<S: Encoder>(&self, s: &mut S) -> Result<(), S::Error> {\n        // Encode spans as a single u64 in order to cut down on tagging overhead\n        // added by the RBML metadata encoding. The should be solved differently\n        // altogether some time (FIXME #21482)\n        s.emit_u64( (self.lo.0 as u64) | ((self.hi.0 as u64) << 32) )\n    }\n}\n\nimpl Decodable for Span {\n    fn decode<D: Decoder>(d: &mut D) -> Result<Span, D::Error> {\n        let lo_hi: u64 = try! { d.read_u64() };\n        let lo = BytePos(lo_hi as u32);\n        let hi = BytePos((lo_hi >> 32) as u32);\n        Ok(mk_sp(lo, hi))\n    }\n}\n```\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/31025/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/31025/timeline", "performed_via_github_app": null, "state_reason": "completed"}