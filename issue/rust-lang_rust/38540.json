{"url": "https://api.github.com/repos/rust-lang/rust/issues/38540", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/38540/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/38540/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/38540/events", "html_url": "https://github.com/rust-lang/rust/issues/38540", "id": 197142666, "node_id": "MDU6SXNzdWUxOTcxNDI2NjY=", "number": 38540, "title": "default_type_parameter_fallback error message is overly verbose", "user": {"login": "spinda", "id": 7958605, "node_id": "MDQ6VXNlcjc5NTg2MDU=", "avatar_url": "https://avatars.githubusercontent.com/u/7958605?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spinda", "html_url": "https://github.com/spinda", "followers_url": "https://api.github.com/users/spinda/followers", "following_url": "https://api.github.com/users/spinda/following{/other_user}", "gists_url": "https://api.github.com/users/spinda/gists{/gist_id}", "starred_url": "https://api.github.com/users/spinda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spinda/subscriptions", "organizations_url": "https://api.github.com/users/spinda/orgs", "repos_url": "https://api.github.com/users/spinda/repos", "events_url": "https://api.github.com/users/spinda/events{/privacy}", "received_events_url": "https://api.github.com/users/spinda/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-12-22T10:26:02Z", "updated_at": "2020-03-15T15:12:25Z", "closed_at": "2020-03-15T15:12:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "With `#![feature(default_type_parameter_fallback)]` enabled, I get the following error message:\r\n\r\n```\r\nerror[E0308]: mismatched types\r\n   --> tests/test.rs:129:42\r\n    |\r\n129 |                 knot.tie(knot.wrap0(knot.tie(Timeout::new(Duration::new(5, 0), &handle).unwrap())))\r\n    |                                          ^^^ conflicting type parameter defaults `_` and `_`\r\n    |\r\n    = note: expected type `()`\r\n    = note:    found type `i32`\r\nnote: conflicting type parameter defaults `_` and `_`\r\n   --> tests/test.rs:129:42\r\n    |\r\n129 |                 knot.tie(knot.wrap0(knot.tie(Timeout::new(Duration::new(5, 0), &handle).unwrap())))\r\n    |                                          ^^^\r\nnote: a default was defined here...\r\n   --> tests/test.rs:33:9\r\n    |\r\n33  |           impl<U, V = U> Fix<V> for U {\r\n    |  _________^ starting here...\r\n34  | |             default fn fix(self) -> V {\r\n35  | |                 unsafe {\r\n36  | |                     let mut x = ::std::mem::uninitialized();\r\n37  | |                     ::std::mem::replace(::std::mem::transmute(&mut x), self);\r\n38  | |                     x\r\n39  | |                 }\r\n40  | |             }\r\n41  | |         }\r\n    | |_________^ ...ending here\r\nnote: ...that was applied to an unconstrained type variable here\r\n   --> tests/test.rs:129:42\r\n    |\r\n129 |                 knot.tie(knot.wrap0(knot.tie(Timeout::new(Duration::new(5, 0), &handle).unwrap())))\r\n    |                                          ^^^\r\nnote: a second default was defined here...\r\n   --> tests/test.rs:33:9\r\n    |\r\n33  |           impl<U, V = U> Fix<V> for U {\r\n    |  _________^ starting here...\r\n34  | |             default fn fix(self) -> V {\r\n35  | |                 unsafe {\r\n36  | |                     let mut x = ::std::mem::uninitialized();\r\n37  | |                     ::std::mem::replace(::std::mem::transmute(&mut x), self);\r\n38  | |                     x\r\n39  | |                 }\r\n40  | |             }\r\n41  | |         }\r\n    | |_________^ ...ending here\r\nnote: ...that also applies to the same type variable here\r\n   --> tests/test.rs:131:42\r\n    |\r\n131 |                 knot.tie(knot.wrap1(knot.tie(Ok(3))))\r\n    |                                          ^^^\r\n```\r\n\r\nNotes 1 and 3 just point to the same code as the error. Notes 2 and 4 also print out duplicate code. Is it necessary to print the entire impl, or could the message just point to the definition of the default?\r\n\r\nI've also never seen one of these error messages with any types but `_` in the `note: conflicting type parameter defaults` line. What is that line trying to say?", "closed_by": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/38540/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/38540/timeline", "performed_via_github_app": null, "state_reason": "completed"}