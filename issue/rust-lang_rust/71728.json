{"url": "https://api.github.com/repos/rust-lang/rust/issues/71728", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/71728/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/71728/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/71728/events", "html_url": "https://github.com/rust-lang/rust/issues/71728", "id": 610497159, "node_id": "MDU6SXNzdWU2MTA0OTcxNTk=", "number": 71728, "title": "Implement `signum()` on unsigned integers", "user": {"login": "jhpratt", "id": 3161395, "node_id": "MDQ6VXNlcjMxNjEzOTU=", "avatar_url": "https://avatars.githubusercontent.com/u/3161395?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhpratt", "html_url": "https://github.com/jhpratt", "followers_url": "https://api.github.com/users/jhpratt/followers", "following_url": "https://api.github.com/users/jhpratt/following{/other_user}", "gists_url": "https://api.github.com/users/jhpratt/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhpratt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhpratt/subscriptions", "organizations_url": "https://api.github.com/users/jhpratt/orgs", "repos_url": "https://api.github.com/users/jhpratt/repos", "events_url": "https://api.github.com/users/jhpratt/events{/privacy}", "received_events_url": "https://api.github.com/users/jhpratt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-01T01:23:56Z", "updated_at": "2020-05-02T07:37:30Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "This can be quite useful when writing macros that are generic over any integer.\r\n\r\nFor example, I just tried writing this code (bar is any of i8, i16, i32, u8, u16, u32 via a macro)\r\n\r\n```rust\r\nmatch (foo.signum(), bar.signum()) {\r\n    (1, 1) | (-1, -1) => max,\r\n    (-1, 1) | (1, -1) => min,\r\n    _ => zero,\r\n}\r\n```\r\n\r\nBut because `u*::signum` isn't implemented, I had to resort to something far more verbose:\r\n\r\n```rust\r\nif foo > 0 {\r\n    if bar > 0 {\r\n        max\r\n    }\r\n    else if bar < 0 {\r\n        min\r\n    }\r\n    else {\r\n        zero\r\n    }\r\n} else if foo < 0 {\r\n    if bar > 0 {\r\n        min\r\n    }\r\n    else if bar < 0 {\r\n        max\r\n    }\r\n    else {\r\n        zero\r\n    }\r\n} else {\r\n    zero\r\n}\r\n```\r\n\r\nThis can be simplified a bit, but at the expense of performing the operations more than once. This might be optimized away, though.\r\n\r\n```rust\r\nif (foo > 0 && bar > 0) || (foo < 0 && bar < 0) {\r\n    max\r\n} else if (foo > 0 && bar < 0) || (foo < 0 && bar > 0) {\r\n    min\r\n} else {\r\n    zero\r\n}\r\n```\r\n\r\nTo allow for the first example to compile (along with the rest of the code, of course), I'd think having `u32::signum` return `i32` would make sense, despite returning `-1` being impossible. I definitely think using `signum` makes things clearer and more readable.\r\n\r\nIf this is something that is desired, I can submit a PR.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/71728/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/71728/timeline", "performed_via_github_app": null, "state_reason": null}