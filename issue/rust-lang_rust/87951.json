{"url": "https://api.github.com/repos/rust-lang/rust/issues/87951", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/87951/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/87951/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/87951/events", "html_url": "https://github.com/rust-lang/rust/issues/87951", "id": 968368742, "node_id": "MDU6SXNzdWU5NjgzNjg3NDI=", "number": 87951, "title": "`rustdoc --output-format json` assert while documenting the `syn` crate", "user": {"login": "Urgau", "id": 3616612, "node_id": "MDQ6VXNlcjM2MTY2MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3616612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Urgau", "html_url": "https://github.com/Urgau", "followers_url": "https://api.github.com/users/Urgau/followers", "following_url": "https://api.github.com/users/Urgau/following{/other_user}", "gists_url": "https://api.github.com/users/Urgau/gists{/gist_id}", "starred_url": "https://api.github.com/users/Urgau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Urgau/subscriptions", "organizations_url": "https://api.github.com/users/Urgau/orgs", "repos_url": "https://api.github.com/users/Urgau/repos", "events_url": "https://api.github.com/users/Urgau/events{/privacy}", "received_events_url": "https://api.github.com/users/Urgau/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 203738, "node_id": "MDU6TGFiZWwyMDM3Mzg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-rustdoc", "name": "T-rustdoc", "color": "bfd4f2", "default": false, "description": "Relevant to the rustdoc team, which will review and decide on the PR/issue."}, {"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 2682491374, "node_id": "MDU6TGFiZWwyNjgyNDkxMzc0", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-rustdoc-json", "name": "A-rustdoc-json", "color": "f7e101", "default": false, "description": "Area: Rustdoc JSON backend"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-08-12T08:43:51Z", "updated_at": "2021-08-15T23:48:03Z", "closed_at": "2021-08-15T23:48:02Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Code\r\n\r\nFrom the `syn` [source code](https://github.com/dtolnay/syn/blob/5f649d407afad37f319ad09fe725bf73d68532ca/src/spanned.rs#L102-L114):\r\n\r\n```Rust\r\npub trait Spanned {\r\n    /// Returns a `Span` covering the complete contents of this syntax tree\r\n    /// node, or [`Span::call_site()`] if this node is empty.\r\n    ///\r\n    /// [`Span::call_site()`]: proc_macro2::Span::call_site\r\n    fn span(&self) -> Span;\r\n}\r\n\r\nimpl<T: ?Sized + ToTokens> Spanned for T {\r\n    fn span(&self) -> Span {\r\n        self.__span()\r\n    }\r\n}\r\n```\r\n\r\n### Meta\r\n\r\n`rustc +nightly --version`\r\n```\r\nrustc 1.56.0-nightly (ccffcafd5 2021-08-11)\r\n```\r\n\r\n`rustdoc +nightly --version`\r\n```\r\nrustdoc 1.56.0-nightly (ccffcafd5 2021-08-11)\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nthread 'rustc' panicked at 'assertion failed: `(left == right)`\r\n  left: `Item { id: Id(\"0:3511\"), crate_id: 0, name: Some(\"span\"), span: Some(Span { filename: \"REDACTED/.cargo/registry/src/github.com-1285ae84e5963aae/syn-1.0.74/src/spanned.rs\", begin: (111, 4), end: (113, 5) }), visibility: Public, docs: None, links: {}, attrs: [], deprecation: None, inner: Method(Method { decl: FnDecl { inputs: [(\"\", BorrowedRef { lifetime: None, mutable: false, type_: Generic(\"Self\") })], output: Some(ResolvedPath { name: \"Span\", id: Id(\"20:909\"), args: Some(AngleBracketed { args: [], bindings: [] }), param_names: [] }), c_variadic: false }, generics: Generics { params: [], where_predicates: [] }, header: {}, abi: \"\\\"Rust\\\"\", has_body: true }) }`,\r\n right: `Item { id: Id(\"0:3511\"), crate_id: 0, name: Some(\"span\"), span: Some(Span { filename: \"REDACTED/.cargo/registry/src/github.com-1285ae84e5963aae/syn-1.0.74/src/spanned.rs\", begin: (111, 4), end: (113, 5) }), visibility: Default, docs: None, links: {}, attrs: [], deprecation: None, inner: Method(Method { decl: FnDecl { inputs: [(\"self\", BorrowedRef { lifetime: None, mutable: false, type_: Generic(\"Self\") })], output: Some(ResolvedPath { name: \"Span\", id: Id(\"20:909\"), args: Some(AngleBracketed { args: [], bindings: [] }), param_names: [] }), c_variadic: false }, generics: Generics { params: [], where_predicates: [] }, header: {}, abi: \"\\\"Rust\\\"\", has_body: true }) }`', src/librustdoc/json/mod.rs:179:17\r\n```\r\n\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nstack backtrace:\r\n   0: rust_begin_unwind\r\n             at /rustc/ccffcafd55e58f769d4b0efc0064bf65e76998e4/library/std/src/panicking.rs:517:5\r\n   1: core::panicking::panic_fmt\r\n             at /rustc/ccffcafd55e58f769d4b0efc0064bf65e76998e4/library/core/src/panicking.rs:93:14\r\n   2: core::panicking::assert_failed_inner\r\n   3: core::panicking::assert_failed\r\n   4: <rustdoc::json::JsonRenderer as rustdoc::formats::renderer::FormatRenderer>::item\r\n   5: <rustdoc::json::JsonRenderer as rustdoc::formats::renderer::FormatRenderer>::item\r\n   6: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold\r\n   7: <rustdoc::json::JsonRenderer as rustdoc::formats::renderer::FormatRenderer>::item\r\n   8: <rustdoc::json::JsonRenderer as rustdoc::formats::renderer::FormatRenderer>::item\r\n   9: <rustdoc::json::JsonRenderer as rustdoc::formats::renderer::FormatRenderer>::item\r\n  10: rustdoc::formats::renderer::run_format\r\n  11: rustdoc::run_renderer\r\n  12: rustc_interface::interface::create_compiler_and_run\r\n  13: rustdoc::main_options\r\n  14: scoped_tls::ScopedKey<T>::set\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/87951/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/87951/timeline", "performed_via_github_app": null, "state_reason": "completed"}