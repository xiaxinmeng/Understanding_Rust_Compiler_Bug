{"url": "https://api.github.com/repos/rust-lang/rust/issues/68049", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/68049/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/68049/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/68049/events", "html_url": "https://github.com/rust-lang/rust/issues/68049", "id": 547364028, "node_id": "MDU6SXNzdWU1NDczNjQwMjg=", "number": 68049, "title": "Invalid suggestion to change `&self` to `&mut self` in trait implementation", "user": {"login": "phil-opp", "id": 1131315, "node_id": "MDQ6VXNlcjExMzEzMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1131315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phil-opp", "html_url": "https://github.com/phil-opp", "followers_url": "https://api.github.com/users/phil-opp/followers", "following_url": "https://api.github.com/users/phil-opp/following{/other_user}", "gists_url": "https://api.github.com/users/phil-opp/gists{/gist_id}", "starred_url": "https://api.github.com/users/phil-opp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phil-opp/subscriptions", "organizations_url": "https://api.github.com/users/phil-opp/orgs", "repos_url": "https://api.github.com/users/phil-opp/repos", "events_url": "https://api.github.com/users/phil-opp/events{/privacy}", "received_events_url": "https://api.github.com/users/phil-opp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1183099971, "node_id": "MDU6TGFiZWwxMTgzMDk5OTcx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-suggestion-diagnostics", "name": "A-suggestion-diagnostics", "color": "f7e101", "default": false, "description": "Area: suggestions generated by the compiler applied by cargo fix"}, {"id": 1596299768, "node_id": "MDU6TGFiZWwxNTk2Mjk5NzY4", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-invalid-suggestion", "name": "D-invalid-suggestion", "color": "c9f7a3", "default": false, "description": "A structured suggestion resulting in incorrect code"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-01-09T09:45:52Z", "updated_at": "2021-05-11T10:25:16Z", "closed_at": "2021-05-11T10:25:15Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Summary**: The compiler suggests changing `&self` to `&mut self` when trying to modify `self` in a method. For trait implemantions this does not work because it would require changing the trait definition too (which is often not possible).\r\n\r\n**Example**: \r\n\r\nI was trying to implement the `GlobalAllocator` trait from the standard library for a custom type:\r\n\r\n```rust\r\nuse std::alloc::{GlobalAlloc, Layout};\r\n\r\nstruct Test(u32);\r\n\r\nunsafe impl GlobalAlloc for Test {\r\n    unsafe fn alloc(&self, _layout: Layout) -> *mut u8 {\r\n        self.0 += 1;\r\n        0 as *mut u8\r\n    }\r\n\r\n    unsafe fn dealloc(&self, _ptr: *mut u8, _layout: Layout) {\r\n        unimplemented!();\r\n    }\r\n}\r\n```\r\n\r\n([playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=519036c88db0aeb46748aa4640d2453a))\r\n\r\nThis of course doesn't work since you can't modify data behind a `&self` reference:\r\n\r\n```\r\nerror[E0594]: cannot assign to `self.0` which is behind a `&` reference\r\n --> src/main.rs:7:9\r\n  |\r\n6 |     unsafe fn alloc(&self, _layout: Layout) -> *mut u8 {\r\n  |                     ----- help: consider changing this to be a mutable reference: `&mut self`\r\n7 |         self.0 += 1;\r\n  |         ^^^^^^^^^^^ `self` is a `&` reference, so the data it refers to cannot be written\r\n```\r\n\r\nHowever, I noticed that the _help_ message suggests changing the `&self` to `&mut self`, which is incorrect since that would require changing the trait definition in the standard library too.\r\n\r\n**Suggestion:** I don't know if this is possible, but maybe this help message should only be shown for \"normal\" methods and hidden when implementing trait methods?", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/68049/reactions", "total_count": 12, "+1": 12, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/68049/timeline", "performed_via_github_app": null, "state_reason": "completed"}