{"url": "https://api.github.com/repos/rust-lang/rust/issues/93890", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/93890/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/93890/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/93890/events", "html_url": "https://github.com/rust-lang/rust/issues/93890", "id": 1131620433, "node_id": "I_kwDOAAsO6M5DcyhR", "number": 93890, "title": "Suggest replacing Map with Set if it fixes errors", "user": {"login": "clarfonthey", "id": 15850505, "node_id": "MDQ6VXNlcjE1ODUwNTA1", "avatar_url": "https://avatars.githubusercontent.com/u/15850505?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clarfonthey", "html_url": "https://github.com/clarfonthey", "followers_url": "https://api.github.com/users/clarfonthey/followers", "following_url": "https://api.github.com/users/clarfonthey/following{/other_user}", "gists_url": "https://api.github.com/users/clarfonthey/gists{/gist_id}", "starred_url": "https://api.github.com/users/clarfonthey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clarfonthey/subscriptions", "organizations_url": "https://api.github.com/users/clarfonthey/orgs", "repos_url": "https://api.github.com/users/clarfonthey/repos", "events_url": "https://api.github.com/users/clarfonthey/events{/privacy}", "received_events_url": "https://api.github.com/users/clarfonthey/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-02-11T03:41:10Z", "updated_at": "2022-02-11T19:05:16Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n\r\nIf you cannot produce a minimal reproduction case (something that would work in\r\nisolation), please provide the steps or even link to a repository that causes\r\nthe problematic output to occur.\r\n-->\r\n\r\nThe types `HashMap` and `HashSet` (and `BTreeMap` and `BTreeSet`) come up often enough that a user may confuse them. We could probably leverage this by marking them as \"confusable types\" and offer to swap one with the other if it helps fix errors.\r\n\r\nFor example, given the following code: [(playground link)](https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=d1f0012892dfb0722209dc2147f0c8af)\r\n\r\n```rust\r\nlet _ = HashMap::from([1, 2]);\r\n```\r\n\r\nIn this case, a user meant to create the set `{1, 2}`. However, they accidentally typed `HashMap` instead of `HashMap` and the code fails. Right now, we already offer a decent suggestion, which is that instead of providing an array of values, `HashMap` requires an array of key-value pairs:\r\n\r\n```\r\nerror[[E0277]](https://doc.rust-lang.org/stable/error-index.html#E0277): the trait bound `HashMap<_, _, _>: From<[{integer}; 2]>` is not satisfied\r\n [--> src/main.rs:4:13\r\n](https://play.rust-lang.org/#)  |\r\n4 |     let _ = HashMap::from([1, 2]);\r\n  |             ^^^^^^^^^^^^^ the trait `From<[{integer}; 2]>` is not implemented for `HashMap<_, _, _>`\r\n  |\r\n  = help: the following implementations were found:\r\n            <HashMap<K, V> as From<[(K, V); N]>>\r\n```\r\n\r\nHopefully, the user should realise their mistake now. However, we could do better and note that `HashMap` and `HashSet` are easily confused, and look for an eligible usage of `HashSet` instead. Here, we're in luck, because `HashSet` has the desired impl, and we should suggest that as well:\r\n\r\n```diff\r\n-let _ = HashMap::from([1, 2]);\r\n+let _ = HashSet::from([1, 2]);\r\n```\r\n\r\nNow, that's one direction. The other direction is trickier, since sets can also contain key-value pairs, even though they won't actually be treated the same way. Take this code: [(playground link)](https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=c00aa4e10c3522468566ec706fb0f4cf)\r\n\r\n```rust\r\nlet map = HashSet::from([(1, 2), (3, 4)]);\r\nassert_eq!(map[1], 2);\r\n```\r\n\r\nIn this case, we have no valid suggestion, and simply tell the user that they can't index `HashSet`s with integers:\r\n\r\n```\r\nerror[[E0608]](https://doc.rust-lang.org/stable/error-index.html#E0608): cannot index into a value of type `HashSet<({integer}, {integer})>`\r\n [--> src/main.rs:5:16\r\n](https://play.rust-lang.org/#)  |\r\n5 |     assert_eq!(map[1], 2);\r\n  |                ^^^^^^\r\n```\r\n\r\nWhat we could do here is notice that this is possible on `HashMap`s, and suggest to the user to replace their `HashSet` with a `HashMap`:\r\n\r\n```diff\r\n-let map = HashSet::from([(1, 2), (3, 4)]);\r\n+let map = HashMap::from([(1, 2), (3, 4)]);\r\nassert_eq!(map[1], 2);\r\n```\r\n\r\nOne potential problem with this approach is that it could definitely slow down compilcation by a decent factor if we're checking for these on every single invalid invocation, and so it might make sense to limit scope initially, or find an alternative way of doing this. However, there are other cases besides map/set, like confusing arrays with `Vec`s: [(playground link)](https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=8720e2f46424e6f9c92db153ee5bbd69)\r\n\r\n```rust\r\nlet _ = [1, 2, 3].capacity();\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/93890/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/93890/timeline", "performed_via_github_app": null, "state_reason": null}