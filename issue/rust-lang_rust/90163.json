{"url": "https://api.github.com/repos/rust-lang/rust/issues/90163", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/90163/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/90163/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/90163/events", "html_url": "https://github.com/rust-lang/rust/issues/90163", "id": 1033537534, "node_id": "I_kwDOAAsO6M49mof-", "number": 90163, "title": "Compiler error on `cargo fix --edition`", "user": {"login": "HollayHorvath", "id": 2041357, "node_id": "MDQ6VXNlcjIwNDEzNTc=", "avatar_url": "https://avatars.githubusercontent.com/u/2041357?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HollayHorvath", "html_url": "https://github.com/HollayHorvath", "followers_url": "https://api.github.com/users/HollayHorvath/followers", "following_url": "https://api.github.com/users/HollayHorvath/following{/other_user}", "gists_url": "https://api.github.com/users/HollayHorvath/gists{/gist_id}", "starred_url": "https://api.github.com/users/HollayHorvath/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HollayHorvath/subscriptions", "organizations_url": "https://api.github.com/users/HollayHorvath/orgs", "repos_url": "https://api.github.com/users/HollayHorvath/repos", "events_url": "https://api.github.com/users/HollayHorvath/events{/privacy}", "received_events_url": "https://api.github.com/users/HollayHorvath/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 2947369052, "node_id": "MDU6TGFiZWwyOTQ3MzY5MDUy", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-edition-2021", "name": "A-edition-2021", "color": "f7e101", "default": false, "description": "Area: The 2021 edition"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-10-22T12:37:52Z", "updated_at": "2021-10-22T13:23:33Z", "closed_at": "2021-10-22T13:23:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey folks,\r\n\r\nI'm getting an ICE while trying to run `cargo fix --edition`.\r\n\r\nBuilding or doing anything else with this code is fine. If I remove `Rc` but keep the internal type, it's also works.\r\n\r\n### Code\r\n\r\n```Rust\r\nuse std::rc::Rc;\r\n\r\npub fn ice<'a, T: 'a, Key, FKeyer>(\r\n    iterable: &'a [Vec<T>],\r\n    keyer: &FKeyer,\r\n)\r\nwhere\r\n    FKeyer: Fn(&T) -> Key,\r\n{\r\n    let mut tree = Tree::new();\r\n    iterable.iter().enumerate().for_each(|(index, item)| {\r\n        tree.add(index, item.iter().map(keyer))\r\n    });\r\n}\r\n\r\npub struct Tree<K, E>\r\n{\r\n    pub(crate) _root: Rc<Node<K, E>>,\r\n}\r\n\r\nimpl<K, E> Tree<K, E>\r\n{\r\n    pub fn new() -> Tree<K, E> {\r\n        let _root = Node::new();\r\n\r\n        Tree {\r\n            _root,\r\n        }\r\n    }\r\n\r\n    pub fn add<I>(&mut self, _: K, _: I)\r\n    where\r\n        I: Iterator<Item = E>,\r\n    {\r\n    }\r\n}\r\n\r\npub struct Node<K, E>\r\n{\r\n    _k: std::marker::PhantomData<K>,\r\n    _e: std::marker::PhantomData<E>,\r\n}\r\n\r\nimpl<K, E> Node<K, E>\r\n{\r\n    pub fn new() -> Rc<Node<K, E>> {\r\n        Rc::new(Node {\r\n            _k: std::marker::PhantomData::default(),\r\n            _e: std::marker::PhantomData::default(),\r\n        })\r\n    }\r\n}\r\n\r\n```\r\n\r\n\r\n### Meta\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.56.0 (09c42c458 2021-10-18)\r\nbinary: rustc\r\ncommit-hash: 09c42c45858d5f3aedfa670698275303a3d19afa\r\ncommit-date: 2021-10-18\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.56.0\r\nLLVM version: 13.0.0\r\n```\r\nThe same happens on nightly.\r\n\r\n### Error output\r\n\r\n```\r\nerror: internal compiler error: compiler/rustc_middle/src/ty/subst.rs:534:17: type parameter `E/#1` (E/1) out of range when substituting, substs=[Node<K, E>]\r\n\r\nthread 'rustc' panicked at 'Box<dyn Any>', /rustc/09c42c45858d5f3aedfa670698275303a3d19afa/compiler/rustc_errors/src/lib.rs:1093:9\r\n\r\n...\r\n\r\nquery stack during panic:\r\n#0 [adt_significant_drop_tys] computing when `Tree` has a significant destructor\r\n#1 [has_significant_drop_raw] computing whether `Tree<usize, Key>` has a significant drop\r\nend of query stack\r\nerror: build failed\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nthread 'rustc' panicked at 'Box<dyn Any>', /rustc/efd0483949496b067cd5f7569d1b28cd3d5d3c72/compiler/rustc_errors/src/lib.rs:1093:9\r\nstack backtrace:\r\n   0: std::panicking::begin_panic\r\n   1: std::panic::panic_any\r\n   2: rustc_errors::HandlerInner::span_bug\r\n   3: rustc_errors::Handler::span_bug\r\n   4: rustc_middle::ty::context::tls::with_opt\r\n   5: rustc_middle::util::bug::opt_span_bug_fmt\r\n   6: rustc_middle::util::bug::span_bug_fmt\r\n   7: rustc_middle::ty::fold::TypeFoldable::fold_with\r\n   8: rustc_middle::ty::structural_impls::<impl rustc_middle::ty::fold::TypeFoldable for &rustc_middle::ty::TyS>::super_fold_with\r\n   9: <rustc_ty_utils::needs_drop::NeedsDropTypes<F> as core::iter::traits::iterator::Iterator>::next\r\n  10: <core::iter::adapters::ResultShunt<I,E> as core::iter::traits::iterator::Iterator>::next\r\n  11: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter\r\n  12: core::iter::adapters::process_results\r\n  13: rustc_ty_utils::needs_drop::adt_significant_drop_tys\r\n  14: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task\r\n  15: rustc_data_structures::stack::ensure_sufficient_stack\r\n  16: rustc_query_system::query::plumbing::try_execute_query\r\n  17: rustc_query_system::query::plumbing::get_query\r\n  18: rustc_ty_utils::needs_drop::has_significant_drop_raw\r\n  19: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task\r\n  20: rustc_data_structures::stack::ensure_sufficient_stack\r\n  21: rustc_query_system::query::plumbing::try_execute_query\r\n  22: rustc_query_system::query::plumbing::get_query\r\n  23: rustc_middle::ty::util::<impl rustc_middle::ty::TyS>::has_significant_drop\r\n  24: rustc_typeck::check::upvar::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::analyze_closure\r\n  25: <rustc_typeck::check::upvar::InferBorrowKindVisitor as rustc_hir::intravisit::Visitor>::visit_expr\r\n  26: rustc_hir::intravisit::walk_expr\r\n  27: rustc_hir::intravisit::walk_stmt\r\n  28: rustc_hir::intravisit::walk_block\r\n  29: rustc_hir::intravisit::walk_body\r\n  30: rustc_infer::infer::InferCtxtBuilder::enter\r\n  31: rustc_typeck::check::typeck\r\n  32: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task\r\n  33: rustc_data_structures::stack::ensure_sufficient_stack\r\n  34: rustc_query_system::query::plumbing::try_execute_query\r\n  35: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::typeck\r\n  36: rustc_typeck::check::typeck\r\n  37: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task\r\n  38: rustc_data_structures::stack::ensure_sufficient_stack\r\n  39: rustc_query_system::query::plumbing::try_execute_query\r\n  40: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::typeck\r\n  41: rustc_middle::hir::map::Map::par_body_owners\r\n  42: rustc_typeck::check::typeck_item_bodies\r\n  43: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task\r\n  44: rustc_data_structures::stack::ensure_sufficient_stack\r\n  45: rustc_query_system::query::plumbing::try_execute_query\r\n  46: rustc_query_system::query::plumbing::get_query\r\n  47: rustc_session::utils::<impl rustc_session::session::Session>::time\r\n  48: rustc_typeck::check_crate\r\n  49: rustc_interface::passes::analysis\r\n  50: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task\r\n  51: rustc_data_structures::stack::ensure_sufficient_stack\r\n  52: rustc_query_system::query::plumbing::try_execute_query\r\n  53: rustc_query_system::query::plumbing::get_query\r\n  54: rustc_interface::passes::QueryContext::enter\r\n  55: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n  56: rustc_span::with_source_map\r\n  57: scoped_tls::ScopedKey<T>::set\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\nIf I should provide more details, please let me know!\r\n\r\nThank you very much!", "closed_by": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/90163/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/90163/timeline", "performed_via_github_app": null, "state_reason": "completed"}