{"url": "https://api.github.com/repos/rust-lang/rust/issues/94492", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/94492/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/94492/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/94492/events", "html_url": "https://github.com/rust-lang/rust/issues/94492", "id": 1155625985, "node_id": "I_kwDOAAsO6M5E4XQB", "number": 94492, "title": "Suggesting adding lifetime to return type", "user": {"login": "kckeiks", "id": 24687641, "node_id": "MDQ6VXNlcjI0Njg3NjQx", "avatar_url": "https://avatars.githubusercontent.com/u/24687641?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kckeiks", "html_url": "https://github.com/kckeiks", "followers_url": "https://api.github.com/users/kckeiks/followers", "following_url": "https://api.github.com/users/kckeiks/following{/other_user}", "gists_url": "https://api.github.com/users/kckeiks/gists{/gist_id}", "starred_url": "https://api.github.com/users/kckeiks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kckeiks/subscriptions", "organizations_url": "https://api.github.com/users/kckeiks/orgs", "repos_url": "https://api.github.com/users/kckeiks/repos", "events_url": "https://api.github.com/users/kckeiks/events{/privacy}", "received_events_url": "https://api.github.com/users/kckeiks/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 60329014, "node_id": "MDU6TGFiZWw2MDMyOTAxNA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-low", "name": "P-low", "color": "eb6420", "default": false, "description": "Low priority"}, {"id": 171502053, "node_id": "MDU6TGFiZWwxNzE1MDIwNTM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-borrow-checker", "name": "A-borrow-checker", "color": "f7e101", "default": false, "description": "Area: The borrow checker"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1183099971, "node_id": "MDU6TGFiZWwxMTgzMDk5OTcx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-suggestion-diagnostics", "name": "A-suggestion-diagnostics", "color": "f7e101", "default": false, "description": "Area: suggestions generated by the compiler applied by cargo fix"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2022-03-01T17:43:23Z", "updated_at": "2022-03-01T18:27:11Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When there is a (elided) lifetime mismatch, we output a hint to introduce a lifetime but the hint does not suggest adding a lifetime to the return type. \r\n\r\nGiven the following code: <!-- Please provide a link to play.rust-lang.org -->\r\n\r\n```rust\r\ntrait T {\r\n    fn foo(&self, x: &i32) -> Option<&i32> {\r\n        Some(x)\r\n    }\r\n}\r\n```\r\n\r\nThe current output is:\r\n\r\n```\r\n\r\n\r\nerror[E0623]: lifetime mismatch\r\n  --> src/main.rs:11:9\r\n   |\r\n10 |     fn foo(&self, x: &i32) -> Option<&i32> {\r\n   |                      ----     ------------\r\n   |                      |\r\n   |                      this parameter and the return type are declared with different lifetimes...\r\n11 |         Some(x)\r\n   |         ^^^^^^^ ...but data from `x` is returned here\r\n   |\r\n   = note: each elided lifetime in input position becomes a distinct lifetime\r\nhelp: consider introducing a named lifetime parameter\r\n   |\r\n10 |     fn foo<'a>(&'a self, x: &'a i32) -> Option<&i32> {\r\n   |           ++++  ++           ++\r\n\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0623`.\r\n\r\n\r\n```\r\n\r\n<!-- The following is not always necessary. -->\r\nIdeally the output should also suggest adding `'a` to the return type:\r\n\r\n```\r\n\r\nerror[E0623]: lifetime mismatch\r\n  --> src/main.rs:11:9\r\n   |\r\n10 |     fn foo(&self, x: &i32) -> Option<&i32> {\r\n   |                      ----     ------------\r\n   |                      |\r\n   |                      this parameter and the return type are declared with different lifetimes...\r\n11 |         Some(x)\r\n   |         ^^^^^^^ ...but data from `x` is returned here\r\n   |\r\n   = note: each elided lifetime in input position becomes a distinct lifetime\r\nhelp: consider introducing a named lifetime parameter\r\n   |\r\n10 |     fn foo<'a>(&'a self, x: &'a i32) -> Option<&'a i32> {\r\n   |           ++++  ++           ++                 ++\r\n\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0623`.\r\n\r\n```\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/94492/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 1, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/94492/timeline", "performed_via_github_app": null, "state_reason": null}