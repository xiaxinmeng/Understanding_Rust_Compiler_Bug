{"url": "https://api.github.com/repos/rust-lang/rust/issues/90149", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/90149/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/90149/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/90149/events", "html_url": "https://github.com/rust-lang/rust/issues/90149", "id": 1033027378, "node_id": "I_kwDOAAsO6M49kr8y", "number": 90149, "title": "\"one type is more general than the other\" with async, generics, Send, and lifetime bounds", "user": {"login": "duarten", "id": 501746, "node_id": "MDQ6VXNlcjUwMTc0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/501746?v=4", "gravatar_id": "", "url": "https://api.github.com/users/duarten", "html_url": "https://github.com/duarten", "followers_url": "https://api.github.com/users/duarten/followers", "following_url": "https://api.github.com/users/duarten/following{/other_user}", "gists_url": "https://api.github.com/users/duarten/gists{/gist_id}", "starred_url": "https://api.github.com/users/duarten/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/duarten/subscriptions", "organizations_url": "https://api.github.com/users/duarten/orgs", "repos_url": "https://api.github.com/users/duarten/repos", "events_url": "https://api.github.com/users/duarten/events{/privacy}", "received_events_url": "https://api.github.com/users/duarten/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-10-21T23:42:22Z", "updated_at": "2023-02-12T05:43:38Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Consider the following program:\r\n\r\n```rust\r\nimpl<T: std::future::Future> FutureExt for T {}\r\n\r\npub trait FutureExt: Sized {\r\n    fn with_props<I: IntoIterator<Item = &'static str>>(self, props: I) -> FutureWithProps<I> {\r\n        FutureWithProps { props }\r\n    }\r\n}\r\n\r\npub struct FutureWithProps<I: IntoIterator<Item = &'static str>> {\r\n    props: I,\r\n}\r\n\r\nimpl<I: IntoIterator<Item = &'static str>> std::future::Future for FutureWithProps<I> {\r\n    type Output = ();\r\n    fn poll(self: std::pin::Pin<&mut Self>, _: &mut std::task::Context<'_>) -> std::task::Poll<Self::Output> {\r\n        std::task::Poll::Pending\r\n    }\r\n}\r\n\r\nunsafe impl<I: IntoIterator<Item = &'static str> + Send> Send for FutureWithProps<I> {}\r\n\r\npub async fn foo() -> Box<dyn std::future::Future<Output = ()> + Send> {\r\n    Box::new(async move { async {}.with_props(vec![\"foo\"]).await })\r\n}\r\n```\r\n\r\nThis results in the following compiler error, using version 1.56.0:\r\n\r\n```\r\nerror[E0308]: mismatched types\r\n  --> src/main.rs:33:9\r\n   |\r\n33 |         Box::pin(async move { async {}.with_properties(vec![\"foo\"]).await })\r\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ one type is more general than the other\r\n   |\r\n   = note: expected reference `&str`\r\n              found reference `&'static str`\r\n```\r\n\r\nThe code compiles fine with _any_ of the following modifications:\r\n\r\n* Changing `&'static str` into a `String`; or\r\n* Removing the type parameter `I` and using `Vec<&'static str>`; or\r\n* Removing the `Send` impl for `FutureWithProps`; or\r\n* Removing the `Send` bound in `foo()`.\r\n\r\nNot sure if this is a known issue, but it seems to happen with this particular mix of features.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/90149/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/90149/timeline", "performed_via_github_app": null, "state_reason": null}