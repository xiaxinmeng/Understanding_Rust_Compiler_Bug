{"url": "https://api.github.com/repos/rust-lang/rust/issues/59667", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/59667/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/59667/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/59667/events", "html_url": "https://github.com/rust-lang/rust/issues/59667", "id": 428802231, "node_id": "MDU6SXNzdWU0Mjg4MDIyMzE=", "number": 59667, "title": "Release nightly compilers with ability to internally parallelize", "user": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 849077850, "node_id": "MDU6TGFiZWw4NDkwNzc4NTA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/WG-compiler-performance", "name": "WG-compiler-performance", "color": "c2e0c6", "default": false, "description": "Working group: Compiler Performance"}, {"id": 891133401, "node_id": "MDU6TGFiZWw4OTExMzM0MDE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-parallel-queries", "name": "A-parallel-queries", "color": "f7e101", "default": false, "description": "Area: Parallel query execution"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-04-03T14:31:13Z", "updated_at": "2020-06-02T20:52:37Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "This is intended to be a tracking issue to releasing nightly compilers with the ability to internally parallelize themselves but they are still defaulted to single threaded mode. This is part of the larger [parallel compiler tracking issue](https://github.com/rust-lang/rust/issues/48685), and is intended to be an incremental step towards fully closing that out.\r\n\r\nA [recent attempt](https://github.com/rust-lang/rust/pull/59417) to build binaires of the parallel compiler led to the thought of whether we could just enable a parallel compiler by default. Note that there are two axes we can change here over time:\r\n\r\n* Whether or nor the compiler can be parallelized at all, aka whether it's built with the `--cfg parallel_compiler` flag.\r\n* Whether or not the compiler by default is parallelized, aka the default value of `-Z threads`\r\n\r\nThe proposal in this issue is to default to `-Z threads=1` (or the moral equivalent) but build nightly compilers with `--cfg parallel_compiler` (or the equivalent thereof). The intention is to get us closer to shipping a parallel compiler while buying us time to continue to fix any issues that arise. This would allow, for example, for users to very easily test out parallel compilation locally by using `RUSTFLAGS=-Zthreads=16`.\r\n\r\nThe main blocker for doing this is performance. [Requested in a recent thread](https://github.com/rust-lang/rust/pull/59417#issuecomment-478741091) we realized it's imported to not watch [the comparison of instruction counts](https://perf.rust-lang.org/compare.html?start=eab3eb38df8dca99110b6149b3a15deeb4ef0413&end=cb23a46f60b0233f366367dd11b5fdc241bce328) but rather instead watch the [wall time numbers](https://perf.rust-lang.org/compare.html?start=eab3eb38df8dca99110b6149b3a15deeb4ef0413&end=cb23a46f60b0233f366367dd11b5fdc241bce328&stat=wall-time). The instruction count numbers regress 2-3% which looks deceptively good, but the wall-time numbers regress 10-20% (ish) which is much more serious.\r\n\r\nSome [further investigation](https://github.com/rust-lang/rust/pull/59417#issuecomment-479233639) shows that most of the slowdown is likely coming from the [use of mutexes](https://github.com/rust-lang/rust/pull/59644) (as opposed to other avenues like [removing parallel code](https://github.com/rust-lang/rust/pull/59649), the [overhead of using rayon](https://github.com/rust-lang/rust/pull/59647), or [using `Arc` instead of `Rc`](https://github.com/rust-lang/rust/pull/59641)).\r\n\r\nThe next steps here would be to investigate whether we can recover the performance lost from using mutexes (probably if we can remove the mutexes one way or another). \r\n\r\nThis issue will likely receive many updates over time!", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/59667/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/59667/timeline", "performed_via_github_app": null, "state_reason": null}