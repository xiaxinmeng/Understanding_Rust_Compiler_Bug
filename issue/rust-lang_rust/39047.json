{"url": "https://api.github.com/repos/rust-lang/rust/issues/39047", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/39047/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/39047/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/39047/events", "html_url": "https://github.com/rust-lang/rust/issues/39047", "id": 200753554, "node_id": "MDU6SXNzdWUyMDA3NTM1NTQ=", "number": 39047, "title": "can easily use a reference to an out-of-scope local in unsafe code", "user": {"login": "reventlov", "id": 957033, "node_id": "MDQ6VXNlcjk1NzAzMw==", "avatar_url": "https://avatars.githubusercontent.com/u/957033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/reventlov", "html_url": "https://github.com/reventlov", "followers_url": "https://api.github.com/users/reventlov/followers", "following_url": "https://api.github.com/users/reventlov/following{/other_user}", "gists_url": "https://api.github.com/users/reventlov/gists{/gist_id}", "starred_url": "https://api.github.com/users/reventlov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/reventlov/subscriptions", "organizations_url": "https://api.github.com/users/reventlov/orgs", "repos_url": "https://api.github.com/users/reventlov/repos", "events_url": "https://api.github.com/users/reventlov/events{/privacy}", "received_events_url": "https://api.github.com/users/reventlov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235137, "node_id": "MDU6TGFiZWwyMzUxMzc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lint", "name": "A-lint", "color": "f7e101", "default": false, "description": "Area: Lints (warnings about flaws in source code) such as unused_mut."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-01-13T23:03:37Z", "updated_at": "2019-09-10T01:47:23Z", "closed_at": "2019-09-10T01:47:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "The attached code appears to be incorrectly optimized on x86_64: the call to `pthread_sigmask()` ultimately receives a pointer to uninitialized memory for its second parameter.\r\n\r\nLooking at the asm, it looks like the `Option` construction isn't copying the data from `signal_mask`, per lines 92 to 178 of the [assembly output](https://gist.github.com/reventlov/ad732bc573d13213e28657657fb3a915): a sigset_t is properly initialized and passed into `sigemptyset()`, `sigaddset()`, and `sigismember()`, but `pthread_sigmask()` receives a pointer to a slab of uninitialized memory at `%rsp+472`.\r\n\r\nI was unable to reduce the code any further and still exhibit the bug.  Even minor changes like replacing the `match set` on line 12 with `set.unwrap()` cause the bug to go away.\r\n\r\n```\r\nextern crate libc;\r\n\r\nuse libc::sigset_t;\r\nuse libc::SIG_BLOCK;\r\n\r\nuse std::mem;\r\n\r\nfn sigmask(how: libc::c_int, set: Option<sigset_t>) -> sigset_t {\r\n  let mut oldset = unsafe { mem::zeroed::<sigset_t>() };\r\n  if unsafe {\r\n    libc::pthread_sigmask(how,\r\n                          match set {\r\n                            Some(z) => &z,\r\n                            None => panic!(),\r\n                          },\r\n                          &mut oldset)\r\n  } < 0 {\r\n    panic!();\r\n  }\r\n  oldset\r\n}\r\n\r\nfn main() {\r\n  let signals = [libc::SIGHUP,\r\n                 libc::SIGINT,\r\n                 libc::SIGQUIT,\r\n                 libc::SIGABRT,\r\n                 libc::SIGPIPE,\r\n                 libc::SIGALRM,\r\n                 libc::SIGTERM,\r\n                 libc::SIGUSR1,\r\n                 libc::SIGUSR2,\r\n                 libc::SIGCHLD,\r\n                 libc::SIGTSTP,\r\n                 libc::SIGTTIN,\r\n                 libc::SIGTTOU,\r\n                 libc::SIGWINCH];\r\n  let mut signal_mask = unsafe { mem::zeroed::<sigset_t>() };\r\n  if unsafe { self::libc::sigemptyset(&mut signal_mask) } < 0 {\r\n    panic!()\r\n  }\r\n  for signal in signals.iter() {\r\n    if unsafe { self::libc::sigaddset(&mut signal_mask, signal.clone()) } < 0 {\r\n      panic!()\r\n    }\r\n  }\r\n  sigmask(SIG_BLOCK, Some(signal_mask));\r\n  let new_mask = sigmask(SIG_BLOCK, Some(signal_mask));\r\n  let mut should_panic = false;\r\n  for signal in signals.iter() {\r\n    match unsafe { self::libc::sigismember(&new_mask, signal.clone()) } {\r\n      n if n < 0 => panic!(),\r\n      n if n == 0 => {\r\n        println!(\"Failed to mask signal {}\", signal);\r\n        should_panic = true;\r\n      }\r\n      _ => (),\r\n    }\r\n  }\r\n  if should_panic {\r\n    panic!(\"Not all signals were handled!\");\r\n  }\r\n}\r\n```\r\n\r\n```\r\n> cargo run\r\n    Finished debug [unoptimized + debuginfo] target(s) in 0.0 secs\r\n     Running `target/debug/error`\r\n\r\n> cargo run --release\r\n    Finished release [optimized] target(s) in 0.0 secs\r\n     Running `target/release/error`\r\nFailed to mask signal 1\r\nFailed to mask signal 2\r\nFailed to mask signal 3\r\nFailed to mask signal 13\r\nFailed to mask signal 14\r\nFailed to mask signal 15\r\nFailed to mask signal 10\r\nFailed to mask signal 12\r\nFailed to mask signal 17\r\nFailed to mask signal 20\r\nFailed to mask signal 21\r\nFailed to mask signal 22\r\nthread 'main' panicked at 'Not all signals were handled!', src/main.rs:61\r\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\r\n\r\n> rustc --version --verbose\r\nrustc 1.16.0-nightly (47c8d9fdc 2017-01-08)\r\nbinary: rustc\r\ncommit-hash: 47c8d9fdcf2e6502cf4ca7d7f059fdc1a2810afa\r\ncommit-date: 2017-01-08\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.16.0-nightly\r\nLLVM version: 3.9\r\n```", "closed_by": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/39047/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/39047/timeline", "performed_via_github_app": null, "state_reason": "completed"}