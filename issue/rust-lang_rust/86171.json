{"url": "https://api.github.com/repos/rust-lang/rust/issues/86171", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/86171/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/86171/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/86171/events", "html_url": "https://github.com/rust-lang/rust/issues/86171", "id": 916444228, "node_id": "MDU6SXNzdWU5MTY0NDQyMjg=", "number": 86171, "title": "ASAN stack-buffer-overflow when calling FFI function on nightly compiler", "user": {"login": "bobbobbio", "id": 531660, "node_id": "MDQ6VXNlcjUzMTY2MA==", "avatar_url": "https://avatars.githubusercontent.com/u/531660?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobbobbio", "html_url": "https://github.com/bobbobbio", "followers_url": "https://api.github.com/users/bobbobbio/followers", "following_url": "https://api.github.com/users/bobbobbio/following{/other_user}", "gists_url": "https://api.github.com/users/bobbobbio/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobbobbio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobbobbio/subscriptions", "organizations_url": "https://api.github.com/users/bobbobbio/orgs", "repos_url": "https://api.github.com/users/bobbobbio/repos", "events_url": "https://api.github.com/users/bobbobbio/events{/privacy}", "received_events_url": "https://api.github.com/users/bobbobbio/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 45472092, "node_id": "MDU6TGFiZWw0NTQ3MjA5Mg==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-ffi", "name": "A-ffi", "color": "f7e101", "default": false, "description": "Area: Foreign Function Interface (FFI)"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2021-06-09T17:28:48Z", "updated_at": "2021-06-13T10:33:24Z", "closed_at": "2021-06-13T10:33:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI tried out ASAN on some code that calls into C\r\n\r\n```rust\r\n#[repr(C)]\r\npub struct arg {\r\n    pub a: ::std::os::raw::c_uint,\r\n    pub b: ::std::os::raw::c_uint,\r\n    pub c: ::std::os::raw::c_uint,\r\n}\r\n\r\nextern \"C\" {\r\n    pub fn foo(arg: arg);\r\n}\r\n\r\nfn main() {\r\n    let arg = arg {\r\n        a: 12,\r\n        b: 3,\r\n        c: 12000,\r\n    };\r\n\r\n    unsafe {\r\n        foo(arg);\r\n    }\r\n}\r\n```\r\n\r\n```C\r\n#include <stdio.h>\r\n\r\nstruct arg {\r\n    unsigned a;\r\n    unsigned b;\r\n    unsigned c;\r\n};\r\n\r\nvoid\r\nfoo(struct arg);\r\n\r\nvoid\r\nfoo(struct arg arg)\r\n{\r\n    printf(\"arg = %u, %u, %u\\n\", arg.a, arg.b, arg.c);\r\n}\r\n```\r\n\r\nI expected there to be no problems with this, since as far as I can tell the FFI function signature matches the C function I am calling, but instead ASAN was not happy. It seems to be upset about some read to stack memory in the preparation to call the FFI function. I was not able to determine if the instructions generated by the compiler is actually reading something it shouldn't be or if ASAN is here is making a mistake.\r\n\r\n```\r\n=================================================================\r\n==681824==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffcae5f08ef at pc 0x55eded4913b2 bp 0x7ffcae5f08b0 sp 0x7ffcae5f08a8\r\nREAD of size 16 at 0x7ffcae5f08ef thread T0\r\n    #0 0x55eded4913b1 in main::main::hd37b685de13e672b (/home/remi/asan_repro/main+0x9b3b1)\r\n    #1 0x55eded491762 in core::ops::function::FnOnce::call_once::hfa3234c194bf7715 (/home/remi/asan_repro/main+0x9b762)\r\n    #2 0x55eded49184d in std::sys_common::backtrace::__rust_begin_short_backtrace::h44cfd34aa2f57a41 (/home/remi/asan_repro/main+0x9b84d)\r\n    #3 0x55eded490f9e in std::rt::lang_start::_$u7b$$u7b$closure$u7d$$u7d$::h98e052a2c53ef199 (/home/remi/asan_repro/main+0x9af9e)\r\n    #4 0x55eded4a1b48 in core::ops::function::impls::_$LT$impl$u20$core..ops..function..FnOnce$LT$A$GT$$u20$for$u20$$RF$F$GT$::call_once::hd933294140eb11aa /rustc/ed597e7e19d0fe716d9f81b1e840a5abbfd7c28d/library/core/src/ops/function.rs:259:13\r\n    #5 0x55eded4a1b48 in std::panicking::try::do_call::h8342fe3d9218b807 /rustc/ed597e7e19d0fe716d9f81b1e840a5abbfd7c28d/library/std/src/panicking.rs:401:40\r\n    #6 0x55eded4a1b48 in std::panicking::try::hcbd73d6d0d58a8f0 /rustc/ed597e7e19d0fe716d9f81b1e840a5abbfd7c28d/library/std/src/panicking.rs:365:19\r\n    #7 0x55eded4a1b48 in std::panic::catch_unwind::hde9cf73f810acfcc /rustc/ed597e7e19d0fe716d9f81b1e840a5abbfd7c28d/library/std/src/panic.rs:434:14\r\n    #8 0x55eded4a1b48 in std::rt::lang_start_internal::heb39e7ea6e5d6f6f /rustc/ed597e7e19d0fe716d9f81b1e840a5abbfd7c28d/library/std/src/rt.rs:34:21\r\n    #9 0x55eded490f10 in std::rt::lang_start::h760013e04b8fcbf3 (/home/remi/asan_repro/main+0x9af10)\r\n    #10 0x55eded491452 in main (/home/remi/asan_repro/main+0x9b452)\r\n    #11 0x7f18a1e530b2 in __libc_start_main /build/glibc-eX1tMB/glibc-2.31/csu/../csu/libc-start.c:308:16\r\n    #12 0x55eded4036ed in _start (/home/remi/asan_repro/main+0xd6ed)\r\n\r\nAddress 0x7ffcae5f08ef is located in stack of thread T0 at offset 47 in frame\r\n    #0 0x55eded49117f in main::main::hd37b685de13e672b (/home/remi/asan_repro/main+0x9b17f)\r\n\r\n  This frame has 2 object(s):\r\n    [32, 44) '_3'\r\n    [64, 76) 'arg' <== Memory access at offset 47 underflows this variable\r\nHINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork\r\n      (longjmp and C++ exceptions *are* supported)\r\nSUMMARY: AddressSanitizer: stack-buffer-overflow (/home/remi/asan_repro/main+0x9b3b1) in main::main::hd37b685de13e672b\r\nShadow bytes around the buggy address:\r\n  0x100015cb60c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\r\n  0x100015cb60d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\r\n  0x100015cb60e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\r\n  0x100015cb60f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\r\n  0x100015cb6100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\r\n=>0x100015cb6110: 00 00 00 00 00 00 00 00 f1 f1 f1 f1 00[04]f2 f2\r\n  0x100015cb6120: 00 04 f3 f3 00 00 00 00 00 00 00 00 00 00 00 00\r\n  0x100015cb6130: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\r\n  0x100015cb6140: 00 00 00 00 f1 f1 f1 f1 f8 f8 f3 f3 00 00 00 00\r\n  0x100015cb6150: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\r\n  0x100015cb6160: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\r\nShadow byte legend (one shadow byte represents 8 application bytes):\r\n  Addressable:           00\r\n  Partially addressable: 01 02 03 04 05 06 07\r\n  Heap left redzone:       fa\r\n  Freed heap region:       fd\r\n  Stack left redzone:      f1\r\n  Stack mid redzone:       f2\r\n  Stack right redzone:     f3\r\n  Stack after return:      f5\r\n  Stack use after scope:   f8\r\n  Global redzone:          f9\r\n  Global init order:       f6\r\n  Poisoned by user:        f7\r\n  Container overflow:      fc\r\n  Array cookie:            ac\r\n  Intra object redzone:    bb\r\n  ASan internal:           fe\r\n  Left alloca redzone:     ca\r\n  Right alloca redzone:    cb\r\n  Shadow gap:              cc\r\n==681824==ABORTING\r\n```\r\n\r\nWhen I build and run the code without ASAN enabled, it works as expected (although of course this isn't a guarantee of no memory issue)\r\n\r\n```\r\n+ ./main\r\narg = 12, 3, 12000\r\n```\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.54.0-nightly (ed597e7e1 2021-06-08)\r\nbinary: rustc\r\ncommit-hash: ed597e7e19d0fe716d9f81b1e840a5abbfd7c28d\r\ncommit-date: 2021-06-08\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.54.0-nightly\r\nLLVM version: 12.0.1\r\n```\r\n`clang --version`:\r\n```\r\nclang version 10.0.0-4ubuntu1\r\nTarget: x86_64-pc-linux-gnu\r\nThread model: posix\r\nInstalledDir: /usr/bin\r\n```\r\n\r\nThis is how I built and ran the Rust and C code for the purpose of a small repro of the issue\r\n```\r\nclang -shared foo.c -o libfoo.so\r\nrustc main.rs -lfoo -L. -Z sanitizer=address\r\n\r\nexport LD_LIBRARY_PATH=.\r\n./main\r\n```\r\n", "closed_by": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/86171/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/86171/timeline", "performed_via_github_app": null, "state_reason": "completed"}