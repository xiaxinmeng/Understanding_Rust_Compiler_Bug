{"url": "https://api.github.com/repos/rust-lang/rust/issues/111502", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/111502/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/111502/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/111502/events", "html_url": "https://github.com/rust-lang/rust/issues/111502", "id": 1707425025, "node_id": "I_kwDOAAsO6M5lxT0B", "number": 111502, "title": "Mutating through addr_of produces LLVM IR with UB", "user": {"login": "cbeuw", "id": 7034308, "node_id": "MDQ6VXNlcjcwMzQzMDg=", "avatar_url": "https://avatars.githubusercontent.com/u/7034308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cbeuw", "html_url": "https://github.com/cbeuw", "followers_url": "https://api.github.com/users/cbeuw/followers", "following_url": "https://api.github.com/users/cbeuw/following{/other_user}", "gists_url": "https://api.github.com/users/cbeuw/gists{/gist_id}", "starred_url": "https://api.github.com/users/cbeuw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cbeuw/subscriptions", "organizations_url": "https://api.github.com/users/cbeuw/orgs", "repos_url": "https://api.github.com/users/cbeuw/repos", "events_url": "https://api.github.com/users/cbeuw/events{/privacy}", "received_events_url": "https://api.github.com/users/cbeuw/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1927601458, "node_id": "MDU6TGFiZWwxOTI3NjAxNDU4", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-mir-opt", "name": "A-mir-opt", "color": "f7e101", "default": false, "description": "Area: MIR optimizations"}, {"id": 5226679137, "node_id": "LA_kwDOAAsO6M8AAAABN4jLYQ", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-opsem", "name": "T-opsem", "color": "bfd4f2", "default": false, "description": "Relevant to the opsem team"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2023-05-12T11:05:26Z", "updated_at": "2023-05-14T13:19:32Z", "closed_at": "2023-05-14T13:19:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As there is a write through a `*const` derived pointer, this code has UB under Stacked Borrows, but is fine under Tree Borrows, \r\n```rust\r\npub fn first() -> bool {\r\n    let mut a = (0., true);\r\n    let b = (0., false);\r\n    let a_ptr_and_b = (core::ptr::addr_of_mut!(a), b);\r\n    let got = unsafe { second(a_ptr_and_b.0, a_ptr_and_b, true, true) };\r\n    return got;\r\n}\r\n\r\nunsafe fn second(\r\n    a_ptr: *mut (f32, bool),\r\n    a_ptr_and_b: (*mut (f32, bool), (f64, bool)),\r\n    t: bool,\r\n    t_copy: bool,\r\n) -> bool {\r\n    let b_bool_ptr = core::ptr::addr_of!(a_ptr_and_b.1 .1) as *mut bool;\r\n    let t_or_t = t | t_copy;\r\n    let t_xor_t = t ^ t_copy;\r\n    (*b_bool_ptr) = t_or_t ^ t_xor_t;\r\n    let unused = a_ptr_and_b;\r\n    return a_ptr_and_b.1.1 == (*a_ptr).1;\r\n}\r\n\r\npub fn main() {\r\n    println!(\"{}\", first());\r\n}\r\n```\r\n\r\n`-C opt-level=0` results in `true` (which Miri agrees and is the right result), but `-C opt-level=3` miscompiles it to print `false`\r\n```console\r\n% rustc -Zmir-opt-level=0 -C opt-level=0 repro.rs && ./repro\r\ntrue\r\n% rustc -Zmir-opt-level=0 -C opt-level=3 repro.rs && ./repro\r\nfalse\r\n``` \r\n\r\nInterestingly, if you remove `unused` in function `second`, the miscompilation goes away. `-Zmir-opt-level=0` is required to prevent mir-opt from doing this.\r\n\r\nDirectly getting a `*mut` through `addr_of_mut!` in the first line of `second` also makes the bug go away.\r\n\r\n```console\r\nrustc --version -v\r\nrustc 1.71.0-nightly (2a8221dbd 2023-05-11)\r\nbinary: rustc\r\ncommit-hash: 2a8221dbdfd180a2d56d4b0089f4f3952d8c2bcd\r\ncommit-date: 2023-05-11\r\nhost: aarch64-apple-darwin\r\nrelease: 1.71.0-nightly\r\nLLVM version: 16.0.2\r\n```\r\n\r\ncc @nikic @RalfJung ", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/111502/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/111502/timeline", "performed_via_github_app": null, "state_reason": "completed"}