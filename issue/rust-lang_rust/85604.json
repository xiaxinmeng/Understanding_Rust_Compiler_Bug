{"url": "https://api.github.com/repos/rust-lang/rust/issues/85604", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/85604/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/85604/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/85604/events", "html_url": "https://github.com/rust-lang/rust/issues/85604", "id": 899059168, "node_id": "MDU6SXNzdWU4OTkwNTkxNjg=", "number": 85604, "title": "IPv6 Unicast Interface", "user": {"login": "CDirkx", "id": 11176562, "node_id": "MDQ6VXNlcjExMTc2NTYy", "avatar_url": "https://avatars.githubusercontent.com/u/11176562?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CDirkx", "html_url": "https://github.com/CDirkx", "followers_url": "https://api.github.com/users/CDirkx/followers", "following_url": "https://api.github.com/users/CDirkx/following{/other_user}", "gists_url": "https://api.github.com/users/CDirkx/gists{/gist_id}", "starred_url": "https://api.github.com/users/CDirkx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CDirkx/subscriptions", "organizations_url": "https://api.github.com/users/CDirkx/orgs", "repos_url": "https://api.github.com/users/CDirkx/repos", "events_url": "https://api.github.com/users/CDirkx/events{/privacy}", "received_events_url": "https://api.github.com/users/CDirkx/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650846969, "node_id": "MDU6TGFiZWw2NTA4NDY5Njk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-tracking-issue", "name": "C-tracking-issue", "color": "f5f1fd", "default": false, "description": "Category: A tracking issue for an RFC or an unstable feature."}, {"id": 2011781731, "node_id": "MDU6TGFiZWwyMDExNzgxNzMx", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs", "name": "T-libs", "color": "bfd4f2", "default": false, "description": "Relevant to the library team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2021-05-23T16:38:06Z", "updated_at": "2023-02-22T06:05:49Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This issue is split out of the larger discussion around stabilization of the `ip` feature (tracking issue: #27709). The focus of this issue on the question of what interface Rust should provide for IPv6 unicast adresses.\r\n\r\nThe current unstable interface is as follows:\r\n\r\n```rust\r\nimpl Ipv6Addr {\r\n    fn is_unicast_global(&self) -> bool;\r\n    fn is_unicast_link_local(&self) -> bool;\r\n    fn is_unicast_link_local_strict(&self) -> bool;\r\n    fn is_unicast_site_local(&self) -> bool;\r\n}\r\n```\r\n\r\n## Open Problems\r\n\r\n### Behaviour of `is_unicast_link_local`/`is_unicast_link_local_strict`\r\n\r\nConcern was raised about the need for both `is_unicast_link_local` and `is_unicast_link_local_strict`(https://github.com/rust-lang/rust/pull/66584#issuecomment-574036125). `is_unicast_link_local` tests if an address is in `FE80::/10`, `is_unicast_link_local_strict` in the stricter `FE80::/64`. For a time it was unclear which interpretation was the correct one, see https://github.com/rust-lang/rust/pull/76098#issue-475853748 for a more complete overview. However, it was mentioned (https://github.com/rust-lang/rust/pull/76098#issuecomment-705928605) that [IETF RFC #5156 Section 2.4](https://datatracker.ietf.org/doc/html/rfc5156#section-2.4) defines `FE80::/10` as the link-local unicast addresses, and that other programming languages and the linux kernel all use `FE80::/10` (https://github.com/rust-lang/rust/pull/76098#issuecomment-706916840, https://github.com/rust-lang/rust/pull/76098#issuecomment-705928605). The conclusion seems to be that the current implementation of `is_unicast_link_local` is correct and consistent with other implementations, `is_unicast_link_local_strict` could be removed.\r\n\r\nUnresolved: Should `is_unicast_link_local_strict` be removed?\r\n\r\n### Deprecation of site-local addresses\r\n\r\nUnicast site-local addresses were deprecated in [IETF RFC #3879](https://datatracker.ietf.org/doc/html/rfc3879), see also [RFC #4291 Section 2.5.7](https://datatracker.ietf.org/doc/html/rfc4291#section-2.5.7). Any new implementation must no longer support the special behaviour of site-local addresses. This is mentioned in the docs of `is_unicast_site_local` and already implemented in `is_unicast_global`, which considers site-local addresses to be global.\r\n\r\nFor reference; .NET has [IsIPv6SiteLocal](https://docs.microsoft.com/en-us/dotnet/api/system.net.ipaddress.isipv6sitelocal?view=net-5.0), Python has [is_site_local](https://docs.python.org/3/library/ipaddress.html#ipaddress.IPv6Address.is_site_local) but mentions that is has been deprecated.\r\n\r\nUnresolved: Should `is_unicast_site_local` be removed? Should `SiteLocal` be included in a possible `IPv6UnicastScope`?\r\n\r\n### Introduce `IPv6UnicastScope`\r\nIt was suggested (https://github.com/rust-lang/rust/pull/76098#issuecomment-735019872) to replace the existing unicast interface with an enum `IPv6UnicastScope`, similar to `IPv6MulticastScope`:\r\n\r\n```rust\r\nimpl Ipv6Addr {\r\n    fn unicast_scope(&self) -> Option<IPv6UnicastScope>\r\n}\r\n```\r\n\r\nPositive reaction (https://github.com/rust-lang/rust/pull/76098#issuecomment-735020358, https://github.com/rust-lang/rust/pull/76098#issuecomment-760762274)\r\n\r\nUnresolved: What would be the definition of `IPv6UnicastScope`? \r\n\r\n\r\n## RFCs\r\n\r\n- Unicast Adresses: [IETF RFC #4291 Section 2.5](https://datatracker.ietf.org/doc/html/rfc4291#section-2.5)\r\n- Unique Local IPv6 Unicast Addresses: [IETF RFC #4193](https://datatracker.ietf.org/doc/html/rfc4193)\r\n- Deprecating Site Local Addresses: [IETF RFC #3879](https://datatracker.ietf.org/doc/html/rfc3879)\r\n- Special-Use IPv6 Addresses: [IETF RFC #5156](https://datatracker.ietf.org/doc/html/rfc5156)\r\n\r\n## Previous Discussion\r\n\r\n- stabilize the \"ip\" feature: [PR #66584](https://github.com/rust-lang/rust/pull/66584)\r\n- Stabilize the \"IP\" feature: [PR #76098](https://github.com/rust-lang/rust/pull/76098)\r\n- Stabilize the \"IP\" feature (continued from #76098): [PR #85585](https://github.com/rust-lang/rust/pull/85585)", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/85604/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/85604/timeline", "performed_via_github_app": null, "state_reason": null}