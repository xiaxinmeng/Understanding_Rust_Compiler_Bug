{"url": "https://api.github.com/repos/rust-lang/rust/issues/15019", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/15019/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/15019/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/15019/events", "html_url": "https://github.com/rust-lang/rust/issues/15019", "id": 36026412, "node_id": "MDU6SXNzdWUzNjAyNjQxMg==", "number": 15019, "title": "dataflow: use CFGIndex directly as bitvector index", "user": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-06-18T20:51:57Z", "updated_at": "2014-07-18T20:01:46Z", "closed_at": "2014-07-18T20:01:46Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "One of the artifacts left over from the old dataflow analysis code was that it had a `NodeId` to bitvector index mapping that it maintained, since the `NodeId`s in question were often sparse and also could fall into a range far from starting from zero.\n\nWhen @pnkfelix converted the code to use the control-flow-graph abstraction, he switched things so that the `CFGIndex` instead mapped to the relevant bitvector index, and then a different table mapped `NodeId` to `CFGIndex`.\n\nThe first aforementioned table is `index_to_bitset`, here: https://github.com/rust-lang/rust/pull/14873/files#diff-158b34791d327b238be103c2d1867e71R48\n\nThat's fine, except that the assumptions that motivated using a bitvector index distinct from `NodeId` (sparse, and starts from from zero) may not hold for `CFGIndex`.\n\nMore specifically, `CFGIndex` _definitely_ starts from zero.  And they are probably very very dense.\n\nIt would be good to:\n1. (Informally) confirm that `CFGIndex` is dense (i.e. gather some quick stats), and then\n2. If the above hypothesis holds up, then get rid of the separate bitvector indices, and just use the `CFGIndex` directly as the index into the bitvector for dataflow.\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/15019/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/15019/timeline", "performed_via_github_app": null, "state_reason": "completed"}