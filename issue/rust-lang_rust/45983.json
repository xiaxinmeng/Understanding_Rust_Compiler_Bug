{"url": "https://api.github.com/repos/rust-lang/rust/issues/45983", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/45983/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/45983/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/45983/events", "html_url": "https://github.com/rust-lang/rust/issues/45983", "id": 273782414, "node_id": "MDU6SXNzdWUyNzM3ODI0MTQ=", "number": 45983, "title": "Higher-ranked closure error messages should avoid  \"anonymous lifetime #2 defined on the body\"", "user": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 122406831, "node_id": "MDU6TGFiZWwxMjI0MDY4MzE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-closures", "name": "A-closures", "color": "f7e101", "default": false, "description": "Area: closures (`|args| { .. }`)"}, {"id": 693664741, "node_id": "MDU6TGFiZWw2OTM2NjQ3NDE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-mentor", "name": "E-needs-mentor", "color": "02e10c", "default": false, "description": "Call for participation: This issue is in need of a mentor."}, {"id": 693665463, "node_id": "MDU6TGFiZWw2OTM2NjU0NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/WG-diagnostics", "name": "WG-diagnostics", "color": "c2e0c6", "default": false, "description": "Working group: diagnostics"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2017-11-14T12:55:11Z", "updated_at": "2018-01-22T08:10:46Z", "closed_at": "2018-01-22T08:10:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When a higher-ranked closure is misused, as in:\r\n```Rust\r\nfn give_any<F: for<'r> FnOnce(&'r ())>(f: F) {\r\n    f(&());\r\n}\r\n\r\nfn main() {\r\n    let x = None;\r\n    give_any(|y| x = Some(y));\r\n}\r\n```\r\n\r\nThe compiler gives an obscure error message:\r\n```\r\nerror[E0495]: cannot infer an appropriate lifetime due to conflicting requirements\r\n --> src/main.rs:7:27\r\n  |\r\n7 |     give_any(|y| x = Some(y));\r\n  |                           ^\r\n  |\r\nnote: first, the lifetime cannot outlive the anonymous lifetime #2 defined on the body at 7:14...\r\n --> src/main.rs:7:14\r\n  |\r\n7 |     give_any(|y| x = Some(y));\r\n  |              ^^^^^^^^^^^^^^^\r\nnote: ...so that expression is assignable (expected &(), found &())\r\n --> src/main.rs:7:27\r\n  |\r\n7 |     give_any(|y| x = Some(y));\r\n  |                           ^\r\nnote: but, the lifetime must be valid for the expression at 7:14...\r\n --> src/main.rs:7:14\r\n  |\r\n7 |     give_any(|y| x = Some(y));\r\n  |              ^^^^^^^^^^^^^^^\r\nnote: ...so type `[closure@src/main.rs:7:14: 7:29 x:&mut std::option::Option<&()>]` of expression is valid during the expression\r\n --> src/main.rs:7:14\r\n  |\r\n7 |     give_any(|y| x = Some(y));\r\n  |              ^^^^^^^^^^^^^^^\r\n\r\nerror: aborting due to previous error\r\n```\r\n\r\nThe problem isn't that complicated: `give_any` was declared as taking `F: for<'r> FnOnce(&'r ())`, so it can pass a `y` can be of type `&'\u03b1 ()` for *any* lifetime `'\u03b1`, which might not live long enough to be assigned to `x`.\r\n\r\nHowever, the error message talks about an \"anonymous lifetime #2 defined on the body\", which is not something someone can understand without knowing the compiler. It should at least mention the problem argument.\r\n\r\ncc @cengizIO @estebank ", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/45983/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/45983/timeline", "performed_via_github_app": null, "state_reason": "completed"}