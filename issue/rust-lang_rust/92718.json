{"url": "https://api.github.com/repos/rust-lang/rust/issues/92718", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/92718/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/92718/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/92718/events", "html_url": "https://github.com/rust-lang/rust/issues/92718", "id": 1097678270, "node_id": "I_kwDOAAsO6M5BbT2-", "number": 92718, "title": "Incomplete/wrong debuginfo for references and pointers to slice-like unsized types", "user": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 203130, "node_id": "MDU6TGFiZWwyMDMxMzA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-debuginfo", "name": "A-debuginfo", "color": "f7e101", "default": false, "description": "Area: Debugging information in compiled programs (DWARF, PDB, etc.)"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2022-01-10T10:00:15Z", "updated_at": "2022-01-28T15:44:47Z", "closed_at": "2022-01-28T15:44:47Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "References and pointers to unsized types are \"fat\" which means that they hold not just the address of the pointee but also an additional field that contains either the size of the pointee's unsized field (for slice-like pointees) or the addr of the vtable (for trait object pointers). \r\n\r\nThe compiler generates debuginfo for this additional field in most cases (e.g. for `&[T]` and `*mut [T]`) -- but if the pointee is an unsized struct then the compiler generates regular thin pointer debuginfo which does not describe the additional field.\r\n\r\nExample:\r\n\r\n```rust\r\npub struct SomeUnsizedType {\r\n    pub a: u32,\r\n    pub b: u64,\r\n    pub c: [u8],\r\n}\r\n\r\npub fn references(_slice_ref: &[u64], _struct_ref: &SomeUnsizedType) {}\r\n```\r\n\r\nThe debuginfo for `&[u64]` looks as expected:\r\n\r\n```txt\r\n// the fat reference &[u64] is described as a struct with two fields,\r\n// `data_ptr` and `length`.\r\n< 1><0x0000012c>    DW_TAG_structure_type\r\n                      DW_AT_name                  &[u64]\r\n                      DW_AT_byte_size             0x00000010\r\n                      DW_AT_alignment             0x00000008\r\n< 2><0x00000133>      DW_TAG_member\r\n                        DW_AT_name                  data_ptr\r\n                        DW_AT_type                  <0x000000e3>\r\n                        DW_AT_alignment             0x00000008\r\n                        DW_AT_data_member_location  0\r\n< 2><0x0000013e>      DW_TAG_member\r\n                        DW_AT_name                  length\r\n                        DW_AT_type                  <0x000000f7>\r\n                        DW_AT_alignment             0x00000008\r\n                        DW_AT_data_member_location  8\r\n```\r\n\r\nBut `&SomeUnsizedType` does not have the additional field:\r\n\r\n```txt\r\n< 1><0x0000014a>    DW_TAG_pointer_type\r\n                      DW_AT_type                  <0x0000009b>\r\n                      DW_AT_name                  &SomeUnsizedType\r\n                      DW_AT_address_class         0x00000000\r\n\r\n< 2><0x0000009b>      DW_TAG_structure_type\r\n                        DW_AT_name                  SomeUnsizedType\r\n                        DW_AT_byte_size             0x00000010\r\n                        DW_AT_alignment             0x00000008\r\n< 3><0x000000a2>        DW_TAG_member\r\n                          DW_AT_name                  a\r\n                          DW_AT_type                  <0x0000010b>\r\n                          DW_AT_alignment             0x00000004\r\n                          DW_AT_data_member_location  8\r\n< 3><0x000000ad>        DW_TAG_member\r\n                          DW_AT_name                  b\r\n                          DW_AT_type                  <0x000000f0>\r\n                          DW_AT_alignment             0x00000008\r\n                          DW_AT_data_member_location  0\r\n< 3><0x000000b8>        DW_TAG_member\r\n                          DW_AT_name                  c\r\n                          DW_AT_type                  <0x00000112>\r\n                          DW_AT_alignment             0x00000001\r\n                          DW_AT_data_member_location  12\r\n\r\n// This is the type of the unsized field `c`\r\n< 1><0x00000112>    DW_TAG_array_type\r\n                      DW_AT_type                  <0x0000011e>\r\n< 2><0x00000117>      DW_TAG_subrange_type\r\n                        DW_AT_type                  <0x00000125>\r\n                        DW_AT_lower_bound           0x00000000\r\n< 1><0x0000011e>    DW_TAG_base_type\r\n                      DW_AT_name                  u8\r\n                      DW_AT_encoding              DW_ATE_unsigned\r\n                      DW_AT_byte_size             0x00000001\r\n< 1><0x00000125>    DW_TAG_base_type\r\n                      DW_AT_name                  __ARRAY_SIZE_TYPE__\r\n                      DW_AT_byte_size             0x00000008\r\n                      DW_AT_encoding              DW_ATE_unsigned\r\n\r\n```\r\n\r\nThe last field is described as a zero-sized array `[u8; 0]`. As a consequence, a debugger has no way of finding out how many elements the field actually holds. This affects a number of common types from the standard library, like `Rc`, `Arc`, `CStr` which all use unsized structs internally.\r\n \r\n### Meta\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.59.0-nightly (8f3238f89 2022-01-02)\r\nbinary: rustc\r\ncommit-hash: 8f3238f898163f09726c3d2b2cc9bafb09da26f3\r\ncommit-date: 2022-01-02\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.59.0-nightly\r\nLLVM version: 13.0.0\r\n```\r\n ", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/92718/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/92718/timeline", "performed_via_github_app": null, "state_reason": "completed"}