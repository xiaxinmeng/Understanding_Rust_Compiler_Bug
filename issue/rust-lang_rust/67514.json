{"url": "https://api.github.com/repos/rust-lang/rust/issues/67514", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/67514/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/67514/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/67514/events", "html_url": "https://github.com/rust-lang/rust/issues/67514", "id": 541434931, "node_id": "MDU6SXNzdWU1NDE0MzQ5MzE=", "number": 67514, "title": "Crash with `or_patterns` in irrefutable match", "user": {"login": "Patryk27", "id": 3395477, "node_id": "MDQ6VXNlcjMzOTU0Nzc=", "avatar_url": "https://avatars.githubusercontent.com/u/3395477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Patryk27", "html_url": "https://github.com/Patryk27", "followers_url": "https://api.github.com/users/Patryk27/followers", "following_url": "https://api.github.com/users/Patryk27/following{/other_user}", "gists_url": "https://api.github.com/users/Patryk27/gists{/gist_id}", "starred_url": "https://api.github.com/users/Patryk27/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Patryk27/subscriptions", "organizations_url": "https://api.github.com/users/Patryk27/orgs", "repos_url": "https://api.github.com/users/Patryk27/repos", "events_url": "https://api.github.com/users/Patryk27/events{/privacy}", "received_events_url": "https://api.github.com/users/Patryk27/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}, {"id": 1506199886, "node_id": "MDU6TGFiZWwxNTA2MTk5ODg2", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-or_patterns", "name": "F-or_patterns", "color": "f9c0cc", "default": false, "description": "`#![feature(or_patterns)]`"}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-22T10:43:53Z", "updated_at": "2020-02-04T12:12:02Z", "closed_at": "2020-02-04T01:23:15Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\n\r\n```rust\r\n#![feature(or_patterns)]\r\n\r\nfn foo((Some(_) | None): Option<u32>) {\r\n    //\r\n}\r\n```\r\n([playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=7f5700418482bd32f35f760dc7a2a006))\r\n\r\n... crashes on nightly with:\r\n```\r\nerror: internal compiler error: match pairs [MatchPair { place: _1, pattern: Pat { ty: std::option::Option<u32>, span: src/lib.rs:3:9: 3:23, kind: Or { pats: [Pat { ty: std::option::Option<u32>, span: src/lib.rs:3:9: 3:16, kind: Variant { adt_def: std::option::Option, substs: [u32], variant_index: 1, subpatterns: [FieldPat { field: field[0], pattern: Pat { ty: u32, span: src/lib.rs:3:14: 3:15, kind: Wild } }] } }, Pat { ty: std::option::Option<u32>, span: src/lib.rs:3:19: 3:23, kind: Variant { adt_def: std::option::Option, substs: [u32], variant_index: 0, subpatterns: [] } }] } } }] remaining after simplifying irrefutable pattern\r\n```\r\n\r\n<details>\r\n<summary>Backtrace</summary>\r\n\r\n```\r\nwarning: the feature `or_patterns` is incomplete and may cause the compiler to crash\r\n --> src/lib.rs:1:12\r\n  |\r\n1 | #![feature(or_patterns)]\r\n  |            ^^^^^^^^^^^\r\n  |\r\n  = note: `#[warn(incomplete_features)]` on by default\r\n\r\nwarning: function is never used: `foo`\r\n --> src/lib.rs:3:4\r\n  |\r\n3 | fn foo((Some(_) | None): Option<u32>) {\r\n  |    ^^^\r\n  |\r\n  = note: `#[warn(dead_code)]` on by default\r\n\r\nerror: internal compiler error: match pairs [MatchPair { place: _1, pattern: Pat { ty: std::option::Option<u32>, span: src/lib.rs:3:9: 3:23, kind: Or { pats: [Pat { ty: std::option::Option<u32>, span: src/lib.rs:3:9: 3:16, kind: Variant { adt_def: std::option::Option, substs: [u32], variant_index: 1, subpatterns: [FieldPat { field: field[0], pattern: Pat { ty: u32, span: src/lib.rs:3:14: 3:15, kind: Wild } }] } }, Pat { ty: std::option::Option<u32>, span: src/lib.rs:3:19: 3:23, kind: Variant { adt_def: std::option::Option, substs: [u32], variant_index: 0, subpatterns: [] } }] } } }] remaining after simplifying irrefutable pattern\r\n --> src/lib.rs:3:9\r\n  |\r\n3 | fn foo((Some(_) | None): Option<u32>) {\r\n  |         ^^^^^^^^^^^^^^\r\n\r\nthread 'rustc' panicked at 'no errors encountered even though `delay_span_bug` issued', src/librustc_errors/lib.rs:347:17\r\nstack backtrace:\r\n   0: backtrace::backtrace::libunwind::trace\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.40/src/backtrace/libunwind.rs:88\r\n   1: backtrace::backtrace::trace_unsynchronized\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.40/src/backtrace/mod.rs:66\r\n   2: std::sys_common::backtrace::_print_fmt\r\n             at src/libstd/sys_common/backtrace.rs:84\r\n   3: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt\r\n             at src/libstd/sys_common/backtrace.rs:61\r\n   4: core::fmt::write\r\n             at src/libcore/fmt/mod.rs:1057\r\n   5: std::io::Write::write_fmt\r\n             at src/libstd/io/mod.rs:1426\r\n   6: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:65\r\n   7: std::sys_common::backtrace::print\r\n             at src/libstd/sys_common/backtrace.rs:50\r\n   8: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/panicking.rs:193\r\n   9: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:210\r\n  10: rustc_driver::report_ice\r\n  11: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:475\r\n  12: std::panicking::begin_panic\r\n  13: <rustc_errors::HandlerInner as core::ops::drop::Drop>::drop\r\n  14: core::ptr::real_drop_in_place\r\n  15: core::ptr::real_drop_in_place\r\n  16: core::ptr::real_drop_in_place\r\n  17: rustc_interface::interface::run_compiler_in_existing_thread_pool\r\n  18: std::thread::local::LocalKey<T>::with\r\n  19: scoped_tls::ScopedKey<T>::set\r\n  20: syntax::with_globals\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.42.0-nightly (fc5deca21 2019-12-21) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C codegen-units=1 -C debuginfo=2 --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\nend of query stack\r\nerror: could not compile `playground`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n</details>\r\n\r\nIt doesn't crash on current stable and beta, but it may be because they ignore the feature flag.", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/67514/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/67514/timeline", "performed_via_github_app": null, "state_reason": "completed"}