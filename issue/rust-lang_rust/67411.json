{"url": "https://api.github.com/repos/rust-lang/rust/issues/67411", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/67411/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/67411/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/67411/events", "html_url": "https://github.com/rust-lang/rust/issues/67411", "id": 539963631, "node_id": "MDU6SXNzdWU1Mzk5NjM2MzE=", "number": 67411, "title": "Forbid certain actions to be performed in certain functions", "user": {"login": "Mahdrentys", "id": 40216477, "node_id": "MDQ6VXNlcjQwMjE2NDc3", "avatar_url": "https://avatars.githubusercontent.com/u/40216477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mahdrentys", "html_url": "https://github.com/Mahdrentys", "followers_url": "https://api.github.com/users/Mahdrentys/followers", "following_url": "https://api.github.com/users/Mahdrentys/following{/other_user}", "gists_url": "https://api.github.com/users/Mahdrentys/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mahdrentys/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mahdrentys/subscriptions", "organizations_url": "https://api.github.com/users/Mahdrentys/orgs", "repos_url": "https://api.github.com/users/Mahdrentys/repos", "events_url": "https://api.github.com/users/Mahdrentys/events{/privacy}", "received_events_url": "https://api.github.com/users/Mahdrentys/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-18T22:38:19Z", "updated_at": "2019-12-18T23:10:11Z", "closed_at": "2019-12-18T23:10:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Sometimes we don't want certain actions to be performed when we call a specific function. For example, if we write real time stuff like an audio app we don't want allocations to be performed.\r\n\r\nSo we could have an attribute named `must_not_perform` :\r\n\r\n```rust\r\n#[must_not_perform(allocation)]\r\nfn audio_callback(...) {...}\r\n```\r\n\r\nAnd an attribute named `performs` which indicates that the function performs this action. So we would add `#[performs(allocation)]` to `Box::new`, `String::new` and all functions that do allocations in the standard library, and the compiler would walk down all the call stack of the function having a `must_not_perform` attribute to check that there is no call to a function with the corresponding `performs` attribute. And if there is, that would cause a compile error.\r\n\r\nIt would also be useful in async apps where we could forbid blocking calls, with `#[performs(blocking)]` added to the calls to filesystem and stuff like that in the standard library. The `#[must_not_perform(blocking)]` attribute could even be implicit in async functions.\r\n\r\nIt's in the spirit of Rust to catch as much as possible mistakes at compile time, and this kind of mistake can't be detected with unit tests.", "closed_by": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/67411/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/67411/timeline", "performed_via_github_app": null, "state_reason": "completed"}