{"url": "https://api.github.com/repos/rust-lang/rust/issues/86033", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/86033/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/86033/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/86033/events", "html_url": "https://github.com/rust-lang/rust/issues/86033", "id": 912370457, "node_id": "MDU6SXNzdWU5MTIzNzA0NTc=", "number": 86033, "title": "ICE when checking size_of of closure in const generics", "user": {"login": "iliakonnov", "id": 9402179, "node_id": "MDQ6VXNlcjk0MDIxNzk=", "avatar_url": "https://avatars.githubusercontent.com/u/9402179?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iliakonnov", "html_url": "https://github.com/iliakonnov", "followers_url": "https://api.github.com/users/iliakonnov/followers", "following_url": "https://api.github.com/users/iliakonnov/following{/other_user}", "gists_url": "https://api.github.com/users/iliakonnov/gists{/gist_id}", "starred_url": "https://api.github.com/users/iliakonnov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iliakonnov/subscriptions", "organizations_url": "https://api.github.com/users/iliakonnov/orgs", "repos_url": "https://api.github.com/users/iliakonnov/repos", "events_url": "https://api.github.com/users/iliakonnov/events{/privacy}", "received_events_url": "https://api.github.com/users/iliakonnov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 122406831, "node_id": "MDU6TGFiZWwxMjI0MDY4MzE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-closures", "name": "A-closures", "color": "f7e101", "default": false, "description": "Area: closures (`|args| { .. }`)"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 900795185, "node_id": "MDU6TGFiZWw5MDA3OTUxODU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-eval", "name": "A-const-eval", "color": "f7e101", "default": false, "description": "Area: constant evaluation (mir interpretation)"}, {"id": 1282665911, "node_id": "MDU6TGFiZWwxMjgyNjY1OTEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-generics", "name": "A-const-generics", "color": "f7e101", "default": false, "description": "Area: const generics (parameters and arguments)"}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}, {"id": 1486687397, "node_id": "MDU6TGFiZWwxNDg2Njg3Mzk3", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-const_generics", "name": "F-const_generics", "color": "f9c0cc", "default": false, "description": "`#![feature(const_generics)]`"}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}, {"id": 2341291797, "node_id": "MDU6TGFiZWwyMzQxMjkxNzk3", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-generic_const_exprs", "name": "F-generic_const_exprs", "color": "f9c0cc", "default": false, "description": "`#![feature(generic_const_exprs)]`"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2021-06-05T17:55:38Z", "updated_at": "2021-12-11T06:58:23Z", "closed_at": "2021-12-11T06:58:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "In some cases compiler panicks when, I believe, computing const generic argument containing `std::mem::size_of::<T>()`, where `T` is some closure type. Interestingly, it works well when I put closure into associated type, so expression looks like `size_of::<T::Assoc>()`. Changing closure type to something more simple makes everything fine.\r\n\r\n### Code\r\n\r\nThis gives panic: ([playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=e243c731e0ffb26c7032d0f6e881abbe))\r\n\r\n```Rust\r\n#![feature(const_generics)]\r\n#![feature(const_evaluatable_checked)]\r\n\r\npub trait IsTrue<const T: bool> {}\r\nimpl IsTrue<true> for () {}\r\n\r\npub trait IsZST {}\r\n\r\nimpl<T> IsZST for T\r\nwhere\r\n    (): IsTrue<{ std::mem::size_of::<T>() == 0 }>\r\n{}\r\n\r\nfn func() -> impl IsZST {\r\n    // Changing closure to unit type makes code to compile\r\n    || {}\r\n}\r\n```\r\n\r\nInterestingly, following code also requires closure type to be ZST, but compiles well: ([playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=294fd580396b1ff4098fd29e1f21eb55))\r\n\r\n```rust\r\n#![feature(const_generics)]\r\n#![feature(const_evaluatable_checked)]\r\n\r\npub trait IsTrue<const T: bool> {}\r\nimpl IsTrue<true> for () {}\r\n\r\npub trait HaveAssociatedType {\r\n    type Assoc;\r\n}\r\n\r\npub struct SomeStruct<T>(T);\r\n\r\nimpl<T> HaveAssociatedType for SomeStruct<T> {\r\n    type Assoc = T;\r\n}\r\n\r\npub trait AssocIsZST {}\r\n\r\nimpl<T> AssocIsZST for T\r\nwhere\r\n    T: HaveAssociatedType,\r\n    (): IsTrue<{ std::mem::size_of::<T::Assoc>() == 0 }>\r\n{}\r\n\r\nfn func() -> impl AssocIsZST {\r\n    SomeStruct(|| {})\r\n}\r\n```\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.54.0-nightly (c79419af0 2021-06-04)\r\nbinary: rustc\r\ncommit-hash: c79419af0721c614d050f09b95f076da09d37b0d\r\ncommit-date: 2021-06-04\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.54.0-nightly\r\nLLVM version: 12.0.1\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nerror: internal compiler error: compiler/rustc_middle/src/ty/sty.rs:396:19: Unexpected representation of upvar types tuple Bound(DebruijnIndex(0), BoundTy { var: 1, kind: Anon })\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nthread 'rustc' panicked at 'Box<Any>', compiler/rustc_errors/src/lib.rs:1007:9\r\nstack backtrace:\r\n   0: std::panicking::begin_panic\r\n   1: std::panic::panic_any\r\n   2: rustc_errors::HandlerInner::bug\r\n   3: rustc_errors::Handler::bug\r\n   4: rustc_middle::ty::context::tls::with_opt\r\n   5: rustc_middle::util::bug::opt_span_bug_fmt\r\n   6: rustc_middle::util::bug::bug_fmt\r\n   7: rustc_middle::ty::layout::LayoutCx<rustc_middle::ty::context::TyCtxt>::layout_raw_uncached\r\n   8: rustc_middle::ty::layout::layout_raw\r\n   9: rustc_query_impl::<impl rustc_query_system::query::config::QueryAccessors<rustc_query_impl::plumbing::QueryCtxt> for rustc_query_impl::queries::layout_raw>::compute\r\n  10: rustc_query_system::query::plumbing::get_query_impl\r\n  11: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::layout_raw\r\n  12: <rustc_middle::ty::layout::LayoutCx<rustc_middle::ty::query::TyCtxtAt> as rustc_target::abi::LayoutOf>::layout_of\r\n  13: rustc_mir::interpret::step::<impl rustc_mir::interpret::eval_context::InterpCx<M>>::eval_rvalue_into_place\r\n  14: rustc_mir::interpret::step::<impl rustc_mir::interpret::eval_context::InterpCx<M>>::run\r\n  15: rustc_mir::const_eval::eval_queries::eval_to_allocation_raw_provider\r\n  16: rustc_query_impl::<impl rustc_query_system::query::config::QueryAccessors<rustc_query_impl::plumbing::QueryCtxt> for rustc_query_impl::queries::eval_to_allocation_raw>::compute\r\n  17: rustc_query_system::query::plumbing::get_query_impl\r\n  18: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::eval_to_allocation_raw\r\n  19: rustc_mir::const_eval::eval_queries::eval_to_const_value_raw_provider\r\n  20: rustc_query_impl::<impl rustc_query_system::query::config::QueryAccessors<rustc_query_impl::plumbing::QueryCtxt> for rustc_query_impl::queries::eval_to_const_value_raw>::compute\r\n  21: rustc_query_system::query::plumbing::get_query_impl\r\n  22: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::eval_to_const_value_raw\r\n  23: rustc_middle::mir::interpret::queries::<impl rustc_middle::ty::context::TyCtxt>::const_eval_global_id\r\n  24: rustc_middle::mir::interpret::queries::<impl rustc_middle::ty::context::TyCtxt>::const_eval_resolve\r\n  25: rustc_infer::infer::InferCtxt::const_eval_resolve\r\n  26: rustc_trait_selection::traits::fulfill::FulfillProcessor::progress_changed_obligations::{{closure}}\r\n  27: rustc_trait_selection::traits::fulfill::FulfillProcessor::progress_changed_obligations\r\n  28: rustc_data_structures::obligation_forest::ObligationForest<O>::process_obligations\r\n  29: <rustc_trait_selection::traits::fulfill::FulfillmentContext as rustc_infer::traits::engine::TraitEngine>::select_where_possible\r\n  30: rustc_typeck::check::fn_ctxt::_impl::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::resolve_vars_with_obligations\r\n  31: rustc_typeck::check::coercion::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::try_coerce\r\n  32: rustc_typeck::check::coercion::CoerceMany<E>::coerce_inner\r\n  33: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_return_expr\r\n  34: rustc_typeck::check::check::check_fn\r\n  35: rustc_typeck::check::inherited::InheritedBuilder::enter\r\n  36: rustc_typeck::check::typeck\r\n  37: rustc_query_system::query::plumbing::get_query_impl\r\n  38: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::typeck\r\n  39: rustc_middle::ty::context::TyCtxt::typeck_opt_const_arg\r\n  40: rustc_mir_build::build::mir_built\r\n  41: rustc_query_system::query::plumbing::get_query_impl\r\n  42: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::mir_built\r\n  43: rustc_mir::transform::check_unsafety::unsafety_check_result\r\n  44: core::ops::function::FnOnce::call_once\r\n  45: rustc_query_system::query::plumbing::get_query_impl\r\n  46: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::unsafety_check_result\r\n  47: rustc_mir::transform::mir_const\r\n  48: rustc_query_system::query::plumbing::get_query_impl\r\n  49: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::mir_const\r\n  50: rustc_mir::transform::mir_promoted\r\n  51: rustc_query_system::query::plumbing::get_query_impl\r\n  52: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::mir_promoted\r\n  53: rustc_mir::borrow_check::mir_borrowck\r\n  54: core::ops::function::FnOnce::call_once\r\n  55: rustc_query_system::query::plumbing::get_query_impl\r\n  56: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::mir_borrowck\r\n  57: rustc_typeck::collect::type_of::type_of\r\n  58: rustc_query_system::query::plumbing::get_query_impl\r\n  59: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::type_of\r\n  60: rustc_typeck::check::check::check_item_type\r\n  61: rustc_middle::hir::map::Map::visit_item_likes_in_module\r\n  62: rustc_typeck::check::check::check_mod_item_types\r\n  63: rustc_query_system::query::plumbing::get_query_impl\r\n  64: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::check_mod_item_types\r\n  65: rustc_session::utils::<impl rustc_session::session::Session>::time\r\n  66: rustc_typeck::check_crate\r\n  67: rustc_interface::passes::analysis\r\n  68: rustc_query_system::query::plumbing::get_query_impl\r\n  69: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::analysis\r\n  70: rustc_interface::passes::QueryContext::enter\r\n  71: rustc_span::with_session_globals\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.54.0-nightly (c79419af0 2021-06-04) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C codegen-units=1 -C debuginfo=2 --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [layout_raw] computing layout of `[closure@src/lib.rs:16:5: 16:10]`\r\n#1 [eval_to_allocation_raw] const-evaluating + checking `<impl at src/lib.rs:9:1: 12:3>::{constant#0}`\r\n#2 [eval_to_const_value_raw] simplifying constant for the type system `<impl at src/lib.rs:9:1: 12:3>::{constant#0}`\r\n#3 [typeck] type-checking `func`\r\n#4 [mir_built] building MIR for `func`\r\n#5 [unsafety_check_result] unsafety-checking `func`\r\n#6 [mir_const] processing MIR for `func`\r\n#7 [mir_promoted] processing `func`\r\n#8 [mir_borrowck] borrow-checking `func`\r\n#9 [type_of] computing type of `func::{opaque#0}`\r\n#10 [check_mod_item_types] checking item types in top-level module\r\n#11 [analysis] running analysis passes on this crate\r\nend of query stack\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/86033/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/86033/timeline", "performed_via_github_app": null, "state_reason": "completed"}