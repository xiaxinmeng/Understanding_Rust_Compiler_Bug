{"url": "https://api.github.com/repos/rust-lang/rust/issues/107292", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/107292/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/107292/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/107292/events", "html_url": "https://github.com/rust-lang/rust/issues/107292", "id": 1556525256, "node_id": "I_kwDOAAsO6M5cxrDI", "number": 107292, "title": "Bad advice given for arr[0i32.into()]", "user": {"login": "d0sboots", "id": 459704, "node_id": "MDQ6VXNlcjQ1OTcwNA==", "avatar_url": "https://avatars.githubusercontent.com/u/459704?v=4", "gravatar_id": "", "url": "https://api.github.com/users/d0sboots", "html_url": "https://github.com/d0sboots", "followers_url": "https://api.github.com/users/d0sboots/followers", "following_url": "https://api.github.com/users/d0sboots/following{/other_user}", "gists_url": "https://api.github.com/users/d0sboots/gists{/gist_id}", "starred_url": "https://api.github.com/users/d0sboots/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/d0sboots/subscriptions", "organizations_url": "https://api.github.com/users/d0sboots/orgs", "repos_url": "https://api.github.com/users/d0sboots/repos", "events_url": "https://api.github.com/users/d0sboots/events{/privacy}", "received_events_url": "https://api.github.com/users/d0sboots/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1183099971, "node_id": "MDU6TGFiZWwxMTgzMDk5OTcx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-suggestion-diagnostics", "name": "A-suggestion-diagnostics", "color": "f7e101", "default": false, "description": "Area: suggestions generated by the compiler applied by cargo fix"}, {"id": 1624891239, "node_id": "MDU6TGFiZWwxNjI0ODkxMjM5", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-incorrect", "name": "D-incorrect", "color": "c9f7a3", "default": false, "description": "A diagnostic that is giving misleading or incorrect information"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2023-01-25T11:58:35Z", "updated_at": "2023-02-07T19:38:02Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "### Code\r\n\r\n```Rust\r\nfn main() {\r\n    let arr: [u32; 3] = [0, 1, 2];\r\n    let idx = 0i32;\r\n    println!(\"{}\", arr[idx.into()]);\r\n}\r\n```\r\n\r\n\r\n### Current output\r\n\r\n```Shell\r\nerror[E0282]: type annotations needed\r\n --> src/main.rs:4:20\r\n  |\r\n4 |     println!(\"{}\", arr[idx.into()]);\r\n  |                    ^^^^^^^^^^^^^^^ cannot infer type of the type parameter `T` declared on the associated function `new_display`\r\n  |\r\n  = note: this error originates in the macro `$crate::format_args_nl` which comes from the expansion of the macro `println` (in Nightly builds, run with -Z macro-backtrace for more info)\r\nhelp: consider specifying the generic argument\r\n  |\r\n4 |     println!(\"{}\", arr[idx.into()]::<T>);\r\n  |                                   +++++\r\n\r\nFor more information about this error, try `rustc --explain E0282`.\r\n```\r\n\r\n\r\n### Desired output\r\n\r\nI'm too new to Rust to say exactly, but:\r\n- It should explain where the problem is (the issue is the `idx.into()` expression, not the outer expression it is highlighting\r\n- It should not suggest a \"fix\" of adding `::<T>`, which is not syntactically valid here\r\n\r\n### Rationale and extra context\r\n\r\nNaively, one one expect that the requirement of array access being `usize` means an `into()` would work here. Clearly, that's not the case but I'm still not sure why.\r\n\r\n### Other cases\r\n\r\n```Rust\r\nfn main() {\r\n    let arr: [u32; 3] = [0, 1, 2];\r\n    let idx = 0i32;\r\n    let val = arr[idx.into()];\r\n    println!(\"{}\", val);\r\n}\r\n```\r\n\r\n*still* gives bad advice, although less catastrophically:\r\n```\r\nerror[E0282]: type annotations needed\r\n --> src/main.rs:4:9\r\n  |\r\n4 |     let val = arr[idx.into()];\r\n  |         ^^^\r\n  |\r\nhelp: consider giving `val` an explicit type\r\n  |\r\n4 |     let val: _ = arr[idx.into()];\r\n  |            +++\r\n\r\nFor more information about this error, try `rustc --explain E0282`.\r\n```\r\n\r\nOnly when you take that bad advice, but with an explicit type instead of _, do you get a useful message:\r\n```rust\r\nfn main() {\r\n    let arr: [u32; 3] = [0, 1, 2];\r\n    let idx = 0i32;\r\n    let val: u32 = arr[idx.into()];\r\n    println!(\"{}\", val);\r\n}\r\n```\r\n\r\n```\r\nerror[E0282]: type annotations needed\r\n --> src/main.rs:4:28\r\n  |\r\n4 |     let val: u32 = arr[idx.into()];\r\n  |                            ^^^^\r\n  |\r\nhelp: try using a fully qualified path to specify the expected types\r\n  |\r\n4 |     let val: u32 = arr[<i32 as Into<T>>::into(idx)];\r\n  |                        +++++++++++++++++++++++   ~\r\n\r\nFor more information about this error, try `rustc --explain E0282`.\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\n_No response_", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/107292/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/107292/timeline", "performed_via_github_app": null, "state_reason": null}