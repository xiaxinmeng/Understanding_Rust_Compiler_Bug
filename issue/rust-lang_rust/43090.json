{"url": "https://api.github.com/repos/rust-lang/rust/issues/43090", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/43090/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/43090/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/43090/events", "html_url": "https://github.com/rust-lang/rust/issues/43090", "id": 241028220, "node_id": "MDU6SXNzdWUyNDEwMjgyMjA=", "number": 43090, "title": "Add `as_str` method for `str::Split(Whitespace)`", "user": {"login": "crumblingstatue", "id": 1521976, "node_id": "MDQ6VXNlcjE1MjE5NzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1521976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/crumblingstatue", "html_url": "https://github.com/crumblingstatue", "followers_url": "https://api.github.com/users/crumblingstatue/followers", "following_url": "https://api.github.com/users/crumblingstatue/following{/other_user}", "gists_url": "https://api.github.com/users/crumblingstatue/gists{/gist_id}", "starred_url": "https://api.github.com/users/crumblingstatue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/crumblingstatue/subscriptions", "organizations_url": "https://api.github.com/users/crumblingstatue/orgs", "repos_url": "https://api.github.com/users/crumblingstatue/repos", "events_url": "https://api.github.com/users/crumblingstatue/events{/privacy}", "received_events_url": "https://api.github.com/users/crumblingstatue/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 657353545, "node_id": "MDU6TGFiZWw2NTczNTM1NDU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-accepted", "name": "C-feature-accepted", "color": "f5f1fd", "default": false, "description": "Category: A feature request that has been accepted pending implementation."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-07-06T17:21:26Z", "updated_at": "2020-10-23T07:18:23Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Consider the following use case:\r\n\r\n```rust\r\n// A command interpreter with a \"print\" command, which prints what comes after it\r\nlet mut words = line.split_whitespace();\r\n\r\nmatch words.next() {\r\n    \"print\" => {\r\n        // How could we get the rest that comes after the command word?\r\n        // We could perhaps collect the words, and join them with a space, but that's lossy,\r\n        // and doesn't sound very efficient.\r\n        let rest;\r\n        println!(\"{}\", rest),\r\n    }\r\n    unk => println!(\"Unknown command: {}\", unk),\r\n}\r\n```\r\n\r\nSome iterators, like `str::Chars` already have an `as_str` method. The only question is whether it is possible to implement `as_str` for the Split API, without making any breaking changes.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/43090/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/43090/timeline", "performed_via_github_app": null, "state_reason": null}