{"url": "https://api.github.com/repos/rust-lang/rust/issues/36285", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/36285/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/36285/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/36285/events", "html_url": "https://github.com/rust-lang/rust/issues/36285", "id": 175123630, "node_id": "MDU6SXNzdWUxNzUxMjM2MzA=", "number": 36285, "title": "Inconsistent type inferring", "user": {"login": "DenisKolodin", "id": 418920, "node_id": "MDQ6VXNlcjQxODkyMA==", "avatar_url": "https://avatars.githubusercontent.com/u/418920?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DenisKolodin", "html_url": "https://github.com/DenisKolodin", "followers_url": "https://api.github.com/users/DenisKolodin/followers", "following_url": "https://api.github.com/users/DenisKolodin/following{/other_user}", "gists_url": "https://api.github.com/users/DenisKolodin/gists{/gist_id}", "starred_url": "https://api.github.com/users/DenisKolodin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DenisKolodin/subscriptions", "organizations_url": "https://api.github.com/users/DenisKolodin/orgs", "repos_url": "https://api.github.com/users/DenisKolodin/repos", "events_url": "https://api.github.com/users/DenisKolodin/events{/privacy}", "received_events_url": "https://api.github.com/users/DenisKolodin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-09-05T20:17:25Z", "updated_at": "2016-09-06T01:44:35Z", "closed_at": "2016-09-05T23:34:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I've found the case where type inferring is inconsistent (I think so):\n\n``` rust\nuse std::any::Any;\nuse std::sync::{Arc, Mutex};\n\npub type Wild = Box<Any + 'static + Send>;\n\npub fn with_wild(_: Option<Arc<Wild>>) { }\n\nstruct Modest;\n\nfn main() {\n\n    // Works\n    with_wild(Some(Arc::new(Box::new(Mutex::new(Modest)))));\n\n    // Doesn't work\n    let fluffy = Some(Arc::new(Box::new(Mutex::new(Modest))));\n    with_wild(fluffy); \n\n}\n```\n\n[at playground](https://is.gd/b06Oov)\n\nIt fails with:\n\n``` rust\nerror[E0308]: mismatched types\n  --> <anon>:17:15\n   |\n17 |     with_wild(fluffy);\n   |               ^^^^^^ expected trait std::any::Any, found struct `std::sync::Mutex`\n   |\n   = note: expected type `std::option::Option<std::sync::Arc<Box<std::any::Any + Send + 'static>>>`\n   = note:    found type `std::option::Option<std::sync::Arc<Box<std::sync::Mutex<Modest>>>>`\n\nerror: aborting due to previous error\n```\n", "closed_by": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/36285/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/36285/timeline", "performed_via_github_app": null, "state_reason": "completed"}