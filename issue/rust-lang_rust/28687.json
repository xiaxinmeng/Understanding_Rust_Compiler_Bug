{"url": "https://api.github.com/repos/rust-lang/rust/issues/28687", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/28687/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/28687/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/28687/events", "html_url": "https://github.com/rust-lang/rust/issues/28687", "id": 108523789, "node_id": "MDU6SXNzdWUxMDg1MjM3ODk=", "number": 28687, "title": "Rules for matching against variable unclear.", "user": {"login": "XAMPPRocky", "id": 4464295, "node_id": "MDQ6VXNlcjQ0NjQyOTU=", "avatar_url": "https://avatars.githubusercontent.com/u/4464295?v=4", "gravatar_id": "", "url": "https://api.github.com/users/XAMPPRocky", "html_url": "https://github.com/XAMPPRocky", "followers_url": "https://api.github.com/users/XAMPPRocky/followers", "following_url": "https://api.github.com/users/XAMPPRocky/following{/other_user}", "gists_url": "https://api.github.com/users/XAMPPRocky/gists{/gist_id}", "starred_url": "https://api.github.com/users/XAMPPRocky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/XAMPPRocky/subscriptions", "organizations_url": "https://api.github.com/users/XAMPPRocky/orgs", "repos_url": "https://api.github.com/users/XAMPPRocky/repos", "events_url": "https://api.github.com/users/XAMPPRocky/events{/privacy}", "received_events_url": "https://api.github.com/users/XAMPPRocky/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-09-27T09:06:47Z", "updated_at": "2015-10-08T20:53:27Z", "closed_at": "2015-10-08T20:53:27Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "When you have a match statement against a variable the behaviour is unexpected.\n\n[I tried this code:](http://is.gd/7AZ2lx)\n\n```\nfn main() {\n    let x = 'x';\n    let c = 'c';\n    match c {\n        x => println!(\"Bug? {} {}\", x, c),\n    }\n\n    println!(\"x: {}\", x)\n}\n```\n#### I expected to to see this happen:\n\nEither get an error telling me that placing a variable won't do what I think it will do. Or allow this to happen, and allow for specific cases, as currently adding any extra arms returns a `unreachable pattern` error.\n#### Instead this happened:\n\nThis compiles with no errors, or warning, and prints out:\n\n```\nBug? c c\nx: x\n```\n## Meta\n\n`rustc --version --verbose`\n\n```\nrustc 1.3.0 (9a92aaf19 2015-09-15)\nbinary: rustc\ncommit-hash: 9a92aaf19a64603b02b4130fe52958cc12488900\ncommit-date: 2015-09-15\nhost: x86_64-apple-darwin\nrelease: 1.3.0\n```\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/28687/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/28687/timeline", "performed_via_github_app": null, "state_reason": "completed"}