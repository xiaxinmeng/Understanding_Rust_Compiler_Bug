{"url": "https://api.github.com/repos/rust-lang/rust/issues/12761", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/12761/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/12761/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/12761/events", "html_url": "https://github.com/rust-lang/rust/issues/12761", "id": 29014024, "node_id": "MDU6SXNzdWUyOTAxNDAyNA==", "number": 12761, "title": "Trait objects cannot call methods that take self by-value", "user": {"login": "lilyball", "id": 714, "node_id": "MDQ6VXNlcjcxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lilyball", "html_url": "https://github.com/lilyball", "followers_url": "https://api.github.com/users/lilyball/followers", "following_url": "https://api.github.com/users/lilyball/following{/other_user}", "gists_url": "https://api.github.com/users/lilyball/gists{/gist_id}", "starred_url": "https://api.github.com/users/lilyball/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lilyball/subscriptions", "organizations_url": "https://api.github.com/users/lilyball/orgs", "repos_url": "https://api.github.com/users/lilyball/repos", "events_url": "https://api.github.com/users/lilyball/events{/privacy}", "received_events_url": "https://api.github.com/users/lilyball/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-03-08T03:24:31Z", "updated_at": "2014-03-08T04:38:14Z", "closed_at": "2014-03-08T04:37:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As was brought up in [this reddit post](http://www.reddit.com/r/rust/comments/1zuwdj/help_designing_a_shrinker_for_quickcheck_or_how/), Trait objects cannot call methods that take self by-value. Even worse, the error message erroneously claims the desired method does not exist.\n\nIt seems to me that trait objects of the form `~Trait` should work with self-by-value methods. And trait objects of the form `&Trait` should produce an appropriate error message (just like calling the same method on a reference does).\n\nExample:\n\n``` rust\ntrait Foo {\n    fn foo(self) -> int;\n}\n\nstruct Bar;\nimpl Foo for Bar {\n    fn foo(self) -> int { 42i }\n}\n\nfn main() {\n    let bar = ~Bar as ~Foo;\n    let _x: int = bar.foo();\n}\n```\n\nThis produces:\n\n```\nUntitled.rs:12:19: 12:28 error: type `~Foo:Send` does not implement any method in scope named `foo`\nUntitled.rs:12     let _x: int = bar.foo();\n                                 ^~~~~~~~~\n```\n", "closed_by": {"login": "sfackler", "id": 1455697, "node_id": "MDQ6VXNlcjE0NTU2OTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1455697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfackler", "html_url": "https://github.com/sfackler", "followers_url": "https://api.github.com/users/sfackler/followers", "following_url": "https://api.github.com/users/sfackler/following{/other_user}", "gists_url": "https://api.github.com/users/sfackler/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfackler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfackler/subscriptions", "organizations_url": "https://api.github.com/users/sfackler/orgs", "repos_url": "https://api.github.com/users/sfackler/repos", "events_url": "https://api.github.com/users/sfackler/events{/privacy}", "received_events_url": "https://api.github.com/users/sfackler/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/12761/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/12761/timeline", "performed_via_github_app": null, "state_reason": "completed"}