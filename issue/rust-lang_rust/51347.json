{"url": "https://api.github.com/repos/rust-lang/rust/issues/51347", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/51347/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/51347/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/51347/events", "html_url": "https://github.com/rust-lang/rust/issues/51347", "id": 329099713, "node_id": "MDU6SXNzdWUzMjkwOTk3MTM=", "number": 51347, "title": "rust-gdb cannot pretty print for Option<T> where T: non C-style enum", "user": {"login": "foriequal0", "id": 5465658, "node_id": "MDQ6VXNlcjU0NjU2NTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5465658?v=4", "gravatar_id": "", "url": "https://api.github.com/users/foriequal0", "html_url": "https://github.com/foriequal0", "followers_url": "https://api.github.com/users/foriequal0/followers", "following_url": "https://api.github.com/users/foriequal0/following{/other_user}", "gists_url": "https://api.github.com/users/foriequal0/gists{/gist_id}", "starred_url": "https://api.github.com/users/foriequal0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/foriequal0/subscriptions", "organizations_url": "https://api.github.com/users/foriequal0/orgs", "repos_url": "https://api.github.com/users/foriequal0/repos", "events_url": "https://api.github.com/users/foriequal0/events{/privacy}", "received_events_url": "https://api.github.com/users/foriequal0/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 203130, "node_id": "MDU6TGFiZWwyMDMxMzA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-debuginfo", "name": "A-debuginfo", "color": "f7e101", "default": false, "description": "Area: Debugging information in compiled programs (DWARF, PDB, etc.)"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-06-04T15:14:55Z", "updated_at": "2018-07-27T16:52:32Z", "closed_at": "2018-07-27T16:52:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've tried this code:\r\n```rust\r\n// a.rs\r\nuse std::option::Option;\r\n\r\nenum Enum {A, B}\r\nenum Union { A(usize), B(usize) }\r\nenum Mixed { A(usize), B }\r\nenum Field { A { field: usize }, B { field: usize } }\r\n\r\nfn main() {\r\n    let enum_a = Enum::A;\r\n    let enum_b = Enum::B;\r\n    let enum_some_a = Option::Some(Enum::A);\r\n    let enum_some_b = Option::Some(Enum::B);\r\n    let enum_none: Option<Enum> = Option::None;\r\n    \r\n    let union_a = Union::A(42);\r\n    let union_b = Union::B(84);\r\n    let union_some_a = Option::Some(Union::A(42));\r\n    let union_some_b = Option::Some(Union::B(84));\r\n    let union_none: Option<Union> = Option::None;\r\n\r\n    let mixed_a = Mixed::A(42);\r\n    let mixed_b = Mixed::B;\r\n    let mixed_some_a = Option::Some(Mixed::A(42));\r\n    let mixed_some_b = Option::Some(Mixed::B);\r\n    let mixed_none: Option<Mixed> = Option::None;\r\n\r\n    let field_a = Field::A { field: 42 };\r\n    let field_b = Field::B { field: 84 };\r\n    let field_some_a = Option::Some(Field::A { field: 42 });\r\n    let field_some_b = Option::Some(Field::B { field: 84 });\r\n    let field_none: Option<Field> = Option::None;\r\n\r\n    let number = 42;\r\n    let number_some = Option::Some(42);\r\n    let number_none: Option<i32> = Option::None;\r\n\r\n    println!(\"yay\");\r\n}\r\n```\r\n\r\n```bash\r\nrustc -g a.rs -o a\r\nrust-gdb a\r\n# b 37\r\n# run\r\n# info locals\r\n```\r\n\r\nExpected:\r\nEverything should be pretty printed.\r\n\r\nThis happened:\r\n```gdb\r\nBreakpoint 1 at 0x62ce: file a.rs, line 38.\r\n[Thread debugging using libthread_db enabled]\r\nUsing host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\r\n\r\nBreakpoint 1, a::main () at a.rs:38\r\n38\t    println!(\"yay\");\r\nnumber_none = core::option::Option::None\r\nnumber_some = Some = {42}\r\nnumber = 42\r\nfield_none = <error reading variable>\r\nfield_some_b = <error reading variable>\r\nfield_some_a = <error reading variable>\r\nfield_b = B = {field = 84}\r\nfield_a = A = {field = 42}\r\nmixed_none = <error reading variable>\r\nmixed_some_b = <error reading variable>\r\nmixed_some_a = <error reading variable>\r\nmixed_b = a::Mixed::B\r\nmixed_a = A = {42}\r\nenum_none = Some = {(unknown: 2)}\r\nenum_some_b = Some = {a::Enum::B}\r\nenum_some_a = None\r\nenum_b = a::Enum::B\r\nenum_a = a::Enum::A\r\nunion_none = <error reading variable>\r\nunion_some_b = <error reading variable>\r\nunion_some_a = <error reading variable>\r\nunion_b = B = {84}\r\nunion_a = A = {42}\r\n```\r\nrust-gdb failed to pretty print every variable whose type is like ```Option<T: non C-style enum>```, although pretty printing variables of ```T``` itself is fine.\r\nMost weird cases are ```enum_*``` variables. ```enum_some_b``` is printed correctly, but ```enum_some_a``` and ```enum_none``` are printed incorrectly, not failed like other cases.\r\n```#[repr(C)]``` doesn't make any difference to result.\r\nIt seems to be fine for other data structures like ```struct```, ```struct <T>```\r\n\r\nMeta:\r\nI'm using Ubuntu 18.04.\r\n```\r\nrustc 1.28.0-nightly (990d8aa74 2018-05-25)\r\nbinary: rustc\r\ncommit-hash: 990d8aa743b1dda3cc0f68fe09524486261812c6\r\ncommit-date: 2018-05-25\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.28.0-nightly\r\nLLVM version: 6.0\r\n```\r\nYou can find this bug on Windows 10.\r\n```\r\nrustc 1.28.0-nightly (990d8aa74 2018-05-25)\r\nbinary: rustc\r\ncommit-hash: 990d8aa743b1dda3cc0f68fe09524486261812c6\r\ncommit-date: 2018-05-25\r\nhost: x86_64-pc-windows-gnu\r\nrelease: 1.28.0-nightly\r\nLLVM version: 6.0\r\n```", "closed_by": {"login": "foriequal0", "id": 5465658, "node_id": "MDQ6VXNlcjU0NjU2NTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5465658?v=4", "gravatar_id": "", "url": "https://api.github.com/users/foriequal0", "html_url": "https://github.com/foriequal0", "followers_url": "https://api.github.com/users/foriequal0/followers", "following_url": "https://api.github.com/users/foriequal0/following{/other_user}", "gists_url": "https://api.github.com/users/foriequal0/gists{/gist_id}", "starred_url": "https://api.github.com/users/foriequal0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/foriequal0/subscriptions", "organizations_url": "https://api.github.com/users/foriequal0/orgs", "repos_url": "https://api.github.com/users/foriequal0/repos", "events_url": "https://api.github.com/users/foriequal0/events{/privacy}", "received_events_url": "https://api.github.com/users/foriequal0/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/51347/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/51347/timeline", "performed_via_github_app": null, "state_reason": "completed"}