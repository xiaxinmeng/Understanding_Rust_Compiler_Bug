{"url": "https://api.github.com/repos/rust-lang/rust/issues/104502", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/104502/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/104502/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/104502/events", "html_url": "https://github.com/rust-lang/rust/issues/104502", "id": 1452231796, "node_id": "I_kwDOAAsO6M5Wj0x0", "number": 104502, "title": "How do I find out where the std error actually occurred?", "user": {"login": "Frozen1084", "id": 88446922, "node_id": "MDQ6VXNlcjg4NDQ2OTIy", "avatar_url": "https://avatars.githubusercontent.com/u/88446922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Frozen1084", "html_url": "https://github.com/Frozen1084", "followers_url": "https://api.github.com/users/Frozen1084/followers", "following_url": "https://api.github.com/users/Frozen1084/following{/other_user}", "gists_url": "https://api.github.com/users/Frozen1084/gists{/gist_id}", "starred_url": "https://api.github.com/users/Frozen1084/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Frozen1084/subscriptions", "organizations_url": "https://api.github.com/users/Frozen1084/orgs", "repos_url": "https://api.github.com/users/Frozen1084/repos", "events_url": "https://api.github.com/users/Frozen1084/events{/privacy}", "received_events_url": "https://api.github.com/users/Frozen1084/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-11-16T20:28:43Z", "updated_at": "2022-11-17T01:09:43Z", "closed_at": "2022-11-17T01:09:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is the vec error I get after using \"RUST_BACKTRACE=full\".\r\nIt has a very low chance of being wrong, it occurs about once a week. I can't reproduce this error in debug state.\r\nThe project has tens of thousands of lines and is in a working state. I can't find it by modifying the code. Although I have rewritten a lot of suspicious code.\r\nIs there any way to find out exactly where it is in main.rs?\r\n\r\n\r\nOr can we add a parameter like \"RUST_BACKTRACE=all\" to make the std-error contain information about main.rs?\r\n\r\n```\r\nthread '<unnamed>' panicked at 'insertion index (is 12) should be <= len (is 1)', library\\alloc\\src\\vec\\mod.rs:1379:13\r\nstack backtrace:\r\n   0:     0x7ff78b365a4f - std::backtrace_rs::backtrace::dbghelp::trace\r\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library\\std\\src\\..\\..\\backtrace\\src\\backtrace\\dbghelp.rs:98\r\n   1:     0x7ff78b365a4f - std::backtrace_rs::backtrace::trace_unsynchronized\r\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library\\std\\src\\..\\..\\backtrace\\src\\backtrace\\mod.rs:66\r\n   2:     0x7ff78b365a4f - std::sys_common::backtrace::_print_fmt\r\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library\\std\\src\\sys_common\\backtrace.rs:66\r\n   3:     0x7ff78b365a4f - std::sys_common::backtrace::_print::impl$0::fmt\r\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library\\std\\src\\sys_common\\backtrace.rs:45\r\n   4:     0x7ff78b2f882b - core::fmt::write\r\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library\\core\\src\\fmt\\mod.rs:1202\r\n   5:     0x7ff78b35842a - std::io::Write::write_fmt<std::sys::windows::stdio::Stderr>\r\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library\\std\\src\\io\\mod.rs:1679\r\n   6:     0x7ff78b36772c - std::sys_common::backtrace::_print\r\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library\\std\\src\\sys_common\\backtrace.rs:48\r\n   7:     0x7ff78b36772c - std::sys_common::backtrace::print\r\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library\\std\\src\\sys_common\\backtrace.rs:35\r\n   8:     0x7ff78b36772c - std::panicking::default_hook::closure$1\r\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library\\std\\src\\panicking.rs:295\r\n   9:     0x7ff78b368032 - std::panicking::default_hook\r\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library\\std\\src\\panicking.rs:314\r\n  10:     0x7ff78b368032 - std::panicking::rust_panic_with_hook\r\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library\\std\\src\\panicking.rs:698\r\n  11:     0x7ff78b367c05 - std::panicking::begin_panic_handler::closure$0\r\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library\\std\\src\\panicking.rs:588\r\n  12:     0x7ff78b367b4f - std::sys_common::backtrace::__rust_end_short_backtrace<std::panicking::begin_panic_handler::closure_env$0,never$>\r\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library\\std\\src\\sys_common\\backtrace.rs:138\r\n  13:     0x7ff78b367b24 - std::panicking::begin_panic_handler\r\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library\\std\\src\\panicking.rs:584\r\n  14:     0x7ff78b36e2b5 - core::panicking::panic_fmt\r\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library\\core\\src\\panicking.rs:142\r\n  15:     0x7ff78b36e1fb - alloc::vec::impl$1::insert::assert_failed\r\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library\\alloc\\src\\vec\\mod.rs:1379\r\n  16:     0x7ff78b248b8a - __ImageBase\r\n  17:     0x7ff78b285ff8 - __ImageBase\r\n  18:     0x7ff78b28f248 - __ImageBase\r\n  19:     0x7ff78b237df6 - __ImageBase\r\n  20:     0x7ff78b240817 - __ImageBase\r\n  21:     0x7ff78b364c4c - alloc::boxed::impl$44::call_once\r\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library\\alloc\\src\\boxed.rs:1940\r\n  22:     0x7ff78b364c4c - alloc::boxed::impl$44::call_once\r\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library\\alloc\\src\\boxed.rs:1940\r\n  23:     0x7ff78b364c4c - std::sys::windows::thread::impl$0::new::thread_start\r\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library\\std\\src\\sys\\windows\\thread.rs:56\r\n  24:     0x7ffb403e7034 - BaseThreadInitThunk\r\n  25:     0x7ffb417026a1 - RtlUserThreadStart\r\n```", "closed_by": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/104502/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/104502/timeline", "performed_via_github_app": null, "state_reason": "not_planned"}