{"url": "https://api.github.com/repos/rust-lang/rust/issues/43587", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/43587/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/43587/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/43587/events", "html_url": "https://github.com/rust-lang/rust/issues/43587", "id": 247086358, "node_id": "MDU6SXNzdWUyNDcwODYzNTg=", "number": 43587, "title": "Final link failed (with CARGO_INCREMENTAL)", "user": {"login": "vorner", "id": 11783500, "node_id": "MDQ6VXNlcjExNzgzNTAw", "avatar_url": "https://avatars.githubusercontent.com/u/11783500?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vorner", "html_url": "https://github.com/vorner", "followers_url": "https://api.github.com/users/vorner/followers", "following_url": "https://api.github.com/users/vorner/following{/other_user}", "gists_url": "https://api.github.com/users/vorner/gists{/gist_id}", "starred_url": "https://api.github.com/users/vorner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vorner/subscriptions", "organizations_url": "https://api.github.com/users/vorner/orgs", "repos_url": "https://api.github.com/users/vorner/repos", "events_url": "https://api.github.com/users/vorner/events{/privacy}", "received_events_url": "https://api.github.com/users/vorner/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37547, "node_id": "MDU6TGFiZWwzNzU0Nw==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-linkage", "name": "A-linkage", "color": "f7e101", "default": false, "description": "Area: linking into static, shared libraries and binaries"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 307747675, "node_id": "MDU6TGFiZWwzMDc3NDc2NzU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-incr-comp", "name": "A-incr-comp", "color": "f7e101", "default": false, "description": "Area: Incremental compilation"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-08-01T14:23:06Z", "updated_at": "2019-06-17T20:32:04Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Sometimes (it's not always reproducible and it doesn't happen with some specific code), I get a linker error complaining undefined references to rust functions in my project, something like this:\r\n\r\n```\r\n  = note: /home/vorner/work/pakon/aggregator/target/debug/deps/aggregator-57e8a9355952fffd.aggregator-keeper-query-tests.o: In function `aggregator::keeper::query::tests::time_to_system':\r\n          /home/vorner/work/pakon/aggregator/src/keeper/query.rs:414: undefined reference to `aggregator::keeper::query::Time::to_absolute::h1a0a7dea62a07bb1'\r\n          /home/vorner/work/pakon/aggregator/src/keeper/query.rs:421: undefined reference to `aggregator::keeper::query::Time::to_absolute::h1a0a7dea62a07bb1'\r\n          /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/../../../../x86_64-pc-linux-gnu/bin/ld: /home/vorner/work/pakon/aggregator/target/debug/deps/aggregator-57e8a9355952fffd: hidden symbol `_ZN10aggregator6keeper5query4Time11to_absolute17h1a0a7dea62a07bb1E' isn't defined\r\n          /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/../../../../x86_64-pc-linux-gnu/bin/ld: final link failed: Bad value\r\n          collect2: error: ld returned 1 exit status\r\n```\r\n\r\nThey don't go away even when I modify the sources and try to compile again. These things help:\r\n* Running `cargo clean` and trying again.\r\n* Running the compilation *without* CARGO_INCREMENTAL (I have it set in my environment).\r\n\r\nTherefore, I believe sometimes rustc produces and stores part of the compilation without the function present and tries to reuse it next time. I further suspect this might happen when the function is unused at the first compilation, but then I add a test that uses it \u2012 maybe some kind of optimisation producing the module (or struct's impl) without the code for the unused function and caching it, not noticing it is missing the next time.\r\n\r\nIt happens more often when I code with `cargo watch --no-restart -x test --all` in a separate terminal and save the file often (maybe simply because the compilation is run more often).\r\n\r\n```\r\n$ rustc --version --verbose\r\nrustc 1.21.0-nightly (aac223f4f 2017-07-30)\r\nbinary: rustc\r\ncommit-hash: aac223f4f5d5ca979c694b614d4db37a7200528d\r\ncommit-date: 2017-07-30\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.21.0-nightly\r\nLLVM version: 4.0\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/43587/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/43587/timeline", "performed_via_github_app": null, "state_reason": null}