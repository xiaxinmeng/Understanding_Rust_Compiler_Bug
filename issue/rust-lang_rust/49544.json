{"url": "https://api.github.com/repos/rust-lang/rust/issues/49544", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/49544/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/49544/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/49544/events", "html_url": "https://github.com/rust-lang/rust/issues/49544", "id": 310259996, "node_id": "MDU6SXNzdWUzMTAyNTk5OTY=", "number": 49544, "title": "Internal compiler error caused if statements involving an iterator adapter function use an undeclared type or module.", "user": {"login": "data-pup", "id": 16364986, "node_id": "MDQ6VXNlcjE2MzY0OTg2", "avatar_url": "https://avatars.githubusercontent.com/u/16364986?v=4", "gravatar_id": "", "url": "https://api.github.com/users/data-pup", "html_url": "https://github.com/data-pup", "followers_url": "https://api.github.com/users/data-pup/followers", "following_url": "https://api.github.com/users/data-pup/following{/other_user}", "gists_url": "https://api.github.com/users/data-pup/gists{/gist_id}", "starred_url": "https://api.github.com/users/data-pup/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/data-pup/subscriptions", "organizations_url": "https://api.github.com/users/data-pup/orgs", "repos_url": "https://api.github.com/users/data-pup/repos", "events_url": "https://api.github.com/users/data-pup/events{/privacy}", "received_events_url": "https://api.github.com/users/data-pup/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 46741598, "node_id": "MDU6TGFiZWw0Njc0MTU5OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-test", "name": "E-needs-test", "color": "02e10c", "default": false, "description": "Call for participation: writing correctness tests"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 889209675, "node_id": "MDU6TGFiZWw4ODkyMDk2NzU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-iterators", "name": "A-iterators", "color": "f7e101", "default": false, "description": "Area: Iterators"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-31T18:07:55Z", "updated_at": "2019-08-08T12:48:25Z", "closed_at": "2019-08-08T12:48:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\n\r\nExpressions involving an adaptor function like `skip` can cause an internal\r\ncompiler error. If a line of code in a submodule uses an undeclared type\r\nor module in an expression using an adaptor, the compiler panics at\r\n`\\'Box<Any>\\', librustc_errors/lib.rs:543:9`.\r\n\r\nCode in a submodule needs to specify a path relative to the crate root, which\r\nmeans prefixing `::` to a call like `std::env::args()`.\r\n\r\n## Example\r\n\r\nWe will use the following two files to demonstrate the issue:\r\n\r\n_main.rs:_\r\n\r\n```rust\r\nmod lib;\r\nuse lib::foo;\r\n\r\nfn main() {\r\n    let _ = foo();\r\n}\r\n```\r\n\r\n_lib.rs:_\r\n\r\n```rust\r\npub fn foo() -> Vec<String> {\r\n    std::env::args() // <- [ERROR E0433] This _should_ be `::std::env::args()`.\r\n        .skip(1)     // <- Compiler does not panic if this line is commented.\r\n        .collect()\r\n}\r\n```\r\n\r\nCode in a submodule needs to specify a path relative to the crate root, which\r\nmeans prefixing `::` to a call like `std::env::args()`. If we use\r\n`::std::env::args()` the program compiles and runs successfully.\r\n\r\nAs written however, the files above cause this internal compiler error:\r\n\r\n```\r\nerror[E0433]: failed to resolve. Use of undeclared type or module `std`\r\n --> src/args.rs:6:5\r\n  |\r\n6 |     std::env::args()\r\n  |     ^^^ Use of undeclared type or module `std`\r\n\r\nerror: internal compiler error: librustc/ich/impls_ty.rs:906: ty::TypeVariants::hash_stable() - Unexpected variant TyInfer(?0).\r\n\r\nthread 'rustc' panicked at 'Box<Any>', librustc_errors/lib.rs:543:9\r\n```\r\n\r\nThis panic will occur for other adapters, like `take(n)`. After commenting out\r\nthe `skip(1)` line, the compiler does not panic. and only this output is seen\r\nafter trying to compile:\r\n\r\n```\r\nerror[E0433]: failed to resolve. Use of undeclared type or module `std`\r\n --> src/lib.rs:5:5\r\n   |\r\n 5 |     std::env::args()\r\n   |     ^^^ Use of undeclared type or module `std`\r\n\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0433`.\r\n```\r\n\r\n### Potential UX Fixes\r\n\r\nI ran into this error because the `::` error is not required for code in the\r\ncrate root. If `foo` is moved from `lib.rc` to `main.rs`, then the internal\r\ncompiler error no longer occurs.\r\n\r\nIf code outside of the crate root causes an error due to the use of an\r\nundeclared type or module, it would be nice if the compiler warning would\r\nmention the possibility of a missing `::` prefix, if the name that could not\r\nbe resolved was a type or module in the standard library.\r\n\r\nWhen I reviewed the information given by running `rustc --explain E0433`, it\r\nmostly mentions the possibility of typos being the cause of this error.\r\nMentioning some other common situations that lead to symbols failing to\r\nresolve might be helpful.\r\n\r\n## Meta\r\n\r\n`rustc --version --verbose`:\r\n\r\n```\r\nrustc 1.26.0-nightly (5508b2714 2018-03-18)\r\nbinary: rustc\r\ncommit-hash: 5508b27145cfb82896ae838e6aca0cd48750796f\r\ncommit-date: 2018-03-18\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.26.0-nightly\r\nLLVM version: 6.0\r\n```\r\n\r\nBacktrace:\r\n\r\n```\r\n   Compiling bug-report v0.1.0 (file:///home/user/Projects/rustc-bug)\r\nerror[E0433]: failed to resolve. Use of undeclared type or module `std`\r\n --> src/args.rs:6:5\r\n  |\r\n6 |     std::env::args()\r\n  |     ^^^ Use of undeclared type or module `std`\r\n\r\nerror: internal compiler error: librustc/ich/impls_ty.rs:906: ty::TypeVariants::hash_stable() - Unexpected variant TyInfer(?0).\r\n\r\nthread 'rustc' panicked at 'Box<Any>', librustc_errors/lib.rs:543:9\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\nstack backtrace:\r\n   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace\r\n             at libstd/sys/unix/backtrace/tracing/gcc_s.rs:49\r\n   1: std::sys_common::backtrace::print\r\n             at libstd/sys_common/backtrace.rs:71\r\n             at libstd/sys_common/backtrace.rs:59\r\n   2: std::panicking::default_hook::{{closure}}\r\n             at libstd/panicking.rs:207\r\n   3: std::panicking::default_hook\r\n             at libstd/panicking.rs:223\r\n   4: core::ops::function::Fn::call\r\n   5: std::panicking::rust_panic_with_hook\r\n             at libstd/panicking.rs:403\r\n   6: std::panicking::begin_panic\r\n   7: rustc_errors::Handler::bug\r\n   8: rustc::session::opt_span_bug_fmt::{{closure}}\r\n   9: rustc::ty::context::tls::with_opt::{{closure}}\r\n  10: <std::thread::local::LocalKey<T>>::try_with\r\n  11: <std::thread::local::LocalKey<T>>::with\r\n  12: rustc::ty::context::tls::with\r\n  13: rustc::ty::context::tls::with_opt\r\n  14: rustc::session::opt_span_bug_fmt\r\n  15: rustc::session::bug_fmt\r\n  16: rustc::ich::impls_ty::<impl rustc_data_structures::stable_hasher::HashStable<rustc::ich::hcx::StableHashingContext<'a>> for rustc::ty::sty::TypeVariants<'gcx>>::hash_stable\r\n  17: <T as rustc::dep_graph::dep_node::DepNodeParams<'a, 'gcx, 'tcx>>::to_fingerprint\r\n  18: rustc::dep_graph::dep_node::DepNode::new\r\n  19: rustc::ty::maps::<impl rustc::ty::maps::queries::dropck_outlives<'tcx>>::try_get\r\n  20: rustc::ty::maps::TyCtxtAt::dropck_outlives\r\n  21: rustc::traits::query::dropck_outlives::<impl rustc::infer::at::At<'cx, 'gcx, 'tcx>>::dropck_outlives\r\n  22: rustc_typeck::check::dropck::check_safety_of_destructor_if_necessary\r\n  23: rustc_typeck::check::regionck::RegionCtxt::check_safety_of_rvalue_destructor_if_necessary\r\n  24: <rustc_typeck::check::regionck::RegionCtxt<'a, 'gcx, 'tcx> as rustc::hir::intravisit::Visitor<'gcx>>::visit_expr\r\n  25: rustc::hir::intravisit::walk_expr\r\n  26: <rustc_typeck::check::regionck::RegionCtxt<'a, 'gcx, 'tcx> as rustc::hir::intravisit::Visitor<'gcx>>::visit_expr\r\n  27: rustc::hir::intravisit::walk_expr\r\n  28: <rustc_typeck::check::regionck::RegionCtxt<'a, 'gcx, 'tcx> as rustc::hir::intravisit::Visitor<'gcx>>::visit_expr\r\n  29: <rustc_typeck::check::regionck::RegionCtxt<'a, 'gcx, 'tcx> as rustc::hir::intravisit::Visitor<'gcx>>::visit_expr\r\n  30: rustc_typeck::check::regionck::RegionCtxt::visit_fn_body\r\n  31: rustc_typeck::check::regionck::<impl rustc_typeck::check::FnCtxt<'a, 'gcx, 'tcx>>::regionck_fn\r\n  32: rustc::ty::context::tls::enter\r\n  33: rustc::infer::InferCtxtBuilder::enter\r\n  34: rustc_typeck::check::typeck_tables_of\r\n  35: rustc::ty::maps::<impl rustc::ty::maps::queries::typeck_tables_of<'tcx>>::compute_result\r\n  36: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  37: rustc_errors::Handler::track_diagnostics\r\n  38: rustc::ty::maps::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::cycle_check\r\n  39: rustc::ty::maps::<impl rustc::ty::maps::queries::typeck_tables_of<'tcx>>::force\r\n  40: rustc::ty::maps::<impl rustc::ty::maps::queries::typeck_tables_of<'tcx>>::try_get\r\n  41: rustc::ty::maps::TyCtxtAt::typeck_tables_of\r\n  42: rustc::ty::maps::<impl rustc::ty::maps::queries::typeck_tables_of<'tcx>>::ensure\r\n  43: rustc::session::Session::track_errors\r\n  44: rustc_typeck::check::typeck_item_bodies\r\n  45: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  46: rustc_errors::Handler::track_diagnostics\r\n  47: rustc::ty::maps::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::cycle_check\r\n  48: rustc::ty::maps::<impl rustc::ty::maps::queries::typeck_item_bodies<'tcx>>::force\r\n  49: rustc::ty::maps::<impl rustc::ty::maps::queries::typeck_item_bodies<'tcx>>::try_get\r\n  50: rustc::ty::maps::TyCtxtAt::typeck_item_bodies\r\n  51: rustc::ty::maps::<impl rustc::ty::context::TyCtxt<'a, 'tcx, 'lcx>>::typeck_item_bodies\r\n  52: rustc_typeck::check_crate\r\n  53: <std::thread::local::LocalKey<T>>::with\r\n  54: <std::thread::local::LocalKey<T>>::with\r\n  55: rustc::ty::context::TyCtxt::create_and_enter\r\n  56: rustc_driver::driver::compile_input\r\n  57: rustc_driver::run_compiler_impl\r\n  58: syntax::with_globals\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.26.0-nightly (5508b2714 2018-03-18) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nerror: Could not compile `bug-report`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n\r\nP.S. I am still somewhat new to Rust, but I would love to help out with this however I can!", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/49544/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/49544/timeline", "performed_via_github_app": null, "state_reason": "completed"}