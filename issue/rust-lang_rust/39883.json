{"url": "https://api.github.com/repos/rust-lang/rust/issues/39883", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/39883/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/39883/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/39883/events", "html_url": "https://github.com/rust-lang/rust/issues/39883", "id": 208122867, "node_id": "MDU6SXNzdWUyMDgxMjI4Njc=", "number": 39883, "title": "loop-match is not optimized as equivalent while-switch in Clang", "user": {"login": "RReverser", "id": 557590, "node_id": "MDQ6VXNlcjU1NzU5MA==", "avatar_url": "https://avatars.githubusercontent.com/u/557590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RReverser", "html_url": "https://github.com/RReverser", "followers_url": "https://api.github.com/users/RReverser/followers", "following_url": "https://api.github.com/users/RReverser/following{/other_user}", "gists_url": "https://api.github.com/users/RReverser/gists{/gist_id}", "starred_url": "https://api.github.com/users/RReverser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RReverser/subscriptions", "organizations_url": "https://api.github.com/users/RReverser/orgs", "repos_url": "https://api.github.com/users/RReverser/repos", "events_url": "https://api.github.com/users/RReverser/events{/privacy}", "received_events_url": "https://api.github.com/users/RReverser/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-02-16T13:35:36Z", "updated_at": "2017-02-16T14:06:41Z", "closed_at": "2017-02-16T14:06:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "> Rust version: stable, beta, nightly (2017-02-12)\r\n\r\nWhen a language doesn't implement `goto`, in order to build an efficient state machine one needs to rely on good optimization of `while-switch` aka `loop-match` in Rust.\r\n\r\nHowever, I've noticed that Rust code, even degenerated to low-level syntactic constructs, isn't optimized as well as theoretically equivalent C code in Clang, which is weird given that both use +- same LLVM.\r\n\r\nC code: https://godbolt.org/g/QQ6wqu\r\n\r\n```c\r\ntypedef enum {\r\n  A,\r\n  B,\r\n  C,\r\n  D\r\n} X;\r\n\r\nX f(X s) {\r\n  loop: {\r\n    switch (s) {\r\n      case A: { s = B; goto loop; }\r\n      case B: { s = C; goto loop; }\r\n      case C: { s = D; goto loop; }\r\n      case D: goto loop_end;\r\n    }\r\n  }\r\n  loop_end:;\r\n  return s;\r\n}\r\n```\r\n\r\nI had to use gotos to simulate exact Rust's `loop` behavior (and not just `while(1)` isn't exactly equivalent, and LLVM doesn't optimize it in the same way), but, as you can see, it was optimized to a simple comparison + constant:\r\n\r\n```asm\r\nf:                                      # @f\r\n        cmp     edi, 3\r\n        mov     eax, 3\r\n        cmova   eax, edi\r\n        ret\r\n```\r\n\r\nNow, an equivalent Rust code using as low-level constructs as possible in userland (to avoid case that some higher-level constructs are just not translated well): https://godbolt.org/g/giuA5A\r\n\r\n\r\n```rust\r\n#![crate_type = \"staticlib\"]\r\n\r\n#[derive(PartialEq)]\r\npub enum X {\r\n  A,\r\n  B,\r\n  C,\r\n  D\r\n}\r\n\r\nuse X::*;\r\n\r\npub extern fn f(mut s: X) -> X {\r\n  loop {\r\n    match s {\r\n      A => { s = B; continue }\r\n      B => { s = C; continue }\r\n      C => { s = D; continue }\r\n      D => break\r\n    };\r\n  }\r\n  s\r\n}\r\n```\r\n\r\nresults in an actual loop still present in the output:\r\n\r\n```asm\r\nexample::f:\r\n        jmp     .LBB0_1\r\n.LBB0_5:\r\n        mov     dil, 3\r\n.LBB0_1:\r\n        cmp     dil, 3\r\n        je      .LBB0_6\r\n        cmp     dil, 2\r\n        je      .LBB0_5\r\n        cmp     dil, 1\r\n        mov     dil, 1\r\n        jne     .LBB0_1\r\n        mov     dil, 2\r\n        jmp     .LBB0_1\r\n.LBB0_6:\r\n        mov     al, 3\r\n        ret\r\n```", "closed_by": {"login": "RReverser", "id": 557590, "node_id": "MDQ6VXNlcjU1NzU5MA==", "avatar_url": "https://avatars.githubusercontent.com/u/557590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RReverser", "html_url": "https://github.com/RReverser", "followers_url": "https://api.github.com/users/RReverser/followers", "following_url": "https://api.github.com/users/RReverser/following{/other_user}", "gists_url": "https://api.github.com/users/RReverser/gists{/gist_id}", "starred_url": "https://api.github.com/users/RReverser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RReverser/subscriptions", "organizations_url": "https://api.github.com/users/RReverser/orgs", "repos_url": "https://api.github.com/users/RReverser/repos", "events_url": "https://api.github.com/users/RReverser/events{/privacy}", "received_events_url": "https://api.github.com/users/RReverser/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/39883/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/39883/timeline", "performed_via_github_app": null, "state_reason": "completed"}