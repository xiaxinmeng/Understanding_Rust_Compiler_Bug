{"url": "https://api.github.com/repos/rust-lang/rust/issues/68480", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/68480/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/68480/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/68480/events", "html_url": "https://github.com/rust-lang/rust/issues/68480", "id": 553954609, "node_id": "MDU6SXNzdWU1NTM5NTQ2MDk=", "number": 68480, "title": "Add sanity checking for query keys", "user": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37234, "node_id": "MDU6TGFiZWwzNzIzNA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-cleanup", "name": "C-cleanup", "color": "f5f1fd", "default": false, "description": "Category: PRs that clean code up or issues documenting cleanup."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-23T05:59:49Z", "updated_at": "2020-01-26T15:15:11Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "We frequently see issues where a query parameter ends up containing something that it's not supposed to (an inference variable, a placeholder region, etc): https://github.com/rust-lang/rust/issues/68477 and https://github.com/rust-lang/rust/issues/64964 are recent examples.\r\n\r\nCurrently, incremental compilation must be enabled to see these crashes, since they only occur when we try to hash the 'bad' type. This presents a number of issues:\r\n\r\n1. The playground can't be used to reproduce them, since it (rightly) disables incremental compilation.\r\n2. We may miss these kinds of issues when invoking `rustc` directly (e.g. the `ui` test suite), since `-C incremental=1` is usually not passed.\r\n3. The panic message isn't very helpful - in particular, it doesn't show the original type being hashed.\r\n\r\nI think it would be useful to add a `sanity_check` method to `Key`, which would verify that the value is sane (e.g. no inference variances or placeholder regions) regardless of whether or not incremental compilation is enabled.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/68480/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/68480/timeline", "performed_via_github_app": null, "state_reason": null}