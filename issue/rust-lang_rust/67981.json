{"url": "https://api.github.com/repos/rust-lang/rust/issues/67981", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/67981/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/67981/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/67981/events", "html_url": "https://github.com/rust-lang/rust/issues/67981", "id": 546446233, "node_id": "MDU6SXNzdWU1NDY0NDYyMzM=", "number": 67981, "title": "ICE in unsized fn params: tried to statically allocate unsized place", "user": {"login": "DutchGhost", "id": 25501014, "node_id": "MDQ6VXNlcjI1NTAxMDE0", "avatar_url": "https://avatars.githubusercontent.com/u/25501014?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DutchGhost", "html_url": "https://github.com/DutchGhost", "followers_url": "https://api.github.com/users/DutchGhost/followers", "following_url": "https://api.github.com/users/DutchGhost/following{/other_user}", "gists_url": "https://api.github.com/users/DutchGhost/gists{/gist_id}", "starred_url": "https://api.github.com/users/DutchGhost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DutchGhost/subscriptions", "organizations_url": "https://api.github.com/users/DutchGhost/orgs", "repos_url": "https://api.github.com/users/DutchGhost/repos", "events_url": "https://api.github.com/users/DutchGhost/events{/privacy}", "received_events_url": "https://api.github.com/users/DutchGhost/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234956, "node_id": "MDU6TGFiZWwyMzQ5NTY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-codegen", "name": "A-codegen", "color": "f7e101", "default": false, "description": "Area: Code generation"}, {"id": 46741598, "node_id": "MDU6TGFiZWw0Njc0MTU5OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-test", "name": "E-needs-test", "color": "02e10c", "default": false, "description": "Call for participation: writing correctness tests"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}, {"id": 2464527098, "node_id": "MDU6TGFiZWwyNDY0NTI3MDk4", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-unsized_fn_params", "name": "F-unsized_fn_params", "color": "f9c0cc", "default": false, "description": "`#![feature(unsized_fn_params)]`"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-01-07T18:46:27Z", "updated_at": "2023-06-14T04:15:57Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The following ICE's in nightly:\r\n```Rust\r\n#![feature(unsized_fn_params)]\r\n\r\nfn main() {\r\n    let f: fn([u8]) = |_| {};\r\n    \r\n    let slice: Box<[u8]> = Box::new([1; 8]);\r\n    \r\n    f(*slice);\r\n}\r\n```\r\n\r\n<details>\r\n<summary>Backtrace:</summary>\r\n\r\n```\r\n Compiling playground v0.0.1 (/playground)\r\nthread 'rustc' panicked at 'tried to statically allocate unsized place', src/librustc_codegen_ssa/mir/place.rs:55:9\r\nstack backtrace:\r\n   0: backtrace::backtrace::libunwind::trace\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.40/src/backtrace/libunwind.rs:88\r\n   1: backtrace::backtrace::trace_unsynchronized\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.40/src/backtrace/mod.rs:66\r\n   2: std::sys_common::backtrace::_print_fmt\r\n             at src/libstd/sys_common/backtrace.rs:77\r\n   3: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt\r\n             at src/libstd/sys_common/backtrace.rs:59\r\n   4: core::fmt::write\r\n             at src/libcore/fmt/mod.rs:1057\r\n   5: std::io::Write::write_fmt\r\n             at src/libstd/io/mod.rs:1426\r\n   6: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:62\r\n   7: std::sys_common::backtrace::print\r\n             at src/libstd/sys_common/backtrace.rs:49\r\n   8: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/panicking.rs:195\r\n   9: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:215\r\n  10: rustc_driver::report_ice\r\n  11: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:476\r\n  12: std::panicking::begin_panic\r\n  13: rustc_codegen_ssa::mir::place::PlaceRef<V>::alloca\r\n  14: <core::iter::adapters::Map<I,F> as core::iter::traits::iterator::Iterator>::fold\r\n  15: <alloc::vec::Vec<T> as alloc::vec::SpecExtend<T,I>>::from_iter\r\n  16: rustc_codegen_ssa::mir::codegen_mir\r\n  17: <rustc::mir::mono::MonoItem as rustc_codegen_ssa::mono_item::MonoItemExt>::define\r\n  18: rustc_codegen_llvm::base::compile_codegen_unit::module_codegen\r\n  19: rustc::dep_graph::graph::DepGraph::with_task\r\n  20: rustc_codegen_llvm::base::compile_codegen_unit\r\n  21: rustc_codegen_ssa::base::codegen_crate\r\n  22: <rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_utils::codegen_backend::CodegenBackend>::codegen_crate\r\n  23: rustc_interface::passes::start_codegen::{{closure}}\r\n  24: rustc::util::common::time\r\n  25: rustc_interface::passes::start_codegen\r\n  26: rustc::ty::context::tls::enter_global\r\n  27: rustc_interface::queries::Queries::ongoing_codegen\r\n  28: rustc_interface::interface::run_compiler_in_existing_thread_pool\r\n  29: scoped_tls::ScopedKey<T>::set\r\n  30: syntax::with_globals\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.42.0-nightly (da3629b05 2019-12-29) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C codegen-units=1 -C debuginfo=2 --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\nend of query stack\r\nerror: could not compile `playground`.\r\n```\r\n\r\n</details>", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/67981/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/67981/timeline", "performed_via_github_app": null, "state_reason": null}