{"url": "https://api.github.com/repos/rust-lang/rust/issues/43349", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/43349/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/43349/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/43349/events", "html_url": "https://github.com/rust-lang/rust/issues/43349", "id": 244222247, "node_id": "MDU6SXNzdWUyNDQyMjIyNDc=", "number": 43349, "title": "Consider reordering unreached code and unused variable warnings", "user": {"login": "mqudsi", "id": 606923, "node_id": "MDQ6VXNlcjYwNjkyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/606923?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mqudsi", "html_url": "https://github.com/mqudsi", "followers_url": "https://api.github.com/users/mqudsi/followers", "following_url": "https://api.github.com/users/mqudsi/following{/other_user}", "gists_url": "https://api.github.com/users/mqudsi/gists{/gist_id}", "starred_url": "https://api.github.com/users/mqudsi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mqudsi/subscriptions", "organizations_url": "https://api.github.com/users/mqudsi/orgs", "repos_url": "https://api.github.com/users/mqudsi/repos", "events_url": "https://api.github.com/users/mqudsi/events{/privacy}", "received_events_url": "https://api.github.com/users/mqudsi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-07-20T01:47:37Z", "updated_at": "2017-07-26T20:35:32Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When compiling code that has an unreachable variable that is the only use of a previously declared section, rustc emits (at least in this case) the warnings about unused variables prior to the warnings about the unreachable code.\r\n\r\nIn many cases (esp. in IDEs or in vim's quickfix) errors/warnings are considered in the order they are seen (or the compiler is configured to stop after one error). In this case, it can lead one to waste time trying to find out how a variable is unused (in my case: look for shadow declarations) when in reality, it's just that the usage is unreachable.\r\n\r\n```\r\nsrc/main.rs|164 col 43 warning| unused variable: `stats_tx`\r\n||     |\r\n|| 164 | fn worker_thread(params: Arc<Parameters>, stats_tx: mpsc::Sender<Statistics>, rx: chan::Receiver<ThreadParam>) {\r\n||     |                                           ^^^^^^^^\r\n||     |\r\n||     = note: #[warn(unused_variables)] on by default\r\nsrc/main.rs|220 col 5 warning| unused result which must be used\r\n||     |\r\n|| 220 |     stats_tx.send(local_stats);\r\n||     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n||     |\r\n||     = note: #[warn(unused_must_use)] on by default\r\nsrc/main.rs|220 col 5 warning| unreachable statement\r\n||     |\r\n|| 220 |     stats_tx.send(local_stats);\r\n||     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n||     |\r\n||     = note: #[warn(unreachable_code)] on by default\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/43349/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 1, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/43349/timeline", "performed_via_github_app": null, "state_reason": null}