{"url": "https://api.github.com/repos/rust-lang/rust/issues/110737", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/110737/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/110737/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/110737/events", "html_url": "https://github.com/rust-lang/rust/issues/110737", "id": 1680138284, "node_id": "I_kwDOAAsO6M5kJOAs", "number": 110737, "title": "Match blocks generate inefficient assembly compared to if/else chain since rust 1.65.0", "user": {"login": "mqudsi", "id": 606923, "node_id": "MDQ6VXNlcjYwNjkyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/606923?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mqudsi", "html_url": "https://github.com/mqudsi", "followers_url": "https://api.github.com/users/mqudsi/followers", "following_url": "https://api.github.com/users/mqudsi/following{/other_user}", "gists_url": "https://api.github.com/users/mqudsi/gists{/gist_id}", "starred_url": "https://api.github.com/users/mqudsi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mqudsi/subscriptions", "organizations_url": "https://api.github.com/users/mqudsi/orgs", "repos_url": "https://api.github.com/users/mqudsi/repos", "events_url": "https://api.github.com/users/mqudsi/events{/privacy}", "received_events_url": "https://api.github.com/users/mqudsi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 234956, "node_id": "MDU6TGFiZWwyMzQ5NTY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-codegen", "name": "A-codegen", "color": "f7e101", "default": false, "description": "Area: Code generation"}, {"id": 60344715, "node_id": "MDU6TGFiZWw2MDM0NDcxNQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-medium", "name": "P-medium", "color": "eb6420", "default": false, "description": "Medium priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 262252840, "node_id": "MDU6TGFiZWwyNjIyNTI4NDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-stable", "name": "regression-from-stable-to-stable", "color": "e4008a", "default": false, "description": "Performance or correctness regression from one stable version to another."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2023-04-23T19:21:53Z", "updated_at": "2023-04-27T17:32:01Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I would assume that the following two snippets of code would compile to identical assembly\r\n\r\n```rust\r\npub fn convert_hex(d: char) -> Option<u32> {\r\n    if ('0'..='9').contains(&d) {\r\n        Some(u32::from(d) - u32::from('0'))\r\n    } else if ('A'..='Z').contains(&d) {\r\n        Some(10 + u32::from(d) - u32::from('A'))\r\n    } else {\r\n        None\r\n    }\r\n}\r\n\r\npub fn convert_hex2(c: char) -> Option<u32> {\r\n    match c {\r\n        '0'..='9' => Some(u32::from(c) - u32::from('0')),\r\n        'A'..='Z' => Some(10 + u32::from(c) - u32::from('A')),\r\n        _ => None,\r\n    }\r\n}\r\n```\r\n\r\nHowever, as of rustc 1.65.0 `convert_hex2` with the `match` blocks generates suboptimal code that is approximately 30% slower in a microbenchmark. [Godbolt link showing asm comparison between 1.64.0 vs 1.69.0](https://rust.godbolt.org/z/WPPWYff5v).\r\n\r\nI don't think it's an LLVM regression since the emitted IR differs between 1.64 and 1.65: https://rust.godbolt.org/z/7b3EbGfj3\r\n\r\n### Version it worked on\r\n\r\nIt most recently worked on: 1.64.0\r\n\r\n### Version with regression\r\n\r\n```\r\n1.65.0 - nightly (as of 1.69.0)\r\n```\r\n\r\n@rustbot modify labels: +regression-from-stable-to-stable -regression-untriaged +A-codegen  +C-bug +T-compiler +I-slow\r\n\r\nI'll try to bisect the commit behind the change.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/110737/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/110737/timeline", "performed_via_github_app": null, "state_reason": null}