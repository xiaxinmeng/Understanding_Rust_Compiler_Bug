{"url": "https://api.github.com/repos/rust-lang/rust/issues/89304", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/89304/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/89304/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/89304/events", "html_url": "https://github.com/rust-lang/rust/issues/89304", "id": 1008323292, "node_id": "I_kwDOAAsO6M48Gcrc", "number": 89304, "title": "ICE while testing generic_const_exprs", "user": {"login": "rjframe", "id": 1379218, "node_id": "MDQ6VXNlcjEzNzkyMTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1379218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rjframe", "html_url": "https://github.com/rjframe", "followers_url": "https://api.github.com/users/rjframe/followers", "following_url": "https://api.github.com/users/rjframe/following{/other_user}", "gists_url": "https://api.github.com/users/rjframe/gists{/gist_id}", "starred_url": "https://api.github.com/users/rjframe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rjframe/subscriptions", "organizations_url": "https://api.github.com/users/rjframe/orgs", "repos_url": "https://api.github.com/users/rjframe/repos", "events_url": "https://api.github.com/users/rjframe/events{/privacy}", "received_events_url": "https://api.github.com/users/rjframe/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1282665911, "node_id": "MDU6TGFiZWwxMjgyNjY1OTEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-generics", "name": "A-const-generics", "color": "f7e101", "default": false, "description": "Area: const generics (parameters and arguments)"}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}, {"id": 2341291797, "node_id": "MDU6TGFiZWwyMzQxMjkxNzk3", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-generic_const_exprs", "name": "F-generic_const_exprs", "color": "f9c0cc", "default": false, "description": "`#![feature(generic_const_exprs)]`"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-09-27T15:58:46Z", "updated_at": "2021-10-30T16:22:50Z", "closed_at": "2021-10-30T16:22:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "While experimenting to reduce some boilerplate I came across this; removing either `From` implementation results in a successful build.\r\n\r\n### Code\r\n\r\n```rust\r\n#![feature(generic_const_exprs)]\r\n\r\nstruct GenericStruct<const T: usize> { val: i64 }\r\n\r\nimpl<const T: usize> From<GenericStruct<T>> for GenericStruct<{T + 1}> {\r\n    fn from(other: GenericStruct<T>) -> Self {\r\n        Self { val: other.val }\r\n    }\r\n}\r\n\r\nimpl<const T: usize> From<GenericStruct<{T + 1}>> for GenericStruct<T> {\r\n    fn from(other: GenericStruct<{T + 1}>) -> Self {\r\n        Self { val: other.val }\r\n    }\r\n}\r\n```\r\n\r\n### Meta\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.57.0-nightly (05044c2e6 2021-09-26)\r\nbinary: rustc\r\ncommit-hash: 05044c2e6c043929a11537d7f6169eb3a2397bb8\r\ncommit-date: 2021-09-26\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.57.0-nightly\r\nLLVM version: 13.0.0\r\n```\r\n\r\n### Error output\r\n\r\n```\r\n   Checking rust-ice v0.1.0 (/tmp/rust-ice)\r\nwarning: the feature `generic_const_exprs` is incomplete and may not be safe to use and/or cause compiler crashes\r\n --> src/lib.rs:1:12\r\n  |\r\n1 | #![feature(generic_const_exprs)]\r\n  |            ^^^^^^^^^^^^^^^^^^^\r\n  |\r\n  = note: `#[warn(incomplete_features)]` on by default\r\n  = note: see issue #76560 <https://github.com/rust-lang/rust/issues/76560> for more information\r\n\r\nthread 'rustc' panicked at 'already borrowed: BorrowMutError', compiler/rustc_infer/src/infer/combine.rs:954:50\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.57.0-nightly (05044c2e6 2021-09-26) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [specialization_graph_of] building specialization graph of trait `core::convert::From`\r\n#1 [coherent_trait] coherence checking all impls of trait `core::convert::From`\r\nend of query stack\r\nwarning: `rust-ice` (lib) generated 1 warning\r\nerror: could not compile `rust-ice`; 1 warning emitted\r\n```\r\n\r\n### Backtrace\r\n\r\n```\r\nthread 'rustc' panicked at 'already borrowed: BorrowMutError', compiler/rustc_infer/src/infer/combine.rs:954:50\r\nstack backtrace:\r\n   0: rust_begin_unwind\r\n             at /rustc/05044c2e6c043929a11537d7f6169eb3a2397bb8/library/std/src/panicking.rs:517:5\r\n   1: core::panicking::panic_fmt\r\n             at /rustc/05044c2e6c043929a11537d7f6169eb3a2397bb8/library/core/src/panicking.rs:100:14\r\n   2: core::result::unwrap_failed\r\n             at /rustc/05044c2e6c043929a11537d7f6169eb3a2397bb8/library/core/src/result.rs:1617:5\r\n   3: <rustc_infer::infer::combine::ConstInferUnifier as rustc_middle::ty::relate::TypeRelation>::consts\r\n   4: <rustc_infer::infer::combine::ConstInferUnifier as rustc_middle::ty::relate::TypeRelation>::relate_with_variance\r\n   5: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once\r\n   6: <core::result::Result<T,E> as rustc_middle::ty::context::InternIteratorElement<T,R>>::intern_with\r\n   7: rustc_middle::ty::context::TyCtxt::mk_substs\r\n   8: rustc_middle::ty::relate::relate_substs\r\n   9: <rustc_infer::infer::combine::ConstInferUnifier as rustc_middle::ty::relate::TypeRelation>::consts\r\n  10: <rustc_infer::infer::combine::ConstInferUnifier as rustc_middle::ty::relate::TypeRelation>::consts\r\n  11: <rustc_infer::infer::combine::ConstInferUnifier as rustc_middle::ty::relate::TypeRelation>::relate_with_variance\r\n  12: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once\r\n  13: <core::result::Result<T,E> as rustc_middle::ty::context::InternIteratorElement<T,R>>::intern_with\r\n  14: rustc_middle::ty::context::TyCtxt::mk_substs\r\n  15: rustc_middle::ty::relate::relate_substs\r\n  16: <rustc_infer::infer::combine::ConstInferUnifier as rustc_middle::ty::relate::TypeRelation>::consts\r\n  17: rustc_infer::infer::combine::<impl rustc_infer::infer::InferCtxt>::unify_const_variable\r\n  18: rustc_infer::infer::combine::<impl rustc_infer::infer::InferCtxt>::super_combine_consts\r\n  19: <core::result::Result<T,E> as rustc_middle::ty::context::InternIteratorElement<T,R>>::intern_with\r\n  20: rustc_middle::ty::relate::super_relate_tys\r\n  21: rustc_middle::ty::relate::TypeRelation::relate\r\n  22: <core::result::Result<T,E> as rustc_middle::ty::context::InternIteratorElement<T,R>>::intern_with\r\n  23: rustc_middle::ty::relate::relate_substs\r\n  24: rustc_infer::infer::InferCtxt::commit_if_ok\r\n  25: rustc_infer::infer::at::At::eq_impl_headers\r\n  26: rustc_trait_selection::traits::coherence::overlap_within_probe\r\n  27: rustc_infer::infer::InferCtxtBuilder::enter\r\n  28: <rustc_middle::traits::specialization_graph::Children as rustc_trait_selection::traits::specialize::specialization_graph::ChildrenExt>::insert\r\n  29: <rustc_middle::traits::specialization_graph::Graph as rustc_trait_selection::traits::specialize::specialization_graph::GraphExt>::insert\r\n  30: rustc_trait_selection::traits::specialize::specialization_graph_provider\r\n  31: rustc_query_system::query::plumbing::try_execute_query\r\n  32: rustc_query_system::query::plumbing::get_query\r\n  33: rustc_typeck::coherence::coherent_trait\r\n  34: rustc_query_system::query::plumbing::try_execute_query\r\n  35: rustc_query_system::query::plumbing::get_query\r\n  36: rustc_session::session::Session::track_errors\r\n  37: rustc_typeck::check_crate\r\n  38: rustc_interface::passes::analysis\r\n  39: rustc_query_system::query::plumbing::try_execute_query\r\n  40: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::analysis\r\n  41: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n  42: rustc_span::with_source_map\r\n  43: rustc_interface::interface::create_compiler_and_run\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.57.0-nightly (05044c2e6 2021-09-26) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C codegen-units=1 -C debuginfo=2 --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [specialization_graph_of] building specialization graph of trait `core::convert::From`\r\n#1 [coherent_trait] coherence checking all impls of trait `core::convert::From`\r\n#2 [analysis] running analysis passes on this crate\r\nend of query stack\r\n```", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/89304/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/89304/timeline", "performed_via_github_app": null, "state_reason": "completed"}