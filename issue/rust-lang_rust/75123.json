{"url": "https://api.github.com/repos/rust-lang/rust/issues/75123", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/75123/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/75123/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/75123/events", "html_url": "https://github.com/rust-lang/rust/issues/75123", "id": 672398188, "node_id": "MDU6SXNzdWU2NzIzOTgxODg=", "number": 75123, "title": "Confusing (incorrect) suggestions on method not in scope.", "user": {"login": "steffahn", "id": 3986214, "node_id": "MDQ6VXNlcjM5ODYyMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3986214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steffahn", "html_url": "https://github.com/steffahn", "followers_url": "https://api.github.com/users/steffahn/followers", "following_url": "https://api.github.com/users/steffahn/following{/other_user}", "gists_url": "https://api.github.com/users/steffahn/gists{/gist_id}", "starred_url": "https://api.github.com/users/steffahn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steffahn/subscriptions", "organizations_url": "https://api.github.com/users/steffahn/orgs", "repos_url": "https://api.github.com/users/steffahn/repos", "events_url": "https://api.github.com/users/steffahn/events{/privacy}", "received_events_url": "https://api.github.com/users/steffahn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1596121013, "node_id": "MDU6TGFiZWwxNTk2MTIxMDEz", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-confusing", "name": "D-confusing", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error that should be reworked"}, {"id": 1659943986, "node_id": "MDU6TGFiZWwxNjU5OTQzOTg2", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-verbose", "name": "D-verbose", "color": "c9f7a3", "default": false, "description": "Too much output caused by a single piece of incorrect code"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-03T23:20:17Z", "updated_at": "2020-10-23T07:35:08Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "```rust\r\n\r\ntrait MyIteratorExtensionTrait: Iterator {\r\n    fn foo(&self) {}\r\n}\r\nimpl<I: Iterator> MyIteratorExtensionTrait for I {}\r\n\r\nmod m {\r\n    fn bar() {\r\n        let x = (0..1);\r\n        x.foo();\r\n    }\r\n}\r\n```\r\n\r\n([Playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=68b966324d4bee4062db44c04e45227e))\r\n\r\nErrors:\r\n\r\n```\r\n   Compiling playground v0.0.1 (/playground)\r\nwarning: unnecessary parentheses around assigned value\r\n --> src/lib.rs:9:17\r\n  |\r\n9 |         let x = (0..1);\r\n  |                 ^^^^^^ help: remove these parentheses\r\n  |\r\n  = note: `#[warn(unused_parens)]` on by default\r\n\r\nerror[E0599]: no method named `foo` found for struct `std::ops::Range<{integer}>` in the current scope\r\n  --> src/lib.rs:10:11\r\n   |\r\n3  |     fn foo(&self) {}\r\n   |        ---\r\n   |        |\r\n   |        the method is available for `std::boxed::Box<std::ops::Range<{integer}>>` here\r\n   |        the method is available for `std::sync::Arc<std::ops::Range<{integer}>>` here\r\n   |        the method is available for `std::rc::Rc<std::ops::Range<{integer}>>` here\r\n...\r\n10 |         x.foo();\r\n   |           ^^^ method not found in `std::ops::Range<{integer}>`\r\n   |\r\n   = help: items from traits can only be used if the trait is in scope\r\n   = note: the following trait is implemented but not in scope; perhaps add a `use` for it:\r\n           `use crate::MyIteratorExtensionTrait;`\r\n\r\nerror: aborting due to previous error; 1 warning emitted\r\n\r\nFor more information about this error, try `rustc --explain E0599`.\r\nerror: could not compile `playground`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n\r\n```\r\n\r\nThis error message is way too long and contains misleading information (I\u2019m referring to those `the method is available for` lines) and it is non-trivial to spot the essential part, that is:\r\n```\r\n   = note: the following trait is implemented but not in scope; perhaps add a `use` for it:\r\n           `use crate::MyIteratorExtensionTrait;`\r\n```\r\n\r\nFor example, here\u2019s a confused user: https://users.rust-lang.org/t/iterator-method-is-only-available-for-boxed-iterator/46772", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/75123/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/75123/timeline", "performed_via_github_app": null, "state_reason": null}