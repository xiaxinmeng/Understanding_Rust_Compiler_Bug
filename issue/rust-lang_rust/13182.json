{"url": "https://api.github.com/repos/rust-lang/rust/issues/13182", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/13182/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/13182/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/13182/events", "html_url": "https://github.com/rust-lang/rust/issues/13182", "id": 30399133, "node_id": "MDU6SXNzdWUzMDM5OTEzMw==", "number": 13182, "title": "Remove RefCell::get", "user": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-03-28T15:59:31Z", "updated_at": "2014-04-04T16:56:55Z", "closed_at": "2014-04-04T16:56:55Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm not sure if this deserves a proper RFC or not, but since I consider this to be a bug I figure it makes sense here :)\n\nI just ran into a bug where I assumed that `RefCell::get` follows our convention of `.get()` methods returning a `&T` pointer, and I was surprised to find that `RefCell::get` is actually:\n\n```\nimpl<T:Clone> RefCell<T> {\n    pub fn get(&self) -> T {\n        (*self.borrow()).clone()\n    }\n    ...\n}\n```\n\nIt's surprising, and it can be easily replaced with `x.borrow().clone()` if a copy is actually needed. I propose we just remove it.\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/13182/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/13182/timeline", "performed_via_github_app": null, "state_reason": "completed"}