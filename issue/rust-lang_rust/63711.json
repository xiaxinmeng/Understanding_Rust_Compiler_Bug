{"url": "https://api.github.com/repos/rust-lang/rust/issues/63711", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/63711/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/63711/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/63711/events", "html_url": "https://github.com/rust-lang/rust/issues/63711", "id": 482470293, "node_id": "MDU6SXNzdWU0ODI0NzAyOTM=", "number": 63711, "title": "Suggest setting associated types on type errors", "user": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 60344715, "node_id": "MDU6TGFiZWw2MDM0NDcxNQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-medium", "name": "P-medium", "color": "eb6420", "default": false, "description": "Medium priority"}, {"id": 149689562, "node_id": "MDU6TGFiZWwxNDk2ODk1NjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-associated-items", "name": "A-associated-items", "color": "f7e101", "default": false, "description": "Area: Associated items such as associated types and consts."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1183099971, "node_id": "MDU6TGFiZWwxMTgzMDk5OTcx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-suggestion-diagnostics", "name": "A-suggestion-diagnostics", "color": "f7e101", "default": false, "description": "Area: suggestions generated by the compiler applied by cargo fix"}, {"id": 1596122811, "node_id": "MDU6TGFiZWwxNTk2MTIyODEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-newcomer-roadblock", "name": "D-newcomer-roadblock", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error hard to understand for new users"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-08-19T18:49:45Z", "updated_at": "2019-12-13T19:56:39Z", "closed_at": "2019-12-13T19:56:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "[The following code](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=4c099411a96bcca3c01e682ca92e8175) is missing a constraint for `TryInto<Error=TryIntoError>`:\r\n\r\n```\r\nuse std::convert::TryInto;\r\n\r\nstruct TryIntoError;\r\nstruct X;\r\n\r\nimpl TryInto<usize> for X {\r\n    type Error = TryIntoError;\r\n\r\n    fn try_into(self) -> Result<usize, TryIntoError> {\r\n        Ok(0)\r\n    }\r\n}\r\n\r\ntrait T: TryInto<usize> {\r\n    fn foo(self) -> Result<usize, TryIntoError> {\r\n        TryInto::try_into(self)\r\n    }\r\n}\r\n```\r\n\r\nwhich causes the following error:\r\n\r\n```\r\nerror[E0308]: mismatched types\r\n  --> src/main.rs:16:9\r\n   |\r\n15 |     fn foo(self) -> Result<usize, TryIntoError> {\r\n   |                     --------------------------- expected `std::result::Result<usize, TryIntoError>` because of return type\r\n16 |         TryInto::try_into(self)\r\n   |         ^^^^^^^^^^^^^^^^^^^^^^^ expected struct `TryIntoError`, found associated type\r\n   |\r\n   = note: expected type `std::result::Result<_, TryIntoError>`\r\n              found type `std::result::Result<_, <Self as std::convert::TryInto<usize>>::Error>`\r\n```\r\n\r\nThis should be closer to\r\n\r\n```\r\nerror[E0308]: mismatched types\r\n  --> src/main.rs:16:9\r\n   |\r\n14 |   trait T: TryInto<usize> {\r\n   |            -------------- help: explicitely set associated type `Error`: `TryInto<usize, TryIntoError>`\r\n15 |     fn foo(self) -> Result<usize, TryIntoError> {\r\n   |                     --------------------------- expected `std::result::Result<usize, TryIntoError>` because of return type\r\n16 |         TryInto::try_into(self)\r\n   |         ^^^^^^^^^^^^^^^^^^^^^^^ expected struct `TryIntoError`, found associated type\r\n   |\r\n   = note: expected type `std::result::Result<_, TryIntoError>`\r\n              found type `std::result::Result<_, <Self as std::convert::TryInto<usize>>::Error>`\r\n```\r\n\r\nor\r\n\r\n```\r\nerror[E0308]: mismatched types\r\n  --> src/main.rs:16:9\r\n   |\r\n15 |     fn foo(self) -> Result<usize, TryIntoError> {\r\n   |                     --------------------------- expected `std::result::Result<usize, TryIntoError>` because of return type\r\n16 |         TryInto::try_into(self)\r\n   |         ^^^^^^^^^^^^^^^^^^^^^^^ expected struct `TryIntoError`, found associated type\r\n   |\r\n   = note: expected type `std::result::Result<_, TryIntoError>`\r\n              found type `std::result::Result<_, <Self as std::convert::TryInto<usize>>::Error>`\r\nhelp: explicitely set associated type `Error`\r\n   |\r\n14 |   trait T: TryInto<usize, TryIntoError> {\r\n   |                         ^^^^^^^^^^^^^^\r\nhelp: alternatively, use `TryInto::Error`\r\n   |\r\n15 |     fn foo(self) -> Result<usize, Self::Error> {\r\n   |                                   ^^^^^^^^^^^\r\n```\r\n\r\nCC reporter @minggfeng", "closed_by": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/63711/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/63711/timeline", "performed_via_github_app": null, "state_reason": "completed"}