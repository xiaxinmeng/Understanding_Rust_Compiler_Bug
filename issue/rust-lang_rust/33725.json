{"url": "https://api.github.com/repos/rust-lang/rust/issues/33725", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/33725/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/33725/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/33725/events", "html_url": "https://github.com/rust-lang/rust/issues/33725", "id": 155595836, "node_id": "MDU6SXNzdWUxNTU1OTU4MzY=", "number": 33725, "title": "Track cross-crate no-trans (\"cargo check\") pass timings.", "user": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 64037154, "node_id": "MDU6TGFiZWw2NDAzNzE1NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-compiletime", "name": "I-compiletime", "color": "e11d21", "default": false, "description": "Problems and improvements with respect to compile times."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-05-18T20:38:29Z", "updated_at": "2020-02-06T05:41:12Z", "closed_at": "2020-02-06T05:41:12Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The following timings were obtained on #33602 with `src/bootstrap/rustc.rs` modified to always pass `-Z no-trans -Z time-passes` and then ran on a whole stage1 pass (libstd + rustc).\n\nYou can also look at the [raw log and the script](https://gist.github.com/eddyb/0db2f60395d3150a07bc0d15d158ee7b) that generated the table.\n\nFor each pass, the sum of that pass' timings across all crates is given.\nI've emphasized all the passes that take more than 5 seconds in total.\nSpecifically, `item-bodies checking` seems to take a lot of time.\n@nikomatsakis has mentioned that his projection cache makes type-checking faster, although its impact on these times is yet unknown.\n\nAlso, AFAIK @nrc and @jonathandturner have a proper perf tracking solution that could also do `-Z no-trans` runs, which should look better than my manual logs.\n\n| Pass name | Total time |\n| --- | --- |\n| parsing | 2.089s |\n| configuration 1 | 0.530s |\n| recursion limit | 0.000s |\n| crate injection | 0.000s |\n| macro loading | 2.055s |\n| plugin loading | 0.000s |\n| plugin registration | 0.000s |\n| **expansion** | **6.545s** |\n| configuration 2 | 1.053s |\n| gated configuration checking | 0.000s |\n| maybe building test harness | 0.502s |\n| prelude injection | 0.402s |\n| checking that all macro invocations are gone | 0.070s |\n| checking for inline asm in case the target doesn't support it | 0.000s |\n| complete gated feature checking | 0.160s |\n| assigning node ids | 0.431s |\n| collecting defs | 0.315s |\n| external crate/lib resolution | 0.817s |\n| early lint checks | 0.334s |\n| name resolution | 1.831s |\n| lowering ast -> hir | 0.719s |\n| indexing hir | 0.088s |\n| attribute checking | 0.081s |\n| language item collection | 0.079s |\n| lifetime resolution | 0.107s |\n| looking for entry point | 0.000s |\n| looking for plugin registrar | 0.000s |\n| region resolution | 0.413s |\n| loop checking | 0.057s |\n| static item recursion checking | 0.059s |\n| load_dep_graph | 0.000s |\n| type collecting | 1.132s |\n| variance inference | 0.015s |\n| coherence checking | 3.061s |\n| **wf checking** | **5.322s** |\n| **item-types checking** | **9.978s** |\n| **item-bodies checking** | **84.693s** |\n| drop-impl checking | 0.001s |\n| const checking | 4.972s |\n| privacy checking | 0.536s |\n| stability index | 0.086s |\n| intrinsic checking | 0.533s |\n| effect checking | 0.134s |\n| match checking | 1.516s |\n| liveness checking | 0.489s |\n| rvalue checking | 4.355s |\n| **MIR dump** | **6.513s** |\n| MIR passes | 4.136s |\n| **borrow checking** | **9.307s** |\n| reachability checking | 0.222s |\n| death checking | 0.404s |\n| stability checking | 0.455s |\n| unused lib feature checking | 0.000s |\n| lint checking | 4.582s |\n| resolving dependency formats | 0.097s |\n| Prepare MIR codegen passes | 0.920s |\n| **&nbsp;&nbsp;write metadata** | **6.387s** |\n| **&nbsp;&nbsp;translation item collection** | **16.706s** |\n| &nbsp;&nbsp;codegen unit partitioning | 1.064s |\n| **translation** | **25.007s** |\n| assert dep graph | 0.015s |\n| serialize dep graph | 0.000s |\n| &nbsp;&nbsp;llvm function passes [0] | 0.000s |\n| &nbsp;&nbsp;llvm module passes [0] | 0.000s |\n| &nbsp;&nbsp;codegen passes [0] | 0.052s |\n| LLVM passes | 0.239s |\n| **linking** | **7.134s** |\n| &nbsp;&nbsp;altering collections-fcd89c446c422598.rlib | 0.000s |\n| &nbsp;&nbsp;altering panic_unwind-51e342ee2f803940.rlib | 0.000s |\n| &nbsp;&nbsp;altering alloc-907db4fbb3fafc96.rlib | 0.000s |\n| &nbsp;&nbsp;altering alloc_jemalloc-a216938f82a1db8c.rlib | 0.018s |\n| &nbsp;&nbsp;altering rustc_unicode-6571ce0f83faa69c.rlib | 0.000s |\n| &nbsp;&nbsp;altering unwind-cdc3b6d466599f1c.rlib | 0.000s |\n| &nbsp;&nbsp;altering libc-0beda9f0eb92d0e5.rlib | 0.000s |\n| &nbsp;&nbsp;altering rand-8b03f2aa3ee680c5.rlib | 0.000s |\n| &nbsp;&nbsp;altering core-a4faa1f84cab77e5.rlib | 0.000s |\n| **&nbsp;&nbsp;running linker** | **7.172s** |\n| **total** | **194.591s** |\n", "closed_by": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/33725/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/33725/timeline", "performed_via_github_app": null, "state_reason": "completed"}