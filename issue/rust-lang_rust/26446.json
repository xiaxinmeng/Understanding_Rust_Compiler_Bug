{"url": "https://api.github.com/repos/rust-lang/rust/issues/26446", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/26446/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/26446/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/26446/events", "html_url": "https://github.com/rust-lang/rust/issues/26446", "id": 89704499, "node_id": "MDU6SXNzdWU4OTcwNDQ5OQ==", "number": 26446, "title": "Blocking IO makes it impossible to join threads reliably", "user": {"login": "ghost", "id": 10137, "node_id": "MDQ6VXNlcjEwMTM3", "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghost", "html_url": "https://github.com/ghost", "followers_url": "https://api.github.com/users/ghost/followers", "following_url": "https://api.github.com/users/ghost/following{/other_user}", "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghost/subscriptions", "organizations_url": "https://api.github.com/users/ghost/orgs", "repos_url": "https://api.github.com/users/ghost/repos", "events_url": "https://api.github.com/users/ghost/events{/privacy}", "received_events_url": "https://api.github.com/users/ghost/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2015-06-20T02:28:00Z", "updated_at": "2016-06-23T14:16:37Z", "closed_at": "2015-06-22T03:31:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Threads spawned to interface blocking IO with a non-blocking channel can't be cleaned up in a programmatic way.\n\nExample:\n\n``` rust\nlet (accept_tx, accept_rx) = channel();\nlet listener_thread =\n    thread::spawn(move|| {\n        let listener = TcpListener::bind(\":::0\").unwrap();\n        for client in listener.incoming() {\n            if let Err(_) = accept_tx.send(client.unwrap()) {\n                break;\n            }\n        }\n    });\n```\n\nTo my knowledge, the only way to communicate to `listener_thread` that it should break is by dropping the receiving end of the channel:\n\n``` rust\ndrop(accept_rx);\nlistener_thread.join(); // blocks until thread reaches accept_tx.send(..); O(forever)\n```\n\nThe problem is, if `listener_thread` is blocking waiting for a client, it may _never_ reach `accept_tx.send(..)`, let alone reach it in a computationally timely manner.\n\nYou can make dummy connections for `TcpListener`s, and shutdown `TcpStream`s via a clone, but these are really hacky ways to clean up such threads, and as it stands, I don't even know of a _hack_ to trigger a thread blocking on a read from `stdin` to join.\n## Meta\n\n`rustc --version --verbose`:\nrustc 1.0.0 (a59de37e9 2015-05-13) (built 2015-05-14)\nbinary: rustc\ncommit-hash: a59de37e99060162a2674e3ff45409ac73595c0e\ncommit-date: 2015-05-13\nbuild-date: 2015-05-14\nhost: x86_64-unknown-linux-gnu\nrelease: 1.0.0\n", "closed_by": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/26446/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/26446/timeline", "performed_via_github_app": null, "state_reason": "completed"}