{"url": "https://api.github.com/repos/rust-lang/rust/issues/74385", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/74385/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/74385/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/74385/events", "html_url": "https://github.com/rust-lang/rust/issues/74385", "id": 657867582, "node_id": "MDU6SXNzdWU2NTc4Njc1ODI=", "number": 74385, "title": "fd.flush() inconsistent between un*x and windows OS families", "user": {"login": "rbtcollins", "id": 499678, "node_id": "MDQ6VXNlcjQ5OTY3OA==", "avatar_url": "https://avatars.githubusercontent.com/u/499678?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rbtcollins", "html_url": "https://github.com/rbtcollins", "followers_url": "https://api.github.com/users/rbtcollins/followers", "following_url": "https://api.github.com/users/rbtcollins/following{/other_user}", "gists_url": "https://api.github.com/users/rbtcollins/gists{/gist_id}", "starred_url": "https://api.github.com/users/rbtcollins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rbtcollins/subscriptions", "organizations_url": "https://api.github.com/users/rbtcollins/orgs", "repos_url": "https://api.github.com/users/rbtcollins/repos", "events_url": "https://api.github.com/users/rbtcollins/events{/privacy}", "received_events_url": "https://api.github.com/users/rbtcollins/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-07-16T05:42:10Z", "updated_at": "2020-07-17T11:34:06Z", "closed_at": "2020-07-17T11:14:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This conversation on twitter:\r\n\r\nhttps://twitter.com/redtwitdown/status/1283600428941246466\r\n\r\nhighlighted a difference in behaviour in File on [Windows](https://github.com/rust-lang/rust/blob/7c78a5f97de07a185eebae5a5de436c80d8ba9d4/src/libstd/sys/windows/fs.rs#L303) and [unix](https://github.com/rust-lang/rust/blob/7c78a5f97de07a185eebae5a5de436c80d8ba9d4/src/libstd/sys/unix/fs.rs#L862)\r\n\r\nOn Windows, the flush method triggers a datasync operation down through the OS disk cache and disk layers. \r\n\r\nOn Unix the same call, is a no-op.\r\n\r\nThis is an attractive nuisance; BufWriter, which is a user-space construct designed to make it easy to batch up and give the operating system large writes, so that things like fmt can write a single byte at a time if needed, and we don't pay the death by a thousand cuts toll at the OS boundary.\r\n\r\nHowever, forcing every file to do a a FlushFileBuffers / fdatasync is inappropriate: that will cause performance issues in many cases where a later explicit fdatasync would not - or even a fsync (consider for instance untarring a tgz: committing any single file to storage is irrelevant to the user, what matters is that when they are told 'all done' their data as a whole is safe, and this is most efficiently done by a sync fsync at the end of the entire operation, allowing ext4 and other file systems to optimise group placement on disk as much as possible.\r\n\r\nI think the right thing to do here is to remove the FlushFileBuffers call from the windows fs module, bringing it into alignment with the unix module. \r\n\r\nThe other options are:\r\n - having flush() be inconsistent between platforms, making anything that uses it slow on Windows and fast on Unix, leading to a perception that Windows is slow, when rust is causing the issue.\r\n - having flush() be slow on both platforms, so that rather than BufWriter making things faster by insulating high  level code from context switching overheads, it will now also introduce IO overheads, which are typically 100-1000x slower than context switches.\r\n - we encourage people not to use flush at all, and instead to just drop BufWriter's, which has poor implications for correctness\r\n\r\n### Meta\r\n\r\nI haven't checked blame for the windows source; pretty sure the unix source has been like this forever.", "closed_by": {"login": "sfackler", "id": 1455697, "node_id": "MDQ6VXNlcjE0NTU2OTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1455697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfackler", "html_url": "https://github.com/sfackler", "followers_url": "https://api.github.com/users/sfackler/followers", "following_url": "https://api.github.com/users/sfackler/following{/other_user}", "gists_url": "https://api.github.com/users/sfackler/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfackler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfackler/subscriptions", "organizations_url": "https://api.github.com/users/sfackler/orgs", "repos_url": "https://api.github.com/users/sfackler/repos", "events_url": "https://api.github.com/users/sfackler/events{/privacy}", "received_events_url": "https://api.github.com/users/sfackler/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/74385/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/74385/timeline", "performed_via_github_app": null, "state_reason": "completed"}