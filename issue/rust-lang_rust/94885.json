{"url": "https://api.github.com/repos/rust-lang/rust/issues/94885", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/94885/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/94885/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/94885/events", "html_url": "https://github.com/rust-lang/rust/issues/94885", "id": 1167305593, "node_id": "I_kwDOAAsO6M5Fk6t5", "number": 94885, "title": "Specialization impls conflicting", "user": {"login": "jafioti", "id": 13525371, "node_id": "MDQ6VXNlcjEzNTI1Mzcx", "avatar_url": "https://avatars.githubusercontent.com/u/13525371?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jafioti", "html_url": "https://github.com/jafioti", "followers_url": "https://api.github.com/users/jafioti/followers", "following_url": "https://api.github.com/users/jafioti/following{/other_user}", "gists_url": "https://api.github.com/users/jafioti/gists{/gist_id}", "starred_url": "https://api.github.com/users/jafioti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jafioti/subscriptions", "organizations_url": "https://api.github.com/users/jafioti/orgs", "repos_url": "https://api.github.com/users/jafioti/repos", "events_url": "https://api.github.com/users/jafioti/events{/privacy}", "received_events_url": "https://api.github.com/users/jafioti/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-03-12T14:36:17Z", "updated_at": "2023-04-26T02:38:47Z", "closed_at": "2023-04-26T02:38:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "I posted this on the Rust Forum, but got no response so I'm not sure if this is a bug or a rough edge for const generics and specialization.\r\n\r\nI'm trying to basically use const generics to compile time check tensor shapes. I have a pretty simple example where I need to custom specify different impls of Mul for tensors of 2 dims times 2 dims, 1 x 1 dim, 2 x 1 dim, and 1 x 2 dim. So I wrote this:\r\n\r\n```rust\r\nstruct Tensor<const D1: usize, const D2: usize> {}\r\n\r\n// 2 x 2\r\nimpl <const D1: usize, const D2: usize>Mul<&Tensor<D1, D2>> for Tensor<D1, D2> {\r\n    default type Output = Tensor<D1, D2>;\r\n\r\n    default fn mul(self, rhs: &Tensor<D1, D2>) -> Self::Output {\r\n        todo!()\r\n    }\r\n}\r\n\r\n// 2 x 1\r\nimpl <const D1: usize, const D2: usize>Mul<&Tensor<D1, 1>> for Tensor<D1, D2> {\r\n    type Output = Tensor<D1, 1>;\r\n\r\n    fn mul(self, rhs: &Tensor<D1, 1>) -> Self::Output {\r\n        todo!()\r\n    }\r\n}\r\n```\r\n\r\nbut I get an error on the 2x1 impl: `conflicting implementations of trait std::ops::Mul<&Tensor<{_: usize}, 1_usize>> for type Tensor<{_: usize}, 1_usize>\r\nconflicting implementation for Tensor<{_: usize}, 1_usize>`\r\n\r\nI also tried to mark the 2x2 impl with default:\r\n```rust\r\ndefault impl <const D1: usize, const D2: usize>Mul<&Tensor<D1, D2>> for Tensor<D1, D2> {\r\n    default type Output = Tensor<D1, D2>;\r\n\r\n    default fn mul(self, rhs: &Tensor<D1, D2>) -> Self::Output {\r\n        todo!()\r\n    }\r\n}\r\n```\r\n\r\nbut this is recursing a bunch so I get this error:\r\n`overflow evaluating the requirement Tensor<{_: usize}, 1_usize>: std::ops::Mul<&Tensor<{_: usize}, 1_usize>>`\r\n\r\nI'm not sure why this is conflicting since one implementation is more specific than the other (D2 is set to 1 in the 2x1 impl)\r\n\r\nAny help is much appreciated!", "closed_by": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/94885/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/94885/timeline", "performed_via_github_app": null, "state_reason": "not_planned"}