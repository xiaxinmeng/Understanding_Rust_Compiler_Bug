{"url": "https://api.github.com/repos/rust-lang/rust/issues/85380", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/85380/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/85380/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/85380/events", "html_url": "https://github.com/rust-lang/rust/issues/85380", "id": 892750130, "node_id": "MDU6SXNzdWU4OTI3NTAxMzA=", "number": 85380, "title": "Integer division not simplified to a constant when possible", "user": {"login": "LingMan", "id": 18645382, "node_id": "MDQ6VXNlcjE4NjQ1Mzgy", "avatar_url": "https://avatars.githubusercontent.com/u/18645382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LingMan", "html_url": "https://github.com/LingMan", "followers_url": "https://api.github.com/users/LingMan/followers", "following_url": "https://api.github.com/users/LingMan/following{/other_user}", "gists_url": "https://api.github.com/users/LingMan/gists{/gist_id}", "starred_url": "https://api.github.com/users/LingMan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LingMan/subscriptions", "organizations_url": "https://api.github.com/users/LingMan/orgs", "repos_url": "https://api.github.com/users/LingMan/repos", "events_url": "https://api.github.com/users/LingMan/events{/privacy}", "received_events_url": "https://api.github.com/users/LingMan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 234956, "node_id": "MDU6TGFiZWwyMzQ5NTY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-codegen", "name": "A-codegen", "color": "f7e101", "default": false, "description": "Area: Code generation"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2021-05-16T20:12:34Z", "updated_at": "2023-04-05T17:35:29Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Consider this example (https://godbolt.org/z/Wvr6W3Gc9):\r\n```rust\r\npub fn foo(num: i32) -> i32 {\r\n    if num >= 100 && num < 200 {\r\n        num / 100\r\n    } else {\r\n        1\r\n    }\r\n}\r\n```\r\nIt is clear that `num / 100` will always return `1`, but as of rustc 1.54.0-nightly (4de757209 2021-05-01) the output is:\r\n```asm\r\nexample::foo:\r\n        lea     ecx, [rdi - 100]\r\n        mov     eax, 1\r\n        cmp     ecx, 99\r\n        ja      .LBB0_2\r\n        movsxd  rax, edi\r\n        imul    rax, rax, 1374389535\r\n        mov     rcx, rax\r\n        shr     rcx, 63\r\n        sar     rax, 37\r\n        add     eax, ecx\r\n.LBB0_2:\r\n        ret\r\n```\r\n\r\nBoth clang and gcc compile equivalent C code to a simple\r\n```asm\r\nfoo(int):                                # @foo(int)\r\n        mov     eax, 1\r\n        ret\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/85380/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/85380/timeline", "performed_via_github_app": null, "state_reason": null}