{"url": "https://api.github.com/repos/rust-lang/rust/issues/45251", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/45251/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/45251/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/45251/events", "html_url": "https://github.com/rust-lang/rust/issues/45251", "id": 265156721, "node_id": "MDU6SXNzdWUyNjUxNTY3MjE=", "number": 45251, "title": "Nonconflicting Conflicting impl in trait object when trait and object impl same item name", "user": {"login": "Havvy", "id": 731722, "node_id": "MDQ6VXNlcjczMTcyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/731722?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Havvy", "html_url": "https://github.com/Havvy", "followers_url": "https://api.github.com/users/Havvy/followers", "following_url": "https://api.github.com/users/Havvy/following{/other_user}", "gists_url": "https://api.github.com/users/Havvy/gists{/gist_id}", "starred_url": "https://api.github.com/users/Havvy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Havvy/subscriptions", "organizations_url": "https://api.github.com/users/Havvy/orgs", "repos_url": "https://api.github.com/users/Havvy/repos", "events_url": "https://api.github.com/users/Havvy/events{/privacy}", "received_events_url": "https://api.github.com/users/Havvy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-10-13T03:09:51Z", "updated_at": "2018-06-09T03:32:33Z", "closed_at": "2018-06-09T03:32:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "[Playpen](https://play.rust-lang.org/?gist=9b204ec76dd257a2772819bcc2cedc83&version=nightly)\r\n\r\n<details>\r\n<summary>Source</summary>\r\n\r\n```rust\r\ntrait Trait {\r\n    fn test(&self) -> &'static str { \"Default\" }\r\n}\r\n\r\nstruct NotSyncStruct(*const ());\r\n\r\nimpl NotSyncStruct {\r\n    fn new() -> NotSyncStruct { NotSyncStruct(&() as *const ()) }\r\n}\r\n\r\nimpl Trait {\r\n    fn test(&self) -> &'static str { \"Without Send and Sync\" }\r\n}\r\n\r\nimpl Trait + Send + Sync {\r\n    fn test(&self) -> &'static str { \"With Send and Sync\" }\r\n}\r\n\r\nimpl Trait for NotSyncStruct {}\r\n\r\nfn main () {\r\n    println!(\"{}\", <Trait>::test(&NotSyncStruct::new()));\r\n}\r\n```\r\n\r\n</details>\r\n<br>\r\n<details>\r\n<summary>Error Message</summary>\r\n\r\n```\r\n   Compiling playground v0.0.1 (file:///playground)\r\nerror[E0034]: multiple applicable items in scope\r\n  --> src/main.rs:22:20\r\n   |\r\n22 |     println!(\"{}\", <Trait>::test(&NotSyncStruct::new()));\r\n   |                    ^^^^^^^^^^^^^ multiple `test` found\r\n   |\r\nnote: candidate #1 is defined in an impl for the type `Trait + 'static`\r\n  --> src/main.rs:12:5\r\n   |\r\n12 |     fn test(&self) -> &'static str { \"Without Send and Sync\" }\r\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nnote: candidate #2 is defined in an impl for the type `Trait + std::marker::Sync + std::marker::Send + 'static`\r\n  --> src/main.rs:16:5\r\n   |\r\n16 |     fn test(&self) -> &'static str { \"With Send and Sync\" }\r\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nnote: candidate #3 is defined in the trait `Trait`\r\n  --> src/main.rs:2:5\r\n   |\r\n2  |     fn test(&self) -> &'static str { \"Default\" }\r\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n   = help: to disambiguate the method call, write `Trait::test(...)` instead\r\n\r\nerror: aborting due to previous error\r\n\r\nerror: Could not compile `playground`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n\r\n</details>\r\n<br>\r\nThe error message here suggests that there are three implementations that define the associated item when in reality, there can only be two. It's not possible to call the implementation on Trait + std::marker::Sync + std::marker::Send + 'static` because the type is not Sync. So the error message should not show that implementation.\r\n\r\nAt least, that is what I believe the error to be. For if you comment out either the default implementation on line 2 or the inherent implementation on line 12, then the program actually compiles.", "closed_by": {"login": "Havvy", "id": 731722, "node_id": "MDQ6VXNlcjczMTcyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/731722?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Havvy", "html_url": "https://github.com/Havvy", "followers_url": "https://api.github.com/users/Havvy/followers", "following_url": "https://api.github.com/users/Havvy/following{/other_user}", "gists_url": "https://api.github.com/users/Havvy/gists{/gist_id}", "starred_url": "https://api.github.com/users/Havvy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Havvy/subscriptions", "organizations_url": "https://api.github.com/users/Havvy/orgs", "repos_url": "https://api.github.com/users/Havvy/repos", "events_url": "https://api.github.com/users/Havvy/events{/privacy}", "received_events_url": "https://api.github.com/users/Havvy/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/45251/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/45251/timeline", "performed_via_github_app": null, "state_reason": "completed"}