{"url": "https://api.github.com/repos/rust-lang/rust/issues/71955", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/71955/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/71955/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/71955/events", "html_url": "https://github.com/rust-lang/rust/issues/71955", "id": 613526389, "node_id": "MDU6SXNzdWU2MTM1MjYzODk=", "number": 71955, "title": "[BUG REPORT]: Internal Compiler Error on stable surrounding type inference", "user": {"login": "Alfriadox", "id": 10987325, "node_id": "MDQ6VXNlcjEwOTg3MzI1", "avatar_url": "https://avatars.githubusercontent.com/u/10987325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Alfriadox", "html_url": "https://github.com/Alfriadox", "followers_url": "https://api.github.com/users/Alfriadox/followers", "following_url": "https://api.github.com/users/Alfriadox/following{/other_user}", "gists_url": "https://api.github.com/users/Alfriadox/gists{/gist_id}", "starred_url": "https://api.github.com/users/Alfriadox/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Alfriadox/subscriptions", "organizations_url": "https://api.github.com/users/Alfriadox/orgs", "repos_url": "https://api.github.com/users/Alfriadox/repos", "events_url": "https://api.github.com/users/Alfriadox/events{/privacy}", "received_events_url": "https://api.github.com/users/Alfriadox/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-06T18:33:43Z", "updated_at": "2021-11-06T04:15:20Z", "closed_at": "2021-11-06T04:15:20Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Stable rust throws an internal compiler error (ICE) that appears to be related to type inference surrounding higher rank trait bounds (HRTBs) and associated types.\r\n\r\n## Code:\r\n\r\n[playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=732383eccc69ce46bb265a3787040818)\r\n\r\n```rust\r\n\r\ntrait Parser<'s> {\r\n    type Output;\r\n    \r\n    fn call(&self, input: &'s str) -> (&'s str, Self::Output);\r\n}\r\n\r\nimpl<'s, F, T> Parser<'s> for F\r\nwhere F: Fn(&'s str) -> (&'s str, T) {\r\n    type Output = T;\r\n    fn call(&self, input: &'s str) -> (&'s str, T) {\r\n        self(input)\r\n    }\r\n}\r\n\r\nfn foo<F1, F2>(\r\n    f1: F1,\r\n    base: &'static str,\r\n    f2: F2\r\n) \r\nwhere \r\n    F1: for<'a> Parser<'a>,\r\n    F2: FnOnce(&<F1 as Parser>::Output) -> bool\r\n{\r\n    let s: String = base.to_owned();\r\n    let str_ref = s.as_ref();\r\n    let (remaining, produced) = f1.call(str_ref);\r\n    assert!(f2(&produced));\r\n    assert_eq!(remaining.len(), 0);\r\n}\r\n\r\nstruct Wrapper<'a>(&'a str);\r\n\r\nfn main() {\r\n    fn bar<'a>(s: &'a str) -> (&'a str, &'a str) {\r\n        (&s[..1], &s[..])\r\n    }\r\n    \r\n    fn baz<'a>(s: &'a str) -> (&'a str, Wrapper<'a>) {\r\n        (&s[..1], Wrapper(&s[..]))\r\n    }\r\n    \r\n    foo(bar, \"string\", |s| s.len() == 5);\r\n    foo(baz, \"string\", |s| s.0.len() == 5);\r\n}\r\n```\r\n\r\n## Expectaions:\r\nI expected this code to compile and run smoothly, without throwing any errors at compile time or runtime.\r\n\r\n## Result\r\nInstead, this happened:\r\n```\r\n   Compiling playground v0.0.1 (/playground)\r\nerror: internal compiler error: src/librustc_infer/traits/codegen/mod.rs:61: Encountered error `OutputTypeParameterMismatch(Binder(<[closure@src/main.rs:43:24: 43:40] as std::ops::FnOnce<(&<for<'a> fn(&'a str) -> (&'a str, &'a str) {main::bar} as Parser<'_>>::Output,)>>), Binder(<[closure@src/main.rs:43:24: 43:40] as std::ops::FnOnce<(&&str,)>>), Sorts(ExpectedFound { expected: &str, found: <for<'a> fn(&'a str) -> (&'a str, &'a str) {main::bar} as Parser<'_>>::Output }))` selecting `Binder(<[closure@src/main.rs:43:24: 43:40] as std::ops::FnOnce<(&&str,)>>)` during codegen\r\n\r\nthread 'rustc' panicked at 'Box<Any>', src/librustc_errors/lib.rs:875:9\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.43.0 (4fb7144ed 2020-04-20) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C codegen-units=1 -C debuginfo=2 --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nerror: aborting due to previous error\r\n\r\nerror: could not compile `playground`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n\r\n## Meta\r\nRust version: this is running on the playground on the stable version.\r\n\r\nOn my local machine (which gives the same output) `rust --version --verbose`:\r\n```\r\nrustc 1.43.0 (4fb7144ed 2020-04-20)\r\nbinary: rustc\r\ncommit-hash: 4fb7144ed159f94491249e86d5bbd033b5d60550\r\ncommit-date: 2020-04-20\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.43.0\r\nLLVM version: 9.0\r\n```\r\n\r\nBacktrace (on playground):\r\n```\r\n  Compiling playground v0.0.1 (/playground)\r\nerror: internal compiler error: src/librustc_infer/traits/codegen/mod.rs:61: Encountered error `OutputTypeParameterMismatch(Binder(<[closure@src/main.rs:43:24: 43:40] as std::ops::FnOnce<(&<for<'a> fn(&'a str) -> (&'a str, &'a str) {main::bar} as Parser<'_>>::Output,)>>), Binder(<[closure@src/main.rs:43:24: 43:40] as std::ops::FnOnce<(&&str,)>>), Sorts(ExpectedFound { expected: &str, found: <for<'a> fn(&'a str) -> (&'a str, &'a str) {main::bar} as Parser<'_>>::Output }))` selecting `Binder(<[closure@src/main.rs:43:24: 43:40] as std::ops::FnOnce<(&&str,)>>)` during codegen\r\n\r\nthread 'rustc' panicked at 'Box<Any>', src/librustc_errors/lib.rs:875:9\r\nstack backtrace:\r\n   0: backtrace::backtrace::libunwind::trace\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.44/src/backtrace/libunwind.rs:86\r\n   1: backtrace::backtrace::trace_unsynchronized\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.44/src/backtrace/mod.rs:66\r\n   2: std::sys_common::backtrace::_print_fmt\r\n             at src/libstd/sys_common/backtrace.rs:78\r\n   3: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt\r\n             at src/libstd/sys_common/backtrace.rs:59\r\n   4: core::fmt::write\r\n             at src/libcore/fmt/mod.rs:1063\r\n   5: std::io::Write::write_fmt\r\n             at src/libstd/io/mod.rs:1426\r\n   6: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:62\r\n   7: std::sys_common::backtrace::print\r\n             at src/libstd/sys_common/backtrace.rs:49\r\n   8: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/panicking.rs:204\r\n   9: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:224\r\n  10: rustc_driver::report_ice\r\n  11: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:474\r\n  12: std::panicking::begin_panic\r\n  13: rustc_errors::HandlerInner::bug\r\n  14: rustc_errors::Handler::bug\r\n  15: rustc::util::bug::opt_span_bug_fmt::{{closure}}\r\n  16: rustc::ty::context::tls::with_opt::{{closure}}\r\n  17: rustc::ty::context::tls::with_opt\r\n  18: rustc::util::bug::opt_span_bug_fmt\r\n  19: rustc::util::bug::bug_fmt\r\n  20: rustc::ty::context::GlobalCtxt::enter_local\r\n  21: rustc_infer::traits::codegen::codegen_fulfill_obligation\r\n  22: rustc::ty::query::__query_compute::codegen_fulfill_obligation\r\n  23: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::codegen_fulfill_obligation>::compute\r\n  24: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  25: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  26: rustc_ty::instance::resolve_instance\r\n  27: rustc::ty::instance::Instance::resolve\r\n  28: <rustc_mir::monomorphize::collector::MirNeighborCollector as rustc::mir::visit::Visitor>::visit_terminator_kind\r\n  29: rustc_mir::monomorphize::collector::collect_items_rec\r\n  30: rustc_mir::monomorphize::collector::collect_items_rec\r\n  31: rustc_session::utils::<impl rustc_session::session::Session>::time\r\n  32: rustc_mir::monomorphize::collector::collect_crate_mono_items\r\n  33: rustc_mir::monomorphize::partitioning::collect_and_partition_mono_items\r\n  34: rustc::ty::query::__query_compute::collect_and_partition_mono_items\r\n  35: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  36: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  37: rustc_codegen_ssa::base::codegen_crate\r\n  38: <rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_utils::codegen_backend::CodegenBackend>::codegen_crate\r\n  39: rustc_interface::passes::start_codegen\r\n  40: rustc::ty::context::tls::enter_global\r\n  41: rustc_interface::queries::Queries::ongoing_codegen\r\n  42: rustc_interface::interface::run_compiler_in_existing_thread_pool\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.43.0 (4fb7144ed 2020-04-20) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C codegen-units=1 -C debuginfo=2 --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [codegen_fulfill_obligation] checking if `std::ops::FnOnce` fulfills its obligations\r\n#1 [collect_and_partition_mono_items] collect_and_partition_mono_items\r\nend of query stack\r\nerror: aborting due to previous error\r\n\r\nerror: could not compile `playground`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n\r\nBacktrace (with verbose enabled) (on my local machine):\r\n```\r\n$ RUST_BACKTRACE=1 rustc --verbose ICE.rs\r\nerror: internal compiler error: src/librustc_infer/traits/codegen/mod.rs:61: Encountered error `OutputTypeParameterMismatch(Binder(<[closure@ICE.rs:43:24: 43:40] as std::ops::FnOnce<(&<for<'a> fn(&'a str) -> (&'a str, &'a str) {main::bar} as Parser<'_>>::Output,)>>), Binder(<[closure@ICE.rs:43:24: 43:40] as std::ops::FnOnce<(&&str,)>>), Sorts(ExpectedFound { expected: &str, found: <for<'a> fn(&'a str) -> (&'a str, &'a str) {main::bar} as Parser<'_>>::Output }))` selecting `Binder(<[closure@ICE.rs:43:24: 43:40] as std::ops::FnOnce<(&&str,)>>)` during codegen\r\n\r\nthread 'rustc' panicked at 'Box<Any>', src/librustc_errors/lib.rs:875:9\r\nstack backtrace:\r\n   0: backtrace::backtrace::libunwind::trace\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.44/src/backtrace/libunwind.rs:86\r\n   1: backtrace::backtrace::trace_unsynchronized\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.44/src/backtrace/mod.rs:66\r\n   2: std::sys_common::backtrace::_print_fmt\r\n             at src/libstd/sys_common/backtrace.rs:78\r\n   3: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt\r\n             at src/libstd/sys_common/backtrace.rs:59\r\n   4: core::fmt::write\r\n             at src/libcore/fmt/mod.rs:1063\r\n   5: std::io::Write::write_fmt\r\n             at src/libstd/io/mod.rs:1426\r\n   6: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:62\r\n   7: std::sys_common::backtrace::print\r\n             at src/libstd/sys_common/backtrace.rs:49\r\n   8: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/panicking.rs:204\r\n   9: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:224\r\n  10: rustc_driver::report_ice\r\n  11: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:474\r\n  12: std::panicking::begin_panic\r\n  13: rustc_errors::HandlerInner::bug\r\n  14: rustc_errors::Handler::bug\r\n  15: rustc::util::bug::opt_span_bug_fmt::{{closure}}\r\n  16: rustc::ty::context::tls::with_opt::{{closure}}\r\n  17: rustc::ty::context::tls::with_opt\r\n  18: rustc::util::bug::opt_span_bug_fmt\r\n  19: rustc::util::bug::bug_fmt\r\n  20: rustc::ty::context::GlobalCtxt::enter_local\r\n  21: rustc_infer::traits::codegen::codegen_fulfill_obligation\r\n  22: rustc::ty::query::__query_compute::codegen_fulfill_obligation\r\n  23: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::codegen_fulfill_obligation>::compute\r\n  24: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  25: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  26: rustc_ty::instance::resolve_instance\r\n  27: rustc::ty::instance::Instance::resolve\r\n  28: <rustc_mir::monomorphize::collector::MirNeighborCollector as rustc::mir::visit::Visitor>::visit_terminator_kind\r\n  29: rustc_mir::monomorphize::collector::collect_items_rec\r\n  30: rustc_mir::monomorphize::collector::collect_items_rec\r\n  31: rustc_session::utils::<impl rustc_session::session::Session>::time\r\n  32: rustc_mir::monomorphize::collector::collect_crate_mono_items\r\n  33: rustc_mir::monomorphize::partitioning::collect_and_partition_mono_items\r\n  34: rustc::ty::query::__query_compute::collect_and_partition_mono_items\r\n  35: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  36: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  37: rustc_codegen_ssa::base::codegen_crate\r\n  38: <rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_utils::codegen_backend::CodegenBackend>::codegen_crate\r\n  39: rustc_interface::passes::start_codegen\r\n  40: rustc::ty::context::tls::enter_global\r\n  41: rustc_interface::queries::Queries::ongoing_codegen\r\n  42: rustc_interface::interface::run_compiler_in_existing_thread_pool\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.43.0 (4fb7144ed 2020-04-20) running on x86_64-unknown-linux-gnu\r\n\r\nquery stack during panic:\r\n#0 [codegen_fulfill_obligation] checking if `std::ops::FnOnce` fulfills its obligations\r\n#1 [collect_and_partition_mono_items] collect_and_partition_mono_items\r\nend of query stack\r\nerror: aborting due to previous error\r\n```", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/71955/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/71955/timeline", "performed_via_github_app": null, "state_reason": "completed"}