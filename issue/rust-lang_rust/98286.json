{"url": "https://api.github.com/repos/rust-lang/rust/issues/98286", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/98286/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/98286/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/98286/events", "html_url": "https://github.com/rust-lang/rust/issues/98286", "id": 1276740015, "node_id": "I_kwDOAAsO6M5MGYGv", "number": 98286, "title": "Tracking Issue for `task::Waker::noop`", "user": {"login": "SabrinaJewson", "id": 58880148, "node_id": "MDQ6VXNlcjU4ODgwMTQ4", "avatar_url": "https://avatars.githubusercontent.com/u/58880148?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SabrinaJewson", "html_url": "https://github.com/SabrinaJewson", "followers_url": "https://api.github.com/users/SabrinaJewson/followers", "following_url": "https://api.github.com/users/SabrinaJewson/following{/other_user}", "gists_url": "https://api.github.com/users/SabrinaJewson/gists{/gist_id}", "starred_url": "https://api.github.com/users/SabrinaJewson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SabrinaJewson/subscriptions", "organizations_url": "https://api.github.com/users/SabrinaJewson/orgs", "repos_url": "https://api.github.com/users/SabrinaJewson/repos", "events_url": "https://api.github.com/users/SabrinaJewson/events{/privacy}", "received_events_url": "https://api.github.com/users/SabrinaJewson/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 650846969, "node_id": "MDU6TGFiZWw2NTA4NDY5Njk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-tracking-issue", "name": "C-tracking-issue", "color": "f5f1fd", "default": false, "description": "Category: A tracking issue for an RFC or an unstable feature."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-06-20T10:50:09Z", "updated_at": "2023-06-06T13:54:06Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Feature gate: `#![feature(noop_waker)]`\r\n\r\nThis is a tracking issue for `task::Waker::noop`, a way to easily crate `task::Waker`s that do nothing.\r\n\r\n### Public API\r\n\r\n```rust\r\n// core::task\r\n\r\nimpl Waker {\r\n    #[must_use]\r\n    pub const fn noop() -> Waker { /* \u2026 */ }\r\n}\r\n```\r\n\r\n### Steps / History\r\n\r\n- [x] Implementation: #96875\r\n- [ ] Final comment period (FCP)\r\n- [ ] Stabilization PR\r\n\r\n### Unresolved Questions\r\n\r\n- Should we also add `RawWaker::noop()`? (I don't think so, I can't think of a use case for it)\r\n- Should we also add `Context::noop()`? Depending on the direction `Context` goes a \u201cnoop context\u201d might not even make sense in future.\r\n- Should it be an associated constant instead? That would allow for `let cx = &mut Context::from_waker(&Waker::NOOP);` to work on one line (without additional local variables) which is convenient.\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/98286/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/98286/timeline", "performed_via_github_app": null, "state_reason": null}