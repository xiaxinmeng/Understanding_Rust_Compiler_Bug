{"url": "https://api.github.com/repos/rust-lang/rust/issues/67036", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/67036/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/67036/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/67036/events", "html_url": "https://github.com/rust-lang/rust/issues/67036", "id": 532961817, "node_id": "MDU6SXNzdWU1MzI5NjE4MTc=", "number": 67036, "title": "Unexpected interactions with async blocks, auto traits, and trait objects", "user": {"login": "syntacticsugarglider", "id": 25019299, "node_id": "MDQ6VXNlcjI1MDE5Mjk5", "avatar_url": "https://avatars.githubusercontent.com/u/25019299?v=4", "gravatar_id": "", "url": "https://api.github.com/users/syntacticsugarglider", "html_url": "https://github.com/syntacticsugarglider", "followers_url": "https://api.github.com/users/syntacticsugarglider/followers", "following_url": "https://api.github.com/users/syntacticsugarglider/following{/other_user}", "gists_url": "https://api.github.com/users/syntacticsugarglider/gists{/gist_id}", "starred_url": "https://api.github.com/users/syntacticsugarglider/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/syntacticsugarglider/subscriptions", "organizations_url": "https://api.github.com/users/syntacticsugarglider/orgs", "repos_url": "https://api.github.com/users/syntacticsugarglider/repos", "events_url": "https://api.github.com/users/syntacticsugarglider/events{/privacy}", "received_events_url": "https://api.github.com/users/syntacticsugarglider/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}, {"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1049510487, "node_id": "MDU6TGFiZWwxMDQ5NTEwNDg3", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-async-await", "name": "A-async-await", "color": "f7e101", "default": false, "description": "Area: Async & Await"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-04T22:03:25Z", "updated_at": "2019-12-05T05:38:10Z", "closed_at": "2019-12-05T05:38:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The source below does not compile, where the expected behavior is for it to compile as far as I can tell. Removing the `Send` bound on `drop_send` causes it to compile. Removing the `async {}.await` no-op causes it to compile. This seems likely related to #64552, with the same sort of leakage of regions that should not be user-visible occurring. However, the error message is quite opaque in this case.\r\n\r\n```\r\nnote: `Bound` would have to be implemented for the type `(dyn Object + '0)`, for any lifetime `'0`...\r\n   = note: ...but `Bound` is actually implemented for the type `(dyn Object + '1)`, for some specific lifetime `'1`\r\n```\r\n\r\nMy presumption is therefore that the auto trait is being correctly satisfied in the generator for some lifetime, the implementation of `Bound` is implicitly constrained on `Send` by `Object` where the async block is required to be `Send`, so #64552 is occurring in a lifetime-dependent fashion resulting in an altogether surprising error message. I'm not as familiar with borrow checker internals as I'd like so this may be barking up the wrong tree.\r\n\r\nI am, however, unclear as to why the associated type parametrization over `T::Type` as opposed to simply `T` is necessary to reproduce.\r\n\r\n```Rust\r\nuse std::marker::PhantomData;\r\n\r\n// remove this Send bound and it compiles\r\nfn drop_send<F: Send>(_: F) {}\r\n\r\ntrait Object: Send {}\r\n\r\npub trait Bound {\r\n    type Type;\r\n}\r\n\r\nimpl Bound for dyn Object {\r\n    type Type = ();\r\n}\r\n\r\ntrait Contains<T> {}\r\n\r\nstruct IsBound<T: Bound + ?Sized>(PhantomData<dyn Contains<T::Type> + Send>);\r\n\r\nimpl<T: Bound + ?Sized> IsBound<T> {\r\n    pub fn new() -> Self {\r\n        IsBound(PhantomData)\r\n    }\r\n}\r\n\r\nfn fails() {\r\n    drop_send(async {\r\n        let collection: IsBound<dyn Object> = IsBound::new();\r\n\r\n        // comment out this no-op and it builds:\r\n        async {}.await;\r\n    })\r\n}\r\n```\r\n\r\nFinally, [here](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=442ae84bc84bc8f996497b5a24ac312f) is a playground demonstrating this issue to show independence from any local state of my own system", "closed_by": {"login": "csmoe", "id": 35686186, "node_id": "MDQ6VXNlcjM1Njg2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/35686186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csmoe", "html_url": "https://github.com/csmoe", "followers_url": "https://api.github.com/users/csmoe/followers", "following_url": "https://api.github.com/users/csmoe/following{/other_user}", "gists_url": "https://api.github.com/users/csmoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/csmoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csmoe/subscriptions", "organizations_url": "https://api.github.com/users/csmoe/orgs", "repos_url": "https://api.github.com/users/csmoe/repos", "events_url": "https://api.github.com/users/csmoe/events{/privacy}", "received_events_url": "https://api.github.com/users/csmoe/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/67036/reactions", "total_count": 3, "+1": 3, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/67036/timeline", "performed_via_github_app": null, "state_reason": "completed"}