{"url": "https://api.github.com/repos/rust-lang/rust/issues/23480", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/23480/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/23480/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/23480/events", "html_url": "https://github.com/rust-lang/rust/issues/23480", "id": 62722157, "node_id": "MDU6SXNzdWU2MjcyMjE1Nw==", "number": 23480, "title": "Macro expansion often produces invalid `Span` values", "user": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 27424086, "node_id": "MDU6TGFiZWwyNzQyNDA4Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-parser", "name": "A-parser", "color": "f7e101", "default": false, "description": "Area: The parsing of Rust source code to an AST."}, {"id": 132910982, "node_id": "MDU6TGFiZWwxMzI5MTA5ODI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-macros", "name": "A-macros", "color": "f7e101", "default": false, "description": "Area: All kinds of macros (custom derive, macro_rules!, proc macros, ..)"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-03-18T15:31:18Z", "updated_at": "2019-08-04T22:22:39Z", "closed_at": "2019-08-04T22:22:39Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The span of many AST node types is pieced together from the spans of the node's children. Here is an example from `Parser::parse_more_binops`:\n\n``` rust\nlet lhs_span = lhs.span;\nlet rhs_span = rhs.span;\nlet binary = self.mk_binary(codemap::respan(cur_op_span, cur_op), lhs, rhs);\nlet bin = self.mk_expr(lhs_span.lo, rhs_span.hi, binary);\n```\n\nUnfortunately, in the macro expansion phase, this can lead to undesirable results. Consider the following example:\n\n``` rust\nadd1!(3);\nmacro_rules! add1 { ($val:expr) => ( { 1 + $val } ) }\n```\n\nHere `lhs` and `rhs` come from completely different contexts. `lhs_span` comes from the macro-definition-site (`lo: 50, hi: 51`) while `rhs_span` comes from the expansion-site (`lo: 6, hi:7`). Taking `lo` from `lhs` and `hi` from `rhs`, as the above code does, we end up with a span of `lo: 50, hi: 7`. This value can't be interpreted in any meaningful way.\n\nA similar error can occur for any kind of AST node where a sub-node is located directly at the border of a parent:\n\n``` rust\n// binary operators\n$expr + $expr\n\n// unary operators\n! $expr\n\n// closures\n|x| $expr\n\n// parameters\nfn foo($expr: $ty) {}\n\n// type parameters\nfn bar<$ident: $ty>\n\n// type ascription\n$expr : $type\n\n// C-style enums\nenum Foo {\n    $ident = $expr,\n}\n\n// derived types\n& &mut $ty\n\n// where clauses\nfn baz<T>() where T: $ty {}\n\n// call expressions (?)\n$e()\n\n// path expressions (?)\n$x::foo()\n\n// ... probably others\n```\n\nThis invalid `Span` values may lead to strange error messages and caused at least one ICE (#23115).\n", "closed_by": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/23480/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/23480/timeline", "performed_via_github_app": null, "state_reason": "completed"}