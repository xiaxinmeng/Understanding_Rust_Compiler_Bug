{"url": "https://api.github.com/repos/rust-lang/rust/issues/62385", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/62385/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/62385/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/62385/events", "html_url": "https://github.com/rust-lang/rust/issues/62385", "id": 464385209, "node_id": "MDU6SXNzdWU0NjQzODUyMDk=", "number": 62385, "title": "Trait resolution fails with unclear error when using function types as input parameters", "user": {"login": "gnzlbg", "id": 904614, "node_id": "MDQ6VXNlcjkwNDYxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/904614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnzlbg", "html_url": "https://github.com/gnzlbg", "followers_url": "https://api.github.com/users/gnzlbg/followers", "following_url": "https://api.github.com/users/gnzlbg/following{/other_user}", "gists_url": "https://api.github.com/users/gnzlbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnzlbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnzlbg/subscriptions", "organizations_url": "https://api.github.com/users/gnzlbg/orgs", "repos_url": "https://api.github.com/users/gnzlbg/repos", "events_url": "https://api.github.com/users/gnzlbg/events{/privacy}", "received_events_url": "https://api.github.com/users/gnzlbg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1183099971, "node_id": "MDU6TGFiZWwxMTgzMDk5OTcx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-suggestion-diagnostics", "name": "A-suggestion-diagnostics", "color": "f7e101", "default": false, "description": "Area: suggestions generated by the compiler applied by cargo fix"}, {"id": 1596122811, "node_id": "MDU6TGFiZWwxNTk2MTIyODEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-newcomer-roadblock", "name": "D-newcomer-roadblock", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error hard to understand for new users"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-07-04T20:14:46Z", "updated_at": "2020-06-05T22:07:20Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This works ([Playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=e0fd0844e20c87b6e28c8e246aad154c)):\r\n\r\n```rust\r\ntrait Call<F> {\r\n    type Ret;\r\n    fn call(self, f: F) -> Self::Ret;\r\n}\r\n\r\nimpl Call<f32> for f32 {\r\n    type Ret = f32;\r\n    fn call(self, f: f32) -> Self::Ret {\r\n        f\r\n    }\r\n}\r\nimpl Call<i32> for f32 {\r\n    type Ret = i32;\r\n    fn call(self, f: i32) -> Self::Ret {\r\n        f\r\n    }\r\n}\r\n\r\nfn main() {\r\n    let _ = (0_f32).call(0_i32);\r\n}\r\n\r\n```\r\n\r\nbut this fails ([Playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=eb1c03e73ae9b722fb8af8b8f60482cb)):\r\n\r\n```rust\r\ntrait Call<F> {\r\n    type Ret;\r\n    fn call(self, f: F) -> Self::Ret;\r\n}\r\n\r\nimpl Call<fn(f32) -> f32> for f32 {\r\n    type Ret = f32;\r\n    fn call(self, f: fn(f32) -> f32) -> Self::Ret {\r\n        f(self)\r\n    }\r\n}\r\nimpl Call<fn(f32) -> i32> for f32 {\r\n    type Ret = i32;\r\n    fn call(self, f: fn(f32) -> i32) -> Self::Ret {\r\n        f(self)\r\n    }\r\n}\r\n\r\nfn main() {\r\n    fn u0(x: f32) -> f32 {\r\n        x\r\n    }\r\n    let _ = (0_f32).call(u0);\r\n}\r\n\r\n```\r\n\r\nwith\r\n\r\n```\r\nerror[E0277]: the trait bound `f32: Call<fn(f32) -> f32 {main::u0}>` is not satisfied\r\n  --> src/main.rs:23:21\r\n   |\r\n23 |     let _ = (0_f32).call(u0);\r\n   |                     ^^^^ the trait `Call<fn(f32) -> f32 {main::u0}>` is not implemented for `f32`\r\n   |\r\n   = help: the following implementations were found:\r\n             <f32 as Call<fn(f32) -> f32>>\r\n             <f32 as Call<fn(f32) -> i32>>\r\n\r\nerror: aborting due to previous error\r\n```\r\n\r\nI'm not sure if this is by design or not (AFAICT the trait bound is satisfied - EDIT: it is by design, see below), but the error message could be at least much clearer. ", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/62385/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/62385/timeline", "performed_via_github_app": null, "state_reason": null}