{"url": "https://api.github.com/repos/rust-lang/rust/issues/88777", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/88777/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/88777/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/88777/events", "html_url": "https://github.com/rust-lang/rust/issues/88777", "id": 992263076, "node_id": "MDU6SXNzdWU5OTIyNjMwNzY=", "number": 88777, "title": "Could we point out cases of `&'a mut S<'a>` that could be re-written to `&mut S<'a>`?", "user": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1183099971, "node_id": "MDU6TGFiZWwxMTgzMDk5OTcx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-suggestion-diagnostics", "name": "A-suggestion-diagnostics", "color": "f7e101", "default": false, "description": "Area: suggestions generated by the compiler applied by cargo fix"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-09-09T13:58:38Z", "updated_at": "2021-09-17T02:21:56Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n\r\nIf you cannot produce a minimal reproduction case (something that would work in\r\nisolation), please provide the steps or even link to a repository that causes\r\nthe problematic output to occur.\r\n-->\r\n\r\nGiven the following code: https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=4376e96d47d7a35b1858c769744fedef\r\n\r\n```rust\r\nstruct B<'a> {\r\n    val: &'a str,\r\n}\r\n\r\nfn foo<'f>(msg: &'f mut B<'f>) -> String {\r\n    msg.val.to_string()\r\n}\r\n\r\nfn main() {\r\n    let s = \"hello\".to_string();\r\n    let mut b = B{ val: s.as_str() };\r\n    foo(&mut b);\r\n    drop(b);\r\n}\r\n```\r\n\r\nThe current output is:\r\n\r\n```\r\nerror[E0505]: cannot move out of `b` because it is borrowed\r\n  --> src/main.rs:13:10\r\n   |\r\n12 |     foo(&mut b);\r\n   |         ------ borrow of `b` occurs here\r\n13 |     drop(b);\r\n   |          ^\r\n   |          |\r\n   |          move out of `b` occurs here\r\n   |          borrow later used here\r\n```\r\n\r\n<!-- The following is not always necessary. -->\r\nIdeally the output should look like:\r\n\r\n```\r\nerror[E0505]: cannot move out of `b` because it is borrowed\r\n  --> src/main.rs:13:10\r\n   |\r\n12 |     foo(&mut b);\r\n   |         ------ borrow of `b` occurs here\r\n13 |     drop(b);\r\n   |          ^\r\n   |          |\r\n   |          move out of `b` occurs here\r\n   |          borrow later used here\r\nnote: the borrow of `b` has the lifetime `'a` (from the type `b: B<'a>`), due to the signature of `fn foo`:\r\n    fn foo<'f>(msg: &'f mut B<'f>) -> String\r\n                    ~~~~~~~                    \r\nnote: The borrow could choose a different lifetime if the signature of `fn foo` were rewritten to:\r\n    fn foo<'f>(msg: &mut B<'f>) -> String\r\n                    ~~~~\r\n```\r\n\r\n<!--\r\nIf the problem is not self-explanatory, please provide a rationale for the\r\nchange.\r\n-->\r\n\r\n**Motivation**: When people are learning Rust, they sometimes do not know the best place to insert explicit lifetimes. We can help them by providing suggestions for ways to modify their code when the functions that need to be changed are local to the crate they are developing. (I do not think this suggestion would be as helpful if it were applied to external crate dependencies.)\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/88777/reactions", "total_count": 6, "+1": 6, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/88777/timeline", "performed_via_github_app": null, "state_reason": null}