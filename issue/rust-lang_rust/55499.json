{"url": "https://api.github.com/repos/rust-lang/rust/issues/55499", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/55499/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/55499/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/55499/events", "html_url": "https://github.com/rust-lang/rust/issues/55499", "id": 375335160, "node_id": "MDU6SXNzdWUzNzUzMzUxNjA=", "number": 55499, "title": "ICE with async function: 'leak-check would have us replace ReStatic with BrAnon(1)'", "user": {"login": "pcpthm", "id": 43881370, "node_id": "MDQ6VXNlcjQzODgxMzcw", "avatar_url": "https://avatars.githubusercontent.com/u/43881370?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcpthm", "html_url": "https://github.com/pcpthm", "followers_url": "https://api.github.com/users/pcpthm/followers", "following_url": "https://api.github.com/users/pcpthm/following{/other_user}", "gists_url": "https://api.github.com/users/pcpthm/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcpthm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcpthm/subscriptions", "organizations_url": "https://api.github.com/users/pcpthm/orgs", "repos_url": "https://api.github.com/users/pcpthm/repos", "events_url": "https://api.github.com/users/pcpthm/events{/privacy}", "received_events_url": "https://api.github.com/users/pcpthm/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 46741598, "node_id": "MDU6TGFiZWw0Njc0MTU5OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-test", "name": "E-needs-test", "color": "02e10c", "default": false, "description": "Call for participation: writing correctness tests"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-30T06:08:28Z", "updated_at": "2019-04-29T23:35:21Z", "closed_at": "2019-04-29T23:35:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I tried this code [Playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=f45d47274e7f06c047388e08797a3758). I tried to make this code as minimal as possible.\r\n```rust\r\n#![feature(async_await, await_macro, futures_api)]\r\n\r\ntrait MyClosure {\r\n    type Args;\r\n}\r\nimpl<R> MyClosure for dyn FnMut() -> R\r\nwhere R: 'static {\r\n    type Args = ();\r\n}\r\nstruct MyStream<C: ?Sized + MyClosure> {\r\n    x: C::Args,\r\n}\r\n// or get_future() -> futures::future::Ready<()> { futures::future::ready(()) }\r\nasync fn get_future<C: ?Sized + MyClosure>(_stream: MyStream<C>) {\r\n}\r\nasync fn f() {\r\n    let messages: MyStream<FnMut()> = unimplemented!();\r\n    await!(get_future(messages));\r\n}\r\n```\r\n\r\nResult:\r\n```\r\nthread 'main' panicked at 'leak-check would have us replace ReStatic with BrAnon(1)', librustc/infer/higher_ranked/mod.rs:763:21\r\nstack backtrace:\r\n   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace\r\n             at libstd/sys/unix/backtrace/tracing/gcc_s.rs:49\r\n   1: std::sys_common::backtrace::print\r\n             at libstd/sys_common/backtrace.rs:71\r\n             at libstd/sys_common/backtrace.rs:59\r\n   2: std::panicking::default_hook::{{closure}}\r\n             at libstd/panicking.rs:211\r\n   3: std::panicking::default_hook\r\n             at libstd/panicking.rs:227\r\n   4: rustc::util::common::panic_hook\r\n   5: std::panicking::rust_panic_with_hook\r\n             at libstd/panicking.rs:480\r\n   6: std::panicking::continue_panic_fmt\r\n             at libstd/panicking.rs:390\r\n   7: std::panicking::begin_panic_fmt\r\n             at libstd/panicking.rs:345\r\n   8: rustc::infer::higher_ranked::<impl rustc::infer::InferCtxt<'a, 'gcx, 'tcx>>::plug_leaks::{{closure}}\r\n   9: <rustc::ty::fold::RegionFolder<'a, 'gcx, 'tcx> as rustc::ty::fold::TypeFolder<'gcx, 'tcx>>::fold_binder\r\n  10: rustc::ty::fold::TypeFoldable::fold_with\r\n  11: <core::iter::Map<I, F> as core::iter::iterator::Iterator>::fold\r\n  12: rustc::ty::fold::TypeFoldable::fold_with\r\n  13: rustc::infer::higher_ranked::<impl rustc::infer::InferCtxt<'a, 'gcx, 'tcx>>::plug_leaks\r\n  14: rustc::infer::InferCtxt::in_snapshot\r\n  15: <core::iter::FlatMap<I, U, F> as core::iter::iterator::Iterator>::next\r\n  16: <alloc::vec::Vec<T> as alloc::vec::SpecExtend<T, I>>::from_iter\r\n  17: rustc::traits::select::SelectionContext::collect_predicates_for_types\r\n  18: rustc::traits::select::SelectionContext::confirm_candidate\r\n  19: rustc::infer::InferCtxt::probe\r\n  20: rustc::traits::select::SelectionContext::evaluate_stack\r\n  21: rustc::dep_graph::graph::DepGraph::with_anon_task\r\n  22: rustc::traits::select::SelectionContext::evaluate_predicate_recursively\r\n  23: rustc::infer::InferCtxt::probe\r\n  24: rustc::traits::select::SelectionContext::evaluate_stack\r\n  25: rustc::dep_graph::graph::DepGraph::with_anon_task\r\n  26: rustc::traits::select::SelectionContext::evaluate_predicate_recursively\r\n  27: rustc::infer::InferCtxt::probe\r\n  28: rustc::traits::select::SelectionContext::evaluate_stack\r\n  29: rustc::dep_graph::graph::DepGraph::with_anon_task\r\n  30: rustc::traits::select::SelectionContext::evaluate_predicate_recursively\r\n  31: rustc::traits::select::SelectionContext::evaluate_obligation_recursively\r\n  32: rustc::ty::context::tls::with_related_context\r\n  33: rustc::infer::InferCtxtBuilder::enter_with_canonical\r\n  34: rustc_traits::evaluate_obligation::evaluate_obligation\r\n  35: rustc::ty::query::__query_compute::evaluate_obligation\r\n  36: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors<'tcx> for rustc::ty::query::queries::evaluate_obligation<'tcx>>::compute\r\n  37: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  38: <rustc::ty::query::plumbing::JobOwner<'a, 'tcx, Q>>::start\r\n  39: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::force_query_with_job\r\n  40: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::get_query\r\n  41: rustc::traits::query::evaluate_obligation::<impl rustc::infer::InferCtxt<'cx, 'gcx, 'tcx>>::evaluate_obligation\r\n  42: rustc::traits::query::evaluate_obligation::<impl rustc::infer::InferCtxt<'cx, 'gcx, 'tcx>>::evaluate_obligation_no_overflow\r\n  43: rustc::traits::type_known_to_meet_bound\r\n  44: rustc::ty::context::tls::with_related_context\r\n  45: rustc::infer::InferCtxtBuilder::enter\r\n  46: rustc::ty::util::is_freeze_raw\r\n  47: rustc::ty::query::__query_compute::is_freeze_raw\r\n  48: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors<'tcx> for rustc::ty::query::queries::is_freeze_raw<'tcx>>::compute\r\n  49: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  50: <rustc::ty::query::plumbing::JobOwner<'a, 'tcx, Q>>::start\r\n  51: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::force_query_with_job\r\n  52: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::get_query\r\n  53: rustc::ty::util::<impl rustc::ty::TyS<'tcx>>::is_freeze\r\n  54: rustc_mir::transform::qualify_consts::Qualifier::new\r\n  55: <rustc_mir::transform::qualify_consts::QualifyAndPromoteConstants as rustc_mir::transform::MirPass>::run_pass\r\n  56: rustc_mir::transform::mir_validated::{{closure}}\r\n  57: rustc_mir::transform::mir_validated\r\n  58: rustc::ty::query::__query_compute::mir_validated\r\n  59: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors<'tcx> for rustc::ty::query::queries::mir_validated<'tcx>>::compute\r\n  60: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  61: <rustc::ty::query::plumbing::JobOwner<'a, 'tcx, Q>>::start\r\n  62: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::force_query_with_job\r\n  63: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::get_query\r\n  64: rustc::ty::query::<impl rustc::ty::context::TyCtxt<'a, 'tcx, 'lcx>>::mir_validated\r\n  65: rustc_mir::borrow_check::mir_borrowck\r\n  66: rustc::ty::query::__query_compute::mir_borrowck\r\n  67: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors<'tcx> for rustc::ty::query::queries::mir_borrowck<'tcx>>::compute\r\n  68: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  69: <rustc::ty::query::plumbing::JobOwner<'a, 'tcx, Q>>::start\r\n  70: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::force_query_with_job\r\n  71: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::get_query\r\n  72: rustc::ty::query::<impl rustc::ty::context::TyCtxt<'a, 'tcx, 'lcx>>::mir_borrowck\r\n  73: rustc::ty::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::par_body_owners\r\n  74: rustc::util::common::time\r\n  75: rustc::ty::context::tls::enter_context\r\n  76: <std::thread::local::LocalKey<T>>::with\r\n  77: rustc::ty::context::TyCtxt::create_and_enter\r\n  78: rustc_driver::driver::compile_input\r\n  79: rustc_driver::run_compiler_with_pool\r\n  80: rustc_driver::driver::spawn_thread_pool\r\n  81: rustc_driver::run_compiler\r\n  82: <scoped_tls::ScopedKey<T>>::set\r\n  83: <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once\r\n  84: __rust_maybe_catch_panic\r\n             at libpanic_unwind/lib.rs:102\r\n  85: rustc_driver::run\r\n  86: rustc_driver::main\r\n  87: std::rt::lang_start::{{closure}}\r\n  88: std::panicking::try::do_call\r\n             at libstd/rt.rs:59\r\n             at libstd/panicking.rs:310\r\n  89: __rust_maybe_catch_panic\r\n             at libpanic_unwind/lib.rs:102\r\n  90: std::rt::lang_start_internal\r\n             at libstd/panicking.rs:289\r\n             at libstd/panic.rs:392\r\n             at libstd/rt.rs:58\r\n  91: main\r\n  92: __libc_start_main\r\n  93: <unknown>\r\nquery stack during panic:\r\n#0 [evaluate_obligation] evaluating trait selection obligation `[static generator@src/lib.rs:16:14: 19:2 for<'r, 's> {MyStream<(dyn std::ops::FnMut() + 'r)>, impl std::future::Future, ()}]: std::marker::Freeze`\r\n#1 [is_freeze_raw] computing whether `[static generator@src/lib.rs:16:14: 19:2 for<'r, 's> {MyStream<(dyn std::ops::FnMut() + 'r)>, impl std::future::Future, ()}]` is freeze\r\n#2 [mir_validated] processing `f::{{closure}}`\r\n#3 [mir_borrowck] processing `f::{{closure}}`\r\nend of query stack\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.31.0-nightly (4bd4e4130 2018-10-25) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C codegen-units=1 -C debuginfo=2 --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n```", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/55499/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/55499/timeline", "performed_via_github_app": null, "state_reason": "completed"}