{"url": "https://api.github.com/repos/rust-lang/rust/issues/112748", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/112748/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/112748/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/112748/events", "html_url": "https://github.com/rust-lang/rust/issues/112748", "id": 1762015524, "node_id": "I_kwDOAAsO6M5pBjkk", "number": 112748, "title": "Internal compiler error related to constant evaluation timeout", "user": {"login": "claytonwramsey", "id": 21093136, "node_id": "MDQ6VXNlcjIxMDkzMTM2", "avatar_url": "https://avatars.githubusercontent.com/u/21093136?v=4", "gravatar_id": "", "url": "https://api.github.com/users/claytonwramsey", "html_url": "https://github.com/claytonwramsey", "followers_url": "https://api.github.com/users/claytonwramsey/followers", "following_url": "https://api.github.com/users/claytonwramsey/following{/other_user}", "gists_url": "https://api.github.com/users/claytonwramsey/gists{/gist_id}", "starred_url": "https://api.github.com/users/claytonwramsey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/claytonwramsey/subscriptions", "organizations_url": "https://api.github.com/users/claytonwramsey/orgs", "repos_url": "https://api.github.com/users/claytonwramsey/repos", "events_url": "https://api.github.com/users/claytonwramsey/events{/privacy}", "received_events_url": "https://api.github.com/users/claytonwramsey/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2023-06-17T22:22:41Z", "updated_at": "2023-06-18T12:56:22Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n-->\r\n\r\nMinimum example:\r\n\r\n```rust\r\n\r\nconst SAVED_ROOK_MAGICS: [u64; 64] = [0; 64];\r\n\r\nconst ROOK_BITS: [u8; 64] = [1; 64];\r\n\r\nconst ROOK_MASKS: [u64; 64] = {\r\n    let mut masks = [0; 64];\r\n    let mut i = 0u8;\r\n    while i < 64 {\r\n        masks[i as usize] = get_rook_mask(i);\r\n        i += 1;\r\n    }\r\n    masks\r\n};\r\n\r\n#[allow(unused)]\r\nstatic ROOK_ATTACKS_TABLE: [u64; 999_999] =\r\n    construct_magic_table(&ROOK_BITS, &SAVED_ROOK_MAGICS, &ROOK_MASKS);\r\n\r\nconst fn construct_magic_table<const N: usize>(\r\n    bits: &[u8; 64],\r\n    magics: &[u64; 64],\r\n    masks: &[u64; 64],\r\n) -> [u64; N] {\r\n    let mut table = [0; N];\r\n\r\n    let mut i = 0;\r\n    let mut table_offset = 0;\r\n\r\n    while i < 64 {\r\n        let mask = masks[i];\r\n        let magic = magics[i];\r\n        let n_attacks_to_generate = 1 << mask.count_ones();\r\n\r\n        let mut j = 0;\r\n        while j < n_attacks_to_generate {\r\n            let occupancy = index_to_occupancy(j, mask);\r\n            let attack = 0;\r\n            let key = compute_magic_key(occupancy, magic, 64 - bits[i]);\r\n            table[key + table_offset] = attack;\r\n            j += 1;\r\n        }\r\n\r\n        table_offset += 1 << bits[i];\r\n        i += 1;\r\n    }\r\n\r\n    table\r\n}\r\n\r\nconst fn compute_magic_key(occupancy: u64, magic: u64, shift: u8) -> usize {\r\n    (occupancy.wrapping_mul(magic) >> shift) as usize\r\n}\r\n\r\nconst fn get_rook_mask(sq: u8) -> u64 {\r\n    (0x7E << (sq & !0x7) ^ 0x0001_0101_0101_0100 << (sq & 0x7)) & !(1 << sq as u64)\r\n}\r\n\r\nconst fn index_to_occupancy(index: usize, mask: u64) -> u64 {\r\n    let mut result = 0u64;\r\n    let num_points = mask.count_ones();\r\n    let mut editable_mask = mask;\r\n    let mut i = 0;\r\n    while i < num_points {\r\n        let shift_size = editable_mask.trailing_zeros();\r\n        let occupier = 1 << shift_size;\r\n        editable_mask &= !occupier;\r\n        if (index & (1 << i)) != 0 {\r\n            result |= occupier;\r\n        }\r\n        i += 1;\r\n    }\r\n\r\n    result\r\n}\r\n\r\n```\r\n\r\nI have a full project where I was able to consistently cause this error. It seems to be related to the timeout on constant evaluation. For my project which consistently has the error, check [here](https://github.com/claytonwramsey/fiddler/tree/compiler-bug).\r\n\r\nFor some reason, annotating `ROOK_ATTACKS_TABLE` with `#[allow(long_running_const_eval)]` prevents this error.\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.72.0-nightly (b2b34bd83 2023-06-06)\r\nbinary: rustc\r\ncommit-hash: b2b34bd83192c3d16c88655158f7d8d612513e88\r\ncommit-date: 2023-06-06\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.72.0-nightly\r\nLLVM version: 16.0.5\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nerror: internal compiler error: no errors encountered even though `delay_span_bug` issued\r\n\r\nerror: internal compiler error: The deny lint should have already errored\r\n    --> /home/clayton/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/mod.rs:1174:5\r\n     |\r\n1174 | /     uint_impl! {\r\n1175 | |         Self = u64,\r\n1176 | |         ActualT = u64,\r\n1177 | |         SignedT = i64,\r\n...    |\r\n1191 | |         bound_condition = \"\",\r\n1192 | |     }\r\n     | |_____^\r\n     |\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\n~/C/fiddler (compiler-bug|\u271a1) $ RUST_BACKTRACE=1 cargo build\r\n   Compiling fiddler v0.1.0 (/home/clayton/Chess/fiddler)\r\nerror: internal compiler error: no errors encountered even though `delay_span_bug` issued\r\n\r\nerror: internal compiler error: The deny lint should have already errored\r\n    --> /home/clayton/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/mod.rs:1174:5\r\n     |\r\n1174 | /     uint_impl! {\r\n1175 | |         Self = u64,\r\n1176 | |         ActualT = u64,\r\n1177 | |         SignedT = i64,\r\n...    |\r\n1191 | |         bound_condition = \"\",\r\n1192 | |     }\r\n     | |_____^\r\n     |\r\n     = note: delayed at compiler/rustc_const_eval/src/const_eval/machine.rs:634:26\r\n                0: <rustc_errors::HandlerInner>::emit_diagnostic\r\n                1: <rustc_errors::Handler>::delay_span_bug::<rustc_span::span_encoding::Span, &str>\r\n                2: <rustc_const_eval::interpret::eval_context::InterpCx<rustc_const_eval::const_eval::machine::CompileTimeInterpreter>>::statement\r\n                3: rustc_const_eval::const_eval::eval_queries::eval_to_allocation_raw_provider\r\n                4: rustc_query_impl::plumbing::__rust_begin_short_backtrace::<rustc_query_impl::query_impl::eval_to_allocation_raw::dynamic_query::{closure#2}::{closure#0}, rustc_middle::query::erase::Erased<[u8; 16]>>\r\n                5: <rustc_query_impl::query_impl::eval_to_allocation_raw::dynamic_query::{closure#2} as core::ops::function::FnOnce<(rustc_middle::ty::context::TyCtxt, rustc_middle::ty::ParamEnvAnd<rustc_middle::mir::interpret::GlobalId>)>>::call_once\r\n                6: <rustc_query_system::query::plumbing::execute_job_incr<rustc_query_impl::DynamicConfig<rustc_query_system::query::caches::DefaultCache<rustc_middle::ty::ParamEnvAnd<rustc_middle::mir::interpret::GlobalId>, rustc_middle::query::erase::Erased<[u8; 32]>>, false, false, false>, rustc_query_impl::plumbing::QueryCtxt>::{closure#2}::{closure#2} as core::ops::function::FnOnce<((rustc_query_impl::plumbing::QueryCtxt, rustc_query_impl::DynamicConfig<rustc_query_system::query::caches::DefaultCache<rustc_middle::ty::ParamEnvAnd<rustc_middle::mir::interpret::GlobalId>, rustc_middle::query::erase::Erased<[u8; 32]>>, false, false, false>), rustc_middle::ty::ParamEnvAnd<rustc_middle::mir::interpret::GlobalId>)>>::call_once\r\n                7: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::DynamicConfig<rustc_query_system::query::caches::DefaultCache<rustc_middle::ty::ParamEnvAnd<rustc_middle::mir::interpret::GlobalId>, rustc_middle::query::erase::Erased<[u8; 16]>>, false, false, false>, rustc_query_impl::plumbing::QueryCtxt, true>\r\n                8: rustc_query_impl::query_impl::eval_to_allocation_raw::get_query_incr::__rust_end_short_backtrace\r\n                9: rustc_const_eval::const_eval::eval_queries::eval_to_allocation_raw_provider\r\n               10: rustc_query_impl::plumbing::__rust_begin_short_backtrace::<rustc_query_impl::query_impl::eval_to_allocation_raw::dynamic_query::{closure#2}::{closure#0}, rustc_middle::query::erase::Erased<[u8; 16]>>\r\n               11: <rustc_query_impl::query_impl::eval_to_allocation_raw::dynamic_query::{closure#2} as core::ops::function::FnOnce<(rustc_middle::ty::context::TyCtxt, rustc_middle::ty::ParamEnvAnd<rustc_middle::mir::interpret::GlobalId>)>>::call_once\r\n               12: <rustc_query_system::query::plumbing::execute_job_incr<rustc_query_impl::DynamicConfig<rustc_query_system::query::caches::DefaultCache<rustc_middle::ty::ParamEnvAnd<rustc_middle::mir::interpret::GlobalId>, rustc_middle::query::erase::Erased<[u8; 32]>>, false, false, false>, rustc_query_impl::plumbing::QueryCtxt>::{closure#2}::{closure#2} as core::ops::function::FnOnce<((rustc_query_impl::plumbing::QueryCtxt, rustc_query_impl::DynamicConfig<rustc_query_system::query::caches::DefaultCache<rustc_middle::ty::ParamEnvAnd<rustc_middle::mir::interpret::GlobalId>, rustc_middle::query::erase::Erased<[u8; 32]>>, false, false, false>), rustc_middle::ty::ParamEnvAnd<rustc_middle::mir::interpret::GlobalId>)>>::call_once\r\n               13: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::DynamicConfig<rustc_query_system::query::caches::DefaultCache<rustc_middle::ty::ParamEnvAnd<rustc_middle::mir::interpret::GlobalId>, rustc_middle::query::erase::Erased<[u8; 16]>>, false, false, false>, rustc_query_impl::plumbing::QueryCtxt, true>\r\n               14: rustc_query_impl::query_impl::eval_to_allocation_raw::get_query_incr::__rust_end_short_backtrace\r\n               15: <rustc_middle::query::plumbing::TyCtxtEnsure>::eval_static_initializer\r\n               16: <rustc_lint::BuiltinCombinedModuleLateLintPass as rustc_lint::passes::LateLintPass>::check_item\r\n               17: rustc_hir::intravisit::walk_mod::<rustc_lint::late::LateContextAndPass<rustc_lint::BuiltinCombinedModuleLateLintPass>>\r\n               18: rustc_lint::late::late_lint_mod::<rustc_lint::BuiltinCombinedModuleLateLintPass>\r\n               19: rustc_lint::lint_mod\r\n               20: rustc_query_impl::plumbing::__rust_begin_short_backtrace::<rustc_query_impl::query_impl::lint_mod::dynamic_query::{closure#2}::{closure#0}, rustc_middle::query::erase::Erased<[u8; 0]>>\r\n               21: <rustc_query_impl::query_impl::lint_mod::dynamic_query::{closure#2} as core::ops::function::FnOnce<(rustc_middle::ty::context::TyCtxt, rustc_span::def_id::LocalDefId)>>::call_once\r\n               22: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::DynamicConfig<rustc_query_system::query::caches::VecCache<rustc_span::def_id::LocalDefId, rustc_middle::query::erase::Erased<[u8; 0]>>, false, false, false>, rustc_query_impl::plumbing::QueryCtxt, true>\r\n               23: rustc_query_impl::query_impl::lint_mod::get_query_incr::__rust_end_short_backtrace\r\n               24: rustc_data_structures::sync::par_for_each_in::<&[rustc_hir::hir_id::OwnerId], <rustc_middle::hir::map::Map>::par_for_each_module<rustc_lint::late::check_crate<rustc_lint::BuiltinCombinedLateLintPass, rustc_interface::passes::analysis::{closure#5}::{closure#1}::{closure#2}::{closure#0}::{closure#0}>::{closure#1}::{closure#0}::{closure#0}>::{closure#0}>\r\n               25: <rustc_session::session::Session>::time::<(), rustc_lint::late::check_crate<rustc_lint::BuiltinCombinedLateLintPass, rustc_interface::passes::analysis::{closure#5}::{closure#1}::{closure#2}::{closure#0}::{closure#0}>::{closure#1}::{closure#0}>\r\n               26: <rustc_session::session::Session>::time::<(), rustc_interface::passes::analysis::{closure#5}::{closure#1}::{closure#2}::{closure#0}>\r\n               27: <core::panic::unwind_safe::AssertUnwindSafe<rustc_interface::passes::analysis::{closure#5}::{closure#1}> as core::ops::function::FnOnce<()>>::call_once\r\n               28: <rustc_session::session::Session>::time::<(), rustc_interface::passes::analysis::{closure#5}>\r\n               29: rustc_interface::passes::analysis\r\n               30: rustc_query_impl::plumbing::__rust_begin_short_backtrace::<rustc_query_impl::query_impl::analysis::dynamic_query::{closure#2}::{closure#0}, rustc_middle::query::erase::Erased<[u8; 1]>>\r\n               31: <rustc_query_impl::query_impl::analysis::dynamic_query::{closure#2} as core::ops::function::FnOnce<(rustc_middle::ty::context::TyCtxt, ())>>::call_once\r\n               32: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::DynamicConfig<rustc_query_system::query::caches::SingleCache<rustc_middle::query::erase::Erased<[u8; 1]>>, false, false, false>, rustc_query_impl::plumbing::QueryCtxt, true>\r\n               33: rustc_query_impl::query_impl::analysis::get_query_incr::__rust_end_short_backtrace\r\n               34: <rustc_middle::ty::context::GlobalCtxt>::enter::<rustc_driver_impl::run_compiler::{closure#1}::{closure#2}::{closure#4}, core::result::Result<(), rustc_span::ErrorGuaranteed>>\r\n               35: <rustc_interface::interface::Compiler>::enter::<rustc_driver_impl::run_compiler::{closure#1}::{closure#2}, core::result::Result<core::option::Option<rustc_interface::queries::Linker>, rustc_span::ErrorGuaranteed>>\r\n               36: std::sys_common::backtrace::__rust_begin_short_backtrace::<rustc_interface::util::run_in_thread_pool_with_globals<rustc_interface::interface::run_compiler<core::result::Result<(), rustc_span::ErrorGuaranteed>, rustc_driver_impl::run_compiler::{closure#1}>::{closure#0}, core::result::Result<(), rustc_span::ErrorGuaranteed>>::{closure#0}::{closure#0}, core::result::Result<(), rustc_span::ErrorGuaranteed>>\r\n               37: <<std::thread::Builder>::spawn_unchecked_<rustc_interface::util::run_in_thread_pool_with_globals<rustc_interface::interface::run_compiler<core::result::Result<(), rustc_span::ErrorGuaranteed>, rustc_driver_impl::run_compiler::{closure#1}>::{closure#0}, core::result::Result<(), rustc_span::ErrorGuaranteed>>::{closure#0}::{closure#0}, core::result::Result<(), rustc_span::ErrorGuaranteed>>::{closure#1} as core::ops::function::FnOnce<()>>::call_once::{shim:vtable#0}\r\n               38: call_once<(), dyn core::ops::function::FnOnce<(), Output=()>, alloc::alloc::Global>\r\n                          at /rustc/b2b34bd83192c3d16c88655158f7d8d612513e88/library/alloc/src/boxed.rs:1985:9\r\n               39: call_once<(), alloc::boxed::Box<dyn core::ops::function::FnOnce<(), Output=()>, alloc::alloc::Global>, alloc::alloc::Global>\r\n                          at /rustc/b2b34bd83192c3d16c88655158f7d8d612513e88/library/alloc/src/boxed.rs:1985:9\r\n               40: thread_start\r\n                          at /rustc/b2b34bd83192c3d16c88655158f7d8d612513e88/library/std/src/sys/unix/thread.rs:108:17\r\n               41: start_thread\r\n                          at ./nptl/pthread_create.c:444:8\r\n               42: __GI___clone3\r\n                          at ./misc/../sysdeps/unix/sysv/linux/x86_64/clone3.S:81\r\n             \r\n     = note: this error: internal compiler error originates in the macro `uint_impl` (in Nightly builds, run with -Z macro-backtrace for more info)\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.72.0-nightly (b2b34bd83 2023-06-06) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: --crate-type lib -C embed-bitcode=no -C debuginfo=2 -C incremental=[REDACTED] -C target_cpu=native\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\nend of query stack\r\nerror: could not compile `fiddler` (lib)\r\n```\r\n\r\n</p>\r\n</details>\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/112748/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 1}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/112748/timeline", "performed_via_github_app": null, "state_reason": null}