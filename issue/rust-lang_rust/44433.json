{"url": "https://api.github.com/repos/rust-lang/rust/issues/44433", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/44433/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/44433/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/44433/events", "html_url": "https://github.com/rust-lang/rust/issues/44433", "id": 256365937, "node_id": "MDU6SXNzdWUyNTYzNjU5Mzc=", "number": 44433, "title": "rustc deadlocks on FreeBSD", "user": {"login": "jld", "id": 254973, "node_id": "MDQ6VXNlcjI1NDk3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/254973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jld", "html_url": "https://github.com/jld", "followers_url": "https://api.github.com/users/jld/followers", "following_url": "https://api.github.com/users/jld/following{/other_user}", "gists_url": "https://api.github.com/users/jld/gists{/gist_id}", "starred_url": "https://api.github.com/users/jld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jld/subscriptions", "organizations_url": "https://api.github.com/users/jld/orgs", "repos_url": "https://api.github.com/users/jld/repos", "events_url": "https://api.github.com/users/jld/events{/privacy}", "received_events_url": "https://api.github.com/users/jld/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 311417404, "node_id": "MDU6TGFiZWwzMTE0MTc0MDQ=", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-freebsd", "name": "O-freebsd", "color": "6e6ec0", "default": false, "description": "Operating system: FreeBSD"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-09-08T20:41:32Z", "updated_at": "2017-12-26T13:53:49Z", "closed_at": "2017-12-26T13:53:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Steps to reproduce, on my FreeBSD/amd64 11.0 system: `rustc --crate-type staticlib conftest.rs`, where `conftest.rs` is:\r\n```rust\r\npub extern fn hello() { println!(\"Hello world\"); }\r\n```\r\n\r\nIt's not 100%, but it usually happens after a few tries at most.   I'll skip all the debugging and source-diving and just say that it's the same basic problem as #36905: threads A and B are both in `LLVMRustWriteOutputFile`, thread A gets to `llvm::X86InstrFMA3Info::initGroupsOnce` first and `call_once`s a lambda, then thread B enters `llvm::X86InstrFMA3Info::initGroupsOnce` and blocks in `pthread_once` with the `std::call_once` global mutex held, *then* thread A calls `std::call_once` reentrantly on a different `once_flag` and deadlocks.\r\n\r\nBut there might be a nicer solution than for #36905, because [downstream](https://svnweb.freebsd.org/ports/head/lang/rust/files/patch-src_librustc__llvm_build.rs?revision=443109&view=markup) has this patch:\r\n\r\n```diff\r\n--- src/librustc_llvm/build.rs.orig     2017-06-06 00:42:59 UTC\r\n+++ src/librustc_llvm/build.rs\r\n@@ -241,6 +241,8 @@ fn main() {\r\n     let stdcppname = if target.contains(\"openbsd\") {\r\n         // OpenBSD has a particular C++ runtime library name\r\n         \"estdc++\"\r\n+    } else if target.contains(\"freebsd\") {\r\n+        \"c++\"\r\n     } else if target.contains(\"netbsd\") && llvm_static_stdcpp.is_some() {\r\n         // NetBSD uses a separate library when relocation is required\r\n         \"stdc++_pic\"\r\n```\r\n\r\n[FreeBSD switched to `libc++` in 10.0](https://wiki.freebsd.org/NewC++Stack), on all platforms where they use Clang (apparently x86, little-endian ARM, and PPC), and 10.x is now the [oldest supported release branch](https://www.freebsd.org/security/unsupported.html).  `libc++` appears to have a self-contained `call_once` that doesn't use `pthread_once`, and emprically the Rust 1.18.0 package available via `pkg install` doesn't deadlock.\r\n\r\nSo, it might be enough to upstream that patch and update the build environment to 10.x if it isn't already.", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/44433/reactions", "total_count": 3, "+1": 3, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/44433/timeline", "performed_via_github_app": null, "state_reason": "completed"}