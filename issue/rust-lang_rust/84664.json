{"url": "https://api.github.com/repos/rust-lang/rust/issues/84664", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/84664/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/84664/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/84664/events", "html_url": "https://github.com/rust-lang/rust/issues/84664", "id": 870185377, "node_id": "MDU6SXNzdWU4NzAxODUzNzc=", "number": 84664, "title": "Suggest removing `let` when unused variable shadows another variable", "user": {"login": "meithecatte", "id": 23580910, "node_id": "MDQ6VXNlcjIzNTgwOTEw", "avatar_url": "https://avatars.githubusercontent.com/u/23580910?v=4", "gravatar_id": "", "url": "https://api.github.com/users/meithecatte", "html_url": "https://github.com/meithecatte", "followers_url": "https://api.github.com/users/meithecatte/followers", "following_url": "https://api.github.com/users/meithecatte/following{/other_user}", "gists_url": "https://api.github.com/users/meithecatte/gists{/gist_id}", "starred_url": "https://api.github.com/users/meithecatte/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/meithecatte/subscriptions", "organizations_url": "https://api.github.com/users/meithecatte/orgs", "repos_url": "https://api.github.com/users/meithecatte/repos", "events_url": "https://api.github.com/users/meithecatte/events{/privacy}", "received_events_url": "https://api.github.com/users/meithecatte/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235137, "node_id": "MDU6TGFiZWwyMzUxMzc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lint", "name": "A-lint", "color": "f7e101", "default": false, "description": "Area: Lints (warnings about flaws in source code) such as unused_mut."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 239393, "node_id": "MDU6TGFiZWwyMzkzOTM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-resolve", "name": "A-resolve", "color": "f7e101", "default": false, "description": "Area: Path resolution"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 2366929133, "node_id": "MDU6TGFiZWwyMzY2OTI5MTMz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-control-flow", "name": "A-control-flow", "color": "f7e101", "default": false, "description": "Area: Relating to control flow"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-04-28T17:30:26Z", "updated_at": "2021-06-12T17:15:32Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Inspiration: [this StackOverflow post](https://stackoverflow.com/questions/67296177/rust-book-listing-10-15when-i-use-let-largest-item-the-largest-cant-be)\r\n\r\nGiven the following code:\r\n\r\n```rust\r\nfn largest<T>(list: &[T]) -> &T\r\n    where T: PartialOrd + Copy\r\n{\r\n    let largest = &list[0];\r\n\r\n    for item in list.iter() {\r\n        if item > largest {\r\n            let largest = item;\r\n        }\r\n    }\r\n\r\n    largest\r\n}\r\n```\r\n\r\nThe current output is:\r\n\r\n```\r\nwarning: unused variable: `largest`\r\n --> src/main.rs:8:17\r\n  |\r\n8 |             let largest = item;\r\n  |                 ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_largest`\r\n  |\r\n  = note: `#[warn(unused_variables)]` on by default\r\n```\r\n\r\n<!-- The following is not always necessary. -->\r\nIdeally the output should look like:\r\n\r\n```\r\nwarning: unused variable: `largest`\r\n --> src/main.rs:8:17\r\n  |\r\n8 |             let largest = item;\r\n  |                 ^^^^^^^\r\n...\r\n4 |    let largest = &list[0];\r\n  |        ------- note: variable with the same name defined here\r\n...\r\n8 |             let largest = item;\r\n  |             ^^^ help: remove this `let` to assign instead of creating a new variable\r\n  |\r\n  = note: `#[warn(unused_variables)]` on by default\r\n```\r\n\r\nSome [discussion on how to implement this](https://rust-lang.zulipchat.com/#narrow/stream/182449-t-compiler.2Fhelp/topic/get.20all.20variables.20in.20scope.20and.20check.20for.20shadowing/near/236494421) on Zulip.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/84664/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/84664/timeline", "performed_via_github_app": null, "state_reason": null}