{"url": "https://api.github.com/repos/rust-lang/rust/issues/74761", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/74761/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/74761/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/74761/events", "html_url": "https://github.com/rust-lang/rust/issues/74761", "id": 665664597, "node_id": "MDU6SXNzdWU2NjU2NjQ1OTc=", "number": 74761, "title": "Unconstrained lifetimes allowed with member_constraints/type_alias_impl_trait", "user": {"login": "samlich", "id": 1349989, "node_id": "MDQ6VXNlcjEzNDk5ODk=", "avatar_url": "https://avatars.githubusercontent.com/u/1349989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samlich", "html_url": "https://github.com/samlich", "followers_url": "https://api.github.com/users/samlich/followers", "following_url": "https://api.github.com/users/samlich/following{/other_user}", "gists_url": "https://api.github.com/users/samlich/gists{/gist_id}", "starred_url": "https://api.github.com/users/samlich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samlich/subscriptions", "organizations_url": "https://api.github.com/users/samlich/orgs", "repos_url": "https://api.github.com/users/samlich/repos", "events_url": "https://api.github.com/users/samlich/events{/privacy}", "received_events_url": "https://api.github.com/users/samlich/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 46741598, "node_id": "MDU6TGFiZWw0Njc0MTU5OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-test", "name": "E-needs-test", "color": "02e10c", "default": false, "description": "Call for participation: writing correctness tests"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1472502130, "node_id": "MDU6TGFiZWwxNDcyNTAyMTMw", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-type_alias_impl_trait", "name": "F-type_alias_impl_trait", "color": "f9c0cc", "default": false, "description": "`#[feature(type_alias_impl_trait)]`"}, {"id": 1472504103, "node_id": "MDU6TGFiZWwxNDcyNTA0MTAz", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-member_constraints", "name": "F-member_constraints", "color": "f9c0cc", "default": false, "description": "`#[feature(member_constraints)]`"}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-25T21:34:44Z", "updated_at": "2020-09-30T23:04:13Z", "closed_at": "2020-09-30T23:04:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\n```Rust\r\n#![feature(member_constraints)]\r\n#![feature(type_alias_impl_trait)]\r\n\r\npub trait A {\r\n  type B;\r\n  fn f(&self) -> Self::B;\r\n}\r\nimpl<'a, 'b> A for () {\r\n  type B = impl core::fmt::Debug;\r\n\r\n  fn f(&self) -> Self::B {}\r\n}\r\n\r\nfn main() {}\r\n```\r\n[Playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=c7e28b1a490952f31650d9d6d2ca9399)\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.47.0-nightly (5ef299eb9 2020-07-24) running on x86_64-unknown-linux-gnu\r\n```\r\n\r\n### Error output\r\n\r\n```\r\n   Compiling playground v0.0.1 (/playground)\r\nthread 'rustc' panicked at 'assertion failed: self.universal_regions.is_universal_region(shorter)', src/librustc_mir/borrow_check/type_check/free_region_relations.rs:377:9\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n```\r\n\r\nI had first seen:\r\n```\r\nthread 'rustc' panicked at 'assertion failed: self.universal_regions.is_universal_region(longer)', src/librustc_mir/borrow_check/type_check/free_region_relations.rs:379:9\r\n```\r\n\r\nRemoving the second lifetime (`impl<'a> A for () {`) gives the correct error,\r\n```\r\nerror[E0207]: the lifetime parameter `'a` is not constrained by the impl trait, self type, or predicates\r\n --> src/main.rs:8:6\r\n  |\r\n8 | impl<'a> A for () {\r\n  |      ^^ unconstrained lifetime parameter\r\n```\r\n\r\nAdditionally, disabling either `type_alias_impl_trait` or `member_constraints` still panics (and prompts to enable those features), except in stable where it prompts to enable the features, but does not panic.\r\n\r\n\r\nPerhaps similar to #57200\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nCompiling playground v0.0.1 (/playground)\r\nthread 'rustc' panicked at 'assertion failed: self.universal_regions.is_universal_region(shorter)', src/librustc_mir/borrow_check/type_check/free_region_relations.rs:377:9\r\nstack backtrace:\r\n   0: backtrace::backtrace::libunwind::trace\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/libunwind.rs:86\r\n   1: backtrace::backtrace::trace_unsynchronized\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/mod.rs:66\r\n   2: std::sys_common::backtrace::_print_fmt\r\n             at src/libstd/sys_common/backtrace.rs:78\r\n   3: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt\r\n             at src/libstd/sys_common/backtrace.rs:59\r\n   4: core::fmt::write\r\n             at src/libcore/fmt/mod.rs:1117\r\n   5: std::io::Write::write_fmt\r\n             at src/libstd/io/mod.rs:1508\r\n   6: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:62\r\n   7: std::sys_common::backtrace::print\r\n             at src/libstd/sys_common/backtrace.rs:49\r\n   8: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/panicking.rs:198\r\n   9: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:217\r\n  10: rustc_driver::report_ice\r\n  11: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:530\r\n  12: std::panicking::begin_panic\r\n  13: <rustc_mir::borrow_check::type_check::free_region_relations::UniversalRegionRelations as rustc_infer::infer::free_regions::FreeRegionRelations>::sub_free_regions\r\n  14: rustc_infer::infer::InferCtxt::commit_if_ok\r\n  15: rustc_mir::borrow_check::type_check::TypeChecker::eq_opaque_type_and_type\r\n  16: rustc_mir::borrow_check::type_check::type_check\r\n  17: rustc_mir::borrow_check::nll::compute_regions\r\n  18: rustc_mir::borrow_check::do_mir_borrowck\r\n  19: rustc_infer::infer::InferCtxtBuilder::enter\r\n  20: rustc_mir::borrow_check::mir_borrowck\r\n  21: core::ops::function::FnOnce::call_once\r\n  22: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::mir_borrowck>::compute\r\n  23: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  24: rustc_data_structures::stack::ensure_sufficient_stack\r\n  25: rustc_query_system::query::plumbing::get_query_impl\r\n  26: rustc_typeck::collect::type_of::find_opaque_ty_constraints::ConstraintLocator::check\r\n  27: rustc_hir::intravisit::walk_impl_item_ref\r\n  28: rustc_hir::intravisit::walk_item\r\n  29: rustc_typeck::collect::type_of::type_of\r\n  30: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::type_of>::compute\r\n  31: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  32: rustc_data_structures::stack::ensure_sufficient_stack\r\n  33: rustc_query_system::query::plumbing::get_query_impl\r\n  34: rustc_query_system::query::plumbing::ensure_query_impl\r\n  35: <rustc_typeck::collect::CollectItemTypesVisitor as rustc_hir::intravisit::Visitor>::visit_item\r\n  36: rustc_middle::hir::map::Map::visit_item_likes_in_module\r\n  37: rustc_typeck::collect::collect_mod_item_types\r\n  38: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::collect_mod_item_types>::compute\r\n  39: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  40: rustc_data_structures::stack::ensure_sufficient_stack\r\n  41: rustc_query_system::query::plumbing::get_query_impl\r\n  42: rustc_query_system::query::plumbing::ensure_query_impl\r\n  43: rustc_session::session::Session::track_errors\r\n  44: rustc_typeck::check_crate\r\n  45: rustc_interface::passes::analysis\r\n  46: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::analysis>::compute\r\n  47: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  48: rustc_data_structures::stack::ensure_sufficient_stack\r\n  49: rustc_query_system::query::plumbing::get_query_impl\r\n  50: rustc_middle::ty::context::tls::enter_global\r\n  51: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n  52: rustc_span::with_source_map\r\n  53: rustc_interface::interface::create_compiler_and_run\r\n  54: scoped_tls::ScopedKey<T>::set\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.47.0-nightly (5ef299eb9 2020-07-24) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C codegen-units=1 -C debuginfo=2 --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [mir_borrowck] borrow-checking `<() as A>::f`\r\n#1 [type_of] computing type of `<() as A>::B::{{opaque}}#0`\r\n#2 [collect_mod_item_types] collecting item types in top-level module\r\n#3 [analysis] running analysis passes on this crate\r\nend of query stack\r\nerror: could not compile `playground`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/74761/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/74761/timeline", "performed_via_github_app": null, "state_reason": "completed"}