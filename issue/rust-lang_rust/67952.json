{"url": "https://api.github.com/repos/rust-lang/rust/issues/67952", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/67952/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/67952/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/67952/events", "html_url": "https://github.com/rust-lang/rust/issues/67952", "id": 545950893, "node_id": "MDU6SXNzdWU1NDU5NTA4OTM=", "number": 67952, "title": "Expose `abort` function from core", "user": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}, {"id": 880020421, "node_id": "MDU6TGFiZWw4ODAwMjA0MjE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/WG-embedded", "name": "WG-embedded", "color": "c2e0c6", "default": false, "description": "Of interest to the embedded Working Group"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-01-06T21:32:51Z", "updated_at": "2020-01-08T15:11:01Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "It seems like `core` knows how to abort a program (it has `core::intrinsics::abort`), but only `std` exposes this functionality.\r\n\r\nIn some rare cases, a potentially unwinding panic might lead to unsoundness, where an abort would do a better job. A good example is [the implementation of `Arc`](https://github.com/rust-lang/rust/blob/ebbb2bf37aedaaa64dfaa52ba337ca6efb6b9093/src/liballoc/sync.rs#L947-L960).\r\n\r\nThe very same situation occurs [in the `atomic_refcell` crate](https://github.com/bholley/atomic_refcell/blob/807df0a411b698412c4bc890649679f0aaa3ef20/src/lib.rs#L164-L173). As there is nothing else in the crate depending on `std` it should be a `no_std` crate. However, that change replaces the `std` exit/abort call with [an ugly hack using a double-panic](https://github.com/bholley/atomic_refcell/blob/195db87e0feaef15539e195e1c9cbc472e22a72e/src/lib.rs#L165-L188) to try to cause an abort.\r\n\r\nInstead, a stable `abort` function in `core` would be a lot nicer.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/67952/reactions", "total_count": 3, "+1": 3, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/67952/timeline", "performed_via_github_app": null, "state_reason": null}