{"url": "https://api.github.com/repos/rust-lang/rust/issues/88997", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/88997/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/88997/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/88997/events", "html_url": "https://github.com/rust-lang/rust/issues/88997", "id": 997662574, "node_id": "I_kwDOAAsO6M47dx9u", "number": 88997, "title": "ICE when using const parameters typed at a type parameter in a generic const expression", "user": {"login": "PatchMixolydic", "id": 8634700, "node_id": "MDQ6VXNlcjg2MzQ3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/8634700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PatchMixolydic", "html_url": "https://github.com/PatchMixolydic", "followers_url": "https://api.github.com/users/PatchMixolydic/followers", "following_url": "https://api.github.com/users/PatchMixolydic/following{/other_user}", "gists_url": "https://api.github.com/users/PatchMixolydic/gists{/gist_id}", "starred_url": "https://api.github.com/users/PatchMixolydic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PatchMixolydic/subscriptions", "organizations_url": "https://api.github.com/users/PatchMixolydic/orgs", "repos_url": "https://api.github.com/users/PatchMixolydic/repos", "events_url": "https://api.github.com/users/PatchMixolydic/events{/privacy}", "received_events_url": "https://api.github.com/users/PatchMixolydic/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1282665911, "node_id": "MDU6TGFiZWwxMjgyNjY1OTEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-generics", "name": "A-const-generics", "color": "f7e101", "default": false, "description": "Area: const generics (parameters and arguments)"}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}, {"id": 2341291797, "node_id": "MDU6TGFiZWwyMzQxMjkxNzk3", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-generic_const_exprs", "name": "F-generic_const_exprs", "color": "f9c0cc", "default": false, "description": "`#![feature(generic_const_exprs)]`"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-09-16T01:31:34Z", "updated_at": "2021-10-30T16:22:50Z", "closed_at": "2021-10-30T16:22:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n([playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021&gist=2179cc381b3ae906874ee9cddac1197a))\r\n```Rust\r\n#![allow(incomplete_features)]\r\n#![feature(generic_const_exprs)]\r\n\r\nstruct ConstAssert<const COND: bool>;\r\ntrait True {}\r\nimpl True for ConstAssert<true> {}\r\n\r\nstruct Range<T: PartialOrd, const MIN: T, const MAX: T>(T)\r\nwhere\r\n    ConstAssert<{ MIN <= MAX }>: True;\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.56.0-nightly (b7404c898 2021-09-03)\r\nbinary: rustc\r\ncommit-hash: b7404c898a1a6933b71c72428a6dce551bcc1be7\r\ncommit-date: 2021-09-03\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.56.0-nightly\r\nLLVM version: 13.0.0\r\n```\r\n\r\nAlso tested on the playground: `1.57.0-nightly (2021-09-14 c3c0f80d6081092faff8)`.\r\n\r\n### Error output\r\n\r\n```\r\n   Compiling playground v0.0.1 (/playground)\r\nerror[E0770]: the type of const parameters must not depend on other generic parameters\r\n --> src/lib.rs:9:40\r\n  |\r\n9 | struct Range<T: PartialOrd, const MIN: T, const MAX: T>(T)\r\n  |                                        ^ the type must not depend on the parameter `T`\r\n\r\nerror[E0770]: the type of const parameters must not depend on other generic parameters\r\n --> src/lib.rs:9:54\r\n  |\r\n9 | struct Range<T: PartialOrd, const MIN: T, const MAX: T>(T)\r\n  |                                                      ^ the type must not depend on the parameter `T`\r\n\r\nthread 'rustc' panicked at 'assertion failed: !arg.has_type_flags(!allowed_flags)', compiler/rustc_typeck/src/collect/type_of.rs:297:9\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.57.0-nightly (c3c0f80d6 2021-09-14) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C codegen-units=1 -C debuginfo=2 --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [default_anon_const_substs] computing the default generic arguments for `Range::{constant#0}`\r\n#1 [param_env] computing normalized predicates of `Range`\r\nend of query stack\r\nFor more information about this error, try `rustc --explain E0770`.\r\nerror: could not compile `playground` due to 2 previous errors\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\n   Compiling playground v0.0.1 (/playground)\r\nerror[E0770]: the type of const parameters must not depend on other generic parameters\r\n --> src/main.rs:8:40\r\n  |\r\n8 | struct Range<T: PartialOrd, const MIN: T, const MAX: T>(T)\r\n  |                                        ^ the type must not depend on the parameter `T`\r\n\r\nerror[E0770]: the type of const parameters must not depend on other generic parameters\r\n --> src/main.rs:8:54\r\n  |\r\n8 | struct Range<T: PartialOrd, const MIN: T, const MAX: T>(T)\r\n  |                                                      ^ the type must not depend on the parameter `T`\r\n\r\nerror[E0601]: `main` function not found in crate `playground`\r\n  --> src/main.rs:1:1\r\n   |\r\n1  | / #![allow(incomplete_features)]\r\n2  | | #![feature(generic_const_exprs)]\r\n3  | |\r\n4  | | struct ConstAssert<const COND: bool>;\r\n...  |\r\n9  | | where\r\n10 | |     ConstAssert<{ MIN <= MAX }>: True;\r\n   | |______________________________________^ consider adding a `main` function to `src/main.rs`\r\n\r\nthread 'rustc' panicked at 'assertion failed: !arg.has_type_flags(!allowed_flags)', compiler/rustc_typeck/src/collect/type_of.rs:297:9\r\nstack backtrace:\r\n   0: rust_begin_unwind\r\n             at /rustc/c3c0f80d6081092faff801542dd82f0e2420152b/library/std/src/panicking.rs:517:5\r\n   1: core::panicking::panic_fmt\r\n             at /rustc/c3c0f80d6081092faff801542dd82f0e2420152b/library/core/src/panicking.rs:96:14\r\n   2: core::panicking::panic\r\n             at /rustc/c3c0f80d6081092faff801542dd82f0e2420152b/library/core/src/panicking.rs:50:5\r\n   3: rustc_typeck::collect::type_of::default_anon_const_substs\r\n   4: rustc_query_system::query::plumbing::try_execute_query\r\n   5: rustc_query_system::query::plumbing::get_query\r\n   6: rustc_middle::ty::consts::kind::Unevaluated<P>::substs\r\n   7: rustc_middle::ty::fold::TypeFoldable::fold_with\r\n   8: <rustc_trait_selection::traits::project::AssocTypeNormalizer as rustc_middle::ty::fold::TypeFolder>::fold_binder\r\n   9: rustc_trait_selection::traits::project::AssocTypeNormalizer::fold\r\n  10: rustc_trait_selection::traits::project::normalize\r\n  11: rustc_trait_selection::traits::fully_normalize\r\n  12: rustc_infer::infer::InferCtxtBuilder::enter\r\n  13: rustc_trait_selection::traits::normalize_param_env_or_error\r\n  14: rustc_ty_utils::ty::param_env\r\n  15: rustc_query_system::query::plumbing::try_execute_query\r\n  16: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::param_env\r\n  17: rustc_typeck::check::wfcheck::for_id\r\n  18: rustc_typeck::check::wfcheck::check_item_well_formed\r\n  19: rustc_query_system::query::plumbing::try_execute_query\r\n  20: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::check_item_well_formed\r\n  21: <rustc_typeck::check::wfcheck::CheckTypeWellFormedVisitor as rustc_hir::intravisit::Visitor>::visit_item\r\n  22: std::panic::catch_unwind\r\n  23: rustc_data_structures::sync::par_for_each_in\r\n  24: rustc_session::session::Session::track_errors\r\n  25: rustc_typeck::check_crate\r\n  26: rustc_interface::passes::analysis\r\n  27: rustc_query_system::query::plumbing::try_execute_query\r\n  28: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::analysis\r\n  29: rustc_interface::passes::QueryContext::enter\r\n  30: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n  31: rustc_span::with_source_map\r\n  32: scoped_tls::ScopedKey<T>::set\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.57.0-nightly (c3c0f80d6 2021-09-14) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C codegen-units=1 -C debuginfo=2 --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [default_anon_const_substs] computing the default generic arguments for `Range::{constant#0}`\r\n#1 [param_env] computing normalized predicates of `Range`\r\n#2 [check_item_well_formed] checking that `Range` is well-formed\r\n#3 [analysis] running analysis passes on this crate\r\nend of query stack\r\nSome errors have detailed explanations: E0601, E0770.\r\nFor more information about an error, try `rustc --explain E0601`.\r\nerror: could not compile `playground` due to 3 previous errors\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n@rustbot modify labels: +A-const-generics +F-generic_const_exprs +requires-nightly", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/88997/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/88997/timeline", "performed_via_github_app": null, "state_reason": "completed"}