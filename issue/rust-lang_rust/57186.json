{"url": "https://api.github.com/repos/rust-lang/rust/issues/57186", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/57186/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/57186/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/57186/events", "html_url": "https://github.com/rust-lang/rust/issues/57186", "id": 394746515, "node_id": "MDU6SXNzdWUzOTQ3NDY1MTU=", "number": 57186, "title": "Improve error message for attempt to statically allocate trait object", "user": {"login": "gabcbrown", "id": 10984033, "node_id": "MDQ6VXNlcjEwOTg0MDMz", "avatar_url": "https://avatars.githubusercontent.com/u/10984033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gabcbrown", "html_url": "https://github.com/gabcbrown", "followers_url": "https://api.github.com/users/gabcbrown/followers", "following_url": "https://api.github.com/users/gabcbrown/following{/other_user}", "gists_url": "https://api.github.com/users/gabcbrown/gists{/gist_id}", "starred_url": "https://api.github.com/users/gabcbrown/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gabcbrown/subscriptions", "organizations_url": "https://api.github.com/users/gabcbrown/orgs", "repos_url": "https://api.github.com/users/gabcbrown/repos", "events_url": "https://api.github.com/users/gabcbrown/events{/privacy}", "received_events_url": "https://api.github.com/users/gabcbrown/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1183099971, "node_id": "MDU6TGFiZWwxMTgzMDk5OTcx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-suggestion-diagnostics", "name": "A-suggestion-diagnostics", "color": "f7e101", "default": false, "description": "Area: suggestions generated by the compiler applied by cargo fix"}, {"id": 1596122811, "node_id": "MDU6TGFiZWwxNTk2MTIyODEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-newcomer-roadblock", "name": "D-newcomer-roadblock", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error hard to understand for new users"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-12-29T01:09:05Z", "updated_at": "2022-12-28T20:54:20Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "Simple example: \r\n\r\n```rust\r\ntrait T {}\r\n\r\nstruct S;\r\n\r\nimpl T for S {}\r\n\r\nfn foo<X: T>(s: X) -> X {\r\n    s\r\n}\r\n\r\nfn main() {\r\n    let x: T = foo(S);\r\n}\r\n```\r\n\r\nThis gives the error message: \r\n```\r\nerror[E0277]: the size for values of type `dyn T` cannot be known at compilation time\r\n  --> src/main.rs:12:9\r\n   |\r\n12 |     let x: T = foo(S);\r\n   |         ^ doesn't have a size known at compile-time\r\n   |\r\n   = help: the trait `std::marker::Sized` is not implemented for `dyn T`\r\n   = note: to learn more, visit <https://doc.rust-lang.org/book/second-edition/ch19-04-advanced-types.html#dynamically-sized-types-and-the-sized-trait>\r\n   = note: all local variables must have a statically known size\r\n   = help: unsized locals are gated as an unstable feature\r\n```\r\n\r\nThe following code works, so perhaps it would be useful for the compiler error to suggest using `Box`:\r\n\r\n```rust\r\ntrait T {}\r\n\r\nstruct S;\r\n\r\nimpl T for S {}\r\n\r\nfn foo<X: T>(s: X) -> Box<X> {\r\n    Box::new(s)\r\n}\r\n\r\nfn main() {\r\n    let x: Box<T> = foo(S);\r\n}\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/57186/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/57186/timeline", "performed_via_github_app": null, "state_reason": null}