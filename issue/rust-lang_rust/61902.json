{"url": "https://api.github.com/repos/rust-lang/rust/issues/61902", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/61902/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/61902/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/61902/events", "html_url": "https://github.com/rust-lang/rust/issues/61902", "id": 456680070, "node_id": "MDU6SXNzdWU0NTY2ODAwNzA=", "number": 61902, "title": "`for` loop desugaring treats the loop's trailing expression in unusual way", "user": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-16T20:40:40Z", "updated_at": "2019-06-23T01:20:32Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Namely, it's treated as a semicolon-less statement in a middle of the block.\r\n```rust\r\n// Like this:\r\nfn main() {\r\n    { 0 } // <- semicolon-less statement in a middle of the block\r\n\r\n    ()\r\n}\r\n```\r\n- \"Semicolon-less\" means that its type should unify with `()` (https://github.com/rust-lang/rust/pull/61753).\r\n- \"In a middle of the block\" means that it's not treated as trailing and its lifetime is not extended from the block outwards. That means \"does not live long enough\" errors like [these](https://github.com/rust-lang/rust/pull/61753#issuecomment-502306283) do not happen (a minimized test case would be appreciated).\r\n\r\nThis is unusual because\r\n- No other block construction or loop does this.\r\n- The desugared form cannot be written in source code (it will either need a semicolon, or will be considered trailing).\r\n\r\nGit blame says that the behavior was introduced by @Zoxc in https://github.com/rust-lang/rust/pull/42265.\r\n\r\nWe cannot remove this behavior because it appears to be useful and code will break if it's removed.\r\nWe can, however, use it in other block constructions for which the block's trailing expression does not represent its result.\r\n\r\n| Block construction  | Trailing expression is the result |\r\n| ------------- | ------------- |\r\n| `if cond { ... } [else { ... }]`  | Yes  |\r\n| `if let pat = expr { ... } [else { ... }]`  | Yes  |\r\n| `while cond { ... }`  | No  |\r\n| `while let pat = expr { ... }`  | No  |\r\n| `for pat in expr { ... }`  | No  |\r\n| `loop { ... }`  | No  |\r\n| `[unsafe] { ... }`  | Yes  |\r\n| `async { ... }`  | ???  |\r\n| `try { ... }`  | Yes  |", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/61902/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/61902/timeline", "performed_via_github_app": null, "state_reason": null}