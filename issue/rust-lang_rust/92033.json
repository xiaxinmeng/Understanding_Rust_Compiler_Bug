{"url": "https://api.github.com/repos/rust-lang/rust/issues/92033", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/92033/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/92033/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/92033/events", "html_url": "https://github.com/rust-lang/rust/issues/92033", "id": 1083183485, "node_id": "I_kwDOAAsO6M5AkBF9", "number": 92033, "title": "Better diagnostics when where clauses need on associated type in impl", "user": {"login": "chubei-oppen", "id": 31505943, "node_id": "MDQ6VXNlcjMxNTA1OTQz", "avatar_url": "https://avatars.githubusercontent.com/u/31505943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chubei-oppen", "html_url": "https://github.com/chubei-oppen", "followers_url": "https://api.github.com/users/chubei-oppen/followers", "following_url": "https://api.github.com/users/chubei-oppen/following{/other_user}", "gists_url": "https://api.github.com/users/chubei-oppen/gists{/gist_id}", "starred_url": "https://api.github.com/users/chubei-oppen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chubei-oppen/subscriptions", "organizations_url": "https://api.github.com/users/chubei-oppen/orgs", "repos_url": "https://api.github.com/users/chubei-oppen/repos", "events_url": "https://api.github.com/users/chubei-oppen/events{/privacy}", "received_events_url": "https://api.github.com/users/chubei-oppen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1485960423, "node_id": "MDU6TGFiZWwxNDg1OTYwNDIz", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-generic_associated_types", "name": "F-generic_associated_types", "color": "f9c0cc", "default": false, "description": "`#![feature(generic_associated_types)]` a.k.a. GATs"}, {"id": 3307663436, "node_id": "MDU6TGFiZWwzMzA3NjYzNDM2", "url": "https://api.github.com/repos/rust-lang/rust/labels/GATs-triaged", "name": "GATs-triaged", "color": "e88000", "default": false, "description": "Issues using the `generic_associated_types` feature that have been triaged"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2021-12-17T11:51:14Z", "updated_at": "2022-02-18T21:58:20Z", "closed_at": "2022-02-18T21:58:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nAs suggested in #87479, I'm reporting a case where the required bound breaks code.\r\n\r\nI was writing a 3D renderer and modeling the `surface` and `swapchain` concepts using traits.\r\n\r\nA `Surface` is something you can render to, it should produce a iterator of references to `Texture`s:\r\n\r\n```rust\r\nstruct Texture;\r\n\r\ntrait Surface {\r\n    type TextureIter<'a>: Iterator<Item = &'a Texture>;\r\n\r\n    fn get_texture(&self) -> Self::TextureIter<'_>;\r\n}\r\n```\r\n\r\nA `Swapchain` produces a reference to a `Surface`:\r\n\r\n```rust\r\ntrait Swapchain {\r\n    type Surface<'a>: Surface;\r\n\r\n    fn get_surface(&self) -> Self::Surface<'_>;\r\n}\r\n```\r\n\r\nNow a `Texture` itself can be used as a swapchain, producing reference to itself as the `Surface`.\r\n\r\n```rust\r\nimpl<'s> Surface for &'s Texture {\r\n    type TextureIter<'a> = std::option::IntoIter<&'a Texture>;\r\n\r\n    fn get_texture(&self) -> Self::TextureIter<'_> {\r\n        let option: Option<&Texture> = Some(self);\r\n        option.into_iter()\r\n    }\r\n}\r\n\r\nimpl Swapchain for Texture {\r\n    type Surface<'a> = &'a Texture;\r\n\r\n    fn get_surface(&self) -> Self::Surface<'_> {\r\n        self\r\n    }\r\n}\r\n```\r\n\r\nAbove code compiles under `rustc 1.58.0-nightly (0d1754e8b 2021-11-05)`.\r\n\r\nNow it doesn't with added `where Self: 'a` bound.\r\n\r\nThis is a simplified example as `Surface` and `Swapchain` have other required methods.\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.59.0-nightly (efec54529 2021-12-04\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary>Backtrace</summary>\r\n<p>\r\n\r\n```\r\n<backtrace>\r\nerror[E0477]: the type `&'s Texture` does not fulfill the required lifetime\r\n  --> src/main.rs:18:5\r\n   |\r\n18 |     type TextureIter<'a> = std::option::IntoIter<&'a Texture>;\r\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n   |\r\nnote: type must outlive the lifetime `'a` as defined here\r\n  --> src/main.rs:18:22\r\n   |\r\n18 |     type TextureIter<'a> = std::option::IntoIter<&'a Texture>;\r\n   |                      ^^\r\n\r\nFor more information about this error, try `rustc --explain E0477`.\r\nerror: could not compile `rsplayground` due to previous error\r\n```\r\n\r\n</p>\r\n</details>\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/92033/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/92033/timeline", "performed_via_github_app": null, "state_reason": "completed"}