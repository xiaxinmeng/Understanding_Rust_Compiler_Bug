{"url": "https://api.github.com/repos/rust-lang/rust/issues/7379", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/7379/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/7379/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/7379/events", "html_url": "https://github.com/rust-lang/rust/issues/7379", "id": 15972527, "node_id": "MDU6SXNzdWUxNTk3MjUyNw==", "number": 7379, "title": "Clean up `resolve` error reporting", "user": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 36996, "node_id": "MDU6TGFiZWwzNjk5Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-easy", "name": "E-easy", "color": "02e10c", "default": false, "description": "Call for participation: Experience needed to fix: Easy / not much (good first issue)"}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 239393, "node_id": "MDU6TGFiZWwyMzkzOTM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-resolve", "name": "A-resolve", "color": "f7e101", "default": false, "description": "Area: Path resolution"}, {"id": 37977651, "node_id": "MDU6TGFiZWwzNzk3NzY1MQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/metabug", "name": "metabug", "color": "5319e7", "default": false, "description": "Issues about issues themselves (\"bugs about bugs\")"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-06-25T11:02:10Z", "updated_at": "2013-09-05T17:49:53Z", "closed_at": "2013-09-05T17:49:49Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Currently, resolve does a lot of redundant error reporting. For example,\n\n```\n/home/cmr/hacking/rust/src/libextra/interner.rs:161:8: 161:18 error: unresolved name\n/home/cmr/hacking/rust/src/libextra/interner.rs:161         ast::ident { repr: off, ctxt: 0 }\n                                                            ^~~~~~~~~~\n/home/cmr/hacking/rust/src/libextra/interner.rs:161:8: 161:18 error: use of undeclared module `ast`\n/home/cmr/hacking/rust/src/libextra/interner.rs:161         ast::ident { repr: off, ctxt: 0 }\n                                                            ^~~~~~~~~~\n/home/cmr/hacking/rust/src/libextra/interner.rs:161:8: 161:18 error: `ast::ident` does not name a structure\n/home/cmr/hacking/rust/src/libextra/interner.rs:161         ast::ident { repr: off, ctxt: 0 }\n                                                            ^~~~~~~~~~\n```\n\nThis should be a single error, \"error: use of undeclared module `ast`\".\n\nAnother example:\n\n```\n/home/cmr/hacking/rust/src/libextra/interner.rs:161:8: 161:18 error: unresolved name\n/home/cmr/hacking/rust/src/libextra/interner.rs:161         ast::ident { repr: off, ctxt: 0 }\n                                                            ^~~~~~~~~~\n/home/cmr/hacking/rust/src/libextra/interner.rs:161:8: 161:18 error: use of undeclared module `ast`\n/home/cmr/hacking/rust/src/libextra/interner.rs:161         ast::ident { repr: off, ctxt: 0 }\n                                                            ^~~~~~~~~~\n/home/cmr/hacking/rust/src/libextra/interner.rs:161:8: 161:18 error: `ast::ident` does not name a structure\n/home/cmr/hacking/rust/src/libextra/interner.rs:161         ast::ident { repr: off, ctxt: 0 }\n                                                            ^~~~~~~~~~\n```\n\nFixing this will require careful finagling of resolve. The best way to handle this is probably some central error reporting infrastructure, and as soon as _one_ error is reported, stop making new errors for the current span. This is going to be tricky because every error path needs to be followed to ensure that an error is reported, and that if only one error is reported, it is the right error. Needs vastly improved test coverage in compile-fail. Shouldn't be hard, but will take time.\n\nNominating for production-ready.\n", "closed_by": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/7379/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/7379/timeline", "performed_via_github_app": null, "state_reason": "completed"}