{"url": "https://api.github.com/repos/rust-lang/rust/issues/13018", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/13018/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/13018/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/13018/events", "html_url": "https://github.com/rust-lang/rust/issues/13018", "id": 29755354, "node_id": "MDU6SXNzdWUyOTc1NTM1NA==", "number": 13018, "title": "Room for optimization improvement on reference counting", "user": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 36996, "node_id": "MDU6TGFiZWwzNjk5Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-easy", "name": "E-easy", "color": "02e10c", "default": false, "description": "Call for participation: Experience needed to fix: Easy / not much (good first issue)"}, {"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 234956, "node_id": "MDU6TGFiZWwyMzQ5NTY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-codegen", "name": "A-codegen", "color": "f7e101", "default": false, "description": "Area: Code generation"}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 22, "created_at": "2014-03-19T17:40:43Z", "updated_at": "2018-09-02T21:37:58Z", "closed_at": "2018-09-02T21:37:58Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "[Playground](https://play.rust-lang.org/?gist=de1039ef3cd4812b29c5c759e7645722&version=nightly&mode=release)\r\n\r\nI would expect this function to be ideally optimized to a no-op:\r\n\r\n``` rust\r\n#[inline(never)]\r\nfn foo<T>(t: &Rc<T>) {\r\n    drop(t.clone());  \r\n}\r\n```\r\n\r\nHowever, when invoked with `Rc<int>`, we generate the following optimized IR\r\n\r\n``` llvm\r\n; Function Attrs: noinline nounwind uwtable\r\ndefine internal fastcc void @_ZN3foo20h529f5691b0db4704gaa4v0.0E(%\"struct.std::rc::Rc<int>[#1]\"* nocapture readonly) unnamed_addr #3 {\r\nentry-block:\r\n  %1 = getelementptr inbounds %\"struct.std::rc::Rc<int>[#1]\"* %0, i64 0, i32 0\r\n  %2 = load %\"struct.std::rc::RcBox<int>[#1]\"** %1, align 8\r\n  %3 = getelementptr inbounds %\"struct.std::rc::RcBox<int>[#1]\"* %2, i64 0, i32 1\r\n  %4 = load i64* %3, align 8\r\n  %5 = add i64 %4, 1\r\n  store i64 %5, i64* %3, align 8\r\n  %6 = load %\"struct.std::rc::RcBox<int>[#1]\"** %1, align 8\r\n  %7 = icmp eq %\"struct.std::rc::RcBox<int>[#1]\"* %6, null\r\n  br i1 %7, label %_ZN3mem4drop20hf8ea12715443e741vda4v0.0E.exit, label %then-block-241-.i.i.i\r\n\r\nthen-block-241-.i.i.i:                            ; preds = %entry-block\r\n  %8 = getelementptr inbounds %\"struct.std::rc::RcBox<int>[#1]\"* %6, i64 0, i32 1\r\n  %9 = load i64* %8, align 8\r\n  %10 = add i64 %9, -1\r\n  store i64 %10, i64* %8, align 8\r\n  %11 = icmp eq i64 %10, 0\r\n  br i1 %11, label %then-block-262-.i.i.i, label %_ZN3mem4drop20hf8ea12715443e741vda4v0.0E.exit\r\n\r\nthen-block-262-.i.i.i:                            ; preds = %then-block-241-.i.i.i\r\n  %12 = getelementptr inbounds %\"struct.std::rc::RcBox<int>[#1]\"* %6, i64 0, i32 2\r\n  %13 = load i64* %12, align 8\r\n  %14 = add i64 %13, -1\r\n  store i64 %14, i64* %12, align 8\r\n  %15 = icmp eq i64 %14, 0\r\n  br i1 %15, label %then-block-270-.i.i.i, label %_ZN3mem4drop20hf8ea12715443e741vda4v0.0E.exit\r\n\r\nthen-block-270-.i.i.i:                            ; preds = %then-block-262-.i.i.i\r\n  %16 = bitcast %\"struct.std::rc::RcBox<int>[#1]\"* %6 to i8*\r\n  tail call void @free(i8* %16) #2\r\n  br label %_ZN3mem4drop20hf8ea12715443e741vda4v0.0E.exit\r\n\r\n_ZN3mem4drop20hf8ea12715443e741vda4v0.0E.exit:    ; preds = %entry-block, %then-block-241-.i.i.i, %then-block-262-.i.i.i, %then-block-270-.i.i.i\r\n  ret void\r\n}\r\n```\r\n\r\nI would expect that we would be able to do better.\r\n", "closed_by": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/13018/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/13018/timeline", "performed_via_github_app": null, "state_reason": "completed"}