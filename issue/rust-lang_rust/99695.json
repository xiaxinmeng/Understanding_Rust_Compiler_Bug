{"url": "https://api.github.com/repos/rust-lang/rust/issues/99695", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/99695/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/99695/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/99695/events", "html_url": "https://github.com/rust-lang/rust/issues/99695", "id": 1316006071, "node_id": "I_kwDOAAsO6M5OcKi3", "number": 99695, "title": "import #[macro_export] from crate root help broken by use trees", "user": {"login": "CAD97", "id": 5992217, "node_id": "MDQ6VXNlcjU5OTIyMTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5992217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CAD97", "html_url": "https://github.com/CAD97", "followers_url": "https://api.github.com/users/CAD97/followers", "following_url": "https://api.github.com/users/CAD97/following{/other_user}", "gists_url": "https://api.github.com/users/CAD97/gists{/gist_id}", "starred_url": "https://api.github.com/users/CAD97/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CAD97/subscriptions", "organizations_url": "https://api.github.com/users/CAD97/orgs", "repos_url": "https://api.github.com/users/CAD97/repos", "events_url": "https://api.github.com/users/CAD97/events{/privacy}", "received_events_url": "https://api.github.com/users/CAD97/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1596121013, "node_id": "MDU6TGFiZWwxNTk2MTIxMDEz", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-confusing", "name": "D-confusing", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error that should be reworked"}, {"id": 1596299768, "node_id": "MDU6TGFiZWwxNTk2Mjk5NzY4", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-invalid-suggestion", "name": "D-invalid-suggestion", "color": "c9f7a3", "default": false, "description": "A structured suggestion resulting in incorrect code"}, {"id": 1624891239, "node_id": "MDU6TGFiZWwxNjI0ODkxMjM5", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-incorrect", "name": "D-incorrect", "color": "c9f7a3", "default": false, "description": "A diagnostic that is giving misleading or incorrect information"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-07-24T20:52:54Z", "updated_at": "2023-01-21T07:17:53Z", "closed_at": "2023-01-21T07:17:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n\r\nIf you cannot produce a minimal reproduction case (something that would work in\r\nisolation), please provide the steps or even link to a repository that causes\r\nthe problematic output to occur.\r\n-->\r\n\r\nGiven the following code: [[playground]](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021&gist=48dddf636bdd62b020eaea0bd0e04393)\r\n\r\n```rust\r\nmod m {\r\n    #[macro_export]\r\n    macro_rules! nu {\r\n        {} => {};\r\n    }\r\n\r\n    #[allow(nonstandard_style)]\r\n    pub struct other_item;\r\n\r\n    pub use self::{nu, other_item as _};\r\n}\r\n```\r\n\r\nThe current output is:\r\n\r\n```\r\nerror[[E0432]](https://doc.rust-lang.org/nightly/error-index.html#E0432): unresolved import `self::nu`\r\n  --> src/lib.rs:10:20\r\n   |\r\n10 |     pub use self::{nu, other_item as _};\r\n   |                    ^^ no `nu` in `m`\r\n   |\r\n   = note: this could be because a macro annotated with `#[macro_export]` will be exported at the root of the crate instead of the module where it is defined\r\nhelp: a macro with this name exists at the root of the crate\r\n   |\r\n10 -     pub use self::{nu, other_item as _};\r\n10 +     pub use self::{nu, other_item as _};\r\n   |\r\n```\r\n\r\n<details><summary>If the starting order is reversed, the suggestion puts the macro first in the tree</summary>\r\n\r\n```\r\nerror[[E0432]](https://doc.rust-lang.org/nightly/error-index.html#E0432): unresolved import `self::nu`\r\n  --> src/lib.rs:10:37\r\n   |\r\n10 |     pub use self::{other_item as _, nu};\r\n   |                                     ^^ no `nu` in `m`\r\n   |\r\n   = note: this could be because a macro annotated with `#[macro_export]` will be exported at the root of the crate instead of the module where it is defined\r\nhelp: a macro with this name exists at the root of the crate\r\n   |\r\n10 -     pub use self::{other_item as _, nu};\r\n10 +     pub use self::{nu, other_item as _};\r\n   |\r\n```\r\n</details>\r\n\r\nThis is suggesting to change the code to itself \ud83d\ude43 It needs to move the import into a `use crate::` tree; the easy way is to make a new `use` statement (and let rustfmt clean that up); the medium way is to find an existing `use crate::` context; the hard way is when a `use crate::` tree root doesn't already exist (or isn't immediately a tree at that point) determine what [import granularity](https://rust-lang.github.io/rustfmt/?version=v1.5.1&search=#imports_granularity) the code is using and match that.\r\n\r\nRelated: #99694\r\n\r\n@rustbot label +D-confusing +D-incorrect", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/99695/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/99695/timeline", "performed_via_github_app": null, "state_reason": "completed"}