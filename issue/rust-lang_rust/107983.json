{"url": "https://api.github.com/repos/rust-lang/rust/issues/107983", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/107983/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/107983/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/107983/events", "html_url": "https://github.com/rust-lang/rust/issues/107983", "id": 1581903509, "node_id": "I_kwDOAAsO6M5eSe6V", "number": 107983, "title": "Help is suggesting to use `__iterator_get_unchecked`", "user": {"login": "MultisampledNight", "id": 80128916, "node_id": "MDQ6VXNlcjgwMTI4OTE2", "avatar_url": "https://avatars.githubusercontent.com/u/80128916?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MultisampledNight", "html_url": "https://github.com/MultisampledNight", "followers_url": "https://api.github.com/users/MultisampledNight/followers", "following_url": "https://api.github.com/users/MultisampledNight/following{/other_user}", "gists_url": "https://api.github.com/users/MultisampledNight/gists{/gist_id}", "starred_url": "https://api.github.com/users/MultisampledNight/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MultisampledNight/subscriptions", "organizations_url": "https://api.github.com/users/MultisampledNight/orgs", "repos_url": "https://api.github.com/users/MultisampledNight/repos", "events_url": "https://api.github.com/users/MultisampledNight/events{/privacy}", "received_events_url": "https://api.github.com/users/MultisampledNight/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2023-02-13T08:44:18Z", "updated_at": "2023-02-16T03:44:27Z", "closed_at": "2023-02-16T03:44:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Code\r\n\r\n```Rust\r\nfn i_can_has_iterator() -> impl Iterator<Item = u32> {\r\n    Box::new(1..=10) as Box<dyn Iterator>\r\n}\r\n```\r\n\r\n\r\n### Current output\r\n\r\n```Shell\r\nCompiling iterconfusion v0.1.0 (/irrelevant/iterconfusion)\r\nerror[E0191]: the value of the associated type `Item` (from trait `Iterator`) must be specified\r\n --> src/lib.rs:2:33\r\n  |\r\n2 |     Box::new(1..=10) as Box<dyn Iterator>\r\n  |                                 ^^^^^^^^ help: specify the associated type: `Iterator<Item = Type>`\r\n\r\nerror[E0271]: expected `Box<dyn Iterator>` to be an iterator that yields `u32`, but it yields `<dyn Iterator as Iterator>::Item`\r\n    --> src/lib.rs:1:28\r\n     |\r\n1    | fn i_can_has_iterator() -> impl Iterator<Item = u32> {\r\n     |                            ^^^^^^^^^^^^^^^^^^^^^^^^^ expected associated type, found `u32`\r\n2    |     Box::new(1..=10) as Box<dyn Iterator>\r\n     |     ------------------------------------- return type was inferred to be `Box<dyn Iterator>` here\r\n     |\r\n     = note: expected associated type `<dyn Iterator as Iterator>::Item`\r\n                           found type `u32`\r\nhelp: a method is available that returns `<dyn Iterator as Iterator>::Item`\r\n    --> /home/multisn8/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/iter/traits/iterator.rs:3852:5\r\n     |\r\n3852 | /     unsafe fn __iterator_get_unchecked(&mut self, _idx: usize) -> Self::Item\r\n3853 | |     where\r\n3854 | |         Self: TrustedRandomAccessNoCoerce,\r\n     | |__________________________________________^ consider calling `__iterator_get_unchecked`\r\n\r\nSome errors have detailed explanations: E0191, E0271.\r\nFor more information about an error, try `rustc --explain E0191`.\r\nerror: could not compile `iterconfusion` due to 2 previous errors\r\n```\r\n\r\n\r\n### Desired output\r\n\r\n```Shell\r\nerror[E0191]: the value of the associated type `Item` (from trait `Iterator`) must be specified\r\n --> src/lib.rs:2:33\r\n  |\r\n2 |     Box::new(1..=10) as Box<dyn Iterator>\r\n  |                                 ^^^^^^^^ help: specify the associated type: `Iterator<Item = Type>`\r\nhelp: likely you want this to match the output type, `Iterator<Item = u32>`\r\n --> src/lib.rs:2:40\r\n  |\r\n2 |     Box::new(1..=10) as Box<dyn Iterator<Item = u32>>\r\n  |                                         ++++++++++++\r\n```\r\n\r\n\r\n### Rationale and extra context\r\n\r\nI don't think I as an outside user of stdlib should be confronted with using internal unsafe APIs such as `__iterator_get_unchecked`.\r\n\r\n### Other cases\r\n\r\n_No response_\r\n\r\n### Anything else?\r\n\r\n`rustc -V`: `rustc 1.69.0-nightly (5b8f28453 2023-02-12)`", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/107983/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/107983/timeline", "performed_via_github_app": null, "state_reason": "completed"}