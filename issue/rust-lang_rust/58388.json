{"url": "https://api.github.com/repos/rust-lang/rust/issues/58388", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/58388/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/58388/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/58388/events", "html_url": "https://github.com/rust-lang/rust/issues/58388", "id": 409088348, "node_id": "MDU6SXNzdWU0MDkwODgzNDg=", "number": 58388, "title": "Redundant bounds check is not elided", "user": {"login": "FaultyRAM", "id": 316014, "node_id": "MDQ6VXNlcjMxNjAxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/316014?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FaultyRAM", "html_url": "https://github.com/FaultyRAM", "followers_url": "https://api.github.com/users/FaultyRAM/followers", "following_url": "https://api.github.com/users/FaultyRAM/following{/other_user}", "gists_url": "https://api.github.com/users/FaultyRAM/gists{/gist_id}", "starred_url": "https://api.github.com/users/FaultyRAM/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FaultyRAM/subscriptions", "organizations_url": "https://api.github.com/users/FaultyRAM/orgs", "repos_url": "https://api.github.com/users/FaultyRAM/repos", "events_url": "https://api.github.com/users/FaultyRAM/events{/privacy}", "received_events_url": "https://api.github.com/users/FaultyRAM/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-02-12T02:32:31Z", "updated_at": "2020-03-17T19:53:43Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "[Nightly Playground link](https://play.rust-lang.org/?version=nightly&mode=release&edition=2018&gist=aed66d73af0bece065fb47940cefe14a)\r\n\r\nSplitting a slice in two such that `left.len() <= right.len()`, then looping `left.len()` times over the elements of `left` and `right` cannot overflow, but a bounds check is emitted for `right[i]` regardless:\r\n\r\n```rust\r\npub fn foo(bytes: &[u8]) -> u8 {\r\n    let (left, right) = bytes.split_at(bytes.len() >> 1);\r\n    let mut total: u8 = 0;\r\n    for i in 0..left.len() {\r\n        let a = left[i];\r\n        let b = right[i];\r\n        let n = a.wrapping_add(b);\r\n        total = total.wrapping_add(n);\r\n    }\r\n    total\r\n}\r\n```\r\n\r\n```asm\r\nplayground::foo: # @playground::foo\r\n# %bb.0:\r\n\tpushq\t%rax\r\n\tmovq\t%rsi, %rcx\r\n\tshrq\t%rcx\r\n\tje\t.LBB0_1\r\n# %bb.3:\r\n\tmovq\t%rsi, %r8\r\n\tsubq\t%rcx, %r8\r\n\tleaq\t(%rdi,%rcx), %r9\r\n\txorl\t%eax, %eax\r\n\txorl\t%esi, %esi\r\n\r\n.LBB0_4:                                # =>This Inner Loop Header: Depth=1\r\n\tcmpq\t%r8, %rsi\r\n\tjae\t.LBB0_6\r\n# %bb.5:                                #   in Loop: Header=BB0_4 Depth=1\r\n\taddb\t(%rdi,%rsi), %al\r\n\taddb\t(%r9,%rsi), %al\r\n\tleaq\t1(%rsi), %rdx\r\n\tmovq\t%rdx, %rsi\r\n\tcmpq\t%rcx, %rdx\r\n\tjb\t.LBB0_4\r\n# %bb.2:\r\n                                        # kill: def $al killed $al killed $rax\r\n\tpopq\t%rcx\r\n\tretq\r\n\r\n.LBB0_1:\r\n\txorl\t%eax, %eax\r\n                                        # kill: def $al killed $al killed $rax\r\n\tpopq\t%rcx\r\n\tretq\r\n\r\n.LBB0_6:\r\n\tleaq\t.Lanon.f6dd5f9df35562231dce3b61698e08b8.0(%rip), %rdi\r\n\tmovq\t%r8, %rdx\r\n\tcallq\t*core::panicking::panic_bounds_check@GOTPCREL(%rip)\r\n\tud2\r\n                                        # -- End function\r\n\r\nstr.0:\r\n\t.ascii\t\"src/lib.rs\"\r\n\r\n.Lanon.f6dd5f9df35562231dce3b61698e08b8.0:\r\n\t.quad\tstr.0\r\n\t.quad\t10                      # 0xa\r\n\t.long\t6                       # 0x6\r\n\t.long\t17                      # 0x11\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/58388/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/58388/timeline", "performed_via_github_app": null, "state_reason": null}