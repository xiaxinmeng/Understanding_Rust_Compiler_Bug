{"url": "https://api.github.com/repos/rust-lang/rust/issues/73816", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/73816/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/73816/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/73816/events", "html_url": "https://github.com/rust-lang/rust/issues/73816", "id": 646770111, "node_id": "MDU6SXNzdWU2NDY3NzAxMTE=", "number": 73816, "title": "ICE when adding GAT feature in combination with async/await", "user": {"login": "samuelpilz", "id": 6854175, "node_id": "MDQ6VXNlcjY4NTQxNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6854175?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samuelpilz", "html_url": "https://github.com/samuelpilz", "followers_url": "https://api.github.com/users/samuelpilz/followers", "following_url": "https://api.github.com/users/samuelpilz/following{/other_user}", "gists_url": "https://api.github.com/users/samuelpilz/gists{/gist_id}", "starred_url": "https://api.github.com/users/samuelpilz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samuelpilz/subscriptions", "organizations_url": "https://api.github.com/users/samuelpilz/orgs", "repos_url": "https://api.github.com/users/samuelpilz/repos", "events_url": "https://api.github.com/users/samuelpilz/events{/privacy}", "received_events_url": "https://api.github.com/users/samuelpilz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}, {"id": 1485960423, "node_id": "MDU6TGFiZWwxNDg1OTYwNDIz", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-generic_associated_types", "name": "F-generic_associated_types", "color": "f9c0cc", "default": false, "description": "`#![feature(generic_associated_types)]` a.k.a. GATs"}], "state": "closed", "locked": false, "assignee": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2020-06-27T21:32:59Z", "updated_at": "2020-10-06T14:57:29Z", "closed_at": "2020-10-06T14:57:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Code\r\n\r\n* crate b (only main.rs) depends on crate a (only lib.rs).\r\n* Feature GAT is enabled (but not used directly)\r\n* without feature GAT, the code does not pass `cargo check`\r\n* with feature GAT, the code passes `cargo check` and fails at `cargo build`, but only when code ill-formed FooImpl is generated.\r\n* within single crate, the ICE does not happen\r\n* I cannot reproduce this with any other traits than Future together with async/await\r\n\r\ncrate a, lib.rs\r\n```Rust\r\n#![feature(generic_associated_types)]\r\n\r\nuse std::{future::Future, pin::Pin};\r\npub trait Foo {\r\n    type Bar: AsRef<()>;\r\n    fn foo(&self) -> Pin<Box<dyn Future<Output = Self::Bar> + '_>>;\r\n}\r\n\r\n```\r\ncrate b, main.rs\r\n```rust\r\nuse futures::executor::block_on;\r\n\r\nuse a::Foo;\r\nuse std::{future::Future, pin::Pin};\r\n\r\nfn main() {\r\n    block_on(foo());\r\n}\r\n\r\npub struct FooImpl;\r\n\r\nimpl Foo for FooImpl {\r\n    type Bar = ();\r\n    fn foo(&self) -> Pin<Box<dyn Future<Output = Self::Bar> + '_>> {\r\n        panic!()\r\n    }\r\n}\r\n\r\nasync fn foo() {\r\n    bar(&FooImpl).await;\r\n}\r\n\r\nasync fn bar<F: Foo>(foo: &F) {\r\n    foo.foo().await.as_ref();\r\n}\r\n```\r\n\r\n### Meta\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.46.0-nightly (7750c3d46 2020-06-26)\r\nbinary: rustc\r\ncommit-hash: 7750c3d46bc19784adb1ee6e37a5ec7e4cd7e772\r\ncommit-date: 2020-06-26\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.46.0-nightly\r\nLLVM version: 10.0\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nerror: internal compiler error: src/librustc_trait_selection/traits/codegen/mod.rs:62:17: Encountered error `Unimplemented` selecting `Binder(<() as std::convert::AsRef<()>>)` during codegen\r\n\r\nthread 'rustc' panicked at 'Box<Any>', src/librustc_errors/lib.rs:916:9\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.46.0-nightly (7750c3d46 2020-06-26) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nerror: aborting due to previous error\r\n```\r\n\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nerror: internal compiler error: src/librustc_trait_selection/traits/codegen/mod.rs:62:17: Encountered error `Unimplemented` selecting `Binder(<() as std::convert::AsRef<()>>)` during codegen\r\n\r\nthread 'rustc' panicked at 'Box<Any>', src/librustc_errors/lib.rs:916:9\r\nstack backtrace:\r\n   0: backtrace::backtrace::libunwind::trace\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/libunwind.rs:86\r\n   1: backtrace::backtrace::trace_unsynchronized\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/mod.rs:66\r\n   2: std::sys_common::backtrace::_print_fmt\r\n             at src/libstd/sys_common/backtrace.rs:78\r\n   3: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt\r\n             at src/libstd/sys_common/backtrace.rs:59\r\n   4: core::fmt::write\r\n             at src/libcore/fmt/mod.rs:1076\r\n   5: std::io::Write::write_fmt\r\n             at src/libstd/io/mod.rs:1537\r\n   6: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:62\r\n   7: std::sys_common::backtrace::print\r\n             at src/libstd/sys_common/backtrace.rs:49\r\n   8: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/panicking.rs:198\r\n   9: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:217\r\n  10: rustc_driver::report_ice\r\n  11: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:524\r\n  12: std::panicking::begin_panic\r\n  13: rustc_errors::HandlerInner::bug\r\n  14: rustc_errors::Handler::bug\r\n  15: rustc_middle::util::bug::opt_span_bug_fmt::{{closure}}\r\n  16: rustc_middle::ty::context::tls::with_opt::{{closure}}\r\n  17: rustc_middle::ty::context::tls::with_opt\r\n  18: rustc_middle::util::bug::opt_span_bug_fmt\r\n  19: rustc_middle::util::bug::bug_fmt\r\n  20: rustc_middle::ty::context::GlobalCtxt::enter_local\r\n  21: rustc_trait_selection::traits::codegen::codegen_fulfill_obligation\r\n  22: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::codegen_fulfill_obligation>::compute\r\n  23: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  24: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  25: rustc_data_structures::stack::ensure_sufficient_stack\r\n  26: rustc_query_system::query::plumbing::get_query_impl\r\n  27: rustc_ty::instance::resolve_instance\r\n  28: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::resolve_instance>::compute\r\n  29: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  30: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  31: rustc_data_structures::stack::ensure_sufficient_stack\r\n  32: rustc_query_system::query::plumbing::get_query_impl\r\n  33: rustc_middle::ty::instance::Instance::resolve\r\n  34: <rustc_mir::monomorphize::collector::MirNeighborCollector as rustc_middle::mir::visit::Visitor>::visit_terminator\r\n  35: rustc_mir::monomorphize::collector::collect_neighbours\r\n  36: rustc_data_structures::stack::ensure_sufficient_stack\r\n  37: rustc_mir::monomorphize::collector::collect_items_rec\r\n  38: rustc_mir::monomorphize::collector::collect_items_rec\r\n  39: rustc_mir::monomorphize::collector::collect_items_rec\r\n  40: rustc_mir::monomorphize::collector::collect_items_rec\r\n  41: rustc_mir::monomorphize::collector::collect_items_rec\r\n  42: rustc_mir::monomorphize::collector::collect_items_rec\r\n  43: rustc_mir::monomorphize::collector::collect_items_rec\r\n  44: rustc_mir::monomorphize::collector::collect_items_rec\r\n  45: rustc_mir::monomorphize::collector::collect_items_rec\r\n  46: rustc_mir::monomorphize::collector::collect_items_rec\r\n  47: rustc_mir::monomorphize::collector::collect_items_rec\r\n  48: rustc_mir::monomorphize::collector::collect_crate_mono_items\r\n  49: rustc_mir::monomorphize::partitioning::collect_and_partition_mono_items\r\n  50: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::collect_and_partition_mono_items>::compute\r\n  51: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  52: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  53: rustc_query_system::query::plumbing::get_query_impl\r\n  54: rustc_codegen_ssa::base::codegen_crate\r\n  55: <rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::CodegenBackend>::codegen_crate\r\n  56: rustc_session::utils::<impl rustc_session::session::Session>::time\r\n  57: rustc_interface::passes::start_codegen\r\n  58: rustc_middle::ty::context::tls::enter_global\r\n  59: rustc_interface::queries::Queries::ongoing_codegen\r\n  60: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n  61: rustc_span::with_source_map\r\n  62: rustc_interface::interface::run_compiler_in_existing_thread_pool\r\n  63: scoped_tls::ScopedKey<T>::set\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.46.0-nightly (7750c3d46 2020-06-26) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [codegen_fulfill_obligation] checking if `std::convert::AsRef` fulfills its obligations\r\n#1 [resolve_instance] resolving instance `<() as std::convert::AsRef<()>>::as_ref`\r\n#2 [collect_and_partition_mono_items] collect_and_partition_mono_items\r\nend of query stack\r\nerror: aborting due to previous error\r\n\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/73816/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/73816/timeline", "performed_via_github_app": null, "state_reason": "completed"}