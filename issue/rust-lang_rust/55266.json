{"url": "https://api.github.com/repos/rust-lang/rust/issues/55266", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/55266/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/55266/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/55266/events", "html_url": "https://github.com/rust-lang/rust/issues/55266", "id": 372574223, "node_id": "MDU6SXNzdWUzNzI1NzQyMjM=", "number": 55266, "title": "ICE 'assertion failed: !value.needs_subst()', librustc/traits/query/normalize_erasing_regions.rs:69:9", "user": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 36996, "node_id": "MDU6TGFiZWwzNjk5Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-easy", "name": "E-easy", "color": "02e10c", "default": false, "description": "Call for participation: Experience needed to fix: Easy / not much (good first issue)"}, {"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 46741598, "node_id": "MDU6TGFiZWw0Njc0MTU5OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-test", "name": "E-needs-test", "color": "02e10c", "default": false, "description": "Call for participation: writing correctness tests"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-22T15:40:05Z", "updated_at": "2019-06-09T02:08:19Z", "closed_at": "2019-06-09T02:08:19Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I don\u2019t know how related this is to https://github.com/rust-lang/rust/issues/55265, the assertion is different.\r\n\r\n```rust\r\nstruct VTable<DST: ?Sized> {\r\n    _to_dst_ptr: fn(*mut ()) -> *mut DST,\r\n}\r\n\r\ntrait HasVTableFor<DST: ?Sized + 'static> {\r\n    const VTABLE: &'static VTable<DST>;\r\n}\r\n\r\nimpl<T, DST: ?Sized + 'static> HasVTableFor<DST> for T {\r\n    const VTABLE: &'static VTable<DST> = &VTable {\r\n        _to_dst_ptr: |_: *mut ()| unsafe { std::mem::zeroed() },\r\n    };\r\n}\r\n\r\npub fn push<DST: ?Sized + 'static, T>() {\r\n    <T as HasVTableFor<DST>>::VTABLE;\r\n}\r\n```\r\n\r\n([Playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2015&gist=502fc18484322fc7b20fd9b5bed26877))\r\n\r\nErrors:\r\n\r\n```rust\r\nthread 'main' panicked at 'assertion failed: !value.needs_subst()', librustc/traits/query/normalize_erasing_regions.rs:69:9\r\nstack backtrace:\r\n   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace\r\n             at libstd/sys/unix/backtrace/tracing/gcc_s.rs:49\r\n   1: std::sys_common::backtrace::print\r\n             at libstd/sys_common/backtrace.rs:71\r\n             at libstd/sys_common/backtrace.rs:59\r\n   2: std::panicking::default_hook::{{closure}}\r\n             at libstd/panicking.rs:211\r\n   3: std::panicking::default_hook\r\n             at libstd/panicking.rs:227\r\n   4: rustc::util::common::panic_hook\r\n   5: std::panicking::rust_panic_with_hook\r\n             at libstd/panicking.rs:480\r\n   6: std::panicking::begin_panic\r\n   7: rustc::traits::query::normalize_erasing_regions::<impl rustc::ty::context::TyCtxt<'cx, 'tcx, 'tcx>>::normalize_erasing_late_bound_regions\r\n   8: rustc::ty::instance::Instance::resolve_closure\r\n   9: rustc_mir::interpret::cast::<impl rustc_mir::interpret::eval_context::EvalContext<'a, 'mir, 'tcx, M>>::cast\r\n  10: rustc_mir::interpret::step::<impl rustc_mir::interpret::eval_context::EvalContext<'a, 'mir, 'tcx, M>>::run\r\n  11: rustc_mir::const_eval::eval_body_using_ecx\r\n  12: rustc_mir::const_eval::const_eval_provider\r\n  13: rustc::ty::query::__query_compute::const_eval\r\n  14: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors<'tcx> for rustc::ty::query::queries::const_eval<'tcx>>::compute\r\n  15: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  16: rustc::ty::context::tls::with_related_context\r\n  17: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::force_query_with_job\r\n  18: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::get_query\r\n  19: rustc::ty::query::TyCtxtAt::const_eval\r\n  20: rustc_mir::interpret::operand::<impl rustc_mir::interpret::eval_context::EvalContext<'a, 'mir, 'tcx, M>>::global_to_op\r\n  21: rustc_mir::interpret::operand::<impl rustc_mir::interpret::eval_context::EvalContext<'a, 'mir, 'tcx, M>>::const_value_to_op\r\n  22: rustc_mir::interpret::operand::<impl rustc_mir::interpret::eval_context::EvalContext<'a, 'mir, 'tcx, M>>::const_to_op\r\n  23: rustc_mir::transform::const_prop::ConstPropagator::eval_constant\r\n  24: rustc_mir::transform::const_prop::ConstPropagator::const_prop\r\n  25: <rustc_mir::transform::const_prop::ConstPropagator<'b, 'a, 'tcx> as rustc::mir::visit::Visitor<'tcx>>::visit_statement\r\n  26: <rustc_mir::transform::const_prop::ConstProp as rustc_mir::transform::MirPass>::run_pass\r\n  27: rustc_mir::transform::optimized_mir::{{closure}}\r\n  28: rustc_mir::transform::optimized_mir\r\n  29: rustc::ty::query::__query_compute::optimized_mir\r\n  30: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors<'tcx> for rustc::ty::query::queries::optimized_mir<'tcx>>::compute\r\n  31: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  32: rustc::ty::context::tls::with_related_context\r\n  33: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::force_query_with_job\r\n  34: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::try_get_query\r\n  35: rustc::ty::query::<impl rustc::ty::context::TyCtxt<'a, 'tcx, 'lcx>>::optimized_mir\r\n  36: rustc_metadata::encoder::<impl rustc_metadata::isolated_encoder::IsolatedEncoder<'a, 'b, 'tcx>>::encode_optimized_mir\r\n  37: rustc_metadata::encoder::<impl rustc_metadata::isolated_encoder::IsolatedEncoder<'a, 'b, 'tcx>>::encode_info_for_item\r\n  38: rustc::ty::context::tls::with_context\r\n  39: <rustc_metadata::encoder::EncodeVisitor<'a, 'b, 'tcx> as rustc::hir::intravisit::Visitor<'tcx>>::visit_item\r\n  40: rustc::hir::Crate::visit_all_item_likes\r\n  41: rustc_metadata::encoder::encode_metadata\r\n  42: rustc_metadata::cstore_impl::<impl rustc::middle::cstore::CrateStore for rustc_metadata::cstore::CStore>::encode_metadata\r\n  43: rustc::ty::context::TyCtxt::encode_metadata\r\n  44: rustc_codegen_llvm::base::write_metadata\r\n  45: rustc::util::common::time\r\n  46: rustc_codegen_llvm::base::codegen_crate\r\n  47: <rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_utils::codegen_backend::CodegenBackend>::codegen_crate\r\n  48: rustc::util::common::time\r\n  49: rustc_driver::driver::phase_4_codegen\r\n  50: rustc_driver::driver::compile_input::{{closure}}\r\n  51: rustc::ty::context::tls::enter_context\r\n  52: <std::thread::local::LocalKey<T>>::with\r\n  53: rustc::ty::context::TyCtxt::create_and_enter\r\n  54: rustc_driver::driver::compile_input\r\n  55: rustc_driver::run_compiler_with_pool\r\n  56: rustc_driver::driver::spawn_thread_pool\r\n  57: rustc_driver::run_compiler\r\n  58: <scoped_tls::ScopedKey<T>>::set\r\n  59: <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once\r\n  60: __rust_maybe_catch_panic\r\n             at libpanic_unwind/lib.rs:102\r\n  61: rustc_driver::run\r\n  62: rustc_driver::main\r\n  63: std::rt::lang_start::{{closure}}\r\n  64: std::panicking::try::do_call\r\n             at libstd/rt.rs:59\r\n             at libstd/panicking.rs:310\r\n  65: __rust_maybe_catch_panic\r\n             at libpanic_unwind/lib.rs:102\r\n  66: std::rt::lang_start_internal\r\n             at libstd/panicking.rs:289\r\n             at libstd/panic.rs:392\r\n             at libstd/rt.rs:58\r\n  67: main\r\n  68: __libc_start_main\r\n  69: <unknown>\r\nquery stack during panic:\r\n#0 [const_eval] const-evaluating `<T as HasVTableFor<DST>>::VTABLE`\r\n  --> src/lib.rs:16:5\r\n   |\r\n16 |     <T as HasVTableFor<DST>>::VTABLE;\r\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n#1 [optimized_mir] processing `push`\r\nend of query stack\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.31.0-nightly (424a749a0 2018-10-21) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C codegen-units=1 -C debuginfo=2 --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nerror: Could not compile `playground`.\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/55266/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/55266/timeline", "performed_via_github_app": null, "state_reason": "completed"}