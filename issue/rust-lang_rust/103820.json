{"url": "https://api.github.com/repos/rust-lang/rust/issues/103820", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/103820/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/103820/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/103820/events", "html_url": "https://github.com/rust-lang/rust/issues/103820", "id": 1430580598, "node_id": "I_kwDOAAsO6M5VRO12", "number": 103820, "title": "Tracking Issue for integrating `Error` trait with panic interfaces", "user": {"login": "DebugSteven", "id": 10746702, "node_id": "MDQ6VXNlcjEwNzQ2NzAy", "avatar_url": "https://avatars.githubusercontent.com/u/10746702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DebugSteven", "html_url": "https://github.com/DebugSteven", "followers_url": "https://api.github.com/users/DebugSteven/followers", "following_url": "https://api.github.com/users/DebugSteven/following{/other_user}", "gists_url": "https://api.github.com/users/DebugSteven/gists{/gist_id}", "starred_url": "https://api.github.com/users/DebugSteven/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DebugSteven/subscriptions", "organizations_url": "https://api.github.com/users/DebugSteven/orgs", "repos_url": "https://api.github.com/users/DebugSteven/repos", "events_url": "https://api.github.com/users/DebugSteven/events{/privacy}", "received_events_url": "https://api.github.com/users/DebugSteven/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 650846969, "node_id": "MDU6TGFiZWw2NTA4NDY5Njk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-tracking-issue", "name": "C-tracking-issue", "color": "f5f1fd", "default": false, "description": "Category: A tracking issue for an RFC or an unstable feature."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-10-31T22:30:06Z", "updated_at": "2023-04-25T13:44:22Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Feature gate: `#![feature(error_in_panic)]`\r\n\r\nThis is a tracking issue for integrating the `Error` trait with `panic` interfaces.\r\n \r\nThis allows panic handlers to access the richer `Error` trait interface when reporting panics that have a runtime error as their source.\r\n\r\n### Public API\r\n\r\n<!--\r\nFor most library features, it'd be useful to include a summarized version of the public API.\r\n(E.g. just the public function signatures without their doc comments or implementation.)\r\n-->\r\n\r\n```rust\r\n/// core::panic\r\n\r\nimpl PanicInfo<'_> {\r\n    pub fn source(&self) -> Option<&(dyn Error + 'static)>;\r\n}\r\n```\r\n\r\n### Steps / History\r\n\r\n- [ ] ACP: https://github.com/rust-lang/libs-team/issues/124\r\n- [ ] Implementation: #103169\r\n- [ ] Final comment period (FCP)[^1]\r\n- [ ] Stabilization PR\r\n\r\n### Unresolved Questions\r\n\r\n- [ ] How should this actually be invoked? What should be the final interface?\r\n- [ ] How do we integrate this with `expect` and `unwrap`? (More detail in the [ACP](https://github.com/rust-lang/libs-team/issues/124))\r\n\r\n[^1]: https://std-dev-guide.rust-lang.org/feature-lifecycle/stabilization.html\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/103820/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/103820/timeline", "performed_via_github_app": null, "state_reason": null}