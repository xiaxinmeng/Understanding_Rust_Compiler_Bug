{"url": "https://api.github.com/repos/rust-lang/rust/issues/44337", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/44337/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/44337/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/44337/events", "html_url": "https://github.com/rust-lang/rust/issues/44337", "id": 255268480, "node_id": "MDU6SXNzdWUyNTUyNjg0ODA=", "number": 44337, "title": "Make sure that calls to Fingerprint::combine do not undermine collision safety", "user": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-09-05T12:58:18Z", "updated_at": "2017-09-17T08:07:52Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`Fingerprint::combine` is not a cryptographic hash, so when we use it we might lose the \"cryptographic\" guarantee of collision safety. Potentially even worse, `Fingerprint::combine` is associative: `Fingerprint::combine(Fingerprint::combine(a, b), c) = Fingerprint::combine(a, Fingerprint::combine(b, c))`, and that might cause \"algebraic\" collisions in some cases.\r\n\r\n\r\nFor example:\r\nhttps://github.com/rust-lang/rust/blob/2f1ef9ef1181298d46e79d5dde6bafeb6483926f/src/librustc/dep_graph/dep_node.rs#L595\r\nhttps://github.com/rust-lang/rust/blob/2f1ef9ef1181298d46e79d5dde6bafeb6483926f/src/librustc/dep_graph/dep_node.rs#L614-L623\r\nAnd another case added by my PR:\r\nhttps://github.com/arielb1/rust/blob/d14ed92f6b5aa23fd06f8affe4554f2c370bc79d/src/librustc/dep_graph/dep_node.rs#L647-L657\r\n\r\nI believe the only requirement for `DepNode` is that the map from `QueryKey -> (DepKind, Fingerprint)` is injective. It might be a good idea to have a good sense of the requirements there to avoid accidental collisions.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/44337/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/44337/timeline", "performed_via_github_app": null, "state_reason": null}