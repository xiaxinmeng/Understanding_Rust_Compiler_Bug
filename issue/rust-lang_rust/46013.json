{"url": "https://api.github.com/repos/rust-lang/rust/issues/46013", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/46013/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/46013/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/46013/events", "html_url": "https://github.com/rust-lang/rust/issues/46013", "id": 274304743, "node_id": "MDU6SXNzdWUyNzQzMDQ3NDM=", "number": 46013, "title": "cfg! branches not applicable to the current build are still type-checked", "user": {"login": "zacps", "id": 9827696, "node_id": "MDQ6VXNlcjk4Mjc2OTY=", "avatar_url": "https://avatars.githubusercontent.com/u/9827696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zacps", "html_url": "https://github.com/zacps", "followers_url": "https://api.github.com/users/zacps/followers", "following_url": "https://api.github.com/users/zacps/following{/other_user}", "gists_url": "https://api.github.com/users/zacps/gists{/gist_id}", "starred_url": "https://api.github.com/users/zacps/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zacps/subscriptions", "organizations_url": "https://api.github.com/users/zacps/orgs", "repos_url": "https://api.github.com/users/zacps/repos", "events_url": "https://api.github.com/users/zacps/events{/privacy}", "received_events_url": "https://api.github.com/users/zacps/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-15T21:07:39Z", "updated_at": "2017-11-15T21:13:10Z", "closed_at": "2017-11-15T21:13:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "The issue is if there's a very long function that should be *almost* identical between two platforms/features the easiest way to make a small change is to use `cfg!`. However, if it created a type error because an identifier isn't available on the target platform/feature it will still create a compiler error even though it will never be executed.\r\n\r\nFor example say we had this situation:\r\n```rust\r\n#[cfg(unix)]\r\nfn do_unix_stuff() {}\r\n\r\nfn f() {\r\n    do_stuff();\r\n    do_unix_stuff();\r\n}\r\n```\r\nAnd we wanted to make `f` win32 compatible, in this case we could just replace `f` entirely but if it was substantially longer the easiest way is to use `cfg!`.\r\n```rust\r\nfn f() {\r\n    do_stuff();\r\n    if cfg!(unix) {\r\n        do_unix_stuff();\r\n    }\r\n}\r\n```\r\nHowever this will fail when building on windows because `do_unix_stuff` is not defined. If type checking was disabled for branches that will never be executed on the current build this situation would work fine.\r\n\r\nThis also makes the `cfg!` macro's behaviour more similar to the `cfg` attribute's behaviour.", "closed_by": {"login": "zacps", "id": 9827696, "node_id": "MDQ6VXNlcjk4Mjc2OTY=", "avatar_url": "https://avatars.githubusercontent.com/u/9827696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zacps", "html_url": "https://github.com/zacps", "followers_url": "https://api.github.com/users/zacps/followers", "following_url": "https://api.github.com/users/zacps/following{/other_user}", "gists_url": "https://api.github.com/users/zacps/gists{/gist_id}", "starred_url": "https://api.github.com/users/zacps/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zacps/subscriptions", "organizations_url": "https://api.github.com/users/zacps/orgs", "repos_url": "https://api.github.com/users/zacps/repos", "events_url": "https://api.github.com/users/zacps/events{/privacy}", "received_events_url": "https://api.github.com/users/zacps/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/46013/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/46013/timeline", "performed_via_github_app": null, "state_reason": "completed"}