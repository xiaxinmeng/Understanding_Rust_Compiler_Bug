{"url": "https://api.github.com/repos/rust-lang/rust/issues/32008", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/32008/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/32008/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/32008/events", "html_url": "https://github.com/rust-lang/rust/issues/32008", "id": 137888166, "node_id": "MDU6SXNzdWUxMzc4ODgxNjY=", "number": 32008, "title": "Confusing error msg for lifetime mismatch (possibly a bug in lifetime inference as well)", "user": {"login": "daniel-vainsencher", "id": 1518422, "node_id": "MDQ6VXNlcjE1MTg0MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/1518422?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daniel-vainsencher", "html_url": "https://github.com/daniel-vainsencher", "followers_url": "https://api.github.com/users/daniel-vainsencher/followers", "following_url": "https://api.github.com/users/daniel-vainsencher/following{/other_user}", "gists_url": "https://api.github.com/users/daniel-vainsencher/gists{/gist_id}", "starred_url": "https://api.github.com/users/daniel-vainsencher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daniel-vainsencher/subscriptions", "organizations_url": "https://api.github.com/users/daniel-vainsencher/orgs", "repos_url": "https://api.github.com/users/daniel-vainsencher/repos", "events_url": "https://api.github.com/users/daniel-vainsencher/events{/privacy}", "received_events_url": "https://api.github.com/users/daniel-vainsencher/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-03-02T14:29:21Z", "updated_at": "2017-10-21T17:19:03Z", "closed_at": "2017-10-21T17:19:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Originally opened in wrong repository (rfcs) as [0].\n\nThe problem is demonstrated by compiling [1]. I can work around the problem by using [2](first half of the diff is relevant to this problem, second part not so much), or by patching ndarrays to give parameters of binary operators distinct lifetime parameters.\n\nA few problems here:\n1. The basic error message is not very clear: \n\n```\nsrc/lib.rs:30:28: 30:38 error: cannot infer an appropriate lifetime for borrow expression due to conflicting requirements [E0495]\nsrc/lib.rs:30         let delta = data - &self.mean;\n<arrow pointing at &self.mean>\n```\n\nLifetime of what expression cannot be inferred? What are the conflicting requirements? as someone with an only approximate mental model of lifetimes (i.e., a typical rust user) this is not helping me a lot to solve the problem nor to learn about lifetimes.\n1. The compiler suggests something that doesn't work. I don't expect suggestions to always work, but maybe its worth pointing this case out so that the suggestion can be improved or made conditional.\n\n```\nsrc/lib.rs:27:5: 38:6 help: consider using an explicit lifetime parameter as shown: fn next_value<'a>(&'a mut self, data: &'a V, weight: f64)\nsrc/lib.rs:27     pub fn next_value(&mut self, data : &V, weight : f64) {\n```\n1. @bluss suggested that rustc should be able to infer for the self and data borrows the intersection of their lifetimes, hence this should not be happening at all. I have no idea.\n2. The work around in [2] suggested by @bluss leaves me even more confused. I can change the lifetime of data by ... (what is that, actually, reborrowing it?), and then the borrow of self is ok? But if that's a good way to go about things, maybe the compiler should suggest this method sometimes.\n\nAnyway, if any part of the documentation (error: no extended information for [E0495]) can enlighten me, pointers accepted gladly.\n\n[0] https://github.com/rust-lang/rfcs/issues/1523#issuecomment-191055884\n[1] https://github.com/daniel-vainsencher/online_weighted_stats/commit/8f9cf032338bda13bb69b31aba876003471dabd4\n[2] https://github.com/daniel-vainsencher/online_weighted_stats/commit/0bfc04d58639e278fa3b4575e5392117ef57c050\n\n@bluss said: I think this is a representative minimization. \nhttps://play.rust-lang.org/?gist=59e6b8c113e4e7eda1fe&version=stable\n\nI get completely different error messages at that playground link, btw,\nthough still somewhat confusing: it is not clear why the block suffix does\nnot suffice, seems to cover the relevant part of the anonymous lifetime.\n", "closed_by": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/32008/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/32008/timeline", "performed_via_github_app": null, "state_reason": "completed"}