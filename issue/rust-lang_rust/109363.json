{"url": "https://api.github.com/repos/rust-lang/rust/issues/109363", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/109363/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/109363/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/109363/events", "html_url": "https://github.com/rust-lang/rust/issues/109363", "id": 1631126665, "node_id": "I_kwDOAAsO6M5hOQSJ", "number": 109363, "title": "Exponential blowup in `core::drop_in_place` symbol size for builder-pattern structures that chain closures", "user": {"login": "bobtwinkles", "id": 1514748, "node_id": "MDQ6VXNlcjE1MTQ3NDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1514748?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobtwinkles", "html_url": "https://github.com/bobtwinkles", "followers_url": "https://api.github.com/users/bobtwinkles/followers", "following_url": "https://api.github.com/users/bobtwinkles/following{/other_user}", "gists_url": "https://api.github.com/users/bobtwinkles/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobtwinkles/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobtwinkles/subscriptions", "organizations_url": "https://api.github.com/users/bobtwinkles/orgs", "repos_url": "https://api.github.com/users/bobtwinkles/repos", "events_url": "https://api.github.com/users/bobtwinkles/events{/privacy}", "received_events_url": "https://api.github.com/users/bobtwinkles/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 64037154, "node_id": "MDU6TGFiZWw2NDAzNzE1NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-compiletime", "name": "I-compiletime", "color": "e11d21", "default": false, "description": "Problems and improvements with respect to compile times."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2023-03-19T21:35:26Z", "updated_at": "2023-03-25T20:45:29Z", "closed_at": "2023-03-25T20:45:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI tried this code:\r\n\r\n```rust\r\nuse std::marker::PhantomData;\r\n\r\nstruct NonTrivialDrop {}\r\n\r\nimpl Drop for NonTrivialDrop {\r\n    fn drop(&mut self) {\r\n    }\r\n}\r\n\r\nstruct Builder<'a, F: FnOnce() -> String + 'a>(F, PhantomData<&'a ()>, NonTrivialDrop);\r\n\r\nimpl<'a, F: FnOnce() -> String + 'a> Builder<'a, F> {\r\n    fn new(f: F) -> Self {\r\n        Self(f, PhantomData, NonTrivialDrop {})\r\n    }\r\n\r\n    fn map(\r\n        self,\r\n        f: impl FnOnce(&String) + 'a,\r\n    ) -> Builder<'a, impl FnOnce() -> String + 'a> {\r\n        Builder::new(move || {\r\n            let el = (self.0)();\r\n            f(&el);\r\n            el\r\n        })\r\n    }\r\n\r\n    fn attr(\r\n        self,\r\n        name: &'a str,\r\n        value: impl AsRef<str> + 'a,\r\n    ) -> Builder<'a, impl FnOnce() -> String + 'a> {\r\n        self.map(move |el| {\r\n            let mut el = el.clone();\r\n            el.push_str(name);\r\n            el.push_str(value.as_ref());\r\n        })\r\n    }\r\n}\r\n\r\nfn main() {\r\n    let mut b = Builder::new(|| String::new())\r\n        .attr(\"a-0\", \"b\")\r\n        .attr(\"a-1\", \"b\")\r\n        .attr(\"a-2\", \"b\")\r\n        .attr(\"a-3\", \"b\")\r\n        .attr(\"a-4\", \"b\")\r\n        .attr(\"a-5\", \"b\")\r\n        .attr(\"a-6\", \"b\")\r\n        .attr(\"a-7\", \"b\")\r\n        .attr(\"a-9\", \"b\");\r\n\r\n    unsafe {\r\n        // XXX: this is clearly UB, but the point is to generate a huge symbol name, not to write a\r\n        // working program\r\n        core::ptr::drop_in_place(&mut b);\r\n    }\r\n}\r\n```\r\n\r\nI expected to see this happen: the compiler will complete in a reasonable amount of time, and generate a suitably small symbol name.\r\n\r\nInstead, this happened: The compile time of this program grows roughly proportional to `2 ** x` where `x` is the number of `.attr` calls chained on the builder. The root cause of this seems to be exponential blowup in the size of the `Builder` type fed in to `core::ptr::drop_in_place`. With 16 chained `.attr` calls, the symbol name generated for `core::ptr::drop_in_place` is over 11 megabytes in size:\r\n\r\n```\r\n objdump -x target/debug/bad | wc -L\r\n11141131\r\n```\r\n\r\nThis is probably related to #68508.\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.70.0-nightly (13afbdaa0 2023-03-17)\r\nbinary: rustc\r\ncommit-hash: 13afbdaa0655dda23d7129e59ac48f1ec88b2084\r\ncommit-date: 2023-03-17\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.70.0-nightly\r\nLLVM version: 15.0.7\r\n```", "closed_by": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/109363/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/109363/timeline", "performed_via_github_app": null, "state_reason": "not_planned"}