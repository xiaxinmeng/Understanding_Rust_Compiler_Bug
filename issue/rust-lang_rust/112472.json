{"url": "https://api.github.com/repos/rust-lang/rust/issues/112472", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/112472/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/112472/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/112472/events", "html_url": "https://github.com/rust-lang/rust/issues/112472", "id": 1750361950, "node_id": "I_kwDOAAsO6M5oVGde", "number": 112472, "title": "suggestion for handling E0404 doesn't deal with multiple generics properly", "user": {"login": "pflakus", "id": 63281512, "node_id": "MDQ6VXNlcjYzMjgxNTEy", "avatar_url": "https://avatars.githubusercontent.com/u/63281512?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pflakus", "html_url": "https://github.com/pflakus", "followers_url": "https://api.github.com/users/pflakus/followers", "following_url": "https://api.github.com/users/pflakus/following{/other_user}", "gists_url": "https://api.github.com/users/pflakus/gists{/gist_id}", "starred_url": "https://api.github.com/users/pflakus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pflakus/subscriptions", "organizations_url": "https://api.github.com/users/pflakus/orgs", "repos_url": "https://api.github.com/users/pflakus/repos", "events_url": "https://api.github.com/users/pflakus/events{/privacy}", "received_events_url": "https://api.github.com/users/pflakus/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2023-06-09T18:57:47Z", "updated_at": "2023-06-15T19:04:10Z", "closed_at": "2023-06-15T19:04:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Code\n\n```Rust\n// also available as a playground here:\r\n// https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=4e1b3126262820b760f4ee5037d629e4\r\n\r\nuse std::fmt::Debug;\r\nuse std::marker::PhantomData;\r\n\r\n#[allow(unused)]\r\nstruct Codec<EncodeLine, DecodeLine> {\r\n    phantom_decode: PhantomData<DecodeLine>,\r\n    phantom_encode: PhantomData<EncodeLine>,\r\n}\r\n\r\npub enum ParseError {}\r\n\r\nimpl<EncodeLine, DecodeLine> Codec<EncodeLine, DecodeLine> where\r\n    DecodeLine: Debug + TryFrom<String>,\r\n    <DecodeLine as TryFrom<String>>::Error: ParseError,\r\n\r\n    // // suggested fix: replace the above two lines with the following one\r\n    // DecodeLine: Debug + TryFrom<String><Error = ParseError>,\r\n\r\n    // // actual fix: replace the above two lines with the following one\r\n    // DecodeLine: Debug + TryFrom<String, Error = ParseError>\r\n{\r\n}\n```\n\n\n### Current output\n\n```Shell\nCompiling playground v0.0.1 (/playground)\r\nerror[E0404]: expected trait, found enum `ParseError`\r\n  --> src/lib.rs:14:45\r\n   |\r\n14 |     <DecodeLine as TryFrom<String>>::Error: ParseError,\r\n   |                                             ^^^^^^^^^^ not a trait\r\n   |\r\nhelp: constrain the associated type to `ParseError`\r\n   |\r\n14 |     DecodeLine: TryFrom<String><Error = ParseError>,\r\n   |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nhelp: consider importing one of these items instead\r\n   |\r\n1  + use nom::error::ParseError;\r\n   |\r\n1  + use winnow::error::ParseError;\r\n   |\r\n\r\nFor more information about this error, try `rustc --explain E0404`.\n```\n\n\n### Desired output\n\n```Shell\nCompiling playground v0.0.1 (/playground)\r\nerror[E0404]: expected trait, found enum `ParseError`\r\n  --> src/lib.rs:14:45\r\n   |\r\n14 |     <DecodeLine as TryFrom<String>>::Error: ParseError,\r\n   |                                             ^^^^^^^^^^ not a trait\r\n   |\r\nhelp: constrain the associated type to `ParseError`\r\n   |\r\n14 |     DecodeLine: TryFrom<String, Error = ParseError>,\r\n   |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nhelp: consider importing one of these items instead\r\n   |\r\n1  + use nom::error::ParseError;\r\n   |\r\n1  + use winnow::error::ParseError;\r\n   |\r\n\r\nFor more information about this error, try `rustc --explain E0404`.\n```\n\n\n### Rationale and extra context\n\nThe generated constraint recommendation appears not to be aware that `TryFrom` already has defined generics and just plugs its own generic parameter at the end naively. (`TryFrom<String><Error = ParseError>`)\r\n\r\nInstead it ought to recognize and expand the generic parameters (like so: `TryFrom<String, Error = ParseError>`)\n\n### Other cases\n\n_No response_\n\n### Anything else?\n\n_No response_", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/112472/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/112472/timeline", "performed_via_github_app": null, "state_reason": "completed"}