{"url": "https://api.github.com/repos/rust-lang/rust/issues/96623", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/96623/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/96623/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/96623/events", "html_url": "https://github.com/rust-lang/rust/issues/96623", "id": 1222398819, "node_id": "I_kwDOAAsO6M5I3FNj", "number": 96623, "title": "`global_asm!` sym operands emit functions without function body", "user": {"login": "andylizi", "id": 12008103, "node_id": "MDQ6VXNlcjEyMDA4MTAz", "avatar_url": "https://avatars.githubusercontent.com/u/12008103?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andylizi", "html_url": "https://github.com/andylizi", "followers_url": "https://api.github.com/users/andylizi/followers", "following_url": "https://api.github.com/users/andylizi/following{/other_user}", "gists_url": "https://api.github.com/users/andylizi/gists{/gist_id}", "starred_url": "https://api.github.com/users/andylizi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andylizi/subscriptions", "organizations_url": "https://api.github.com/users/andylizi/orgs", "repos_url": "https://api.github.com/users/andylizi/repos", "events_url": "https://api.github.com/users/andylizi/events{/privacy}", "received_events_url": "https://api.github.com/users/andylizi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 91598611, "node_id": "MDU6TGFiZWw5MTU5ODYxMQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-inline-assembly", "name": "A-inline-assembly", "color": "f7e101", "default": false, "description": "Area: inline asm!(..)"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-05-02T02:07:04Z", "updated_at": "2022-05-06T22:41:16Z", "closed_at": "2022-05-06T22:41:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Summary\r\n\r\nIf a function is only referenced by a `sym` operand in `global_asm!`, the definition/body of that function will not be emitted by the compiler, and the linker will fail with `unresolved symbol` error.\r\n\r\n### Reproduction\r\n\r\nSave the following code as `example.rs`:  (https://rust.godbolt.org/z/4jbf3eWjb)\r\n```rust\r\n#![no_std]\r\n#![no_main]\r\n#![feature(asm_sym)]\r\nuse core::arch::global_asm;\r\n\r\nfn foo() {\r\n    loop {}\r\n}\r\n\r\nstatic MY_STATIC: i32 = 0;\r\n\r\nglobal_asm!(\".global _start\", \"_start:\", \"call {}\", sym foo);                       // ^1\r\n// global_asm!(\".global _start\", \"_start:\", \"lea rax, [rip + {}]\", sym MY_STATIC);  // ^2\r\n\r\n// #[no_mangle]                                                                     // ^3\r\n// unsafe extern \"sysv64\" fn _start() {\r\n//     core::arch::asm!(\"call {}\", sym foo)\r\n// }\r\n\r\n#[panic_handler]\r\nfn handle_panic(_panic: &core::panic::PanicInfo<'_>) -> ! {\r\n    //foo();                                                                        // ^4\r\n    loop {}\r\n}\r\n```\r\n<sup>(`.global _start` is there to stop the linker from pruning unreachable code.)</sup>\r\n\r\nRun `rustc example.rs -Cpanic=abort -Clink-args=\"-nostdlib\"` produces a linker error \"undefined reference to `example::main`\":\r\n```\r\nerror: linking with `cc` failed: exit status: 1\r\n  |\r\n  = note: \"cc\" \"-m64\" \"example.example.2372ba8c-cgu.0.rcgu.o\" \"-Wl,--as-needed\" \"-L\" \"/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib\" \"-Wl,-Bstatic\" \"/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/librustc_std_workspace_core-2a6a2797f7a73818.rlib\" \"/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libcore-0e3656b1fda5fd7b.rlib\" \"/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libcompiler_builtins-16d69221f10b0282.rlib\" \"-Wl,-Bdynamic\" \"-Wl,--eh-frame-hdr\" \"-Wl,-znoexecstack\" \"-L\" \"/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib\" \"-o\" \"example\" \"-Wl,--gc-sections\" \"-pie\" \"-Wl,-zrelro,-znow\" \"-nodefaultlibs\" \"-nostdlib\"\r\nnote: /usr/bin/ld: example.example.2372ba8c-cgu.0.rcgu.o: in function `_start':\r\n          example.2372ba8c-cgu.0:(.text+0x1): undefined reference to `example::foo'\r\n```\r\n\r\n`objdump -td example.example.2372ba8c-cgu.0.rcgu.o` verifies that `example::foo` is indeed missing:\r\n```\r\n0000000000000000 g       .text  0000000000000000 _start\r\n0000000000000000         *UND*  0000000000000000 _ZN7example3foo17h902e29a481949057E\r\n```\r\n\r\nThe emitted llvm-ir looks something like this:\r\n```llvm\r\nmodule asm \".global _start\"\r\nmodule asm \"_start:\"\r\nmodule asm \"call _ZN7example3foo17h902e29a481949057E\"\r\n\r\n@llvm.compiler.used = appending global [1 x i8*] [i8* bitcast (void ()* @_ZN7example3foo17h902e29a481949057E to i8*)], section \"llvm.metadata\"\r\n\r\n; example::foo\r\n; Function Attrs: nounwind nonlazybind\r\ndeclare void @_ZN7example3foo17h902e29a481949057E() unnamed_addr #1\r\n```\r\n\r\n### Some observations\r\n\r\n* The problem only appears if the function in question isn't used anywhere else. If we uncomment line `^4`, the resulting IR will be correctly emitted:\r\n    \r\n    ```llvm\r\n    ; omit identical part\r\n    \r\n    ; example::foo\r\n    ; Function Attrs: nounwind nonlazybind\r\n    define internal void @_ZN7example3foo17h902e29a481949057E() unnamed_addr #0 {\r\n    start:\r\n      br label %bb1\r\n    bb1:                                              ; preds = %bb1, %start\r\n      br label %bb1\r\n    }\r\n    ```\r\n\r\n* Only functions can reproduce, static items work fine, as per line `^2`.\r\n\r\n* Only `global_asm!` can reproduce, `asm!` works fine, as per line `^3` and co.\r\n\r\n### Meta\r\n\r\n```\r\nrustc 1.62.0-nightly (7c4b47696 2022-04-30)\r\nbinary: rustc\r\ncommit-hash: 7c4b47696907d64eff5621a64eb3c6e795a9ec77\r\ncommit-date: 2022-04-30\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.62.0-nightly\r\nLLVM version: 14.0.1\r\n```\r\n\r\ncc @Amanieu #94468\r\n@rustbot label +A-inline-assembly +requires-nightly\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/96623/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/96623/timeline", "performed_via_github_app": null, "state_reason": "completed"}