{"url": "https://api.github.com/repos/rust-lang/rust/issues/65999", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/65999/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/65999/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/65999/events", "html_url": "https://github.com/rust-lang/rust/issues/65999", "id": 515478049, "node_id": "MDU6SXNzdWU1MTU0NzgwNDk=", "number": 65999, "title": "FnAbi computation should be cached.", "user": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 234956, "node_id": "MDU6TGFiZWwyMzQ5NTY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-codegen", "name": "A-codegen", "color": "f7e101", "default": false, "description": "Area: Code generation"}, {"id": 64037154, "node_id": "MDU6TGFiZWw2NDAzNzE1NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-compiletime", "name": "I-compiletime", "color": "e11d21", "default": false, "description": "Problems and improvements with respect to compile times."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-31T14:28:57Z", "updated_at": "2019-11-17T16:02:30Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "We might be spending a non-trivial amount of time creating `FnAbi`s and adjusting them, so we should investigate caching them, similar to how we cache LLVM `Type`s we compute from Rust `Ty`s.\r\n\r\nAfter #65947, this is what's left:\r\n* `FnAbi::of_instance`: takes `ty::Instance`, easy to cache\r\n  * we should be able to make this a query, like `layout_of` is\r\n* `FnAbi::of_fn_ptr`: takes `ty::PolyFnSig`, might be more expensive\r\n  * well, `inputs_and_outputs` is compared/hashed by pointer nowadays, isn't it?\r\n  * creating LLVM `Type`s for `fn` pointers is already cached itself, but calls of `fn` pointers also require `FnAbi`s\r\n  * this is likely used less than `FnAbi::of_instance`, so it's lower priority", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/65999/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/65999/timeline", "performed_via_github_app": null, "state_reason": null}