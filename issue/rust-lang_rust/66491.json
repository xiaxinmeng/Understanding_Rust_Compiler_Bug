{"url": "https://api.github.com/repos/rust-lang/rust/issues/66491", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/66491/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/66491/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/66491/events", "html_url": "https://github.com/rust-lang/rust/issues/66491", "id": 523993579, "node_id": "MDU6SXNzdWU1MjM5OTM1Nzk=", "number": 66491, "title": "Improve documentation on what len() on ExactSizeIterator means", "user": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 431251592, "node_id": "MDU6TGFiZWw0MzEyNTE1OTI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-docs", "name": "A-docs", "color": "f7e101", "default": false, "description": "Area: documentation for any part of the project, including the compiler, standard library, and tools"}, {"id": 889209675, "node_id": "MDU6TGFiZWw4ODkyMDk2NzU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-iterators", "name": "A-iterators", "color": "f7e101", "default": false, "description": "Area: Iterators"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-11-17T14:28:55Z", "updated_at": "2020-03-03T13:27:52Z", "closed_at": "2020-03-03T13:27:52Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "If the wrapped iterator implements `ExactSizeIterator` then `Fuse` blindly delegates `len()` to it. The underlying iterator may know its exact size but return spurious `None` results anyway, on which `Fuse` will stop iterating even though the source knows that there are elements left to iterate, meaning `Fuse` will indicate that there are elements left but never return them.\r\n\r\nThe behavior was introduced in https://github.com/rust-lang/rust/pull/37944 but didn't see any discussion.\r\n\r\n[Playground demo](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=df3c64ad820aedd3db2f4901658e51d4)\r\n\r\n```rust\r\nstruct Alternate {\r\n    state: i32,\r\n}\r\n\r\nimpl Iterator for Alternate {\r\n    type Item = i32;\r\n\r\n    fn next(&mut self) -> Option<i32> {\r\n        let val = self.state;\r\n        self.state = self.state + 1;\r\n        \r\n        if val % 2 == 0 && val <= 4 {\r\n            Some(val)\r\n        } else {\r\n            None\r\n        }\r\n    }\r\n}\r\n\r\nimpl ExactSizeIterator for Alternate {\r\n    // We can easily calculate the remaining number of iterations.\r\n    fn len(&self) -> usize {\r\n        std::cmp::max(0, 3 - (self.state + 1)  / 2)  as usize\r\n    }\r\n}\r\n\r\n\r\n\r\nfn main() {\r\n    eprintln!(\"### regular\");\r\n    let mut iter = Alternate { state: 0 };\r\n    dbg!(iter.len(), iter.next());\r\n    dbg!(iter.len(), iter.next());\r\n    dbg!(iter.len(), iter.next());\r\n    dbg!(iter.len(), iter.next());\r\n    dbg!(iter.len(), iter.next());\r\n    dbg!(iter.len(), iter.next());\r\n    eprintln!(\"### fused\");\r\n    let mut iter = Alternate { state: 0 }.fuse();\r\n    dbg!(iter.len(), iter.next());\r\n    dbg!(iter.len(), iter.next());\r\n    dbg!(iter.len(), iter.next());\r\n}\r\n```", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/66491/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/66491/timeline", "performed_via_github_app": null, "state_reason": "completed"}