{"url": "https://api.github.com/repos/rust-lang/rust/issues/47736", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/47736/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/47736/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/47736/events", "html_url": "https://github.com/rust-lang/rust/issues/47736", "id": 291565624, "node_id": "MDU6SXNzdWUyOTE1NjU2MjQ=", "number": 47736, "title": "Immovable generator issue", "user": {"login": "andreytkachenko", "id": 1773973, "node_id": "MDQ6VXNlcjE3NzM5NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/1773973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andreytkachenko", "html_url": "https://github.com/andreytkachenko", "followers_url": "https://api.github.com/users/andreytkachenko/followers", "following_url": "https://api.github.com/users/andreytkachenko/following{/other_user}", "gists_url": "https://api.github.com/users/andreytkachenko/gists{/gist_id}", "starred_url": "https://api.github.com/users/andreytkachenko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andreytkachenko/subscriptions", "organizations_url": "https://api.github.com/users/andreytkachenko/orgs", "repos_url": "https://api.github.com/users/andreytkachenko/repos", "events_url": "https://api.github.com/users/andreytkachenko/events{/privacy}", "received_events_url": "https://api.github.com/users/andreytkachenko/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 679846574, "node_id": "MDU6TGFiZWw2Nzk4NDY1NzQ=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-generators", "name": "A-generators", "color": "f7e101", "default": false, "description": "Area: Generators"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-25T13:13:55Z", "updated_at": "2018-02-03T20:23:35Z", "closed_at": "2018-02-03T20:23:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "compiler fails with error when try compile the code:\r\n```rust\r\n#![feature(generators, generator_trait, conservative_impl_trait)]\r\n\r\nextern crate futures;\r\n\r\nuse std::ops::{ Generator };\r\nuse futures::{ Future, Async };\r\n\r\nfn tmp() -> impl Future<Item = u32, Error = ()> {\r\n    futures::future::ok(123)\r\n}\r\n\r\nfn gen() -> impl Generator<Yield = Async<u32>, Return = ()> {\r\n    unsafe {static move || {\r\n        let dist = {\r\n            let mut future = tmp();\r\n\r\n            loop  {\r\n                match Future::poll(&mut future) {\r\n                    Ok(Async::Ready(e)) => {\r\n                        break Ok(e)\r\n                    }\r\n\r\n                    Ok(Async::NotReady) => {}\r\n\r\n                    Err(e) => {\r\n                        break Err(e)\r\n                    }\r\n                }\r\n\r\n                yield Async::NotReady\r\n            }\r\n        }.unwrap();\r\n        \r\n        match (&dist,) {\r\n            (tmp,) => (),\r\n        }\r\n    }}\r\n}\r\n\r\nfn main() {\r\n    let mut g = gen();\r\n    \r\n    println!(\"{:?}\", g.resume());\r\n    \r\n}\r\n```\r\nand the error message:\r\n```\r\nerror: internal compiler error: librustc_mir/transform/generator.rs:461: Broken MIR: generator contains type u32 in MIR, but typeck only knows about {impl futures::Future, futures::Async<u32>, ()}\r\n  --> src/main.rs:13:13\r\n   |\r\n13 |       unsafe {static move || {\r\n   |  _____________^\r\n14 | |         let dist = {\r\n15 | |             let mut future = tmp();\r\n16 | |\r\n...  |\r\n36 | |         }\r\n37 | |     }}\r\n   | |_____^\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.25.0-nightly (a0dcecff9 2018-01-24) running on x86_64-unknown-linux-gnu\r\n\r\nnote: run with `RUST_BACKTRACE=1` for a backtrace\r\n\r\nthread 'rustc' panicked at 'Box<Any>', librustc_errors/lib.rs:456:9\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\nstack backtrace:\r\n   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace\r\n             at libstd/sys/unix/backtrace/tracing/gcc_s.rs:49\r\n   1: std::sys_common::backtrace::print\r\n             at libstd/sys_common/backtrace.rs:68\r\n             at libstd/sys_common/backtrace.rs:57\r\n   2: std::panicking::default_hook::{{closure}}\r\n             at libstd/panicking.rs:380\r\n   3: std::panicking::default_hook\r\n             at libstd/panicking.rs:390\r\n   4: std::panicking::rust_panic_with_hook\r\n             at libstd/panicking.rs:576\r\n   5: std::panicking::begin_panic\r\n   6: rustc_errors::Handler::span_bug\r\n   7: rustc::session::opt_span_bug_fmt::{{closure}}\r\n   8: rustc::ty::context::tls::with_opt\r\n   9: rustc::session::span_bug_fmt\r\n  10: <rustc_mir::transform::generator::StateTransform as rustc_mir::transform::MirPass>::run_pass\r\n  11: rustc_mir::transform::optimized_mir::{{closure}}\r\n  12: rustc_mir::transform::optimized_mir\r\n  13: rustc::ty::maps::<impl rustc::ty::maps::queries::optimized_mir<'tcx>>::compute_result\r\n  14: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  15: rustc_errors::Handler::track_diagnostics\r\n  16: rustc::ty::maps::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::cycle_check\r\n  17: rustc::ty::maps::<impl rustc::ty::maps::queries::optimized_mir<'tcx>>::force\r\n  18: rustc::ty::maps::<impl rustc::ty::maps::queries::optimized_mir<'tcx>>::try_get\r\n  19: rustc::ty::maps::TyCtxtAt::optimized_mir\r\n  20: rustc::ty::sty::ClosureSubsts::field_tys\r\n  21: rustc_mir::borrow_check::nll::type_check::TypeChecker::typeck_mir\r\n  22: rustc_mir::borrow_check::nll::type_check::type_check_internal\r\n  23: rustc::ty::context::tls::enter\r\n  24: rustc::infer::InferCtxtBuilder::enter\r\n  25: <rustc_mir::borrow_check::nll::type_check::TypeckMir as rustc_mir::transform::MirPass>::run_pass\r\n  26: rustc_mir::transform::mir_const::{{closure}}\r\n  27: rustc_mir::transform::mir_const\r\n  28: rustc::ty::maps::<impl rustc::ty::maps::queries::mir_const<'tcx>>::compute_result\r\n  29: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  30: rustc_errors::Handler::track_diagnostics\r\n  31: rustc::ty::maps::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::cycle_check\r\n  32: rustc::ty::maps::<impl rustc::ty::maps::queries::mir_const<'tcx>>::force\r\n  33: rustc::ty::maps::<impl rustc::ty::maps::queries::mir_const<'tcx>>::try_get\r\n  34: rustc::ty::maps::TyCtxtAt::mir_const\r\n  35: rustc::ty::maps::<impl rustc::ty::context::TyCtxt<'a, 'tcx, 'lcx>>::mir_const\r\n  36: rustc_mir::transform::mir_validated\r\n  37: rustc::ty::maps::<impl rustc::ty::maps::queries::mir_validated<'tcx>>::compute_result\r\n  38: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  39: rustc_errors::Handler::track_diagnostics\r\n  40: rustc::ty::maps::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::cycle_check\r\n  41: rustc::ty::maps::<impl rustc::ty::maps::queries::mir_validated<'tcx>>::force\r\n  42: rustc::ty::maps::<impl rustc::ty::maps::queries::mir_validated<'tcx>>::try_get\r\n  43: rustc::ty::maps::TyCtxtAt::mir_validated\r\n  44: rustc::ty::maps::<impl rustc::ty::context::TyCtxt<'a, 'tcx, 'lcx>>::mir_validated\r\n  45: rustc_borrowck::borrowck::borrowck\r\n  46: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  47: rustc_errors::Handler::track_diagnostics\r\n  48: rustc::ty::maps::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::cycle_check\r\n  49: rustc::ty::maps::<impl rustc::ty::maps::queries::borrowck<'tcx>>::force\r\n  50: rustc::ty::maps::<impl rustc::ty::maps::queries::borrowck<'tcx>>::try_get\r\n  51: rustc::ty::maps::TyCtxtAt::borrowck\r\n  52: rustc::ty::maps::<impl rustc::ty::context::TyCtxt<'a, 'tcx, 'lcx>>::borrowck\r\n  53: rustc_borrowck::borrowck::check_crate\r\n  54: <std::thread::local::LocalKey<T>>::with\r\n  55: <std::thread::local::LocalKey<T>>::with\r\n  56: rustc_driver::driver::compile_input\r\n  57: rustc_driver::run_compiler\r\n```", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/47736/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/47736/timeline", "performed_via_github_app": null, "state_reason": "completed"}