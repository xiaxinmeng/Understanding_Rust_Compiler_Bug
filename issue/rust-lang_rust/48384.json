{"url": "https://api.github.com/repos/rust-lang/rust/issues/48384", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/48384/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/48384/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/48384/events", "html_url": "https://github.com/rust-lang/rust/issues/48384", "id": 298750852, "node_id": "MDU6SXNzdWUyOTg3NTA4NTI=", "number": 48384, "title": "could std::intrinsics::atomic_max be exposed via an AtomicUsize::fetch_max method?", "user": {"login": "spacejam", "id": 1505488, "node_id": "MDQ6VXNlcjE1MDU0ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/1505488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spacejam", "html_url": "https://github.com/spacejam", "followers_url": "https://api.github.com/users/spacejam/followers", "following_url": "https://api.github.com/users/spacejam/following{/other_user}", "gists_url": "https://api.github.com/users/spacejam/gists{/gist_id}", "starred_url": "https://api.github.com/users/spacejam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spacejam/subscriptions", "organizations_url": "https://api.github.com/users/spacejam/orgs", "repos_url": "https://api.github.com/users/spacejam/repos", "events_url": "https://api.github.com/users/spacejam/events{/privacy}", "received_events_url": "https://api.github.com/users/spacejam/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-02-20T21:14:38Z", "updated_at": "2019-09-01T21:43:34Z", "closed_at": "2019-09-01T21:43:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "As part of my [recent work on supporting transactions in sled](https://github.com/spacejam/sled/issues/253) I've wanted to take advantage of the `atomic_max` intrinsic so that I can implement a lock-free concurrency control protocol more efficiently, without spinning on CAS in a loop. It would be wonderful if I could do this without relying on compiling C. Specifically, updating the read timestamp of an item read in an MVOCC transaction, where read items need to be marked as having been read \"at least as high as\" a transaction timestamp being executed by a particular thread. \r\n\r\nAre there any blockers to adding this? I'm happy to write the code that exposes it if not.", "closed_by": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/48384/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/48384/timeline", "performed_via_github_app": null, "state_reason": "completed"}