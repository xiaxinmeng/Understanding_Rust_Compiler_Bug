{"url": "https://api.github.com/repos/rust-lang/rust/issues/4553", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/4553/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/4553/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/4553/events", "html_url": "https://github.com/rust-lang/rust/issues/4553", "id": 10138600, "node_id": "MDU6SXNzdWUxMDEzODYwMA==", "number": 4553, "title": "core::at_vec should have from_owned and from_slice functions", "user": {"login": "Dretch", "id": 1428731, "node_id": "MDQ6VXNlcjE0Mjg3MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1428731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dretch", "html_url": "https://github.com/Dretch", "followers_url": "https://api.github.com/users/Dretch/followers", "following_url": "https://api.github.com/users/Dretch/following{/other_user}", "gists_url": "https://api.github.com/users/Dretch/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dretch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dretch/subscriptions", "organizations_url": "https://api.github.com/users/Dretch/orgs", "repos_url": "https://api.github.com/users/Dretch/repos", "events_url": "https://api.github.com/users/Dretch/events{/privacy}", "received_events_url": "https://api.github.com/users/Dretch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-01-20T17:36:39Z", "updated_at": "2013-01-22T23:24:40Z", "closed_at": "2013-01-22T23:24:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently `core::at_vec` has constructor functions including `build`, `build_sized`, `build_sized_opt`,  `from_fn` and `from_elem`.\n\nAs far as I understand, none of these allow constructing an @vec by moving (rather than copying) all the values from a ~vec.\n\nTherefore, I think it would be good if `core::at_vec` gained a function like:\n\n`pub fn from_owned<T>(v: ~[T]) -> @[T] { ... }`\n\nand, for convenience, something like this too:\n\n`pub fn from_slice<T:Copy>(v: &[T]) -> @[T] { ... }`\n\nIs this proposal something desirable? If so I will try and submit code/docs/tests.\n", "closed_by": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/4553/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/4553/timeline", "performed_via_github_app": null, "state_reason": "completed"}