{"url": "https://api.github.com/repos/rust-lang/rust/issues/56537", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/56537/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/56537/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/56537/events", "html_url": "https://github.com/rust-lang/rust/issues/56537", "id": 387808648, "node_id": "MDU6SXNzdWUzODc4MDg2NDg=", "number": 56537, "title": "Shouldn't lifetime elision apply to closure return type annotation?", "user": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}, {"id": 122406831, "node_id": "MDU6TGFiZWwxMjI0MDY4MzE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-closures", "name": "A-closures", "color": "f7e101", "default": false, "description": "Area: closures (`|args| { .. }`)"}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-12-05T15:26:09Z", "updated_at": "2021-07-20T15:28:44Z", "closed_at": "2018-12-12T15:01:31Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "(Spawned off of #55526.)\r\n\r\nConsider the following code ([play](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2015&gist=24b2de18c3ac40fc14a4d09b8f334b1c)):\r\n\r\n```rust\r\nfn foo(input: &str) -> &str {\r\n    let id = |x: &str| -> &str { x };\r\n    id(input)\r\n}\r\n```\r\n\r\nThe above does not compile today.\r\n\r\nError diagnostic: \r\n\r\n<details> \r\n\r\n```\r\nerror[E0495]: cannot infer an appropriate lifetime due to conflicting requirements\r\n --> src/main.rs:2:27\r\n  |\r\n2 |     let id = |x: &str| -> &str { x };\r\n  |                           ^\r\n  |\r\nnote: first, the lifetime cannot outlive the anonymous lifetime #1 defined on the body at 2:14...\r\n --> src/main.rs:2:14\r\n  |\r\n2 |     let id = |x: &str| -> &str { x };\r\n  |              ^^^^^^^^^^^^^^^^^^^^^^^\r\nnote: ...so that reference does not outlive borrowed content\r\n --> src/main.rs:2:34\r\n  |\r\n2 |     let id = |x: &str| -> &str { x };\r\n  |                                  ^\r\nnote: but, the lifetime must be valid for the anonymous lifetime #1 defined on the function body at 1:1...\r\n --> src/main.rs:1:1\r\n  |\r\n1 | / fn foo(input: &str) -> &str {\r\n2 | |     let id = |x: &str| -> &str { x };\r\n3 | |     id(input)\r\n4 | | }\r\n  | |_^\r\nnote: ...so that reference does not outlive borrowed content\r\n --> src/main.rs:3:5\r\n  |\r\n3 |     id(input)\r\n  |     ^^^^^^^^^\r\n```\r\n\r\n</details>\r\n\r\nHowever, discussions with @nikomatsakis lead us to wonder why lifetime elision is not being applied to the type annotation attached to the closure. Since there is a single input argument type and a single return type, it seems reasonable to apply lifetime elision, yielding the type `for <'r> (&'r str) -> &'r str`.\r\n\r\nI believe fixing this is actually pretty trivial, based on some initial experimentation with the code here:\r\n\r\nhttps://github.com/rust-lang/rust/blob/21cb46a6e94906c2fdfda4df33c822ba28422b7f/src/librustc/middle/resolve_lifetime.rs#L2112-L2117\r\n\r\n(The question will only be whether there are unintended consequences of the fix; I'm still looking into that.)\r\n\r\n(This might require an RFC, not sure yet.)", "closed_by": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/56537/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/56537/timeline", "performed_via_github_app": null, "state_reason": "completed"}