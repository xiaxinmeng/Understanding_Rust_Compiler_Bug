{"url": "https://api.github.com/repos/rust-lang/rust/issues/33885", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/33885/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/33885/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/33885/events", "html_url": "https://github.com/rust-lang/rust/issues/33885", "id": 157040108, "node_id": "MDU6SXNzdWUxNTcwNDAxMDg=", "number": 33885, "title": "Ipv4Addr cmp() is slow", "user": {"login": "polachok", "id": 94035, "node_id": "MDQ6VXNlcjk0MDM1", "avatar_url": "https://avatars.githubusercontent.com/u/94035?v=4", "gravatar_id": "", "url": "https://api.github.com/users/polachok", "html_url": "https://github.com/polachok", "followers_url": "https://api.github.com/users/polachok/followers", "following_url": "https://api.github.com/users/polachok/following{/other_user}", "gists_url": "https://api.github.com/users/polachok/gists{/gist_id}", "starred_url": "https://api.github.com/users/polachok/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/polachok/subscriptions", "organizations_url": "https://api.github.com/users/polachok/orgs", "repos_url": "https://api.github.com/users/polachok/repos", "events_url": "https://api.github.com/users/polachok/events{/privacy}", "received_events_url": "https://api.github.com/users/polachok/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-05-26T17:46:17Z", "updated_at": "2016-05-27T15:08:28Z", "closed_at": "2016-05-27T15:08:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm using `Ipv4Addr`s as keys in a BtreeMap. I have to look up the map ~15 million times per second (10G ethernet line rate).\n\nIpv4Addr cmp() compiles to this on my system (linux x86-64, rustc 1.10.0-nightly (476fe6eef 2016-05-21))\n\n```\n0000000000051f10 <_ZN52_$LT$net..ip..Ipv4Addr$u20$as$u20$core..cmp..Ord$GT$3cmp17h39591ec7a18c4b02E>:\n   51f10:       50                      push   %rax\n   51f11:       c7 44 24 04 1d 1d 1d    movl   $0x1d1d1d1d,0x4(%rsp)\n   51f18:       1d \n   51f19:       c7 04 24 1d 1d 1d 1d    movl   $0x1d1d1d1d,(%rsp)\n   51f20:       8b 07                   mov    (%rdi),%eax\n   51f22:       89 c1                   mov    %eax,%ecx\n   51f24:       88 44 24 04             mov    %al,0x4(%rsp)\n   51f28:       88 64 24 05             mov    %ah,0x5(%rsp)\n   51f2c:       c1 e8 10                shr    $0x10,%eax\n   51f2f:       c1 e9 18                shr    $0x18,%ecx\n   51f32:       88 44 24 06             mov    %al,0x6(%rsp)\n   51f36:       88 4c 24 07             mov    %cl,0x7(%rsp)\n   51f3a:       8b 06                   mov    (%rsi),%eax\n   51f3c:       89 c1                   mov    %eax,%ecx\n   51f3e:       88 04 24                mov    %al,(%rsp)\n   51f41:       88 64 24 01             mov    %ah,0x1(%rsp)\n   51f45:       c1 e8 10                shr    $0x10,%eax\n   51f48:       c1 e9 18                shr    $0x18,%ecx\n   51f4b:       88 44 24 02             mov    %al,0x2(%rsp)\n   51f4f:       88 4c 24 03             mov    %cl,0x3(%rsp)\n   51f53:       48 8d 7c 24 04          lea    0x4(%rsp),%rdi\n   51f58:       48 8d 34 24             lea    (%rsp),%rsi\n   51f5c:       ba 04 00 00 00          mov    $0x4,%edx\n   51f61:       e8 0a 17 fc ff          callq  13670 <memcmp@plt>\n   51f66:       89 c1                   mov    %eax,%ecx\n   51f68:       31 c0                   xor    %eax,%eax\n   51f6a:       85 c9                   test   %ecx,%ecx\n   51f6c:       b1 ff                   mov    $0xff,%cl\n   51f6e:       78 02                   js     51f72 <_ZN52_$LT$net..ip..Ipv4Addr$u20$as$u20$core..cmp..Ord$GT$3cmp17h39591ec7a18c4b02E+0x62>\n   51f70:       b1 01                   mov    $0x1,%cl\n   51f72:       74 02                   je     51f76 <_ZN52_$LT$net..ip..Ipv4Addr$u20$as$u20$core..cmp..Ord$GT$3cmp17h39591ec7a18c4b02E+0x66>\n   51f74:       88 c8                   mov    %cl,%al\n   51f76:       59                      pop    %rcx\n```\n\nWhich seems kinda inefficient for a thing which is basically u32.\nI guess part of the reason is the [implementation](http://doc.rust-lang.org/src/std/up/src/libstd/net/ip.rs.html#251) which converts it to an array(!) first.\nI copied the definition and implemented Ord like this:\n\n```\nimpl Ord for Ipv4Addr2 {\n    fn cmp(&self, other: &Self) -> cmp::Ordering {\n        return Ord::cmp(&ntoh(self.inner.s_addr), &ntoh(other.inner.s_addr));\n    }\n}\n```\n\nIt's about 10 times faster on my [benchmark](https://github.com/polachok/ipv4-cmp-bench).\n\n```\nrustc 1.10.0-nightly (476fe6eef 2016-05-21)\nbinary: rustc\ncommit-hash: 476fe6eefe17db91ff7a60aab34aa67a0a750a18\ncommit-date: 2016-05-21\nhost: x86_64-unknown-linux-gnu\nrelease: 1.10.0-nightly\n```\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/33885/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/33885/timeline", "performed_via_github_app": null, "state_reason": "completed"}