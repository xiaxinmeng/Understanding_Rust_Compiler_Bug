{"url": "https://api.github.com/repos/rust-lang/rust/issues/12704", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/12704/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/12704/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/12704/events", "html_url": "https://github.com/rust-lang/rust/issues/12704", "id": 28766126, "node_id": "MDU6SXNzdWUyODc2NjEyNg==", "number": 12704, "title": "Auto-dereferencing pointers", "user": {"login": "Valloric", "id": 919444, "node_id": "MDQ6VXNlcjkxOTQ0NA==", "avatar_url": "https://avatars.githubusercontent.com/u/919444?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Valloric", "html_url": "https://github.com/Valloric", "followers_url": "https://api.github.com/users/Valloric/followers", "following_url": "https://api.github.com/users/Valloric/following{/other_user}", "gists_url": "https://api.github.com/users/Valloric/gists{/gist_id}", "starred_url": "https://api.github.com/users/Valloric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Valloric/subscriptions", "organizations_url": "https://api.github.com/users/Valloric/orgs", "repos_url": "https://api.github.com/users/Valloric/repos", "events_url": "https://api.github.com/users/Valloric/events{/privacy}", "received_events_url": "https://api.github.com/users/Valloric/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2014-03-05T05:28:17Z", "updated_at": "2014-06-01T23:44:34Z", "closed_at": "2014-06-01T23:44:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Rust is _awesome_, but I've encountered a wrinkle.\n\n``` rust\nlet x: &u8 = &10;\nlet y = x == '\\n' as u8;\n```\n\nThis fails to compile because `expected &u8 but found u8`. _Sigh_, ok, fine, there's an easy workaround: `*x == '\\n' as u8`.\n\nNow let's look at this:\n\n``` rust\nlet x: u8 = 10;\nlet y = Some((1, &x));\nlet z = y == Some((1, '\\n' as u8));\n```\n\nThis fails for the same reason. The workaround is substantially more ugly now: `y == Some((1, &('\\n' as u8)))`.\n\nBut let's say you want to use `assert_eq!` instead of using equality directly because you're writing a test:\n\n``` rust\nlet x: u8 = 10;\nlet y = Some((1, &x));\nassert_eq!(y, Some((1, &('\\n' as u8))));\n```\n\nThis just plain doesn't work because `borrowed value doesn't live long enough`. \n\nAnd all of this seems very pointless to me. The compiler knows how a `&T` relates to a `T` and it knows it's safe to dereference the pointer because this is Rust and not C so why force the user to go through this ceremony (and that _is_ the right word) of manually matching `&T` with `&T` and `T` with `T`? Why can't the compiler just _Do The Right Thing\u2122_ here? It has all the information needed to not make my life harder for no reason.\n\nIn C and C++, an `int*` is effectively an `Option<&int>` (in Rust) because the pointer may be null so it can't be safely dereferenced. But this is Rust; we _know_ the pointer is safe. Why not just deref it for the user? Why force the user to write convoluted code to placate the compiler _and for what purpose_?\n\nI know Rust loves explicit casts but we should always examine the benefits of asking the user for such a cast. If it increases safety, great. That's what Rust is about. But I just don't see the win here, only a poor user experience for no gain.\n", "closed_by": {"login": "Valloric", "id": 919444, "node_id": "MDQ6VXNlcjkxOTQ0NA==", "avatar_url": "https://avatars.githubusercontent.com/u/919444?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Valloric", "html_url": "https://github.com/Valloric", "followers_url": "https://api.github.com/users/Valloric/followers", "following_url": "https://api.github.com/users/Valloric/following{/other_user}", "gists_url": "https://api.github.com/users/Valloric/gists{/gist_id}", "starred_url": "https://api.github.com/users/Valloric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Valloric/subscriptions", "organizations_url": "https://api.github.com/users/Valloric/orgs", "repos_url": "https://api.github.com/users/Valloric/repos", "events_url": "https://api.github.com/users/Valloric/events{/privacy}", "received_events_url": "https://api.github.com/users/Valloric/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/12704/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/12704/timeline", "performed_via_github_app": null, "state_reason": "completed"}