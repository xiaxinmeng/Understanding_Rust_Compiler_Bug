{"url": "https://api.github.com/repos/rust-lang/rust/issues/48413", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/48413/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/48413/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/48413/events", "html_url": "https://github.com/rust-lang/rust/issues/48413", "id": 299161067, "node_id": "MDU6SXNzdWUyOTkxNjEwNjc=", "number": 48413, "title": "ICE: thread 'rustc' panicked at 'Box<Any>',", "user": {"login": "Kixunil", "id": 1178779, "node_id": "MDQ6VXNlcjExNzg3Nzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1178779?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kixunil", "html_url": "https://github.com/Kixunil", "followers_url": "https://api.github.com/users/Kixunil/followers", "following_url": "https://api.github.com/users/Kixunil/following{/other_user}", "gists_url": "https://api.github.com/users/Kixunil/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kixunil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kixunil/subscriptions", "organizations_url": "https://api.github.com/users/Kixunil/orgs", "repos_url": "https://api.github.com/users/Kixunil/repos", "events_url": "https://api.github.com/users/Kixunil/events{/privacy}", "received_events_url": "https://api.github.com/users/Kixunil/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-02-21T22:58:20Z", "updated_at": "2019-07-14T20:05:13Z", "closed_at": "2019-07-14T20:05:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I have this code (sorry, I don't have time to minimize it):\r\n\r\n```rust\r\npub extern crate futures;\r\n#[cfg(feature=\"test_utils\")]\r\nextern crate void;\r\n\r\nuse futures::Future;\r\n\r\npub trait Proceed: Sized {\r\n    type Error: std::fmt::Debug;\r\n    type RequestFuture: Future<Item=PaymentStatus<Self>, Error=Self::Error>;\r\n\r\n    fn proceed(self) -> Self::RequestFuture;\r\n}\r\n\r\npub enum PaymentStatus<N: Proceed> {\r\n    Display { url: String, next: N },\r\n    Paid,\r\n    Error,\r\n}\r\n\r\npub trait PaymentGateway {\r\n    type Error: std::fmt::Debug;\r\n    type Next: Proceed<Error=Self::Error>;\r\n    type RequestFuture: Future<Item=PaymentStatus<Self::Next>, Error=Self::Error>;\r\n\r\n    fn request(&self, amount: u64, currency: &str) -> Self::RequestFuture;\r\n}\r\n\r\n#[cfg(feature=\"test_utils\")]\r\npub mod test_utils {\r\n    use void::Void;\r\n    use futures::future::FutureResult;\r\n    use futures::IntoFuture;\r\n\r\n    pub struct AlwaysPaid {}\r\n\r\n    impl ::PaymentGateway for AlwaysPaid {\r\n        type Error = Void;\r\n        type Next = Void;\r\n        type RequestFuture = FutureResult<::PaymentStatus<Self::Next>, Self::Error>;\r\n\r\n        fn request(&self, _amount: u64, _currency: &str) -> Self::RequestFuture {\r\n            Ok(::PaymentStatus::Paid).into_future()\r\n        }\r\n    }\r\n    impl ::Proceed for Void {\r\n        type Error = Void;\r\n        type RequestFuture = FutureResult<::PaymentStatus<Self>, Void>;\r\n\r\n        fn proceed(self) -> Self::RequestFuture {\r\n            match self {\r\n            }\r\n        }\r\n    }\r\n\r\n    #[test]\r\n    fn test_always_paid() {\r\n        use ::PaymentGateway;\r\n        use ::futures::Future;\r\n\r\n        let gateway = AlwaysPaid {};\r\n        match gateway.request(42, \"BTC\").poll() {\r\n            Ok(::futures::Async::Ready(::PaymentStatus::Paid)) => (),\r\n            _ => panic!(\"Bad result\"),\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nWhen running cargo test, it produces this panic:\r\n\r\n```\r\nerror: internal compiler error: librustc_trans/type_of.rs:145: layout: TyLayout {\r\n    ty: PaymentStatus<void::Void>,\r\n    details: LayoutDetails {\r\n        variants: Tagged {\r\n            discr: Scalar {\r\n                value: Int(\r\n                    I64,\r\n                    false\r\n                ),\r\n                valid_range: 1..=2\r\n            },\r\n            variants: [\r\n                LayoutDetails {\r\n                    variants: Single {\r\n                        index: 0\r\n                    },\r\n                    fields: Union(\r\n                        2\r\n                    ),\r\n                    abi: Uninhabited,\r\n                    align: Align {\r\n                        abi: 0,\r\n                        pref: 0\r\n                    },\r\n                    size: Size {\r\n                        raw: 0\r\n                    }\r\n                },\r\n                LayoutDetails {\r\n                    variants: Single {\r\n                        index: 1\r\n                    },\r\n                    fields: Arbitrary {\r\n                        offsets: [],\r\n                        memory_index: []\r\n                    },\r\n                    abi: Aggregate {\r\n                        sized: true\r\n                    },\r\n                    align: Align {\r\n                        abi: 0,\r\n                        pref: 3\r\n                    },\r\n                    size: Size {\r\n                        raw: 8\r\n                    }\r\n                },\r\n                LayoutDetails {\r\n                    variants: Single {\r\n                        index: 2\r\n                    },\r\n                    fields: Arbitrary {\r\n                        offsets: [],\r\n                        memory_index: []\r\n                    },\r\n                    abi: Aggregate {\r\n                        sized: true\r\n                    },\r\n                    align: Align {\r\n                        abi: 0,\r\n                        pref: 3\r\n                    },\r\n                    size: Size {\r\n                        raw: 8\r\n                    }\r\n                }\r\n            ]\r\n        },\r\n        fields: Arbitrary {\r\n            offsets: [\r\n                Size {\r\n                    raw: 0\r\n                }\r\n            ],\r\n            memory_index: [\r\n                0\r\n            ]\r\n        },\r\n        abi: Aggregate {\r\n            sized: true\r\n        },\r\n        align: Align {\r\n            abi: 0,\r\n            pref: 3\r\n        },\r\n        size: Size {\r\n            raw: 1\r\n        }\r\n    }\r\n} stride: Size { raw: 1 } offset: Size { raw: 8 }\r\n\r\nthread 'rustc' panicked at 'Box<Any>', librustc_errors/lib.rs:535:9\r\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.25.0-nightly (27a046e93 2018-02-18) running on x86_64-unknown-linux-gnu\r\n\r\nerror: Could not compile `payment_interface`.\r\nwarning: build failed, waiting for other jobs to finish...\r\nerror: internal compiler error: librustc_trans/type_of.rs:145: layout: TyLayout {\r\n    ty: PaymentStatus<void::Void>,\r\n    details: LayoutDetails {\r\n        variants: Tagged {\r\n            discr: Scalar {\r\n                value: Int(\r\n                    I64,\r\n                    false\r\n                ),\r\n                valid_range: 1..=2\r\n            },\r\n            variants: [\r\n                LayoutDetails {\r\n                    variants: Single {\r\n                        index: 0\r\n                    },\r\n                    fields: Union(\r\n                        2\r\n                    ),\r\n                    abi: Uninhabited,\r\n                    align: Align {\r\n                        abi: 0,\r\n                        pref: 0\r\n                    },\r\n                    size: Size {\r\n                        raw: 0\r\n                    }\r\n                },\r\n                LayoutDetails {\r\n                    variants: Single {\r\n                        index: 1\r\n                    },\r\n                    fields: Arbitrary {\r\n                        offsets: [],\r\n                        memory_index: []\r\n                    },\r\n                    abi: Aggregate {\r\n                        sized: true\r\n                    },\r\n                    align: Align {\r\n                        abi: 0,\r\n                        pref: 3\r\n                    },\r\n                    size: Size {\r\n                        raw: 8\r\n                    }\r\n                },\r\n                LayoutDetails {\r\n                    variants: Single {\r\n                        index: 2\r\n                    },\r\n                    fields: Arbitrary {\r\n                        offsets: [],\r\n                        memory_index: []\r\n                    },\r\n                    abi: Aggregate {\r\n                        sized: true\r\n                    },\r\n                    align: Align {\r\n                        abi: 0,\r\n                        pref: 3\r\n                    },\r\n                    size: Size {\r\n                        raw: 8\r\n                    }\r\n                }\r\n            ]\r\n        },\r\n        fields: Arbitrary {\r\n            offsets: [\r\n                Size {\r\n                    raw: 0\r\n                }\r\n            ],\r\n            memory_index: [\r\n                0\r\n            ]\r\n        },\r\n        abi: Aggregate {\r\n            sized: true\r\n        },\r\n        align: Align {\r\n            abi: 0,\r\n            pref: 3\r\n        },\r\n        size: Size {\r\n            raw: 1\r\n        }\r\n    }\r\n} stride: Size { raw: 1 } offset: Size { raw: 8 }\r\n\r\nthread 'rustc' panicked at 'Box<Any>', librustc_errors/lib.rs:535:9\r\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.25.0-nightly (27a046e93 2018-02-18) running on x86_64-unknown-linux-gnu\r\n```\r\n\r\nSame thing with `rustc 1.24.0 (4d90ac38c 2018-02-12) running on x86_64-unknown-linux-gnu`.\r\n\r\nNote: the panic started to happen only after I added test.", "closed_by": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/48413/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/48413/timeline", "performed_via_github_app": null, "state_reason": "completed"}