{"url": "https://api.github.com/repos/rust-lang/rust/issues/93342", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/93342/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/93342/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/93342/events", "html_url": "https://github.com/rust-lang/rust/issues/93342", "id": 1115247587, "node_id": "I_kwDOAAsO6M5CeVPj", "number": 93342, "title": "Confusing output for signature mismatch in Fn trait with GAT lifetime parameter", "user": {"login": "skyzh", "id": 4198311, "node_id": "MDQ6VXNlcjQxOTgzMTE=", "avatar_url": "https://avatars.githubusercontent.com/u/4198311?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skyzh", "html_url": "https://github.com/skyzh", "followers_url": "https://api.github.com/users/skyzh/followers", "following_url": "https://api.github.com/users/skyzh/following{/other_user}", "gists_url": "https://api.github.com/users/skyzh/gists{/gist_id}", "starred_url": "https://api.github.com/users/skyzh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skyzh/subscriptions", "organizations_url": "https://api.github.com/users/skyzh/orgs", "repos_url": "https://api.github.com/users/skyzh/repos", "events_url": "https://api.github.com/users/skyzh/events{/privacy}", "received_events_url": "https://api.github.com/users/skyzh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1485960423, "node_id": "MDU6TGFiZWwxNDg1OTYwNDIz", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-generic_associated_types", "name": "F-generic_associated_types", "color": "f9c0cc", "default": false, "description": "`#![feature(generic_associated_types)]` a.k.a. GATs"}], "state": "closed", "locked": false, "assignee": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2022-01-26T16:57:21Z", "updated_at": "2022-03-08T05:20:34Z", "closed_at": "2022-03-08T05:20:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI tried this code:\r\n\r\n```rust\r\n#![feature(generic_associated_types)]\r\n\r\nuse std::marker::PhantomData;\r\n\r\npub trait Scalar: 'static {\r\n    type RefType<'a>: ScalarRef<'a>;\r\n}\r\n\r\npub trait ScalarRef<'a>: 'a {}\r\n\r\nimpl Scalar for i32 {\r\n    type RefType<'a> = i32;\r\n}\r\n\r\nimpl Scalar for String {\r\n    type RefType<'a> = &'a str;\r\n}\r\n\r\nimpl Scalar for bool {\r\n    type RefType<'a> = i32;\r\n}\r\n\r\nimpl<'a> ScalarRef<'a> for bool {}\r\n\r\nimpl<'a> ScalarRef<'a> for i32 {}\r\n\r\nimpl<'a> ScalarRef<'a> for &'a str {}\r\n\r\nfn str_contains(a: &str, b: &str) -> bool {\r\n    a.contains(b)\r\n}\r\n\r\npub struct BinaryExpression<A: Scalar, B: Scalar, O: Scalar, F>\r\nwhere\r\n    F: Fn(A::RefType<'_>, B::RefType<'_>) -> O,\r\n{\r\n    f: F,\r\n    _phantom: PhantomData<(A, B, O)>,\r\n}\r\n\r\nimpl<A: Scalar, B: Scalar, O: Scalar, F> BinaryExpression<A, B, O, F>\r\nwhere\r\n    F: Fn(A::RefType<'_>, B::RefType<'_>) -> O,\r\n{\r\n    pub fn new(f: F) -> Self {\r\n        Self {\r\n            f,\r\n            _phantom: PhantomData,\r\n        }\r\n    }\r\n}\r\n\r\nfn fail_case() {\r\n    //     error[E0631]: type mismatch in function arguments\r\n    //   --> src/main.rs:58:54\r\n    //    |\r\n    // 33 | fn str_contains(a: &str, b: &str) -> bool {\r\n    //    | ----------------------------------------- found signature of `for<'r, 's> fn(&'r str, &'s str) -> _`\r\n    // ...\r\n    // 58 |     BinaryExpression::<String, String, bool, _>::new(str_contains);\r\n    //    |     ------------------------------------------------ ^^^^^^^^^^^^ expected signature of `for<'r, 's> fn(<String as Scalar>::RefType<'r>, <String as Scalar>::RefType<'s>) -> _`\r\n    //    |     |\r\n    //    |     required by a bound introduced by this call\r\n    //    |\r\n    // note: required by a bound in `BinaryExpression::<A, B, O, F>::new`\r\n    //   --> src/main.rs:47:8\r\n    //    |\r\n    // 47 |     F: Fn(A::RefType<'_>, B::RefType<'_>) -> O,\r\n    //    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `BinaryExpression::<A, B, O, F>::new`\r\n    // 48 | {\r\n    // 49 |     pub fn new(f: F) -> Self {\r\n    //    |            --- required by a bound in this\r\n\r\n    BinaryExpression::<String, String, bool, _>::new(str_contains);\r\n}\r\n\r\nfn success_case() {\r\n    BinaryExpression::<String, String, bool, _> {\r\n        f: str_contains,\r\n        _phantom: PhantomData,\r\n    };\r\n}\r\n\r\nfn main() {\r\n    println!(\"Hello, world!\");\r\n}\r\n```\r\n\r\nI expected to see this happen:\r\n\r\nBoth functions compile.\r\n\r\nInstead, this happened:\r\n\r\nIf I directly call `new`,\r\n\r\n```\r\nexpected signature of `for<'r, 's> fn(<String as Scalar>::RefType<'r>, <String as Scalar>::RefType<'s>) -> _`\r\n```\r\n\r\n... but if I manually construct the struct, it succeeds.\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.60.0-nightly (8cdb3cd94 2022-01-25)\r\nbinary: rustc\r\ncommit-hash: 8cdb3cd94efece1e17cbd8f6edb1dc1a482779a0\r\ncommit-date: 2022-01-25\r\nhost: aarch64-apple-darwin\r\nrelease: 1.60.0-nightly\r\nLLVM version: 13.0.0\r\n```\r\n\r\nThanks for investigating!\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"compiler-errors\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": {"login": "skyzh", "id": 4198311, "node_id": "MDQ6VXNlcjQxOTgzMTE=", "avatar_url": "https://avatars.githubusercontent.com/u/4198311?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skyzh", "html_url": "https://github.com/skyzh", "followers_url": "https://api.github.com/users/skyzh/followers", "following_url": "https://api.github.com/users/skyzh/following{/other_user}", "gists_url": "https://api.github.com/users/skyzh/gists{/gist_id}", "starred_url": "https://api.github.com/users/skyzh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skyzh/subscriptions", "organizations_url": "https://api.github.com/users/skyzh/orgs", "repos_url": "https://api.github.com/users/skyzh/repos", "events_url": "https://api.github.com/users/skyzh/events{/privacy}", "received_events_url": "https://api.github.com/users/skyzh/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/93342/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/93342/timeline", "performed_via_github_app": null, "state_reason": "completed"}