{"url": "https://api.github.com/repos/rust-lang/rust/issues/45700", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/45700/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/45700/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/45700/events", "html_url": "https://github.com/rust-lang/rust/issues/45700", "id": 270460076, "node_id": "MDU6SXNzdWUyNzA0NjAwNzY=", "number": 45700, "title": "MIR borrowck: diagnostic for partially moved value should note which part is partially moved", "user": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 171502053, "node_id": "MDU6TGFiZWwxNzE1MDIwNTM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-borrow-checker", "name": "A-borrow-checker", "color": "f7e101", "default": false, "description": "Area: The borrow checker"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 867465998, "node_id": "MDU6TGFiZWw4Njc0NjU5OTg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/NLL-diagnostics", "name": "NLL-diagnostics", "color": "f799ea", "default": false, "description": "Working torwads the \"diagnostic parity\" goal"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-01T21:33:09Z", "updated_at": "2018-07-03T18:58:10Z", "closed_at": "2018-07-03T18:58:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "For example, in this test, MIR borrowck should try to indicate more accurately what is partially moved, like AST borrowck:\r\n\r\nFor example, on this test (`borrowck/borrowck-uninit-field-access`)\r\n```Rust\r\n#[derive(Default)]\r\nstruct Point {\r\n    x: isize,\r\n    y: isize,\r\n}\r\n\r\n#[derive(Default)]\r\nstruct Line {\r\n    origin: Point,\r\n    middle: Point,\r\n    target: Point,\r\n}\r\n\r\nimpl Line { fn consume(self) { } }\r\n\r\nfn main() {\r\n    let mut a: Point;\r\n    let _ = a.x + 1; //[ast]~ ERROR use of possibly uninitialized variable: `a.x`\r\n                     //[mir]~^ ERROR       [E0381]\r\n                     //[mir]~| ERROR (Mir) [E0381]\r\n\r\n    let mut line1 = Line::default();\r\n    let _moved = line1.origin;\r\n    let _ = line1.origin.x + 1; //[ast]~ ERROR use of collaterally moved value: `line1.origin.x`\r\n                                //[mir]~^       [E0382]\r\n                                //[mir]~| (Mir) [E0381]\r\n\r\n    let mut line2 = Line::default();\r\n    let _moved = (line2.origin, line2.middle);\r\n    line2.consume(); //[ast]~ ERROR use of partially moved value: `line2` [E0382]\r\n                     //[mir]~^       [E0382]\r\n                     //[mir]~| (Mir) [E0381]\r\n}\r\n```\r\n\r\nWe have the following error messages:\r\n```\r\nerror[E0381]: use of possibly uninitialized variable: `a.x` (Ast)\r\n  --> ../src/test/compile-fail/borrowck/borrowck-uninit-field-access.rs:34:13\r\n   |\r\n34 |     let _ = a.x + 1; //[ast]~ ERROR use of possibly uninitialized variable: `a.x`\r\n   |             ^^^ use of possibly uninitialized `a.x`\r\n\r\nerror[E0382]: use of collaterally moved value: `line1.origin.x` (Ast)\r\n  --> ../src/test/compile-fail/borrowck/borrowck-uninit-field-access.rs:40:13\r\n   |\r\n39 |     let _moved = line1.origin;\r\n   |         ------ value moved here\r\n40 |     let _ = line1.origin.x + 1; //[ast]~ ERROR use of collaterally moved value: `line1.origin.x`\r\n   |             ^^^^^^^^^^^^^^ value used here after move\r\n   |\r\n   = note: move occurs because `line1.origin` has type `Point`, which does not implement the `Copy` trait\r\n\r\nerror[E0382]: use of partially moved value: `line2` (Ast)\r\n  --> ../src/test/compile-fail/borrowck/borrowck-uninit-field-access.rs:46:5\r\n   |\r\n45 |     let _moved = (line2.origin, line2.middle);\r\n   |                   ------------ value moved here\r\n46 |     line2.consume(); //[ast]~ ERROR use of partially moved value: `line2` [E0382]\r\n   |     ^^^^^ value used here after move\r\n   |\r\n   = note: move occurs because `line2.origin` has type `Point`, which does not implement the `Copy` trait\r\n\r\nerror[E0381]: use of possibly uninitialized variable: `a.x` (Mir)\r\n  --> ../src/test/compile-fail/borrowck/borrowck-uninit-field-access.rs:34:13\r\n   |\r\n34 |     let _ = a.x + 1; //[ast]~ ERROR use of possibly uninitialized variable: `a.x`\r\n   |             ^^^ use of possibly uninitialized `a.x`\r\n\r\nerror[E0381]: use of possibly uninitialized variable: `line1.origin.x` (Mir)\r\n  --> ../src/test/compile-fail/borrowck/borrowck-uninit-field-access.rs:40:13\r\n   |\r\n40 |     let _ = line1.origin.x + 1; //[ast]~ ERROR use of collaterally moved value: `line1.origin.x`\r\n   |             ^^^^^^^^^^^^^^ use of possibly uninitialized `line1.origin.x`\r\n\r\nerror[E0381]: use of possibly uninitialized variable: `line2` (Mir)\r\n  --> ../src/test/compile-fail/borrowck/borrowck-uninit-field-access.rs:46:5\r\n   |\r\n46 |     line2.consume(); //[ast]~ ERROR use of partially moved value: `line2` [E0382]\r\n   |     ^^^^^ use of possibly uninitialized `line2`\r\n\r\nerror: aborting due to 6 previous errors\r\n```", "closed_by": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/45700/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/45700/timeline", "performed_via_github_app": null, "state_reason": "completed"}