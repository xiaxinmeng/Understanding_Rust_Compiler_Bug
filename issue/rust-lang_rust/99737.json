{"url": "https://api.github.com/repos/rust-lang/rust/issues/99737", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/99737/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/99737/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/99737/events", "html_url": "https://github.com/rust-lang/rust/issues/99737", "id": 1317499799, "node_id": "I_kwDOAAsO6M5Oh3OX", "number": 99737, "title": "I'm not sure what does this error mean", "user": {"login": "hoangph271", "id": 39024711, "node_id": "MDQ6VXNlcjM5MDI0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/39024711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hoangph271", "html_url": "https://github.com/hoangph271", "followers_url": "https://api.github.com/users/hoangph271/followers", "following_url": "https://api.github.com/users/hoangph271/following{/other_user}", "gists_url": "https://api.github.com/users/hoangph271/gists{/gist_id}", "starred_url": "https://api.github.com/users/hoangph271/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hoangph271/subscriptions", "organizations_url": "https://api.github.com/users/hoangph271/orgs", "repos_url": "https://api.github.com/users/hoangph271/repos", "events_url": "https://api.github.com/users/hoangph271/events{/privacy}", "received_events_url": "https://api.github.com/users/hoangph271/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-07-25T23:36:22Z", "updated_at": "2022-07-26T00:09:47Z", "closed_at": "2022-07-26T00:09:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\nI'm not sure which part went wrong\r\n\r\n```rs\r\nuse iced::button::{self, Button};\r\nuse iced::{Alignment, Column, Element, Row, Sandbox, Text};\r\n\r\n#[derive(Default)]\r\nstruct Counter {\r\n    value: i32,\r\n    exit_button: button::State,\r\n    increment_pressed: button::State,\r\n}\r\n\r\n#[derive(Debug, Clone, Copy)]\r\nenum Message {\r\n    ExitPressed,\r\n    IncrementPressed,\r\n}\r\n\r\nimpl Sandbox for Counter {\r\n    type Message = Message;\r\n\r\n    fn new() -> Self {\r\n        Self::default()\r\n    }\r\n\r\n    fn title(&self) -> String {\r\n        String::from(\"Counter - Iced\")\r\n    }\r\n\r\n    fn update(&mut self, message: Message) {\r\n        match message {\r\n            Message::ExitPressed => {\r\n                self.value += 1;\r\n            }\r\n            Message::IncrementPressed => {\r\n                todo!(\"Handle exit app...!\")\r\n            }\r\n        }\r\n    }\r\n\r\n    fn view(&mut self) -> Element<Message> {\r\n        Row::new()\r\n            .push(\r\n                Column::new()\r\n                    .padding(20)\r\n                    .align_items(Alignment::Center)\r\n                    .push(\r\n                        Button::new(&mut self.exit_button, Text::new(\"Increment\"))\r\n                            .on_press(Message::ExitPressed),\r\n                    )\r\n                    .push(Text::new(self.value.to_string()).size(50))\r\n                    .push(\r\n                        Button::new(&mut self.increment_pressed, Text::new(\"Exit app\"))\r\n                            .on_press(Message::IncrementPressed),\r\n                    )\r\n                    .into(),\r\n            )\r\n            .into()\r\n    }\r\n}\r\n\r\nfn main() -> Result<(), iced::Error> {\r\n    Counter::run(iced::Settings::default())\r\n}\r\n```\r\n\r\n### Meta\r\n\r\nI'm using `rustc@1.63.0-nightly`\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\ngarand@garand rusted-content % RUST_BACKTRACE=1 cargo run .\r\n   Compiling rusted-content v0.1.0 (/Users/garand/useCode/rusted-content)\r\nerror: internal compiler error: compiler/rustc_infer/src/infer/error_reporting/need_type_info.rs:856:33: unexpected path: def=iced_native::widget::row::Row substs=['_#1r, _, _] path=Path { span: src/main.rs:40:9: 40:12 (#0), res: Def(TyAlias, DefId(20:185 ~ iced[6c0f]::widget::Row)), segments: [PathSegment { ident: Row#0, hir_id: Some(HirId { owner: DefId(0:34 ~ rusted_content[7db5]::{impl#0}::view), local_id: 6 }), res: Some(Err), args: Some(GenericArgs { args: [Lifetime(Lifetime { hir_id: HirId { owner: DefId(0:34 ~ rusted_content[7db5]::{impl#0}::view), local_id: 5 }, span: src/main.rs:40:9: 40:12 (#0), name: Implicit })], bindings: [], parenthesized: false, span_ext: src/main.rs:40:17: 40:17 (#0) }), infer_args: true }] }\r\n\r\nthread 'rustc' panicked at 'Box<dyn Any>', /rustc/a6b8c6954829669a5c4fa320c3e6132edf04fcfc/compiler/rustc_errors/src/lib.rs:1335:9\r\nstack backtrace:\r\n   0: std::panicking::begin_panic::<rustc_errors::ExplicitBug>\r\n   1: std::panic::panic_any::<rustc_errors::ExplicitBug>\r\n   2: <rustc_errors::HandlerInner>::bug::<&alloc::string::String>\r\n   3: <rustc_errors::Handler>::bug::<&alloc::string::String>\r\n   4: rustc_middle::ty::context::tls::with_opt::<rustc_middle::util::bug::opt_span_bug_fmt<rustc_span::span_encoding::Span>::{closure#0}, ()>\r\n   5: rustc_middle::util::bug::opt_span_bug_fmt::<rustc_span::span_encoding::Span>\r\n   6: rustc_middle::util::bug::bug_fmt\r\n   7: <rustc_infer::infer::error_reporting::need_type_info::FindInferSourceVisitor>::path_inferred_subst_iter\r\n   8: <rustc_infer::infer::error_reporting::need_type_info::FindInferSourceVisitor as rustc_hir::intravisit::Visitor>::visit_expr\r\n   9: <rustc_infer::infer::error_reporting::need_type_info::FindInferSourceVisitor as rustc_hir::intravisit::Visitor>::visit_expr\r\n  10: rustc_hir::intravisit::walk_expr::<rustc_infer::infer::error_reporting::need_type_info::FindInferSourceVisitor>\r\n  11: <rustc_infer::infer::error_reporting::need_type_info::FindInferSourceVisitor as rustc_hir::intravisit::Visitor>::visit_expr\r\n  12: rustc_hir::intravisit::walk_expr::<rustc_infer::infer::error_reporting::need_type_info::FindInferSourceVisitor>\r\n  13: <rustc_infer::infer::error_reporting::need_type_info::FindInferSourceVisitor as rustc_hir::intravisit::Visitor>::visit_expr\r\n  14: <rustc_infer::infer::error_reporting::need_type_info::FindInferSourceVisitor as rustc_hir::intravisit::Visitor>::visit_expr\r\n  15: <rustc_infer::infer::InferCtxt>::emit_inference_failure_err\r\n  16: <rustc_infer::infer::InferCtxt as rustc_trait_selection::traits::error_reporting::InferCtxtPrivExt>::maybe_report_ambiguity\r\n  17: <rustc_infer::infer::InferCtxt as rustc_trait_selection::traits::error_reporting::InferCtxtExt>::report_fulfillment_errors\r\n  18: <rustc_typeck::check::fn_ctxt::FnCtxt>::select_all_obligations_or_error\r\n  19: <rustc_infer::infer::InferCtxtBuilder>::enter::<&rustc_middle::ty::context::TypeckResults, <rustc_typeck::check::inherited::InheritedBuilder>::enter<rustc_typeck::check::typeck_with_fallback<rustc_typeck::check::typeck::{closure#0}>::{closure#1}, &rustc_middle::ty::context::TypeckResults>::{closure#0}>\r\n  20: rustc_typeck::check::typeck\r\n  21: <rustc_query_system::dep_graph::graph::DepGraph<rustc_middle::dep_graph::dep_node::DepKind>>::with_task::<rustc_middle::ty::context::TyCtxt, rustc_span::def_id::LocalDefId, &rustc_middle::ty::context::TypeckResults>\r\n  22: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::DefaultCache<rustc_span::def_id::LocalDefId, &rustc_middle::ty::context::TypeckResults>>\r\n  23: rustc_query_system::query::plumbing::get_query::<rustc_query_impl::queries::typeck, rustc_query_impl::plumbing::QueryCtxt>\r\n  24: <rustc_middle::hir::map::Map>::par_body_owners::<rustc_typeck::check::typeck_item_bodies::{closure#0}>\r\n  25: rustc_typeck::check::typeck_item_bodies\r\n  26: <rustc_query_system::dep_graph::graph::DepGraph<rustc_middle::dep_graph::dep_node::DepKind>>::with_task::<rustc_middle::ty::context::TyCtxt, (), ()>\r\n  27: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::DefaultCache<(), ()>>\r\n  28: rustc_query_system::query::plumbing::get_query::<rustc_query_impl::queries::typeck_item_bodies, rustc_query_impl::plumbing::QueryCtxt>\r\n  29: <rustc_session::session::Session>::time::<(), rustc_typeck::check_crate::{closure#7}>\r\n  30: rustc_typeck::check_crate\r\n  31: rustc_interface::passes::analysis\r\n  32: <rustc_query_system::dep_graph::graph::DepGraph<rustc_middle::dep_graph::dep_node::DepKind>>::with_task::<rustc_middle::ty::context::TyCtxt, (), core::result::Result<(), rustc_errors::ErrorGuaranteed>>\r\n  33: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::DefaultCache<(), core::result::Result<(), rustc_errors::ErrorGuaranteed>>>\r\n  34: rustc_query_system::query::plumbing::get_query::<rustc_query_impl::queries::analysis, rustc_query_impl::plumbing::QueryCtxt>\r\n  35: <rustc_interface::passes::QueryContext>::enter::<rustc_driver::run_compiler::{closure#1}::{closure#2}::{closure#3}, core::result::Result<(), rustc_errors::ErrorGuaranteed>>\r\n  36: <rustc_interface::interface::Compiler>::enter::<rustc_driver::run_compiler::{closure#1}::{closure#2}, core::result::Result<core::option::Option<rustc_interface::queries::Linker>, rustc_errors::ErrorGuaranteed>>\r\n  37: rustc_span::with_source_map::<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_interface::interface::create_compiler_and_run<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver::run_compiler::{closure#1}>::{closure#1}>\r\n  38: <scoped_tls::ScopedKey<rustc_span::SessionGlobals>>::set::<rustc_interface::interface::run_compiler<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver::run_compiler::{closure#1}>::{closure#0}, core::result::Result<(), rustc_errors::ErrorGuaranteed>>\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.63.0-nightly (a6b8c6954 2022-06-03) running on aarch64-apple-darwin\r\n\r\nnote: compiler flags: --crate-type bin -C embed-bitcode=no -C split-debuginfo=unpacked -C debuginfo=2 -C incremental\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [typeck] type-checking `<impl at src/main.rs:17:1: 58:2>::view`\r\n#1 [typeck_item_bodies] type-checking all item bodies\r\n#2 [analysis] running analysis passes on this crate\r\nend of query stack\r\nerror: could not compile `rusted-content`\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "hoangph271", "id": 39024711, "node_id": "MDQ6VXNlcjM5MDI0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/39024711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hoangph271", "html_url": "https://github.com/hoangph271", "followers_url": "https://api.github.com/users/hoangph271/followers", "following_url": "https://api.github.com/users/hoangph271/following{/other_user}", "gists_url": "https://api.github.com/users/hoangph271/gists{/gist_id}", "starred_url": "https://api.github.com/users/hoangph271/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hoangph271/subscriptions", "organizations_url": "https://api.github.com/users/hoangph271/orgs", "repos_url": "https://api.github.com/users/hoangph271/repos", "events_url": "https://api.github.com/users/hoangph271/events{/privacy}", "received_events_url": "https://api.github.com/users/hoangph271/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/99737/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/99737/timeline", "performed_via_github_app": null, "state_reason": "completed"}