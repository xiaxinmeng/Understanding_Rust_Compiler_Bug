{"url": "https://api.github.com/repos/rust-lang/rust/issues/77404", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/77404/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/77404/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/77404/events", "html_url": "https://github.com/rust-lang/rust/issues/77404", "id": 712917402, "node_id": "MDU6SXNzdWU3MTI5MTc0MDI=", "number": 77404, "title": "Tracking Issue for feature(iter_advance_by)", "user": {"login": "timvermeulen", "id": 2904179, "node_id": "MDQ6VXNlcjI5MDQxNzk=", "avatar_url": "https://avatars.githubusercontent.com/u/2904179?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timvermeulen", "html_url": "https://github.com/timvermeulen", "followers_url": "https://api.github.com/users/timvermeulen/followers", "following_url": "https://api.github.com/users/timvermeulen/following{/other_user}", "gists_url": "https://api.github.com/users/timvermeulen/gists{/gist_id}", "starred_url": "https://api.github.com/users/timvermeulen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timvermeulen/subscriptions", "organizations_url": "https://api.github.com/users/timvermeulen/orgs", "repos_url": "https://api.github.com/users/timvermeulen/repos", "events_url": "https://api.github.com/users/timvermeulen/events{/privacy}", "received_events_url": "https://api.github.com/users/timvermeulen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 650846969, "node_id": "MDU6TGFiZWw2NTA4NDY5Njk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-tracking-issue", "name": "C-tracking-issue", "color": "f5f1fd", "default": false, "description": "Category: A tracking issue for an RFC or an unstable feature."}, {"id": 889209675, "node_id": "MDU6TGFiZWw4ODkyMDk2NzU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-iterators", "name": "A-iterators", "color": "f7e101", "default": false, "description": "Area: Iterators"}, {"id": 2240305001, "node_id": "MDU6TGFiZWwyMjQwMzA1MDAx", "url": "https://api.github.com/repos/rust-lang/rust/labels/Libs-Tracked", "name": "Libs-Tracked", "color": "d4c5f9", "default": false, "description": "Libs issues that are tracked on the team's project board."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 37, "created_at": "2020-10-01T14:50:18Z", "updated_at": "2023-03-13T19:44:28Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for creating a tracking issue! \ud83d\udcdc Tracking issues are for tracking a\r\nfeature from implementation to stabilisation. Make sure to include the relevant\r\nRFC for the feature if it has one. Otherwise provide a short summary of the\r\nfeature and link any relevant PRs or issues, and remove any sections that are\r\nnot relevant to the feature.\r\n\r\nRemember to add team labels to the tracking issue.\r\nFor a language team feature, this would e.g., be `T-lang`.\r\nSuch a feature should also be labeled with e.g., `F-my_feature`.\r\nThis label is used to associate issues (e.g., bugs and design questions) to the feature.\r\n-->\r\n\r\nThis is a tracking issue for the methods `Iterator::advance_by` and `DoubleEndedIterator::advance_back_by`.\r\nThe feature gate for the issue is `#![feature(iter_advance_by)]`.\r\n\r\n---\r\n\r\nPreviously the recommendation was to implement `nth` and `nth_back` on your iterators to efficiently advance them by multiple elements at once (useful for `.skip(n)` and `.step_by(n)`). After this feature is stabilized the recommendation will/should be to implement `advance_by` and `advance_back_by` instead, because they compose better and are often simpler to implement.\r\n\r\nIterators in libcore that wrap another iterator (possibly from elsewhere than libcore) will need to keep their `nth` and `nth_back` implementations for the foreseeable future and perhaps indefinitely, because the inner iterator may have an efficient `nth` implementation without implementing `advance_by` as well.\r\n\r\n### About tracking issues\r\n\r\nTracking issues are used to record the overall progress of implementation.\r\nThey are also used as hubs connecting to other relevant issues, e.g., bugs or open design questions.\r\nA tracking issue is however *not* meant for large scale discussion, questions, or bug reports about a feature.\r\nInstead, open a dedicated issue for the specific matter and add the relevant feature gate label.\r\n\r\n### Steps\r\n<!--\r\nInclude each step required to complete the feature. Typically this is a PR\r\nimplementing a feature, followed by a PR that stabilises the feature. However\r\nfor larger features an implementation could be broken up into multiple PRs.\r\n-->\r\n\r\n- [x] Implementation (#76909)\r\n- [ ] (?) #92284\r\n- [ ] Stabilization PR ([see instructions on rustc-dev-guide][stabilization-guide])\r\n\r\n[stabilization-guide]: https://rustc-dev-guide.rust-lang.org/stabilization_guide.html#stabilization-pr\r\n\r\n### Implementation history\r\n\r\n- Implementation (#76909)\r\n- Add tracking issue (#77405)\r\n- Implement for `Chain` (#77594)\r\n- implement for `slice::{Iter, IterMut}` (#87387, #87736)\r\n- implement for `vec::IntoIter, ops::Range, iter::{Cycle, Skip, Take, Copied, Flatten}` (#87091)", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/77404/reactions", "total_count": 18, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 18, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/77404/timeline", "performed_via_github_app": null, "state_reason": null}