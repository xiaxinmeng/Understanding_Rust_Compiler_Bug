{"url": "https://api.github.com/repos/rust-lang/rust/issues/109975", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/109975/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/109975/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/109975/events", "html_url": "https://github.com/rust-lang/rust/issues/109975", "id": 1655902759, "node_id": "I_kwDOAAsO6M5isxIn", "number": 109975, "title": "cannot relate bound region: ReErased <= ReLateBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrNamed(DefId(0:42 ~ mut_family[c9ba]::MutFamily::as_ptr::'a), 'a) })", "user": {"login": "JohnScience", "id": 16991108, "node_id": "MDQ6VXNlcjE2OTkxMTA4", "avatar_url": "https://avatars.githubusercontent.com/u/16991108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnScience", "html_url": "https://github.com/JohnScience", "followers_url": "https://api.github.com/users/JohnScience/followers", "following_url": "https://api.github.com/users/JohnScience/following{/other_user}", "gists_url": "https://api.github.com/users/JohnScience/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnScience/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnScience/subscriptions", "organizations_url": "https://api.github.com/users/JohnScience/orgs", "repos_url": "https://api.github.com/users/JohnScience/repos", "events_url": "https://api.github.com/users/JohnScience/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnScience/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2023-04-05T15:59:31Z", "updated_at": "2023-04-05T17:12:07Z", "closed_at": "2023-04-05T17:12:07Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n-->\r\n\r\n### Code\r\n\r\n```Rust\r\n#![no_std]\r\nuse core::marker::PhantomData;\r\n\r\nstruct RefCarrierTy<'a, T, const IS_SHARED: bool>(PhantomData<*const &'a T>);\r\n\r\n// This has to be a trait in the absence of inherent associated types.\r\ntrait RefCarrier<'a, T> {\r\n    type RefTy;\r\n}\r\n\r\nimpl<'a, T> RefCarrier<'a, T> for RefCarrierTy<'a, T, true> {\r\n    type RefTy = &'a T;\r\n}\r\n\r\nimpl<'a, T> RefCarrier<'a, T> for RefCarrierTy<'a, T, false> {\r\n    type RefTy = &'a mut T;\r\n}\r\n\r\npub struct IdentityFamily;\r\n\r\npub struct UnsafeCellFamily;\r\n\r\npub struct CellFamily;\r\n\r\npub struct RefCellFamily;\r\n\r\npub trait MutFamily {\r\n    type Target<T>;\r\n    const IS_INTERIOR_MUT: bool;\r\n    fn new<T>(value: T) -> Self::Target<T>;\r\n    fn into_exterior_mut<T>(target: Self::Target<T>) -> T;\r\n    fn as_ptr<'a, T>(reference: RefCarrierTy<'a, Self::Target<T>, { Self::IS_INTERIOR_MUT }>::RefTy) -> *mut T;\r\n}\r\n\r\nimpl MutFamily for IdentityFamily {\r\n    type Target<T> = T;\r\n    const IS_INTERIOR_MUT: bool = false;\r\n    \r\n    fn new<T>(value: T) -> Self::Target<T> {\r\n        value\r\n    }\r\n\r\n    fn into_exterior_mut<T>(target: Self::Target<T>) -> T {\r\n        target\r\n    }\r\n}\r\n\r\nimpl MutFamily for UnsafeCellFamily {\r\n    type Target<T> = core::cell::UnsafeCell<T>;\r\n    const IS_INTERIOR_MUT: bool = true;\r\n    \r\n    fn new<T>(value: T) -> Self::Target<T> {\r\n        core::cell::UnsafeCell::new(value)\r\n    }\r\n\r\n    fn into_exterior_mut<T>(target: Self::Target<T>) -> T {\r\n        target.into_inner()\r\n    }\r\n}\r\n\r\nimpl MutFamily for CellFamily {\r\n    type Target<T> = core::cell::Cell<T>;\r\n    const IS_INTERIOR_MUT: bool = true;\r\n\r\n    fn new<T>(value: T) -> Self::Target<T> {\r\n        core::cell::Cell::new(value)\r\n    }\r\n\r\n    fn into_exterior_mut<T>(target: Self::Target<T>) -> T {\r\n        target.into_inner()\r\n    }\r\n}\r\n\r\nimpl MutFamily for RefCellFamily {\r\n    type Target<T> = core::cell::RefCell<T>;\r\n    const IS_INTERIOR_MUT: bool = true;\r\n\r\n    fn new<T>(value: T) -> Self::Target<T> {\r\n        core::cell::RefCell::new(value)\r\n    }\r\n\r\n    fn into_exterior_mut<T>(target: Self::Target<T>) -> T {\r\n        target.into_inner()\r\n    }\r\n}\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.68.1 (8460ca823 2023-03-20)\r\nbinary: rustc\r\ncommit-hash: 8460ca823e8367a30dda430efda790588b8c84d3\r\ncommit-date: 2023-03-20\r\nhost: x86_64-pc-windows-msvc\r\nrelease: 1.68.1\r\nLLVM version: 15.0.6\r\n```\r\n\r\n### Error output\r\n\r\n```\r\ncompiler\\rustc_infer\\src\\infer\\region_constraints\\mod.rs:568:17: cannot relate bound region: ReErased <= ReLateBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrNamed(DefId(0:42 ~ mut_family[c9ba]::MutFamily::as_ptr::'a), 'a) })\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nC:\\Users\\USER\\Documents\\github\\mut_family>cargo check\r\n    Checking mut_family v0.1.0 (C:\\Users\\USER\\Documents\\github\\mut_family)\r\nerror: generic parameters may not be used in const operations\r\n  --> src\\lib.rs:32:69\r\n   |\r\n32 |     fn as_ptr<'a, T>(reference: RefCarrierTy<'a, Self::Target<T>, { Self::IS_INTERIOR_MUT }>::RefTy) -> *mut T;\r\n   |                                                                     ^^^^^^^^^^^^^^^^^^^^^ cannot perform const operation using `Self`\r\n   |\r\n   = note: type parameters may not be used in const expressions\r\n\r\nerror: internal compiler error: compiler\\rustc_infer\\src\\infer\\region_constraints\\mod.rs:568:17: cannot relate bound region: ReErased <= ReLateBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrNamed(DefId(0:42 ~ mut_family[c9ba]::MutFamily::as_ptr::'a), 'a) })\r\n\r\nthread 'rustc' panicked at 'Box<dyn Any>', /rustc/8460ca823e8367a30dda430efda790588b8c84d3\\compiler\\rustc_errors\\src\\lib.rs:987:33\r\nstack backtrace:\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.68.1 (8460ca823 2023-03-20) running on x86_64-pc-windows-msvc\r\n\r\nnote: compiler flags: --crate-type lib -C embed-bitcode=no -C debuginfo=2 -C incremental=[REDACTED]\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [fn_sig] computing function signature of `MutFamily::as_ptr`\r\n#1 [collect_mod_item_types] collecting item types in top-level module\r\n#2 [analysis] running analysis passes on this crate\r\nend of query stack\r\nerror: could not compile `mut_family` due to previous error\r\n\r\nC:\\Users\\USER\\Documents\\github\\mut_family>set RUST_BACKTRACE=full\r\n\r\nC:\\Users\\USER\\Documents\\github\\mut_family>cargo check\r\n    Checking mut_family v0.1.0 (C:\\Users\\USER\\Documents\\github\\mut_family)\r\nerror: generic parameters may not be used in const operations\r\n  --> src\\lib.rs:32:69\r\n   |\r\n32 |     fn as_ptr<'a, T>(reference: RefCarrierTy<'a, Self::Target<T>, { Self::IS_INTERIOR_MUT }>::RefTy) -> *mut T;\r\n   |                                                                     ^^^^^^^^^^^^^^^^^^^^^ cannot perform const operation using `Self`\r\n   |\r\n   = note: type parameters may not be used in const expressions\r\n\r\nerror: internal compiler error: compiler\\rustc_infer\\src\\infer\\region_constraints\\mod.rs:568:17: cannot relate bound region: ReErased <= ReLateBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrNamed(DefId(0:42 ~ mut_family[c9ba]::MutFamily::as_ptr::'a), 'a) })\r\n\r\nthread 'rustc' panicked at 'Box<dyn Any>', /rustc/8460ca823e8367a30dda430efda790588b8c84d3\\compiler\\rustc_errors\\src\\lib.rs:987:33\r\nstack backtrace:\r\n   0:     0x7fff53109d02 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::h24420960574ebc1c\r\n   1:     0x7fff5314570b - core::fmt::write::h26edb44d1c5a6228\r\n   2:     0x7fff530fcdfa - <std::io::IoSlice as core::fmt::Debug>::fmt::h3ff7218cf0d77c3d\r\n   3:     0x7fff53109a4b - std::sys::common::alloc::realloc_fallback::hc95eb280a5e906e1\r\n   4:     0x7fff5310d3f9 - std::panicking::default_hook::h0e3996dde5e60121\r\n   5:     0x7fff5310d07b - std::panicking::default_hook::h0e3996dde5e60121\r\n   6:     0x7fff1da568d5 - rustc_driver[9a81db59c34cf3a5]::describe_lints\r\n   7:     0x7fff5310dd5f - std::panicking::rust_panic_with_hook::hf3035ce96f91938a\r\n   8:     0x7fff1fd16493 - <<rustc_infer[4a5594bed6e23f7a]::infer::error_reporting::TypeErrCtxt>::construct_generic_bound_failure::SubOrigin as core[88a2d7387c40f712]::fmt::Debug>::fmt\r\n   9:     0x7fff1fd149a9 - <<rustc_infer[4a5594bed6e23f7a]::infer::error_reporting::TypeErrCtxt>::construct_generic_bound_failure::SubOrigin as core[88a2d7387c40f712]::fmt::Debug>::fmt\r\n  10:     0x7fff1fd14619 - <<rustc_infer[4a5594bed6e23f7a]::infer::error_reporting::TypeErrCtxt>::construct_generic_bound_failure::SubOrigin as core[88a2d7387c40f712]::fmt::Debug>::fmt\r\n  11:     0x7fff1fd14609 - <<rustc_infer[4a5594bed6e23f7a]::infer::error_reporting::TypeErrCtxt>::construct_generic_bound_failure::SubOrigin as core[88a2d7387c40f712]::fmt::Debug>::fmt\r\n  12:     0x7fff1fd13fb0 - <<rustc_infer[4a5594bed6e23f7a]::infer::error_reporting::TypeErrCtxt>::construct_generic_bound_failure::SubOrigin as core[88a2d7387c40f712]::fmt::Debug>::fmt\r\n  13:     0x7fff1fd13e09 - <<rustc_infer[4a5594bed6e23f7a]::infer::error_reporting::TypeErrCtxt>::construct_generic_bound_failure::SubOrigin as core[88a2d7387c40f712]::fmt::Debug>::fmt\r\n  14:     0x7fff1fd1c259 - <rustc_infer[4a5594bed6e23f7a]::infer::opaque_types::table::OpaqueTypeStorage as core[88a2d7387c40f712]::fmt::Debug>::fmt\r\n  15:     0x7fff1fd1c2bd - <rustc_infer[4a5594bed6e23f7a]::infer::opaque_types::table::OpaqueTypeStorage as core[88a2d7387c40f712]::fmt::Debug>::fmt\r\n  16:     0x7fff1fd1b47a - <rustc_infer[4a5594bed6e23f7a]::infer::opaque_types::table::OpaqueTypeStorage as core[88a2d7387c40f712]::fmt::Debug>::fmt\r\n  17:     0x7fff1fd1b408 - <rustc_infer[4a5594bed6e23f7a]::infer::opaque_types::table::OpaqueTypeStorage as core[88a2d7387c40f712]::fmt::Debug>::fmt\r\n  18:     0x7fff1fd1b3c6 - <rustc_infer[4a5594bed6e23f7a]::infer::opaque_types::table::OpaqueTypeStorage as core[88a2d7387c40f712]::fmt::Debug>::fmt\r\n  19:     0x7fff1d884d1a - <rustc_infer[4a5594bed6e23f7a]::infer::combine::ConstInferUnifier as rustc_middle[348c050efaf3cf62]::ty::relate::TypeRelation>::consts\r\n  20:     0x7fff1d88ccbc - <rustc_middle[348c050efaf3cf62]::ty::sty::AliasTy as rustc_infer[4a5594bed6e23f7a]::infer::at::ToTrace>::to_trace\r\n  21:     0x7fff1d893840 - <rustc_middle[348c050efaf3cf62]::ty::sty::AliasTy as rustc_infer[4a5594bed6e23f7a]::infer::at::ToTrace>::to_trace\r\n  22:     0x7fff1d84ee99 - <rustc_infer[4a5594bed6e23f7a]::infer::equate::Equate as rustc_middle[348c050efaf3cf62]::ty::relate::TypeRelation>::tys\r\n  23:     0x7fff1cd2c582 - <rustc_hir_analysis[38f54a96453c487e]::check::wfcheck::check_where_clauses::{closure#2}::CountParams as rustc_middle[348c050efaf3cf62]::ty::visit::TypeVisitor>::visit_ty\r\n  24:     0x7fff1ccef08a - rustc_hir_analysis[38f54a96453c487e]::collect::get_infer_ret_ty\r\n  25:     0x7fff1efbd849 - <rustc_hir_analysis[38f54a96453c487e]::check::compare_impl_item::CheckImpliedWfMode as core[88a2d7387c40f712]::fmt::Debug>::fmt\r\n  26:     0x7fff1ef9a3b9 - <rustc_hir_analysis[38f54a96453c487e]::check::check::check_opaque_for_inheriting_lifetimes::ProhibitOpaqueVisitor as rustc_hir[c9ded08e9c1a2081]::intravisit::Visitor>::visit_ty\r\n  27:     0x7fff1efa76d1 - <rustc_hir_analysis[38f54a96453c487e]::collect::predicates_of::OnlySelfBounds as core[88a2d7387c40f712]::fmt::Debug>::fmt\r\n  28:     0x7fff1ef5ff50 - <rustc_hir_analysis[38f54a96453c487e]::variance::terms::InferredIndex as core[88a2d7387c40f712]::fmt::Debug>::fmt\r\n  29:     0x7fff1ef67d1b - <dyn rustc_hir_analysis[38f54a96453c487e]::astconv::AstConv>::associated_path_to_ty\r\n  30:     0x7fff1efc0f26 - <rustc_hir_analysis[38f54a96453c487e]::check::region::Context as core[88a2d7387c40f712]::fmt::Debug>::fmt\r\n  31:     0x7fff1efa74ac - <rustc_hir_analysis[38f54a96453c487e]::collect::predicates_of::OnlySelfBounds as core[88a2d7387c40f712]::fmt::Debug>::fmt\r\n  32:     0x7fff1ef99d20 - <rustc_hir_analysis[38f54a96453c487e]::check::check::check_opaque_for_inheriting_lifetimes::ProhibitOpaqueVisitor as rustc_hir[c9ded08e9c1a2081]::intravisit::Visitor>::visit_ty\r\n  33:     0x7fff1efd1941 - <rustc_hir_analysis[38f54a96453c487e]::collect::type_of::find_opaque_ty_constraints_for_tait::ConstraintLocator as rustc_hir[c9ded08e9c1a2081]::intravisit::Visitor>::visit_trait_item\r\n  34:     0x7fff1cccf334 - <<dyn rustc_hir_analysis[38f54a96453c487e]::astconv::AstConv>::create_substs_for_ast_path::{closure#0}::SubstsForAstPathCtxt as rustc_hir_analysis[38f54a96453c487e]::astconv::CreateSubstsForGenericArgsCtxt>::provided_kind\r\n  35:     0x7fff1ccd3e98 - <<dyn rustc_hir_analysis[38f54a96453c487e]::astconv::AstConv>::create_substs_for_ast_path::{closure#0}::SubstsForAstPathCtxt as rustc_hir_analysis[38f54a96453c487e]::astconv::CreateSubstsForGenericArgsCtxt>::provided_kind\r\n  36:     0x7fff1ccd521c - <dyn rustc_hir_analysis[38f54a96453c487e]::astconv::AstConv>::ty_of_fn\r\n  37:     0x7fff1ccee194 - rustc_hir_analysis[38f54a96453c487e]::collect::get_infer_ret_ty\r\n  38:     0x7fff1bc3f6ec - <rustc_query_impl[7254303e48199d54]::on_disk_cache::CacheEncoder as rustc_type_ir[1f8388642b2bc09c]::codec::TyEncoder>::encode_alloc_id\r\n  39:     0x7fff1bca7ab9 - <&[(rustc_middle[348c050efaf3cf62]::ty::Predicate, rustc_span[d3e736c3e38f3ea5]::span_encoding::Span)] as rustc_serialize[fb792d7000edb6]::serialize::Decodable<rustc_query_impl[7254303e48199d54]::on_disk_cache::CacheDecoder>>::decode\r\n  40:     0x7fff1d42e334 - <&[(rustc_middle[348c050efaf3cf62]::ty::Clause, rustc_span[d3e736c3e38f3ea5]::span_encoding::Span)] as rustc_serialize[fb792d7000edb6]::serialize::Decodable<rustc_query_impl[7254303e48199d54]::on_disk_cache::CacheDecoder>>::decode\r\n  41:     0x7fff1d306ad8 - <rustc_query_impl[7254303e48199d54]::Queries as rustc_middle[348c050efaf3cf62]::ty::query::QueryEngine>::as_any\r\n  42:     0x7fff1b9624f4 - <rustc_hir_analysis[38f54a96453c487e]::collect::CollectItemTypesVisitor as rustc_hir[c9ded08e9c1a2081]::intravisit::Visitor>::visit_trait_item\r\n  43:     0x7fff1ccd69a4 - <dyn rustc_hir_analysis[38f54a96453c487e]::astconv::AstConv>::ty_of_fn\r\n  44:     0x7fff1b961fd1 - <rustc_hir_analysis[38f54a96453c487e]::collect::generics_of::AnonConstInParamTyDetector as rustc_hir[c9ded08e9c1a2081]::intravisit::Visitor>::visit_generic_param\r\n  45:     0x7fff1bc3ddb9 - <rustc_query_impl[7254303e48199d54]::on_disk_cache::CacheEncoder as rustc_type_ir[1f8388642b2bc09c]::codec::TyEncoder>::encode_alloc_id\r\n  46:     0x7fff1bca7425 - <&[(rustc_middle[348c050efaf3cf62]::ty::Predicate, rustc_span[d3e736c3e38f3ea5]::span_encoding::Span)] as rustc_serialize[fb792d7000edb6]::serialize::Decodable<rustc_query_impl[7254303e48199d54]::on_disk_cache::CacheDecoder>>::decode\r\n  47:     0x7fff1bd56191 - <&[(rustc_middle[348c050efaf3cf62]::ty::Predicate, rustc_span[d3e736c3e38f3ea5]::span_encoding::Span)] as rustc_serialize[fb792d7000edb6]::serialize::Decodable<rustc_query_impl[7254303e48199d54]::on_disk_cache::CacheDecoder>>::decode\r\n  48:     0x7fff1bc12cbf - <rustc_query_impl[7254303e48199d54]::Queries as rustc_middle[348c050efaf3cf62]::ty::query::QueryEngine>::try_mark_green\r\n  49:     0x7fff1b94a975 - <<dyn rustc_hir_analysis[38f54a96453c487e]::astconv::AstConv>::create_substs_for_ast_path::{closure#0}::SubstsForAstPathCtxt as rustc_hir_analysis[38f54a96453c487e]::astconv::CreateSubstsForGenericArgsCtxt>::inferred_kind\r\n  50:     0x7fff1b94208a - rustc_hir_analysis[38f54a96453c487e]::check_crate\r\n  51:     0x7fff1b222275 - rustc_interface[80bde221feee50b9]::passes::analysis\r\n  52:     0x7fff1bc40a4f - <rustc_query_impl[7254303e48199d54]::on_disk_cache::CacheEncoder as rustc_type_ir[1f8388642b2bc09c]::codec::TyEncoder>::encode_alloc_id\r\n  53:     0x7fff1bcbfe69 - <&[(rustc_middle[348c050efaf3cf62]::ty::Predicate, rustc_span[d3e736c3e38f3ea5]::span_encoding::Span)] as rustc_serialize[fb792d7000edb6]::serialize::Decodable<rustc_query_impl[7254303e48199d54]::on_disk_cache::CacheDecoder>>::decode\r\n  54:     0x7fff1bdac201 - <&[(rustc_middle[348c050efaf3cf62]::ty::Predicate, rustc_span[d3e736c3e38f3ea5]::span_encoding::Span)] as rustc_serialize[fb792d7000edb6]::serialize::Decodable<rustc_query_impl[7254303e48199d54]::on_disk_cache::CacheDecoder>>::decode\r\n  55:     0x7fff1bc1056f - <rustc_query_impl[7254303e48199d54]::Queries as rustc_middle[348c050efaf3cf62]::ty::query::QueryEngine>::try_mark_green\r\n  56:     0x7fff1b1cd1a9 - <rustc_middle[348c050efaf3cf62]::ty::SymbolName as core[88a2d7387c40f712]::fmt::Debug>::fmt\r\n  57:     0x7fff1b1de7ba - rustc_driver[9a81db59c34cf3a5]::args::arg_expand_all\r\n  58:     0x7fff1b1c2ac1 - <unknown>\r\n  59:     0x7fff1b1ccacb - <rustc_middle[348c050efaf3cf62]::ty::SymbolName as core[88a2d7387c40f712]::fmt::Debug>::fmt\r\n  60:     0x7fff1b1cc319 - <rustc_middle[348c050efaf3cf62]::ty::SymbolName as core[88a2d7387c40f712]::fmt::Debug>::fmt\r\n  61:     0x7fff1b1c404d - <rustc_middle[348c050efaf3cf62]::ty::SymbolName as core[88a2d7387c40f712]::fmt::Debug>::fmt\r\n  62:     0x7fff5312021c - std::sys::windows::thread::Thread::new::hd26bc42258b98de9\r\n  63:     0x7fff9b847614 - BaseThreadInitThunk\r\n  64:     0x7fff9be426a1 - RtlUserThreadStart\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.68.1 (8460ca823 2023-03-20) running on x86_64-pc-windows-msvc\r\n\r\nnote: compiler flags: --crate-type lib -C embed-bitcode=no -C debuginfo=2 -C incremental=[REDACTED]\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [fn_sig] computing function signature of `MutFamily::as_ptr`\r\n#1 [collect_mod_item_types] collecting item types in top-level module\r\n#2 [analysis] running analysis passes on this crate\r\nend of query stack\r\nerror: could not compile `mut_family` due to previous error\r\n```\r\n\r\n</p>\r\n</details>\r\n", "closed_by": {"login": "Nilstrieb", "id": 48135649, "node_id": "MDQ6VXNlcjQ4MTM1NjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/48135649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nilstrieb", "html_url": "https://github.com/Nilstrieb", "followers_url": "https://api.github.com/users/Nilstrieb/followers", "following_url": "https://api.github.com/users/Nilstrieb/following{/other_user}", "gists_url": "https://api.github.com/users/Nilstrieb/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nilstrieb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nilstrieb/subscriptions", "organizations_url": "https://api.github.com/users/Nilstrieb/orgs", "repos_url": "https://api.github.com/users/Nilstrieb/repos", "events_url": "https://api.github.com/users/Nilstrieb/events{/privacy}", "received_events_url": "https://api.github.com/users/Nilstrieb/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/109975/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/109975/timeline", "performed_via_github_app": null, "state_reason": "not_planned"}