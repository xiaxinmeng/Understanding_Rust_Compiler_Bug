{"url": "https://api.github.com/repos/rust-lang/rust/issues/50242", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/50242/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/50242/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/50242/events", "html_url": "https://github.com/rust-lang/rust/issues/50242", "id": 317901850, "node_id": "MDU6SXNzdWUzMTc5MDE4NTA=", "number": 50242, "title": "Rust should support omitting types of constants and static variables", "user": {"login": "Boscop", "id": 535593, "node_id": "MDQ6VXNlcjUzNTU5Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/535593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Boscop", "html_url": "https://github.com/Boscop", "followers_url": "https://api.github.com/users/Boscop/followers", "following_url": "https://api.github.com/users/Boscop/following{/other_user}", "gists_url": "https://api.github.com/users/Boscop/gists{/gist_id}", "starred_url": "https://api.github.com/users/Boscop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Boscop/subscriptions", "organizations_url": "https://api.github.com/users/Boscop/orgs", "repos_url": "https://api.github.com/users/Boscop/repos", "events_url": "https://api.github.com/users/Boscop/events{/privacy}", "received_events_url": "https://api.github.com/users/Boscop/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-26T07:03:27Z", "updated_at": "2018-04-26T12:39:05Z", "closed_at": "2018-04-26T12:39:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Rust should support omitting the types of constants and static variables, and allow inferring them.\r\n\r\nOften the types are long to write, involving many `&'static str` etc. and for static arrays one has to count the number of elements (or wait for the error message to show the number).\r\n\r\nAlso, this problem will get worse as more functions become evaluatable at compile-time which could lead to large nested types for constants/static vars.\r\n\r\nAllowing omitting the type encourages making more things `const`/`static` (also function-locally, where often a `let` binding gets used for values that should really be constants out of convenience of omitting the type..).\r\n\r\nIt would also make Rust more ergonomic, because more of the same rules that apply to `let` bindings will also apply to `const`/`static` vars.\r\n\r\nSo the syntax would mirror that of `let` bindings:\r\n```rust\r\nstatic LOOKUP_TABLE = [\"foo\", \"bar\"];\r\n```\r\ninstead of having to spell out the types like this:\r\n```rust\r\nstatic LOOKUP_TABLE: [&'static str; 2] = [\"foo\", \"bar\"];\r\n```\r\n\r\nThis would also be useful for later when more complex computations are allowed for initializing constants, which has spawned suggestions to allow `impl Trait` existential types in `const`/`static` definitions, but which wouldn't even be necessary if the types were allowed to be omitted.\r\n\r\nWhat do you think?", "closed_by": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/50242/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/50242/timeline", "performed_via_github_app": null, "state_reason": "completed"}