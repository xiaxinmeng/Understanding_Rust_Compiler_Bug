{"url": "https://api.github.com/repos/rust-lang/rust/issues/80644", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/80644/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/80644/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/80644/events", "html_url": "https://github.com/rust-lang/rust/issues/80644", "id": 777602425, "node_id": "MDU6SXNzdWU3Nzc2MDI0MjU=", "number": 80644, "title": "Incorrect example in documentation for std::hint::spin_loop", "user": {"login": "booleancoercion", "id": 33005025, "node_id": "MDQ6VXNlcjMzMDA1MDI1", "avatar_url": "https://avatars.githubusercontent.com/u/33005025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/booleancoercion", "html_url": "https://github.com/booleancoercion", "followers_url": "https://api.github.com/users/booleancoercion/followers", "following_url": "https://api.github.com/users/booleancoercion/following{/other_user}", "gists_url": "https://api.github.com/users/booleancoercion/gists{/gist_id}", "starred_url": "https://api.github.com/users/booleancoercion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/booleancoercion/subscriptions", "organizations_url": "https://api.github.com/users/booleancoercion/orgs", "repos_url": "https://api.github.com/users/booleancoercion/repos", "events_url": "https://api.github.com/users/booleancoercion/events{/privacy}", "received_events_url": "https://api.github.com/users/booleancoercion/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 431251592, "node_id": "MDU6TGFiZWw0MzEyNTE1OTI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-docs", "name": "A-docs", "color": "f7e101", "default": false, "description": "Area: documentation for any part of the project, including the compiler, standard library, and tools"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2021-01-03T09:21:45Z", "updated_at": "2021-01-05T05:55:02Z", "closed_at": "2021-01-05T05:55:02Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi, I was reading the [documentation for `std::hint::spin_loop`](https://doc.rust-lang.org/stable/std/hint/fn.spin_loop.html) when I stumbled upon this example (using the form with no hidden items):\r\n```rust\r\n#![allow(unused)]\r\nfn main() { fn _inner() -> Result<(), impl core::fmt::Debug> {use std::sync::atomic::{AtomicBool, Ordering};\r\nuse std::sync::Arc;\r\nuse std::{hint, thread};\r\n\r\n// A shared atomic value that threads will use to coordinate\r\nlet live = Arc::new(AtomicBool::new(false));\r\n\r\n// In a background thread we'll eventually set the value\r\nlet bg_work = {\r\n    let live = live.clone();\r\n    thread::spawn(move || {\r\n        // Do some work, then make the value live\r\n        do_some_work();\r\n        live.store(true, Ordering::Release);\r\n    })\r\n};\r\n\r\n// Back on our current thread, we wait for the value to be set\r\nwhile live.load(Ordering::Acquire) {\r\n    // The spin loop is a hint to the CPU that we're waiting, but probably\r\n    // not for very long\r\n    hint::spin_loop();\r\n}\r\n\r\n// The value is now set\r\nfn do_some_work() {}\r\ndo_some_work();\r\nbg_work.join()?;\r\nOk::<(), Box<dyn core::any::Any + Send + 'static>>(())}\r\n_inner().unwrap() }\r\n```\r\nI think that the values for AtomicBool might be inverted, because this program never terminates when run in the playground. Should this be fixed or is there something I'm missing?", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/80644/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/80644/timeline", "performed_via_github_app": null, "state_reason": "completed"}