{"url": "https://api.github.com/repos/rust-lang/rust/issues/73338", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/73338/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/73338/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/73338/events", "html_url": "https://github.com/rust-lang/rust/issues/73338", "id": 638326562, "node_id": "MDU6SXNzdWU2MzgzMjY1NjI=", "number": 73338, "title": "PartialOrd derived for C-like enum isn't properly optimized for the `<=` operator", "user": {"login": "pubfnbar", "id": 66903996, "node_id": "MDQ6VXNlcjY2OTAzOTk2", "avatar_url": "https://avatars.githubusercontent.com/u/66903996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pubfnbar", "html_url": "https://github.com/pubfnbar", "followers_url": "https://api.github.com/users/pubfnbar/followers", "following_url": "https://api.github.com/users/pubfnbar/following{/other_user}", "gists_url": "https://api.github.com/users/pubfnbar/gists{/gist_id}", "starred_url": "https://api.github.com/users/pubfnbar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pubfnbar/subscriptions", "organizations_url": "https://api.github.com/users/pubfnbar/orgs", "repos_url": "https://api.github.com/users/pubfnbar/repos", "events_url": "https://api.github.com/users/pubfnbar/events{/privacy}", "received_events_url": "https://api.github.com/users/pubfnbar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-06-14T10:39:35Z", "updated_at": "2021-04-05T06:21:16Z", "closed_at": "2021-04-05T06:21:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The manual version:\r\n```rust\r\nuse std::{\r\n    cmp::Ordering,\r\n    time::SystemTime,\r\n};\r\n\r\n#[repr(u32)]\r\n#[derive(Copy, Clone, Eq, PartialEq)]\r\nenum Foo {\r\n    Zero,\r\n    One,\r\n    Two,\r\n}\r\n\r\nimpl PartialOrd for Foo {\r\n    fn partial_cmp(&self, _rhs: &Foo) -> Option<Ordering> {\r\n        panic!()\r\n    }\r\n\r\n    fn le(&self, rhs: &Foo) -> bool {\r\n        *self as u32 <= *rhs as u32\r\n    }\r\n}\r\n\r\nfn main() {\r\n    let opaque = SystemTime::now()\r\n        .duration_since(SystemTime::UNIX_EPOCH)\r\n        .unwrap()\r\n        .as_secs() as u32\r\n        % 3;\r\n\r\n    let foo = unsafe { *(&opaque as *const _ as *const Foo) };\r\n\r\n    if foo <= Foo::One {\r\n        println!(\"here\");\r\n    }\r\n}\r\n```\r\n\r\nThe manual version ASM:\r\n```asm\r\nplayground::main:\r\n\tsubq\t$88, %rsp\r\n\tcallq\t*std::time::SystemTime::now@GOTPCREL(%rip)\r\n\tmovq\t%rax, 56(%rsp)\r\n\tmovq\t%rdx, 64(%rsp)\r\n\tleaq\t8(%rsp), %rdi\r\n\tleaq\t56(%rsp), %rsi\r\n\txorl\t%edx, %edx\r\n\txorl\t%ecx, %ecx\r\n\tcallq\t*std::time::SystemTime::duration_since@GOTPCREL(%rip)\r\n\tcmpq\t$1, 8(%rsp)\r\n\tje\t.LBB4_4\r\n\tmovl\t16(%rsp), %eax\r\n\tmovl\t$2863311531, %ecx\r\n\timulq\t%rax, %rcx\r\n\tshrq\t$33, %rcx\r\n\tleal\t(%rcx,%rcx,2), %ecx\r\n\tsubl\t%ecx, %eax\r\n\tcmpl\t$1, %eax\r\n\tja\t.LBB4_3\r\n\tleaq\t.L__unnamed_2(%rip), %rax\r\n\tmovq\t%rax, 8(%rsp)\r\n\tmovq\t$1, 16(%rsp)\r\n\tmovq\t$0, 24(%rsp)\r\n\tleaq\t.L__unnamed_3(%rip), %rax\r\n\tmovq\t%rax, 40(%rsp)\r\n\tmovq\t$0, 48(%rsp)\r\n\tleaq\t8(%rsp), %rdi\r\n\tcallq\t*std::io::stdio::_print@GOTPCREL(%rip)\r\n```\r\n\r\nThe derived version:\r\n```rust\r\nuse std::{\r\n    cmp::Ordering,\r\n    time::SystemTime,\r\n};\r\n\r\n#[repr(u32)]\r\n#[derive(Copy, Clone, Eq, PartialEq, PartialOrd)]\r\nenum Foo {\r\n    Zero,\r\n    One,\r\n    Two,\r\n}\r\n\r\nfn main() {\r\n    let opaque = SystemTime::now()\r\n        .duration_since(SystemTime::UNIX_EPOCH)\r\n        .unwrap()\r\n        .as_secs() as u32\r\n        % 3;\r\n\r\n    let foo = unsafe { *(&opaque as *const _ as *const Foo) };\r\n\r\n    if foo <= Foo::One {\r\n        println!(\"here\");\r\n    }\r\n}\r\n```\r\n\r\nThe derived version ASM:\r\n```asm\r\nplayground::main:\r\n\tsubq\t$88, %rsp\r\n\tcallq\t*std::time::SystemTime::now@GOTPCREL(%rip)\r\n\tmovq\t%rax, 56(%rsp)\r\n\tmovq\t%rdx, 64(%rsp)\r\n\tleaq\t8(%rsp), %rdi\r\n\tleaq\t56(%rsp), %rsi\r\n\txorl\t%edx, %edx\r\n\txorl\t%ecx, %ecx\r\n\tcallq\t*std::time::SystemTime::duration_since@GOTPCREL(%rip)\r\n\tcmpq\t$1, 8(%rsp)\r\n\tje\t.LBB4_4\r\n\tmovl\t16(%rsp), %eax\r\n\tmovl\t$2863311531, %ecx\r\n\timulq\t%rax, %rcx\r\n\tshrq\t$33, %rcx\r\n\tleal\t(%rcx,%rcx,2), %ecx\r\n\txorl\t%edx, %edx\r\n\tsubl\t%ecx, %eax\r\n\tsetne\t%dl\r\n\txorl\t%ecx, %ecx\r\n\tcmpl\t$1, %eax\r\n\tleaq\t-1(%rdx,%rdx), %rax\r\n\tcmovneq\t%rax, %rcx\r\n\taddq\t$1, %rcx\r\n\tcmpq\t$1, %rcx\r\n\tja\t.LBB4_3\r\n\tleaq\t.L__unnamed_2(%rip), %rax\r\n\tmovq\t%rax, 8(%rsp)\r\n\tmovq\t$1, 16(%rsp)\r\n\tmovq\t$0, 24(%rsp)\r\n\tleaq\t.L__unnamed_3(%rip), %rax\r\n\tmovq\t%rax, 40(%rsp)\r\n\tmovq\t$0, 48(%rsp)\r\n\tleaq\t8(%rsp), %rdi\r\n\tcallq\t*std::io::stdio::_print@GOTPCREL(%rip)\r\n```\r\n\r\nThe diff is that while the manual version does:\r\n```asm\r\n\tsubl\t%ecx, %eax\r\n\tcmpl\t$1, %eax\r\n```\r\n...the derived version does:\r\n```asm\r\n\txorl\t%edx, %edx\r\n\tsubl\t%ecx, %eax\r\n\tsetne\t%dl\r\n\txorl\t%ecx, %ecx\r\n\tcmpl\t$1, %eax\r\n\tleaq\t-1(%rdx,%rdx), %rax\r\n\tcmovneq\t%rax, %rcx\r\n\taddq\t$1, %rcx\r\n\tcmpq\t$1, %rcx\r\n```\r\n\r\nAll the other `PartialOrd` operators are optimized properly.\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/73338/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/73338/timeline", "performed_via_github_app": null, "state_reason": "completed"}