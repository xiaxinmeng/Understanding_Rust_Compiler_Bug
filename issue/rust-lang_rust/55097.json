{"url": "https://api.github.com/repos/rust-lang/rust/issues/55097", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/55097/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/55097/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/55097/events", "html_url": "https://github.com/rust-lang/rust/issues/55097", "id": 370266679, "node_id": "MDU6SXNzdWUzNzAyNjY2Nzk=", "number": 55097, "title": "implement \"lifetime juggling\" methods from chalk integration trait", "user": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 693557542, "node_id": "MDU6TGFiZWw2OTM1NTc1NDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/WG-traits", "name": "WG-traits", "color": "c2e0c6", "default": false, "description": "Working group: Traits, https://internals.rust-lang.org/t/announcing-traits-working-group/6804"}, {"id": 1092060245, "node_id": "MDU6TGFiZWwxMDkyMDYwMjQ1", "url": "https://api.github.com/repos/rust-lang/rust/labels/chalk-integration", "name": "chalk-integration", "color": "ea9aa8", "default": false, "description": "Issues blocking \"preliminary chalk integration\" milestone"}], "state": "closed", "locked": false, "assignee": {"login": "scalexm", "id": 1173131, "node_id": "MDQ6VXNlcjExNzMxMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1173131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scalexm", "html_url": "https://github.com/scalexm", "followers_url": "https://api.github.com/users/scalexm/followers", "following_url": "https://api.github.com/users/scalexm/following{/other_user}", "gists_url": "https://api.github.com/users/scalexm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scalexm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scalexm/subscriptions", "organizations_url": "https://api.github.com/users/scalexm/orgs", "repos_url": "https://api.github.com/users/scalexm/repos", "events_url": "https://api.github.com/users/scalexm/events{/privacy}", "received_events_url": "https://api.github.com/users/scalexm/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "scalexm", "id": 1173131, "node_id": "MDQ6VXNlcjExNzMxMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1173131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scalexm", "html_url": "https://github.com/scalexm", "followers_url": "https://api.github.com/users/scalexm/followers", "following_url": "https://api.github.com/users/scalexm/following{/other_user}", "gists_url": "https://api.github.com/users/scalexm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scalexm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scalexm/subscriptions", "organizations_url": "https://api.github.com/users/scalexm/orgs", "repos_url": "https://api.github.com/users/scalexm/repos", "events_url": "https://api.github.com/users/scalexm/events{/privacy}", "received_events_url": "https://api.github.com/users/scalexm/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2018-10-15T17:32:07Z", "updated_at": "2018-12-27T22:27:50Z", "closed_at": "2018-12-27T22:27:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The chalk integration trait includes a few methods whose job is to do \"lifetime juggling\", in terms of converting values between the \"type inference\" arena lifetime (`'tcx`) and the \"global arena\" lifetime (`'gcx`) (see the [rustc guide](https://rust-lang-nursery.github.io/rustc-guide/ty.html#the-tcx-and-how-it-uses-lifetimes) for more details about these lifetimes, if you are not familiar with them).\r\n\r\nCase 1 is the `LiftExClause` trait:\r\n\r\nhttps://github.com/rust-lang/rust/blob/4f9b581f71810744069228f86242e6ba00b7d09c/src/librustc_traits/chalk_context.rs#L473-L482\r\n\r\nThis trait exists for coherence reasons -- on the one hand, the `ExClause` type is [defined in chalk](https://github.com/rust-lang-nursery/chalk/blob/f615de34fb6e71fa8b969a6a804680533b2b9a85/chalk-engine/src/lib.rs#L106-L122). The `Lift` trait is [defined in rustc](https://doc.rust-lang.org/nightly/nightly-rustc/rustc/ty/trait.Lift.html). Therefore, the impl of `Lift` for `ExClause` has to be in librustc -- but librustc doesn't know enough to do the implementation. So we add an auxiliary trait that is implemented over in `librustc_traits`. And this is the impl!\r\n\r\nWe need to implement the fn body here. It's probably just a matter of invoking `tcx.lift_to_global`, but I'm not sure.\r\n\r\nFor this case, we probably just need to invoke `tcx.lift_to_global(value)` -- but we may need to add some impls of `Lift` for the `DelayedLiteral` type.\r\n\r\nCase 2 is the `lift_delayed_literal` method:\r\n\r\nhttps://github.com/rust-lang/rust/blob/4f9b581f71810744069228f86242e6ba00b7d09c/src/librustc_traits/chalk_context.rs#L445-L450\r\n\r\nThis probably needs an \"auxiliary\" trait like `LiftExClause` above, for the same reason.", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/55097/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/55097/timeline", "performed_via_github_app": null, "state_reason": "completed"}