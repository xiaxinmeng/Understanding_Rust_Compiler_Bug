{"url": "https://api.github.com/repos/rust-lang/rust/issues/48135", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/48135/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/48135/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/48135/events", "html_url": "https://github.com/rust-lang/rust/issues/48135", "id": 296152313, "node_id": "MDU6SXNzdWUyOTYxNTIzMTM=", "number": 48135, "title": "closure return type inference doesn't consider coercions", "user": {"login": "durka", "id": 47007, "node_id": "MDQ6VXNlcjQ3MDA3", "avatar_url": "https://avatars.githubusercontent.com/u/47007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/durka", "html_url": "https://github.com/durka", "followers_url": "https://api.github.com/users/durka/followers", "following_url": "https://api.github.com/users/durka/following{/other_user}", "gists_url": "https://api.github.com/users/durka/gists{/gist_id}", "starred_url": "https://api.github.com/users/durka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/durka/subscriptions", "organizations_url": "https://api.github.com/users/durka/orgs", "repos_url": "https://api.github.com/users/durka/repos", "events_url": "https://api.github.com/users/durka/events{/privacy}", "received_events_url": "https://api.github.com/users/durka/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 604454086, "node_id": "MDU6TGFiZWw2MDQ0NTQwODY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-inference", "name": "A-inference", "color": "f7e101", "default": false, "description": "Area: Type inference"}, {"id": 4172483496, "node_id": "LA_kwDOAAsO6M74swuo", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-types", "name": "T-types", "color": "bfd4f2", "default": false, "description": "Relevant to the types team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-11T02:06:48Z", "updated_at": "2023-02-09T21:56:11Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The title is a guess as to why this code doesn't compile:\r\n\r\n```rust\r\nfn foo(x: Option<&mut i32>) -> Option<&i32> {\r\n    x.map(|x| x)\r\n}\r\n```\r\n\r\n```\r\nerror[E0308]: mismatched types\r\n --> src/main.rs:3:5\r\n  |\r\n3 |     x.map(|x| x)\r\n  |     ^^^^^^^^^^^^ types differ in mutability\r\n  |\r\n  = note: expected type `std::option::Option<&i32>`\r\n             found type `std::option::Option<&mut i32>`\r\n```\r\n\r\nwhile given the tiniest of type hints, it does:\r\n\r\n```rust\r\nfn foo(x: Option<&mut i32>) -> Option<&i32> {\r\n    x.map(|x| -> &_ { x })\r\n}\r\n```\r\n\r\nIt seems that the type inference sees the closure returning `&mut i32` but doesn't consider that that coerces to the desired type. Is this unintended and/or fixable?", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/48135/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 1, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/48135/timeline", "performed_via_github_app": null, "state_reason": null}