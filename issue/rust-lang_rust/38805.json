{"url": "https://api.github.com/repos/rust-lang/rust/issues/38805", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/38805/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/38805/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/38805/events", "html_url": "https://github.com/rust-lang/rust/issues/38805", "id": 198572300, "node_id": "MDU6SXNzdWUxOTg1NzIzMDA=", "number": 38805, "title": "Tracking issue for wasm support", "user": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 289259951, "node_id": "MDU6TGFiZWwyODkyNTk5NTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-help-wanted", "name": "E-help-wanted", "color": "02E10C", "default": false, "description": "Call for participation: Help is requested to fix this issue."}, {"id": 474645165, "node_id": "MDU6TGFiZWw0NzQ2NDUxNjU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-wasm", "name": "O-wasm", "color": "6e6ec0", "default": false, "description": "Target: WASM (WebAssembly), http://webassembly.org/"}, {"id": 602425123, "node_id": "MDU6TGFiZWw2MDI0MjUxMjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-dev-tools", "name": "T-dev-tools", "color": "bfd4f2", "default": false, "description": "Relevant to the dev-tools subteam, which will review and decide on the PR/issue."}, {"id": 650846969, "node_id": "MDU6TGFiZWw2NTA4NDY5Njk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-tracking-issue", "name": "C-tracking-issue", "color": "f5f1fd", "default": false, "description": "Category: A tracking issue for an RFC or an unstable feature."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 29, "created_at": "2017-01-03T21:22:54Z", "updated_at": "2018-03-06T17:07:41Z", "closed_at": "2018-03-06T17:07:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It's been a while since I've looked at the state of wasm in Rust, and\r\nthere's a lot more to be done for it to be really usable. Is anybody\r\ndoing anything significant with Rust and emscripten yet?\r\n\r\nToday I've triaged all the emscripten issues and put together a little\r\nroadmap. I'm hoping others can help fill in the gaps here and get this\r\nacross the finish line.\r\n\r\nI'll start by outlining the near-term scope, some discussion of the\r\nstate of things, then the tasks.\r\n\r\n## Goal: Make Rust on wasm + emscripten a reliable, 1st class Rust target.\r\n\r\nSuccess metrics:\r\n\r\n- Cross-compilation works from macOS, Windows and Linux\r\n- Tests are running against wasm on the bots\r\n- All common crates without significant platform or I/O deps work as expected\r\n  and pass their test suites\r\n- One can test wasm via the '[cross]' tool or some other tool\r\n- The rustc and emcc LLVM versions are decoupled\r\n- One can tweak relevant emcc options in a consistent way\r\n- Rust on emcc is as fast as possible when building in release mode\r\n\r\nOut of scope:\r\n\r\n- Automatic installation of emscripten\r\n- Retaining asm.js compatibility\r\n\r\n## Discussion\r\n\r\nToday I read reports of problems compiling from Windows and macOS;\r\nsome important crates that should obviously work just don't, like\r\nregex; I have no idea whether the test suite still passes.\r\n\r\nSetting up emcc is not foolproof, but I don't think we should worry\r\nabout solving it now, since no other cross target solves the problem\r\nof acquiring the linker. Perhaps something like the [cross] tool will\r\nsuffice - it or something like it will be needed for testing emcc\r\ntargets anyway.\r\n\r\n[cross]: https://github.com/japaric/cross\r\n\r\nThe issue of LLVM coupling remains the worst, and with the pending\r\n[llvm upgrade] it's a pressing matter. To recap, today rustc uses the\r\nemcc 'fastcomp' LLVM backend to communicate LLVM IR to emcc, to\r\ncompile to wasm/asm.js. This forces rustc and emcc to share an LLVM\r\nfork, which is not sustainable (emcc LLVM development is basically\r\ncomplete - the only reason for them to upgrade LLVM is because we\r\nupgrade LLVM).\r\n\r\nThe only viable solution I see is to migrate to the upstream LLVM wasm\r\nbackend, changing the rustc wasm model such that rustc produces wasm\r\ndirectly, and emcc links _that_. And this model unfortunately\r\nprecludes asm.js support until somebody writes a wasm->asm.js\r\ntranslator. I think this is just the way it has to be. The future is\r\nwasm, and we can't maintain LLVM in sync with emcc for long.\r\n\r\nI don't think though we can do the migration to the LLVM wasm backend\r\nbefore the next LLVM upgrade though, because that backend is not\r\nready. So we're probably going to be asking @azakai to upgrade emcc to\r\nLLVM 4.0 and continuing with the LLVM IR -> emcc -> wasm path for a\r\nwhile.\r\n\r\n[llvm upgrade]: https://github.com/rust-lang/rust/issues/37609\r\n\r\n## Tasks\r\n\r\n- [x] [Upgrade LLVM to 4.0](https://github.com/rust-lang/rust/issues/37609)\r\n- [x] [macOS link failures](https://github.com/rust-lang/rust/issues/38558)\r\n- [x] [emscripten support broken by cargo file layout changes](https://github.com/rust-lang/rust/issues/38454)\r\n- [x] [binaryen fails to validate wasm](https://github.com/rust-lang/rust/issues/37555)\r\n- [x] [remove exception handling code with panic runtime](https://github.com/rust-lang/rust/issues/36900)\r\n- [x] [optimize emscripten targets with emcc](https://github.com/rust-lang/rust/issues/36899)\r\n- [x] [llc crashes linking regex test suite](https://github.com/rust-lang/rust/issues/37952)\r\n- [x] [Get test suite working with wasm](https://github.com/rust-lang/rust/issues/38800)\r\n- [x] [Set up testing bots for wasm and asm.js](https://github.com/rust-lang/rust/issues/38801)\r\n- [ ] [Run all crates.io tests against wasm to discover bugs](https://github.com/rust-lang/rust/issues/38802)\r\n- [ ] [Tool support for testing wasm targets](https://github.com/rust-lang/rust/issues/38803)\r\n- [x] [Migrate wasm target to LLVM wasm backend](https://github.com/rust-lang/rust/issues/38804)\r\n- [x] [Configure C exports correctly](https://github.com/rust-lang/rust/issues/39171)\r\n- [ ] [mistranslated wasm simd instructions](https://github.com/WebAssembly/binaryen/issues/855)\r\n- [ ] [make sure asm.js/wasm extensions are correct](https://github.com/rust-lang/rust/issues/39355)", "closed_by": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/38805/reactions", "total_count": 44, "+1": 27, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 17, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/38805/timeline", "performed_via_github_app": null, "state_reason": "completed"}