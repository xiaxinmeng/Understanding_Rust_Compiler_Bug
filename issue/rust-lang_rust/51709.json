{"url": "https://api.github.com/repos/rust-lang/rust/issues/51709", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/51709/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/51709/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/51709/events", "html_url": "https://github.com/rust-lang/rust/issues/51709", "id": 334889149, "node_id": "MDU6SXNzdWUzMzQ4ODkxNDk=", "number": 51709, "title": "Rust doesn't optimize bounds checks that Go 1.11 does", "user": {"login": "xfix", "id": 1297598, "node_id": "MDQ6VXNlcjEyOTc1OTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1297598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xfix", "html_url": "https://github.com/xfix", "followers_url": "https://api.github.com/users/xfix/followers", "following_url": "https://api.github.com/users/xfix/following{/other_user}", "gists_url": "https://api.github.com/users/xfix/gists{/gist_id}", "starred_url": "https://api.github.com/users/xfix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xfix/subscriptions", "organizations_url": "https://api.github.com/users/xfix/orgs", "repos_url": "https://api.github.com/users/xfix/repos", "events_url": "https://api.github.com/users/xfix/events{/privacy}", "received_events_url": "https://api.github.com/users/xfix/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-06-22T14:01:31Z", "updated_at": "2021-03-08T18:21:19Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "After reading https://docs.google.com/presentation/d/1tpeJZFObkeick4CF-mx0L3CeCgvT15B96aJeRpxEPcE/preview#slide=id.g3bc6fcf60c_0_200, I noticed that there were three examples of Go optimizing bounds checks. None of those are optimized by Rust nightly in release mode as I see calls in assembly to bounds checking error function.\r\n\r\n```rust\r\n#![crate_type = \"lib\"]\r\n\r\n/* now fixed\r\npub fn one(s: &[u8], suffix: &[u8]) -> bool {\r\n    s.len() >= suffix.len() && s[s.len() - suffix.len()..] == *suffix\r\n}\r\n\r\npub fn two(a: &[i32]) -> i32 {\r\n    let mut x = 0;\r\n    for i in (0..a.len()).rev() {\r\n        x += a[i];\r\n    }\r\n    x\r\n}\r\n*/\r\n\r\npub fn three(i: usize, b: &mut [i32]) {\r\n    if i >= b.len() {\r\n        return;\r\n    }\r\n    for j in 0..i {\r\n        b[j] += 1;\r\n    }\r\n}\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/51709/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/51709/timeline", "performed_via_github_app": null, "state_reason": null}