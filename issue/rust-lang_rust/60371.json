{"url": "https://api.github.com/repos/rust-lang/rust/issues/60371", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/60371/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/60371/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/60371/events", "html_url": "https://github.com/rust-lang/rust/issues/60371", "id": 438403435, "node_id": "MDU6SXNzdWU0Mzg0MDM0MzU=", "number": 60371, "title": "Existential type ICE without feature specified", "user": {"login": "DutchGhost", "id": 25501014, "node_id": "MDQ6VXNlcjI1NTAxMDE0", "avatar_url": "https://avatars.githubusercontent.com/u/25501014?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DutchGhost", "html_url": "https://github.com/DutchGhost", "followers_url": "https://api.github.com/users/DutchGhost/followers", "following_url": "https://api.github.com/users/DutchGhost/following{/other_user}", "gists_url": "https://api.github.com/users/DutchGhost/gists{/gist_id}", "starred_url": "https://api.github.com/users/DutchGhost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DutchGhost/subscriptions", "organizations_url": "https://api.github.com/users/DutchGhost/orgs", "repos_url": "https://api.github.com/users/DutchGhost/repos", "events_url": "https://api.github.com/users/DutchGhost/events{/privacy}", "received_events_url": "https://api.github.com/users/DutchGhost/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 203429200, "node_id": "MDU6TGFiZWwyMDM0MjkyMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-high", "name": "P-high", "color": "eb6420", "default": false, "description": "High priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 631673608, "node_id": "MDU6TGFiZWw2MzE2NzM2MDg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-impl-trait", "name": "A-impl-trait", "color": "f7e101", "default": false, "description": "Area: impl Trait. Universally / existentially quantified anonymous types with static dispatch."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-04-29T16:33:45Z", "updated_at": "2019-05-11T15:13:27Z", "closed_at": "2019-05-11T15:13:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Another ICE that uses a nightly only feature, but still crashes on stable, beta and nightly without the `#![feature(existential_type)]` flag.\r\n\r\n```Rust\r\ntrait Bug {\r\n    type Item: Bug;\r\n    \r\n    const FUN: fn() -> Self::Item;\r\n}\r\n\r\nimpl Bug for &() {\r\n    existential type Item: Bug;\r\n    \r\n    const FUN: fn() -> Self::Item = || ();\r\n}\r\n```\r\n\r\nAccording to godbolt, this sneaked in with 1.34. 1.33 and lower are not affected.\r\n<details>\r\n<summary>Backtrace:</summary>\r\n\r\n```\r\n Compiling playground v0.0.1 (/playground)\r\nerror[E0658]: existential types are unstable (see issue #34511)\r\n  --> src/lib.rs:10:5\r\n   |\r\n10 |     existential type Item: Bug;\r\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nerror[E0277]: the trait bound `(): Bug` is not satisfied\r\n  --> src/lib.rs:10:5\r\n   |\r\n10 |     existential type Item: Bug;\r\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Bug` is not implemented for `()`\r\n   |\r\n   = help: the following implementations were found:\r\n             <&() as Bug>\r\n   = note: the return type of a function must have a statically known size\r\n\r\nthread 'rustc' panicked at 'called `Option::unwrap()` on a `None` value', src/libcore/option.rs:345:21\r\nstack backtrace:\r\n   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace\r\n             at src/libstd/sys/unix/backtrace/tracing/gcc_s.rs:39\r\n   1: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:70\r\n   2: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/sys_common/backtrace.rs:58\r\n             at src/libstd/panicking.rs:200\r\n   3: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:215\r\n   4: rustc::util::common::panic_hook\r\n   5: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:482\r\n   6: std::panicking::continue_panic_fmt\r\n             at src/libstd/panicking.rs:385\r\n   7: rust_begin_unwind\r\n             at src/libstd/panicking.rs:312\r\n   8: core::panicking::panic_fmt\r\n             at src/libcore/panicking.rs:85\r\n   9: core::panicking::panic\r\n             at src/libcore/panicking.rs:49\r\n  10: rustc_typeck::check::writeback::WritebackCx::visit_opaque_types\r\n  11: rustc_typeck::check::writeback::<impl rustc_typeck::check::FnCtxt<'a, 'gcx, 'tcx>>::resolve_type_vars_in_body\r\n  12: rustc::ty::context::GlobalCtxt::enter_local\r\n  13: rustc_typeck::check::typeck_tables_of\r\n  14: rustc::ty::query::__query_compute::typeck_tables_of\r\n  15: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors<'tcx> for rustc::ty::query::queries::typeck_tables_of<'tcx>>::compute\r\n  16: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  17: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::get_query\r\n  18: rustc_typeck::collect::find_existential_constraints::ConstraintLocator::check\r\n  19: <rustc_typeck::collect::find_existential_constraints::ConstraintLocator<'a, 'tcx> as rustc::hir::intravisit::Visitor<'tcx>>::visit_impl_item\r\n  20: rustc::hir::intravisit::walk_item\r\n  21: rustc_typeck::collect::find_existential_constraints\r\n  22: rustc_typeck::collect::type_of\r\n  23: rustc::ty::query::__query_compute::type_of\r\n  24: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors<'tcx> for rustc::ty::query::queries::type_of<'tcx>>::compute\r\n  25: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  26: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::get_query\r\n  27: <rustc_typeck::collect::CollectItemTypesVisitor<'a, 'tcx> as rustc::hir::intravisit::Visitor<'tcx>>::visit_impl_item\r\n  28: rustc::hir::map::Map::visit_item_likes_in_module\r\n  29: rustc_typeck::collect::collect_mod_item_types\r\n  30: rustc::ty::query::__query_compute::collect_mod_item_types\r\n  31: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors<'tcx> for rustc::ty::query::queries::collect_mod_item_types<'tcx>>::compute\r\n  32: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  33: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::get_query\r\n  34: rustc_typeck::collect::collect_item_types\r\n  35: rustc::util::common::time\r\n  36: rustc_typeck::check_crate\r\n  37: <std::thread::local::LocalKey<T>>::with\r\n  38: rustc::ty::context::TyCtxt::create_and_enter\r\n  39: rustc_driver::driver::compile_input\r\n  40: rustc_driver::run_compiler_with_pool\r\n  41: <scoped_tls::ScopedKey<T>>::set\r\n  42: rustc_driver::run_compiler\r\n  43: syntax::with_globals\r\n  44: __rust_maybe_catch_panic\r\n             at src/libpanic_unwind/lib.rs:87\r\n  45: <F as alloc::boxed::FnBox<A>>::call_box\r\n  46: std::sys::unix::thread::Thread::new::thread_start\r\n             at /rustc/fc50f328b0353b285421b8ff5d4100966387a997/src/liballoc/boxed.rs:759\r\n             at src/libstd/sys_common/thread.rs:14\r\n             at src/libstd/sys/unix/thread.rs:81\r\n  47: start_thread\r\n  48: __clone\r\nquery stack during panic:\r\n#0 [typeck_tables_of] processing `<&() as Bug>::FUN`\r\n#1 [type_of] processing `<&() as Bug>::Item`\r\n#2 [collect_mod_item_types] collecting item types in top-level module\r\nend of query stack\r\nerror: aborting due to 2 previous errors\r\n\r\nSome errors occurred: E0277, E0658.\r\nFor more information about an error, try `rustc --explain E0277`.\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.34.1 (fc50f328b 2019-04-24) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C codegen-units=1 -C debuginfo=2 --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nerror: Could not compile `playground`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/60371/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/60371/timeline", "performed_via_github_app": null, "state_reason": "completed"}