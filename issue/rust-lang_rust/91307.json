{"url": "https://api.github.com/repos/rust-lang/rust/issues/91307", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/91307/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/91307/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/91307/events", "html_url": "https://github.com/rust-lang/rust/issues/91307", "id": 1065180151, "node_id": "I_kwDOAAsO6M4_fVv3", "number": 91307, "title": "Syntax errors in assembly included from another file produce confusing output", "user": {"login": "ketsuban", "id": 5253816, "node_id": "MDQ6VXNlcjUyNTM4MTY=", "avatar_url": "https://avatars.githubusercontent.com/u/5253816?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ketsuban", "html_url": "https://github.com/ketsuban", "followers_url": "https://api.github.com/users/ketsuban/followers", "following_url": "https://api.github.com/users/ketsuban/following{/other_user}", "gists_url": "https://api.github.com/users/ketsuban/gists{/gist_id}", "starred_url": "https://api.github.com/users/ketsuban/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ketsuban/subscriptions", "organizations_url": "https://api.github.com/users/ketsuban/orgs", "repos_url": "https://api.github.com/users/ketsuban/repos", "events_url": "https://api.github.com/users/ketsuban/events{/privacy}", "received_events_url": "https://api.github.com/users/ketsuban/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-11-28T03:47:12Z", "updated_at": "2021-11-28T03:47:12Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The following is a sufficiently supported pattern in Rust to get [a mention in the unstable book](https://doc.rust-lang.org/nightly/unstable-book/library-features/global-asm.html).\r\n\r\n```rust\r\n#![feature(global_asm)]\r\nglobal_asm!(include_str!(\"something_neato.s\"));\r\n```\r\n\r\nHowever, if the included assembly contains a syntax error (such as the ARM instruction `push {r2, r3, r12, lr}` - the solution* is to double the curly brackets to prevent the compiler from interpreting them as a template string) the error you get is somewhat confusing since it blames a seemingly arbitrary point potentially in a completely different source file from the actual error.\r\n\r\n```\r\nerror: invalid asm template string: expected `'}'`, found `','`\r\n  --> src\\bit_utils.rs:36:18\r\n   |\r\n36 |   let mask = (((1_u64 << (H - L + 1)) - 1) << L) as u16;\r\n   |               -  ^ expected `}` in asm template string\r\n   |               |\r\n   |               because of this opening brace\r\n   |\r\n  ::: src\\lib.rs:6:13\r\n   |\r\n6  | global_asm!(include_str!(\"rt0.S\"));\r\n   |             --------------------- in this macro invocation\r\n   |\r\n   = note: if you intended to print `{`, you can escape it using `{{`\r\n```\r\n\r\nThe correct error here would presumably look something like this.\r\n\r\n```\r\nerror: invalid asm template string: expected `'}'`, found `','`\r\n  --> src\\rt0.S:98:12\r\n   |\r\n98 |   push  {r2, r3, r12, lr}\r\n   |         -  ^ expected `}` in asm template string\r\n   |         |\r\n   |         because of this opening brace\r\n   |\r\n  ::: src\\lib.rs:6:13\r\n   |\r\n6  | global_asm!(include_str!(\"rt0.S\"));\r\n   |             --------------------- in this macro invocation\r\n   |\r\n   = note: if you intended to print `{`, you can escape it using `{{`\r\n```\r\n\r\nThis may be related to #81751 - I'm not familiar enough with compiler internals to say, so I erred on the side of posting a new issue.\r\n\r\n*or at least *a* solution - another would be to special-case this pattern as unable to use template strings", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/91307/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/91307/timeline", "performed_via_github_app": null, "state_reason": null}