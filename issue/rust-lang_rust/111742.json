{"url": "https://api.github.com/repos/rust-lang/rust/issues/111742", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/111742/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/111742/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/111742/events", "html_url": "https://github.com/rust-lang/rust/issues/111742", "id": 1716289654, "node_id": "I_kwDOAAsO6M5mTIB2", "number": 111742, "title": "Rustc panics if a const generic has default value including a const", "user": {"login": "zNoctum", "id": 46860055, "node_id": "MDQ6VXNlcjQ2ODYwMDU1", "avatar_url": "https://avatars.githubusercontent.com/u/46860055?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zNoctum", "html_url": "https://github.com/zNoctum", "followers_url": "https://api.github.com/users/zNoctum/followers", "following_url": "https://api.github.com/users/zNoctum/following{/other_user}", "gists_url": "https://api.github.com/users/zNoctum/gists{/gist_id}", "starred_url": "https://api.github.com/users/zNoctum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zNoctum/subscriptions", "organizations_url": "https://api.github.com/users/zNoctum/orgs", "repos_url": "https://api.github.com/users/zNoctum/repos", "events_url": "https://api.github.com/users/zNoctum/events{/privacy}", "received_events_url": "https://api.github.com/users/zNoctum/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}, {"id": 2341291797, "node_id": "MDU6TGFiZWwyMzQxMjkxNzk3", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-generic_const_exprs", "name": "F-generic_const_exprs", "color": "f9c0cc", "default": false, "description": "`#![feature(generic_const_exprs)]`"}, {"id": 5226739262, "node_id": "LA_kwDOAAsO6M8AAAABN4m2Pg", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-incomplete-features", "name": "requires-incomplete-features", "color": "76dcde", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2023-05-18T21:26:12Z", "updated_at": "2023-05-19T19:57:16Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n-->\r\n\r\n### Code\r\n\r\n```Rust\r\n#![allow(incomplete_features)]\r\n#![feature(generic_const_exprs)]\r\n\r\nconst CONST: u32 = 0;\r\nstruct Test<const N: u32, const M: u32 = { CONST/* Must be a const and not a Literal */ }> where [(); N as usize]: , ([u32; N as usize]);\r\n\r\nfn main() {\r\n    let _: Test<1>;\r\n}\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nbinary: rustc\r\ncommit-hash: e9e1bbc7a820c472b39d3de54b3049bf14050655\r\ncommit-date: 2023-05-17\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.71.0-nightly\r\nLLVM version: 16.0.2\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nerror: internal compiler error: compiler/rustc_middle/src/ty/subst.rs:933:9: const parameter `M/#1` (Const { ty: u32, kind: M/#1 }/1) out of range when substituting substs=[Const { ty: u32, kind: Leaf(0x00000001) }]\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\n   Compiling explody v0.1.0 (/home/user/projects/explody)\r\nerror: where clauses are not allowed before tuple struct bodies\r\n --> src/main.rs:5:53\r\n  |\r\n5 | struct Test<const N: u32, const M: u32 = { CONST }> where [(); N as usize]: , ([u32; N as usize]);\r\n  |        ----                                         ^^^^^^^^^^^^^^^^^^^^^^^^^ ------------------- the struct body\r\n  |        |                                            |\r\n  |        while parsing this tuple struct              unexpected where clause\r\n  |\r\nhelp: move the body before the where clause\r\n  |\r\n5 - struct Test<const N: u32, const M: u32 = { CONST }> where [(); N as usize]: , ([u32; N as usize]);\r\n5 + struct Test<const N: u32, const M: u32 = { CONST }>([u32; N as usize]) where [(); N as usize]: ;\r\n  |\r\n\r\nerror: internal compiler error: compiler/rustc_middle/src/ty/subst.rs:933:9: const parameter `M/#1` (Const { ty: u32, kind: M/#1 }/1) out of range when substituting substs=[Const { ty: u32, kind: Leaf(0x00000001) }]\r\n\r\nthread 'rustc' panicked at 'Box<dyn Any>', /rustc/e9e1bbc7a820c472b39d3de54b3049bf14050655/compiler/rustc_errors/src/lib.rs:1651:9\r\nstack backtrace:\r\n   0: std::panicking::begin_panic::<rustc_errors::ExplicitBug>\r\n   1: <rustc_errors::HandlerInner>::bug::<alloc::string::String>\r\n   2: <rustc_errors::Handler>::bug::<alloc::string::String>\r\n   3: rustc_middle::util::bug::opt_span_bug_fmt::<rustc_span::span_encoding::Span>::{closure#0}\r\n   4: rustc_middle::ty::context::tls::with_opt::<rustc_middle::util::bug::opt_span_bug_fmt<rustc_span::span_encoding::Span>::{closure#0}, !>::{closure#0}\r\n   5: rustc_middle::ty::context::tls::with_context_opt::<rustc_middle::ty::context::tls::with_opt<rustc_middle::util::bug::opt_span_bug_fmt<rustc_span::span_encoding::Span>::{closure#0}, !>::{closure#0}, !>\r\n   6: rustc_middle::util::bug::bug_fmt\r\n   7: <rustc_middle::ty::subst::SubstFolder>::const_param_out_of_range\r\n   8: <&rustc_middle::ty::list::List<rustc_middle::ty::subst::GenericArg> as rustc_type_ir::fold::TypeFoldable<rustc_middle::ty::context::TyCtxt>>::try_fold_with::<rustc_middle::ty::subst::SubstFolder>\r\n   9: <rustc_middle::ty::consts::Const as rustc_type_ir::fold::TypeSuperFoldable<rustc_middle::ty::context::TyCtxt>>::super_fold_with::<rustc_middle::ty::subst::SubstFolder>\r\n  10: <rustc_middle::ty::Ty as rustc_type_ir::fold::TypeSuperFoldable<rustc_middle::ty::context::TyCtxt>>::super_fold_with::<rustc_middle::ty::subst::SubstFolder>\r\n  11: <rustc_middle::ty::subst::GenericArg as rustc_type_ir::fold::TypeFoldable<rustc_middle::ty::context::TyCtxt>>::try_fold_with::<rustc_middle::ty::subst::SubstFolder>\r\n  12: <alloc::vec::Vec<rustc_middle::ty::Predicate> as alloc::vec::spec_extend::SpecExtend<rustc_middle::ty::Predicate, core::iter::adapters::map::Map<core::slice::iter::Iter<(rustc_middle::ty::Predicate, rustc_span::span_encoding::Span)>, <rustc_middle::ty::generics::GenericPredicates>::instantiate_into::{closure#0}>>>::spec_extend\r\n  13: <rustc_middle::ty::generics::GenericPredicates>::instantiate_into\r\n  14: <rustc_trait_selection::traits::wf::WfPredicates>::nominal_obligations_inner\r\n  15: <rustc_trait_selection::traits::wf::WfPredicates>::compute\r\n  16: <rustc_trait_selection::traits::fulfill::FulfillProcessor as rustc_data_structures::obligation_forest::ObligationProcessor>::process_obligation\r\n  17: <rustc_data_structures::obligation_forest::ObligationForest<rustc_trait_selection::traits::fulfill::PendingPredicateObligation>>::process_obligations::<rustc_trait_selection::traits::fulfill::FulfillProcessor>\r\n  18: <rustc_hir_typeck::fn_ctxt::FnCtxt>::type_inference_fallback\r\n  19: rustc_hir_typeck::typeck\r\n  20: <rustc_query_impl::dynamic_query::typeck::{closure#2} as core::ops::function::FnOnce<(rustc_middle::ty::context::TyCtxt, rustc_span::def_id::LocalDefId)>>::call_once\r\n  21: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::DynamicConfig<rustc_query_system::query::caches::VecCache<rustc_span::def_id::LocalDefId, rustc_middle::query::erase::Erased<[u8; 8]>>, false, false, false>, rustc_query_impl::plumbing::QueryCtxt, true>\r\n  22: rustc_query_system::query::plumbing::force_query::<rustc_query_impl::DynamicConfig<rustc_query_system::query::caches::VecCache<rustc_span::def_id::LocalDefId, rustc_middle::query::erase::Erased<[u8; 8]>>, false, false, false>, rustc_query_impl::plumbing::QueryCtxt>\r\n  23: <rustc_query_impl::plumbing::query_callback<rustc_query_impl::queries::typeck>::{closure#0} as core::ops::function::FnOnce<(rustc_middle::ty::context::TyCtxt, rustc_query_system::dep_graph::dep_node::DepNode<rustc_middle::dep_graph::dep_node::DepKind>)>>::call_once\r\n  24: <rustc_query_system::dep_graph::graph::DepGraphData<rustc_middle::dep_graph::dep_node::DepKind>>::try_mark_previous_green::<rustc_query_impl::plumbing::QueryCtxt>\r\n  25: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::DynamicConfig<rustc_query_system::query::caches::VecCache<rustc_span::def_id::LocalDefId, rustc_middle::query::erase::Erased<[u8; 8]>>, false, false, false>, rustc_query_impl::plumbing::QueryCtxt, true>\r\n  26: rustc_hir_analysis::check_crate\r\n  27: rustc_interface::passes::analysis\r\n  28: <rustc_query_impl::dynamic_query::analysis::{closure#2} as core::ops::function::FnOnce<(rustc_middle::ty::context::TyCtxt, ())>>::call_once\r\n  29: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::DynamicConfig<rustc_query_system::query::caches::SingleCache<rustc_middle::query::erase::Erased<[u8; 1]>>, false, false, false>, rustc_query_impl::plumbing::QueryCtxt, true>\r\n  30: rustc_query_impl::get_query_incr::analysis\r\n  31: <rustc_interface::queries::QueryResult<&rustc_middle::ty::context::GlobalCtxt>>::enter::<core::result::Result<(), rustc_span::ErrorGuaranteed>, rustc_driver_impl::run_compiler::{closure#1}::{closure#2}::{closure#4}>\r\n  32: <rustc_interface::interface::Compiler>::enter::<rustc_driver_impl::run_compiler::{closure#1}::{closure#2}, core::result::Result<core::option::Option<rustc_interface::queries::Linker>, rustc_span::ErrorGuaranteed>>\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.71.0-nightly (e9e1bbc7a 2023-05-17) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: --crate-type bin -C embed-bitcode=no -C debuginfo=2 -C incremental=[REDACTED]\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [typeck] type-checking `main`\r\n#1 [used_trait_imports] finding used_trait_imports `main`\r\n#2 [analysis] running analysis passes on this crate\r\nend of query stack\r\nthere was a panic while trying to force a dep node\r\ntry_mark_green dep node stack:\r\n#0 used_trait_imports(explody[44bf]::main)\r\nend of try_mark_green dep node stack\r\nerror: could not compile `explody` (bin \"explody\") due to previous error\r\n```\r\n\r\n</p>\r\n</details>\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/111742/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/111742/timeline", "performed_via_github_app": null, "state_reason": null}