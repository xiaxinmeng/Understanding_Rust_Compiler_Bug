{"url": "https://api.github.com/repos/rust-lang/rust/issues/2471", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/2471/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/2471/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/2471/events", "html_url": "https://github.com/rust-lang/rust/issues/2471", "id": 4829163, "node_id": "MDU6SXNzdWU0ODI5MTYz", "number": 2471, "title": "spawn_listener2", "user": {"login": "jesse99", "id": 425055, "node_id": "MDQ6VXNlcjQyNTA1NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/425055?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jesse99", "html_url": "https://github.com/jesse99", "followers_url": "https://api.github.com/users/jesse99/followers", "following_url": "https://api.github.com/users/jesse99/following{/other_user}", "gists_url": "https://api.github.com/users/jesse99/gists{/gist_id}", "starred_url": "https://api.github.com/users/jesse99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jesse99/subscriptions", "organizations_url": "https://api.github.com/users/jesse99/orgs", "repos_url": "https://api.github.com/users/jesse99/repos", "events_url": "https://api.github.com/users/jesse99/events{/privacy}", "received_events_url": "https://api.github.com/users/jesse99/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2012-05-31T03:02:18Z", "updated_at": "2012-06-07T17:55:08Z", "closed_at": "2012-06-07T17:55:08Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Seeing how there is a comm::select2 I think that it would be useful to have a spawn_listener2. Fwiw the use case I have in mind is a task that allows other tasks to get copies of and mutate state shared by the tasks:\n\n```\nfn manage_state(get_state_port: comm::port<comm::chan<str>>, set_state_port: comm::port<str>)\n{\n    let mut state = \"default\";\n\n    loop\n    {\n        alt comm::select2(get_state_port, set_state_port)\n        {\n            either::left(channel)\n            {\n                comm::send(channel, copy(state));\n            }\n            either::right(new_state)\n            {\n                state = new_state;\n            }\n        }\n    }\n}\n```\n", "closed_by": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/2471/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/2471/timeline", "performed_via_github_app": null, "state_reason": "completed"}