{"url": "https://api.github.com/repos/rust-lang/rust/issues/6820", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/6820/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/6820/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/6820/events", "html_url": "https://github.com/rust-lang/rust/issues/6820", "id": 14920855, "node_id": "MDU6SXNzdWUxNDkyMDg1NQ==", "number": 6820, "title": "libextra takes a very long time to build", "user": {"login": "Aatch", "id": 342416, "node_id": "MDQ6VXNlcjM0MjQxNg==", "avatar_url": "https://avatars.githubusercontent.com/u/342416?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aatch", "html_url": "https://github.com/Aatch", "followers_url": "https://api.github.com/users/Aatch/followers", "following_url": "https://api.github.com/users/Aatch/following{/other_user}", "gists_url": "https://api.github.com/users/Aatch/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aatch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aatch/subscriptions", "organizations_url": "https://api.github.com/users/Aatch/orgs", "repos_url": "https://api.github.com/users/Aatch/repos", "events_url": "https://api.github.com/users/Aatch/events{/privacy}", "received_events_url": "https://api.github.com/users/Aatch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-05-30T01:11:08Z", "updated_at": "2013-05-30T03:30:51Z", "closed_at": "2013-05-30T03:30:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This is mostly spend during the LLVM passes, specifically this breakdown:\n\n```\n===-------------------------------------------------------------------------===\n                      Instruction Selection and Scheduling\n===-------------------------------------------------------------------------===\n  Total Execution Time: 6.9833 seconds (6.7659 wall clock)\n\n   ---User Time---   --System Time--   --User+System--   ---Wall Time---  --- Name ---\n   1.7633 ( 26.6%)   0.1033 ( 29.8%)   1.8667 ( 26.7%)   1.8131 ( 26.8%)  Instruction Selection\n   1.6800 ( 25.3%)   0.0867 ( 25.0%)   1.7667 ( 25.3%)   1.6579 ( 24.5%)  Instruction Scheduling\n   0.9167 ( 13.8%)   0.0567 ( 16.3%)   0.9733 ( 13.9%)   0.9297 ( 13.7%)  Instruction Creation\n   0.7833 ( 11.8%)   0.0233 (  6.7%)   0.8067 ( 11.6%)   0.8096 ( 12.0%)  DAG Combining 1\n   0.4667 (  7.0%)   0.0267 (  7.7%)   0.4933 (  7.1%)   0.5465 (  8.1%)  DAG Legalization\n   0.4567 (  6.9%)   0.0133 (  3.8%)   0.4700 (  6.7%)   0.4290 (  6.3%)  DAG Combining 2\n   0.3900 (  5.9%)   0.0200 (  5.8%)   0.4100 (  5.9%)   0.3805 (  5.6%)  Type Legalization\n   0.0967 (  1.5%)   0.0167 (  4.8%)   0.1133 (  1.6%)   0.0888 (  1.3%)  Instruction Scheduling Cleanup\n   0.0500 (  0.8%)   0.0000 (  0.0%)   0.0500 (  0.7%)   0.0671 (  1.0%)  Vector Legalization\n   0.0333 (  0.5%)   0.0000 (  0.0%)   0.0333 (  0.5%)   0.0438 (  0.6%)  DAG Combining after legalize types\n   6.6367 (100.0%)   0.3467 (100.0%)   6.9833 (100.0%)   6.7659 (100.0%)  Total\n\n===-------------------------------------------------------------------------===\n                                 DWARF Emission\n===-------------------------------------------------------------------------===\n  Total Execution Time: 0.2067 seconds (0.2064 wall clock)\n\n   ---User Time---   --System Time--   --User+System--   ---Wall Time---  --- Name ---\n   0.2000 ( 98.4%)   0.0033 (100.0%)   0.2033 ( 98.4%)   0.2007 ( 97.2%)  DWARF Exception Writer\n   0.0033 (  1.6%)   0.0000 (  0.0%)   0.0033 (  1.6%)   0.0057 (  2.8%)  DWARF Debug Writer\n   0.2033 (100.0%)   0.0033 (100.0%)   0.2067 (100.0%)   0.2064 (100.0%)  Total\n\n===-------------------------------------------------------------------------===\n                      ... Pass execution timing report ...\n===-------------------------------------------------------------------------===\n  Total Execution Time: 595.2133 seconds (595.9404 wall clock)\n\n   ---User Time---   --System Time--   --User+System--   ---Wall Time---  --- Name ---\n  344.4500 ( 58.6%)   0.0133 (  0.2%)  344.4633 ( 57.9%)  344.8825 ( 57.9%)  Loop Invariant Code Motion\n  90.9533 ( 15.5%)   2.7400 ( 35.9%)  93.6933 ( 15.7%)  93.8664 ( 15.8%)  Value Propagation\n  82.5733 ( 14.1%)   2.4733 ( 32.4%)  85.0467 ( 14.3%)  85.1964 ( 14.3%)  Value Propagation\n  10.7167 (  1.8%)   0.5633 (  7.4%)  11.2800 (  1.9%)  11.2990 (  1.9%)  X86 DAG->DAG Instruction Selection\n   7.8900 (  1.3%)   0.0200 (  0.3%)   7.9100 (  1.3%)   7.9360 (  1.3%)  Dead Store Elimination\n   6.7900 (  1.2%)   0.1200 (  1.6%)   6.9100 (  1.2%)   6.9070 (  1.2%)  Global Value Numbering\n   4.1200 (  0.7%)   0.0333 (  0.4%)   4.1533 (  0.7%)   4.1638 (  0.7%)  Lazy Value Information Analysis\n   3.8533 (  0.7%)   0.1333 (  1.7%)   3.9866 (  0.7%)   3.9785 (  0.7%)  Function Integration/Inlining\n   3.8600 (  0.7%)   0.1667 (  2.2%)   4.0267 (  0.7%)   3.9677 (  0.7%)  Combine redundant instructions\n   3.7167 (  0.6%)   0.0267 (  0.3%)   3.7433 (  0.6%)   3.7838 (  0.6%)  Lazy Value Information Analysis\n   3.4300 (  0.6%)   0.0500 (  0.7%)   3.4800 (  0.6%)   3.5477 (  0.6%)  Combine redundant instructions\n   2.8533 (  0.5%)   0.0800 (  1.0%)   2.9333 (  0.5%)   2.9895 (  0.5%)  Combine redundant instructions\n   1.8967 (  0.3%)   0.3433 (  4.5%)   2.2400 (  0.4%)   2.2682 (  0.4%)  Dominator Tree Construction\n   1.7967 (  0.3%)   0.2333 (  3.1%)   2.0300 (  0.3%)   2.0185 (  0.3%)  Simplify the CFG\n   1.9900 (  0.3%)   0.0500 (  0.7%)   2.0400 (  0.3%)   2.0104 (  0.3%)  Combine redundant instructions\n   1.2500 (  0.2%)   0.0667 (  0.9%)   1.3167 (  0.2%)   1.3386 (  0.2%)  X86 Assembly / Object Emitter\n   1.2533 (  0.2%)   0.0200 (  0.3%)   1.2733 (  0.2%)   1.2525 (  0.2%)  Fast Register Allocator\n   1.1433 (  0.2%)   0.0133 (  0.2%)   1.1567 (  0.2%)   1.1257 (  0.2%)  MemCpy Optimization\n   0.9367 (  0.2%)   0.0133 (  0.2%)   0.9500 (  0.2%)   0.9755 (  0.2%)  Early CSE\n   0.8500 (  0.1%)   0.0100 (  0.1%)   0.8600 (  0.1%)   0.8805 (  0.1%)  Early CSE\n   0.7400 (  0.1%)   0.0567 (  0.7%)   0.7967 (  0.1%)   0.7889 (  0.1%)  Combine redundant instructions\n   0.6600 (  0.1%)   0.0167 (  0.2%)   0.6767 (  0.1%)   0.5870 (  0.1%)  Reassociate expressions\n   0.5967 (  0.1%)   0.0133 (  0.2%)   0.6100 (  0.1%)   0.5797 (  0.1%)  Sparse Conditional Constant Propagation\n   0.5600 (  0.1%)   0.0100 (  0.1%)   0.5700 (  0.1%)   0.5748 (  0.1%)  Module Verifier\n   0.4800 (  0.1%)   0.0067 (  0.1%)   0.4867 (  0.1%)   0.5019 (  0.1%)  Jump Threading\n   0.5000 (  0.1%)   0.0133 (  0.2%)   0.5133 (  0.1%)   0.5009 (  0.1%)  Jump Threading\n   0.4300 (  0.1%)   0.0100 (  0.1%)   0.4400 (  0.1%)   0.4926 (  0.1%)  Module Verifier\n   0.4133 (  0.1%)   0.0133 (  0.2%)   0.4267 (  0.1%)   0.4251 (  0.1%)  Prologue/Epilogue Insertion & Frame Finalization\n   0.3567 (  0.1%)   0.0367 (  0.5%)   0.3933 (  0.1%)   0.4110 (  0.1%)  Induction Variable Simplification\n   0.3333 (  0.1%)   0.0100 (  0.1%)   0.3433 (  0.1%)   0.3968 (  0.1%)  Remove redundant instructions\n   0.3867 (  0.1%)   0.0033 (  0.0%)   0.3900 (  0.1%)   0.3657 (  0.1%)  Aggressive Dead Code Elimination\n   0.3533 (  0.1%)   0.0167 (  0.2%)   0.3700 (  0.1%)   0.3580 (  0.1%)  Natural Loop Information\n   0.2233 (  0.0%)   0.0100 (  0.1%)   0.2333 (  0.0%)   0.2630 (  0.0%)  Dominator Tree Construction\n   0.3033 (  0.1%)   0.0033 (  0.0%)   0.3067 (  0.1%)   0.2572 (  0.0%)  Dominator Tree Construction\n   0.2333 (  0.0%)   0.0100 (  0.1%)   0.2433 (  0.0%)   0.2502 (  0.0%)  Simplify the CFG\n   0.2633 (  0.0%)   0.0000 (  0.0%)   0.2633 (  0.0%)   0.2483 (  0.0%)  Two-Address instruction pass\n   0.2167 (  0.0%)   0.0067 (  0.1%)   0.2233 (  0.0%)   0.2252 (  0.0%)  Interprocedural Sparse Conditional Constant Propagation\n   0.2400 (  0.0%)   0.0133 (  0.2%)   0.2533 (  0.0%)   0.2229 (  0.0%)  Natural Loop Information\n   0.2200 (  0.0%)   0.0067 (  0.1%)   0.2267 (  0.0%)   0.2041 (  0.0%)  Machine Function Analysis\n   0.1767 (  0.0%)   0.0267 (  0.3%)   0.2033 (  0.0%)   0.1948 (  0.0%)  Early CSE\n   0.2067 (  0.0%)   0.0033 (  0.0%)   0.2100 (  0.0%)   0.1879 (  0.0%)  Loop-Closed SSA Form Pass\n   0.1667 (  0.0%)   0.0000 (  0.0%)   0.1667 (  0.0%)   0.1751 (  0.0%)  Dominator Tree Construction\n   0.1633 (  0.0%)   0.0000 (  0.0%)   0.1633 (  0.0%)   0.1733 (  0.0%)  Simplify the CFG\n   0.1867 (  0.0%)   0.0000 (  0.0%)   0.1867 (  0.0%)   0.1629 (  0.0%)  Loop-Closed SSA Form Pass\n   0.1533 (  0.0%)   0.0067 (  0.1%)   0.1600 (  0.0%)   0.1571 (  0.0%)  Loop-Closed SSA Form Pass\n   0.1367 (  0.0%)   0.0033 (  0.0%)   0.1400 (  0.0%)   0.1532 (  0.0%)  Loop-Closed SSA Form Pass\n   0.1067 (  0.0%)   0.0033 (  0.0%)   0.1100 (  0.0%)   0.1364 (  0.0%)  Canonicalize natural loops\n   0.1333 (  0.0%)   0.0000 (  0.0%)   0.1333 (  0.0%)   0.1325 (  0.0%)  Global Variable Optimizer\n   0.1100 (  0.0%)   0.0267 (  0.3%)   0.1367 (  0.0%)   0.1225 (  0.0%)  Module Verifier\n   0.1100 (  0.0%)   0.0033 (  0.0%)   0.1133 (  0.0%)   0.1223 (  0.0%)  X86 FP Stackifier\n   0.1400 (  0.0%)   0.0033 (  0.0%)   0.1433 (  0.0%)   0.1222 (  0.0%)  Dominator Tree Construction\n   0.1033 (  0.0%)   0.0100 (  0.1%)   0.1133 (  0.0%)   0.1170 (  0.0%)  Unroll loops\n   0.1167 (  0.0%)   0.0000 (  0.0%)   0.1167 (  0.0%)   0.1162 (  0.0%)  Dead Global Elimination\n   0.1367 (  0.0%)   0.0000 (  0.0%)   0.1367 (  0.0%)   0.1149 (  0.0%)  Post-RA pseudo instruction expansion pass\n   0.1000 (  0.0%)   0.0100 (  0.1%)   0.1100 (  0.0%)   0.1107 (  0.0%)  Dominator Tree Construction\n   0.0967 (  0.0%)   0.0000 (  0.0%)   0.0967 (  0.0%)   0.1028 (  0.0%)  Simplify the CFG\n   0.0900 (  0.0%)   0.0133 (  0.2%)   0.1033 (  0.0%)   0.1023 (  0.0%)  Deduce function attributes\n   0.0767 (  0.0%)   0.0067 (  0.1%)   0.0833 (  0.0%)   0.0962 (  0.0%)  Dominator Tree Construction\n   0.1067 (  0.0%)   0.0067 (  0.1%)   0.1133 (  0.0%)   0.0935 (  0.0%)  Canonicalize natural loops\n   0.1000 (  0.0%)   0.0067 (  0.1%)   0.1067 (  0.0%)   0.0899 (  0.0%)  Loop-Closed SSA Form Pass\n   0.0767 (  0.0%)   0.0000 (  0.0%)   0.0767 (  0.0%)   0.0744 (  0.0%)  Dead Argument Elimination\n   0.0500 (  0.0%)   0.0033 (  0.0%)   0.0533 (  0.0%)   0.0663 (  0.0%)  No target information\n   0.0533 (  0.0%)   0.0000 (  0.0%)   0.0533 (  0.0%)   0.0614 (  0.0%)  Remove unused exception handling info\n   0.0367 (  0.0%)   0.0000 (  0.0%)   0.0367 (  0.0%)   0.0613 (  0.0%)  Simplify well-known library calls\n   0.0533 (  0.0%)   0.0067 (  0.1%)   0.0600 (  0.0%)   0.0612 (  0.0%)  No Alias Analysis (always returns 'may' alias)\n   0.0767 (  0.0%)   0.0000 (  0.0%)   0.0767 (  0.0%)   0.0610 (  0.0%)  Unswitch loops\n   0.0567 (  0.0%)   0.0000 (  0.0%)   0.0567 (  0.0%)   0.0572 (  0.0%)  Basic CallGraph Construction\n   0.0433 (  0.0%)   0.0033 (  0.0%)   0.0467 (  0.0%)   0.0550 (  0.0%)  Eliminate PHI nodes for register allocation\n   0.0433 (  0.0%)   0.0067 (  0.1%)   0.0500 (  0.0%)   0.0547 (  0.0%)  Canonicalize natural loops\n   0.0533 (  0.0%)   0.0000 (  0.0%)   0.0533 (  0.0%)   0.0487 (  0.0%)  Tail Call Elimination\n   0.0467 (  0.0%)   0.0000 (  0.0%)   0.0467 (  0.0%)   0.0433 (  0.0%)  Expand ISel Pseudo-instructions\n   0.0367 (  0.0%)   0.0033 (  0.0%)   0.0400 (  0.0%)   0.0405 (  0.0%)  Canonicalize natural loops\n   0.0567 (  0.0%)   0.0033 (  0.0%)   0.0600 (  0.0%)   0.0395 (  0.0%)  Memory Dependence Analysis\n   0.0400 (  0.0%)   0.0033 (  0.0%)   0.0433 (  0.0%)   0.0384 (  0.0%)  Remove unreachable blocks from the CFG\n   0.0467 (  0.0%)   0.0067 (  0.1%)   0.0533 (  0.0%)   0.0355 (  0.0%)  Scalar Evolution Analysis\n   0.0200 (  0.0%)   0.0033 (  0.0%)   0.0233 (  0.0%)   0.0300 (  0.0%)  Memory Dependence Analysis\n   0.0200 (  0.0%)   0.0000 (  0.0%)   0.0200 (  0.0%)   0.0271 (  0.0%)  Scalar Evolution Analysis\n   0.0300 (  0.0%)   0.0033 (  0.0%)   0.0333 (  0.0%)   0.0265 (  0.0%)  Bundle Machine CFG Edges\n   0.0167 (  0.0%)   0.0067 (  0.1%)   0.0233 (  0.0%)   0.0227 (  0.0%)  Basic Alias Analysis (stateless AA impl)\n   0.0200 (  0.0%)   0.0067 (  0.1%)   0.0267 (  0.0%)   0.0225 (  0.0%)  Basic Alias Analysis (stateless AA impl)\n   0.0200 (  0.0%)   0.0000 (  0.0%)   0.0200 (  0.0%)   0.0213 (  0.0%)  Memory Dependence Analysis\n   0.0067 (  0.0%)   0.0000 (  0.0%)   0.0067 (  0.0%)   0.0170 (  0.0%)  Preliminary module verification\n   0.0100 (  0.0%)   0.0033 (  0.0%)   0.0133 (  0.0%)   0.0160 (  0.0%)  Preliminary module verification\n   0.0067 (  0.0%)   0.0067 (  0.1%)   0.0133 (  0.0%)   0.0151 (  0.0%)  Delete dead loops\n   0.0200 (  0.0%)   0.0000 (  0.0%)   0.0200 (  0.0%)   0.0123 (  0.0%)  Exception handling preparation\n   0.0167 (  0.0%)   0.0000 (  0.0%)   0.0167 (  0.0%)   0.0121 (  0.0%)  Rotate Loops\n   0.0067 (  0.0%)   0.0000 (  0.0%)   0.0067 (  0.0%)   0.0113 (  0.0%)  Inline Cost Analysis\n   0.0200 (  0.0%)   0.0000 (  0.0%)   0.0200 (  0.0%)   0.0105 (  0.0%)  No Alias Analysis (always returns 'may' alias)\n   0.0067 (  0.0%)   0.0033 (  0.0%)   0.0100 (  0.0%)   0.0104 (  0.0%)  X86 Target Transform Info\n   0.0067 (  0.0%)   0.0033 (  0.0%)   0.0100 (  0.0%)   0.0103 (  0.0%)  Target independent code generator's TTI\n   0.0100 (  0.0%)   0.0000 (  0.0%)   0.0100 (  0.0%)   0.0102 (  0.0%)  No target information\n   0.0067 (  0.0%)   0.0000 (  0.0%)   0.0067 (  0.0%)   0.0063 (  0.0%)  Insert stack protectors\n   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0058 (  0.0%)  Unroll loops\n   0.0000 (  0.0%)   0.0033 (  0.0%)   0.0033 (  0.0%)   0.0054 (  0.0%)  Preliminary module verification\n   0.0067 (  0.0%)   0.0000 (  0.0%)   0.0067 (  0.0%)   0.0043 (  0.0%)  Analyze Machine Code For Garbage Collection\n   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0042 (  0.0%)  Local Stack Slot Allocation\n   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0040 (  0.0%)  Recognize loop idioms\n   0.0033 (  0.0%)   0.0000 (  0.0%)   0.0033 (  0.0%)   0.0040 (  0.0%)  Lower Garbage Collection Instructions\n   0.0000 (  0.0%)   0.0033 (  0.0%)   0.0033 (  0.0%)   0.0036 (  0.0%)  Target Library Information\n   0.0033 (  0.0%)   0.0000 (  0.0%)   0.0033 (  0.0%)   0.0018 (  0.0%)  Create Garbage Collector Module Metadata\n   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0012 (  0.0%)  Strip Unused Function Prototypes\n   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Merge Duplicate Global Constants\n   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Target Library Information\n   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Target Pass Configuration\n   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Machine Module Information\n  587.5766 (100.0%)   7.6367 (100.0%)  595.2133 (100.0%)  595.9404 (100.0%)  Total\n```\n\nThat is over 10 minutes of time. And yes, over 5 minutes of it is spent doing Loop Invariant Code Motion.\n\nPart of #6819\n", "closed_by": {"login": "Aatch", "id": 342416, "node_id": "MDQ6VXNlcjM0MjQxNg==", "avatar_url": "https://avatars.githubusercontent.com/u/342416?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aatch", "html_url": "https://github.com/Aatch", "followers_url": "https://api.github.com/users/Aatch/followers", "following_url": "https://api.github.com/users/Aatch/following{/other_user}", "gists_url": "https://api.github.com/users/Aatch/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aatch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aatch/subscriptions", "organizations_url": "https://api.github.com/users/Aatch/orgs", "repos_url": "https://api.github.com/users/Aatch/repos", "events_url": "https://api.github.com/users/Aatch/events{/privacy}", "received_events_url": "https://api.github.com/users/Aatch/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/6820/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/6820/timeline", "performed_via_github_app": null, "state_reason": "completed"}