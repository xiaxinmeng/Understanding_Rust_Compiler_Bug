{"url": "https://api.github.com/repos/rust-lang/rust/issues/111383", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/111383/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/111383/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/111383/events", "html_url": "https://github.com/rust-lang/rust/issues/111383", "id": 1701613828, "node_id": "I_kwDOAAsO6M5lbJEE", "number": 111383, "title": "E0623 diagnostic degraded by presence of method parameter", "user": {"login": "benschulz", "id": 10342420, "node_id": "MDQ6VXNlcjEwMzQyNDIw", "avatar_url": "https://avatars.githubusercontent.com/u/10342420?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benschulz", "html_url": "https://github.com/benschulz", "followers_url": "https://api.github.com/users/benschulz/followers", "following_url": "https://api.github.com/users/benschulz/following{/other_user}", "gists_url": "https://api.github.com/users/benschulz/gists{/gist_id}", "starred_url": "https://api.github.com/users/benschulz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benschulz/subscriptions", "organizations_url": "https://api.github.com/users/benschulz/orgs", "repos_url": "https://api.github.com/users/benschulz/repos", "events_url": "https://api.github.com/users/benschulz/events{/privacy}", "received_events_url": "https://api.github.com/users/benschulz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2023-05-09T08:36:15Z", "updated_at": "2023-06-04T20:36:42Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Code\n\n```Rust\nuse std::marker::PhantomData;\n\nimpl Trait for () {\n    type In<'a> = PhantomData<&'a ()>;\n\n    type Out<'a: 'b, 'b> = PhantomData<&'a ()>\n    where\n        Self: 'b;\n\n    fn m<'a, 'b>(&'b self, _: Self::In<'a>) -> Self::Out<'a, 'b> {\n        todo!()\n    }\n}\n\npub trait Trait {\n    type In<'build>;\n\n    type Out<'a: 'b, 'b>\n    where\n        Self: 'b;\n\n    fn m<'a, 'b>(&'b self, _: Self::In<'a>) -> Self::Out<'a, 'b>;\n}\n```\n\n\n### Current output\n\n```Shell\nCompiling playground v0.0.1 (/playground)\nerror[E0623]: lifetime mismatch\n  --> src/lib.rs:10:48\n   |\n10 |     fn m<'a, 'b>(&'b self, _: Self::In<'a>) -> Self::Out<'a, 'b> {\n   |                               ------------     ^^^^^^^^^^^^^^^^^\n   |                               |                |\n   |                               |                ...but data is returned here\n   |                               this parameter and the return type are declared with different lifetimes...\n\nFor more information about this error, try `rustc --explain E0623`.\nerror: could not compile `playground` due to previous error\n```\n\n\n### Desired output\n\n```Shell\nCompiling playground v0.0.1 (/playground)\nerror[E0478]: lifetime bound not satisfied\n  --> src/lib.rs:10:31\n   |\n10 |     fn m<'a, 'b>(&'b self, _: Self::In<'a>) -> Self::Out<'a, 'b> {\n   |                                                ^^^^^^^^^^^^^^^^^\n   |\nnote: lifetime parameter instantiated with the lifetime `'a` as defined here\n  --> src/lib.rs:10:10\n   |\n10 |     fn m<'a, 'b>(&'b self, _: Self::In<'a>) -> Self::Out<'a, 'b> {\n   |          ^^\nnote: but lifetime parameter must outlive the lifetime `'b` as defined here\n  --> src/lib.rs:10:14\n   |\n10 |     fn m<'a, 'b>(&'b self, _: Self::In<'a>) -> Self::Out<'a, 'b> {\n   |              ^^\n\nFor more information about this error, try `rustc --explain E0478`.\nerror: could not compile `playground` (lib) due to previous error\n```\n\n\n### Rationale and extra context\n\nHere's [a playground][BAD] demonstrating the poor diagnostic. When the method parameter is removed, the desired output [is emitted][GOOD].\n\nIt would be even better if the diagnostic pointed at the lifetime bound in line 6 in both cases. However, the primary concern should be that adding a (seemingly unrelated) method parameter can lead to a poorer diagnostic.\n\n[BAD]: https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021&gist=2c311c66a510bac86271ce40708df6bc\n[GOOD]: https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021&gist=a64544d05cfbcafa0e4751f7e354936c\n\n\n### Other cases\n\n_No response_\n\n### Anything else?\n\n_No response_\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"obeis\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/111383/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/111383/timeline", "performed_via_github_app": null, "state_reason": null}