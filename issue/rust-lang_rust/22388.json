{"url": "https://api.github.com/repos/rust-lang/rust/issues/22388", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/22388/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/22388/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/22388/events", "html_url": "https://github.com/rust-lang/rust/issues/22388", "id": 57754681, "node_id": "MDU6SXNzdWU1Nzc1NDY4MQ==", "number": 22388, "title": "need to split E0210 into two (\"type parameter not constrained by local type; only traits defined in current crate can be implemented for a type parameter\")", "user": {"login": "insaneinside", "id": 4030926, "node_id": "MDQ6VXNlcjQwMzA5MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/4030926?v=4", "gravatar_id": "", "url": "https://api.github.com/users/insaneinside", "html_url": "https://github.com/insaneinside", "followers_url": "https://api.github.com/users/insaneinside/followers", "following_url": "https://api.github.com/users/insaneinside/following{/other_user}", "gists_url": "https://api.github.com/users/insaneinside/gists{/gist_id}", "starred_url": "https://api.github.com/users/insaneinside/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/insaneinside/subscriptions", "organizations_url": "https://api.github.com/users/insaneinside/orgs", "repos_url": "https://api.github.com/users/insaneinside/repos", "events_url": "https://api.github.com/users/insaneinside/events{/privacy}", "received_events_url": "https://api.github.com/users/insaneinside/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2015-02-16T00:48:30Z", "updated_at": "2015-02-17T08:20:23Z", "closed_at": "2015-02-17T08:20:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As the example below demonstrates, rustc emits E0210 for a construct that does not match the description of that error.  The construct might not be valid, but for a different reason (see comments).\n\n``` rust\n/* Reduced-case example of possible bug(s) related to E0210 (type parameter not\n * constrained by local type).\n *\n * Observed behavior is emission of E0210 for the final `impl` below.  This is\n * incorrect because\n *\n *   - the type parameter, `T`, *is* constrained (must implement `Foo`), and\n *\n *   - using `#![feature(old_orphan_check)]` as suggested has no effect aside\n *     from causing rustc to emit a warning about the deprecated feature.\n */\n\n/* crate_type isn't important (this example works with bin, dylib, and\n * staticlib), but we're omitting `main`. \n */\n#![crate_type = \"staticlib\"]\n\n/* Note that this feature is enabled, and that we still get the error if we\n * disable it.\n */\n#![feature(old_orphan_check)]\n\n\n\n/* First, we define some trait in the local scope.  This will be the\n * constraining local type.\n */\ntrait Foo {\n    fn foo(&self) -> String;\n}\n\n\n/* These counterexamples may help narrow the search space.\n\n/* For the sake of completeness, let's demonstrate that defining a default\n * implementation for a trivial trait fails to trigger the error...\n */\ntrait Bar {}\nimpl<T> Bar for T where T: Foo {}\n\n/* ...as does defining a default implementation for a slightly-less-trivial\n * trait. \n */\ntrait Baz { fn baz(&self) -> String; }\nimpl<T> Baz for T where T: Foo {\n    fn baz(&self) {\n        self.foo()\n    }\n}\n\n*/\n\n\n/* But this one *does* trigger error E0210, despite `T` being clearly\n * constrained by `Foo` *and* using `#![feature(old_orphan_check)].\n *\n * This impl may contain another error (are blanket implementations allowed for\n * external traits?), however.\n */\nuse std::fmt;\nimpl<T> fmt::Debug for T where T: Foo {\n    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n        write!(f, \"{}\", self.foo())\n    }\n}\n```\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/22388/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/22388/timeline", "performed_via_github_app": null, "state_reason": "completed"}