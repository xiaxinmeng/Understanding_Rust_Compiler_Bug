{"url": "https://api.github.com/repos/rust-lang/rust/issues/76916", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/76916/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/76916/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/76916/events", "html_url": "https://github.com/rust-lang/rust/issues/76916", "id": 704863391, "node_id": "MDU6SXNzdWU3MDQ4NjMzOTE=", "number": 76916, "title": "strange memory layout for enums with repr in webassembly", "user": {"login": "Freax13", "id": 14952658, "node_id": "MDQ6VXNlcjE0OTUyNjU4", "avatar_url": "https://avatars.githubusercontent.com/u/14952658?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Freax13", "html_url": "https://github.com/Freax13", "followers_url": "https://api.github.com/users/Freax13/followers", "following_url": "https://api.github.com/users/Freax13/following{/other_user}", "gists_url": "https://api.github.com/users/Freax13/gists{/gist_id}", "starred_url": "https://api.github.com/users/Freax13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Freax13/subscriptions", "organizations_url": "https://api.github.com/users/Freax13/orgs", "repos_url": "https://api.github.com/users/Freax13/repos", "events_url": "https://api.github.com/users/Freax13/events{/privacy}", "received_events_url": "https://api.github.com/users/Freax13/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 474645165, "node_id": "MDU6TGFiZWw0NzQ2NDUxNjU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-wasm", "name": "O-wasm", "color": "6e6ec0", "default": false, "description": "Target: WASM (WebAssembly), http://webassembly.org/"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1944310735, "node_id": "MDU6TGFiZWwxOTQ0MzEwNzM1", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-layout", "name": "A-layout", "color": "f7e101", "default": false, "description": "Area: Memory layout of types"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-09-19T11:17:54Z", "updated_at": "2020-09-19T12:00:06Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI tried this code:\r\n\r\n```rust\r\n#[repr(u8)]\r\npub enum DirectEnum {\r\n    A(u32),\r\n    B(u32),\r\n}\r\n\r\n#[repr(u8)]\r\npub enum IndirectEnum {\r\n    A(Value),\r\n    B(Value),\r\n}\r\n\r\n#[repr(C)]\r\npub struct Value {\r\n    val: u32,\r\n}\r\n\r\n#[no_mangle]\r\npub extern \"C\" fn test_direct() {\r\n    unsafe { call_with_direct(DirectEnum::B(0xFFF)) }\r\n}\r\n\r\n#[no_mangle]\r\npub extern \"C\" fn test_indirect() {\r\n    unsafe { call_with_indirect(IndirectEnum::B(Value { val: 0xFFF })) }\r\n}\r\n\r\n#[link(wasm_import_module = \"something\")]\r\nextern \"C\" {\r\n    fn call_with_direct(a: DirectEnum);\r\n    fn call_with_indirect(a: IndirectEnum);\r\n}\r\n\r\n```\r\n\r\nand compiled it with `-C opt-level=3 --target wasm32-unknown-unknown` https://godbolt.org/z/cTqbMq\r\n\r\nI expected to see this happen: The code should be the same for `test_direct` and `test_indirect`. It should push two i32 values: 1 and 4096.\r\n\r\nInstead, this happened: `test_indirect` pushes 8 values instead of two: 1, 0, 0, 0, 255, 15, 0 and 0. The numbers pushed seem to depend on the bitsize of the repr meaning only 4 values get pushed for repr(u16)", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/76916/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/76916/timeline", "performed_via_github_app": null, "state_reason": null}