{"url": "https://api.github.com/repos/rust-lang/rust/issues/44367", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/44367/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/44367/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/44367/events", "html_url": "https://github.com/rust-lang/rust/issues/44367", "id": 255621983, "node_id": "MDU6SXNzdWUyNTU2MjE5ODM=", "number": 44367, "title": "repr(simd) is unsound", "user": {"login": "gnzlbg", "id": 904614, "node_id": "MDQ6VXNlcjkwNDYxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/904614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnzlbg", "html_url": "https://github.com/gnzlbg", "followers_url": "https://api.github.com/users/gnzlbg/followers", "following_url": "https://api.github.com/users/gnzlbg/following{/other_user}", "gists_url": "https://api.github.com/users/gnzlbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnzlbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnzlbg/subscriptions", "organizations_url": "https://api.github.com/users/gnzlbg/orgs", "repos_url": "https://api.github.com/users/gnzlbg/repos", "events_url": "https://api.github.com/users/gnzlbg/events{/privacy}", "received_events_url": "https://api.github.com/users/gnzlbg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 60344715, "node_id": "MDU6TGFiZWw2MDM0NDcxNQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-medium", "name": "P-medium", "color": "eb6420", "default": false, "description": "Medium priority"}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 246778137, "node_id": "MDU6TGFiZWwyNDY3NzgxMzc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/B-unstable", "name": "B-unstable", "color": "d304cb", "default": false, "description": "Implemented in the nightly compiler and unstable."}, {"id": 267612997, "node_id": "MDU6TGFiZWwyNjc2MTI5OTc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-unsound", "name": "I-unsound", "color": "e11d21", "default": false, "description": "Issue: A soundness hole (worst kind of bug), see: https://en.wikipedia.org/wiki/Soundness"}, {"id": 631737389, "node_id": "MDU6TGFiZWw2MzE3MzczODk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-simd", "name": "A-simd", "color": "f7e101", "default": false, "description": "Area: SIMD (Single Instruction Multiple Data)"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 68, "created_at": "2017-09-06T14:22:15Z", "updated_at": "2018-01-26T20:34:23Z", "closed_at": "2018-01-26T20:34:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The following should be discussed as part of an RFC for supporting portable vector types (`repr(simd)`) but the current behavior is unsound ([playground](https://play.rust-lang.org/?gist=65feeeae91031abb1e530defcd2a3be4&version=nightly)): \r\n\r\n```rust\r\n#![feature(repr_simd)]\r\n#![feature(target_feature)]\r\n#![allow(non_camel_case_types)]\r\n\r\n// Given a SIMD vector type:\r\n#[derive(Debug)]\r\n#[repr(simd)]\r\nstruct f32x8(f32, f32, f32, f32, \r\n             f32, f32, f32, f32);\r\n\r\n// and the following two functions:\r\n\r\n#[target_feature = \"+avx\"]\r\nfn foo() -> f32x8 { f32x8(0.,1.,2.,3.,4.,5.,6.,7.) }  // f32x8 will be a 256bit vector\r\n\r\n#[target_feature = \"+sse3\"]\r\nfn bar(arg: f32x8) {  // f32x8 will be 2x128bit vectors\r\n    println!(\"{:?} != f32x8(0, 1, 2, 3, 4, 5, 6, 7)\", arg);\r\n    // prints: f32x8(0, 1, 2, 3, 6, 0, 0, 0) != f32x8(0, 1, 2, 3, 4, 5, 6, 7)\r\n}\r\n\r\n// what are the semantics of the following when\r\n// executing on a machine that supports AVX?\r\nfn main() { bar(foo()); }\r\n```\r\n\r\nBasically, those two objects of type `f32x8` have a different layout, so `foo` and `bar` have a different ABI / calling convention. This can be introduced without `target_feature`, by compiling two crates with different `--target-cpu`s and linking them, but `target_feature` was used here for simplicity. ", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/44367/reactions", "total_count": 4, "+1": 4, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/44367/timeline", "performed_via_github_app": null, "state_reason": "completed"}