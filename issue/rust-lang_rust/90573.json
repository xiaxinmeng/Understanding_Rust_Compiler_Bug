{"url": "https://api.github.com/repos/rust-lang/rust/issues/90573", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/90573/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/90573/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/90573/events", "html_url": "https://github.com/rust-lang/rust/issues/90573", "id": 1044920202, "node_id": "I_kwDOAAsO6M4-SDeK", "number": 90573, "title": "HRTB with GAT behaving differently in associated type bound vs where clause", "user": {"login": "malthesr", "id": 25851939, "node_id": "MDQ6VXNlcjI1ODUxOTM5", "avatar_url": "https://avatars.githubusercontent.com/u/25851939?v=4", "gravatar_id": "", "url": "https://api.github.com/users/malthesr", "html_url": "https://github.com/malthesr", "followers_url": "https://api.github.com/users/malthesr/followers", "following_url": "https://api.github.com/users/malthesr/following{/other_user}", "gists_url": "https://api.github.com/users/malthesr/gists{/gist_id}", "starred_url": "https://api.github.com/users/malthesr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/malthesr/subscriptions", "organizations_url": "https://api.github.com/users/malthesr/orgs", "repos_url": "https://api.github.com/users/malthesr/repos", "events_url": "https://api.github.com/users/malthesr/events{/privacy}", "received_events_url": "https://api.github.com/users/malthesr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1485960423, "node_id": "MDU6TGFiZWwxNDg1OTYwNDIz", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-generic_associated_types", "name": "F-generic_associated_types", "color": "f9c0cc", "default": false, "description": "`#![feature(generic_associated_types)]` a.k.a. GATs"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-11-04T15:56:29Z", "updated_at": "2022-02-07T20:24:21Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI tried this code:\r\n\r\n```rust\r\n#![feature(generic_associated_types)]\r\n\r\npub trait Iterable {\r\n    type Iter<'a>: Iterator<Item = Self::Item<'a>>\r\n    where\r\n        Self: 'a;\r\n    type Item<'a>\r\n    where\r\n        Self: 'a;\r\n\r\n    fn iter(&self) -> Self::Iter<'_>;\r\n}\r\n\r\ntrait Bar {\r\n    type BarType;\r\n    type BarItem<'a>;\r\n}\r\n\r\ntrait Baz: Bar\r\nwhere\r\n    Self::BarType: for<'a> Iterable<Item<'a> = Self::BarItem<'a>>,\r\n{\r\n}\r\n```\r\n\r\n([Playground.](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021&gist=3c0d414c4542949975cd74f81f96a039))\r\n\r\nI expected to see this happen: I had expected compilation to succeed.\r\n\r\nInstead, this happened: Compilation fails with the error message below.\r\n\r\n<details>\r\n<summary>Error message</summary>\r\n\r\n```\r\nerror[E0311]: the associated type `<Self as Bar>::BarType` may not live long enough\r\n  --> src/lib.rs:19:1\r\n   |\r\n19 | / trait Baz: Bar\r\n20 | | where\r\n21 | |     Self::BarType: for<'a> Iterable<Item<'a> = Self::BarItem<'a>>,\r\n22 | | {\r\n23 | | }\r\n   | |_^\r\n   |\r\n   = help: consider adding an explicit lifetime bound `<Self as Bar>::BarType: 'a`...\r\n   = note: ...so that the type `<Self as Bar>::BarType` will meet its required lifetime bounds...\r\nnote: ...that is required by this bound\r\n  --> src/lib.rs:21:37\r\n   |\r\n21 |     Self::BarType: for<'a> Iterable<Item<'a> = Self::BarItem<'a>>,\r\n   |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n```\r\n</details>\r\n\r\nEverything seems to work fine if instead I provide the HRTB on an associated type instead, like so:\r\n\r\n```rust\r\ntrait Foo {\r\n    type FooType: for<'a> Iterable<Item<'a> = Self::FooItem<'a>>;\r\n    type FooItem<'a>;\r\n}\r\n```\r\n\r\nI was surprised by this difference, so I initially opened a [question about this](https://users.rust-lang.org/t/gats-and-hrtb-confusion/66830) on the rust-lang users forum. There, people more knowledgeable than I suggested that this might be a GAT-related bug, with some uncertainty as to whether this is the same issue as in #89196.\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.58.0-nightly (baba6687d 2021-11-03)\r\nbinary: rustc\r\ncommit-hash: baba6687df3e83fdb15cc6ec239b4a1c75a30505\r\ncommit-date: 2021-11-03\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.58.0-nightly\r\nLLVM version: 13.0.0\r\n```\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/90573/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/90573/timeline", "performed_via_github_app": null, "state_reason": null}