{"url": "https://api.github.com/repos/rust-lang/rust/issues/18783", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/18783/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/18783/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/18783/events", "html_url": "https://github.com/rust-lang/rust/issues/18783", "id": 48179682, "node_id": "MDU6SXNzdWU0ODE3OTY4Mg==", "number": 18783, "title": "Two MUTABLE borrows to local var, by pushing closures into RefCell'd Vec through a trait.", "user": {"login": "cristicbz", "id": 801328, "node_id": "MDQ6VXNlcjgwMTMyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/801328?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cristicbz", "html_url": "https://github.com/cristicbz", "followers_url": "https://api.github.com/users/cristicbz/followers", "following_url": "https://api.github.com/users/cristicbz/following{/other_user}", "gists_url": "https://api.github.com/users/cristicbz/gists{/gist_id}", "starred_url": "https://api.github.com/users/cristicbz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cristicbz/subscriptions", "organizations_url": "https://api.github.com/users/cristicbz/orgs", "repos_url": "https://api.github.com/users/cristicbz/repos", "events_url": "https://api.github.com/users/cristicbz/events{/privacy}", "received_events_url": "https://api.github.com/users/cristicbz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46741598, "node_id": "MDU6TGFiZWw0Njc0MTU5OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-test", "name": "E-needs-test", "color": "02e10c", "default": false, "description": "Call for participation: writing correctness tests"}], "state": "closed", "locked": false, "assignee": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/rust-lang/rust/milestones/20", "html_url": "https://github.com/rust-lang/rust/milestone/20", "labels_url": "https://api.github.com/repos/rust-lang/rust/milestones/20/labels", "id": 452034, "node_id": "MDk6TWlsZXN0b25lNDUyMDM0", "number": 20, "title": "1.0", "description": "This will be the first major release of Rust, where we offer some guaranteed level of support and backwards compatibility.\r\n\r\nThe significant criteria for this release are:\r\n\r\n* Language backwards compatibility - All major features are in, and in their final form. Generally, the only new language features added after this milestone must be backwards compatible, or to fix soundness holes, though we do expect to have some leeway to make small incompatible fixes that have low impact on existing code bases.\r\n\r\n* Library stability - We have a system of measuring and ensuring the stability of API's, and a significant portion of the standard library is declared stable. Stable API's will not change. Large portions of the standard library need to be stable for 1.0, including primitive types, vectors, strings, option, numerics, collections, some I/O and concurrency.\r\n\r\n* User experience - The system is polished and the presentation is complete and professional. New users have a clear path to using and learning the system. This encompasses the web site, documentation, installation, and tooling.\r\n", "creator": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 376, "state": "closed", "created_at": "2013-10-10T18:48:33Z", "updated_at": "2016-08-28T23:13:24Z", "due_on": "2015-05-15T07:00:00Z", "closed_at": "2015-05-21T20:59:13Z"}, "comments": 9, "created_at": "2014-11-08T20:24:59Z", "updated_at": "2015-07-26T00:50:22Z", "closed_at": "2014-12-18T14:32:15Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Looks like a bug in the borrow checker:\n\n``` rust\nuse std::cell::RefCell;\n\nfn main() {\n    let c = Caller::new();\n    let mut y = 1;  // NOT in RefCell.\n    c.pusher().push(|| { y = y * 2u; });\n    c.pusher().push(|| { y = y * 3u; });  // Second mutable borrow of y?!\n    c.call();\n    println!(\"{}\", y); // Prints 6.\n}\n\n// Collects multiple closures then call all of them.\nstruct Caller<'c> {\n    funs: RefCell<Vec<||:'c -> ()>>,\n} impl<'c> Caller<'c> {\n    fn new() -> Caller<'c> {\n        Caller { funs: RefCell::new(Vec::new()) }\n    }\n\n    fn pusher(&'c self) -> Pusher<'c> {\n        Pusher { caller: self }\n    }\n\n    fn call(&self) {\n        let ref mut funs = self.funs.borrow_mut();\n        loop {\n            match funs.pop() {\n                Some(f) => f(),\n                _ => break,\n            }\n        }\n    }\n}\n\n// Pushes closures into a caller.\ntrait Push<'c> {\n    fn push<'f: 'c>(self, push: ||:'f -> ());\n}\n\nstruct Pusher<'c> {\n    caller: &'c Caller<'c>\n}\n// /*\nimpl<'c> Push<'c> for Pusher<'c> {\n    fn push<'f: 'c>(self, fun: ||:'f -> ()) {\n        self.caller.funs.borrow_mut().push(fun)\n    }\n}\n// Using the following impl (without trait) makes compilation fail correctly: */\n/*\nimpl<'c> Pusher<'c> {\n    fn push<'f: 'c>(self, fun: ||:'f -> ()) {\n        self.caller.funs.borrow_mut().push(fun)\n    }\n}\n*/\n```\n\n[Playpen](http://is.gd/a56cH1)\n\nThis compiles and runs fine. It also compiles when using unboxed closures instead (using type param F: FnOnce<(), ()>+'c and F members). Using the **non-trait impl**, however, causes compilation to fail correctly:\n\n```\n<anon>:7:21: 7:39 error: cannot borrow `y` as mutable more than once at a time\n<anon>:7     c.pusher().push(|| { y = y * 3u; });  // Second mutable borrow of y?!\n                             ^~~~~~~~~~~~~~~~~~\n<anon>:7:30: 7:31 note: borrow occurs due to use of `y` in closure\n<anon>:7     c.pusher().push(|| { y = y * 3u; });  // Second mutable borrow of y?!\n                                      ^\n<anon>:6:21: 6:39 note: previous borrow of `y` occurs here due to use in closure; the mutable borrow prevents subsequent moves, borrows, or modification of `y` until the borrow ends\n<anon>:6     c.pusher().push(|| { y = y * 2u; });\n                             ^~~~~~~~~~~~~~~~~~\n<anon>:10:2: 10:2 note: previous borrow ends here\n<anon>:3 fn main() {\n...\n<anon>:10 }\n          ^\n<anon>:9:20: 9:21 error: cannot borrow `y` as immutable because it is also borrowed as mutable\n<anon>:9     println!(\"{}\", y); // Prints 6.\n                            ^\nnote: in expansion of format_args!\n<std macros>:2:23: 2:77 note: expansion site\n<std macros>:1:1: 3:2 note: in expansion of println!\n<anon>:9:5: 9:23 note: expansion site\n<anon>:6:21: 6:39 note: previous borrow of `y` occurs here due to use in closure; the mutable borrow prevents subsequent moves, borrows, or modification of `y` until the borrow ends\n<anon>:6     c.pusher().push(|| { y = y * 2u; });\n                             ^~~~~~~~~~~~~~~~~~\n<anon>:10:2: 10:2 note: previous borrow ends here\n<anon>:3 fn main() {\n...\n<anon>:10 }\n          ^\n<anon>:9:20: 9:21 error: cannot borrow `y` as immutable because it is also borrowed as mutable\n<anon>:9     println!(\"{}\", y); // Prints 6.\n                            ^\nnote: in expansion of format_args!\n<std macros>:2:23: 2:77 note: expansion site\n<std macros>:1:1: 3:2 note: in expansion of println!\n<anon>:9:5: 9:23 note: expansion site\n<anon>:7:21: 7:39 note: previous borrow of `y` occurs here due to use in closure; the mutable borrow prevents subsequent moves, borrows, or modification of `y` until the borrow ends\n<anon>:7     c.pusher().push(|| { y = y * 3u; });  // Second mutable borrow of y?!\n                             ^~~~~~~~~~~~~~~~~~\n<anon>:10:2: 10:2 note: previous borrow ends here\n<anon>:3 fn main() {\n...\n<anon>:10 }\n          ^\nerror: aborting due to 3 previous errors\nplaypen: application terminated with error code 101\nProgram ended.\n```\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/18783/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/18783/timeline", "performed_via_github_app": null, "state_reason": "completed"}