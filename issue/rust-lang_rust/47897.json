{"url": "https://api.github.com/repos/rust-lang/rust/issues/47897", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/47897/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/47897/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/47897/events", "html_url": "https://github.com/rust-lang/rust/issues/47897", "id": 293013853, "node_id": "MDU6SXNzdWUyOTMwMTM4NTM=", "number": 47897, "title": "Unable to deduce associated type equality", "user": {"login": "brennie", "id": 156585, "node_id": "MDQ6VXNlcjE1NjU4NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/156585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brennie", "html_url": "https://github.com/brennie", "followers_url": "https://api.github.com/users/brennie/followers", "following_url": "https://api.github.com/users/brennie/following{/other_user}", "gists_url": "https://api.github.com/users/brennie/gists{/gist_id}", "starred_url": "https://api.github.com/users/brennie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brennie/subscriptions", "organizations_url": "https://api.github.com/users/brennie/orgs", "repos_url": "https://api.github.com/users/brennie/repos", "events_url": "https://api.github.com/users/brennie/events{/privacy}", "received_events_url": "https://api.github.com/users/brennie/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 46741598, "node_id": "MDU6TGFiZWw0Njc0MTU5OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-test", "name": "E-needs-test", "color": "02e10c", "default": false, "description": "Call for participation: writing correctness tests"}, {"id": 149689562, "node_id": "MDU6TGFiZWwxNDk2ODk1NjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-associated-items", "name": "A-associated-items", "color": "f7e101", "default": false, "description": "Area: Associated items such as associated types and consts."}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 1359848690, "node_id": "MDU6TGFiZWwxMzU5ODQ4Njkw", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-mcve", "name": "E-needs-mcve", "color": "02e10c", "default": false, "description": "Call for participation: This issue needs a Minimal Complete and Verifiable Example"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-01-31T02:53:18Z", "updated_at": "2021-02-02T17:11:13Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm working with [combine](/marwes/combine) and rust nightly to make some parsers and I'm wondering why both of these examples are not equivalent:\r\n\r\nThe first example compiles successfully:\r\n\r\n```rust\r\npub fn source<'a, I>() -> impl Parser<Input = I, Output = Source>\r\nwhere\r\n    I: RangeStream<Item = u8, Range = &'a [u8]>,\r\n    I::Error: ParseError<u8, &'a [u8], I::Position>,\r\n    <I::Error as ParseError<I::Item, I::Range, I::Position>>::StreamError: From<str::Utf8Error>\r\n{\r\n// ...\r\n}\r\n```\r\n whereas this one\r\n```rust\r\npub fn source<'a, I>() -> impl Parser<Input = I, Output = Source>\r\nwhere\r\n    I: RangeStream<Item = u8, Range = &'a [u8]>,\r\n    I::Error: ParseError<I::Item, I::Range, I::Position>,\r\n    <I::Error as ParseError<I::Item, I::Range, I::Position>>::StreamError: From<str::Utf8Error>\r\n{\r\n// ...\r\n}\r\n```\r\n\r\nproduces this error:\r\n```\r\nerror[E0277]: the trait bound `<I as combine::StreamOnce>::Error: combine::ParseError<u8, &'a [u8], <I as combine::StreamOnce>::Position>` is not satisfied\r\n  --> src/parser.rs:57:1\r\n   |\r\n57 | / pub fn source<'a, I>() -> impl Parser<Input = I, Output = Source>\r\n58 | | where\r\n...  |\r\n89 | |     )\r\n90 | | }\r\n   | |_^ the trait `combine::ParseError<u8, &'a [u8], <I as combine::StreamOnce>::Position>` is not implemented for `<I as combine::StreamOnce>::Error`\r\n   |\r\n   = help: consider adding a `where <I as combine::StreamOnce>::Error: combine::ParseError<u8, &'a [u8], <I as combine::StreamOnce>::Position>` bound\r\n\r\nerror[E0277]: the trait bound `<I as combine::StreamOnce>::Error: combine::ParseError<u8, &'a [u8], <I as combine::StreamOnce>::Position>` is not satisfied\r\n  --> src/parser.rs:57:1\r\n   |\r\n57 | / pub fn source<'a, I>() -> impl Parser<Input = I, Output = Source>\r\n58 | | where\r\n...  |\r\n89 | |     )\r\n90 | | }\r\n   | |_^ the trait `combine::ParseError<u8, &'a [u8], <I as combine::StreamOnce>::Position>` is not implemented for `<I as combine::StreamOnce>::Error`\r\n```\r\n\r\nAFAICT, the bounds: `I::Error: ParseError<u8, &'a [u8], I::Position>` and `I::Error: ParseError<I::Item, I::Range, I::Position>` **should** be identical since we know `I::Item = u8` and `I::Range = &'a [u8]`.\r\n\r\nIs this a limitation of the compiler's inference, a bug, or something else?", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/47897/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/47897/timeline", "performed_via_github_app": null, "state_reason": null}