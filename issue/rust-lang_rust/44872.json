{"url": "https://api.github.com/repos/rust-lang/rust/issues/44872", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/44872/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/44872/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/44872/events", "html_url": "https://github.com/rust-lang/rust/issues/44872", "id": 260764219, "node_id": "MDU6SXNzdWUyNjA3NjQyMTk=", "number": 44872, "title": "[NLL] extend mir-dump to dump out the values of each region", "user": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37234, "node_id": "MDU6TGFiZWwzNzIzNA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-cleanup", "name": "C-cleanup", "color": "f5f1fd", "default": false, "description": "Category: PRs that clean code up or issues documenting cleanup."}, {"id": 67766349, "node_id": "MDU6TGFiZWw2Nzc2NjM0OQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-mentor", "name": "E-mentor", "color": "02E10C", "default": false, "description": "Call for participation: This issue has a mentor. Use RustcContributor::new on Zulip for discussion."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-09-26T20:45:58Z", "updated_at": "2017-11-08T08:57:34Z", "closed_at": "2017-11-08T08:57:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Building on https://github.com/rust-lang/rust/issues/44870, once we have a vector of values, we will want to know what they are. I think the best idea is to include that information in the MIR dump. The MIR pretty-printing code is found in [`pretty.rs`](https://github.com/SimonSapin/rust/blob/20d4c0fab418edf036b7e0f1910053d3437da269/src/librustc_mir/util/pretty.rs). \r\n\r\nCurrently, this is invoked by the \"Dump MIR\" code found in [`dump_mir.rs`](https://github.com/SimonSapin/rust/blob/20d4c0fab418edf036b7e0f1910053d3437da269/src/librustc_mir/transform/dump_mir.rs). This is part of the MIR pass setup -- basically this visitor gets invoked in between every MIR pass. However, we don't really want to touch this \"Dump MIR\" code -- this is because it runs in between passes, and the intention with the NLL inference is that the non-lexical lifetime information will be allocated and destroyed by the NLL pass itself, and hence it will be freed by the time this code runs.\r\n\r\nInstead, what I think we ought to do is invoke the pretty-printer **directly** from within the NLL pass itself. This is easy enough, we just have to invoke [the `dump_mir()` function](https://github.com/SimonSapin/rust/blob/20d4c0fab418edf036b7e0f1910053d3437da269/src/librustc_mir/util/pretty.rs#L42-L47) independently from the pass infrastructure, much like the [mir-builder function does](https://github.com/SimonSapin/rust/blob/20d4c0fab418edf036b7e0f1910053d3437da269/src/librustc_mir/build/mod.rs#L152). Basically inserting a line like the following [right in between line 142 and line 143 in NLL](https://github.com/SimonSapin/rust/blob/20d4c0fab418edf036b7e0f1910053d3437da269/src/librustc_mir/transform/nll/mod.rs#L142-L143):\r\n\r\n```rust\r\n mir_util::dump_mir(tcx, None, \"nll\", &0, source, &mir);\r\n```\r\n\r\nHowever, this still won't do anything particularly interesting right now, because it doesn't have access to the region values! So I think we should extend `dump_mir` to take an extra argument, or perhaps a callback, that lets us add extra information into the dump. Let's suppose we take the callback approach. Then we might do something like:\r\n\r\n```rust\r\nmir_util::dump_mir(tcx, None, \"nll\", &0, source, &mir, |out| {\r\n    for (index, value) in self.region_values.iter().enumerate() {\r\n        write!(out, \"Region {:03}: {:?}\", index, value)?;\r\n    }\r\n    Ok(())\r\n});\r\n```\r\n\r\nand we would modify `dump_mir()` to say something like:\r\n\r\n```rust\r\npub fn dump_mir<'a, 'tcx, F>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\r\n                          pass_num: Option<(MirSuite, MirPassIndex)>,\r\n                          pass_name: &str,\r\n                          disambiguator: &Display,\r\n                          source: MirSource,\r\n                          mir: &Mir<'tcx>,\r\n                          extra_data: F)\r\nwhere\r\n    F: FnMut(&mut Write) -> io::Result<()>\r\n{\r\n    ...\r\n}\r\n```\r\n\r\nthis callback `extra_data` would be threaded down to the code that actually does the writing and invoked at the end or something.\r\n\r\nOne minor annoyance I see is that `dump_mir` also iterates over the \"promoted\" values associated with `Mir`. These are basically constant expressions that got extracted. We probably don't want to be dumping those. We could add a flag to disable [this loop](https://github.com/SimonSapin/rust/blob/20d4c0fab418edf036b7e0f1910053d3437da269/src/librustc_mir/util/pretty.rs#L57-L61). But I think better yet would be to remove the loop altogether, and move it to [this caller here](https://github.com/SimonSapin/rust/blob/20d4c0fab418edf036b7e0f1910053d3437da269/src/librustc_mir/transform/dump_mir.rs#L63-L68), since I think that is the only one that actually *wants* this loop. That is, we would tranformat that code from:\r\n\r\n```rust\r\n        if mir_util::dump_enabled(tcx, pass_name, source) {\r\n            mir_util::dump_mir(tcx,\r\n                               Some((suite, pass_num)),\r\n                               pass_name,\r\n                               &Disambiguator { is_after },\r\n                               source,\r\n                               mir);\r\n    }\r\n```\r\n\r\nto something like:\r\n\r\n```rust\r\nif mir_util::dump_enabled(tcx, pass_name, source) {\r\n    mir_util::dump_mir(tcx,\r\n        Some((suite, pass_num)),\r\n        pass_name,\r\n        &Disambiguator { is_after },\r\n        source,\r\n        mir);\r\n    for (index, promoted_mir) in mir.promoted.iter_enumerated() {\r\n        let promoted_source = MirSource::Promoted(source.item_id(), index);\r\n        mir_util::dump_mir(tcx,\r\n            Some((suite, pass_num)),\r\n            pass_name,\r\n            &Disambiguator { is_after },\r\n            promoted_source,\r\n            promoted_mir);\r\n   }\r\n}\r\n```", "closed_by": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/44872/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/44872/timeline", "performed_via_github_app": null, "state_reason": "completed"}