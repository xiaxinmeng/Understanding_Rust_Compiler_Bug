{"url": "https://api.github.com/repos/rust-lang/rust/issues/30125", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/30125/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/30125/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/30125/events", "html_url": "https://github.com/rust-lang/rust/issues/30125", "id": 119592455, "node_id": "MDU6SXNzdWUxMTk1OTI0NTU=", "number": 30125, "title": "macro-generated attributes applied to item-generating macros are silently ignored", "user": {"login": "durka", "id": 47007, "node_id": "MDQ6VXNlcjQ3MDA3", "avatar_url": "https://avatars.githubusercontent.com/u/47007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/durka", "html_url": "https://github.com/durka", "followers_url": "https://api.github.com/users/durka/followers", "following_url": "https://api.github.com/users/durka/following{/other_user}", "gists_url": "https://api.github.com/users/durka/gists{/gist_id}", "starred_url": "https://api.github.com/users/durka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/durka/subscriptions", "organizations_url": "https://api.github.com/users/durka/orgs", "repos_url": "https://api.github.com/users/durka/repos", "events_url": "https://api.github.com/users/durka/events{/privacy}", "received_events_url": "https://api.github.com/users/durka/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-11-30T22:10:02Z", "updated_at": "2015-12-09T15:48:13Z", "closed_at": "2015-12-09T15:48:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "(Sorry about the title. Yo dawg, I heard you like generators...)\n\n[This code](http://is.gd/FF0Bdz) contains a macro that expands to an cfg-annotated call to another macro, which defines an item. The cfg should cause everything to be dropped, but surprisingly the item is defined anyway.\n\n``` rust\nmacro_rules! group_attr {\n    (#[cfg($attr:meta)] $($yes:item)*) => {\n        $(#[cfg($attr)] $yes)*\n    };\n}\n\nmacro_rules! define {\n    ($i:item) => { $i }\n}\n\ngroup_attr! {\n    #[cfg(nope)]\n\n    define! {\n        fn foo() {}\n    }\n}\n\nfn main() {\n    foo(); // ~ERROR unresolved name\n}\n```\n\nThis is a near-minimal test case because combinations with fewer layers of indirection (i.e. removing `define!`) produce the expected behavior.\n\nI think the root cause is that cfg stripping is only performed before and after, but not during, macro expansion. So here, (1) initial cfg stripping does nothing, then during macro expansion (2a) `group_attr!` is expanded producing the annotated call to `define!`, (2b) `define!` is expanded, dropping the attribute, and finally (3) final cfg stripping again does nothing.\n\nIdeally this could be restructured somehow so that cfg stripping can be done during macro expansion. But if not, at least we could have a warning during step (2b) above when the attribute evaporates.\n\nIs my understanding correct?\n", "closed_by": {"login": "durka", "id": 47007, "node_id": "MDQ6VXNlcjQ3MDA3", "avatar_url": "https://avatars.githubusercontent.com/u/47007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/durka", "html_url": "https://github.com/durka", "followers_url": "https://api.github.com/users/durka/followers", "following_url": "https://api.github.com/users/durka/following{/other_user}", "gists_url": "https://api.github.com/users/durka/gists{/gist_id}", "starred_url": "https://api.github.com/users/durka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/durka/subscriptions", "organizations_url": "https://api.github.com/users/durka/orgs", "repos_url": "https://api.github.com/users/durka/repos", "events_url": "https://api.github.com/users/durka/events{/privacy}", "received_events_url": "https://api.github.com/users/durka/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/30125/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/30125/timeline", "performed_via_github_app": null, "state_reason": "completed"}