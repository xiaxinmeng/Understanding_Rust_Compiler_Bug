{"url": "https://api.github.com/repos/rust-lang/rust/issues/77708", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/77708/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/77708/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/77708/events", "html_url": "https://github.com/rust-lang/rust/issues/77708", "id": 717407118, "node_id": "MDU6SXNzdWU3MTc0MDcxMTg=", "number": 77708, "title": "StableHasher: unexpected region with impl trait for type with complex generic constant", "user": {"login": "zeyonaut", "id": 7323138, "node_id": "MDQ6VXNlcjczMjMxMzg=", "avatar_url": "https://avatars.githubusercontent.com/u/7323138?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zeyonaut", "html_url": "https://github.com/zeyonaut", "followers_url": "https://api.github.com/users/zeyonaut/followers", "following_url": "https://api.github.com/users/zeyonaut/following{/other_user}", "gists_url": "https://api.github.com/users/zeyonaut/gists{/gist_id}", "starred_url": "https://api.github.com/users/zeyonaut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zeyonaut/subscriptions", "organizations_url": "https://api.github.com/users/zeyonaut/orgs", "repos_url": "https://api.github.com/users/zeyonaut/repos", "events_url": "https://api.github.com/users/zeyonaut/events{/privacy}", "received_events_url": "https://api.github.com/users/zeyonaut/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 262252840, "node_id": "MDU6TGFiZWwyNjIyNTI4NDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-stable", "name": "regression-from-stable-to-stable", "color": "e4008a", "default": false, "description": "Performance or correctness regression from one stable version to another."}, {"id": 307747675, "node_id": "MDU6TGFiZWwzMDc3NDc2NzU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-incr-comp", "name": "A-incr-comp", "color": "f7e101", "default": false, "description": "Area: Incremental compilation"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1282665911, "node_id": "MDU6TGFiZWwxMjgyNjY1OTEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-generics", "name": "A-const-generics", "color": "f7e101", "default": false, "description": "Area: const generics (parameters and arguments)"}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}, {"id": 1486687397, "node_id": "MDU6TGFiZWwxNDg2Njg3Mzk3", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-const_generics", "name": "F-const_generics", "color": "f9c0cc", "default": false, "description": "`#![feature(const_generics)]`"}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}, {"id": 2341291797, "node_id": "MDU6TGFiZWwyMzQxMjkxNzk3", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-generic_const_exprs", "name": "F-generic_const_exprs", "color": "f9c0cc", "default": false, "description": "`#![feature(generic_const_exprs)]`"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-10-08T14:38:43Z", "updated_at": "2021-08-22T20:23:37Z", "closed_at": "2021-08-22T20:23:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\nAssuming the following header:\r\n```Rust\r\n#![feature(const_generics, const_evaluatable_checked)]\r\n#![allow(incomplete_features)]\r\nuse core::{convert::TryFrom, num::NonZeroUsize};\r\n\r\nstruct A<const N: NonZeroUsize>([u8; N.get()]) where [u8; N.get()]: Sized;\r\n```\r\nThe following example in trait impl causes an ICE:\r\n```Rust\r\nimpl<'a, const N: NonZeroUsize> TryFrom<&'a [u8]> for A<N> where [u8; N.get()]: Sized {\r\n\ttype Error = ();\r\n\tfn try_from(slice: &'a [u8]) -> Result<A<N>, ()> {\r\n\t\tlet _x = <&[u8; N.get()] as TryFrom<&[u8]>>::try_from(slice);\r\n\t\tunimplemented!();\r\n\t}\r\n}\r\n```\r\nThe following without a trait implementation does not:\r\n```Rust\r\nfn try_from<'a, const N: NonZeroUsize>(slice: &'a [u8]) -> Result<A<N>, ()> where [u8; N.get()]: Sized {\r\n\tlet x = <&[u8; N.get()] as TryFrom<&[u8]>>::try_from(slice);\r\n\tunimplemented!();\r\n}\r\n```\r\nNeither does the equivalent implementation without `const_evaluatable_checked`:\r\n```Rust\r\nstruct B<const N: usize>([u8; N]) where [u8; N]: Sized;\r\n\r\nimpl<'a, const N: usize> TryFrom<&'a [u8]> for B<N> where [u8; N]: Sized {\r\n\ttype Error = ();\r\n\tfn try_from(slice: &'a [u8]) -> Result<B<N>, ()> {\r\n\t\tlet _x = <&[u8; N] as TryFrom<&[u8]>>::try_from(slice);\r\n\t\tunimplemented!();\r\n\t}\r\n}\r\n```\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.49.0-nightly (91a79fb29 2020-10-07)\r\nbinary: rustc\r\ncommit-hash: 91a79fb29ac78d057d04dbe86be13d5dcc64309a\r\ncommit-date: 2020-10-07\r\nhost: x86_64-pc-windows-msvc\r\nrelease: 1.49.0-nightly\r\nLLVM version: 11.0\r\n```\r\n\r\n### Error output\r\n\r\n`cargo check`\r\n```\r\nerror: internal compiler error: compiler\\rustc_middle\\src\\ich\\impls_ty.rs:94:17: StableHasher: unexpected region '_#2r\r\n\r\nthread 'rustc' panicked at 'Box<Any>', compiler\\rustc_errors\\src\\lib.rs:945:9\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.49.0-nightly (91a79fb29 2020-10-07) running on x86_64-pc-windows-msvc\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nerror: aborting due to previous error; 2 warnings emitted\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nstack backtrace:\r\n   0:     0x7ff947a09989 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hc20a26e0f7659afd\r\n   1:     0x7ff947a370bb - core::fmt::write::h435be716304d26a1\r\n   2:     0x7ff9479fb1d8 - <std::io::IoSlice as core::fmt::Debug>::fmt::h997d94c78f1ba97b\r\n   3:     0x7ff947a0ed74 - std::panicking::take_hook::hbf7e33d26fc3ca30\r\n   4:     0x7ff947a0e958 - std::panicking::take_hook::hbf7e33d26fc3ca30\r\n   5:     0x7ff8fbdcf5a7 - rustc_driver::report_ice::h901ed469a4afd632\r\n   6:     0x7ff947a0f7d0 - std::panicking::rust_panic_with_hook::h19068ccbe4b337a1\r\n   7:     0x7ff900537870 - <rustc_errors::snippet::Style as core::fmt::Debug>::fmt::h154d3f8b7cc27034\r\n   8:     0x7ff900537799 - <rustc_errors::snippet::Style as core::fmt::Debug>::fmt::h154d3f8b7cc27034\r\n   9:     0x7ff9005377e1 - <rustc_errors::snippet::Style as core::fmt::Debug>::fmt::h154d3f8b7cc27034\r\n  10:     0x7ff90056a80f - rustc_errors::HandlerInner::err_count::hc7ff30e58befa0c0\r\n  11:     0x7ff900568ec2 - rustc_errors::Handler::bug::h9f679e586b05b709\r\n  12:     0x7ff900043d4f - rustc_middle::util::bug::bug_fmt::h333e4a32fa9b0768\r\n  13:     0x7ff90003fe70 - <rustc_middle::ty::consts::int::ConstInt as core::fmt::Debug>::fmt::he16df1c1cd9a0739\r\n  14:     0x7ff90003fe13 - <rustc_middle::ty::consts::int::ConstInt as core::fmt::Debug>::fmt::he16df1c1cd9a0739\r\n  15:     0x7ff900043c7c - rustc_middle::util::bug::bug_fmt::h333e4a32fa9b0768\r\n  16:     0x7ff900043be0 - rustc_middle::util::bug::bug_fmt::h333e4a32fa9b0768\r\n  17:     0x7ff90003bd54 - rustc_middle::ich::impls_ty::<impl rustc_data_structures::stable_hasher::HashStable<rustc_middle::ich::hcx::StableHashingContext> for rustc_middle::ty::sty::RegionKind>::hash_stable::h1b2fcdca26fe65c7\r\n  18:     0x7ff8fe089e72 - rustc_ty::provide::h0935123a64901122\r\n  19:     0x7ff8ffccce57 - <rustc_trait_selection::traits::fulfill::PendingPredicateObligation as core::fmt::Debug>::fmt::h193f29610c75bb2a\r\n  20:     0x7ff8ffb69daf - <rustc_trait_selection::traits::TraitQueryMode as core::fmt::Debug>::fmt::h933d8945b4748b17\r\n  21:     0x7ff8ffc24e3d - <rustc_trait_selection::traits::specialize::OverlapError as core::fmt::Debug>::fmt::hb9cecb2f776e6243\r\n  22:     0x7ff8ffcca571 - rustc_trait_selection::traits::fulfill::FulfillProcessor::progress_changed_obligations::h6e0b9a7a32cf419d\r\n  23:     0x7ff8ffcf7944 - <rustc_trait_selection::traits::fulfill::PendingPredicateObligation as core::fmt::Debug>::fmt::h193f29610c75bb2a\r\n  24:     0x7ff8ffcc9b3f - <rustc_trait_selection::traits::fulfill::FulfillmentContext as rustc_infer::traits::engine::TraitEngine>::select_where_possible::h1148d87c05c2aec0\r\n  25:     0x7ff8fe12fb9f - <rustc_middle::ty::sty::TraitRef as rustc_traits::chalk::lowering::LowerInto<chalk_solve::rust_ir::TraitBound<rustc_middle::traits::chalk::RustInterner>>>::lower_into::h8ff0d70e3d0188ac\r\n  26:     0x7ff8fe1234e1 - <rustc_middle::ty::sty::TraitRef as rustc_traits::chalk::lowering::LowerInto<chalk_solve::rust_ir::TraitBound<rustc_middle::traits::chalk::RustInterner>>>::lower_into::h8ff0d70e3d0188ac\r\n  27:     0x7ff8fe1f56da - <rustc_traits::chalk::db::RustIrDatabase as chalk_solve::RustIrDatabase<rustc_middle::traits::chalk::RustInterner>>::generator_witness_datum::h56e9b357d981663c\r\n  28:     0x7ff8ffca08b2 - <rustc_trait_selection::traits::specialize::OverlapError as core::fmt::Debug>::fmt::hb9cecb2f776e6243\r\n  29:     0x7ff8ffca476b - <rustc_trait_selection::traits::specialize::OverlapError as core::fmt::Debug>::fmt::hb9cecb2f776e6243\r\n  30:     0x7ff8ffb34698 - <rustc_infer::infer::InferCtxt as rustc_trait_selection::traits::query::outlives_bounds::InferCtxtExt>::implied_outlives_bounds::h491f1d8abd137254\r\n  31:     0x7ff8ffca8e4b - <rustc_trait_selection::traits::specialize::OverlapError as core::fmt::Debug>::fmt::hb9cecb2f776e6243\r\n  32:     0x7ff8ffc536c3 - <rustc_trait_selection::traits::specialize::OverlapError as core::fmt::Debug>::fmt::hb9cecb2f776e6243\r\n  33:     0x7ff8ffccc165 - rustc_trait_selection::traits::query::type_op::ascribe_user_type::<impl rustc_trait_selection::traits::query::type_op::QueryTypeOp for rustc_middle::traits::query::type_op::AscribeUserType>::perform_query::h79d7e0f340ea47eb\r\n  34:     0x7ff8ff026445 - <rustc_mir::transform::dest_prop::CandidateAssignment as core::fmt::Debug>::fmt::h52c7195478494fc1\r\n  35:     0x7ff8fec586c0 - <rustc_middle::mir::traversal::ReversePostorder as core::iter::traits::iterator::Iterator>::size_hint::h344f471fd1cfc36d\r\n  36:     0x7ff8fef20f53 - <rustc_middle::ty::sty::RegionVid as rustc_mir::borrow_check::facts::FactRow>::write::h2cc1e203cd8b8d95\r\n  37:     0x7ff8ff0c5d07 - rustc_mir::borrow_check::provide::hca974026c7954712\r\n  38:     0x7ff8febc3d7b - <rustc_mir_build::thir::pattern::_match::split_grouped_constructors::Border as core::fmt::Debug>::fmt::h2468913b704d8b89\r\n  39:     0x7ff8ff0c2e00 - rustc_mir::borrow_check::provide::hca974026c7954712\r\n  40:     0x7ff8ff092e9f - <rustc_mir::util::spanview::SpanViewable as core::fmt::Debug>::fmt::h8fc74e5ad64e2a6b\r\n  41:     0x7ff8fbfc9fae - rustc_interface::interface::parse_cfgspecs::hf1434c0a659b9ddd\r\n  42:     0x7ff8fbfb7326 - <rls_span::serde_expanded::_IMPL_DESERIALIZE_FOR_OneIndexed::<impl serde::de::Deserialize for rls_span::OneIndexed>::deserialize::__Visitor as serde::de::Visitor>::expecting::h9a9b74719e191e7e\r\n  43:     0x7ff8fbf7c877 - <rls_span::serde_expanded::_IMPL_DESERIALIZE_FOR_OneIndexed::<impl serde::de::Deserialize for rls_span::OneIndexed>::deserialize::__Visitor as serde::de::Visitor>::expecting::h9a9b74719e191e7e\r\n  44:     0x7ff8fbfcc3dd - rustc_interface::interface::parse_cfgspecs::hf1434c0a659b9ddd\r\n  45:     0x7ff8fbf69f5e - <rls_span::serde_expanded::_IMPL_DESERIALIZE_FOR_OneIndexed::<impl serde::de::Deserialize for rls_span::OneIndexed>::deserialize::__Visitor as serde::de::Visitor>::expecting::h9a9b74719e191e7e\r\n  46:     0x7ff8fbf7566f - <rls_span::serde_expanded::_IMPL_DESERIALIZE_FOR_OneIndexed::<impl serde::de::Deserialize for rls_span::OneIndexed>::deserialize::__Visitor as serde::de::Visitor>::expecting::h9a9b74719e191e7e\r\n  47:     0x7ff8fbfbc034 - <rls_span::serde_expanded::_IMPL_DESERIALIZE_FOR_OneIndexed::<impl serde::de::Deserialize for rls_span::OneIndexed>::deserialize::__Visitor as serde::de::Visitor>::expecting::h9a9b74719e191e7e\r\n  48:     0x7ff8fbff5d3d - rustc_interface::passes::QueryContext::print_stats::hd29879a8b3af7832\r\n  49:     0x7ff8fbe1957b - tracing_core::event::Event::metadata::h86572d73d587b6bd\r\n  50:     0x7ff8fbe1ddb6 - tracing_core::event::Event::metadata::h86572d73d587b6bd\r\n  51:     0x7ff8fbdddf02 - <rustc_driver::Compilation as core::fmt::Debug>::fmt::h234a3cece69c9eed\r\n  52:     0x7ff8fbdf8ba6 - <rustc_driver::Compilation as core::fmt::Debug>::fmt::h234a3cece69c9eed\r\n  53:     0x7ff8fbd81b26 - rustc_errors::snippet::MultilineAnnotation::increase_depth::h93baa802966d31ca\r\n  54:     0x7ff8fbe1e53b - tracing_core::event::Event::metadata::h86572d73d587b6bd\r\n  55:     0x7ff8fbdf4a34 - <rustc_driver::Compilation as core::fmt::Debug>::fmt::h234a3cece69c9eed\r\n  56:     0x7ff8fbd9074c - <rustc_driver::args::Error as core::fmt::Debug>::fmt::h500583d00d12c2d9\r\n  57:     0x7ff8fbdf6b28 - <rustc_driver::Compilation as core::fmt::Debug>::fmt::h234a3cece69c9eed\r\n  58:     0x7ff8fbdd3a30 - <rustc_driver::Compilation as core::fmt::Debug>::fmt::h234a3cece69c9eed\r\n  59:     0x7ff8fbdfa123 - <rustc_driver::Compilation as core::fmt::Debug>::fmt::h234a3cece69c9eed\r\n  60:     0x7ff8fbd77523 - rustc_errors::snippet::MultilineAnnotation::increase_depth::h93baa802966d31ca\r\n  61:     0x7ff947a1f6a7 - std::sys::windows::thread::Thread::new::h04914a10b014a9d7\r\n  62:     0x7ff99b6c7bd4 - BaseThreadInitThunk\r\n  63:     0x7ff99d2ace51 - RtlUserThreadStart\r\n```\r\n\r\n</p>\r\n</details>\r\n<details><summary><strong>Query Stack</strong></summary>\r\n<p>\r\n\r\n```\r\nquery stack during panic:\r\n#0 [type_op_ascribe_user_type] evaluating `type_op_ascribe_user_type` `Canonical { max_universe: U0, variables: [CanonicalVarInfo { kind: Region(U0) }, CanonicalVarInfo { kind: Region(U0) }, CanonicalVarInfo { kind: Region(U0) }, CanonicalVarInfo { kind: Region(U0) }], value: ParamEnvAnd { param_env: ParamEnv { caller_bounds: [ConstEvaluatable(WithOptConstParam { did: DefId(0:15 ~ bugtest[35b2]::{impl#0}::{constant#0}), const_param_did: None }, [ReLateBound(DebruijnIndex(0), BrAnon(0)), Const { ty: std::num::NonZeroUsize, val: Param(N/#1) }]), TraitPredicate(<[u8; _] as std::marker::Sized>)], reveal: UserFacing }, value: AscribeUserType { mir_ty: fn(&[u8]) -> std::result::Result<&[u8; _], <&[u8; _] as std::convert::TryFrom<&[u8]>>::Error> {<&[u8; _] as std::convert::TryFrom<&[u8]>>::try_from}, def_id: DefId(2:1966 ~ core[5e46]::convert::TryFrom::try_from), user_substs: UserSubsts { substs: [&[u8; _], &[u8]], user_self_ty: None } } } }`\r\n#1 [mir_borrowck] borrow-checking `<A<N> as std::convert::TryFrom<&'a [u8]>>::try_from`\r\n#2 [analysis] running analysis passes on this crate\r\nend of query stack\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\nPossibly related to #77650 \r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/77708/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/77708/timeline", "performed_via_github_app": null, "state_reason": "completed"}