{"url": "https://api.github.com/repos/rust-lang/rust/issues/111739", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/111739/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/111739/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/111739/events", "html_url": "https://github.com/rust-lang/rust/issues/111739", "id": 1716204223, "node_id": "I_kwDOAAsO6M5mSzK_", "number": 111739, "title": "ICE: panic on type inference with possible Deref coercion", "user": {"login": "KiitoX", "id": 5896952, "node_id": "MDQ6VXNlcjU4OTY5NTI=", "avatar_url": "https://avatars.githubusercontent.com/u/5896952?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KiitoX", "html_url": "https://github.com/KiitoX", "followers_url": "https://api.github.com/users/KiitoX/followers", "following_url": "https://api.github.com/users/KiitoX/following{/other_user}", "gists_url": "https://api.github.com/users/KiitoX/gists{/gist_id}", "starred_url": "https://api.github.com/users/KiitoX/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KiitoX/subscriptions", "organizations_url": "https://api.github.com/users/KiitoX/orgs", "repos_url": "https://api.github.com/users/KiitoX/repos", "events_url": "https://api.github.com/users/KiitoX/events{/privacy}", "received_events_url": "https://api.github.com/users/KiitoX/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 60329014, "node_id": "MDU6TGFiZWw2MDMyOTAxNA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-low", "name": "P-low", "color": "eb6420", "default": false, "description": "Low priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 262252840, "node_id": "MDU6TGFiZWwyNjIyNTI4NDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-stable", "name": "regression-from-stable-to-stable", "color": "e4008a", "default": false, "description": "Performance or correctness regression from one stable version to another."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2023-05-18T20:13:05Z", "updated_at": "2023-05-19T14:23:35Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n-->\r\n\r\n### Code\r\n\r\nIt seems this is a particularly tricky interaction of `Clone`, `Deref` coercion and these two `impl`; take away any one, and the compiler spits out a type annotation error as seen below.\r\n\r\n```Rust\r\nuse std::rc::Rc;\r\nuse std::ops::Deref;\r\n\r\n#[derive(Clone)]\r\nstruct Value<T>(T);\r\n\r\npub trait Wrap<T: ?Sized> {\r\n    fn wrap(f: T) -> Self;\r\n}\r\n\r\nimpl<R, A1, A2> Wrap<fn(A1, A2) -> R> for Value<fn(A1, A2) -> R> {\r\n    fn wrap(f: fn(A1, A2) -> R) -> Self { Value(f) }\r\n}\r\n\r\nimpl<F, R, A1, A2> Wrap<F> for Value<Rc<dyn Fn(A1, A2) -> R>>\r\n    where F: 'static + Fn(A1, A2) -> R {\r\n    fn wrap(f: F) -> Self { Value(Rc::new(f)) }\r\n}\r\n\r\n// https://users.rust-lang.org/t/callable-struct-on-stable/54689/7\r\nimpl<F> Deref for Value<Rc<F>> {\r\n    type Target = F;\r\n\r\n    fn deref(&self) -> &Self::Target {\r\n        match self { Value(value) => value }\r\n    }\r\n}\r\n\r\nfn fn_plus(var_a: i64, var_b: i64) -> i64 {\r\n    return var_a + var_b;\r\n}\r\nfn fn_select(var_x: bool) -> i64 {\r\n    let var_fn = if var_x {\r\n        Value::wrap(fn_plus as fn(_, _) -> _)\r\n    } else {\r\n        Value::wrap((|a, b| a - b) as fn(_, _) -> _)\r\n    };\r\n    match var_fn.clone() {\r\n        Value(fun) => fun(2_i64, 3_i64)\r\n    }\r\n}\r\n\r\nfn main() {\r\n    println!(\"select(false)(2, 3) = {}\", fn_select(false));\r\n    println!(\"select(true)(2, 3) = {}\", fn_select(true));\r\n}\r\n```\r\nThe compiler is also happy if `var_fn` is annotated as `Value<fn(_, _) -> _>` but I don't quite understand why this needs to be specified, given the inner casts on both branches.\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.71.0-nightly (18bfe5d8a 2023-05-14)\r\nbinary: rustc\r\ncommit-hash: 18bfe5d8a9ca0e226171e98f8f4ef071790f3352\r\ncommit-date: 2023-05-14\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.71.0-nightly\r\nLLVM version: 16.0.2\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nerror[E0282]: type annotations needed for `Value<_>`\r\n  --> src/main.rs:33:9\r\n   |\r\n33 |     let var_fn = if var_x {\r\n   |         ^^^^^^\r\n...\r\n39 |         Value(fun) => fun(2_i64, 3_i64)\r\n   |                       ----------------- type must be known at this point\r\n   |\r\nhelp: consider giving `var_fn` an explicit type, where the placeholders `_` are specified\r\n   |\r\n33 |     let var_fn: Value<_> = if var_x {\r\n   |               ++++++++++\r\n\r\nFor more information about this error, try `rustc --explain E0282`.\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nthread 'rustc' panicked at 'assertion failed: matches!(ty.kind(), ty :: Error(_))', compiler/rustc_hir_typeck/src/method/probe.rs:459:17\r\nstack backtrace:\r\n   0:     0x7f0de7b696e1 - std::backtrace_rs::backtrace::libunwind::trace::h4354896f1663baaf\r\n                               at /rustc/18bfe5d8a9ca0e226171e98f8f4ef071790f3352/library/std/src/../../backtrace/src/backtrace/libunwind.rs:93:5\r\n   1:     0x7f0de7b696e1 - std::backtrace_rs::backtrace::trace_unsynchronized::h8ac49f89c23585dd\r\n                               at /rustc/18bfe5d8a9ca0e226171e98f8f4ef071790f3352/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\r\n   2:     0x7f0de7b696e1 - std::sys_common::backtrace::_print_fmt::h9f5f16b3ef080000\r\n                               at /rustc/18bfe5d8a9ca0e226171e98f8f4ef071790f3352/library/std/src/sys_common/backtrace.rs:65:5\r\n   3:     0x7f0de7b696e1 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hcfed927151d1ad83\r\n                               at /rustc/18bfe5d8a9ca0e226171e98f8f4ef071790f3352/library/std/src/sys_common/backtrace.rs:44:22\r\n   4:     0x7f0de7bc9bdf - core::fmt::rt::Argument::fmt::h12fb43eea2fe23a8\r\n                               at /rustc/18bfe5d8a9ca0e226171e98f8f4ef071790f3352/library/core/src/fmt/rt.rs:138:9\r\n   5:     0x7f0de7bc9bdf - core::fmt::write::hcf94a34baaaea06f\r\n                               at /rustc/18bfe5d8a9ca0e226171e98f8f4ef071790f3352/library/core/src/fmt/mod.rs:1094:21\r\n   6:     0x7f0de7b5c941 - std::io::Write::write_fmt::h60003491edc2e074\r\n                               at /rustc/18bfe5d8a9ca0e226171e98f8f4ef071790f3352/library/std/src/io/mod.rs:1712:15\r\n   7:     0x7f0de7b694f5 - std::sys_common::backtrace::_print::h9a8311322b9d8667\r\n                               at /rustc/18bfe5d8a9ca0e226171e98f8f4ef071790f3352/library/std/src/sys_common/backtrace.rs:47:5\r\n   8:     0x7f0de7b694f5 - std::sys_common::backtrace::print::h8503eaeeae92ea08\r\n                               at /rustc/18bfe5d8a9ca0e226171e98f8f4ef071790f3352/library/std/src/sys_common/backtrace.rs:34:9\r\n   9:     0x7f0de7b6c177 - std::panicking::default_hook::{{closure}}::h36a123b73b99c0f3\r\n  10:     0x7f0de7b6bf64 - std::panicking::default_hook::ha2efb9fc5f628e61\r\n                               at /rustc/18bfe5d8a9ca0e226171e98f8f4ef071790f3352/library/std/src/panicking.rs:288:9\r\n  11:     0x7f0deacc87db - rustc_driver_impl[64b7dd1911194932]::install_ice_hook::{closure#0}\r\n  12:     0x7f0de7b6c897 - <alloc::boxed::Box<F,A> as core::ops::function::Fn<Args>>::call::h250e911c4e8d011a\r\n                               at /rustc/18bfe5d8a9ca0e226171e98f8f4ef071790f3352/library/alloc/src/boxed.rs:1999:9\r\n  13:     0x7f0de7b6c897 - std::panicking::rust_panic_with_hook::h5d9e02f555bc48d2\r\n                               at /rustc/18bfe5d8a9ca0e226171e98f8f4ef071790f3352/library/std/src/panicking.rs:695:13\r\n  14:     0x7f0de7b6c5d1 - std::panicking::begin_panic_handler::{{closure}}::hbb00bd8fdd3417d9\r\n                               at /rustc/18bfe5d8a9ca0e226171e98f8f4ef071790f3352/library/std/src/panicking.rs:580:13\r\n  15:     0x7f0de7b69b26 - std::sys_common::backtrace::__rust_end_short_backtrace::ha9ceea58b8cf1deb\r\n                               at /rustc/18bfe5d8a9ca0e226171e98f8f4ef071790f3352/library/std/src/sys_common/backtrace.rs:150:18\r\n  16:     0x7f0de7b6c382 - rust_begin_unwind\r\n                               at /rustc/18bfe5d8a9ca0e226171e98f8f4ef071790f3352/library/std/src/panicking.rs:578:5\r\n  17:     0x7f0de7bc5e63 - core::panicking::panic_fmt::h1df8faa11491e0c5\r\n                               at /rustc/18bfe5d8a9ca0e226171e98f8f4ef071790f3352/library/core/src/panicking.rs:67:14\r\n  18:     0x7f0de7bc5ef3 - core::panicking::panic::he8f7538d58c14f28\r\n                               at /rustc/18bfe5d8a9ca0e226171e98f8f4ef071790f3352/library/core/src/panicking.rs:117:5\r\n  19:     0x7f0de931d32a - <rustc_hir_typeck[1d4551b31af27f04]::fn_ctxt::FnCtxt>::lookup_method\r\n  20:     0x7f0de930868a - <rustc_hir_typeck[1d4551b31af27f04]::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n  21:     0x7f0de936faf6 - <rustc_hir_typeck[1d4551b31af27f04]::fn_ctxt::FnCtxt>::check_match::{closure#0}\r\n  22:     0x7f0de9309aa6 - <rustc_hir_typeck[1d4551b31af27f04]::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n  23:     0x7f0de9776b16 - <rustc_hir_typeck[1d4551b31af27f04]::fn_ctxt::FnCtxt>::check_return_expr\r\n  24:     0x7f0de9309b7c - <rustc_hir_typeck[1d4551b31af27f04]::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n  25:     0x7f0de934dee0 - <rustc_hir_typeck[1d4551b31af27f04]::fn_ctxt::FnCtxt>::check_block_with_expected\r\n  26:     0x7f0de9308594 - <rustc_hir_typeck[1d4551b31af27f04]::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n  27:     0x7f0de9776b16 - <rustc_hir_typeck[1d4551b31af27f04]::fn_ctxt::FnCtxt>::check_return_expr\r\n  28:     0x7f0de976e7c0 - rustc_hir_typeck[1d4551b31af27f04]::check::check_fn\r\n  29:     0x7f0de975638a - rustc_hir_typeck[1d4551b31af27f04]::typeck\r\n  30:     0x7f0de9755cd9 - <rustc_query_impl[29ff09dda6aeedc5]::dynamic_query::typeck::{closure#2} as core[b4a8d54be4c63c12]::ops::function::FnOnce<(rustc_middle[f607de435e9a4418]::ty::context::TyCtxt, rustc_span[f3562a9d228bc34b]::def_id::LocalDefId)>>::call_once\r\n  31:     0x7f0de94addff - rustc_query_system[7835b3e98a87b812]::query::plumbing::try_execute_query::<rustc_query_impl[29ff09dda6aeedc5]::DynamicConfig<rustc_query_system[7835b3e98a87b812]::query::caches::VecCache<rustc_span[f3562a9d228bc34b]::def_id::LocalDefId, rustc_middle[f607de435e9a4418]::query::erase::Erased<[u8; 8usize]>>, false, false, false>, rustc_query_impl[29ff09dda6aeedc5]::plumbing::QueryCtxt>\r\n  32:     0x7f0de99b2c48 - rustc_query_system[7835b3e98a87b812]::query::plumbing::force_query::<rustc_query_impl[29ff09dda6aeedc5]::DynamicConfig<rustc_query_system[7835b3e98a87b812]::query::caches::VecCache<rustc_span[f3562a9d228bc34b]::def_id::LocalDefId, rustc_middle[f607de435e9a4418]::query::erase::Erased<[u8; 8usize]>>, false, false, false>, rustc_query_impl[29ff09dda6aeedc5]::plumbing::QueryCtxt>\r\n  33:     0x7f0dea6a0c91 - <rustc_query_impl[29ff09dda6aeedc5]::plumbing::query_callback<rustc_query_impl[29ff09dda6aeedc5]::queries::typeck>::{closure#0} as core[b4a8d54be4c63c12]::ops::function::FnOnce<(rustc_middle[f607de435e9a4418]::ty::context::TyCtxt, rustc_query_system[7835b3e98a87b812]::dep_graph::dep_node::DepNode<rustc_middle[f607de435e9a4418]::dep_graph::dep_node::DepKind>)>>::call_once\r\n  34:     0x7f0de8ef0b0f - <rustc_query_system[7835b3e98a87b812]::dep_graph::graph::DepGraphData<rustc_middle[f607de435e9a4418]::dep_graph::dep_node::DepKind>>::try_mark_previous_green::<rustc_query_impl[29ff09dda6aeedc5]::plumbing::QueryCtxt>\r\n  35:     0x7f0de94adc5d - rustc_query_system[7835b3e98a87b812]::query::plumbing::try_execute_query::<rustc_query_impl[29ff09dda6aeedc5]::DynamicConfig<rustc_query_system[7835b3e98a87b812]::query::caches::VecCache<rustc_span[f3562a9d228bc34b]::def_id::LocalDefId, rustc_middle[f607de435e9a4418]::query::erase::Erased<[u8; 8usize]>>, false, false, false>, rustc_query_impl[29ff09dda6aeedc5]::plumbing::QueryCtxt>\r\n  36:     0x7f0dea107562 - rustc_hir_analysis[7867a2c041e18122]::check_crate\r\n  37:     0x7f0dea0fa3ed - rustc_interface[d75252421fea963]::passes::analysis\r\n  38:     0x7f0deb569b17 - <rustc_query_impl[29ff09dda6aeedc5]::dynamic_query::analysis::{closure#2} as core[b4a8d54be4c63c12]::ops::function::FnOnce<(rustc_middle[f607de435e9a4418]::ty::context::TyCtxt, ())>>::call_once\r\n  39:     0x7f0dea4a5b7f - rustc_query_system[7835b3e98a87b812]::query::plumbing::try_execute_query::<rustc_query_impl[29ff09dda6aeedc5]::DynamicConfig<rustc_query_system[7835b3e98a87b812]::query::caches::SingleCache<rustc_middle[f607de435e9a4418]::query::erase::Erased<[u8; 1usize]>>, false, false, false>, rustc_query_impl[29ff09dda6aeedc5]::plumbing::QueryCtxt>\r\n  40:     0x7f0dea4a5624 - rustc_query_impl[29ff09dda6aeedc5]::get_query::analysis\r\n  41:     0x7f0dea260e3c - <rustc_interface[d75252421fea963]::queries::QueryResult<&rustc_middle[f607de435e9a4418]::ty::context::GlobalCtxt>>::enter::<core[b4a8d54be4c63c12]::result::Result<(), rustc_span[f3562a9d228bc34b]::ErrorGuaranteed>, rustc_driver_impl[64b7dd1911194932]::run_compiler::{closure#1}::{closure#2}::{closure#4}>\r\n  42:     0x7f0dea25ffd5 - <rustc_interface[d75252421fea963]::interface::Compiler>::enter::<rustc_driver_impl[64b7dd1911194932]::run_compiler::{closure#1}::{closure#2}, core[b4a8d54be4c63c12]::result::Result<core[b4a8d54be4c63c12]::option::Option<rustc_interface[d75252421fea963]::queries::Linker>, rustc_span[f3562a9d228bc34b]::ErrorGuaranteed>>\r\n  43:     0x7f0dea25dcfd - <scoped_tls[36ad800287692b7a]::ScopedKey<rustc_span[f3562a9d228bc34b]::SessionGlobals>>::set::<rustc_interface[d75252421fea963]::interface::run_compiler<core[b4a8d54be4c63c12]::result::Result<(), rustc_span[f3562a9d228bc34b]::ErrorGuaranteed>, rustc_driver_impl[64b7dd1911194932]::run_compiler::{closure#1}>::{closure#0}, core[b4a8d54be4c63c12]::result::Result<(), rustc_span[f3562a9d228bc34b]::ErrorGuaranteed>>\r\n  44:     0x7f0dea25d156 - std[d9d2839bce1dd559]::sys_common::backtrace::__rust_begin_short_backtrace::<rustc_interface[d75252421fea963]::util::run_in_thread_pool_with_globals<rustc_interface[d75252421fea963]::interface::run_compiler<core[b4a8d54be4c63c12]::result::Result<(), rustc_span[f3562a9d228bc34b]::ErrorGuaranteed>, rustc_driver_impl[64b7dd1911194932]::run_compiler::{closure#1}>::{closure#0}, core[b4a8d54be4c63c12]::result::Result<(), rustc_span[f3562a9d228bc34b]::ErrorGuaranteed>>::{closure#0}::{closure#0}, core[b4a8d54be4c63c12]::result::Result<(), rustc_span[f3562a9d228bc34b]::ErrorGuaranteed>>\r\n  45:     0x7f0dea25cf05 - <<std[d9d2839bce1dd559]::thread::Builder>::spawn_unchecked_<rustc_interface[d75252421fea963]::util::run_in_thread_pool_with_globals<rustc_interface[d75252421fea963]::interface::run_compiler<core[b4a8d54be4c63c12]::result::Result<(), rustc_span[f3562a9d228bc34b]::ErrorGuaranteed>, rustc_driver_impl[64b7dd1911194932]::run_compiler::{closure#1}>::{closure#0}, core[b4a8d54be4c63c12]::result::Result<(), rustc_span[f3562a9d228bc34b]::ErrorGuaranteed>>::{closure#0}::{closure#0}, core[b4a8d54be4c63c12]::result::Result<(), rustc_span[f3562a9d228bc34b]::ErrorGuaranteed>>::{closure#1} as core[b4a8d54be4c63c12]::ops::function::FnOnce<()>>::call_once::{shim:vtable#0}\r\n  46:     0x7f0de7b76d45 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::h0ee7a0a44efbcb8b\r\n                               at /rustc/18bfe5d8a9ca0e226171e98f8f4ef071790f3352/library/alloc/src/boxed.rs:1985:9\r\n  47:     0x7f0de7b76d45 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::h8f984f8b1c075279\r\n                               at /rustc/18bfe5d8a9ca0e226171e98f8f4ef071790f3352/library/alloc/src/boxed.rs:1985:9\r\n  48:     0x7f0de7b76d45 - std::sys::unix::thread::Thread::new::thread_start::h054937194df87b6d\r\n                               at /rustc/18bfe5d8a9ca0e226171e98f8f4ef071790f3352/library/std/src/sys/unix/thread.rs:108:17\r\n  49:     0x7f0de791244b - <unknown>\r\n  50:     0x7f0de7995e40 - <unknown>\r\n  51:                0x0 - <unknown>\r\n\r\nerror: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.71.0-nightly (18bfe5d8a 2023-05-14) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: --crate-type bin -C embed-bitcode=no -C debuginfo=2 -C incremental=[REDACTED]\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [typeck] type-checking `fn_select`\r\n#1 [used_trait_imports] finding used_trait_imports `fn_select`\r\n#2 [analysis] running analysis passes on this crate\r\nend of query stack\r\nthere was a panic while trying to force a dep node\r\ntry_mark_green dep node stack:\r\n#0 used_trait_imports(mon[dbae]::fn_select)\r\nend of try_mark_green dep node stack\r\n```\r\n\r\n</p>\r\n</details>\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/111739/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/111739/timeline", "performed_via_github_app": null, "state_reason": null}