{"url": "https://api.github.com/repos/rust-lang/rust/issues/107235", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/107235/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/107235/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/107235/events", "html_url": "https://github.com/rust-lang/rust/issues/107235", "id": 1553547838, "node_id": "I_kwDOAAsO6M5cmUI-", "number": 107235, "title": "`unused_parens` false positive with impl block", "user": {"login": "kadiwa4", "id": 25464294, "node_id": "MDQ6VXNlcjI1NDY0Mjk0", "avatar_url": "https://avatars.githubusercontent.com/u/25464294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kadiwa4", "html_url": "https://github.com/kadiwa4", "followers_url": "https://api.github.com/users/kadiwa4/followers", "following_url": "https://api.github.com/users/kadiwa4/following{/other_user}", "gists_url": "https://api.github.com/users/kadiwa4/gists{/gist_id}", "starred_url": "https://api.github.com/users/kadiwa4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kadiwa4/subscriptions", "organizations_url": "https://api.github.com/users/kadiwa4/orgs", "repos_url": "https://api.github.com/users/kadiwa4/repos", "events_url": "https://api.github.com/users/kadiwa4/events{/privacy}", "received_events_url": "https://api.github.com/users/kadiwa4/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2023-01-23T18:16:08Z", "updated_at": "2023-05-17T13:23:05Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Code\n\n```Rust\nstruct Something;\nimpl (<Something>::Item) {}\n```\n\n\n### Current output\n\n```Shell\nwarning: unnecessary parentheses around type\n --> src/lib.rs:2:6\n  |\n2 | impl (<Something>::Item) {}\n  |      ^                 ^\n  |\n  = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n  |\n2 - impl (<Something>::Item) {}\n2 + impl <Something>::Item {}\n  |\n\nerror[E0391]: cycle detected when computing type of `<impl at src/lib.rs:2:1: 2:24>`\n --> src/lib.rs:2:1\n  |\n2 | impl (<Something>::Item) {}\n  | ^^^^^^^^^^^^^^^^^^^^^^^\n  |\nnote: ...which requires collecting inherent impls for `Something`...\n --> src/lib.rs:1:1\n  |\n1 | struct Something;\n  | ^^^^^^^^^^^^^^^^\n  = note: ...which requires finding all inherent impls defined in crate...\n  = note: ...which again requires computing type of `<impl at src/lib.rs:2:1: 2:24>`, completing the cycle\nnote: cycle used when collecting item types in top-level module\n --> src/lib.rs:1:1\n  |\n1 | / struct Something;\n2 | | impl (<Something>::Item) {}\n  | |___________________________^\n\nerror[E0223]: ambiguous associated type\n --> src/lib.rs:2:7\n  |\n2 | impl (<Something>::Item) {}\n  |       ^^^^^^^^^^^^^^^^^ help: use the fully-qualified path: `<Something as IntoIterator>::Item`\n\nSome errors have detailed explanations: E0223, E0391.\nFor more information about an error, try `rustc --explain E0223`.\nwarning: `playground` (lib) generated 1 warning\nerror: could not compile `playground` due to 2 previous errors; 1 warning emitted\n```\n\n\n### Desired output\n\n```Shell\nSame thing without the unused_parens warning.\n```\n\n\n### Rationale and extra context\n\nWithout the parentheses, it would be equivalent to\n```rust\nimpl<Something> ::Item {}\n```\nNote that `Something` is now a generic type and `::Item` is a standalone item path.\n\n### Other cases\n\n_No response_\n\n### Anything else?\n\nrustc nightly 2023-01-22\n\noff-topic: it's also interesting that the error E0391 (which I find rather unnecessary in this case) isn't emitted on stable 1.66.1.\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"StrayLittlePunk\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/107235/reactions", "total_count": 2, "+1": 1, "-1": 0, "laugh": 1, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/107235/timeline", "performed_via_github_app": null, "state_reason": null}