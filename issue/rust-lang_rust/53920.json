{"url": "https://api.github.com/repos/rust-lang/rust/issues/53920", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/53920/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/53920/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/53920/events", "html_url": "https://github.com/rust-lang/rust/issues/53920", "id": 356407176, "node_id": "MDU6SXNzdWUzNTY0MDcxNzY=", "number": 53920, "title": "ICE: Cannot create local mono-item within future returned as impl trait", "user": {"login": "mathall", "id": 1748675, "node_id": "MDQ6VXNlcjE3NDg2NzU=", "avatar_url": "https://avatars.githubusercontent.com/u/1748675?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mathall", "html_url": "https://github.com/mathall", "followers_url": "https://api.github.com/users/mathall/followers", "following_url": "https://api.github.com/users/mathall/following{/other_user}", "gists_url": "https://api.github.com/users/mathall/gists{/gist_id}", "starred_url": "https://api.github.com/users/mathall/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mathall/subscriptions", "organizations_url": "https://api.github.com/users/mathall/orgs", "repos_url": "https://api.github.com/users/mathall/repos", "events_url": "https://api.github.com/users/mathall/events{/privacy}", "received_events_url": "https://api.github.com/users/mathall/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 631673608, "node_id": "MDU6TGFiZWw2MzE2NzM2MDg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-impl-trait", "name": "A-impl-trait", "color": "f7e101", "default": false, "description": "Area: impl Trait. Universally / existentially quantified anonymous types with static dispatch."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1359848690, "node_id": "MDU6TGFiZWwxMzU5ODQ4Njkw", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-mcve", "name": "E-needs-mcve", "color": "02e10c", "default": false, "description": "Call for participation: This issue needs a Minimal Complete and Verifiable Example"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-09-03T08:34:39Z", "updated_at": "2020-03-10T09:29:09Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "A couple of odd requirements to trigger this one, I'm not sure how to summarize. I've boiled down the case and added comments to the code below, they all mention the circumstances which are necessary to trigger the ICE.\r\n\r\n**src/lib.rs:**\r\n```rust\r\nextern crate futures;\r\nextern crate tokio;\r\n\r\n// a struct in a submodule, with a method\r\nmod sub {\r\n    pub struct S;\r\n\r\n    impl S {\r\n        pub fn meth(&self) {\r\n        }\r\n    }\r\n}\r\n\r\n// return impl trait, cannot be Box<dyn trait>\r\nfn fun() -> impl futures::future::Future<Item=(), Error=()> {\r\n    futures::future::lazy(|| {\r\n        // call the method on an instance of S from within the future\r\n        sub::S.meth();\r\n        Ok(())\r\n    })\r\n}\r\n\r\n// some trait bound parameter\r\npub fn run<P: AsRef<std::path::Path>>(_: P) {\r\n    // pass the returned future to tokio\r\n    tokio::run(fun());\r\n}\r\n```\r\n\r\n**src/main.rs:**\r\n```rust\r\nextern crate mylib;\r\n\r\nfn main() {\r\n    // make a call\r\n    mylib::run(\"\");\r\n}\r\n```\r\n## Meta\r\n\r\n`RUST_BACKTRACE=1 cargo build`:\r\n\r\n```\r\nerror: internal compiler error: librustc_mir/monomorphize/collector.rs:765: Cannot create local mono-item for DefId(10/0:8 ~ mylib[784e]::sub[0]::{{impl}}[0]::meth[0])\r\n\r\nthread 'main' panicked at 'Box<Any>', librustc_errors/lib.rs:554:9\r\nstack backtrace:\r\n   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace\r\n   1: std::sys_common::backtrace::print\r\n   2: std::panicking::default_hook::{{closure}}\r\n   3: std::panicking::default_hook\r\n   4: rustc::util::common::panic_hook\r\n   5: std::panicking::rust_panic_with_hook\r\n   6: std::panicking::begin_panic\r\n   7: rustc_errors::Handler::bug\r\n   8: rustc::session::opt_span_bug_fmt::{{closure}}\r\n   9: rustc::ty::context::tls::with_opt::{{closure}}\r\n  10: rustc::ty::context::tls::with_context_opt\r\n  11: rustc::ty::context::tls::with_opt\r\n  12: rustc::session::opt_span_bug_fmt\r\n  13: rustc::session::bug_fmt\r\n  14: rustc_mir::monomorphize::collector::should_monomorphize_locally\r\n  15: rustc_mir::monomorphize::collector::visit_instance_use\r\n  16: <rustc_mir::monomorphize::collector::MirNeighborCollector<'a, 'tcx> as rustc::mir::visit::Visitor<'tcx>>::visit_terminator_kind\r\n  17: rustc_mir::monomorphize::collector::collect_items_rec\r\n  18: rustc_mir::monomorphize::collector::collect_items_rec\r\n  19: rustc_mir::monomorphize::collector::collect_items_rec\r\n  20: rustc_mir::monomorphize::collector::collect_items_rec\r\n  21: rustc_mir::monomorphize::collector::collect_items_rec\r\n  22: rustc_mir::monomorphize::collector::collect_items_rec\r\n  23: rustc_mir::monomorphize::collector::collect_items_rec\r\n  24: rustc_mir::monomorphize::collector::collect_items_rec\r\n  25: rustc_mir::monomorphize::collector::collect_crate_mono_items::{{closure}}\r\n  26: rustc_mir::monomorphize::collector::collect_crate_mono_items\r\n  27: rustc::util::common::time\r\n  28: rustc_codegen_llvm::base::collect_and_partition_mono_items\r\n  29: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors<'tcx> for rustc::ty::query::queries::collect_and_partition_mono_items<'tcx>>::compute\r\n  30: rustc::ty::context::tls::with_context\r\n  31: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  32: rustc::ty::context::tls::with_related_context\r\n  33: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::force_query_with_job\r\n  34: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::get_query\r\n  35: rustc_codegen_llvm::base::codegen_crate\r\n  36: <rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_utils::codegen_backend::CodegenBackend>::codegen_crate\r\n  37: rustc::util::common::time\r\n  38: rustc_driver::driver::phase_4_codegen\r\n  39: rustc_driver::driver::compile_input::{{closure}}\r\n  40: rustc::ty::context::tls::enter_context\r\n  41: <std::thread::local::LocalKey<T>>::with\r\n  42: rustc::ty::context::TyCtxt::create_and_enter\r\n  43: rustc_driver::driver::compile_input\r\n  44: rustc_driver::run_compiler_with_pool\r\n  45: <scoped_tls::ScopedKey<T>>::set\r\n  46: syntax::with_globals\r\n  47: <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once\r\n  48: __rust_maybe_catch_panic\r\n  49: rustc_driver::run\r\n  50: rustc_driver::main\r\n  51: std::rt::lang_start::{{closure}}\r\n  52: std::panicking::try::do_call\r\n  53: __rust_maybe_catch_panic\r\n  54: std::rt::lang_start_internal\r\n  55: main\r\nquery stack during panic:\r\n#0 [collect_and_partition_mono_items] collect_and_partition_mono_items\r\nend of query stack\r\nerror: aborting due to previous error\r\n\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.28.0 (9634041f0 2018-07-30) running on x86_64-apple-darwin\r\n\r\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nerror: Could not compile `mypack`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n\r\n`rustc --version --verbose`:\r\n\r\n```\r\nrustc 1.28.0 (9634041f0 2018-07-30)\r\nbinary: rustc\r\ncommit-hash: 9634041f0e8c0f3191d2867311276f19d0a42564\r\ncommit-date: 2018-07-30\r\nhost: x86_64-apple-darwin\r\nrelease: 1.28.0\r\nLLVM version: 6.0\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/53920/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/53920/timeline", "performed_via_github_app": null, "state_reason": null}