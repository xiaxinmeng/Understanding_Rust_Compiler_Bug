{"url": "https://api.github.com/repos/rust-lang/rust/issues/49206", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/49206/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/49206/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/49206/events", "html_url": "https://github.com/rust-lang/rust/issues/49206", "id": 306850840, "node_id": "MDU6SXNzdWUzMDY4NTA4NDA=", "number": 49206, "title": "Constants can contain references that are not Sync", "user": {"login": "jDomantas", "id": 8329015, "node_id": "MDQ6VXNlcjgzMjkwMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8329015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jDomantas", "html_url": "https://github.com/jDomantas", "followers_url": "https://api.github.com/users/jDomantas/followers", "following_url": "https://api.github.com/users/jDomantas/following{/other_user}", "gists_url": "https://api.github.com/users/jDomantas/gists{/gist_id}", "starred_url": "https://api.github.com/users/jDomantas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jDomantas/subscriptions", "organizations_url": "https://api.github.com/users/jDomantas/orgs", "repos_url": "https://api.github.com/users/jDomantas/repos", "events_url": "https://api.github.com/users/jDomantas/events{/privacy}", "received_events_url": "https://api.github.com/users/jDomantas/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 60344715, "node_id": "MDU6TGFiZWw2MDM0NDcxNQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-medium", "name": "P-medium", "color": "eb6420", "default": false, "description": "Medium priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 267612997, "node_id": "MDU6TGFiZWwyNjc2MTI5OTc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-unsound", "name": "I-unsound", "color": "e11d21", "default": false, "description": "Issue: A soundness hole (worst kind of bug), see: https://en.wikipedia.org/wiki/Soundness"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 900795185, "node_id": "MDU6TGFiZWw5MDA3OTUxODU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-eval", "name": "A-const-eval", "color": "f7e101", "default": false, "description": "Area: constant evaluation (mir interpretation)"}, {"id": 3921861239, "node_id": "LA_kwDOAAsO6M7pwtp3", "url": "https://api.github.com/repos/rust-lang/rust/labels/S-bug-has-test", "name": "S-bug-has-test", "color": "862eff", "default": false, "description": "A `known-bug` test has been added for this bug."}, {"id": 4172483496, "node_id": "LA_kwDOAAsO6M74swuo", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-types", "name": "T-types", "color": "bfd4f2", "default": false, "description": "Relevant to the types team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 43, "created_at": "2018-03-20T12:48:52Z", "updated_at": "2023-04-25T00:51:36Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "This compiles ([playground](https://play.rust-lang.org/?gist=fa10d9ae0d7d9992a1c1d48862a417ca&version=nightly)):\r\n\r\n```rust\r\n#![feature(optin_builtin_traits)]\r\n\r\n#[derive(Debug)]\r\nstruct Foo {\r\n    value: u32,\r\n}\r\n\r\nimpl !std::marker::Sync for Foo {}\r\n\r\nfn inspect() {\r\n    let foo: &'static Foo = &Foo { value: 1 };\r\n    println!(\r\n        \"I am in thread {:?}, address: {:p}\",\r\n        std::thread::current().id(),\r\n        foo as *const Foo,\r\n    );\r\n}\r\n\r\nfn main() {\r\n    let handle = std::thread::spawn(inspect);\r\n    inspect();\r\n    handle.join().unwrap();\r\n}\r\n```\r\n\r\nAnd prints this (addresses vary, but always the same):\r\n\r\n```\r\nI am in thread ThreadId(0), address: 0x5590409f7adc\r\nI am in thread ThreadId(1), address: 0x5590409f7adc\r\n```\r\n\r\nWhich shows that two threads get the same `'static` reference to non-`Sync` struct.\r\n\r\nThe problem is that promotion to static does not check if the type is `Sync`, while doing it manually does (this does not compile):\r\n\r\n```rust\r\nstatic PROMOTED: Foo = Foo { value: 1 };\r\nlet foo = &PROMOTED;\r\n```\r\n\r\nReading the [RFC](https://github.com/rust-lang/rfcs/blob/master/text/1414-rvalue_static_promotion.md), it seems that the relevant condition is about containing `UnsafeCell`, but does not account for other `!Sync` types, which are also not supposed to be shared across treads.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/49206/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/49206/timeline", "performed_via_github_app": null, "state_reason": null}