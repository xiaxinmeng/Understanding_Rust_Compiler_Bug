{"url": "https://api.github.com/repos/rust-lang/rust/issues/91520", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/91520/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/91520/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/91520/events", "html_url": "https://github.com/rust-lang/rust/issues/91520", "id": 1071185264, "node_id": "I_kwDOAAsO6M4_2P1w", "number": 91520, "title": "where clause for tuple structs recommended at wrong place causing syntax errors", "user": {"login": "coderedart", "id": 24411704, "node_id": "MDQ6VXNlcjI0NDExNzA0", "avatar_url": "https://avatars.githubusercontent.com/u/24411704?v=4", "gravatar_id": "", "url": "https://api.github.com/users/coderedart", "html_url": "https://github.com/coderedart", "followers_url": "https://api.github.com/users/coderedart/followers", "following_url": "https://api.github.com/users/coderedart/following{/other_user}", "gists_url": "https://api.github.com/users/coderedart/gists{/gist_id}", "starred_url": "https://api.github.com/users/coderedart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/coderedart/subscriptions", "organizations_url": "https://api.github.com/users/coderedart/orgs", "repos_url": "https://api.github.com/users/coderedart/repos", "events_url": "https://api.github.com/users/coderedart/events{/privacy}", "received_events_url": "https://api.github.com/users/coderedart/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-12-04T11:14:34Z", "updated_at": "2021-12-07T00:21:03Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "Me Newbie. I had this issue while trying to create a new type to abstract over a HashMap, went to rust discord where i got the fix. then, as i got the suggestion as a quickfix from vscode, i thought it was a Rust analyzer bug, https://github.com/rust-analyzer/rust-analyzer/issues/10923 . but this is a rust bug it seems.\r\n\r\n\r\nReproduce error:\r\n1. add `derive_more` and `halfbrown` as dependencies. //hashbrown will probably work too\r\n2. create a tuple struct  with `halfbrown::HashMap` as its only field. `UOMap<K,V>(halfbrown::HashMap<K,V>)`\r\n3. derive `IntoIterator` using derive_more with the #[derive(IntoIterator)] and vscode gives this error.\r\n![into](https://user-images.githubusercontent.com/24411704/144699145-07e5a356-3ed7-413a-adad-80de88d0d1eb.png)\r\n\r\ncargo check output:\r\n```\r\nerror[E0277]: the trait bound `halfbrown::HashMap<K, V>: IntoIterator` is not satisfied\r\n   --> src/main.rs:7:10\r\n    |\r\n7   | #[derive(IntoIterator)]\r\n    |          ^^^^^^^^^^^^ the trait `IntoIterator` is not implemented for `halfbrown::HashMap<K, V>`\r\n    |\r\nnote: required by a bound in `IntoIterator`\r\n   --> /home/red/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/iter/traits/collect.rs:204:1\r\n    |\r\n204 | / pub trait IntoIterator {\r\n205 | |     /// The type of the elements being iterated over.\r\n206 | |     #[stable(feature = \"rust1\", since = \"1.0.0\")]\r\n207 | |     type Item;\r\n...   |\r\n234 | |     fn into_iter(self) -> Self::IntoIter;\r\n235 | | }\r\n    | |_^ required by this bound in `IntoIterator`\r\n    = note: this error originates in the derive macro `IntoIterator` (in Nightly builds, run with -Z macro-backtrace for more info)\r\nhelp: consider introducing a `where` bound, but there might be an alternative better way to express this requirement\r\n    |\r\n8   | pub struct UOMap<K: std::hash::Hash,V> where halfbrown::HashMap<K, V>: IntoIterator(HashMap<K, V>);\r\n    |                                        ++++++++++++++++++++++++++++++++++++++++++++\r\n\r\nerror[E0277]: the trait bound `halfbrown::HashMap<K, V>: IntoIterator` is not satisfied\r\n --> src/main.rs:7:10\r\n  |\r\n7 | #[derive(IntoIterator)]\r\n  |          ^^^^^^^^^^^^ the trait `IntoIterator` is not implemented for `halfbrown::HashMap<K, V>`\r\n  |\r\n  = note: this error originates in the derive macro `IntoIterator` (in Nightly builds, run with -Z macro-backtrace for more info)\r\nhelp: consider introducing a `where` bound, but there might be an alternative better way to express this requirement\r\n  |\r\n8 | pub struct UOMap<K: std::hash::Hash,V> where halfbrown::HashMap<K, V>: IntoIterator(HashMap<K, V>);\r\n  |                                        ++++++++++++++++++++++++++++++++++++++++++++\r\n\r\nFor more information about this error, try `rustc --explain E0277`.\r\n```\r\n4. the suggestion `8   | pub struct UOMap<K: std::hash::Hash,V> where halfbrown::HashMap<K, V>: IntoIterator(HashMap<K, V>);` with where clause between the struct name and the parenthesis which declare the fields, is wrong and introduces a whole new class of errors\r\n![after](https://user-images.githubusercontent.com/24411704/144699233-bf35cfd8-429c-45b1-8e80-c816d15a2ace.png)\r\ncargo output:\r\n```\r\nerror: proc-macro derive panicked\r\n --> src/main.rs:7:10\r\n  |\r\n7 | #[derive(IntoIterator)]\r\n  |          ^^^^^^^^^^^^\r\n  |\r\n  = help: message: derive(IntoIterator) only works when forwarding to a single field. Try putting #[into_iterator] or #[into_iterator(ignore)] on the fields in the struct\r\n\r\nerror[E0658]: parenthetical notation is only stable when used with `Fn`-family traits\r\n --> src/main.rs:8:72\r\n  |\r\n8 | pub struct UOMap<K: std::hash::Hash,V> where halfbrown::HashMap<K, V>: std::iter::IntoIterator(HashMap<K, V>);\r\n  |                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  |\r\n  = note: see issue #29625 <https://github.com/rust-lang/rust/issues/29625> for more information\r\n\r\nerror[E0107]: this trait takes 0 generic arguments but 1 generic argument was supplied\r\n   --> src/main.rs:8:83\r\n    |\r\n8   | pub struct UOMap<K: std::hash::Hash,V> where halfbrown::HashMap<K, V>: std::iter::IntoIterator(HashMap<K, V>);\r\n    |                                                                                   ^^^^^^^^^^^^--------------- help: remove these parenthetical generics\r\n    |                                                                                   |\r\n    |                                                                                   expected 0 generic arguments\r\n    |\r\nnote: trait defined here, with 0 generic parameters\r\n   --> /home/red/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/iter/traits/collect.rs:204:11\r\n    |\r\n204 | pub trait IntoIterator {\r\n    |           ^^^^^^^^^^^^\r\n\r\nerror[E0220]: associated type `Output` not found for `IntoIterator`\r\n --> src/main.rs:8:83\r\n  |\r\n8 | pub struct UOMap<K: std::hash::Hash,V> where halfbrown::HashMap<K, V>: std::iter::IntoIterator(HashMap<K, V>);\r\n  |                                                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^ associated type `Output` not found\r\n\r\nSome errors have detailed explanations: E0107, E0220, E0658.\r\nFor more information about an error, try `rustc --explain E0107`.\r\n```\r\nThe Fix:\r\nchanging \r\n`pub struct UOMap<K: std::hash::Hash,V> where halfbrown::HashMap<K, V>: std::iter::IntoIterator(HashMap<K, V>);`\r\nto\r\n`pub struct UOMap<K: std::hash::Hash,V>(HashMap<K, V>) where halfbrown::HashMap<K, V>: std::iter::IntoIterator;`\r\nbasically, insert the where clause AFTER the closing parenthesis. \r\nfrom what i was told on the discord, where clause needs to come just before the first `{`, but idk how it will be dealt with in regards to tuple struct. \r\n\r\n**rustc version**: rustc 1.57.0 (f1edd0429 2021-11-29)\r\n\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/91520/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/91520/timeline", "performed_via_github_app": null, "state_reason": null}