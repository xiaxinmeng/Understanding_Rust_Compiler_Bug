{"url": "https://api.github.com/repos/rust-lang/rust/issues/55219", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/55219/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/55219/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/55219/events", "html_url": "https://github.com/rust-lang/rust/issues/55219", "id": 372172194, "node_id": "MDU6SXNzdWUzNzIxNzIxOTQ=", "number": 55219, "title": "ICE when accessing an associated constant of a generic impl", "user": {"login": "jebrosen", "id": 7102588, "node_id": "MDQ6VXNlcjcxMDI1ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/7102588?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jebrosen", "html_url": "https://github.com/jebrosen", "followers_url": "https://api.github.com/users/jebrosen/followers", "following_url": "https://api.github.com/users/jebrosen/following{/other_user}", "gists_url": "https://api.github.com/users/jebrosen/gists{/gist_id}", "starred_url": "https://api.github.com/users/jebrosen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jebrosen/subscriptions", "organizations_url": "https://api.github.com/users/jebrosen/orgs", "repos_url": "https://api.github.com/users/jebrosen/repos", "events_url": "https://api.github.com/users/jebrosen/events{/privacy}", "received_events_url": "https://api.github.com/users/jebrosen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 147085028, "node_id": "MDU6TGFiZWwxNDcwODUwMjg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-nightly", "name": "regression-from-stable-to-nightly", "color": "e4008a", "default": false, "description": "Performance or correctness regression from stable to nightly."}, {"id": 604489711, "node_id": "MDU6TGFiZWw2MDQ0ODk3MTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-NLL", "name": "A-NLL", "color": "f7e101", "default": false, "description": "Area: Non Lexical Lifetimes (NLL)"}, {"id": 867465703, "node_id": "MDU6TGFiZWw4Njc0NjU3MDM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/NLL-complete", "name": "NLL-complete", "color": "f799ea", "default": false, "description": "Working towards the \"valid code works\" goal"}], "state": "closed", "locked": false, "assignee": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/rust-lang/rust/milestones/55", "html_url": "https://github.com/rust-lang/rust/milestone/55", "labels_url": "https://api.github.com/repos/rust-lang/rust/milestones/55/labels", "id": 3463307, "node_id": "MDk6TWlsZXN0b25lMzQ2MzMwNw==", "number": 55, "title": "Rust 2018 Release", "description": "See https://internals.rust-lang.org/t/rust-2018-the-home-stretch/7810", "creator": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 66, "state": "closed", "created_at": "2018-06-29T18:51:49Z", "updated_at": "2018-12-08T10:44:16Z", "due_on": "2018-12-06T08:00:00Z", "closed_at": "2018-12-08T10:44:16Z"}, "comments": 11, "created_at": "2018-10-20T04:37:37Z", "updated_at": "2018-10-25T14:41:10Z", "closed_at": "2018-10-25T14:41:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "(minimized test case provided by @tmandry )\r\n\r\nThis is triggered by accessing an associated constant of a generic impl. Here's a minimized testcase that ICEs on nightly ([playground link](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2015&gist=a9a28dd0428d4cade501cef91b41d1b4)):\r\n\r\n```rust\r\npub struct Foo<T>(T);\r\n\r\nimpl<T> Foo<T> {\r\n    const HASH_LEN: usize = 20;\r\n\r\n    fn stuff() {\r\n        let _ = Self::HASH_LEN;\r\n    }\r\n}\r\n```\r\n\r\nIf a lifetime parameter is used instead of a type parameter, no ICE occurs.\r\n\r\n\r\nOriginal bug report follows\r\n\r\n----\r\n\r\nCompiling mysql_common fails on `rustc 1.31.0-nightly (78ff609d7 2018-10-19)`, but works on the previous nightly `rustc 1.31.0-nightly (e7f5d4805 2018-10-18)`.\r\n\r\n<details>\r\n\r\n```\r\n   Compiling mysql_common v0.10.0 (/home/mee/code/rust_mysql_common)                                                                                                                           \r\nthread 'main' panicked at 'assertion failed: !impl_self_ty.has_infer_types()', librustc_mir/borrow_check/nll/type_check/mod.rs:1033:21                                                         \r\nstack backtrace:                                                                                                                                                                               \r\n   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace                                                                                                                                \r\n             at libstd/sys/unix/backtrace/tracing/gcc_s.rs:49                                                                                                                                  \r\n   1: std::sys_common::backtrace::print                                                                                                                                                        \r\n             at libstd/sys_common/backtrace.rs:71                                                                                                                                              \r\n             at libstd/sys_common/backtrace.rs:59                                                                                                                                              \r\n   2: std::panicking::default_hook::{{closure}}                                                                                                                                                \r\n             at libstd/panicking.rs:211                                                                                                                                                        \r\n   3: std::panicking::default_hook                                                                                                                                                             \r\n             at libstd/panicking.rs:227                                                                                                                                                        \r\n   4: rustc::util::common::panic_hook                                                                                                                                                          \r\n   5: std::panicking::rust_panic_with_hook                                                                                                                                                     \r\n             at libstd/panicking.rs:480                                                                                                                                                        \r\n   6: std::panicking::begin_panic                                                                                                                                                              \r\n   7: rustc_mir::borrow_check::nll::type_check::TypeChecker::relate_type_and_user_type                                                                                                         \r\n   8: <rustc_mir::borrow_check::nll::type_check::TypeVerifier<'a, 'b, 'gcx, 'tcx> as rustc::mir::visit::Visitor<'tcx>>::visit_constant                                                         \r\n   9: <rustc_mir::borrow_check::nll::type_check::TypeVerifier<'a, 'b, 'gcx, 'tcx> as rustc::mir::visit::Visitor<'tcx>>::visit_rvalue                                                           \r\n  10: <rustc_mir::borrow_check::nll::type_check::TypeVerifier<'a, 'b, 'gcx, 'tcx> as rustc::mir::visit::Visitor<'tcx>>::visit_mir                                                              \r\n  11: rustc_mir::borrow_check::nll::type_check::type_check_internal                                                                                                                            \r\n  12: rustc::ty::context::tls::with_related_context                                                                                                                                            \r\n  13: rustc::infer::InferCtxtBuilder::enter                                                                                                                                                    \r\n  14: <rustc_mir::borrow_check::nll::type_check::TypeckMir as rustc_mir::transform::MirPass>::run_pass                                                                                         \r\n  15: rustc_mir::transform::mir_const::{{closure}}                                                                                                                                             \r\n  16: rustc_mir::transform::mir_const                                                                                                                                                          \r\n  17: rustc::ty::query::__query_compute::mir_const                                                                                                                                             \r\n  18: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors<'tcx> for rustc::ty::query::queries::mir_const<'tcx>>::compute                                                          \r\n  19: rustc::ty::context::tls::with_context                                                                                                                                                    \r\n  20: rustc::dep_graph::graph::DepGraph::with_task_impl                                                                                                                                        \r\n  21: rustc::ty::context::tls::with_related_context                                                                                                                                            \r\n  22: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::force_query_with_job                                                                                      \r\n  23: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::get_query                                                                                                 \r\n  24: rustc::ty::query::<impl rustc::ty::context::TyCtxt<'a, 'tcx, 'lcx>>::mir_const                                                                                                           \r\n  25: rustc_mir::transform::mir_validated                                                                                                                                                      \r\n  26: rustc::ty::query::__query_compute::mir_validated                                                                                                                                         \r\n  27: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors<'tcx> for rustc::ty::query::queries::mir_validated<'tcx>>::compute                                                      \r\n  28: rustc::ty::context::tls::with_context                                                                                                                                                    \r\n  29: rustc::dep_graph::graph::DepGraph::with_task_impl                                                                                                                                        \r\n  30: rustc::ty::context::tls::with_related_context                                                                                                                                            \r\n  31: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::force_query_with_job                                                                                      \r\n  32: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::get_query                                                                                                 \r\n  33: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::ensure_query                                                                                              \r\n  34: rustc_borrowck::borrowck::borrowck                                                                                                                                                       \r\n  35: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors<'tcx> for rustc::ty::query::queries::borrowck<'tcx>>::compute                                                           \r\n  36: rustc::ty::context::tls::with_context                                                                                                                                                    \r\n  37: rustc::dep_graph::graph::DepGraph::with_task_impl                                                                                                                                        \r\n  38: rustc::ty::context::tls::with_related_context                                                                                                                                            \r\n  39: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::force_query_with_job                                                                                      \r\n  40: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::get_query                                                                                                 \r\n  41: rustc::ty::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::par_body_owners                                                                                                            \r\n  42: rustc_borrowck::borrowck::check_crate                                                                                                                                                    \r\n  43: rustc::util::common::time                                                                                                                                                                \r\n  44: rustc::ty::context::tls::enter_context                                                                                                                                                   \r\n  45: <std::thread::local::LocalKey<T>>::with                                                                                                                                                  \r\n  46: rustc::ty::context::TyCtxt::create_and_enter                                                                                                                                             \r\n  47: rustc_driver::driver::compile_input                                                                                                                                                      \r\n  48: rustc_driver::run_compiler_with_pool                                                                                                                                                     \r\n  49: rustc_driver::driver::spawn_thread_pool                                                                                                                                                  \r\n  50: rustc_driver::run_compiler                                                                                                                                                               \r\n  51: <scoped_tls::ScopedKey<T>>::set                                                                                                                                                          \r\n  52: <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once                                                                                                          \r\n  53: __rust_maybe_catch_panic                                                                                                                                                                 \r\n             at libpanic_unwind/lib.rs:102                                                                                                                                                     \r\n  54: rustc_driver::run                                                                                                                                                                        \r\n  55: rustc_driver::main                                                                                                                                                                       \r\n  56: std::rt::lang_start::{{closure}}                                                                                                                                                         \r\n  57: std::panicking::try::do_call                                                                                                                                                             \r\n             at libstd/rt.rs:59                                                                                                                                                                \r\n             at libstd/panicking.rs:310                                                                                                                                                        \r\n  58: __rust_maybe_catch_panic                                                                                                                                                                 \r\n             at libpanic_unwind/lib.rs:102                                                                                                                                                     \r\n  59: std::rt::lang_start_internal                                                                                                                                                             \r\n             at libstd/panicking.rs:289                                                                                                                                                        \r\n             at libstd/panic.rs:392                                                                                                                                                            \r\n             at libstd/rt.rs:58                                                                                                                                                                \r\n  60: main                                                                                                                                                                                     \r\n  61: __libc_start_main                                                                                                                                                                        \r\n  62: <unknown>                                                                                                                                                                                \r\nquery stack during panic:                                                                                                                                                                      \r\n#0 [mir_const] processing `<crypto::rsa::Pkcs1OaepPadding<T>>::mgf1`                                                                                                                           \r\n#1 [mir_validated] processing `<crypto::rsa::Pkcs1OaepPadding<T>>::mgf1`                                                                                                                       \r\n#2 [borrowck] processing `<crypto::rsa::Pkcs1OaepPadding<T>>::mgf1`                                                                                                                            \r\nend of query stack                                                                                                                                                                             \r\n                                                                                                                                                                                               \r\nerror: internal compiler error: unexpected panic                                                                                                                                               \r\n                                                                                                                                                                                               \r\nnote: the compiler unexpectedly panicked. this is a bug.                                                                                                                                       \r\n                                                                                                                                                                                               \r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports                                                                              \r\n                                                                                                                                                                                               \r\nnote: rustc 1.31.0-nightly (78ff609d7 2018-10-19) running on x86_64-unknown-linux-gnu                                                                                                          \r\n                                                                                                                                                                                               \r\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib                                                                                                                           \r\n                                                                                                                                                                                               \r\nnote: some of the compiler flags provided by cargo are hidden                                                                                                                                  \r\n                                                                                                                                                                                               \r\nerror: Could not compile `mysql_common`.                                                                                                                                                       \r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n\r\n</details>\r\n\r\n\r\n> thread 'main' panicked at 'assertion failed: !impl_self_ty.has_infer_types()', librustc_mir/borrow_check/nll/type_check/mod.rs:1033:21\r\n\r\nSome additional detail with RUST_LOG=debug before and after the stack trace:\r\n\r\n```\r\n INFO 2018-10-20T04:27:03Z: rustc_mir::build: fn_id DefId(0/0:65 ~ mysql_common[73d2]::crypto[0]::rsa[0]::{{impl}}[2]::mgf1[0]) has attrs Borrowed([Attribute { id: AttrId(52), style: Outer, path: path(doc), tokens: TokenStream { kind: Stream([TokenStream { kind: Tree(Token(src/crypto/rsa.rs:70:5: 70:56, Eq)) }, TokenStream { kind: Tree(Token(src/crypto/rsa.rs:70:5: 70:56, Literal(Str_(/// Mask Generation Function as defined in rfc2437.), None))) }]) }, is_sugared_doc: true, span: src/crypto/rsa.rs:70:5: 70:56 }, Attribute { id: AttrId(53), style: Outer, path: path(doc), tokens: TokenStream { kind: Stream([TokenStream { kind: Tree(Token(src/crypto/rsa.rs:71:5: 71:8, Eq)) }, TokenStream { kind: Tree(Token(src/crypto/rsa.rs:71:5: 71:8, Literal(Str_(///), None))) }]) }, is_sugared_doc: true, span: src/crypto/rsa.rs:71:5: 71:8 }, Attribute { id: AttrId(54), style: Outer, path: path(doc), tokens: TokenStream { kind: Stream([TokenStream { kind: Tree(Token(src/crypto/rsa.rs:72:5: 72:46, Eq)) }, TokenStream { kind: Tree(Token(src/crypto/rsa.rs:72:5: 72:46, Literal(Str_(/// It will use SHA-1 as a hash function.), None))) }]) }, is_sugared_doc: true, span: src/crypto/rsa.rs:72:5: 72:46 }])\r\n INFO 2018-10-20T04:27:03Z: rustc_mir::build: fn_id DefId(0/1:18 ~ mysql_common[73d2]::crypto[0]::rsa[0]::{{impl}}[2]::mgf1[0]::{{closure}}[0]) has attrs Borrowed([])                         \r\nthread 'main' panicked at 'assertion failed: !impl_self_ty.has_infer_types()', librustc_mir/borrow_check/nll/type_check/mod.rs:1033:21\r\n[stack backtrace]\r\n```\r\n\r\nThe problematic code appears to be https://github.com/blackbeam/rust_mysql_common/blob/master/src/crypto/rsa.rs#L88\r\n\r\nPR #55152 looks like a likely cause as it touched the failing `assert!` and nearby code, cc @nikomatsakis \r\n\r\nEDIT: typo in PR number.", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/55219/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/55219/timeline", "performed_via_github_app": null, "state_reason": "completed"}