{"url": "https://api.github.com/repos/rust-lang/rust/issues/61277", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/61277/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/61277/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/61277/events", "html_url": "https://github.com/rust-lang/rust/issues/61277", "id": 449382230, "node_id": "MDU6SXNzdWU0NDkzODIyMzA=", "number": 61277, "title": "Suggest alternative return type for `Option`s and `Result`s", "user": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1183099971, "node_id": "MDU6TGFiZWwxMTgzMDk5OTcx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-suggestion-diagnostics", "name": "A-suggestion-diagnostics", "color": "f7e101", "default": false, "description": "Area: suggestions generated by the compiler applied by cargo fix"}, {"id": 1596122130, "node_id": "MDU6TGFiZWwxNTk2MTIyMTMw", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-papercut", "name": "D-papercut", "color": "c9f7a3", "default": false, "description": "Diagnostic error that needs small tweaks"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-05-28T17:08:17Z", "updated_at": "2019-10-05T05:26:35Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Given the following code:\r\n```rust\r\nfn main() {\r\n    let _ = vec[1].iter().next()?;\r\n    Some(())\r\n}\r\n```\r\nRust reports an error for using `?` and suggests adding `;` after the `Some(())`. A preferrable Option (pun intended) is to suggest changing the return type to `Option<()>` when the body's result type is `Option<_>` and there exists at least one `?` in the body. Similarly, if we have `Result`s, we might want to try to infer a useful return type, e.g.\r\n\r\n```rust\r\nfn main() {\r\n    let _ = std::fs::File::open(\"foo.txt\")?;\r\n    Ok(())\r\n}\r\n```\r\n\r\ncc @estebank (diagnostics)", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/61277/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/61277/timeline", "performed_via_github_app": null, "state_reason": null}